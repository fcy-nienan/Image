<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='4764' time_ms='1571654261365'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.112-b15
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.112-b15) for windows-amd64 JRE (1.8.0_112-b15), built on Sep 22 2016 21:31:56 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit.log -javaagent:D:\Code\IDE\IntelliJ IDEA 2019.2\lib\idea_rt.jar=55410:D:\Code\IDE\IntelliJ IDEA 2019.2\bin -Dfile.encoding=UTF-8 
</args>
<command>
com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.112-b15
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\Code\Language\java\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=D:\Code\Language\java\jre\lib\endorsed
sun.boot.library.path=D:\Code\Language\java\jre\bin
java.library.path=D:\Code\Language\java\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Code\IDE\IntelliJ IDEA 2019.2\jbr\\bin;D:\Code\IDE\IntelliJ IDEA 2019.2\jbr\\bin\server;D:\Code\Language\python\Scripts\;D:\Code\Language\python\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;D:\Code\CodeTool\NetWork\Git\cmd;D:\Code\Language\nodejs\;C:\Users\80771\AppData\Local\Microsoft\WindowsApps;D:\Code\Language\java\bin;C:\Users\80771\AppData\Roaming\npm;D:\Code\Build\apache-maven-3.6.1\bin;D:\Code\Build\gradle-5.6\bin;D:\Code\MiddleWare\mysql-5.7.27-winx64\bin;D:\Code\MiddleWare\hadoop\bin;D:\Code\MiddleWare\hadoop\sbin;C:\Users\80771\AppData\Local\Microsoft\WindowsApps;D:\Code\Language\scala-2.13.0\bin;;.
java.home=D:\Code\Language\java\jre
java.class.path=D:\Code\Language\java\jre\lib\charsets.jar;D:\Code\Language\java\jre\lib\deploy.jar;D:\Code\Language\java\jre\lib\ext\access-bridge-64.jar;D:\Code\Language\java\jre\lib\ext\cldrdata.jar;D:\Code\Language\java\jre\lib\ext\dnsns.jar;D:\Code\Language\java\jre\lib\ext\jaccess.jar;D:\Code\Language\java\jre\lib\ext\jfxrt.jar;D:\Code\Language\java\jre\lib\ext\localedata.jar;D:\Code\Language\java\jre\lib\ext\nashorn.jar;D:\Code\Language\java\jre\lib\ext\sunec.jar;D:\Code\Language\java\jre\lib\ext\sunjce_provider.jar;D:\Code\Language\java\jre\lib\ext\sunmscapi.jar;D:\Code\Language\java\jre\lib\ext\sunpkcs11.jar;D:\Code\Language\java\jre\lib\ext\zipfs.jar;D:\Code\Language\java\jre\lib\javaws.jar;D:\Code\Language\java\jre\lib\jce.jar;D:\Code\Language\java\jre\lib\jfr.jar;D:\Code\Language\java\jre\lib\jfxswt.jar;D:\Code\Language\java\jre\lib\jsse.jar;D:\Code\Language\java\jre\lib\management-agent.jar;D:\Code\Language\java\jre\lib\plugin.jar;D:\Code\Language\java\jre\lib\resources.jar;D:\Code\Language\java\jre\lib\rt.jar;D:\Code\WorkSpace\java\NewWorkSpace\Image\target\classes;D:\Code\Packages\maven\commons-logging\commons-logging\1.0.4\commons-logging-1.0.4.jar;D:\Code\Packages\maven\org\apache\pdfbox\pdfbox\1.8.8\pdfbox-1.8.8.jar;D:\Code\Packages\maven\org\apache\pdfbox\fontbox\1.8.8\fontbox-1.8.8.jar;D:\Code\Packages\maven\org\apache\pdfbox\jempbox\1.8.8\jempbox-1.8.8.jar;D:\Code\Packages\maven\com\itextpdf\itextpdf\5.5.9\itextpdf-5.5.9.jar;D:\Code\Packages\maven\com\itextpdf\itext-asian\5.2.0\itext-asian-5.2.0.jar;D:\Code\Packages\maven\com\itextpdf\tool\xmlworker\5.5.6\xmlworker-5.5.6.jar;D:\Code\Packages\maven\org\projectlombok\lombok\1.14.4\lombok-1.14.4.jar;D:\Code\Packages\maven\mysql\mysql-connector-java\5.1.45\mysql-connector-java-5.1.45.jar;D:\Code\Packages\maven\com\fasterxml\jackson\core\jackson-core\2.9.5\jackson-core-2.9.5.jar;D:\Code\Packages\maven\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;D:\Code\Packages\mave
sun.boot.class.path=D:\Code\Language\java\jre\lib\resources.jar;D:\Code\Language\java\jre\lib\rt.jar;D:\Code\Language\java\jre\lib\sunrsasign.jar;D:\Code\Language\java\jre\lib\jsse.jar;D:\Code\Language\java\jre\lib\jce.jar;D:\Code\Language\java\jre\lib\charsets.jar;D:\Code\Language\java\jre\lib\jfr.jar;D:\Code\Language\java\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='20652'/>
<thread_logfile thread='20652' filename='D:\dir\tmp\system\\hs_c20652_pid4764.log'/>
<writer thread='30136'/>
<thread_logfile thread='30136' filename='D:\dir\tmp\system\\hs_c30136_pid4764.log'/>
<writer thread='19128'/>
<thread_logfile thread='19128' filename='D:\dir\tmp\system\\hs_c19128_pid4764.log'/>
<writer thread='17312'/>
<thread_logfile thread='17312' filename='D:\dir\tmp\system\\hs_c17312_pid4764.log'/>
<writer thread='22236'/>
Loaded disassembler from D:\Code\Language\java\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x0000000002d1f610:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x000000001bc896c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x0000000002d1f780: mov    0x8(%rdx),%r10d
  0x0000000002d1f784: shl    $0x3,%r10
  0x0000000002d1f788: cmp    %r10,%rax
  0x0000000002d1f78b: je     0x0000000002d1f798
  0x0000000002d1f791: jmpq   0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002d1f796: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002d1f798: mov    %eax,-0x6000(%rsp)
  0x0000000002d1f79f: push   %rbp
  0x0000000002d1f7a0: mov    %rsp,%rbp
  0x0000000002d1f7a3: sub    $0x80,%rsp
  0x0000000002d1f7aa: mov    %rsi,0x30(%rsp)
  0x0000000002d1f7af: mov    %rdi,0x28(%rsp)
  0x0000000002d1f7b4: mov    %r9,0x48(%rsp)
  0x0000000002d1f7b9: cmp    $0x0,%r9
  0x0000000002d1f7bd: lea    0x48(%rsp),%rax
  0x0000000002d1f7c2: cmove  0x48(%rsp),%rax
  0x0000000002d1f7c8: mov    %rax,0x20(%rsp)
  0x0000000002d1f7cd: mov    %r8,%r9
  0x0000000002d1f7d0: mov    %rdx,0x38(%rsp)
  0x0000000002d1f7d5: cmp    $0x0,%rdx
  0x0000000002d1f7d9: lea    0x38(%rsp),%r8
  0x0000000002d1f7de: cmove  0x38(%rsp),%r8
  0x0000000002d1f7e4: movabs $0x76b780c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002d1f7ee: mov    %r14,0x68(%rsp)
  0x0000000002d1f7f3: lea    0x68(%rsp),%r14
  0x0000000002d1f7f8: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x0000000002d1f7fb: movabs $0x2d1f7fb,%r10    ;   {section_word}
  0x0000000002d1f805: mov    %r10,0x1e0(%r15)
  0x0000000002d1f80c: mov    %rsp,0x1d8(%r15)
  0x0000000002d1f813: cmpb   $0x0,0x531cbf67(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002d1f81a: je     0x0000000002d1f862
  0x0000000002d1f820: push   %rdx
  0x0000000002d1f821: push   %r8
  0x0000000002d1f823: push   %r9
  0x0000000002d1f825: movabs $0x1bc896b8,%rdx   ;   {metadata({method} {0x000000001bc896c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002d1f82f: mov    %r15,%rcx
  0x0000000002d1f832: sub    $0x20,%rsp
  0x0000000002d1f836: test   $0xf,%esp
  0x0000000002d1f83c: je     0x0000000002d1f854
  0x0000000002d1f842: sub    $0x8,%rsp
  0x0000000002d1f846: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002d1f84b: add    $0x8,%rsp
  0x0000000002d1f84f: jmpq   0x0000000002d1f859
  0x0000000002d1f854: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002d1f859: add    $0x20,%rsp
  0x0000000002d1f85d: pop    %r9
  0x0000000002d1f85f: pop    %r8
  0x0000000002d1f861: pop    %rdx
  0x0000000002d1f862: lea    0x1f8(%r15),%rcx
  0x0000000002d1f869: movl   $0x4,0x270(%r15)
  0x0000000002d1f874: callq  0x00000000556c097a  ;   {runtime_call}
  0x0000000002d1f879: vzeroupper 
  0x0000000002d1f87c: movl   $0x5,0x270(%r15)
  0x0000000002d1f887: mov    %r15d,%ecx
  0x0000000002d1f88a: shr    $0x4,%ecx
  0x0000000002d1f88d: and    $0xffc,%ecx
  0x0000000002d1f893: movabs $0xc10000,%r10     ;   {external_word}
  0x0000000002d1f89d: mov    %ecx,(%r10,%rcx,1)
  0x0000000002d1f8a1: cmpl   $0x0,0x531ccaa5(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x0000000002d1f8ab: jne    0x0000000002d1f8bf
  0x0000000002d1f8b1: cmpl   $0x0,0x30(%r15)
  0x0000000002d1f8b9: je     0x0000000002d1f8d8
  0x0000000002d1f8bf: mov    %r15,%rcx
  0x0000000002d1f8c2: mov    %rsp,%r12
  0x0000000002d1f8c5: sub    $0x20,%rsp
  0x0000000002d1f8c9: and    $0xfffffffffffffff0,%rsp
  0x0000000002d1f8cd: callq  0x00000000559236e0  ;   {runtime_call}
  0x0000000002d1f8d2: mov    %r12,%rsp
  0x0000000002d1f8d5: xor    %r12,%r12
  0x0000000002d1f8d8: movl   $0x8,0x270(%r15)
  0x0000000002d1f8e3: cmpl   $0x1,0x29c(%r15)
  0x0000000002d1f8ee: je     0x0000000002d1f97e
  0x0000000002d1f8f4: cmpb   $0x0,0x531cbe86(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002d1f8fb: je     0x0000000002d1f939
  0x0000000002d1f901: movabs $0x1bc896b8,%rdx   ;   {metadata({method} {0x000000001bc896c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x0000000002d1f90b: mov    %r15,%rcx
  0x0000000002d1f90e: sub    $0x20,%rsp
  0x0000000002d1f912: test   $0xf,%esp
  0x0000000002d1f918: je     0x0000000002d1f930
  0x0000000002d1f91e: sub    $0x8,%rsp
  0x0000000002d1f922: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002d1f927: add    $0x8,%rsp
  0x0000000002d1f92b: jmpq   0x0000000002d1f935
  0x0000000002d1f930: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002d1f935: add    $0x20,%rsp
  0x0000000002d1f939: movabs $0x0,%r10
  0x0000000002d1f943: mov    %r10,0x1d8(%r15)
  0x0000000002d1f94a: movabs $0x0,%r10
  0x0000000002d1f954: mov    %r10,0x1e0(%r15)
  0x0000000002d1f95b: mov    0x38(%r15),%rcx
  0x0000000002d1f95f: movl   $0x0,0x100(%rcx)
  0x0000000002d1f969: leaveq 
  0x0000000002d1f96a: cmpq   $0x0,0x8(%r15)
  0x0000000002d1f972: jne    0x0000000002d1f979
  0x0000000002d1f978: retq   
  0x0000000002d1f979: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002d1f97e: mov    %rsp,%r12
  0x0000000002d1f981: sub    $0x20,%rsp
  0x0000000002d1f985: and    $0xfffffffffffffff0,%rsp
  0x0000000002d1f989: callq  0x000000005590c5a0  ;   {runtime_call}
  0x0000000002d1f98e: mov    %r12,%rsp
  0x0000000002d1f991: xor    %r12,%r12
  0x0000000002d1f994: jmpq   0x0000000002d1f8f4
  0x0000000002d1f999: hlt    
  0x0000000002d1f99a: hlt    
  0x0000000002d1f99b: hlt    
  0x0000000002d1f99c: hlt    
  0x0000000002d1f99d: hlt    
  0x0000000002d1f99e: hlt    
  0x0000000002d1f99f: hlt    
<nmethod compile_id='1' compile_kind='c2n' level='0' entry='0x0000000002d1f780' size='912' address='0x0000000002d1f610' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='15488' iicount='15488' stamp='0.611'/>
<writer thread='31108'/>
<task_queued compile_id='2' method='java/lang/Math min (II)I' bytes='11' count='11777' iicount='11777' stamp='0.611' comment='tiered' hot_count='11777'/>
<task_queued compile_id='3' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='5394' backedge_count='117760' iicount='5394' osr_bci='24' stamp='0.612' comment='tiered' hot_count='117760'/>
<task_queued compile_id='4' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='1492' backedge_count='47928' iicount='1492' stamp='0.612' comment='tiered' hot_count='1492'/>
<task_queued compile_id='5' method='sun/misc/ASCIICaseInsensitiveComparator toLower (I)I' bytes='16' count='28160' iicount='28160' stamp='0.612' comment='tiered' hot_count='28160'/>
<task_queued compile_id='6' method='sun/misc/ASCIICaseInsensitiveComparator isUpper (I)Z' bytes='18' count='28160' iicount='28160' stamp='0.612' comment='tiered' hot_count='28160'/>
<task_queued compile_id='7' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='3840' iicount='3840' level='3' stamp='0.612' comment='tiered' hot_count='3840'/>
<task_queued compile_id='8' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='22400' iicount='22400' stamp='0.612' comment='tiered' hot_count='22400'/>
<task_queued compile_id='9' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='22912' iicount='22912' stamp='0.612' comment='tiered' hot_count='22912'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002db23d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bce4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x0000000002db25a0: mov    0x8(%rdx),%r10d
  0x0000000002db25a4: shl    $0x3,%r10
  0x0000000002db25a8: cmp    %rax,%r10
  0x0000000002db25ab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002db25b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002db25bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002db25c0: mov    %eax,-0x6000(%rsp)
  0x0000000002db25c7: push   %rbp
  0x0000000002db25c8: sub    $0xe0,%rsp
  0x0000000002db25cf: mov    %rdx,0xb8(%rsp)
  0x0000000002db25d7: movabs $0x1be61308,%rsi   ;   {metadata(method data for {method} {0x000000001bce4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db25e1: mov    0xdc(%rsi),%edi
  0x0000000002db25e7: add    $0x8,%edi
  0x0000000002db25ea: mov    %edi,0xdc(%rsi)
  0x0000000002db25f0: movabs $0x1bce4548,%rsi   ;   {metadata({method} {0x000000001bce4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db25fa: and    $0x1ff8,%edi
  0x0000000002db2600: cmp    $0x0,%edi
  0x0000000002db2603: je     0x0000000002db2b43  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000002db2609: cmp    $0x0,%r8
  0x0000000002db260d: movabs $0x1be61308,%rsi   ;   {metadata(method data for {method} {0x000000001bce4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db2617: movabs $0x108,%rdi
  0x0000000002db2621: jne    0x0000000002db2631
  0x0000000002db2627: movabs $0x118,%rdi
  0x0000000002db2631: mov    (%rsi,%rdi,1),%rbx
  0x0000000002db2635: lea    0x1(%rbx),%rbx
  0x0000000002db2639: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002db263d: je     0x0000000002db2b13  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x0000000002db2643: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000002db2b5a
  0x0000000002db2646: mov    %r8,%rsi
  0x0000000002db2649: movabs $0x1be61308,%rdi   ;   {metadata(method data for {method} {0x000000001bce4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db2653: mov    0x8(%rsi),%esi
  0x0000000002db2656: shl    $0x3,%rsi
  0x0000000002db265a: cmp    0x140(%rdi),%rsi
  0x0000000002db2661: jne    0x0000000002db2670
  0x0000000002db2663: addq   $0x1,0x148(%rdi)
  0x0000000002db266b: jmpq   0x0000000002db26d6
  0x0000000002db2670: cmp    0x150(%rdi),%rsi
  0x0000000002db2677: jne    0x0000000002db2686
  0x0000000002db2679: addq   $0x1,0x158(%rdi)
  0x0000000002db2681: jmpq   0x0000000002db26d6
  0x0000000002db2686: cmpq   $0x0,0x140(%rdi)
  0x0000000002db2691: jne    0x0000000002db26aa
  0x0000000002db2693: mov    %rsi,0x140(%rdi)
  0x0000000002db269a: movq   $0x1,0x148(%rdi)
  0x0000000002db26a5: jmpq   0x0000000002db26d6
  0x0000000002db26aa: cmpq   $0x0,0x150(%rdi)
  0x0000000002db26b5: jne    0x0000000002db26ce
  0x0000000002db26b7: mov    %rsi,0x150(%rdi)
  0x0000000002db26be: movq   $0x1,0x158(%rdi)
  0x0000000002db26c9: jmpq   0x0000000002db26d6
  0x0000000002db26ce: addq   $0x1,0x138(%rdi)
  0x0000000002db26d6: movabs $0x1bda0ed0,%rsi   ;   {metadata(method data for {method} {0x000000001bc73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db26e0: mov    0xdc(%rsi),%edi
  0x0000000002db26e6: add    $0x8,%edi
  0x0000000002db26e9: mov    %edi,0xdc(%rsi)
  0x0000000002db26ef: movabs $0x1bc73c18,%rsi   ;   {metadata({method} {0x000000001bc73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db26f9: and    $0x7ffff8,%edi
  0x0000000002db26ff: cmp    $0x0,%edi
  0x0000000002db2702: je     0x0000000002db2b5f
  0x0000000002db2708: mov    0xc(%r8),%esi
  0x0000000002db270c: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000002db2710: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000002db2b76
  0x0000000002db2713: mov    %esi,0xac(%rsp)
  0x0000000002db271a: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x0000000002db271d: add    %esi,%edi
  0x0000000002db271f: mov    %rdx,%rbx
  0x0000000002db2722: movabs $0x1be61308,%rax   ;   {metadata(method data for {method} {0x000000001bce4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db272c: addq   $0x1,0x168(%rax)
  0x0000000002db2734: movabs $0x1be5f340,%rbx   ;   {metadata(method data for {method} {0x000000001bce3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db273e: mov    0xdc(%rbx),%eax
  0x0000000002db2744: add    $0x8,%eax
  0x0000000002db2747: mov    %eax,0xdc(%rbx)
  0x0000000002db274d: movabs $0x1bce3bf0,%rbx   ;   {metadata({method} {0x000000001bce3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db2757: and    $0x7ffff8,%eax
  0x0000000002db275d: cmp    $0x0,%eax
  0x0000000002db2760: je     0x0000000002db2b7b
  0x0000000002db2766: mov    0x10(%rdx),%ebx
  0x0000000002db2769: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db276d: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x0000000002db2b92
  0x0000000002db2770: mov    %rdi,%rcx
  0x0000000002db2773: sub    %eax,%ecx
  0x0000000002db2775: cmp    $0x0,%ecx
  0x0000000002db2778: movabs $0x1be5f340,%rcx   ;   {metadata(method data for {method} {0x000000001bce3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db2782: movabs $0x108,%r9
  0x0000000002db278c: jle    0x0000000002db279c
  0x0000000002db2792: movabs $0x118,%r9
  0x0000000002db279c: mov    (%rcx,%r9,1),%r11
  0x0000000002db27a0: lea    0x1(%r11),%r11
  0x0000000002db27a4: mov    %r11,(%rcx,%r9,1)
  0x0000000002db27a8: jg     0x0000000002db27bb  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db27ae: mov    %r8,0xc0(%rsp)
  0x0000000002db27b6: jmpq   0x0000000002db2a2d  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db27bb: mov    %eax,0xa8(%rsp)
  0x0000000002db27c2: mov    %rbx,0xb0(%rsp)
  0x0000000002db27ca: mov    %r8,0xc0(%rsp)
  0x0000000002db27d2: mov    %rdx,%rcx
  0x0000000002db27d5: movabs $0x1be5f340,%r9    ;   {metadata(method data for {method} {0x000000001bce3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db27df: addq   $0x1,0x128(%r9)
  0x0000000002db27e7: mov    %rdi,%r8
  0x0000000002db27ea: mov    %rdx,%rdi
  0x0000000002db27ed: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db27f0: nop
  0x0000000002db27f1: nop
  0x0000000002db27f2: nop
  0x0000000002db27f3: nop
  0x0000000002db27f4: nop
  0x0000000002db27f5: nop
  0x0000000002db27f6: nop
  0x0000000002db27f7: callq  0x0000000002cf61a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x0000000002db27fc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db27ff: movabs $0x1be5f340,%rbx   ;   {metadata(method data for {method} {0x000000001bce3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db2809: addq   $0x1,0x138(%rbx)
  0x0000000002db2811: movabs $0x1be9c918,%rbx   ;   {metadata(method data for {method} {0x000000001bd87060} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002db281b: mov    0xdc(%rbx),%edx
  0x0000000002db2821: add    $0x8,%edx
  0x0000000002db2824: mov    %edx,0xdc(%rbx)
  0x0000000002db282a: movabs $0x1bd87058,%rbx   ;   {metadata({method} {0x000000001bd87060} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002db2834: and    $0x7ffff8,%edx
  0x0000000002db283a: cmp    $0x0,%edx
  0x0000000002db283d: je     0x0000000002db2b97
  0x0000000002db2843: mov    %r8,%rbx
  0x0000000002db2846: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002db2850: movslq %ebx,%rbx
  0x0000000002db2853: mov    %rbx,%rdi
  0x0000000002db2856: cmp    $0xffffff,%rbx
  0x0000000002db285d: ja     0x0000000002db2bae
  0x0000000002db2863: movabs $0x17,%rsi
  0x0000000002db286d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002db2871: and    $0xfffffffffffffff8,%rsi
  0x0000000002db2875: mov    0x60(%r15),%rax
  0x0000000002db2879: lea    (%rax,%rsi,1),%rsi
  0x0000000002db287d: cmp    0x70(%r15),%rsi
  0x0000000002db2881: ja     0x0000000002db2bae
  0x0000000002db2887: mov    %rsi,0x60(%r15)
  0x0000000002db288b: sub    %rax,%rsi
  0x0000000002db288e: movq   $0x1,(%rax)
  0x0000000002db2895: mov    %rdx,%rcx
  0x0000000002db2898: shr    $0x3,%rcx
  0x0000000002db289c: mov    %ecx,0x8(%rax)
  0x0000000002db289f: mov    %ebx,0xc(%rax)
  0x0000000002db28a2: sub    $0x10,%rsi
  0x0000000002db28a6: je     0x0000000002db28bd
  0x0000000002db28ac: xor    %rbx,%rbx
  0x0000000002db28af: shr    $0x3,%rsi
  0x0000000002db28b3: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002db28b8: dec    %rsi
  0x0000000002db28bb: jne    0x0000000002db28b3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db28bd: movabs $0x1be9c918,%rdx   ;   {metadata(method data for {method} {0x000000001bd87060} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002db28c7: addq   $0x1,0x108(%rdx)
  0x0000000002db28cf: movabs $0x1be5bf60,%rdx   ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002db28d9: mov    0xdc(%rdx),%r9d
  0x0000000002db28e0: add    $0x8,%r9d
  0x0000000002db28e4: mov    %r9d,0xdc(%rdx)
  0x0000000002db28eb: movabs $0x1bd62b00,%rdx   ;   {metadata({method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002db28f5: and    $0x7ffff8,%r9d
  0x0000000002db28fc: cmp    $0x0,%r9d
  0x0000000002db2900: je     0x0000000002db2bb8
  0x0000000002db2906: mov    0xa8(%rsp),%edx
  0x0000000002db290d: cmp    %r8d,%edx
  0x0000000002db2910: movabs $0x1be5bf60,%r9    ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002db291a: movabs $0x108,%rdi
  0x0000000002db2924: jg     0x0000000002db2934
  0x0000000002db292a: movabs $0x118,%rdi
  0x0000000002db2934: mov    (%r9,%rdi,1),%rsi
  0x0000000002db2938: lea    0x1(%rsi),%rsi
  0x0000000002db293c: mov    %rsi,(%r9,%rdi,1)
  0x0000000002db2940: jg     0x0000000002db295f  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db2946: movabs $0x1be5bf60,%r8    ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002db2950: incl   0x128(%r8)
  0x0000000002db2957: mov    %rdx,%rsi
  0x0000000002db295a: jmpq   0x0000000002db2962  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db295f: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db2962: mov    0xb0(%rsp),%rbx
  0x0000000002db296a: movabs $0x1be9c918,%rdx   ;   {metadata(method data for {method} {0x000000001bd87060} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002db2974: addq   $0x1,0x118(%rdx)
  0x0000000002db297c: mov    %rbx,%rdx
  0x0000000002db297f: mov    $0x0,%r8d
  0x0000000002db2985: mov    %rax,%r9
  0x0000000002db2988: mov    $0x0,%edi
  0x0000000002db298d: mov    %rax,0xc8(%rsp)
  0x0000000002db2995: lea    (%r8,%rsi,1),%rcx
  0x0000000002db2999: cmp    0xc(%rdx),%ecx
  0x0000000002db299c: ja     0x0000000002db2bcf
  0x0000000002db29a2: lea    (%rdi,%rsi,1),%rcx
  0x0000000002db29a6: cmp    0xc(%r9),%ecx
  0x0000000002db29aa: ja     0x0000000002db2bcf
  0x0000000002db29b0: test   %esi,%esi
  0x0000000002db29b2: jl     0x0000000002db2bcf
  0x0000000002db29b8: je     0x0000000002db29fc
  0x0000000002db29be: movslq %r8d,%r8
  0x0000000002db29c1: movslq %edi,%rdi
  0x0000000002db29c4: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002db29c9: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002db29ce: mov    %rsi,%r8
  0x0000000002db29d1: sub    $0x20,%rsp
  0x0000000002db29d5: test   $0xf,%esp
  0x0000000002db29db: je     0x0000000002db29f3
  0x0000000002db29e1: sub    $0x8,%rsp
  0x0000000002db29e5: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002db29ea: add    $0x8,%rsp
  0x0000000002db29ee: jmpq   0x0000000002db29f8
  0x0000000002db29f3: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002db29f8: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db29fc: mov    0xc8(%rsp),%rax
  0x0000000002db2a04: mov    0xb8(%rsp),%rdx
  0x0000000002db2a0c: mov    %rax,%r10
  0x0000000002db2a0f: shr    $0x3,%r10
  0x0000000002db2a13: mov    %r10d,0x10(%rdx)
  0x0000000002db2a17: mov    %rdx,%r8
  0x0000000002db2a1a: shr    $0x9,%r8
  0x0000000002db2a1e: movabs $0xea5d000,%r9
  0x0000000002db2a28: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000002db2a2d: mov    0xac(%rsp),%esi
  0x0000000002db2a34: mov    0xc0(%rsp),%rbx
  0x0000000002db2a3c: mov    0x10(%rdx),%edi
  0x0000000002db2a3f: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x0000000002db2a43: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000002db2a46: mov    %rbx,%r8
  0x0000000002db2a49: movabs $0x1be61308,%r9    ;   {metadata(method data for {method} {0x000000001bce4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db2a53: mov    0x8(%r8),%r8d
  0x0000000002db2a57: shl    $0x3,%r8
  0x0000000002db2a5b: cmp    0x180(%r9),%r8
  0x0000000002db2a62: jne    0x0000000002db2a71
  0x0000000002db2a64: addq   $0x1,0x188(%r9)
  0x0000000002db2a6c: jmpq   0x0000000002db2ad7
  0x0000000002db2a71: cmp    0x190(%r9),%r8
  0x0000000002db2a78: jne    0x0000000002db2a87
  0x0000000002db2a7a: addq   $0x1,0x198(%r9)
  0x0000000002db2a82: jmpq   0x0000000002db2ad7
  0x0000000002db2a87: cmpq   $0x0,0x180(%r9)
  0x0000000002db2a92: jne    0x0000000002db2aab
  0x0000000002db2a94: mov    %r8,0x180(%r9)
  0x0000000002db2a9b: movq   $0x1,0x188(%r9)
  0x0000000002db2aa6: jmpq   0x0000000002db2ad7
  0x0000000002db2aab: cmpq   $0x0,0x190(%r9)
  0x0000000002db2ab6: jne    0x0000000002db2acf
  0x0000000002db2ab8: mov    %r8,0x190(%r9)
  0x0000000002db2abf: movq   $0x1,0x198(%r9)
  0x0000000002db2aca: jmpq   0x0000000002db2ad7
  0x0000000002db2acf: addq   $0x1,0x178(%r9)
  0x0000000002db2ad7: mov    $0x0,%r8d
  0x0000000002db2add: mov    %rsi,%r9
  0x0000000002db2ae0: mov    %rax,%rsi
  0x0000000002db2ae3: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000002db2ae6: nop
  0x0000000002db2ae7: callq  0x0000000002cf61a0  ; OopMap{[184]=Oop off=1356}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x0000000002db2aec: mov    0xb8(%rsp),%rdx
  0x0000000002db2af4: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000002db2af7: add    0xac(%rsp),%eax
  0x0000000002db2afe: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000002db2b01: mov    %rdx,%rax
  0x0000000002db2b04: add    $0xe0,%rsp
  0x0000000002db2b0b: pop    %rbp
  0x0000000002db2b0c: test   %eax,-0x21b2a12(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002db2b12: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000002db2b13: mov    %rdx,%rsi
  0x0000000002db2b16: movabs $0x1be61308,%rdi   ;   {metadata(method data for {method} {0x000000001bce4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002db2b20: addq   $0x1,0x128(%rdi)
  0x0000000002db2b28: nop
  0x0000000002db2b29: nop
  0x0000000002db2b2a: nop
  0x0000000002db2b2b: nop
  0x0000000002db2b2c: nop
  0x0000000002db2b2d: nop
  0x0000000002db2b2e: nop
  0x0000000002db2b2f: callq  0x0000000002cf61a0  ; OopMap{off=1428}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000002db2b34: add    $0xe0,%rsp
  0x0000000002db2b3b: pop    %rbp
  0x0000000002db2b3c: test   %eax,-0x21b2a42(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002db2b42: retq   
  0x0000000002db2b43: mov    %rsi,0x8(%rsp)
  0x0000000002db2b48: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002db2b50: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1461}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000002db2b55: jmpq   0x0000000002db2609
  0x0000000002db2b5a: callq  0x0000000002dad680  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1471}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002db2b5f: mov    %rsi,0x8(%rsp)
  0x0000000002db2b64: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002db2b6c: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1489}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002db2b71: jmpq   0x0000000002db2708
  0x0000000002db2b76: callq  0x0000000002dad680  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1499}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000002db2b7b: mov    %rbx,0x8(%rsp)
  0x0000000002db2b80: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002db2b88: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002db2b8d: jmpq   0x0000000002db2766
  0x0000000002db2b92: callq  0x0000000002dad680  ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1527}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002db2b97: mov    %rbx,0x8(%rsp)
  0x0000000002db2b9c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002db2ba4: callq  0x0000000002db1d60  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1545}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002db2ba9: jmpq   0x0000000002db2843
  0x0000000002db2bae: callq  0x0000000002dae700  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1555}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002db2bb3: jmpq   0x0000000002db28bd
  0x0000000002db2bb8: mov    %rdx,0x8(%rsp)
  0x0000000002db2bbd: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002db2bc5: callq  0x0000000002db1d60  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1578}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000002db2bca: jmpq   0x0000000002db2906
  0x0000000002db2bcf: callq  0x0000000002cf6620  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1588}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000002db2bd4: jmpq   0x0000000002db29fc
  0x0000000002db2bd9: nop
  0x0000000002db2bda: nop
  0x0000000002db2bdb: mov    0x2a8(%r15),%rax
  0x0000000002db2be2: movabs $0x0,%r10
  0x0000000002db2bec: mov    %r10,0x2a8(%r15)
  0x0000000002db2bf3: movabs $0x0,%r10
  0x0000000002db2bfd: mov    %r10,0x2b0(%r15)
  0x0000000002db2c04: add    $0xe0,%rsp
  0x0000000002db2c0b: pop    %rbp
  0x0000000002db2c0c: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002db2c11: hlt    
  0x0000000002db2c12: hlt    
  0x0000000002db2c13: hlt    
  0x0000000002db2c14: hlt    
  0x0000000002db2c15: hlt    
  0x0000000002db2c16: hlt    
  0x0000000002db2c17: hlt    
  0x0000000002db2c18: hlt    
  0x0000000002db2c19: hlt    
  0x0000000002db2c1a: hlt    
  0x0000000002db2c1b: hlt    
  0x0000000002db2c1c: hlt    
  0x0000000002db2c1d: hlt    
  0x0000000002db2c1e: hlt    
  0x0000000002db2c1f: hlt    
[Stub Code]
  0x0000000002db2c20: nop                       ;   {no_reloc}
  0x0000000002db2c21: nop
  0x0000000002db2c22: nop
  0x0000000002db2c23: nop
  0x0000000002db2c24: nop
  0x0000000002db2c25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db2c2f: jmpq   0x0000000002db2c2f  ;   {runtime_call}
  0x0000000002db2c34: nop
  0x0000000002db2c35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db2c3f: jmpq   0x0000000002db2c3f  ;   {runtime_call}
  0x0000000002db2c44: nop
  0x0000000002db2c45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db2c4f: jmpq   0x0000000002db2c4f  ;   {runtime_call}
  0x0000000002db2c54: nop
  0x0000000002db2c55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db2c5f: jmpq   0x0000000002db2c5f  ;   {runtime_call}
[Exception Handler]
  0x0000000002db2c64: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002db2c69: mov    %rsp,-0x28(%rsp)
  0x0000000002db2c6e: sub    $0x80,%rsp
  0x0000000002db2c75: mov    %rax,0x78(%rsp)
  0x0000000002db2c7a: mov    %rcx,0x70(%rsp)
  0x0000000002db2c7f: mov    %rdx,0x68(%rsp)
  0x0000000002db2c84: mov    %rbx,0x60(%rsp)
  0x0000000002db2c89: mov    %rbp,0x50(%rsp)
  0x0000000002db2c8e: mov    %rsi,0x48(%rsp)
  0x0000000002db2c93: mov    %rdi,0x40(%rsp)
  0x0000000002db2c98: mov    %r8,0x38(%rsp)
  0x0000000002db2c9d: mov    %r9,0x30(%rsp)
  0x0000000002db2ca2: mov    %r10,0x28(%rsp)
  0x0000000002db2ca7: mov    %r11,0x20(%rsp)
  0x0000000002db2cac: mov    %r12,0x18(%rsp)
  0x0000000002db2cb1: mov    %r13,0x10(%rsp)
  0x0000000002db2cb6: mov    %r14,0x8(%rsp)
  0x0000000002db2cbb: mov    %r15,(%rsp)
  0x0000000002db2cbf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002db2cc9: movabs $0x2db2c69,%rdx    ;   {internal_word}
  0x0000000002db2cd3: mov    %rsp,%r8
  0x0000000002db2cd6: and    $0xfffffffffffffff0,%rsp
  0x0000000002db2cda: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002db2cdf: hlt    
[Deopt Handler Code]
  0x0000000002db2ce0: movabs $0x2db2ce0,%r10    ;   {section_word}
  0x0000000002db2cea: push   %r10
  0x0000000002db2cec: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002db2cf1: hlt    
  0x0000000002db2cf2: hlt    
  0x0000000002db2cf3: hlt    
  0x0000000002db2cf4: hlt    
  0x0000000002db2cf5: hlt    
  0x0000000002db2cf6: hlt    
  0x0000000002db2cf7: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x0000000002db25a0' size='3456' address='0x0000000002db23d0' relocation_offset='288' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='3843' iicount='3843' stamp='0.624'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='22236'/>
<task_queued compile_id='10' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='384' backedge_count='39' iicount='384' level='3' stamp='0.624' comment='tiered' hot_count='384'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002db4190:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;
  # this:     rdx:rdx   = &apos;java/util/Hashtable&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002db4320: mov    0x8(%rdx),%r10d
  0x0000000002db4324: shl    $0x3,%r10
  0x0000000002db4328: cmp    %rax,%r10
  0x0000000002db432b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002db4331: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002db433c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002db4340: mov    %eax,-0x6000(%rsp)
  0x0000000002db4347: push   %rbp
  0x0000000002db4348: sub    $0x60,%rsp
  0x0000000002db434c: mov    %r8,0x28(%rsp)
  0x0000000002db4351: lea    0x40(%rsp),%rsi
  0x0000000002db4356: mov    %rdx,0x8(%rsi)
  0x0000000002db435a: mov    (%rdx),%rax
  0x0000000002db435d: mov    %rax,%rdi
  0x0000000002db4360: and    $0x7,%rdi
  0x0000000002db4364: cmp    $0x5,%rdi
  0x0000000002db4368: jne    0x0000000002db43ef
  0x0000000002db436e: mov    0x8(%rdx),%edi
  0x0000000002db4371: shl    $0x3,%rdi
  0x0000000002db4375: mov    0xa8(%rdi),%rdi
  0x0000000002db437c: or     %r15,%rdi
  0x0000000002db437f: xor    %rax,%rdi
  0x0000000002db4382: and    $0xffffffffffffff87,%rdi
  0x0000000002db4386: je     0x0000000002db4417
  0x0000000002db438c: test   $0x7,%rdi
  0x0000000002db4393: jne    0x0000000002db43dc
  0x0000000002db4395: test   $0x300,%rdi
  0x0000000002db439c: jne    0x0000000002db43bb
  0x0000000002db439e: and    $0x37f,%rax
  0x0000000002db43a5: mov    %rax,%rdi
  0x0000000002db43a8: or     %r15,%rdi
  0x0000000002db43ab: lock cmpxchg %rdi,(%rdx)
  0x0000000002db43b0: jne    0x0000000002db479d
  0x0000000002db43b6: jmpq   0x0000000002db4417
  0x0000000002db43bb: mov    0x8(%rdx),%edi
  0x0000000002db43be: shl    $0x3,%rdi
  0x0000000002db43c2: mov    0xa8(%rdi),%rdi
  0x0000000002db43c9: or     %r15,%rdi
  0x0000000002db43cc: lock cmpxchg %rdi,(%rdx)
  0x0000000002db43d1: jne    0x0000000002db479d
  0x0000000002db43d7: jmpq   0x0000000002db4417
  0x0000000002db43dc: mov    0x8(%rdx),%edi
  0x0000000002db43df: shl    $0x3,%rdi
  0x0000000002db43e3: mov    0xa8(%rdi),%rdi
  0x0000000002db43ea: lock cmpxchg %rdi,(%rdx)
  0x0000000002db43ef: mov    (%rdx),%rax
  0x0000000002db43f2: or     $0x1,%rax
  0x0000000002db43f6: mov    %rax,(%rsi)
  0x0000000002db43f9: lock cmpxchg %rsi,(%rdx)
  0x0000000002db43fe: je     0x0000000002db4417
  0x0000000002db4404: sub    %rsp,%rax
  0x0000000002db4407: and    $0xfffffffffffff007,%rax
  0x0000000002db440e: mov    %rax,(%rsi)
  0x0000000002db4411: jne    0x0000000002db479d
  0x0000000002db4417: movabs $0x1bf32998,%rsi   ;   {metadata(method data for {method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db4421: mov    0xdc(%rsi),%edi
  0x0000000002db4427: add    $0x8,%edi
  0x0000000002db442a: mov    %edi,0xdc(%rsi)
  0x0000000002db4430: movabs $0x1bca7c88,%rsi   ;   {metadata({method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db443a: and    $0x1ff8,%edi
  0x0000000002db4440: cmp    $0x0,%edi
  0x0000000002db4443: je     0x0000000002db47b0  ;*aload_0
                                                ; - java.util.Hashtable::get@0 (line 362)

  0x0000000002db4449: mov    0x1c(%rdx),%esi
  0x0000000002db444c: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.Hashtable::get@1 (line 362)

  0x0000000002db4450: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000000002db47c7
  0x0000000002db4453: mov    %r8,%rdx
  0x0000000002db4456: movabs $0x1bf32998,%rdi   ;   {metadata(method data for {method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db4460: mov    0x8(%rdx),%edx
  0x0000000002db4463: shl    $0x3,%rdx
  0x0000000002db4467: cmp    0x110(%rdi),%rdx
  0x0000000002db446e: jne    0x0000000002db447d
  0x0000000002db4470: addq   $0x1,0x118(%rdi)
  0x0000000002db4478: jmpq   0x0000000002db44e3
  0x0000000002db447d: cmp    0x120(%rdi),%rdx
  0x0000000002db4484: jne    0x0000000002db4493
  0x0000000002db4486: addq   $0x1,0x128(%rdi)
  0x0000000002db448e: jmpq   0x0000000002db44e3
  0x0000000002db4493: cmpq   $0x0,0x110(%rdi)
  0x0000000002db449e: jne    0x0000000002db44b7
  0x0000000002db44a0: mov    %rdx,0x110(%rdi)
  0x0000000002db44a7: movq   $0x1,0x118(%rdi)
  0x0000000002db44b2: jmpq   0x0000000002db44e3
  0x0000000002db44b7: cmpq   $0x0,0x120(%rdi)
  0x0000000002db44c2: jne    0x0000000002db44db
  0x0000000002db44c4: mov    %rdx,0x120(%rdi)
  0x0000000002db44cb: movq   $0x1,0x128(%rdi)
  0x0000000002db44d6: jmpq   0x0000000002db44e3
  0x0000000002db44db: addq   $0x1,0x108(%rdi)
  0x0000000002db44e3: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 363)

  0x0000000002db44e6: mov    %rsi,0x20(%rsp)
  0x0000000002db44eb: nop
  0x0000000002db44ec: nop
  0x0000000002db44ed: movabs $0xffffffffffffffff,%rax
  0x0000000002db44f7: callq  0x0000000002cf63e0  ; OopMap{[40]=Oop [32]=Oop [72]=Oop off=476}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 363)
                                                ;   {virtual_call}
  0x0000000002db44fc: mov    %eax,0x38(%rsp)
  0x0000000002db4500: mov    0x20(%rsp),%rsi
  0x0000000002db4505: mov    0xc(%rsi),%r8d     ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 364)
                                                ; implicit exception: dispatches to 0x0000000002db47cc
  0x0000000002db4509: mov    %rax,%rdx
  0x0000000002db450c: and    $0x7fffffff,%edx
  0x0000000002db4512: mov    %rax,%rdi
  0x0000000002db4515: mov    %rdx,%rax
  0x0000000002db4518: cmp    $0x80000000,%eax
  0x0000000002db451e: jne    0x0000000002db4530
  0x0000000002db4524: xor    %edx,%edx
  0x0000000002db4526: cmp    $0xffffffff,%r8d
  0x0000000002db452a: je     0x0000000002db4534
  0x0000000002db4530: cltd   
  0x0000000002db4531: idiv   %r8d               ;*irem
                                                ; - java.util.Hashtable::get@16 (line 364)
                                                ; implicit exception: dispatches to 0x0000000002db47d1
  0x0000000002db4534: movslq %edx,%rdx
  0x0000000002db4537: mov    0x10(%rsi,%rdx,4),%r8d
  0x0000000002db453c: shl    $0x3,%r8           ;*aaload
                                                ; - java.util.Hashtable::get@22 (line 365)

  0x0000000002db4540: mov    0x28(%rsp),%rsi
  0x0000000002db4545: cmp    $0x0,%r8
  0x0000000002db4549: movabs $0x1bf32998,%rdx   ;   {metadata(method data for {method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db4553: movabs $0x138,%rbx
  0x0000000002db455d: je     0x0000000002db456d
  0x0000000002db4563: movabs $0x148,%rbx
  0x0000000002db456d: mov    (%rdx,%rbx,1),%rax
  0x0000000002db4571: lea    0x1(%rax),%rax
  0x0000000002db4575: mov    %rax,(%rdx,%rbx,1)
  0x0000000002db4579: je     0x0000000002db4756  ;*ifnull
                                                ; - java.util.Hashtable::get@27 (line 365)

  0x0000000002db457f: mov    0xc(%r8),%edx      ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 366)
                                                ; implicit exception: dispatches to 0x0000000002db47d6
  0x0000000002db4583: cmp    %edi,%edx
  0x0000000002db4585: movabs $0x1bf32998,%rdx   ;   {metadata(method data for {method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db458f: movabs $0x158,%rbx
  0x0000000002db4599: jne    0x0000000002db45a9
  0x0000000002db459f: movabs $0x168,%rbx
  0x0000000002db45a9: mov    (%rdx,%rbx,1),%rax
  0x0000000002db45ad: lea    0x1(%rax),%rax
  0x0000000002db45b1: mov    %rax,(%rdx,%rbx,1)
  0x0000000002db45b5: jne    0x0000000002db46b2  ;*if_icmpne
                                                ; - java.util.Hashtable::get@36 (line 366)

  0x0000000002db45bb: mov    0x10(%r8),%edx
  0x0000000002db45bf: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.Hashtable::get@41 (line 366)

  0x0000000002db45c3: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002db47db
  0x0000000002db45c6: mov    %rdx,%rdi
  0x0000000002db45c9: movabs $0x1bf32998,%rbx   ;   {metadata(method data for {method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db45d3: mov    0x8(%rdi),%edi
  0x0000000002db45d6: shl    $0x3,%rdi
  0x0000000002db45da: cmp    0x180(%rbx),%rdi
  0x0000000002db45e1: jne    0x0000000002db45f0
  0x0000000002db45e3: addq   $0x1,0x188(%rbx)
  0x0000000002db45eb: jmpq   0x0000000002db4656
  0x0000000002db45f0: cmp    0x190(%rbx),%rdi
  0x0000000002db45f7: jne    0x0000000002db4606
  0x0000000002db45f9: addq   $0x1,0x198(%rbx)
  0x0000000002db4601: jmpq   0x0000000002db4656
  0x0000000002db4606: cmpq   $0x0,0x180(%rbx)
  0x0000000002db4611: jne    0x0000000002db462a
  0x0000000002db4613: mov    %rdi,0x180(%rbx)
  0x0000000002db461a: movq   $0x1,0x188(%rbx)
  0x0000000002db4625: jmpq   0x0000000002db4656
  0x0000000002db462a: cmpq   $0x0,0x190(%rbx)
  0x0000000002db4635: jne    0x0000000002db464e
  0x0000000002db4637: mov    %rdi,0x190(%rbx)
  0x0000000002db463e: movq   $0x1,0x198(%rbx)
  0x0000000002db4649: jmpq   0x0000000002db4656
  0x0000000002db464e: addq   $0x1,0x178(%rbx)
  0x0000000002db4656: mov    %r8,0x30(%rsp)
  0x0000000002db465b: mov    %rsi,%r8           ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 366)

  0x0000000002db465e: nop
  0x0000000002db465f: nop
  0x0000000002db4660: nop
  0x0000000002db4661: nop
  0x0000000002db4662: nop
  0x0000000002db4663: nop
  0x0000000002db4664: nop
  0x0000000002db4665: movabs $0xffffffffffffffff,%rax
  0x0000000002db466f: callq  0x0000000002cf63e0  ; OopMap{[40]=Oop [48]=Oop [72]=Oop off=852}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 366)
                                                ;   {virtual_call}
  0x0000000002db4674: cmp    $0x0,%eax
  0x0000000002db4677: movabs $0x1bf32998,%rax   ;   {metadata(method data for {method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db4681: movabs $0x1a8,%rsi
  0x0000000002db468b: je     0x0000000002db469b
  0x0000000002db4691: movabs $0x1b8,%rsi
  0x0000000002db469b: mov    (%rax,%rsi,1),%rdi
  0x0000000002db469f: lea    0x1(%rdi),%rdi
  0x0000000002db46a3: mov    %rdi,(%rax,%rsi,1)
  0x0000000002db46a7: mov    0x30(%rsp),%r8
  0x0000000002db46ac: jne    0x0000000002db470e  ;*ifeq
                                                ; - java.util.Hashtable::get@48 (line 366)

  0x0000000002db46b2: mov    0x18(%r8),%eax
  0x0000000002db46b6: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.Hashtable::get@59 (line 365)

  0x0000000002db46ba: movabs $0x1bf32998,%rsi   ;   {metadata(method data for {method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db46c4: mov    0xe0(%rsi),%edi
  0x0000000002db46ca: add    $0x8,%edi
  0x0000000002db46cd: mov    %edi,0xe0(%rsi)
  0x0000000002db46d3: movabs $0x1bca7c88,%rsi   ;   {metadata({method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db46dd: and    $0xfff8,%edi
  0x0000000002db46e3: cmp    $0x0,%edi
  0x0000000002db46e6: je     0x0000000002db47e0  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=972}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 365)

  0x0000000002db46ec: test   %eax,-0x21b45f2(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002db46f2: movabs $0x1bf32998,%rsi   ;   {metadata(method data for {method} {0x000000001bca7c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002db46fc: incl   0x1c8(%rsi)
  0x0000000002db4702: mov    %rax,%r8
  0x0000000002db4705: mov    0x38(%rsp),%edi
  0x0000000002db4709: jmpq   0x0000000002db4540  ;*goto
                                                ; - java.util.Hashtable::get@64 (line 365)

  0x0000000002db470e: mov    0x14(%r8),%esi
  0x0000000002db4712: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.util.Hashtable::get@53 (line 367)

  0x0000000002db4716: lea    0x40(%rsp),%rax
  0x0000000002db471b: mov    0x8(%rax),%rbx
  0x0000000002db471f: mov    (%rbx),%rdi
  0x0000000002db4722: and    $0x7,%rdi
  0x0000000002db4726: cmp    $0x5,%rdi
  0x0000000002db472a: je     0x0000000002db4747
  0x0000000002db4730: mov    (%rax),%rdi
  0x0000000002db4733: test   %rdi,%rdi
  0x0000000002db4736: je     0x0000000002db4747
  0x0000000002db473c: lock cmpxchg %rdi,(%rbx)
  0x0000000002db4741: jne    0x0000000002db47f7
  0x0000000002db4747: mov    %rsi,%rax
  0x0000000002db474a: add    $0x60,%rsp
  0x0000000002db474e: pop    %rbp
  0x0000000002db474f: test   %eax,-0x21b4655(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002db4755: retq                      ;*areturn
                                                ; - java.util.Hashtable::get@56 (line 367)

  0x0000000002db4756: lea    0x40(%rsp),%rax
  0x0000000002db475b: mov    0x8(%rax),%rdi
  0x0000000002db475f: mov    (%rdi),%rsi
  0x0000000002db4762: and    $0x7,%rsi
  0x0000000002db4766: cmp    $0x5,%rsi
  0x0000000002db476a: je     0x0000000002db4787
  0x0000000002db4770: mov    (%rax),%rsi
  0x0000000002db4773: test   %rsi,%rsi
  0x0000000002db4776: je     0x0000000002db4787
  0x0000000002db477c: lock cmpxchg %rsi,(%rdi)
  0x0000000002db4781: jne    0x0000000002db480a  ;*areturn
                                                ; - java.util.Hashtable::get@68 (line 370)

  0x0000000002db4787: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002db4791: add    $0x60,%rsp
  0x0000000002db4795: pop    %rbp
  0x0000000002db4796: test   %eax,-0x21b469c(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002db479c: retq   
  0x0000000002db479d: mov    %rdx,0x8(%rsp)
  0x0000000002db47a2: mov    %rsi,(%rsp)
  0x0000000002db47a6: callq  0x0000000002db0060  ; OopMap{rdx=Oop r8=Oop [40]=Oop [72]=Oop off=1163}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 362)
                                                ;   {runtime_call}
  0x0000000002db47ab: jmpq   0x0000000002db4417
  0x0000000002db47b0: mov    %rsi,0x8(%rsp)
  0x0000000002db47b5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002db47bd: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop [40]=Oop [72]=Oop off=1186}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 362)
                                                ;   {runtime_call}
  0x0000000002db47c2: jmpq   0x0000000002db4449
  0x0000000002db47c7: callq  0x0000000002dad680  ; OopMap{r8=Oop [40]=Oop rsi=Oop [72]=Oop off=1196}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 363)
                                                ;   {runtime_call}
  0x0000000002db47cc: callq  0x0000000002dad680  ; OopMap{[40]=Oop rsi=Oop [72]=Oop off=1201}
                                                ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 364)
                                                ;   {runtime_call}
  0x0000000002db47d1: callq  0x0000000002dad440  ; OopMap{[40]=Oop rsi=Oop [72]=Oop off=1206}
                                                ;*irem
                                                ; - java.util.Hashtable::get@16 (line 364)
                                                ;   {runtime_call}
  0x0000000002db47d6: callq  0x0000000002dad680  ; OopMap{r8=Oop rsi=Oop [40]=Oop [72]=Oop off=1211}
                                                ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 366)
                                                ;   {runtime_call}
  0x0000000002db47db: callq  0x0000000002dad680  ; OopMap{r8=Oop rsi=Oop [40]=Oop rdx=Oop [72]=Oop off=1216}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 366)
                                                ;   {runtime_call}
  0x0000000002db47e0: mov    %rsi,0x8(%rsp)
  0x0000000002db47e5: movq   $0x40,(%rsp)
  0x0000000002db47ed: callq  0x0000000002db1d60  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=1234}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 365)
                                                ;   {runtime_call}
  0x0000000002db47f2: jmpq   0x0000000002db46ec
  0x0000000002db47f7: lea    0x40(%rsp),%rax
  0x0000000002db47fc: mov    %rax,(%rsp)
  0x0000000002db4800: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002db4805: jmpq   0x0000000002db4747
  0x0000000002db480a: lea    0x40(%rsp),%rax
  0x0000000002db480f: mov    %rax,(%rsp)
  0x0000000002db4813: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002db4818: jmpq   0x0000000002db4787
  0x0000000002db481d: nop
  0x0000000002db481e: nop
  0x0000000002db481f: mov    0x2a8(%r15),%rax
  0x0000000002db4826: movabs $0x0,%r10
  0x0000000002db4830: mov    %r10,0x2a8(%r15)
  0x0000000002db4837: movabs $0x0,%r10
  0x0000000002db4841: mov    %r10,0x2b0(%r15)
  0x0000000002db4848: mov    %rax,%rbx
  0x0000000002db484b: lea    0x40(%rsp),%rax
  0x0000000002db4850: mov    0x8(%rax),%rsi
  0x0000000002db4854: mov    (%rsi),%rdi
  0x0000000002db4857: and    $0x7,%rdi
  0x0000000002db485b: cmp    $0x5,%rdi
  0x0000000002db485f: je     0x0000000002db487c
  0x0000000002db4865: mov    (%rax),%rdi
  0x0000000002db4868: test   %rdi,%rdi
  0x0000000002db486b: je     0x0000000002db487c
  0x0000000002db4871: lock cmpxchg %rdi,(%rsi)
  0x0000000002db4876: jne    0x0000000002db4889
  0x0000000002db487c: mov    %rbx,%rax
  0x0000000002db487f: add    $0x60,%rsp
  0x0000000002db4883: pop    %rbp
  0x0000000002db4884: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002db4889: lea    0x40(%rsp),%rax
  0x0000000002db488e: mov    %rax,(%rsp)
  0x0000000002db4892: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002db4897: jmp    0x0000000002db487c
  0x0000000002db4899: hlt    
  0x0000000002db489a: hlt    
  0x0000000002db489b: hlt    
  0x0000000002db489c: hlt    
  0x0000000002db489d: hlt    
  0x0000000002db489e: hlt    
  0x0000000002db489f: hlt    
[Stub Code]
  0x0000000002db48a0: nop                       ;   {no_reloc}
  0x0000000002db48a1: nop
  0x0000000002db48a2: nop
  0x0000000002db48a3: nop
  0x0000000002db48a4: nop
  0x0000000002db48a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db48af: jmpq   0x0000000002db48af  ;   {runtime_call}
  0x0000000002db48b4: nop
  0x0000000002db48b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db48bf: jmpq   0x0000000002db48bf  ;   {runtime_call}
[Exception Handler]
  0x0000000002db48c4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002db48c9: mov    %rsp,-0x28(%rsp)
  0x0000000002db48ce: sub    $0x80,%rsp
  0x0000000002db48d5: mov    %rax,0x78(%rsp)
  0x0000000002db48da: mov    %rcx,0x70(%rsp)
  0x0000000002db48df: mov    %rdx,0x68(%rsp)
  0x0000000002db48e4: mov    %rbx,0x60(%rsp)
  0x0000000002db48e9: mov    %rbp,0x50(%rsp)
  0x0000000002db48ee: mov    %rsi,0x48(%rsp)
  0x0000000002db48f3: mov    %rdi,0x40(%rsp)
  0x0000000002db48f8: mov    %r8,0x38(%rsp)
  0x0000000002db48fd: mov    %r9,0x30(%rsp)
  0x0000000002db4902: mov    %r10,0x28(%rsp)
  0x0000000002db4907: mov    %r11,0x20(%rsp)
  0x0000000002db490c: mov    %r12,0x18(%rsp)
  0x0000000002db4911: mov    %r13,0x10(%rsp)
  0x0000000002db4916: mov    %r14,0x8(%rsp)
  0x0000000002db491b: mov    %r15,(%rsp)
  0x0000000002db491f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002db4929: movabs $0x2db48c9,%rdx    ;   {internal_word}
  0x0000000002db4933: mov    %rsp,%r8
  0x0000000002db4936: and    $0xfffffffffffffff0,%rsp
  0x0000000002db493a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002db493f: hlt    
[Deopt Handler Code]
  0x0000000002db4940: movabs $0x2db4940,%r10    ;   {section_word}
  0x0000000002db494a: push   %r10
  0x0000000002db494c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002db4951: hlt    
  0x0000000002db4952: hlt    
  0x0000000002db4953: hlt    
  0x0000000002db4954: hlt    
  0x0000000002db4955: hlt    
  0x0000000002db4956: hlt    
  0x0000000002db4957: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x0000000002db4320' size='2784' address='0x0000000002db4190' relocation_offset='288' insts_offset='400' stub_offset='1808' scopes_data_offset='2000' scopes_pcs_offset='2248' dependencies_offset='2728' nul_chk_table_offset='2736' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='398' backedge_count='41' iicount='398' stamp='0.632'/>
<writer thread='31108'/>
<task_queued compile_id='11' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='2560' iicount='2560' level='3' stamp='0.632' comment='tiered' hot_count='2560'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002db3e50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc89508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002db3fa0: mov    %eax,-0x6000(%rsp)
  0x0000000002db3fa7: push   %rbp
  0x0000000002db3fa8: sub    $0x30,%rsp
  0x0000000002db3fac: movabs $0x1be60eb0,%rax   ;   {metadata(method data for {method} {0x000000001bc89508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000002db3fb6: mov    0xdc(%rax),%esi
  0x0000000002db3fbc: add    $0x8,%esi
  0x0000000002db3fbf: mov    %esi,0xdc(%rax)
  0x0000000002db3fc5: movabs $0x1bc89500,%rax   ;   {metadata({method} {0x000000001bc89508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000002db3fcf: and    $0x1ff8,%esi
  0x0000000002db3fd5: cmp    $0x0,%esi
  0x0000000002db3fd8: je     0x0000000002db3ffb
  0x0000000002db3fde: movabs $0x76b780c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002db3fe8: mov    0x74(%rax),%eax
  0x0000000002db3feb: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x0000000002db3fef: add    $0x30,%rsp
  0x0000000002db3ff3: pop    %rbp
  0x0000000002db3ff4: test   %eax,-0x21b3efa(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002db3ffa: retq   
  0x0000000002db3ffb: mov    %rax,0x8(%rsp)
  0x0000000002db4000: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002db4008: callq  0x0000000002db1d60  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x0000000002db400d: jmp    0x0000000002db3fde
  0x0000000002db400f: nop
  0x0000000002db4010: nop
  0x0000000002db4011: mov    0x2a8(%r15),%rax
  0x0000000002db4018: movabs $0x0,%r10
  0x0000000002db4022: mov    %r10,0x2a8(%r15)
  0x0000000002db4029: movabs $0x0,%r10
  0x0000000002db4033: mov    %r10,0x2b0(%r15)
  0x0000000002db403a: add    $0x30,%rsp
  0x0000000002db403e: pop    %rbp
  0x0000000002db403f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002db4044: hlt    
  0x0000000002db4045: hlt    
  0x0000000002db4046: hlt    
  0x0000000002db4047: hlt    
  0x0000000002db4048: hlt    
  0x0000000002db4049: hlt    
  0x0000000002db404a: hlt    
  0x0000000002db404b: hlt    
  0x0000000002db404c: hlt    
  0x0000000002db404d: hlt    
  0x0000000002db404e: hlt    
  0x0000000002db404f: hlt    
  0x0000000002db4050: hlt    
  0x0000000002db4051: hlt    
  0x0000000002db4052: hlt    
  0x0000000002db4053: hlt    
  0x0000000002db4054: hlt    
  0x0000000002db4055: hlt    
  0x0000000002db4056: hlt    
  0x0000000002db4057: hlt    
  0x0000000002db4058: hlt    
  0x0000000002db4059: hlt    
  0x0000000002db405a: hlt    
  0x0000000002db405b: hlt    
  0x0000000002db405c: hlt    
  0x0000000002db405d: hlt    
  0x0000000002db405e: hlt    
  0x0000000002db405f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002db4060: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002db4065: mov    %rsp,-0x28(%rsp)
  0x0000000002db406a: sub    $0x80,%rsp
  0x0000000002db4071: mov    %rax,0x78(%rsp)
  0x0000000002db4076: mov    %rcx,0x70(%rsp)
  0x0000000002db407b: mov    %rdx,0x68(%rsp)
  0x0000000002db4080: mov    %rbx,0x60(%rsp)
  0x0000000002db4085: mov    %rbp,0x50(%rsp)
  0x0000000002db408a: mov    %rsi,0x48(%rsp)
  0x0000000002db408f: mov    %rdi,0x40(%rsp)
  0x0000000002db4094: mov    %r8,0x38(%rsp)
  0x0000000002db4099: mov    %r9,0x30(%rsp)
  0x0000000002db409e: mov    %r10,0x28(%rsp)
  0x0000000002db40a3: mov    %r11,0x20(%rsp)
  0x0000000002db40a8: mov    %r12,0x18(%rsp)
  0x0000000002db40ad: mov    %r13,0x10(%rsp)
  0x0000000002db40b2: mov    %r14,0x8(%rsp)
  0x0000000002db40b7: mov    %r15,(%rsp)
  0x0000000002db40bb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002db40c5: movabs $0x2db4065,%rdx    ;   {internal_word}
  0x0000000002db40cf: mov    %rsp,%r8
  0x0000000002db40d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002db40d6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002db40db: hlt    
[Deopt Handler Code]
  0x0000000002db40dc: movabs $0x2db40dc,%r10    ;   {section_word}
  0x0000000002db40e6: push   %r10
  0x0000000002db40e8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002db40ed: hlt    
  0x0000000002db40ee: hlt    
  0x0000000002db40ef: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x0000000002db3fa0' size='768' address='0x0000000002db3e50' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='2561' iicount='2561' stamp='0.634'/>
<writer thread='31108'/>
<task_queued compile_id='12' method='java/lang/String charAt (I)C' bytes='29' count='243712' iicount='243712' stamp='0.634' comment='tiered' hot_count='243712'/>
<writer thread='22236'/>
<task_queued compile_id='13' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='32384' iicount='32384' stamp='0.634' comment='tiered' hot_count='32384'/>
<task_queued compile_id='14' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='32384' iicount='32384' stamp='0.634' comment='tiered' hot_count='32384'/>
<task_queued compile_id='15' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='3456' iicount='3456' level='3' stamp='0.635' comment='tiered' hot_count='3456'/>
<task_queued compile_id='16' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='3609' backedge_count='225280' iicount='3609' osr_bci='37' stamp='0.635' comment='tiered' hot_count='225280'/>
<task_queued compile_id='17' method='java/lang/String indexOf (I)I' bytes='7' count='3584' iicount='3584' level='3' stamp='0.635' comment='tiered' hot_count='3584'/>
<task_queued compile_id='18' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1408' iicount='1408' level='3' stamp='0.635' comment='tiered' hot_count='1408'/>
<task_queued compile_id='19' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1408' backedge_count='138' iicount='1408' level='3' stamp='0.635' comment='tiered' hot_count='1408'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002db5d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002db5f20: mov    0x8(%rdx),%r10d
  0x0000000002db5f24: shl    $0x3,%r10
  0x0000000002db5f28: cmp    %rax,%r10
  0x0000000002db5f2b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002db5f31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002db5f3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002db5f40: mov    %eax,-0x6000(%rsp)
  0x0000000002db5f47: push   %rbp
  0x0000000002db5f48: sub    $0x60,%rsp
  0x0000000002db5f4c: movabs $0x1be5c568,%rsi   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db5f56: mov    0xdc(%rsi),%ebx
  0x0000000002db5f5c: add    $0x8,%ebx
  0x0000000002db5f5f: mov    %ebx,0xdc(%rsi)
  0x0000000002db5f65: movabs $0x1bc73158,%rsi   ;   {metadata({method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db5f6f: and    $0x1ff8,%ebx
  0x0000000002db5f75: cmp    $0x0,%ebx
  0x0000000002db5f78: je     0x0000000002db624e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x0000000002db5f7e: mov    %rdx,%rsi
  0x0000000002db5f81: movabs $0x1be5c568,%rbx   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db5f8b: addq   $0x1,0x108(%rbx)
  0x0000000002db5f93: movabs $0x1bda1c10,%rsi   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002db5f9d: mov    0xdc(%rsi),%ebx
  0x0000000002db5fa3: add    $0x8,%ebx
  0x0000000002db5fa6: mov    %ebx,0xdc(%rsi)
  0x0000000002db5fac: movabs $0x1bc70480,%rsi   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002db5fb6: and    $0x7ffff8,%ebx
  0x0000000002db5fbc: cmp    $0x0,%ebx
  0x0000000002db5fbf: je     0x0000000002db6265
  0x0000000002db5fc5: cmp    $0x0,%r9d
  0x0000000002db5fc9: movabs $0x1be5c568,%rsi   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db5fd3: movabs $0x118,%rbx
  0x0000000002db5fdd: jge    0x0000000002db5fed
  0x0000000002db5fe3: movabs $0x128,%rbx
  0x0000000002db5fed: mov    (%rsi,%rbx,1),%rax
  0x0000000002db5ff1: lea    0x1(%rax),%rax
  0x0000000002db5ff5: mov    %rax,(%rsi,%rbx,1)
  0x0000000002db5ff9: jl     0x0000000002db620e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x0000000002db5fff: cmp    $0x0,%edi
  0x0000000002db6002: movabs $0x1be5c568,%rsi   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db600c: movabs $0x148,%rbx
  0x0000000002db6016: jg     0x0000000002db6026
  0x0000000002db601c: movabs $0x158,%rbx
  0x0000000002db6026: mov    (%rsi,%rbx,1),%rax
  0x0000000002db602a: lea    0x1(%rax),%rax
  0x0000000002db602e: mov    %rax,(%rsi,%rbx,1)
  0x0000000002db6032: jg     0x0000000002db60ae  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x0000000002db6038: cmp    $0x0,%edi
  0x0000000002db603b: movabs $0x1be5c568,%rsi   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db6045: movabs $0x168,%rbx
  0x0000000002db604f: jge    0x0000000002db605f
  0x0000000002db6055: movabs $0x178,%rbx
  0x0000000002db605f: mov    (%rsi,%rbx,1),%rax
  0x0000000002db6063: lea    0x1(%rax),%rax
  0x0000000002db6067: mov    %rax,(%rsi,%rbx,1)
  0x0000000002db606b: jl     0x0000000002db61ce  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000002db6071: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000002db627c
  0x0000000002db6075: cmp    %esi,%r9d
  0x0000000002db6078: movabs $0x1be5c568,%rsi   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db6082: movabs $0x198,%rbx
  0x0000000002db608c: jg     0x0000000002db609c
  0x0000000002db6092: movabs $0x1a8,%rbx
  0x0000000002db609c: mov    (%rsi,%rbx,1),%rax
  0x0000000002db60a0: lea    0x1(%rax),%rax
  0x0000000002db60a4: mov    %rax,(%rsi,%rbx,1)
  0x0000000002db60a8: jle    0x0000000002db614a  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000002db60ae: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000002db6281
  0x0000000002db60b2: sub    %edi,%esi
  0x0000000002db60b4: cmp    %esi,%r9d
  0x0000000002db60b7: movabs $0x1be5c568,%rsi   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db60c1: movabs $0x1b8,%rbx
  0x0000000002db60cb: jle    0x0000000002db60db
  0x0000000002db60d1: movabs $0x1c8,%rbx
  0x0000000002db60db: mov    (%rsi,%rbx,1),%rax
  0x0000000002db60df: lea    0x1(%rax),%rax
  0x0000000002db60e3: mov    %rax,(%rsi,%rbx,1)
  0x0000000002db60e7: jg     0x0000000002db6184  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000002db60ed: mov    %rdx,0x38(%rsp)
  0x0000000002db60f2: movabs $0x1be5c568,%rsi   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db60fc: addq   $0x1,0x1e8(%rsi)
  0x0000000002db6104: add    %r9d,%edi
  0x0000000002db6107: mov    %r8,%rdx
  0x0000000002db610a: mov    %r9,%r8
  0x0000000002db610d: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000002db6110: nop
  0x0000000002db6111: nop
  0x0000000002db6112: nop
  0x0000000002db6113: nop
  0x0000000002db6114: nop
  0x0000000002db6115: nop
  0x0000000002db6116: nop
  0x0000000002db6117: callq  0x0000000002cf6620  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000002db611c: mov    0x38(%rsp),%rdx
  0x0000000002db6121: mov    %rax,%r10
  0x0000000002db6124: shr    $0x3,%r10
  0x0000000002db6128: mov    %r10d,0xc(%rdx)
  0x0000000002db612c: shr    $0x9,%rdx
  0x0000000002db6130: movabs $0xea5d000,%rax
  0x0000000002db613a: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000002db613e: add    $0x60,%rsp
  0x0000000002db6142: pop    %rbp
  0x0000000002db6143: test   %eax,-0x21b6049(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002db6149: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000002db614a: movabs $0x76b78aa58,%rax  ;   {oop(&quot;&quot;)}
  0x0000000002db6154: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000002db6286
  0x0000000002db6157: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x0000000002db615b: mov    %rax,%r10
  0x0000000002db615e: shr    $0x3,%r10
  0x0000000002db6162: mov    %r10d,0xc(%rdx)
  0x0000000002db6166: shr    $0x9,%rdx
  0x0000000002db616a: movabs $0xea5d000,%rax
  0x0000000002db6174: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000002db6178: add    $0x60,%rsp
  0x0000000002db617c: pop    %rbp
  0x0000000002db617d: test   %eax,-0x21b6083(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002db6183: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000002db6184: nopl   0x0(%rax)
  0x0000000002db6188: jmpq   0x0000000002db629a  ;   {no_reloc}
  0x0000000002db618d: add    %al,(%rax)
  0x0000000002db618f: add    %al,(%rax)
  0x0000000002db6191: add    %ch,%cl
  0x0000000002db6193: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000002db6198: mov    %eax,%eax
  0x0000000002db619a: movabs $0x1be5c568,%rdx   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db61a4: addq   $0x1,0x1d8(%rdx)
  0x0000000002db61ac: add    %r9d,%edi
  0x0000000002db61af: mov    %rdi,%r8
  0x0000000002db61b2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000002db61b5: mov    %rax,0x40(%rsp)
  0x0000000002db61ba: nop
  0x0000000002db61bb: nop
  0x0000000002db61bc: nop
  0x0000000002db61bd: nop
  0x0000000002db61be: nop
  0x0000000002db61bf: callq  0x0000000002cf61a0  ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000002db61c4: mov    0x40(%rsp),%rax
  0x0000000002db61c9: jmpq   0x0000000002db6328  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000002db61ce: xchg   %ax,%ax
  0x0000000002db61d0: jmpq   0x0000000002db62c0  ;   {no_reloc}
  0x0000000002db61d5: add    %al,(%rax)
  0x0000000002db61d7: add    %al,(%rax)
  0x0000000002db61d9: add    %ch,%cl
  0x0000000002db61db: jmp    0x0000000002db61dd
  0x0000000002db61dd: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000002db61df: mov    %rax,%r8
  0x0000000002db61e2: movabs $0x1be5c568,%rdx   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db61ec: addq   $0x1,0x188(%rdx)
  0x0000000002db61f4: mov    %rdi,%r8
  0x0000000002db61f7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000002db61fa: mov    %rax,0x48(%rsp)
  0x0000000002db61ff: callq  0x0000000002cf61a0  ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000002db6204: mov    0x48(%rsp),%rax
  0x0000000002db6209: jmpq   0x0000000002db6328  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000002db620e: xchg   %ax,%ax
  0x0000000002db6210: jmpq   0x0000000002db62e6  ;   {no_reloc}
  0x0000000002db6215: add    %al,(%rax)
  0x0000000002db6217: add    %al,(%rax)
  0x0000000002db6219: add    %ch,%cl
  0x0000000002db621b: roll   (%rax)
  0x0000000002db621d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000002db621f: mov    %rax,%r8
  0x0000000002db6222: movabs $0x1be5c568,%rdx   ;   {metadata(method data for {method} {0x000000001bc73160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002db622c: addq   $0x1,0x138(%rdx)
  0x0000000002db6234: mov    %r9,%r8
  0x0000000002db6237: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000002db623a: mov    %rax,0x50(%rsp)
  0x0000000002db623f: callq  0x0000000002cf61a0  ; OopMap{[80]=Oop off=804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002db6244: mov    0x50(%rsp),%rax
  0x0000000002db6249: jmpq   0x0000000002db6328
  0x0000000002db624e: mov    %rsi,0x8(%rsp)
  0x0000000002db6253: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002db625b: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=832}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000002db6260: jmpq   0x0000000002db5f7e
  0x0000000002db6265: mov    %rsi,0x8(%rsp)
  0x0000000002db626a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002db6272: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=855}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000002db6277: jmpq   0x0000000002db5fc5
  0x0000000002db627c: callq  0x0000000002dad680  ; OopMap{rdx=Oop r8=Oop off=865}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000002db6281: callq  0x0000000002dad680  ; OopMap{rdx=Oop r8=Oop off=870}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000002db6286: callq  0x0000000002dad680  ; OopMap{rdx=Oop off=875}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000002db628b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002db6295: mov    $0xa050f00,%eax
  0x0000000002db629a: callq  0x0000000002db0ca0  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002db629f: jmpq   0x0000000002db6188
  0x0000000002db62a4: mov    %rdx,%rdx
  0x0000000002db62a7: callq  0x0000000002dadb20  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000002db62ac: jmpq   0x0000000002db6197
  0x0000000002db62b1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002db62bb: mov    $0xa050f00,%eax
  0x0000000002db62c0: callq  0x0000000002db0ca0  ; OopMap{off=933}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002db62c5: jmpq   0x0000000002db61d0
  0x0000000002db62ca: mov    %rdx,%rdx
  0x0000000002db62cd: callq  0x0000000002dadb20  ; OopMap{off=946}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000002db62d2: jmpq   0x0000000002db61df
  0x0000000002db62d7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002db62e1: mov    $0xa050f00,%eax
  0x0000000002db62e6: callq  0x0000000002db0ca0  ; OopMap{off=971}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002db62eb: jmpq   0x0000000002db6210
  0x0000000002db62f0: mov    %rdx,%rdx
  0x0000000002db62f3: callq  0x0000000002dadb20  ; OopMap{off=984}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000002db62f8: jmpq   0x0000000002db621f
  0x0000000002db62fd: nop
  0x0000000002db62fe: nop
  0x0000000002db62ff: mov    0x2a8(%r15),%rax
  0x0000000002db6306: movabs $0x0,%r10
  0x0000000002db6310: mov    %r10,0x2a8(%r15)
  0x0000000002db6317: movabs $0x0,%r10
  0x0000000002db6321: mov    %r10,0x2b0(%r15)
  0x0000000002db6328: add    $0x60,%rsp
  0x0000000002db632c: pop    %rbp
  0x0000000002db632d: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002db6332: hlt    
  0x0000000002db6333: hlt    
  0x0000000002db6334: hlt    
  0x0000000002db6335: hlt    
  0x0000000002db6336: hlt    
  0x0000000002db6337: hlt    
  0x0000000002db6338: hlt    
  0x0000000002db6339: hlt    
  0x0000000002db633a: hlt    
  0x0000000002db633b: hlt    
  0x0000000002db633c: hlt    
  0x0000000002db633d: hlt    
  0x0000000002db633e: hlt    
  0x0000000002db633f: hlt    
[Stub Code]
  0x0000000002db6340: nop                       ;   {no_reloc}
  0x0000000002db6341: nop
  0x0000000002db6342: nop
  0x0000000002db6343: nop
  0x0000000002db6344: nop
  0x0000000002db6345: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db634f: jmpq   0x0000000002db634f  ;   {runtime_call}
  0x0000000002db6354: nop
  0x0000000002db6355: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db635f: jmpq   0x0000000002db635f  ;   {runtime_call}
  0x0000000002db6364: nop
  0x0000000002db6365: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db636f: jmpq   0x0000000002db636f  ;   {runtime_call}
  0x0000000002db6374: nop
  0x0000000002db6375: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002db637f: jmpq   0x0000000002db637f  ;   {runtime_call}
[Exception Handler]
  0x0000000002db6384: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002db6389: mov    %rsp,-0x28(%rsp)
  0x0000000002db638e: sub    $0x80,%rsp
  0x0000000002db6395: mov    %rax,0x78(%rsp)
  0x0000000002db639a: mov    %rcx,0x70(%rsp)
  0x0000000002db639f: mov    %rdx,0x68(%rsp)
  0x0000000002db63a4: mov    %rbx,0x60(%rsp)
  0x0000000002db63a9: mov    %rbp,0x50(%rsp)
  0x0000000002db63ae: mov    %rsi,0x48(%rsp)
  0x0000000002db63b3: mov    %rdi,0x40(%rsp)
  0x0000000002db63b8: mov    %r8,0x38(%rsp)
  0x0000000002db63bd: mov    %r9,0x30(%rsp)
  0x0000000002db63c2: mov    %r10,0x28(%rsp)
  0x0000000002db63c7: mov    %r11,0x20(%rsp)
  0x0000000002db63cc: mov    %r12,0x18(%rsp)
  0x0000000002db63d1: mov    %r13,0x10(%rsp)
  0x0000000002db63d6: mov    %r14,0x8(%rsp)
  0x0000000002db63db: mov    %r15,(%rsp)
  0x0000000002db63df: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002db63e9: movabs $0x2db6389,%rdx    ;   {internal_word}
  0x0000000002db63f3: mov    %rsp,%r8
  0x0000000002db63f6: and    $0xfffffffffffffff0,%rsp
  0x0000000002db63fa: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002db63ff: hlt    
[Deopt Handler Code]
  0x0000000002db6400: movabs $0x2db6400,%r10    ;   {section_word}
  0x0000000002db640a: push   %r10
  0x0000000002db640c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002db6411: hlt    
  0x0000000002db6412: hlt    
  0x0000000002db6413: hlt    
  0x0000000002db6414: hlt    
  0x0000000002db6415: hlt    
  0x0000000002db6416: hlt    
  0x0000000002db6417: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x0000000002db5f20' size='2704' address='0x0000000002db5d50' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='3534' iicount='3534' stamp='0.644'/>
<writer thread='31108'/>
<task_queued compile_id='20' method='java/io/WinNTFileSystem prefixLength (Ljava/lang/String;)I' bytes='91' count='1792' iicount='1792' level='3' stamp='0.645' comment='tiered' hot_count='1792'/>
<writer thread='22236'/>
<task_queued compile_id='21' method='java/lang/String length ()I' bytes='6' count='37376' iicount='37376' stamp='0.645' comment='tiered' hot_count='37376'/>
<task_queued compile_id='22' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' level='3' stamp='0.645' comment='tiered' hot_count='9984'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002db56d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  0x0000000002db5820: int3   
  0x0000000002db5821: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002db582c: data16 data16 xchg %ax,%ax
  0x0000000002db5830: mov    %eax,-0x6000(%rsp)
  0x0000000002db5837: push   %rbp
  0x0000000002db5838: sub    $0x50,%rsp
  0x0000000002db583c: mov    (%rdx),%ebx
  0x0000000002db583e: mov    0x8(%rdx),%r14
  0x0000000002db5842: mov    0x20(%rdx),%r13d
  0x0000000002db5846: mov    0x10(%rdx),%ebp
  0x0000000002db5849: mov    %rdx,%rcx
  0x0000000002db584c: movabs $0x5590be80,%r10
  0x0000000002db5856: callq  *%r10
  0x0000000002db5859: test   %r14,%r14
  0x0000000002db585c: je     0x0000000002db59bb
  0x0000000002db5862: mov    0x8(%r14),%r11d
  0x0000000002db5866: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x0000000002db586d: jne    0x0000000002db59f9  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x0000000002db5873: mov    %r14,%r10
  0x0000000002db5876: add    $0xc,%r10          ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db587a: cmp    %ebp,%ebx
  0x0000000002db587c: jge    0x0000000002db5982  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002db5882: mov    %ebx,%r11d
  0x0000000002db5885: inc    %r11d
  0x0000000002db5888: xor    %r8d,%r8d
  0x0000000002db588b: cmp    %r8d,%r11d
  0x0000000002db588e: cmovl  %r8d,%r11d
  0x0000000002db5892: cmp    %ebp,%r11d
  0x0000000002db5895: cmovg  %ebp,%r11d
  0x0000000002db5899: test   %r14,%r14
  0x0000000002db589c: je     0x0000000002db59c9
  0x0000000002db58a2: mov    (%r10),%r9d
  0x0000000002db58a5: cmp    %r9d,%ebx
  0x0000000002db58a8: jae    0x0000000002db59d9  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db58ae: movzwl 0x10(%r14,%rbx,2),%r8d
  0x0000000002db58b4: cmp    %r13d,%r8d
  0x0000000002db58b7: je     0x0000000002db5987  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db58bd: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002db58bf: cmp    %r11d,%ebx
  0x0000000002db58c2: jl     0x0000000002db5899  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002db58c4: cmp    %r9d,%ebp
  0x0000000002db58c7: mov    %ebp,%r11d
  0x0000000002db58ca: cmovg  %r9d,%r11d
  0x0000000002db58ce: mov    %r11d,%ecx
  0x0000000002db58d1: add    $0xfffffff9,%ecx
  0x0000000002db58d4: mov    $0x80000000,%r8d
  0x0000000002db58da: cmp    %ecx,%r11d
  0x0000000002db58dd: cmovl  %r8d,%ecx
  0x0000000002db58e1: cmp    %ecx,%ebx
  0x0000000002db58e3: jge    0x0000000002db5965
  0x0000000002db58e9: nopl   0x0(%rax)
  0x0000000002db58f0: movzwl 0x10(%r14,%rbx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db58f6: cmp    %r13d,%r11d
  0x0000000002db58f9: je     0x0000000002db5995  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db58ff: movslq %ebx,%rdi
  0x0000000002db5902: movzwl 0x12(%r14,%rdi,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db5908: cmp    %r13d,%r11d
  0x0000000002db590b: je     0x0000000002db599d  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db5911: movzwl 0x14(%r14,%rdi,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db5917: cmp    %r13d,%r11d
  0x0000000002db591a: je     0x0000000002db59b1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db5920: movzwl 0x16(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db5926: cmp    %r13d,%r10d
  0x0000000002db5929: je     0x0000000002db59a5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db592b: movzwl 0x18(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db5931: mov    %ebx,%r8d
  0x0000000002db5934: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002db5938: cmp    %r13d,%r10d
  0x0000000002db593b: je     0x0000000002db5998  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db593d: movzwl 0x1a(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db5943: cmp    %r13d,%r10d
  0x0000000002db5946: je     0x0000000002db59a0  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db5948: movzwl 0x1c(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db594e: cmp    %r13d,%r10d
  0x0000000002db5951: je     0x0000000002db59b6  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db5953: movzwl 0x1e(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db5959: cmp    %r13d,%r10d
  0x0000000002db595c: je     0x0000000002db59aa  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db595e: add    $0x8,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002db5961: cmp    %ecx,%ebx
  0x0000000002db5963: jl     0x0000000002db58f0  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002db5965: cmp    %ebp,%ebx
  0x0000000002db5967: jge    0x0000000002db5982
  0x0000000002db5969: data16 xchg %ax,%ax
  0x0000000002db596c: cmp    %r9d,%ebx
  0x0000000002db596f: jae    0x0000000002db59df  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002db5971: movzwl 0x10(%r14,%rbx,2),%r11d
  0x0000000002db5977: cmp    %r13d,%r11d
  0x0000000002db597a: je     0x0000000002db5987  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002db597c: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002db597e: cmp    %ebp,%ebx
  0x0000000002db5980: jl     0x0000000002db596c  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002db5982: mov    $0xffffffff,%ebx   ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x0000000002db5987: mov    %ebx,%eax
  0x0000000002db5989: add    $0x50,%rsp
  0x0000000002db598d: pop    %rbp
  0x0000000002db598e: test   %eax,-0x21b5994(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002db5994: retq   
  0x0000000002db5995: mov    %ebx,%r8d
  0x0000000002db5998: mov    %r8d,%ebx
  0x0000000002db599b: jmp    0x0000000002db5987
  0x0000000002db599d: mov    %ebx,%r8d
  0x0000000002db59a0: mov    %r8d,%ebx
  0x0000000002db59a3: jmp    0x0000000002db59ad
  0x0000000002db59a5: add    $0x2,%ebx
  0x0000000002db59a8: jmp    0x0000000002db59ad
  0x0000000002db59aa: add    $0x6,%ebx
  0x0000000002db59ad: inc    %ebx
  0x0000000002db59af: jmp    0x0000000002db5987
  0x0000000002db59b1: add    $0x2,%ebx
  0x0000000002db59b4: jmp    0x0000000002db5987
  0x0000000002db59b6: add    $0x6,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002db59b9: jmp    0x0000000002db5987
  0x0000000002db59bb: xor    %r14d,%r14d
  0x0000000002db59be: mov    $0xc,%r10d
  0x0000000002db59c4: jmpq   0x0000000002db587a
  0x0000000002db59c9: mov    $0xfffffff6,%edx
  0x0000000002db59ce: mov    %ebx,%ebp
  0x0000000002db59d0: data16 xchg %ax,%ax
  0x0000000002db59d3: callq  0x0000000002cf57a0  ; OopMap{off=440}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002db59d8: int3   
  0x0000000002db59d9: mov    %ebx,0x20(%rsp)
  0x0000000002db59dd: jmp    0x0000000002db59e3
  0x0000000002db59df: mov    %ebx,0x20(%rsp)
  0x0000000002db59e3: mov    $0xffffffe4,%edx
  0x0000000002db59e8: mov    %r13d,0x24(%rsp)
  0x0000000002db59ed: mov    %r14,0x30(%rsp)
  0x0000000002db59f2: nop
  0x0000000002db59f3: callq  0x0000000002cf57a0  ; OopMap{[48]=Oop off=472}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x0000000002db59f8: int3   
  0x0000000002db59f9: mov    $0xffffff9d,%edx
  0x0000000002db59fe: mov    %r13d,0x20(%rsp)
  0x0000000002db5a03: mov    %r14,0x28(%rsp)
  0x0000000002db5a08: mov    %ebx,0x24(%rsp)
  0x0000000002db5a0c: data16 xchg %ax,%ax
  0x0000000002db5a0f: callq  0x0000000002cf57a0  ; OopMap{[40]=Oop off=500}
                                                ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x0000000002db5a14: int3                      ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x0000000002db5a15: hlt    
  0x0000000002db5a16: hlt    
  0x0000000002db5a17: hlt    
  0x0000000002db5a18: hlt    
  0x0000000002db5a19: hlt    
  0x0000000002db5a1a: hlt    
  0x0000000002db5a1b: hlt    
  0x0000000002db5a1c: hlt    
  0x0000000002db5a1d: hlt    
  0x0000000002db5a1e: hlt    
  0x0000000002db5a1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002db5a20: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002db5a25: callq  0x0000000002db5a2a
  0x0000000002db5a2a: subq   $0x5,(%rsp)
  0x0000000002db5a2f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002db5a34: hlt    
  0x0000000002db5a35: hlt    
  0x0000000002db5a36: hlt    
  0x0000000002db5a37: hlt    
<nmethod compile_id='16' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002db5820' size='1616' address='0x0000000002db56d0' relocation_offset='288' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='1000' dependencies_offset='1608' method='java/lang/String indexOf (II)I' bytes='70' count='3789' backedge_count='229835' iicount='3789' stamp='0.652'/>
<writer thread='22236'/>
<task_queued compile_id='23' method='java/util/HashMap$Node getKey ()Ljava/lang/Object;' bytes='5' count='512' iicount='512' level='1' stamp='0.652' comment='tiered' hot_count='512'/>
<writer thread='31108'/>
<task_queued compile_id='24' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='19698' backedge_count='14067' iicount='19698' stamp='0.652' comment='tiered' hot_count='19698'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dbfb10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  0x0000000002dbfc60: int3   
  0x0000000002dbfc61: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dbfc6c: data16 data16 xchg %ax,%ax
  0x0000000002dbfc70: mov    %eax,-0x6000(%rsp)
  0x0000000002dbfc77: push   %rbp
  0x0000000002dbfc78: sub    $0x50,%rsp
  0x0000000002dbfc7c: mov    (%rdx),%r13d
  0x0000000002dbfc7f: mov    0x10(%rdx),%ebx
  0x0000000002dbfc82: mov    0x18(%rdx),%rbp
  0x0000000002dbfc86: mov    0x8(%rdx),%r14
  0x0000000002dbfc8a: mov    %rdx,%rcx
  0x0000000002dbfc8d: movabs $0x5590be80,%r10
  0x0000000002dbfc97: callq  *%r10
  0x0000000002dbfc9a: test   %rbp,%rbp
  0x0000000002dbfc9d: je     0x0000000002dbfdc5
  0x0000000002dbfca3: mov    0x8(%rbp),%r10d
  0x0000000002dbfca7: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002dbfcae: jne    0x0000000002dbfdf1
  0x0000000002dbfcb4: mov    %rbp,%rcx
  0x0000000002dbfcb7: test   %r14,%r14
  0x0000000002dbfcba: je     0x0000000002dbfdcc
  0x0000000002dbfcc0: mov    0x8(%r14),%r11d
  0x0000000002dbfcc4: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x0000000002dbfccb: jne    0x0000000002dbfdf1  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x0000000002dbfcd1: mov    0xc(%rcx),%r10d    ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)
                                                ; implicit exception: dispatches to 0x0000000002dbfe0d
  0x0000000002dbfcd5: mov    0xc(%r12,%r10,8),%esi  ;*arraylength
                                                ; - java.lang.String::hashCode@29 (line 1470)
                                                ; implicit exception: dispatches to 0x0000000002dbfe0d
  0x0000000002dbfcda: cmp    %esi,%r13d
  0x0000000002dbfcdd: jge    0x0000000002dbfdb4  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002dbfce3: mov    %r13d,%r10d
  0x0000000002dbfce6: inc    %r10d
  0x0000000002dbfce9: xor    %r11d,%r11d
  0x0000000002dbfcec: cmp    %r11d,%r10d
  0x0000000002dbfcef: cmovl  %r11d,%r10d
  0x0000000002dbfcf3: cmp    %esi,%r10d
  0x0000000002dbfcf6: cmovg  %esi,%r10d
  0x0000000002dbfcfa: mov    0xc(%r14),%edx     ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ; implicit exception: dispatches to 0x0000000002dbfe29
  0x0000000002dbfcfe: mov    %ebx,%ebp
  0x0000000002dbfd00: shl    $0x5,%ebp
  0x0000000002dbfd03: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002dbfd05: cmp    %edx,%r13d
  0x0000000002dbfd08: jae    0x0000000002dbfdd4  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002dbfd0e: movzwl 0x10(%r14,%r13,2),%ebx
  0x0000000002dbfd14: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002dbfd16: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002dbfd19: cmp    %r10d,%r13d
  0x0000000002dbfd1c: jl     0x0000000002dbfcfa  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002dbfd1e: cmp    %edx,%esi
  0x0000000002dbfd20: mov    %esi,%r8d
  0x0000000002dbfd23: cmovg  %edx,%r8d
  0x0000000002dbfd27: mov    %r8d,%r10d
  0x0000000002dbfd2a: add    $0xfffffffd,%r10d
  0x0000000002dbfd2e: mov    $0x80000000,%r9d
  0x0000000002dbfd34: cmp    %r10d,%r8d
  0x0000000002dbfd37: cmovl  %r9d,%r10d
  0x0000000002dbfd3b: cmp    %r10d,%r13d
  0x0000000002dbfd3e: jge    0x0000000002dbfd90  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002dbfd40: movzwl 0x10(%r14,%r13,2),%r11d
  0x0000000002dbfd46: movslq %r13d,%rdi
  0x0000000002dbfd49: movzwl 0x12(%r14,%rdi,2),%r9d
  0x0000000002dbfd4f: movzwl 0x16(%r14,%rdi,2),%r8d
  0x0000000002dbfd55: movzwl 0x14(%r14,%rdi,2),%edi
  0x0000000002dbfd5b: mov    %ebx,%eax
  0x0000000002dbfd5d: shl    $0x5,%eax
  0x0000000002dbfd60: sub    %ebx,%eax
  0x0000000002dbfd62: add    %r11d,%eax
  0x0000000002dbfd65: mov    %eax,%r11d
  0x0000000002dbfd68: shl    $0x5,%r11d
  0x0000000002dbfd6c: sub    %eax,%r11d
  0x0000000002dbfd6f: add    %r9d,%r11d
  0x0000000002dbfd72: mov    %r11d,%eax
  0x0000000002dbfd75: shl    $0x5,%eax
  0x0000000002dbfd78: sub    %r11d,%eax
  0x0000000002dbfd7b: add    %edi,%eax
  0x0000000002dbfd7d: mov    %eax,%ebx
  0x0000000002dbfd7f: shl    $0x5,%ebx
  0x0000000002dbfd82: sub    %eax,%ebx
  0x0000000002dbfd84: add    %r8d,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002dbfd87: add    $0x4,%r13d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002dbfd8b: cmp    %r10d,%r13d
  0x0000000002dbfd8e: jl     0x0000000002dbfd40  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002dbfd90: cmp    %esi,%r13d
  0x0000000002dbfd93: jge    0x0000000002dbfdb4
  0x0000000002dbfd95: data16 xchg %ax,%ax       ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002dbfd98: mov    %ebx,%ebp
  0x0000000002dbfd9a: shl    $0x5,%ebp
  0x0000000002dbfd9d: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002dbfd9f: cmp    %edx,%r13d
  0x0000000002dbfda2: jae    0x0000000002dbfdd4  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002dbfda4: movzwl 0x10(%r14,%r13,2),%ebx
  0x0000000002dbfdaa: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002dbfdac: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002dbfdaf: cmp    %esi,%r13d
  0x0000000002dbfdb2: jl     0x0000000002dbfd98  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002dbfdb4: mov    %ebx,0x10(%rcx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x0000000002dbfdb7: mov    %ebx,%eax
  0x0000000002dbfdb9: add    $0x50,%rsp
  0x0000000002dbfdbd: pop    %rbp
  0x0000000002dbfdbe: test   %eax,-0x21bfdc4(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dbfdc4: retq   
  0x0000000002dbfdc5: xor    %ecx,%ecx
  0x0000000002dbfdc7: jmpq   0x0000000002dbfcb7
  0x0000000002dbfdcc: xor    %r14d,%r14d
  0x0000000002dbfdcf: jmpq   0x0000000002dbfcd1
  0x0000000002dbfdd4: mov    $0xffffffe4,%edx
  0x0000000002dbfdd9: mov    %r14,0x30(%rsp)
  0x0000000002dbfdde: mov    %r13d,0x2c(%rsp)
  0x0000000002dbfde3: mov    %rcx,0x38(%rsp)
  0x0000000002dbfde8: data16 xchg %ax,%ax
  0x0000000002dbfdeb: callq  0x0000000002cf57a0  ; OopMap{[48]=Oop [56]=Oop off=400}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x0000000002dbfdf0: int3   
  0x0000000002dbfdf1: mov    $0xffffff9d,%edx
  0x0000000002dbfdf6: mov    %ebx,0x20(%rsp)
  0x0000000002dbfdfa: mov    %r14,0x28(%rsp)
  0x0000000002dbfdff: mov    %r13d,0x24(%rsp)
  0x0000000002dbfe04: data16 xchg %ax,%ax
  0x0000000002dbfe07: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [40]=Oop off=428}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x0000000002dbfe0c: int3   
  0x0000000002dbfe0d: mov    $0xffffff86,%edx
  0x0000000002dbfe12: mov    %ebx,%ebp
  0x0000000002dbfe14: mov    %r14,0x20(%rsp)
  0x0000000002dbfe19: mov    %r13d,0x28(%rsp)
  0x0000000002dbfe1e: mov    %rcx,0x30(%rsp)
  0x0000000002dbfe23: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [48]=Oop off=456}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x0000000002dbfe28: int3   
  0x0000000002dbfe29: mov    $0xfffffff6,%edx
  0x0000000002dbfe2e: mov    %r13d,%ebp
  0x0000000002dbfe31: xchg   %ax,%ax
  0x0000000002dbfe33: callq  0x0000000002cf57a0  ; OopMap{off=472}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x0000000002dbfe38: int3                      ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002dbfe39: hlt    
  0x0000000002dbfe3a: hlt    
  0x0000000002dbfe3b: hlt    
  0x0000000002dbfe3c: hlt    
  0x0000000002dbfe3d: hlt    
  0x0000000002dbfe3e: hlt    
  0x0000000002dbfe3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dbfe40: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dbfe45: callq  0x0000000002dbfe4a
  0x0000000002dbfe4a: subq   $0x5,(%rsp)
  0x0000000002dbfe4f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dbfe54: hlt    
  0x0000000002dbfe55: hlt    
  0x0000000002dbfe56: hlt    
  0x0000000002dbfe57: hlt    
<nmethod compile_id='3' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002dbfc60' size='1496' address='0x0000000002dbfb10' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='864' scopes_pcs_offset='1008' dependencies_offset='1456' nul_chk_table_offset='1464' method='java/lang/String hashCode ()I' bytes='55' count='5481' backedge_count='119265' iicount='5481' stamp='0.656'/>
<writer thread='22236'/>
<task_queued compile_id='25' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='640' iicount='640' level='3' stamp='0.656' comment='tiered' hot_count='640'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dbf690:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002dbf7c0: mov    0x8(%rdx),%r10d
  0x0000000002dbf7c4: shl    $0x3,%r10
  0x0000000002dbf7c8: cmp    %r10,%rax
  0x0000000002dbf7cb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dbf7d1: data16 xchg %ax,%ax
  0x0000000002dbf7d4: nopl   0x0(%rax,%rax,1)
  0x0000000002dbf7dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dbf7e0: mov    %eax,-0x6000(%rsp)
  0x0000000002dbf7e7: push   %rbp
  0x0000000002dbf7e8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x0000000002dbf7ec: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000002dbf7f0: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x0000000002dbf801
  0x0000000002dbf7f5: add    $0x10,%rsp
  0x0000000002dbf7f9: pop    %rbp
  0x0000000002dbf7fa: test   %eax,-0x21bf800(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dbf800: retq   
  0x0000000002dbf801: mov    $0xfffffff6,%edx
  0x0000000002dbf806: nop
  0x0000000002dbf807: callq  0x0000000002cf57a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002dbf80c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x0000000002dbf80d: hlt    
  0x0000000002dbf80e: hlt    
  0x0000000002dbf80f: hlt    
  0x0000000002dbf810: hlt    
  0x0000000002dbf811: hlt    
  0x0000000002dbf812: hlt    
  0x0000000002dbf813: hlt    
  0x0000000002dbf814: hlt    
  0x0000000002dbf815: hlt    
  0x0000000002dbf816: hlt    
  0x0000000002dbf817: hlt    
  0x0000000002dbf818: hlt    
  0x0000000002dbf819: hlt    
  0x0000000002dbf81a: hlt    
  0x0000000002dbf81b: hlt    
  0x0000000002dbf81c: hlt    
  0x0000000002dbf81d: hlt    
  0x0000000002dbf81e: hlt    
  0x0000000002dbf81f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dbf820: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dbf825: callq  0x0000000002dbf82a
  0x0000000002dbf82a: subq   $0x5,(%rsp)
  0x0000000002dbf82f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dbf834: hlt    
  0x0000000002dbf835: hlt    
  0x0000000002dbf836: hlt    
  0x0000000002dbf837: hlt    
<nmethod compile_id='21' compiler='C2' level='4' entry='0x0000000002dbf7c0' size='584' address='0x0000000002dbf690' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='37770' iicount='37770' stamp='0.658'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dc0f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x0000000002dc1180: mov    0x8(%rdx),%r10d
  0x0000000002dc1184: shl    $0x3,%r10
  0x0000000002dc1188: cmp    %rax,%r10
  0x0000000002dc118b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc1191: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dc119c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc11a0: mov    %eax,-0x6000(%rsp)
  0x0000000002dc11a7: push   %rbp
  0x0000000002dc11a8: sub    $0xa0,%rsp
  0x0000000002dc11af: mov    %rdx,0x48(%rsp)
  0x0000000002dc11b4: mov    %r8d,0x40(%rsp)
  0x0000000002dc11b9: mov    %r9,0x50(%rsp)
  0x0000000002dc11be: movabs $0x1be62f90,%rbx   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc11c8: mov    0xdc(%rbx),%eax
  0x0000000002dc11ce: add    $0x8,%eax
  0x0000000002dc11d1: mov    %eax,0xdc(%rbx)
  0x0000000002dc11d7: movabs $0x1bd56f88,%rbx   ;   {metadata({method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc11e1: and    $0x1ff8,%eax
  0x0000000002dc11e7: cmp    $0x0,%eax
  0x0000000002dc11ea: je     0x0000000002dc225d  ;*aload_0
                                                ; - java.util.HashMap::putVal@0 (line 627)

  0x0000000002dc11f0: mov    0x24(%rdx),%ebx
  0x0000000002dc11f3: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.HashMap::putVal@1 (line 627)

  0x0000000002dc11f7: cmp    $0x0,%rbx
  0x0000000002dc11fb: movabs $0x1be62f90,%rax   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1205: movabs $0x108,%r11
  0x0000000002dc120f: je     0x0000000002dc121f
  0x0000000002dc1215: movabs $0x118,%r11
  0x0000000002dc121f: mov    (%rax,%r11,1),%r13
  0x0000000002dc1223: lea    0x1(%r13),%r13
  0x0000000002dc1227: mov    %r13,(%rax,%r11,1)
  0x0000000002dc122b: je     0x0000000002dc127f  ;*ifnull
                                                ; - java.util.HashMap::putVal@7 (line 627)

  0x0000000002dc1231: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ; implicit exception: dispatches to 0x0000000002dc2274
  0x0000000002dc1234: cmp    $0x0,%eax
  0x0000000002dc1237: movabs $0x1be62f90,%r11   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1241: movabs $0x128,%r13
  0x0000000002dc124b: jne    0x0000000002dc125b
  0x0000000002dc1251: movabs $0x138,%r13
  0x0000000002dc125b: mov    (%r11,%r13,1),%r14
  0x0000000002dc125f: lea    0x1(%r14),%r14
  0x0000000002dc1263: mov    %r14,(%r11,%r13,1)
  0x0000000002dc1267: je     0x0000000002dc127f  ;*ifne
                                                ; - java.util.HashMap::putVal@16 (line 627)

  0x0000000002dc126d: mov    %ecx,0x60(%rsp)
  0x0000000002dc1271: mov    %esi,0x44(%rsp)
  0x0000000002dc1275: mov    %rdi,0x58(%rsp)
  0x0000000002dc127a: jmpq   0x0000000002dc1339  ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x0000000002dc127f: mov    %ecx,0x60(%rsp)
  0x0000000002dc1283: mov    %esi,0x44(%rsp)
  0x0000000002dc1287: mov    %rdi,0x58(%rsp)
  0x0000000002dc128c: mov    %rdx,%rbx
  0x0000000002dc128f: movabs $0x1be62f90,%rax   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1299: mov    0x8(%rbx),%ebx
  0x0000000002dc129c: shl    $0x3,%rbx
  0x0000000002dc12a0: cmp    0x150(%rax),%rbx
  0x0000000002dc12a7: jne    0x0000000002dc12b6
  0x0000000002dc12a9: addq   $0x1,0x158(%rax)
  0x0000000002dc12b1: jmpq   0x0000000002dc131c
  0x0000000002dc12b6: cmp    0x160(%rax),%rbx
  0x0000000002dc12bd: jne    0x0000000002dc12cc
  0x0000000002dc12bf: addq   $0x1,0x168(%rax)
  0x0000000002dc12c7: jmpq   0x0000000002dc131c
  0x0000000002dc12cc: cmpq   $0x0,0x150(%rax)
  0x0000000002dc12d7: jne    0x0000000002dc12f0
  0x0000000002dc12d9: mov    %rbx,0x150(%rax)
  0x0000000002dc12e0: movq   $0x1,0x158(%rax)
  0x0000000002dc12eb: jmpq   0x0000000002dc131c
  0x0000000002dc12f0: cmpq   $0x0,0x160(%rax)
  0x0000000002dc12fb: jne    0x0000000002dc1314
  0x0000000002dc12fd: mov    %rbx,0x160(%rax)
  0x0000000002dc1304: movq   $0x1,0x168(%rax)
  0x0000000002dc130f: jmpq   0x0000000002dc131c
  0x0000000002dc1314: addq   $0x1,0x148(%rax)
  0x0000000002dc131c: mov    %rdx,%rbx
  0x0000000002dc131f: mov    %rbx,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x0000000002dc1322: nop
  0x0000000002dc1323: nop
  0x0000000002dc1324: nop
  0x0000000002dc1325: nop
  0x0000000002dc1326: nop
  0x0000000002dc1327: callq  0x0000000002cf61a0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop off=428}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)
                                                ;   {optimized virtual_call}
  0x0000000002dc132c: mov    %rax,%r8           ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x0000000002dc132f: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ; implicit exception: dispatches to 0x0000000002dc2279
  0x0000000002dc1333: mov    %r9,%rax
  0x0000000002dc1336: mov    %r8,%rbx           ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x0000000002dc1339: dec    %eax
  0x0000000002dc133b: and    0x40(%rsp),%eax
  0x0000000002dc133f: movslq %eax,%r8
  0x0000000002dc1342: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x0000000002dc227e
  0x0000000002dc1345: jae    0x0000000002dc2288
  0x0000000002dc134b: mov    0x10(%rbx,%r8,4),%esi
  0x0000000002dc1350: shl    $0x3,%rsi          ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)

  0x0000000002dc1354: cmp    $0x0,%rsi
  0x0000000002dc1358: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1362: movabs $0x178,%r9
  0x0000000002dc136c: jne    0x0000000002dc137c
  0x0000000002dc1372: movabs $0x188,%r9
  0x0000000002dc137c: mov    (%r8,%r9,1),%rdi
  0x0000000002dc1380: lea    0x1(%rdi),%rdi
  0x0000000002dc1384: mov    %rdi,(%r8,%r9,1)
  0x0000000002dc1388: jne    0x0000000002dc15b4  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@44 (line 629)

  0x0000000002dc138e: mov    %eax,0x64(%rsp)
  0x0000000002dc1392: mov    %rbx,0x68(%rsp)
  0x0000000002dc1397: mov    0x48(%rsp),%rdx
  0x0000000002dc139c: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc13a6: mov    0x8(%rdx),%edx
  0x0000000002dc13a9: shl    $0x3,%rdx
  0x0000000002dc13ad: cmp    0x1a0(%r8),%rdx
  0x0000000002dc13b4: jne    0x0000000002dc13c3
  0x0000000002dc13b6: addq   $0x1,0x1a8(%r8)
  0x0000000002dc13be: jmpq   0x0000000002dc1429
  0x0000000002dc13c3: cmp    0x1b0(%r8),%rdx
  0x0000000002dc13ca: jne    0x0000000002dc13d9
  0x0000000002dc13cc: addq   $0x1,0x1b8(%r8)
  0x0000000002dc13d4: jmpq   0x0000000002dc1429
  0x0000000002dc13d9: cmpq   $0x0,0x1a0(%r8)
  0x0000000002dc13e4: jne    0x0000000002dc13fd
  0x0000000002dc13e6: mov    %rdx,0x1a0(%r8)
  0x0000000002dc13ed: movq   $0x1,0x1a8(%r8)
  0x0000000002dc13f8: jmpq   0x0000000002dc1429
  0x0000000002dc13fd: cmpq   $0x0,0x1b0(%r8)
  0x0000000002dc1408: jne    0x0000000002dc1421
  0x0000000002dc140a: mov    %rdx,0x1b0(%r8)
  0x0000000002dc1411: movq   $0x1,0x1b8(%r8)
  0x0000000002dc141c: jmpq   0x0000000002dc1429
  0x0000000002dc1421: addq   $0x1,0x198(%r8)
  0x0000000002dc1429: mov    0x40(%rsp),%r8d
  0x0000000002dc142e: mov    0x50(%rsp),%r9
  0x0000000002dc1433: mov    0x58(%rsp),%rdi
  0x0000000002dc1438: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x0000000002dc1442: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 630)

  0x0000000002dc1447: nop
  0x0000000002dc1448: nop
  0x0000000002dc1449: nop
  0x0000000002dc144a: nop
  0x0000000002dc144b: nop
  0x0000000002dc144c: nop
  0x0000000002dc144d: movabs $0xffffffffffffffff,%rax
  0x0000000002dc1457: callq  0x0000000002cf63e0  ; OopMap{[72]=Oop [104]=Oop off=732}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 630)
                                                ;   {virtual_call}
  0x0000000002dc145c: mov    0x64(%rsp),%r8d
  0x0000000002dc1461: movslq %r8d,%rdx
  0x0000000002dc1464: mov    0x68(%rsp),%rbx
  0x0000000002dc1469: lea    0x10(%rbx,%rdx,4),%rdx
  0x0000000002dc146e: cmp    0xc(%rbx),%r8d
  0x0000000002dc1472: jae    0x0000000002dc2291
  0x0000000002dc1478: cmp    $0x0,%rax
  0x0000000002dc147c: jne    0x0000000002dc1497
  0x0000000002dc147e: movabs $0x1be62f90,%rsi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1488: orl    $0x100,0x1c0(%rsi)
  0x0000000002dc1492: jmpq   0x0000000002dc1581
  0x0000000002dc1497: mov    0x8(%rbx),%r8d     ; implicit exception: dispatches to 0x0000000002dc229a
  0x0000000002dc149b: shl    $0x3,%r8
  0x0000000002dc149f: mov    0x8(%rax),%esi
  0x0000000002dc14a2: shl    $0x3,%rsi
  0x0000000002dc14a6: mov    0xf0(%r8),%r8
  0x0000000002dc14ad: cmp    %r8,%rsi
  0x0000000002dc14b0: je     0x0000000002dc14e2
  0x0000000002dc14b6: mov    0xc(%r8),%edi
  0x0000000002dc14ba: cmp    (%rsi,%rdi,1),%r8
  0x0000000002dc14be: je     0x0000000002dc14e2
  0x0000000002dc14c4: cmp    $0x18,%edi
  0x0000000002dc14c7: jne    0x0000000002dc156a
  0x0000000002dc14cd: push   %rsi
  0x0000000002dc14ce: push   %r8
  0x0000000002dc14d0: callq  0x0000000002dafce0  ;   {runtime_call}
  0x0000000002dc14d5: pop    %rsi
  0x0000000002dc14d6: pop    %r8
  0x0000000002dc14d8: cmp    $0x0,%r8d
  0x0000000002dc14dc: je     0x0000000002dc156a
  0x0000000002dc14e2: movabs $0x1be62f90,%rsi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc14ec: mov    0x8(%rax),%r8d
  0x0000000002dc14f0: shl    $0x3,%r8
  0x0000000002dc14f4: cmp    0x1d0(%rsi),%r8
  0x0000000002dc14fb: jne    0x0000000002dc150a
  0x0000000002dc14fd: addq   $0x1,0x1d8(%rsi)
  0x0000000002dc1505: jmpq   0x0000000002dc1581
  0x0000000002dc150a: cmp    0x1e0(%rsi),%r8
  0x0000000002dc1511: jne    0x0000000002dc1520
  0x0000000002dc1513: addq   $0x1,0x1e8(%rsi)
  0x0000000002dc151b: jmpq   0x0000000002dc1581
  0x0000000002dc1520: cmpq   $0x0,0x1d0(%rsi)
  0x0000000002dc152b: jne    0x0000000002dc1544
  0x0000000002dc152d: mov    %r8,0x1d0(%rsi)
  0x0000000002dc1534: movq   $0x1,0x1d8(%rsi)
  0x0000000002dc153f: jmpq   0x0000000002dc1581
  0x0000000002dc1544: cmpq   $0x0,0x1e0(%rsi)
  0x0000000002dc154f: jne    0x0000000002dc1568
  0x0000000002dc1551: mov    %r8,0x1e0(%rsi)
  0x0000000002dc1558: movq   $0x1,0x1e8(%rsi)
  0x0000000002dc1563: jmpq   0x0000000002dc1581
  0x0000000002dc1568: jmp    0x0000000002dc1581
  0x0000000002dc156a: movabs $0x1be62f90,%rsi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1574: subq   $0x1,0x1c8(%rsi)
  0x0000000002dc157c: jmpq   0x0000000002dc229f
  0x0000000002dc1581: mov    %rax,%r10
  0x0000000002dc1584: shr    $0x3,%r10
  0x0000000002dc1588: mov    %r10d,(%rdx)
  0x0000000002dc158b: shr    $0x9,%rdx
  0x0000000002dc158f: movabs $0xea5d000,%r8
  0x0000000002dc1599: movb   $0x0,(%rdx,%r8,1)  ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)

  0x0000000002dc159e: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc15a8: incl   0x1f8(%r8)
  0x0000000002dc15af: jmpq   0x0000000002dc1f28  ;*goto
                                                ; - java.util.HashMap::putVal@60 (line 630)

  0x0000000002dc15b4: mov    0xc(%rsi),%r8d     ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ; implicit exception: dispatches to 0x0000000002dc22a8
  0x0000000002dc15b8: cmp    0x40(%rsp),%r8d
  0x0000000002dc15bd: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc15c7: movabs $0x210,%rdx
  0x0000000002dc15d1: jne    0x0000000002dc15e1
  0x0000000002dc15d7: movabs $0x220,%rdx
  0x0000000002dc15e1: mov    (%r8,%rdx,1),%rdi
  0x0000000002dc15e5: lea    0x1(%rdi),%rdi
  0x0000000002dc15e9: mov    %rdi,(%r8,%rdx,1)
  0x0000000002dc15ed: je     0x0000000002dc15fd  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@69 (line 633)

  0x0000000002dc15f3: mov    %rbx,0x68(%rsp)
  0x0000000002dc15f8: jmpq   0x0000000002dc177a  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x0000000002dc15fd: mov    0x50(%rsp),%r9
  0x0000000002dc1602: mov    0x10(%rsi),%r8d
  0x0000000002dc1606: shl    $0x3,%r8           ;*getfield key
                                                ; - java.util.HashMap::putVal@74 (line 633)

  0x0000000002dc160a: cmp    %r9,%r8
  0x0000000002dc160d: movabs $0x1be62f90,%rdx   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1617: movabs $0x230,%rdi
  0x0000000002dc1621: je     0x0000000002dc1631
  0x0000000002dc1627: movabs $0x240,%rdi
  0x0000000002dc1631: mov    (%rdx,%rdi,1),%rax
  0x0000000002dc1635: lea    0x1(%rax),%rax
  0x0000000002dc1639: mov    %rax,(%rdx,%rdi,1)
  0x0000000002dc163d: je     0x0000000002dc1eda  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@81 (line 633)

  0x0000000002dc1643: cmp    $0x0,%r9
  0x0000000002dc1647: movabs $0x1be62f90,%rdx   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1651: movabs $0x250,%rdi
  0x0000000002dc165b: je     0x0000000002dc166b
  0x0000000002dc1661: movabs $0x260,%rdi
  0x0000000002dc166b: mov    (%rdx,%rdi,1),%rax
  0x0000000002dc166f: lea    0x1(%rax),%rax
  0x0000000002dc1673: mov    %rax,(%rdx,%rdi,1)
  0x0000000002dc1677: jne    0x0000000002dc1687  ;*ifnull
                                                ; - java.util.HashMap::putVal@85 (line 633)

  0x0000000002dc167d: mov    %rbx,0x68(%rsp)
  0x0000000002dc1682: jmpq   0x0000000002dc177a  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x0000000002dc1687: mov    %rsi,0x70(%rsp)
  0x0000000002dc168c: mov    %rbx,0x68(%rsp)
  0x0000000002dc1691: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000000002dc22ad
  0x0000000002dc1694: mov    %r9,%rdx
  0x0000000002dc1697: movabs $0x1be62f90,%rdi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc16a1: mov    0x8(%rdx),%edx
  0x0000000002dc16a4: shl    $0x3,%rdx
  0x0000000002dc16a8: cmp    0x278(%rdi),%rdx
  0x0000000002dc16af: jne    0x0000000002dc16be
  0x0000000002dc16b1: addq   $0x1,0x280(%rdi)
  0x0000000002dc16b9: jmpq   0x0000000002dc1724
  0x0000000002dc16be: cmp    0x288(%rdi),%rdx
  0x0000000002dc16c5: jne    0x0000000002dc16d4
  0x0000000002dc16c7: addq   $0x1,0x290(%rdi)
  0x0000000002dc16cf: jmpq   0x0000000002dc1724
  0x0000000002dc16d4: cmpq   $0x0,0x278(%rdi)
  0x0000000002dc16df: jne    0x0000000002dc16f8
  0x0000000002dc16e1: mov    %rdx,0x278(%rdi)
  0x0000000002dc16e8: movq   $0x1,0x280(%rdi)
  0x0000000002dc16f3: jmpq   0x0000000002dc1724
  0x0000000002dc16f8: cmpq   $0x0,0x288(%rdi)
  0x0000000002dc1703: jne    0x0000000002dc171c
  0x0000000002dc1705: mov    %rdx,0x288(%rdi)
  0x0000000002dc170c: movq   $0x1,0x290(%rdi)
  0x0000000002dc1717: jmpq   0x0000000002dc1724
  0x0000000002dc171c: addq   $0x1,0x270(%rdi)
  0x0000000002dc1724: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)

  0x0000000002dc1727: nop
  0x0000000002dc1728: nop
  0x0000000002dc1729: nop
  0x0000000002dc172a: nop
  0x0000000002dc172b: nop
  0x0000000002dc172c: nop
  0x0000000002dc172d: movabs $0xffffffffffffffff,%rax
  0x0000000002dc1737: callq  0x0000000002cf63e0  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop off=1468}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {virtual_call}
  0x0000000002dc173c: cmp    $0x0,%eax
  0x0000000002dc173f: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1749: movabs $0x2a0,%r9
  0x0000000002dc1753: je     0x0000000002dc1763
  0x0000000002dc1759: movabs $0x2b0,%r9
  0x0000000002dc1763: mov    (%r8,%r9,1),%rdi
  0x0000000002dc1767: lea    0x1(%rdi),%rdi
  0x0000000002dc176b: mov    %rdi,(%r8,%r9,1)
  0x0000000002dc176f: mov    0x70(%rsp),%rsi
  0x0000000002dc1774: jne    0x0000000002dc1eda  ;*ifeq
                                                ; - java.util.HashMap::putVal@94 (line 634)

  0x0000000002dc177a: cmp    $0x0,%rsi
  0x0000000002dc177e: jne    0x0000000002dc1799
  0x0000000002dc1780: movabs $0x1be62f90,%rdi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc178a: orl    $0x100,0x2d0(%rdi)
  0x0000000002dc1794: jmpq   0x0000000002dc185a
  0x0000000002dc1799: movabs $0x7c0039768,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000000002dc17a3: mov    0x8(%rsi),%r9d
  0x0000000002dc17a7: shl    $0x3,%r9
  0x0000000002dc17ab: cmp    %r9,%rcx
  0x0000000002dc17ae: jne    0x0000000002dc183e
  0x0000000002dc17b4: movabs $0x1be62f90,%rdi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc17be: mov    0x8(%rsi),%ecx
  0x0000000002dc17c1: shl    $0x3,%rcx
  0x0000000002dc17c5: cmp    0x2e0(%rdi),%rcx
  0x0000000002dc17cc: jne    0x0000000002dc17db
  0x0000000002dc17ce: addq   $0x1,0x2e8(%rdi)
  0x0000000002dc17d6: jmpq   0x0000000002dc185f
  0x0000000002dc17db: cmp    0x2f0(%rdi),%rcx
  0x0000000002dc17e2: jne    0x0000000002dc17f1
  0x0000000002dc17e4: addq   $0x1,0x2f8(%rdi)
  0x0000000002dc17ec: jmpq   0x0000000002dc185f
  0x0000000002dc17f1: cmpq   $0x0,0x2e0(%rdi)
  0x0000000002dc17fc: jne    0x0000000002dc1815
  0x0000000002dc17fe: mov    %rcx,0x2e0(%rdi)
  0x0000000002dc1805: movq   $0x1,0x2e8(%rdi)
  0x0000000002dc1810: jmpq   0x0000000002dc185f
  0x0000000002dc1815: cmpq   $0x0,0x2f0(%rdi)
  0x0000000002dc1820: jne    0x0000000002dc1839
  0x0000000002dc1822: mov    %rcx,0x2f0(%rdi)
  0x0000000002dc1829: movq   $0x1,0x2f8(%rdi)
  0x0000000002dc1834: jmpq   0x0000000002dc185f
  0x0000000002dc1839: jmpq   0x0000000002dc185f
  0x0000000002dc183e: movabs $0x1be62f90,%rdi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1848: subq   $0x1,0x2d8(%rdi)
  0x0000000002dc1850: jmpq   0x0000000002dc185a
  0x0000000002dc1855: jmpq   0x0000000002dc185f
  0x0000000002dc185a: xor    %r8,%r8
  0x0000000002dc185d: jmp    0x0000000002dc1869
  0x0000000002dc185f: movabs $0x1,%r8           ;*instanceof
                                                ; - java.util.HashMap::putVal@106 (line 636)

  0x0000000002dc1869: cmp    $0x0,%r8d
  0x0000000002dc186d: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1877: movabs $0x308,%r9
  0x0000000002dc1881: je     0x0000000002dc1891
  0x0000000002dc1887: movabs $0x318,%r9
  0x0000000002dc1891: mov    (%r8,%r9,1),%rdi
  0x0000000002dc1895: lea    0x1(%rdi),%rdi
  0x0000000002dc1899: mov    %rdi,(%r8,%r9,1)
  0x0000000002dc189d: je     0x0000000002dc1a52  ;*ifeq
                                                ; - java.util.HashMap::putVal@109 (line 636)

  0x0000000002dc18a3: cmp    $0x0,%rsi
  0x0000000002dc18a7: jne    0x0000000002dc18c3
  0x0000000002dc18a9: movabs $0x1be62f90,%r9    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc18b3: orl    $0x100,0x320(%r9)
  0x0000000002dc18be: jmpq   0x0000000002dc1984
  0x0000000002dc18c3: movabs $0x7c0039768,%rdi  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x0000000002dc18cd: mov    0x8(%rsi),%r8d
  0x0000000002dc18d1: shl    $0x3,%r8
  0x0000000002dc18d5: cmp    %r8,%rdi
  0x0000000002dc18d8: jne    0x0000000002dc1968
  0x0000000002dc18de: movabs $0x1be62f90,%r9    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc18e8: mov    0x8(%rsi),%edi
  0x0000000002dc18eb: shl    $0x3,%rdi
  0x0000000002dc18ef: cmp    0x330(%r9),%rdi
  0x0000000002dc18f6: jne    0x0000000002dc1905
  0x0000000002dc18f8: addq   $0x1,0x338(%r9)
  0x0000000002dc1900: jmpq   0x0000000002dc1984
  0x0000000002dc1905: cmp    0x340(%r9),%rdi
  0x0000000002dc190c: jne    0x0000000002dc191b
  0x0000000002dc190e: addq   $0x1,0x348(%r9)
  0x0000000002dc1916: jmpq   0x0000000002dc1984
  0x0000000002dc191b: cmpq   $0x0,0x330(%r9)
  0x0000000002dc1926: jne    0x0000000002dc193f
  0x0000000002dc1928: mov    %rdi,0x330(%r9)
  0x0000000002dc192f: movq   $0x1,0x338(%r9)
  0x0000000002dc193a: jmpq   0x0000000002dc1984
  0x0000000002dc193f: cmpq   $0x0,0x340(%r9)
  0x0000000002dc194a: jne    0x0000000002dc1963
  0x0000000002dc194c: mov    %rdi,0x340(%r9)
  0x0000000002dc1953: movq   $0x1,0x348(%r9)
  0x0000000002dc195e: jmpq   0x0000000002dc1984
  0x0000000002dc1963: jmpq   0x0000000002dc1984
  0x0000000002dc1968: movabs $0x1be62f90,%r9    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1972: subq   $0x1,0x328(%r9)
  0x0000000002dc197a: jmpq   0x0000000002dc22b2
  0x0000000002dc197f: jmpq   0x0000000002dc1984
  0x0000000002dc1984: mov    %rsi,%rdx          ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 637)

  0x0000000002dc1987: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002dc22bb
  0x0000000002dc198a: mov    %rdx,%r8
  0x0000000002dc198d: movabs $0x1be62f90,%r9    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1997: mov    0x8(%r8),%r8d
  0x0000000002dc199b: shl    $0x3,%r8
  0x0000000002dc199f: cmp    0x360(%r9),%r8
  0x0000000002dc19a6: jne    0x0000000002dc19b5
  0x0000000002dc19a8: addq   $0x1,0x368(%r9)
  0x0000000002dc19b0: jmpq   0x0000000002dc1a1b
  0x0000000002dc19b5: cmp    0x370(%r9),%r8
  0x0000000002dc19bc: jne    0x0000000002dc19cb
  0x0000000002dc19be: addq   $0x1,0x378(%r9)
  0x0000000002dc19c6: jmpq   0x0000000002dc1a1b
  0x0000000002dc19cb: cmpq   $0x0,0x360(%r9)
  0x0000000002dc19d6: jne    0x0000000002dc19ef
  0x0000000002dc19d8: mov    %r8,0x360(%r9)
  0x0000000002dc19df: movq   $0x1,0x368(%r9)
  0x0000000002dc19ea: jmpq   0x0000000002dc1a1b
  0x0000000002dc19ef: cmpq   $0x0,0x370(%r9)
  0x0000000002dc19fa: jne    0x0000000002dc1a13
  0x0000000002dc19fc: mov    %r8,0x370(%r9)
  0x0000000002dc1a03: movq   $0x1,0x378(%r9)
  0x0000000002dc1a0e: jmpq   0x0000000002dc1a1b
  0x0000000002dc1a13: addq   $0x1,0x358(%r9)
  0x0000000002dc1a1b: mov    0x48(%rsp),%r8
  0x0000000002dc1a20: mov    0x68(%rsp),%r9
  0x0000000002dc1a25: mov    0x40(%rsp),%edi
  0x0000000002dc1a29: mov    0x50(%rsp),%rsi
  0x0000000002dc1a2e: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)

  0x0000000002dc1a33: nop
  0x0000000002dc1a34: nop
  0x0000000002dc1a35: nop
  0x0000000002dc1a36: nop
  0x0000000002dc1a37: callq  0x0000000002cf61a0  ; OopMap{[72]=Oop [88]=Oop off=2236}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {optimized virtual_call}
  0x0000000002dc1a3c: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1a46: incl   0x388(%r8)
  0x0000000002dc1a4d: jmpq   0x0000000002dc1eee  ;*goto
                                                ; - java.util.HashMap::putVal@128 (line 637)

  0x0000000002dc1a52: mov    $0x0,%edi          ;*aload
                                                ; - java.util.HashMap::putVal@134 (line 640)

  0x0000000002dc1a57: nop
  0x0000000002dc1a58: mov    %edi,0x78(%rsp)
  0x0000000002dc1a5c: mov    0x50(%rsp),%r9
  0x0000000002dc1a61: mov    0x40(%rsp),%r8d
  0x0000000002dc1a66: mov    0x18(%rsi),%ebx    ; implicit exception: dispatches to 0x0000000002dc22c0
  0x0000000002dc1a69: shl    $0x3,%rbx          ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 640)

  0x0000000002dc1a6d: mov    %rbx,0x80(%rsp)
  0x0000000002dc1a75: cmp    $0x0,%rbx
  0x0000000002dc1a79: movabs $0x1be62f90,%rdx   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1a83: movabs $0x3a0,%rax
  0x0000000002dc1a8d: jne    0x0000000002dc1a9d
  0x0000000002dc1a93: movabs $0x3b0,%rax
  0x0000000002dc1a9d: mov    (%rdx,%rax,1),%rcx
  0x0000000002dc1aa1: lea    0x1(%rcx),%rcx
  0x0000000002dc1aa5: mov    %rcx,(%rdx,%rax,1)
  0x0000000002dc1aa9: je     0x0000000002dc1cd9  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@142 (line 640)

  0x0000000002dc1aaf: mov    0xc(%rbx),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ; implicit exception: dispatches to 0x0000000002dc22c5
  0x0000000002dc1ab2: cmp    %r8d,%edx
  0x0000000002dc1ab5: movabs $0x1be62f90,%rdx   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1abf: movabs $0x458,%rsi
  0x0000000002dc1ac9: jne    0x0000000002dc1ad9
  0x0000000002dc1acf: movabs $0x468,%rsi
  0x0000000002dc1ad9: mov    (%rdx,%rsi,1),%rax
  0x0000000002dc1add: lea    0x1(%rax),%rax
  0x0000000002dc1ae1: mov    %rax,(%rdx,%rsi,1)
  0x0000000002dc1ae5: jne    0x0000000002dc1c4d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@181 (line 646)

  0x0000000002dc1aeb: mov    0x10(%rbx),%edx
  0x0000000002dc1aee: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::putVal@186 (line 646)

  0x0000000002dc1af2: cmp    %r9,%rdx
  0x0000000002dc1af5: movabs $0x1be62f90,%rsi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1aff: movabs $0x478,%rax
  0x0000000002dc1b09: je     0x0000000002dc1b19
  0x0000000002dc1b0f: movabs $0x488,%rax
  0x0000000002dc1b19: mov    (%rsi,%rax,1),%rcx
  0x0000000002dc1b1d: lea    0x1(%rcx),%rcx
  0x0000000002dc1b21: mov    %rcx,(%rsi,%rax,1)
  0x0000000002dc1b25: je     0x0000000002dc1cae  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@193 (line 646)

  0x0000000002dc1b2b: cmp    $0x0,%r9
  0x0000000002dc1b2f: movabs $0x1be62f90,%rsi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1b39: movabs $0x498,%rax
  0x0000000002dc1b43: je     0x0000000002dc1b53
  0x0000000002dc1b49: movabs $0x4a8,%rax
  0x0000000002dc1b53: mov    (%rsi,%rax,1),%rcx
  0x0000000002dc1b57: lea    0x1(%rcx),%rcx
  0x0000000002dc1b5b: mov    %rcx,(%rsi,%rax,1)
  0x0000000002dc1b5f: je     0x0000000002dc1c4d  ;*ifnull
                                                ; - java.util.HashMap::putVal@197 (line 646)

  0x0000000002dc1b65: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000000002dc22ca
  0x0000000002dc1b68: mov    %r9,%rsi
  0x0000000002dc1b6b: movabs $0x1be62f90,%rax   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1b75: mov    0x8(%rsi),%esi
  0x0000000002dc1b78: shl    $0x3,%rsi
  0x0000000002dc1b7c: cmp    0x4c0(%rax),%rsi
  0x0000000002dc1b83: jne    0x0000000002dc1b92
  0x0000000002dc1b85: addq   $0x1,0x4c8(%rax)
  0x0000000002dc1b8d: jmpq   0x0000000002dc1bf8
  0x0000000002dc1b92: cmp    0x4d0(%rax),%rsi
  0x0000000002dc1b99: jne    0x0000000002dc1ba8
  0x0000000002dc1b9b: addq   $0x1,0x4d8(%rax)
  0x0000000002dc1ba3: jmpq   0x0000000002dc1bf8
  0x0000000002dc1ba8: cmpq   $0x0,0x4c0(%rax)
  0x0000000002dc1bb3: jne    0x0000000002dc1bcc
  0x0000000002dc1bb5: mov    %rsi,0x4c0(%rax)
  0x0000000002dc1bbc: movq   $0x1,0x4c8(%rax)
  0x0000000002dc1bc7: jmpq   0x0000000002dc1bf8
  0x0000000002dc1bcc: cmpq   $0x0,0x4d0(%rax)
  0x0000000002dc1bd7: jne    0x0000000002dc1bf0
  0x0000000002dc1bd9: mov    %rsi,0x4d0(%rax)
  0x0000000002dc1be0: movq   $0x1,0x4d8(%rax)
  0x0000000002dc1beb: jmpq   0x0000000002dc1bf8
  0x0000000002dc1bf0: addq   $0x1,0x4b8(%rax)
  0x0000000002dc1bf8: mov    %rdx,%r8
  0x0000000002dc1bfb: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)

  0x0000000002dc1bfe: nop
  0x0000000002dc1bff: nop
  0x0000000002dc1c00: nop
  0x0000000002dc1c01: nop
  0x0000000002dc1c02: nop
  0x0000000002dc1c03: nop
  0x0000000002dc1c04: nop
  0x0000000002dc1c05: movabs $0xffffffffffffffff,%rax
  0x0000000002dc1c0f: callq  0x0000000002cf63e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2708}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {virtual_call}
  0x0000000002dc1c14: cmp    $0x0,%eax
  0x0000000002dc1c17: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1c21: movabs $0x4e8,%r9
  0x0000000002dc1c2b: je     0x0000000002dc1c3b
  0x0000000002dc1c31: movabs $0x4f8,%r9
  0x0000000002dc1c3b: mov    (%r8,%r9,1),%rdi
  0x0000000002dc1c3f: lea    0x1(%rdi),%rdi
  0x0000000002dc1c43: mov    %rdi,(%r8,%r9,1)
  0x0000000002dc1c47: jne    0x0000000002dc1cbb  ;*ifeq
                                                ; - java.util.HashMap::putVal@206 (line 647)

  0x0000000002dc1c4d: mov    0x78(%rsp),%edi
  0x0000000002dc1c51: inc    %edi
  0x0000000002dc1c53: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1c5d: mov    0xe0(%r8),%r9d
  0x0000000002dc1c64: add    $0x8,%r9d
  0x0000000002dc1c68: mov    %r9d,0xe0(%r8)
  0x0000000002dc1c6f: movabs $0x1bd56f88,%r8    ;   {metadata({method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1c79: and    $0xfff8,%r9d
  0x0000000002dc1c80: cmp    $0x0,%r9d
  0x0000000002dc1c84: je     0x0000000002dc22cf  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2826}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x0000000002dc1c8a: test   %eax,-0x21c1b90(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dc1c90: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1c9a: incl   0x520(%r8)
  0x0000000002dc1ca1: mov    0x80(%rsp),%rsi
  0x0000000002dc1ca9: jmpq   0x0000000002dc1a58  ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x0000000002dc1cae: mov    0x80(%rsp),%rax
  0x0000000002dc1cb6: jmpq   0x0000000002dc1eee  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x0000000002dc1cbb: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1cc5: incl   0x508(%r8)
  0x0000000002dc1ccc: mov    0x80(%rsp),%rax
  0x0000000002dc1cd4: jmpq   0x0000000002dc1eee  ;*goto
                                                ; - java.util.HashMap::putVal@209 (line 648)

  0x0000000002dc1cd9: mov    %rsi,0x88(%rsp)
  0x0000000002dc1ce1: mov    0x48(%rsp),%rdx
  0x0000000002dc1ce6: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1cf0: mov    0x8(%rdx),%edx
  0x0000000002dc1cf3: shl    $0x3,%rdx
  0x0000000002dc1cf7: cmp    0x3c8(%r8),%rdx
  0x0000000002dc1cfe: jne    0x0000000002dc1d0d
  0x0000000002dc1d00: addq   $0x1,0x3d0(%r8)
  0x0000000002dc1d08: jmpq   0x0000000002dc1d73
  0x0000000002dc1d0d: cmp    0x3d8(%r8),%rdx
  0x0000000002dc1d14: jne    0x0000000002dc1d23
  0x0000000002dc1d16: addq   $0x1,0x3e0(%r8)
  0x0000000002dc1d1e: jmpq   0x0000000002dc1d73
  0x0000000002dc1d23: cmpq   $0x0,0x3c8(%r8)
  0x0000000002dc1d2e: jne    0x0000000002dc1d47
  0x0000000002dc1d30: mov    %rdx,0x3c8(%r8)
  0x0000000002dc1d37: movq   $0x1,0x3d0(%r8)
  0x0000000002dc1d42: jmpq   0x0000000002dc1d73
  0x0000000002dc1d47: cmpq   $0x0,0x3d8(%r8)
  0x0000000002dc1d52: jne    0x0000000002dc1d6b
  0x0000000002dc1d54: mov    %rdx,0x3d8(%r8)
  0x0000000002dc1d5b: movq   $0x1,0x3e0(%r8)
  0x0000000002dc1d66: jmpq   0x0000000002dc1d73
  0x0000000002dc1d6b: addq   $0x1,0x3c0(%r8)
  0x0000000002dc1d73: mov    0x40(%rsp),%r8d
  0x0000000002dc1d78: mov    0x58(%rsp),%rdi
  0x0000000002dc1d7d: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x0000000002dc1d87: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 641)

  0x0000000002dc1d8c: nop
  0x0000000002dc1d8d: movabs $0xffffffffffffffff,%rax
  0x0000000002dc1d97: callq  0x0000000002cf63e0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=3100}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 641)
                                                ;   {virtual_call}
  0x0000000002dc1d9c: mov    0x88(%rsp),%rsi
  0x0000000002dc1da4: mov    %rax,%r10
  0x0000000002dc1da7: shr    $0x3,%r10
  0x0000000002dc1dab: mov    %r10d,0x18(%rsi)
  0x0000000002dc1daf: shr    $0x9,%rsi
  0x0000000002dc1db3: movabs $0xea5d000,%r8
  0x0000000002dc1dbd: movb   $0x0,(%rsi,%r8,1)  ;*putfield next
                                                ; - java.util.HashMap::putVal@155 (line 641)

  0x0000000002dc1dc2: mov    0x78(%rsp),%edi
  0x0000000002dc1dc6: cmp    $0x7,%edi
  0x0000000002dc1dc9: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1dd3: movabs $0x3f0,%r9
  0x0000000002dc1ddd: jl     0x0000000002dc1ded
  0x0000000002dc1de3: movabs $0x400,%r9
  0x0000000002dc1ded: mov    (%r8,%r9,1),%rdx
  0x0000000002dc1df1: lea    0x1(%rdx),%rdx
  0x0000000002dc1df5: mov    %rdx,(%r8,%r9,1)
  0x0000000002dc1df9: jge    0x0000000002dc1e0c  ;*if_icmplt
                                                ; - java.util.HashMap::putVal@162 (line 642)

  0x0000000002dc1dff: mov    0x80(%rsp),%rax
  0x0000000002dc1e07: jmpq   0x0000000002dc1eee  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x0000000002dc1e0c: mov    0x68(%rsp),%rbx
  0x0000000002dc1e11: mov    0x40(%rsp),%r9d
  0x0000000002dc1e16: mov    0x48(%rsp),%rdx
  0x0000000002dc1e1b: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1e25: mov    0x8(%rdx),%edx
  0x0000000002dc1e28: shl    $0x3,%rdx
  0x0000000002dc1e2c: cmp    0x418(%r8),%rdx
  0x0000000002dc1e33: jne    0x0000000002dc1e42
  0x0000000002dc1e35: addq   $0x1,0x420(%r8)
  0x0000000002dc1e3d: jmpq   0x0000000002dc1ea8
  0x0000000002dc1e42: cmp    0x428(%r8),%rdx
  0x0000000002dc1e49: jne    0x0000000002dc1e58
  0x0000000002dc1e4b: addq   $0x1,0x430(%r8)
  0x0000000002dc1e53: jmpq   0x0000000002dc1ea8
  0x0000000002dc1e58: cmpq   $0x0,0x418(%r8)
  0x0000000002dc1e63: jne    0x0000000002dc1e7c
  0x0000000002dc1e65: mov    %rdx,0x418(%r8)
  0x0000000002dc1e6c: movq   $0x1,0x420(%r8)
  0x0000000002dc1e77: jmpq   0x0000000002dc1ea8
  0x0000000002dc1e7c: cmpq   $0x0,0x428(%r8)
  0x0000000002dc1e87: jne    0x0000000002dc1ea0
  0x0000000002dc1e89: mov    %rdx,0x428(%r8)
  0x0000000002dc1e90: movq   $0x1,0x430(%r8)
  0x0000000002dc1e9b: jmpq   0x0000000002dc1ea8
  0x0000000002dc1ea0: addq   $0x1,0x410(%r8)
  0x0000000002dc1ea8: mov    %rbx,%r8
  0x0000000002dc1eab: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 643)

  0x0000000002dc1eb0: nop
  0x0000000002dc1eb1: nop
  0x0000000002dc1eb2: nop
  0x0000000002dc1eb3: nop
  0x0000000002dc1eb4: nop
  0x0000000002dc1eb5: nop
  0x0000000002dc1eb6: nop
  0x0000000002dc1eb7: callq  0x0000000002cf61a0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=3388}
                                                ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 643)
                                                ;   {optimized virtual_call}
  0x0000000002dc1ebc: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1ec6: incl   0x440(%r8)
  0x0000000002dc1ecd: mov    0x80(%rsp),%rax
  0x0000000002dc1ed5: jmpq   0x0000000002dc1eee  ;*goto
                                                ; - java.util.HashMap::putVal@172 (line 643)

  0x0000000002dc1eda: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1ee4: incl   0x2c0(%r8)
  0x0000000002dc1eeb: mov    %rsi,%rax          ;*goto
                                                ; - java.util.HashMap::putVal@101 (line 635)

  0x0000000002dc1eee: cmp    $0x0,%rax
  0x0000000002dc1ef2: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1efc: movabs $0x538,%rdx
  0x0000000002dc1f06: je     0x0000000002dc1f16
  0x0000000002dc1f0c: movabs $0x548,%rdx
  0x0000000002dc1f16: mov    (%r8,%rdx,1),%rsi
  0x0000000002dc1f1a: lea    0x1(%rsi),%rsi
  0x0000000002dc1f1e: mov    %rsi,(%r8,%rdx,1)
  0x0000000002dc1f22: jne    0x0000000002dc1f88  ;*ifnull
                                                ; - java.util.HashMap::putVal@224 (line 652)

  0x0000000002dc1f28: mov    0x48(%rsp),%rdx
  0x0000000002dc1f2d: mov    0x18(%rdx),%r8d    ;*getfield modCount
                                                ; - java.util.HashMap::putVal@261 (line 660)

  0x0000000002dc1f31: inc    %r8d
  0x0000000002dc1f34: mov    %r8d,0x18(%rdx)    ;*putfield modCount
                                                ; - java.util.HashMap::putVal@266 (line 660)

  0x0000000002dc1f38: mov    0x14(%rdx),%r8d    ;*getfield size
                                                ; - java.util.HashMap::putVal@271 (line 661)

  0x0000000002dc1f3c: inc    %r8d
  0x0000000002dc1f3f: mov    %r8d,0x14(%rdx)    ;*putfield size
                                                ; - java.util.HashMap::putVal@277 (line 661)

  0x0000000002dc1f43: mov    0x1c(%rdx),%esi    ;*getfield threshold
                                                ; - java.util.HashMap::putVal@281 (line 661)

  0x0000000002dc1f46: cmp    %esi,%r8d
  0x0000000002dc1f49: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1f53: movabs $0x5c8,%rsi
  0x0000000002dc1f5d: jle    0x0000000002dc1f6d
  0x0000000002dc1f63: movabs $0x5d8,%rsi
  0x0000000002dc1f6d: mov    (%r8,%rsi,1),%rdi
  0x0000000002dc1f71: lea    0x1(%rdi),%rdi
  0x0000000002dc1f75: mov    %rdi,(%r8,%rsi,1)
  0x0000000002dc1f79: jg     0x0000000002dc20f3  ;*if_icmple
                                                ; - java.util.HashMap::putVal@284 (line 661)

  0x0000000002dc1f7f: mov    0x60(%rsp),%ecx
  0x0000000002dc1f83: jmpq   0x0000000002dc219d  ;*aload_0
                                                ; - java.util.HashMap::putVal@292 (line 663)

  0x0000000002dc1f88: mov    0x44(%rsp),%esi
  0x0000000002dc1f8c: mov    0x48(%rsp),%rdx
  0x0000000002dc1f91: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x0000000002dc22e6
  0x0000000002dc1f94: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 653)

  0x0000000002dc1f98: cmp    $0x0,%esi
  0x0000000002dc1f9b: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1fa5: movabs $0x558,%rsi
  0x0000000002dc1faf: je     0x0000000002dc1fbf
  0x0000000002dc1fb5: movabs $0x568,%rsi
  0x0000000002dc1fbf: mov    (%r8,%rsi,1),%rbx
  0x0000000002dc1fc3: lea    0x1(%rbx),%rbx
  0x0000000002dc1fc7: mov    %rbx,(%r8,%rsi,1)
  0x0000000002dc1fcb: je     0x0000000002dc200b  ;*ifeq
                                                ; - java.util.HashMap::putVal@236 (line 654)

  0x0000000002dc1fd1: cmp    $0x0,%rdi
  0x0000000002dc1fd5: movabs $0x1be62f90,%r8    ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc1fdf: movabs $0x578,%rsi
  0x0000000002dc1fe9: jne    0x0000000002dc1ff9
  0x0000000002dc1fef: movabs $0x588,%rsi
  0x0000000002dc1ff9: mov    (%r8,%rsi,1),%rbx
  0x0000000002dc1ffd: lea    0x1(%rbx),%rbx
  0x0000000002dc2001: mov    %rbx,(%r8,%rsi,1)
  0x0000000002dc2005: jne    0x0000000002dc2031  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@241 (line 654)

  0x0000000002dc200b: mov    0x58(%rsp),%r8
  0x0000000002dc2010: mov    %r8,%r10
  0x0000000002dc2013: shr    $0x3,%r10
  0x0000000002dc2017: mov    %r10d,0x14(%rax)
  0x0000000002dc201b: mov    %rax,%r8
  0x0000000002dc201e: shr    $0x9,%r8
  0x0000000002dc2022: movabs $0xea5d000,%rsi
  0x0000000002dc202c: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.util.HashMap::putVal@247 (line 655)

  0x0000000002dc2031: mov    %rdi,0x90(%rsp)
  0x0000000002dc2039: mov    %rdx,%r8
  0x0000000002dc203c: movabs $0x1be62f90,%rsi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc2046: mov    0x8(%r8),%r8d
  0x0000000002dc204a: shl    $0x3,%r8
  0x0000000002dc204e: cmp    0x5a0(%rsi),%r8
  0x0000000002dc2055: jne    0x0000000002dc2064
  0x0000000002dc2057: addq   $0x1,0x5a8(%rsi)
  0x0000000002dc205f: jmpq   0x0000000002dc20ca
  0x0000000002dc2064: cmp    0x5b0(%rsi),%r8
  0x0000000002dc206b: jne    0x0000000002dc207a
  0x0000000002dc206d: addq   $0x1,0x5b8(%rsi)
  0x0000000002dc2075: jmpq   0x0000000002dc20ca
  0x0000000002dc207a: cmpq   $0x0,0x5a0(%rsi)
  0x0000000002dc2085: jne    0x0000000002dc209e
  0x0000000002dc2087: mov    %r8,0x5a0(%rsi)
  0x0000000002dc208e: movq   $0x1,0x5a8(%rsi)
  0x0000000002dc2099: jmpq   0x0000000002dc20ca
  0x0000000002dc209e: cmpq   $0x0,0x5b0(%rsi)
  0x0000000002dc20a9: jne    0x0000000002dc20c2
  0x0000000002dc20ab: mov    %r8,0x5b0(%rsi)
  0x0000000002dc20b2: movq   $0x1,0x5b8(%rsi)
  0x0000000002dc20bd: jmpq   0x0000000002dc20ca
  0x0000000002dc20c2: addq   $0x1,0x598(%rsi)
  0x0000000002dc20ca: mov    %rax,%r8           ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 656)

  0x0000000002dc20cd: movabs $0xffffffffffffffff,%rax
  0x0000000002dc20d7: callq  0x0000000002cf63e0  ; OopMap{[144]=Oop off=3932}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 656)
                                                ;   {virtual_call}
  0x0000000002dc20dc: mov    0x90(%rsp),%rax
  0x0000000002dc20e4: add    $0xa0,%rsp
  0x0000000002dc20eb: pop    %rbp
  0x0000000002dc20ec: test   %eax,-0x21c1ff2(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc20f2: retq                      ;*areturn
                                                ; - java.util.HashMap::putVal@258 (line 657)

  0x0000000002dc20f3: mov    %rdx,%rsi
  0x0000000002dc20f6: movabs $0x1be62f90,%rdi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc2100: mov    0x8(%rsi),%esi
  0x0000000002dc2103: shl    $0x3,%rsi
  0x0000000002dc2107: cmp    0x5f0(%rdi),%rsi
  0x0000000002dc210e: jne    0x0000000002dc211d
  0x0000000002dc2110: addq   $0x1,0x5f8(%rdi)
  0x0000000002dc2118: jmpq   0x0000000002dc2183
  0x0000000002dc211d: cmp    0x600(%rdi),%rsi
  0x0000000002dc2124: jne    0x0000000002dc2133
  0x0000000002dc2126: addq   $0x1,0x608(%rdi)
  0x0000000002dc212e: jmpq   0x0000000002dc2183
  0x0000000002dc2133: cmpq   $0x0,0x5f0(%rdi)
  0x0000000002dc213e: jne    0x0000000002dc2157
  0x0000000002dc2140: mov    %rsi,0x5f0(%rdi)
  0x0000000002dc2147: movq   $0x1,0x5f8(%rdi)
  0x0000000002dc2152: jmpq   0x0000000002dc2183
  0x0000000002dc2157: cmpq   $0x0,0x600(%rdi)
  0x0000000002dc2162: jne    0x0000000002dc217b
  0x0000000002dc2164: mov    %rsi,0x600(%rdi)
  0x0000000002dc216b: movq   $0x1,0x608(%rdi)
  0x0000000002dc2176: jmpq   0x0000000002dc2183
  0x0000000002dc217b: addq   $0x1,0x5e8(%rdi)
  0x0000000002dc2183: mov    %rdx,%rsi
  0x0000000002dc2186: mov    %rsi,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 662)

  0x0000000002dc2189: nop
  0x0000000002dc218a: nop
  0x0000000002dc218b: nop
  0x0000000002dc218c: nop
  0x0000000002dc218d: nop
  0x0000000002dc218e: nop
  0x0000000002dc218f: callq  0x0000000002cf61a0  ; OopMap{[72]=Oop off=4116}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 662)
                                                ;   {optimized virtual_call}
  0x0000000002dc2194: mov    0x60(%rsp),%ecx
  0x0000000002dc2198: mov    0x48(%rsp),%rdx
  0x0000000002dc219d: mov    %rdx,%r8
  0x0000000002dc21a0: movabs $0x1be62f90,%rsi   ;   {metadata(method data for {method} {0x000000001bd56f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dc21aa: mov    0x8(%r8),%r8d
  0x0000000002dc21ae: shl    $0x3,%r8
  0x0000000002dc21b2: cmp    0x620(%rsi),%r8
  0x0000000002dc21b9: jne    0x0000000002dc21c8
  0x0000000002dc21bb: addq   $0x1,0x628(%rsi)
  0x0000000002dc21c3: jmpq   0x0000000002dc222e
  0x0000000002dc21c8: cmp    0x630(%rsi),%r8
  0x0000000002dc21cf: jne    0x0000000002dc21de
  0x0000000002dc21d1: addq   $0x1,0x638(%rsi)
  0x0000000002dc21d9: jmpq   0x0000000002dc222e
  0x0000000002dc21de: cmpq   $0x0,0x620(%rsi)
  0x0000000002dc21e9: jne    0x0000000002dc2202
  0x0000000002dc21eb: mov    %r8,0x620(%rsi)
  0x0000000002dc21f2: movq   $0x1,0x628(%rsi)
  0x0000000002dc21fd: jmpq   0x0000000002dc222e
  0x0000000002dc2202: cmpq   $0x0,0x630(%rsi)
  0x0000000002dc220d: jne    0x0000000002dc2226
  0x0000000002dc220f: mov    %r8,0x630(%rsi)
  0x0000000002dc2216: movq   $0x1,0x638(%rsi)
  0x0000000002dc2221: jmpq   0x0000000002dc222e
  0x0000000002dc2226: addq   $0x1,0x618(%rsi)
  0x0000000002dc222e: mov    %rcx,%r8           ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 663)

  0x0000000002dc2231: nop
  0x0000000002dc2232: nop
  0x0000000002dc2233: nop
  0x0000000002dc2234: nop
  0x0000000002dc2235: movabs $0xffffffffffffffff,%rax
  0x0000000002dc223f: callq  0x0000000002cf63e0  ; OopMap{off=4292}
                                                ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 663)
                                                ;   {virtual_call}
  0x0000000002dc2244: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002dc224e: add    $0xa0,%rsp
  0x0000000002dc2255: pop    %rbp
  0x0000000002dc2256: test   %eax,-0x21c215c(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc225c: retq   
  0x0000000002dc225d: mov    %rbx,0x8(%rsp)
  0x0000000002dc2262: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc226a: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop off=4335}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 627)
                                                ;   {runtime_call}
  0x0000000002dc226f: jmpq   0x0000000002dc11f0
  0x0000000002dc2274: callq  0x0000000002dad680  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop off=4345}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ;   {runtime_call}
  0x0000000002dc2279: callq  0x0000000002dad680  ; OopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop off=4350}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ;   {runtime_call}
  0x0000000002dc227e: callq  0x0000000002dad680  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4355}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x0000000002dc2283: callq  0x0000000002dad680  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4360}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x0000000002dc2288: mov    %rax,(%rsp)
  0x0000000002dc228c: callq  0x0000000002dac940  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4369}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x0000000002dc2291: mov    %r8,(%rsp)
  0x0000000002dc2295: callq  0x0000000002dac940  ; OopMap{[72]=Oop rax=Oop rbx=Oop off=4378}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x0000000002dc229a: callq  0x0000000002dad680  ; OopMap{[72]=Oop rax=Oop off=4383}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x0000000002dc229f: mov    %rax,(%rsp)
  0x0000000002dc22a3: callq  0x0000000002daf640  ; OopMap{[72]=Oop rax=Oop off=4392}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x0000000002dc22a8: callq  0x0000000002dad680  ; OopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop off=4397}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ;   {runtime_call}
  0x0000000002dc22ad: callq  0x0000000002dad680  ; OopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop off=4402}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {runtime_call}
  0x0000000002dc22b2: mov    %rsi,(%rsp)
  0x0000000002dc22b6: callq  0x0000000002daf880  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop off=4411}
                                                ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 637)
                                                ;   {runtime_call}
  0x0000000002dc22bb: callq  0x0000000002dad680  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop off=4416}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {runtime_call}
  0x0000000002dc22c0: callq  0x0000000002dad680  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop off=4421}
                                                ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 640)
                                                ;   {runtime_call}
  0x0000000002dc22c5: callq  0x0000000002dad680  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop off=4426}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ;   {runtime_call}
  0x0000000002dc22ca: callq  0x0000000002dad680  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop off=4431}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {runtime_call}
  0x0000000002dc22cf: mov    %r8,0x8(%rsp)
  0x0000000002dc22d4: movq   $0xdb,(%rsp)
  0x0000000002dc22dc: callq  0x0000000002db1d60  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=4449}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)
                                                ;   {runtime_call}
  0x0000000002dc22e1: jmpq   0x0000000002dc1c8a
  0x0000000002dc22e6: callq  0x0000000002dad680  ; OopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop off=4459}
                                                ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 653)
                                                ;   {runtime_call}
  0x0000000002dc22eb: nop
  0x0000000002dc22ec: nop
  0x0000000002dc22ed: mov    0x2a8(%r15),%rax
  0x0000000002dc22f4: movabs $0x0,%r10
  0x0000000002dc22fe: mov    %r10,0x2a8(%r15)
  0x0000000002dc2305: movabs $0x0,%r10
  0x0000000002dc230f: mov    %r10,0x2b0(%r15)
  0x0000000002dc2316: add    $0xa0,%rsp
  0x0000000002dc231d: pop    %rbp
  0x0000000002dc231e: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dc2323: hlt    
  0x0000000002dc2324: hlt    
  0x0000000002dc2325: hlt    
  0x0000000002dc2326: hlt    
  0x0000000002dc2327: hlt    
  0x0000000002dc2328: hlt    
  0x0000000002dc2329: hlt    
  0x0000000002dc232a: hlt    
  0x0000000002dc232b: hlt    
  0x0000000002dc232c: hlt    
  0x0000000002dc232d: hlt    
  0x0000000002dc232e: hlt    
  0x0000000002dc232f: hlt    
  0x0000000002dc2330: hlt    
  0x0000000002dc2331: hlt    
  0x0000000002dc2332: hlt    
  0x0000000002dc2333: hlt    
  0x0000000002dc2334: hlt    
  0x0000000002dc2335: hlt    
  0x0000000002dc2336: hlt    
  0x0000000002dc2337: hlt    
  0x0000000002dc2338: hlt    
  0x0000000002dc2339: hlt    
  0x0000000002dc233a: hlt    
  0x0000000002dc233b: hlt    
  0x0000000002dc233c: hlt    
  0x0000000002dc233d: hlt    
  0x0000000002dc233e: hlt    
  0x0000000002dc233f: hlt    
[Stub Code]
  0x0000000002dc2340: nop                       ;   {no_reloc}
  0x0000000002dc2341: nop
  0x0000000002dc2342: nop
  0x0000000002dc2343: nop
  0x0000000002dc2344: nop
  0x0000000002dc2345: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc234f: jmpq   0x0000000002dc234f  ;   {runtime_call}
  0x0000000002dc2354: nop
  0x0000000002dc2355: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc235f: jmpq   0x0000000002dc235f  ;   {runtime_call}
  0x0000000002dc2364: nop
  0x0000000002dc2365: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc236f: jmpq   0x0000000002dc236f  ;   {runtime_call}
  0x0000000002dc2374: nop
  0x0000000002dc2375: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc237f: jmpq   0x0000000002dc237f  ;   {runtime_call}
  0x0000000002dc2384: nop
  0x0000000002dc2385: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc238f: jmpq   0x0000000002dc238f  ;   {runtime_call}
  0x0000000002dc2394: nop
  0x0000000002dc2395: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc239f: jmpq   0x0000000002dc239f  ;   {runtime_call}
  0x0000000002dc23a4: nop
  0x0000000002dc23a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc23af: jmpq   0x0000000002dc23af  ;   {runtime_call}
  0x0000000002dc23b4: nop
  0x0000000002dc23b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc23bf: jmpq   0x0000000002dc23bf  ;   {runtime_call}
  0x0000000002dc23c4: nop
  0x0000000002dc23c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc23cf: jmpq   0x0000000002dc23cf  ;   {runtime_call}
  0x0000000002dc23d4: nop
  0x0000000002dc23d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc23df: jmpq   0x0000000002dc23df  ;   {runtime_call}
[Exception Handler]
  0x0000000002dc23e4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dc23e9: mov    %rsp,-0x28(%rsp)
  0x0000000002dc23ee: sub    $0x80,%rsp
  0x0000000002dc23f5: mov    %rax,0x78(%rsp)
  0x0000000002dc23fa: mov    %rcx,0x70(%rsp)
  0x0000000002dc23ff: mov    %rdx,0x68(%rsp)
  0x0000000002dc2404: mov    %rbx,0x60(%rsp)
  0x0000000002dc2409: mov    %rbp,0x50(%rsp)
  0x0000000002dc240e: mov    %rsi,0x48(%rsp)
  0x0000000002dc2413: mov    %rdi,0x40(%rsp)
  0x0000000002dc2418: mov    %r8,0x38(%rsp)
  0x0000000002dc241d: mov    %r9,0x30(%rsp)
  0x0000000002dc2422: mov    %r10,0x28(%rsp)
  0x0000000002dc2427: mov    %r11,0x20(%rsp)
  0x0000000002dc242c: mov    %r12,0x18(%rsp)
  0x0000000002dc2431: mov    %r13,0x10(%rsp)
  0x0000000002dc2436: mov    %r14,0x8(%rsp)
  0x0000000002dc243b: mov    %r15,(%rsp)
  0x0000000002dc243f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dc2449: movabs $0x2dc23e9,%rdx    ;   {internal_word}
  0x0000000002dc2453: mov    %rsp,%r8
  0x0000000002dc2456: and    $0xfffffffffffffff0,%rsp
  0x0000000002dc245a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dc245f: hlt    
[Deopt Handler Code]
  0x0000000002dc2460: movabs $0x2dc2460,%r10    ;   {section_word}
  0x0000000002dc246a: push   %r10
  0x0000000002dc246c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc2471: hlt    
  0x0000000002dc2472: hlt    
  0x0000000002dc2473: hlt    
  0x0000000002dc2474: hlt    
  0x0000000002dc2475: hlt    
  0x0000000002dc2476: hlt    
  0x0000000002dc2477: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x0000000002dc1180' size='8144' address='0x0000000002dc0f10' relocation_offset='288' insts_offset='624' stub_offset='5168' scopes_data_offset='5488' scopes_pcs_offset='6496' dependencies_offset='8032' nul_chk_table_offset='8040' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1423' backedge_count='141' iicount='1423' stamp='0.679'/>
<writer thread='22236'/>
<task_queued compile_id='26' method='java/lang/String hashCode ()I' bytes='55' count='5489' backedge_count='119321' iicount='5489' stamp='0.679' comment='tiered' hot_count='5489'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dbf110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bd9cf90} &apos;parentOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dbf260: mov    %eax,-0x6000(%rsp)
  0x0000000002dbf267: push   %rbp
  0x0000000002dbf268: sub    $0x30,%rsp
  0x0000000002dbf26c: movabs $0x1bda0c78,%rax
  0x0000000002dbf276: mov    0x8(%rax),%esi
  0x0000000002dbf279: add    $0x8,%esi
  0x0000000002dbf27c: mov    %esi,0x8(%rax)
  0x0000000002dbf27f: movabs $0x1bd9cf88,%rax   ;   {metadata({method} {0x000000001bd9cf90} &apos;parentOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;)}
  0x0000000002dbf289: and    $0x3ff8,%esi
  0x0000000002dbf28f: cmp    $0x0,%esi
  0x0000000002dbf292: je     0x0000000002dbf2cb  ;*aload_0
                                                ; - java.util.TreeMap::parentOf@0 (line 2204)

  0x0000000002dbf298: cmp    $0x0,%rdx
  0x0000000002dbf29c: jne    0x0000000002dbf2b8  ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)

  0x0000000002dbf2a2: movabs $0x0,%rax          ;*goto
                                                ; - java.util.TreeMap::parentOf@5 (line 2204)
                                                ;   {oop(NULL)}
  0x0000000002dbf2ac: add    $0x30,%rsp
  0x0000000002dbf2b0: pop    %rbp
  0x0000000002dbf2b1: test   %eax,-0x21bf1b7(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dbf2b7: retq   
  0x0000000002dbf2b8: mov    0x20(%rdx),%eax    ; implicit exception: dispatches to 0x0000000002dbf2df
  0x0000000002dbf2bb: shl    $0x3,%rax          ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9 (line 2204)

  0x0000000002dbf2bf: add    $0x30,%rsp
  0x0000000002dbf2c3: pop    %rbp
  0x0000000002dbf2c4: test   %eax,-0x21bf1ca(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dbf2ca: retq   
  0x0000000002dbf2cb: mov    %rax,0x8(%rsp)
  0x0000000002dbf2d0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dbf2d8: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=125}
                                                ;*synchronization entry
                                                ; - java.util.TreeMap::parentOf@-1 (line 2204)
                                                ;   {runtime_call}
  0x0000000002dbf2dd: jmp    0x0000000002dbf298
  0x0000000002dbf2df: callq  0x0000000002dad680  ; OopMap{off=132}
                                                ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9 (line 2204)
                                                ;   {runtime_call}
  0x0000000002dbf2e4: nop
  0x0000000002dbf2e5: nop
  0x0000000002dbf2e6: mov    0x2a8(%r15),%rax
  0x0000000002dbf2ed: movabs $0x0,%r10
  0x0000000002dbf2f7: mov    %r10,0x2a8(%r15)
  0x0000000002dbf2fe: movabs $0x0,%r10
  0x0000000002dbf308: mov    %r10,0x2b0(%r15)
  0x0000000002dbf30f: add    $0x30,%rsp
  0x0000000002dbf313: pop    %rbp
  0x0000000002dbf314: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dbf319: hlt    
  0x0000000002dbf31a: hlt    
  0x0000000002dbf31b: hlt    
  0x0000000002dbf31c: hlt    
  0x0000000002dbf31d: hlt    
  0x0000000002dbf31e: hlt    
  0x0000000002dbf31f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dbf320: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dbf325: mov    %rsp,-0x28(%rsp)
  0x0000000002dbf32a: sub    $0x80,%rsp
  0x0000000002dbf331: mov    %rax,0x78(%rsp)
  0x0000000002dbf336: mov    %rcx,0x70(%rsp)
  0x0000000002dbf33b: mov    %rdx,0x68(%rsp)
  0x0000000002dbf340: mov    %rbx,0x60(%rsp)
  0x0000000002dbf345: mov    %rbp,0x50(%rsp)
  0x0000000002dbf34a: mov    %rsi,0x48(%rsp)
  0x0000000002dbf34f: mov    %rdi,0x40(%rsp)
  0x0000000002dbf354: mov    %r8,0x38(%rsp)
  0x0000000002dbf359: mov    %r9,0x30(%rsp)
  0x0000000002dbf35e: mov    %r10,0x28(%rsp)
  0x0000000002dbf363: mov    %r11,0x20(%rsp)
  0x0000000002dbf368: mov    %r12,0x18(%rsp)
  0x0000000002dbf36d: mov    %r13,0x10(%rsp)
  0x0000000002dbf372: mov    %r14,0x8(%rsp)
  0x0000000002dbf377: mov    %r15,(%rsp)
  0x0000000002dbf37b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dbf385: movabs $0x2dbf325,%rdx    ;   {internal_word}
  0x0000000002dbf38f: mov    %rsp,%r8
  0x0000000002dbf392: and    $0xfffffffffffffff0,%rsp
  0x0000000002dbf396: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dbf39b: hlt    
[Deopt Handler Code]
  0x0000000002dbf39c: movabs $0x2dbf39c,%r10    ;   {section_word}
  0x0000000002dbf3a6: push   %r10
  0x0000000002dbf3a8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dbf3ad: hlt    
  0x0000000002dbf3ae: hlt    
  0x0000000002dbf3af: hlt    
<nmethod compile_id='22' compiler='C1' level='2' entry='0x0000000002dbf260' size='880' address='0x0000000002dbf110' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='728' dependencies_offset='856' nul_chk_table_offset='864' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10339' iicount='10339' stamp='0.682'/>
<writer thread='22236'/>
<task_queued compile_id='27' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='1536' iicount='1536' level='3' stamp='0.682' comment='tiered' hot_count='1536'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dc0ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002dc0c40: mov    0x8(%rdx),%r10d
  0x0000000002dc0c44: shl    $0x3,%r10
  0x0000000002dc0c48: cmp    %rax,%r10
  0x0000000002dc0c4b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc0c51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dc0c5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc0c60: mov    %eax,-0x6000(%rsp)
  0x0000000002dc0c67: push   %rbp
  0x0000000002dc0c68: sub    $0x30,%rsp
  0x0000000002dc0c6c: movabs $0x1be5da88,%r9    ;   {metadata(method data for {method} {0x000000001bc75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc0c76: mov    0xdc(%r9),%esi
  0x0000000002dc0c7d: add    $0x8,%esi
  0x0000000002dc0c80: mov    %esi,0xdc(%r9)
  0x0000000002dc0c87: movabs $0x1bc75050,%r9    ;   {metadata({method} {0x000000001bc75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc0c91: and    $0x1ff8,%esi
  0x0000000002dc0c97: cmp    $0x0,%esi
  0x0000000002dc0c9a: je     0x0000000002dc0d48  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x0000000002dc0ca0: mov    %rdx,%r9
  0x0000000002dc0ca3: movabs $0x1be5da88,%rsi   ;   {metadata(method data for {method} {0x000000001bc75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc0cad: mov    0x8(%r9),%r9d
  0x0000000002dc0cb1: shl    $0x3,%r9
  0x0000000002dc0cb5: cmp    0x110(%rsi),%r9
  0x0000000002dc0cbc: jne    0x0000000002dc0ccb
  0x0000000002dc0cbe: addq   $0x1,0x118(%rsi)
  0x0000000002dc0cc6: jmpq   0x0000000002dc0d31
  0x0000000002dc0ccb: cmp    0x120(%rsi),%r9
  0x0000000002dc0cd2: jne    0x0000000002dc0ce1
  0x0000000002dc0cd4: addq   $0x1,0x128(%rsi)
  0x0000000002dc0cdc: jmpq   0x0000000002dc0d31
  0x0000000002dc0ce1: cmpq   $0x0,0x110(%rsi)
  0x0000000002dc0cec: jne    0x0000000002dc0d05
  0x0000000002dc0cee: mov    %r9,0x110(%rsi)
  0x0000000002dc0cf5: movq   $0x1,0x118(%rsi)
  0x0000000002dc0d00: jmpq   0x0000000002dc0d31
  0x0000000002dc0d05: cmpq   $0x0,0x120(%rsi)
  0x0000000002dc0d10: jne    0x0000000002dc0d29
  0x0000000002dc0d12: mov    %r9,0x120(%rsi)
  0x0000000002dc0d19: movq   $0x1,0x128(%rsi)
  0x0000000002dc0d24: jmpq   0x0000000002dc0d31
  0x0000000002dc0d29: addq   $0x1,0x108(%rsi)
  0x0000000002dc0d31: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x0000000002dc0d37: callq  0x0000000002cf61a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x0000000002dc0d3c: add    $0x30,%rsp
  0x0000000002dc0d40: pop    %rbp
  0x0000000002dc0d41: test   %eax,-0x21c0c47(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc0d47: retq   
  0x0000000002dc0d48: mov    %r9,0x8(%rsp)
  0x0000000002dc0d4d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc0d55: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x0000000002dc0d5a: jmpq   0x0000000002dc0ca0
  0x0000000002dc0d5f: nop
  0x0000000002dc0d60: nop
  0x0000000002dc0d61: mov    0x2a8(%r15),%rax
  0x0000000002dc0d68: movabs $0x0,%r10
  0x0000000002dc0d72: mov    %r10,0x2a8(%r15)
  0x0000000002dc0d79: movabs $0x0,%r10
  0x0000000002dc0d83: mov    %r10,0x2b0(%r15)
  0x0000000002dc0d8a: add    $0x30,%rsp
  0x0000000002dc0d8e: pop    %rbp
  0x0000000002dc0d8f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dc0d94: hlt    
  0x0000000002dc0d95: hlt    
  0x0000000002dc0d96: hlt    
  0x0000000002dc0d97: hlt    
  0x0000000002dc0d98: hlt    
  0x0000000002dc0d99: hlt    
  0x0000000002dc0d9a: hlt    
  0x0000000002dc0d9b: hlt    
  0x0000000002dc0d9c: hlt    
  0x0000000002dc0d9d: hlt    
  0x0000000002dc0d9e: hlt    
  0x0000000002dc0d9f: hlt    
[Stub Code]
  0x0000000002dc0da0: nop                       ;   {no_reloc}
  0x0000000002dc0da1: nop
  0x0000000002dc0da2: nop
  0x0000000002dc0da3: nop
  0x0000000002dc0da4: nop
  0x0000000002dc0da5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dc0daf: jmpq   0x0000000002dc0daf  ;   {runtime_call}
[Exception Handler]
  0x0000000002dc0db4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dc0db9: mov    %rsp,-0x28(%rsp)
  0x0000000002dc0dbe: sub    $0x80,%rsp
  0x0000000002dc0dc5: mov    %rax,0x78(%rsp)
  0x0000000002dc0dca: mov    %rcx,0x70(%rsp)
  0x0000000002dc0dcf: mov    %rdx,0x68(%rsp)
  0x0000000002dc0dd4: mov    %rbx,0x60(%rsp)
  0x0000000002dc0dd9: mov    %rbp,0x50(%rsp)
  0x0000000002dc0dde: mov    %rsi,0x48(%rsp)
  0x0000000002dc0de3: mov    %rdi,0x40(%rsp)
  0x0000000002dc0de8: mov    %r8,0x38(%rsp)
  0x0000000002dc0ded: mov    %r9,0x30(%rsp)
  0x0000000002dc0df2: mov    %r10,0x28(%rsp)
  0x0000000002dc0df7: mov    %r11,0x20(%rsp)
  0x0000000002dc0dfc: mov    %r12,0x18(%rsp)
  0x0000000002dc0e01: mov    %r13,0x10(%rsp)
  0x0000000002dc0e06: mov    %r14,0x8(%rsp)
  0x0000000002dc0e0b: mov    %r15,(%rsp)
  0x0000000002dc0e0f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dc0e19: movabs $0x2dc0db9,%rdx    ;   {internal_word}
  0x0000000002dc0e23: mov    %rsp,%r8
  0x0000000002dc0e26: and    $0xfffffffffffffff0,%rsp
  0x0000000002dc0e2a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dc0e2f: hlt    
[Deopt Handler Code]
  0x0000000002dc0e30: movabs $0x2dc0e30,%r10    ;   {section_word}
  0x0000000002dc0e3a: push   %r10
  0x0000000002dc0e3c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc0e41: hlt    
  0x0000000002dc0e42: hlt    
  0x0000000002dc0e43: hlt    
  0x0000000002dc0e44: hlt    
  0x0000000002dc0e45: hlt    
  0x0000000002dc0e46: hlt    
  0x0000000002dc0e47: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x0000000002dc0c40' size='1040' address='0x0000000002dc0ad0' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='3620' iicount='3620' stamp='0.685'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dc03d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc74fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002dc0500: mov    0x8(%rdx),%r10d
  0x0000000002dc0504: shl    $0x3,%r10
  0x0000000002dc0508: cmp    %r10,%rax
  0x0000000002dc050b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc0511: data16 xchg %ax,%ax
  0x0000000002dc0514: nopl   0x0(%rax,%rax,1)
  0x0000000002dc051c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc0520: mov    %eax,-0x6000(%rsp)
  0x0000000002dc0527: push   %rbp
  0x0000000002dc0528: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x0000000002dc052c: mov    %rdx,%rbx
  0x0000000002dc052f: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x0000000002dc0532: test   %eax,%eax
  0x0000000002dc0534: jne    0x0000000002dc0625  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x0000000002dc053a: mov    0xc(%rdx),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x0000000002dc053d: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x0000000002dc0645
  0x0000000002dc0542: test   %r10d,%r10d
  0x0000000002dc0545: jle    0x0000000002dc0631  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x0000000002dc054b: test   %r10d,%r10d
  0x0000000002dc054e: jbe    0x0000000002dc0635
  0x0000000002dc0554: mov    %r10d,%r9d
  0x0000000002dc0557: dec    %r9d
  0x0000000002dc055a: cmp    %r10d,%r9d
  0x0000000002dc055d: jae    0x0000000002dc0635  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000002dc0563: movzwl 0x10(%r12,%rbp,8),%r11d  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x0000000002dc0569: mov    %r10d,%edi
  0x0000000002dc056c: add    $0xfffffffd,%edi
  0x0000000002dc056f: mov    %r11d,%eax
  0x0000000002dc0572: shl    $0x5,%eax
  0x0000000002dc0575: lea    (%r12,%rbp,8),%rdx
  0x0000000002dc0579: mov    $0x1,%r8d
  0x0000000002dc057f: mov    $0x80000000,%ecx
  0x0000000002dc0584: cmp    %edi,%r9d
  0x0000000002dc0587: cmovl  %ecx,%edi
  0x0000000002dc058a: cmp    $0x1,%edi
  0x0000000002dc058d: jle    0x0000000002dc0616
  0x0000000002dc0593: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002dc0596: jmp    0x0000000002dc05c3  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000002dc0598: movzwl 0x10(%rdx,%r8,2),%ecx
  0x0000000002dc059e: sub    %r11d,%eax
  0x0000000002dc05a1: add    %ecx,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002dc05a3: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002dc05a6: cmp    %r10d,%r8d
  0x0000000002dc05a9: jge    0x0000000002dc0622  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002dc05af: mov    %eax,%r9d
  0x0000000002dc05b2: shl    $0x5,%r9d
  0x0000000002dc05b6: mov    %eax,%r11d
  0x0000000002dc05b9: mov    %r9d,%eax
  0x0000000002dc05bc: jmp    0x0000000002dc0598
  0x0000000002dc05be: xchg   %ax,%ax
  0x0000000002dc05c0: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002dc05c3: movzwl 0x10(%rdx,%r8,2),%r9d
  0x0000000002dc05c9: add    %r9d,%eax
  0x0000000002dc05cc: movslq %r8d,%r11
  0x0000000002dc05cf: movzwl 0x12(%rdx,%r11,2),%ecx
  0x0000000002dc05d5: movzwl 0x16(%rdx,%r11,2),%ebp
  0x0000000002dc05db: movzwl 0x14(%rdx,%r11,2),%r9d
  0x0000000002dc05e1: mov    %eax,%r11d
  0x0000000002dc05e4: shl    $0x5,%r11d
  0x0000000002dc05e8: sub    %eax,%r11d
  0x0000000002dc05eb: add    %ecx,%r11d
  0x0000000002dc05ee: mov    %r11d,%esi
  0x0000000002dc05f1: shl    $0x5,%esi
  0x0000000002dc05f4: sub    %r11d,%esi
  0x0000000002dc05f7: add    %r9d,%esi
  0x0000000002dc05fa: mov    %esi,%r11d
  0x0000000002dc05fd: shl    $0x5,%r11d
  0x0000000002dc0601: sub    %esi,%r11d
  0x0000000002dc0604: add    %ebp,%r11d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x0000000002dc0607: mov    %r11d,%eax
  0x0000000002dc060a: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x0000000002dc060d: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x0000000002dc0611: cmp    %edi,%r8d
  0x0000000002dc0614: jl     0x0000000002dc05c0  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x0000000002dc0616: cmp    %r10d,%r8d
  0x0000000002dc0619: jl     0x0000000002dc0598
  0x0000000002dc061f: mov    %r11d,%eax
  0x0000000002dc0622: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x0000000002dc0625: add    $0x20,%rsp
  0x0000000002dc0629: pop    %rbp
  0x0000000002dc062a: test   %eax,-0x21c0630(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dc0630: retq   
  0x0000000002dc0631: xor    %eax,%eax
  0x0000000002dc0633: jmp    0x0000000002dc0625
  0x0000000002dc0635: mov    $0xffffff86,%edx
  0x0000000002dc063a: mov    %rbx,(%rsp)
  0x0000000002dc063e: nop
  0x0000000002dc063f: callq  0x0000000002cf57a0  ; OopMap{rbp=NarrowOop [0]=Oop off=324}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x0000000002dc0644: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x0000000002dc0645: mov    $0xfffffff6,%edx
  0x0000000002dc064a: nop
  0x0000000002dc064b: callq  0x0000000002cf57a0  ; OopMap{off=336}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x0000000002dc0650: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x0000000002dc0651: hlt    
  0x0000000002dc0652: hlt    
  0x0000000002dc0653: hlt    
  0x0000000002dc0654: hlt    
  0x0000000002dc0655: hlt    
  0x0000000002dc0656: hlt    
  0x0000000002dc0657: hlt    
  0x0000000002dc0658: hlt    
  0x0000000002dc0659: hlt    
  0x0000000002dc065a: hlt    
  0x0000000002dc065b: hlt    
  0x0000000002dc065c: hlt    
  0x0000000002dc065d: hlt    
  0x0000000002dc065e: hlt    
  0x0000000002dc065f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc0660: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dc0665: callq  0x0000000002dc066a
  0x0000000002dc066a: subq   $0x5,(%rsp)
  0x0000000002dc066f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc0674: hlt    
  0x0000000002dc0675: hlt    
  0x0000000002dc0676: hlt    
  0x0000000002dc0677: hlt    
<nmethod compile_id='26' compiler='C2' level='4' entry='0x0000000002dc0500' size='1224' address='0x0000000002dc03d0' relocation_offset='288' insts_offset='304' stub_offset='656' scopes_data_offset='688' scopes_pcs_offset='800' dependencies_offset='1200' nul_chk_table_offset='1208' method='java/lang/String hashCode ()I' bytes='55' count='5495' backedge_count='119439' iicount='5495' stamp='0.689'/>
<writer thread='22236'/>
<task_queued compile_id='28' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1024' iicount='1024' level='3' stamp='0.690' comment='tiered' hot_count='1024'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dc8310:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc745d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dc8460: mov    0x8(%rdx),%r10d
  0x0000000002dc8464: shl    $0x3,%r10
  0x0000000002dc8468: cmp    %r10,%rax
  0x0000000002dc846b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc8471: data16 xchg %ax,%ax
  0x0000000002dc8474: nopl   0x0(%rax,%rax,1)
  0x0000000002dc847c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc8480: mov    %eax,-0x6000(%rsp)
  0x0000000002dc8487: push   %rbp
  0x0000000002dc8488: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x0000000002dc848c: cmp    %r8,%rdx
  0x0000000002dc848f: je     0x0000000002dc84cb  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x0000000002dc8491: test   %r8,%r8
  0x0000000002dc8494: je     0x0000000002dc84bd
  0x0000000002dc8496: mov    0x8(%r8),%r10d
  0x0000000002dc849a: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002dc84a1: jne    0x0000000002dc8679  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000002dc84a7: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x0000000002dc84aa: mov    0xc(%r12,%rcx,8),%edi  ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ; implicit exception: dispatches to 0x0000000002dc868d
  0x0000000002dc84af: mov    0xc(%r8),%ebx      ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x0000000002dc84b3: mov    0xc(%r12,%rbx,8),%r9d  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x0000000002dc8699
  0x0000000002dc84b8: cmp    %r9d,%edi
  0x0000000002dc84bb: je     0x0000000002dc84d2  ;*iconst_0
                                                ; - java.lang.String::equals@79 (line 995)

  0x0000000002dc84bd: xor    %eax,%eax          ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x0000000002dc84bf: add    $0x30,%rsp
  0x0000000002dc84c3: pop    %rbp
  0x0000000002dc84c4: test   %eax,-0x21c84ca(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dc84ca: retq   
  0x0000000002dc84cb: mov    $0x1,%eax
  0x0000000002dc84d0: jmp    0x0000000002dc84bf
  0x0000000002dc84d2: test   %edi,%edi
  0x0000000002dc84d4: je     0x0000000002dc862d  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002dc84da: mov    %edi,%r10d
  0x0000000002dc84dd: dec    %r10d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000002dc84e0: movslq %edi,%r11
  0x0000000002dc84e3: vmovq  %r11,%xmm2
  0x0000000002dc84e8: lea    (%r12,%rcx,8),%r11
  0x0000000002dc84ec: lea    (%r12,%rbx,8),%rax
  0x0000000002dc84f0: mov    %edi,%edx
  0x0000000002dc84f2: add    $0xfffffffe,%edx
  0x0000000002dc84f5: mov    $0xffffffff,%r14d
  0x0000000002dc84fb: cmp    %r14d,%edx
  0x0000000002dc84fe: cmovl  %r14d,%edx
  0x0000000002dc8502: mov    %r10d,%esi
  0x0000000002dc8505: xor    %r8d,%r8d
  0x0000000002dc8508: mov    %r10d,%r13d
  0x0000000002dc850b: sub    %esi,%r13d         ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000000002dc850e: cmp    %edi,%r13d
  0x0000000002dc8511: jae    0x0000000002dc8640
  0x0000000002dc8517: vmovd  %r10d,%xmm1
  0x0000000002dc851c: vmovd  %r8d,%xmm0
  0x0000000002dc8521: movslq %esi,%r8
  0x0000000002dc8524: vmovq  %xmm2,%r10
  0x0000000002dc8529: sub    %r8,%r10
  0x0000000002dc852c: movzwl 0xe(%r11,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002dc8532: cmp    %r9d,%r13d
  0x0000000002dc8535: jae    0x0000000002dc865d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002dc853b: movzwl 0xe(%rax,%r10,2),%r8d
  0x0000000002dc8541: cmp    %r8d,%ebp
  0x0000000002dc8544: jne    0x0000000002dc8637  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002dc854a: dec    %esi               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000002dc854c: cmp    %edx,%esi
  0x0000000002dc854e: jle    0x0000000002dc855c  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002dc8550: vmovd  %xmm0,%r8d
  0x0000000002dc8555: vmovd  %xmm1,%r10d
  0x0000000002dc855a: jmp    0x0000000002dc8508
  0x0000000002dc855c: mov    %edi,%r10d
  0x0000000002dc855f: sub    %r9d,%r10d
  0x0000000002dc8562: dec    %r10d
  0x0000000002dc8565: cmp    %r14d,%r10d
  0x0000000002dc8568: cmovl  %r14d,%r10d
  0x0000000002dc856c: mov    %r10d,%ebp
  0x0000000002dc856f: add    $0x3,%ebp
  0x0000000002dc8572: mov    $0x7fffffff,%edx
  0x0000000002dc8577: cmp    %ebp,%r10d
  0x0000000002dc857a: cmovg  %edx,%ebp
  0x0000000002dc857d: cmp    %ebp,%esi
  0x0000000002dc857f: jle    0x0000000002dc85f1  ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000000002dc8581: movslq %esi,%r10
  0x0000000002dc8584: vmovq  %xmm2,%r8
  0x0000000002dc8589: sub    %r10,%r8
  0x0000000002dc858c: movzwl 0xe(%rax,%r8,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002dc8592: movzwl 0xe(%r11,%r8,2),%edx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002dc8598: cmp    %r10d,%edx
  0x0000000002dc859b: jne    0x0000000002dc8637  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002dc85a1: movzwl 0x10(%rax,%r8,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002dc85a7: movzwl 0x10(%r11,%r8,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002dc85ad: cmp    %r10d,%r8d
  0x0000000002dc85b0: jne    0x0000000002dc8637  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002dc85b6: mov    %esi,%r10d
  0x0000000002dc85b9: add    $0xfffffffe,%r10d
  0x0000000002dc85bd: movslq %r10d,%r10
  0x0000000002dc85c0: vmovq  %xmm2,%rdx
  0x0000000002dc85c5: sub    %r10,%rdx
  0x0000000002dc85c8: movzwl 0xe(%rax,%rdx,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002dc85ce: movzwl 0xe(%r11,%rdx,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002dc85d4: cmp    %r8d,%r10d
  0x0000000002dc85d7: jne    0x0000000002dc8637  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002dc85d9: movzwl 0x10(%rax,%rdx,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002dc85df: movzwl 0x10(%r11,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002dc85e5: cmp    %r8d,%edx
  0x0000000002dc85e8: jne    0x0000000002dc8637  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002dc85ea: add    $0xfffffffc,%esi   ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000002dc85ed: cmp    %ebp,%esi
  0x0000000002dc85ef: jg     0x0000000002dc8581  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x0000000002dc85f1: cmp    $0xffffffff,%esi
  0x0000000002dc85f4: je     0x0000000002dc862d
  0x0000000002dc85f6: xchg   %ax,%ax
  0x0000000002dc85f8: vmovd  %xmm1,%r13d
  0x0000000002dc85fd: sub    %esi,%r13d         ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x0000000002dc8600: cmp    %edi,%r13d
  0x0000000002dc8603: jae    0x0000000002dc8640
  0x0000000002dc8605: movslq %esi,%r8
  0x0000000002dc8608: vmovq  %xmm2,%r10
  0x0000000002dc860d: sub    %r8,%r10
  0x0000000002dc8610: movzwl 0xe(%r11,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002dc8616: cmp    %r9d,%r13d
  0x0000000002dc8619: jae    0x0000000002dc865d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002dc861b: movzwl 0xe(%rax,%r10,2),%r8d
  0x0000000002dc8621: cmp    %r8d,%ebp
  0x0000000002dc8624: jne    0x0000000002dc8637  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x0000000002dc8626: dec    %esi               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x0000000002dc8628: cmp    $0xffffffff,%esi
  0x0000000002dc862b: jne    0x0000000002dc85f8  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x0000000002dc862d: mov    $0x1,%eax
  0x0000000002dc8632: jmpq   0x0000000002dc84bf
  0x0000000002dc8637: vmovd  %xmm0,%eax
  0x0000000002dc863b: jmpq   0x0000000002dc84bf
  0x0000000002dc8640: mov    $0xffffffe4,%edx
  0x0000000002dc8645: mov    %esi,%ebp
  0x0000000002dc8647: mov    %ebx,0x4(%rsp)
  0x0000000002dc864b: mov    %ecx,0xc(%rsp)
  0x0000000002dc864f: mov    %r13d,0x10(%rsp)
  0x0000000002dc8654: data16 xchg %ax,%ax
  0x0000000002dc8657: callq  0x0000000002cf57a0  ; OopMap{[4]=NarrowOop [12]=NarrowOop off=508}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x0000000002dc865c: int3                      ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x0000000002dc865d: mov    $0xffffffe4,%edx
  0x0000000002dc8662: mov    %esi,(%rsp)
  0x0000000002dc8665: mov    %ecx,0x4(%rsp)
  0x0000000002dc8669: mov    %ebx,0x10(%rsp)
  0x0000000002dc866d: mov    %r13d,0x14(%rsp)
  0x0000000002dc8672: nop
  0x0000000002dc8673: callq  0x0000000002cf57a0  ; OopMap{[4]=NarrowOop [16]=NarrowOop off=536}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x0000000002dc8678: int3                      ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x0000000002dc8679: mov    %rdx,%rbp
  0x0000000002dc867c: mov    %r8,0x8(%rsp)
  0x0000000002dc8681: mov    $0xffffffde,%edx
  0x0000000002dc8686: nop
  0x0000000002dc8687: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [8]=Oop off=556}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x0000000002dc868c: int3                      ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x0000000002dc868d: mov    $0xfffffff6,%edx
  0x0000000002dc8692: nop
  0x0000000002dc8693: callq  0x0000000002cf57a0  ; OopMap{off=568}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x0000000002dc8698: int3                      ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)

  0x0000000002dc8699: mov    $0xfffffff6,%edx
  0x0000000002dc869e: nop
  0x0000000002dc869f: callq  0x0000000002cf57a0  ; OopMap{off=580}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x0000000002dc86a4: int3                      ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)

  0x0000000002dc86a5: hlt    
  0x0000000002dc86a6: hlt    
  0x0000000002dc86a7: hlt    
  0x0000000002dc86a8: hlt    
  0x0000000002dc86a9: hlt    
  0x0000000002dc86aa: hlt    
  0x0000000002dc86ab: hlt    
  0x0000000002dc86ac: hlt    
  0x0000000002dc86ad: hlt    
  0x0000000002dc86ae: hlt    
  0x0000000002dc86af: hlt    
  0x0000000002dc86b0: hlt    
  0x0000000002dc86b1: hlt    
  0x0000000002dc86b2: hlt    
  0x0000000002dc86b3: hlt    
  0x0000000002dc86b4: hlt    
  0x0000000002dc86b5: hlt    
  0x0000000002dc86b6: hlt    
  0x0000000002dc86b7: hlt    
  0x0000000002dc86b8: hlt    
  0x0000000002dc86b9: hlt    
  0x0000000002dc86ba: hlt    
  0x0000000002dc86bb: hlt    
  0x0000000002dc86bc: hlt    
  0x0000000002dc86bd: hlt    
  0x0000000002dc86be: hlt    
  0x0000000002dc86bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc86c0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dc86c5: callq  0x0000000002dc86ca
  0x0000000002dc86ca: subq   $0x5,(%rsp)
  0x0000000002dc86cf: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc86d4: hlt    
  0x0000000002dc86d5: hlt    
  0x0000000002dc86d6: hlt    
  0x0000000002dc86d7: hlt    
<nmethod compile_id='24' compiler='C2' level='4' entry='0x0000000002dc8460' size='2032' address='0x0000000002dc8310' relocation_offset='288' insts_offset='336' stub_offset='944' scopes_data_offset='984' scopes_pcs_offset='1200' dependencies_offset='2000' nul_chk_table_offset='2008' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='19722' backedge_count='14124' iicount='19722' stamp='0.694'/>
<writer thread='22236'/>
<task_queued compile_id='29' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2688' backedge_count='3360' iicount='2688' level='3' stamp='0.694' comment='tiered' hot_count='2688'/>
<task_queued compile_id='30' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1647' backedge_count='62464' iicount='1647' stamp='0.695' comment='tiered' hot_count='1647'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dc7e10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc98388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rdx:rdx   = &apos;java/lang/ref/Reference&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dc7f80: mov    0x8(%rdx),%r10d
  0x0000000002dc7f84: shl    $0x3,%r10
  0x0000000002dc7f88: cmp    %rax,%r10
  0x0000000002dc7f8b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc7f91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dc7f9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc7fa0: mov    %eax,-0x6000(%rsp)
  0x0000000002dc7fa7: push   %rbp
  0x0000000002dc7fa8: sub    $0x30,%rsp
  0x0000000002dc7fac: movabs $0x1beb5358,%rsi   ;   {metadata(method data for {method} {0x000000001bc98388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002dc7fb6: mov    0xdc(%rsi),%edi
  0x0000000002dc7fbc: add    $0x8,%edi
  0x0000000002dc7fbf: mov    %edi,0xdc(%rsi)
  0x0000000002dc7fc5: movabs $0x1bc98380,%rsi   ;   {metadata({method} {0x000000001bc98388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002dc7fcf: and    $0x1ff8,%edi
  0x0000000002dc7fd5: cmp    $0x0,%edi
  0x0000000002dc7fd8: je     0x0000000002dc80d6  ;*aload_0
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 306)

  0x0000000002dc7fde: mov    %rdx,%rsi
  0x0000000002dc7fe1: movabs $0x1beb5358,%rdi   ;   {metadata(method data for {method} {0x000000001bc98388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002dc7feb: addq   $0x1,0x108(%rdi)
  0x0000000002dc7ff3: movabs $0x1bda1c10,%rsi   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dc7ffd: mov    0xdc(%rsi),%edi
  0x0000000002dc8003: add    $0x8,%edi
  0x0000000002dc8006: mov    %edi,0xdc(%rsi)
  0x0000000002dc800c: movabs $0x1bc70480,%rsi   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dc8016: and    $0x7ffff8,%edi
  0x0000000002dc801c: cmp    $0x0,%edi
  0x0000000002dc801f: je     0x0000000002dc80ed
  0x0000000002dc8025: mov    %r8,%r10
  0x0000000002dc8028: shr    $0x3,%r10
  0x0000000002dc802c: mov    %r10d,0xc(%rdx)
  0x0000000002dc8030: mov    %rdx,%rsi
  0x0000000002dc8033: shr    $0x9,%rsi
  0x0000000002dc8037: movabs $0xea5d000,%rdi
  0x0000000002dc8041: movb   $0x0,(%rsi,%rdi,1)  ;*putfield referent
                                                ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 307)

  0x0000000002dc8045: cmp    $0x0,%r9
  0x0000000002dc8049: movabs $0x1beb5358,%rsi   ;   {metadata(method data for {method} {0x000000001bc98388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002dc8053: movabs $0x118,%rdi
  0x0000000002dc805d: jne    0x0000000002dc806d
  0x0000000002dc8063: movabs $0x128,%rdi
  0x0000000002dc806d: mov    (%rsi,%rdi,1),%rbx
  0x0000000002dc8071: lea    0x1(%rbx),%rbx
  0x0000000002dc8075: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002dc8079: jne    0x0000000002dc80a5  ;*ifnonnull
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 308)

  0x0000000002dc807f: movabs $0x76b7873b8,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x0000000002dc8089: mov    0x68(%rsi),%esi
  0x0000000002dc808c: shl    $0x3,%rsi          ;*getstatic NULL
                                                ; - java.lang.ref.Reference::&lt;init&gt;@14 (line 308)

  0x0000000002dc8090: movabs $0x1beb5358,%rdi   ;   {metadata(method data for {method} {0x000000001bc98388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x0000000002dc809a: incl   0x138(%rdi)
  0x0000000002dc80a0: jmpq   0x0000000002dc80a8  ;*goto
                                                ; - java.lang.ref.Reference::&lt;init&gt;@17 (line 308)

  0x0000000002dc80a5: mov    %r9,%rsi
  0x0000000002dc80a8: mov    %rsi,%r10
  0x0000000002dc80ab: shr    $0x3,%r10
  0x0000000002dc80af: mov    %r10d,0x10(%rdx)
  0x0000000002dc80b3: shr    $0x9,%rdx
  0x0000000002dc80b7: movabs $0xea5d000,%rsi
  0x0000000002dc80c1: movb   $0x0,(%rdx,%rsi,1)
  0x0000000002dc80c5: lock addl $0x0,(%rsp)     ;*putfield queue
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 308)

  0x0000000002dc80ca: add    $0x30,%rsp
  0x0000000002dc80ce: pop    %rbp
  0x0000000002dc80cf: test   %eax,-0x21c7fd5(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc80d5: retq   
  0x0000000002dc80d6: mov    %rsi,0x8(%rsp)
  0x0000000002dc80db: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc80e3: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop r9=Oop off=360}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 306)
                                                ;   {runtime_call}
  0x0000000002dc80e8: jmpq   0x0000000002dc7fde
  0x0000000002dc80ed: mov    %rsi,0x8(%rsp)
  0x0000000002dc80f2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc80fa: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop r9=Oop off=383}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 306)
                                                ;   {runtime_call}
  0x0000000002dc80ff: jmpq   0x0000000002dc8025
  0x0000000002dc8104: nop
  0x0000000002dc8105: nop
  0x0000000002dc8106: mov    0x2a8(%r15),%rax
  0x0000000002dc810d: movabs $0x0,%r10
  0x0000000002dc8117: mov    %r10,0x2a8(%r15)
  0x0000000002dc811e: movabs $0x0,%r10
  0x0000000002dc8128: mov    %r10,0x2b0(%r15)
  0x0000000002dc812f: add    $0x30,%rsp
  0x0000000002dc8133: pop    %rbp
  0x0000000002dc8134: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dc8139: hlt    
  0x0000000002dc813a: hlt    
  0x0000000002dc813b: hlt    
  0x0000000002dc813c: hlt    
  0x0000000002dc813d: hlt    
  0x0000000002dc813e: hlt    
  0x0000000002dc813f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc8140: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dc8145: mov    %rsp,-0x28(%rsp)
  0x0000000002dc814a: sub    $0x80,%rsp
  0x0000000002dc8151: mov    %rax,0x78(%rsp)
  0x0000000002dc8156: mov    %rcx,0x70(%rsp)
  0x0000000002dc815b: mov    %rdx,0x68(%rsp)
  0x0000000002dc8160: mov    %rbx,0x60(%rsp)
  0x0000000002dc8165: mov    %rbp,0x50(%rsp)
  0x0000000002dc816a: mov    %rsi,0x48(%rsp)
  0x0000000002dc816f: mov    %rdi,0x40(%rsp)
  0x0000000002dc8174: mov    %r8,0x38(%rsp)
  0x0000000002dc8179: mov    %r9,0x30(%rsp)
  0x0000000002dc817e: mov    %r10,0x28(%rsp)
  0x0000000002dc8183: mov    %r11,0x20(%rsp)
  0x0000000002dc8188: mov    %r12,0x18(%rsp)
  0x0000000002dc818d: mov    %r13,0x10(%rsp)
  0x0000000002dc8192: mov    %r14,0x8(%rsp)
  0x0000000002dc8197: mov    %r15,(%rsp)
  0x0000000002dc819b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dc81a5: movabs $0x2dc8145,%rdx    ;   {internal_word}
  0x0000000002dc81af: mov    %rsp,%r8
  0x0000000002dc81b2: and    $0xfffffffffffffff0,%rsp
  0x0000000002dc81b6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dc81bb: hlt    
[Deopt Handler Code]
  0x0000000002dc81bc: movabs $0x2dc81bc,%r10    ;   {section_word}
  0x0000000002dc81c6: push   %r10
  0x0000000002dc81c8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc81cd: hlt    
  0x0000000002dc81ce: hlt    
  0x0000000002dc81cf: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x0000000002dc7f80' size='1224' address='0x0000000002dc7e10' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1056' dependencies_offset='1216' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='1539' iicount='1539' stamp='0.698'/>
<writer thread='22236'/>
<task_queued compile_id='31' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='1664' iicount='1664' level='1' stamp='0.698' comment='tiered' hot_count='1664'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dc4f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002dc5040: mov    0x8(%rdx),%r10d
  0x0000000002dc5044: shl    $0x3,%r10
  0x0000000002dc5048: cmp    %r10,%rax
  0x0000000002dc504b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc5051: data16 xchg %ax,%ax
  0x0000000002dc5054: nopl   0x0(%rax,%rax,1)
  0x0000000002dc505c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc5060: mov    %eax,-0x6000(%rsp)
  0x0000000002dc5067: push   %rbp
  0x0000000002dc5068: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x0000000002dc506c: mov    0x8(%rdx),%r11d
  0x0000000002dc5070: movabs $0x0,%r10
  0x0000000002dc507a: lea    (%r10,%r11,8),%r10
  0x0000000002dc507e: mov    $0x40000000,%r8d
  0x0000000002dc5084: test   %r8d,0x9c(%r10)
  0x0000000002dc508b: je     0x0000000002dc5098  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002dc508d: mov    %rdx,%rbp
  0x0000000002dc5090: data16 xchg %ax,%ax
  0x0000000002dc5093: callq  0x0000000002db3aa0  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x0000000002dc5098: add    $0x10,%rsp
  0x0000000002dc509c: pop    %rbp
  0x0000000002dc509d: test   %eax,-0x21c50a3(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dc50a3: retq                      ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x0000000002dc50a4: mov    %rax,%rdx
  0x0000000002dc50a7: add    $0x10,%rsp
  0x0000000002dc50ab: pop    %rbp
  0x0000000002dc50ac: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002dc50b1: hlt    
  0x0000000002dc50b2: hlt    
  0x0000000002dc50b3: hlt    
  0x0000000002dc50b4: hlt    
  0x0000000002dc50b5: hlt    
  0x0000000002dc50b6: hlt    
  0x0000000002dc50b7: hlt    
  0x0000000002dc50b8: hlt    
  0x0000000002dc50b9: hlt    
  0x0000000002dc50ba: hlt    
  0x0000000002dc50bb: hlt    
  0x0000000002dc50bc: hlt    
  0x0000000002dc50bd: hlt    
  0x0000000002dc50be: hlt    
  0x0000000002dc50bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc50c0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dc50c5: callq  0x0000000002dc50ca
  0x0000000002dc50ca: subq   $0x5,(%rsp)
  0x0000000002dc50cf: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc50d4: hlt    
  0x0000000002dc50d5: hlt    
  0x0000000002dc50d6: hlt    
  0x0000000002dc50d7: hlt    
<nmethod compile_id='8' compiler='C2' level='4' entry='0x0000000002dc5040' size='616' address='0x0000000002dc4f10' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='488' dependencies_offset='584' handler_table_offset='592' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='22780' iicount='22780' stamp='0.699'/>
<writer thread='22236'/>
<task_queued compile_id='32' method='java/lang/String indexOf (II)I' bytes='70' count='3800' backedge_count='230234' iicount='3800' stamp='0.699' comment='tiered' hot_count='3800'/>
<task_queued compile_id='33' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='371' backedge_count='26624' iicount='371' level='3' stamp='0.699' comment='tiered' hot_count='371'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dc47d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002dc4940: mov    0x8(%rdx),%r10d
  0x0000000002dc4944: shl    $0x3,%r10
  0x0000000002dc4948: cmp    %rax,%r10
  0x0000000002dc494b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc4951: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dc495c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc4960: mov    %eax,-0x6000(%rsp)
  0x0000000002dc4967: push   %rbp
  0x0000000002dc4968: sub    $0x30,%rsp
  0x0000000002dc496c: movabs $0x1be62a68,%rax   ;   {metadata(method data for {method} {0x000000001bc74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc4976: mov    0xdc(%rax),%esi
  0x0000000002dc497c: add    $0x8,%esi
  0x0000000002dc497f: mov    %esi,0xdc(%rax)
  0x0000000002dc4985: movabs $0x1bc74db0,%rax   ;   {metadata({method} {0x000000001bc74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc498f: and    $0x1ff8,%esi
  0x0000000002dc4995: cmp    $0x0,%esi
  0x0000000002dc4998: je     0x0000000002dc4b55  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000002dc499e: mov    0xc(%rdx),%eax
  0x0000000002dc49a1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000002dc49a5: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x0000000002dc4b6c
  0x0000000002dc49a9: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x0000000002dc49ad: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000002dc4b71
  0x0000000002dc49b0: cmp    $0x0,%r9d
  0x0000000002dc49b4: movabs $0x1be62a68,%rbx   ;   {metadata(method data for {method} {0x000000001bc74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc49be: movabs $0x108,%rdx
  0x0000000002dc49c8: jl     0x0000000002dc49d8
  0x0000000002dc49ce: movabs $0x118,%rdx
  0x0000000002dc49d8: mov    (%rbx,%rdx,1),%rcx
  0x0000000002dc49dc: lea    0x1(%rcx),%rcx
  0x0000000002dc49e0: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002dc49e4: jl     0x0000000002dc4b22  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000002dc49ea: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000002dc4b76
  0x0000000002dc49ed: sub    %edi,%ebx
  0x0000000002dc49ef: cmp    %ebx,%r9d
  0x0000000002dc49f2: movabs $0x1be62a68,%rbx   ;   {metadata(method data for {method} {0x000000001bc74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc49fc: movabs $0x128,%rdx
  0x0000000002dc4a06: jle    0x0000000002dc4a16
  0x0000000002dc4a0c: movabs $0x138,%rdx
  0x0000000002dc4a16: mov    (%rbx,%rdx,1),%rcx
  0x0000000002dc4a1a: lea    0x1(%rcx),%rcx
  0x0000000002dc4a1e: mov    %rcx,(%rbx,%rdx,1)
  0x0000000002dc4a22: jg     0x0000000002dc4b22  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000002dc4a28: mov    $0x0,%ebx
  0x0000000002dc4a2d: jmpq   0x0000000002dc4ae2  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002dc4a32: nopw   0x0(%rax,%rax,1)
  0x0000000002dc4a38: mov    %r9,%rdx
  0x0000000002dc4a3b: inc    %edx
  0x0000000002dc4a3d: movslq %r9d,%rcx
  0x0000000002dc4a40: cmp    0xc(%rax),%r9d
  0x0000000002dc4a44: jae    0x0000000002dc4b7b
  0x0000000002dc4a4a: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000002dc4a4f: mov    %rbx,%r8
  0x0000000002dc4a52: inc    %r8d
  0x0000000002dc4a55: movslq %ebx,%r9
  0x0000000002dc4a58: cmp    0xc(%rsi),%ebx
  0x0000000002dc4a5b: jae    0x0000000002dc4b84
  0x0000000002dc4a61: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000002dc4a67: movabs $0x1be62a68,%r9    ;   {metadata(method data for {method} {0x000000001bc74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc4a71: mov    0xe0(%r9),%r11d
  0x0000000002dc4a78: add    $0x8,%r11d
  0x0000000002dc4a7c: mov    %r11d,0xe0(%r9)
  0x0000000002dc4a83: movabs $0x1bc74db0,%r9    ;   {metadata({method} {0x000000001bc74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc4a8d: and    $0xfff8,%r11d
  0x0000000002dc4a94: cmp    $0x0,%r11d
  0x0000000002dc4a98: je     0x0000000002dc4b8d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002dc4a9e: test   %eax,-0x21c49a4(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dc4aa4: cmp    %ebx,%ecx
  0x0000000002dc4aa6: movabs $0x1be62a68,%rbx   ;   {metadata(method data for {method} {0x000000001bc74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc4ab0: movabs $0x168,%rcx
  0x0000000002dc4aba: je     0x0000000002dc4aca
  0x0000000002dc4ac0: movabs $0x178,%rcx
  0x0000000002dc4aca: mov    (%rbx,%rcx,1),%r9
  0x0000000002dc4ace: lea    0x1(%r9),%r9
  0x0000000002dc4ad2: mov    %r9,(%rbx,%rcx,1)
  0x0000000002dc4ad6: jne    0x0000000002dc4b33  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000002dc4adc: mov    %r8,%rbx
  0x0000000002dc4adf: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000002dc4ae2: dec    %edi
  0x0000000002dc4ae4: cmp    $0x0,%edi
  0x0000000002dc4ae7: movabs $0x1be62a68,%rdx   ;   {metadata(method data for {method} {0x000000001bc74db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc4af1: movabs $0x148,%rcx
  0x0000000002dc4afb: jl     0x0000000002dc4b0b
  0x0000000002dc4b01: movabs $0x158,%rcx
  0x0000000002dc4b0b: mov    (%rdx,%rcx,1),%r8
  0x0000000002dc4b0f: lea    0x1(%r8),%r8
  0x0000000002dc4b13: mov    %r8,(%rdx,%rcx,1)
  0x0000000002dc4b17: jl     0x0000000002dc4b44
  0x0000000002dc4b1d: jmpq   0x0000000002dc4a38  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000002dc4b22: mov    $0x0,%eax
  0x0000000002dc4b27: add    $0x30,%rsp
  0x0000000002dc4b2b: pop    %rbp
  0x0000000002dc4b2c: test   %eax,-0x21c4a32(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc4b32: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000002dc4b33: mov    $0x0,%eax
  0x0000000002dc4b38: add    $0x30,%rsp
  0x0000000002dc4b3c: pop    %rbp
  0x0000000002dc4b3d: test   %eax,-0x21c4a43(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc4b43: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000002dc4b44: mov    $0x1,%eax
  0x0000000002dc4b49: add    $0x30,%rsp
  0x0000000002dc4b4d: pop    %rbp
  0x0000000002dc4b4e: test   %eax,-0x21c4a54(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc4b54: retq   
  0x0000000002dc4b55: mov    %rax,0x8(%rsp)
  0x0000000002dc4b5a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc4b62: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000002dc4b67: jmpq   0x0000000002dc499e
  0x0000000002dc4b6c: callq  0x0000000002dad680  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000002dc4b71: callq  0x0000000002dad680  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000002dc4b76: callq  0x0000000002dad680  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000002dc4b7b: mov    %r9,(%rsp)
  0x0000000002dc4b7f: callq  0x0000000002dac940  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000002dc4b84: mov    %rbx,(%rsp)
  0x0000000002dc4b88: callq  0x0000000002dac940  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000002dc4b8d: mov    %r9,0x8(%rsp)
  0x0000000002dc4b92: movq   $0x41,(%rsp)
  0x0000000002dc4b9a: callq  0x0000000002db1d60  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000002dc4b9f: jmpq   0x0000000002dc4a9e
  0x0000000002dc4ba4: nop
  0x0000000002dc4ba5: nop
  0x0000000002dc4ba6: mov    0x2a8(%r15),%rax
  0x0000000002dc4bad: movabs $0x0,%r10
  0x0000000002dc4bb7: mov    %r10,0x2a8(%r15)
  0x0000000002dc4bbe: movabs $0x0,%r10
  0x0000000002dc4bc8: mov    %r10,0x2b0(%r15)
  0x0000000002dc4bcf: add    $0x30,%rsp
  0x0000000002dc4bd3: pop    %rbp
  0x0000000002dc4bd4: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dc4bd9: hlt    
  0x0000000002dc4bda: hlt    
  0x0000000002dc4bdb: hlt    
  0x0000000002dc4bdc: hlt    
  0x0000000002dc4bdd: hlt    
  0x0000000002dc4bde: hlt    
  0x0000000002dc4bdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc4be0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dc4be5: mov    %rsp,-0x28(%rsp)
  0x0000000002dc4bea: sub    $0x80,%rsp
  0x0000000002dc4bf1: mov    %rax,0x78(%rsp)
  0x0000000002dc4bf6: mov    %rcx,0x70(%rsp)
  0x0000000002dc4bfb: mov    %rdx,0x68(%rsp)
  0x0000000002dc4c00: mov    %rbx,0x60(%rsp)
  0x0000000002dc4c05: mov    %rbp,0x50(%rsp)
  0x0000000002dc4c0a: mov    %rsi,0x48(%rsp)
  0x0000000002dc4c0f: mov    %rdi,0x40(%rsp)
  0x0000000002dc4c14: mov    %r8,0x38(%rsp)
  0x0000000002dc4c19: mov    %r9,0x30(%rsp)
  0x0000000002dc4c1e: mov    %r10,0x28(%rsp)
  0x0000000002dc4c23: mov    %r11,0x20(%rsp)
  0x0000000002dc4c28: mov    %r12,0x18(%rsp)
  0x0000000002dc4c2d: mov    %r13,0x10(%rsp)
  0x0000000002dc4c32: mov    %r14,0x8(%rsp)
  0x0000000002dc4c37: mov    %r15,(%rsp)
  0x0000000002dc4c3b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dc4c45: movabs $0x2dc4be5,%rdx    ;   {internal_word}
  0x0000000002dc4c4f: mov    %rsp,%r8
  0x0000000002dc4c52: and    $0xfffffffffffffff0,%rsp
  0x0000000002dc4c56: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dc4c5b: hlt    
[Deopt Handler Code]
  0x0000000002dc4c5c: movabs $0x2dc4c5c,%r10    ;   {section_word}
  0x0000000002dc4c66: push   %r10
  0x0000000002dc4c68: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc4c6d: hlt    
  0x0000000002dc4c6e: hlt    
  0x0000000002dc4c6f: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x0000000002dc4940' size='1824' address='0x0000000002dc47d0' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2717' backedge_count='3430' iicount='2717' stamp='0.706'/>
<writer thread='22236'/>
<task_queued compile_id='34' method='java/io/WinNTFileSystem isLetter (C)Z' bytes='30' count='2688' iicount='2688' level='3' stamp='0.706' comment='tiered' hot_count='2688'/>
<task_queued compile_id='35' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='79616' iicount='79616' stamp='0.706' comment='tiered' hot_count='79616'/>
<task_queued compile_id='36' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='72320' iicount='72320' stamp='0.706' comment='tiered' hot_count='72320'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dc2f10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002dc3060: mov    0x8(%rdx),%r10d
  0x0000000002dc3064: shl    $0x3,%r10
  0x0000000002dc3068: cmp    %r10,%rax
  0x0000000002dc306b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc3071: data16 xchg %ax,%ax
  0x0000000002dc3074: nopl   0x0(%rax,%rax,1)
  0x0000000002dc307c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc3080: mov    %eax,-0x6000(%rsp)
  0x0000000002dc3087: push   %rbp
  0x0000000002dc3088: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x0000000002dc308c: test   %r8d,%r8d
  0x0000000002dc308f: jl     0x0000000002dc30cd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002dc3091: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x0000000002dc3095: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000002dc30f5
  0x0000000002dc309a: cmp    %ebp,%r8d
  0x0000000002dc309d: jge    0x0000000002dc30e1  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002dc309f: cmp    %ebp,%r8d
  0x0000000002dc30a2: jae    0x0000000002dc30ba
  0x0000000002dc30a4: shl    $0x3,%r10
  0x0000000002dc30a8: movzwl 0x10(%r10,%r8,2),%eax
  0x0000000002dc30ae: add    $0x20,%rsp
  0x0000000002dc30b2: pop    %rbp
  0x0000000002dc30b3: test   %eax,-0x21c30b9(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dc30b9: retq   
  0x0000000002dc30ba: mov    $0xffffffe4,%edx
  0x0000000002dc30bf: mov    %r8d,%ebp
  0x0000000002dc30c2: mov    %r10d,(%rsp)
  0x0000000002dc30c6: nop
  0x0000000002dc30c7: callq  0x0000000002cf57a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x0000000002dc30cc: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x0000000002dc30cd: mov    %rdx,%rbp
  0x0000000002dc30d0: mov    %r8d,0x4(%rsp)
  0x0000000002dc30d5: mov    $0xffffff65,%edx
  0x0000000002dc30da: nop
  0x0000000002dc30db: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000002dc30e0: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000002dc30e1: mov    %rdx,(%rsp)
  0x0000000002dc30e5: mov    %r8d,0xc(%rsp)
  0x0000000002dc30ea: mov    $0xffffff65,%edx
  0x0000000002dc30ef: callq  0x0000000002cf57a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000002dc30f4: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000002dc30f5: mov    $0xfffffff6,%edx
  0x0000000002dc30fa: nop
  0x0000000002dc30fb: callq  0x0000000002cf57a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000002dc3100: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000002dc3101: hlt    
  0x0000000002dc3102: hlt    
  0x0000000002dc3103: hlt    
  0x0000000002dc3104: hlt    
  0x0000000002dc3105: hlt    
  0x0000000002dc3106: hlt    
  0x0000000002dc3107: hlt    
  0x0000000002dc3108: hlt    
  0x0000000002dc3109: hlt    
  0x0000000002dc310a: hlt    
  0x0000000002dc310b: hlt    
  0x0000000002dc310c: hlt    
  0x0000000002dc310d: hlt    
  0x0000000002dc310e: hlt    
  0x0000000002dc310f: hlt    
  0x0000000002dc3110: hlt    
  0x0000000002dc3111: hlt    
  0x0000000002dc3112: hlt    
  0x0000000002dc3113: hlt    
  0x0000000002dc3114: hlt    
  0x0000000002dc3115: hlt    
  0x0000000002dc3116: hlt    
  0x0000000002dc3117: hlt    
  0x0000000002dc3118: hlt    
  0x0000000002dc3119: hlt    
  0x0000000002dc311a: hlt    
  0x0000000002dc311b: hlt    
  0x0000000002dc311c: hlt    
  0x0000000002dc311d: hlt    
  0x0000000002dc311e: hlt    
  0x0000000002dc311f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc3120: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dc3125: callq  0x0000000002dc312a
  0x0000000002dc312a: subq   $0x5,(%rsp)
  0x0000000002dc312f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc3134: hlt    
  0x0000000002dc3135: hlt    
  0x0000000002dc3136: hlt    
  0x0000000002dc3137: hlt    
<nmethod compile_id='12' compiler='C2' level='4' entry='0x0000000002dc3060' size='928' address='0x0000000002dc2f10' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='245264' iicount='245264' stamp='0.709'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dc5a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc75140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002dc5ba0: mov    0x8(%rdx),%r10d
  0x0000000002dc5ba4: shl    $0x3,%r10
  0x0000000002dc5ba8: cmp    %r10,%rax
  0x0000000002dc5bab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc5bb1: data16 xchg %ax,%ax
  0x0000000002dc5bb4: nopl   0x0(%rax,%rax,1)
  0x0000000002dc5bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc5bc0: mov    %eax,-0x6000(%rsp)
  0x0000000002dc5bc7: push   %rbp
  0x0000000002dc5bc8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x0000000002dc5bcc: mov    %rdx,%r10
  0x0000000002dc5bcf: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x0000000002dc5bd2: mov    0xc(%r12,%rcx,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x0000000002dc5d59
  0x0000000002dc5bd7: test   %r9d,%r9d
  0x0000000002dc5bda: jl     0x0000000002dc5d21  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002dc5be0: mov    $0xffffffff,%eax
  0x0000000002dc5be5: cmp    %ebp,%r9d
  0x0000000002dc5be8: jge    0x0000000002dc5ce9  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x0000000002dc5bee: cmp    $0x10000,%r8d
  0x0000000002dc5bf5: jge    0x0000000002dc5d3d  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000002dc5bfb: cmp    %ebp,%r9d
  0x0000000002dc5bfe: jae    0x0000000002dc5d07
  0x0000000002dc5c04: mov    %ebp,%r10d
  0x0000000002dc5c07: dec    %r10d
  0x0000000002dc5c0a: cmp    %ebp,%r10d
  0x0000000002dc5c0d: jae    0x0000000002dc5d07
  0x0000000002dc5c13: lea    (%r12,%rcx,8),%rbx
  0x0000000002dc5c17: mov    %r9d,%r11d
  0x0000000002dc5c1a: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000002dc5c1d: movzwl 0x10(%rbx,%r9,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5c23: cmp    %r8d,%ecx
  0x0000000002dc5c26: je     0x0000000002dc5ce6  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5c2c: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002dc5c2f: cmp    %r11d,%r9d
  0x0000000002dc5c32: jl     0x0000000002dc5c1d  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002dc5c34: mov    %ebp,%r11d
  0x0000000002dc5c37: add    $0xfffffff9,%r11d
  0x0000000002dc5c3b: mov    $0x80000000,%ecx
  0x0000000002dc5c40: cmp    %r11d,%r10d
  0x0000000002dc5c43: cmovl  %ecx,%r11d
  0x0000000002dc5c47: cmp    %r11d,%r9d
  0x0000000002dc5c4a: jge    0x0000000002dc5cb8
  0x0000000002dc5c4c: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000002dc5c50: movzwl 0x10(%rbx,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5c56: cmp    %r8d,%r10d
  0x0000000002dc5c59: je     0x0000000002dc5ce6  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5c5f: movslq %r9d,%r10
  0x0000000002dc5c62: movzwl 0x12(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5c68: cmp    %r8d,%edi
  0x0000000002dc5c6b: je     0x0000000002dc5cd9  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5c6d: movzwl 0x14(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5c73: cmp    %r8d,%edi
  0x0000000002dc5c76: je     0x0000000002dc5cf5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5c78: movzwl 0x16(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5c7e: cmp    %r8d,%edi
  0x0000000002dc5c81: je     0x0000000002dc5ce2  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5c83: movzwl 0x18(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5c89: cmp    %r8d,%edi
  0x0000000002dc5c8c: je     0x0000000002dc5cfb  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5c8e: movzwl 0x1a(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5c94: cmp    %r8d,%edi
  0x0000000002dc5c97: je     0x0000000002dc5cd5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5c99: movzwl 0x1c(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5c9f: cmp    %r8d,%edi
  0x0000000002dc5ca2: je     0x0000000002dc5d01  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5ca4: movzwl 0x1e(%rbx,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5caa: cmp    %r8d,%ecx
  0x0000000002dc5cad: je     0x0000000002dc5cde  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5caf: add    $0x8,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002dc5cb3: cmp    %r11d,%r9d
  0x0000000002dc5cb6: jl     0x0000000002dc5c50  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002dc5cb8: cmp    %ebp,%r9d
  0x0000000002dc5cbb: jge    0x0000000002dc5ce9
  0x0000000002dc5cbd: data16 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000002dc5cc0: movzwl 0x10(%rbx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x0000000002dc5cc6: cmp    %r8d,%r11d
  0x0000000002dc5cc9: je     0x0000000002dc5ce6  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x0000000002dc5ccb: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002dc5cce: cmp    %ebp,%r9d
  0x0000000002dc5cd1: jl     0x0000000002dc5cc0  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x0000000002dc5cd3: jmp    0x0000000002dc5ce9
  0x0000000002dc5cd5: add    $0x4,%r9d
  0x0000000002dc5cd9: inc    %r9d
  0x0000000002dc5cdc: jmp    0x0000000002dc5ce6
  0x0000000002dc5cde: add    $0x4,%r9d
  0x0000000002dc5ce2: add    $0x3,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002dc5ce6: mov    %r9d,%eax          ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002dc5ce9: add    $0x30,%rsp
  0x0000000002dc5ced: pop    %rbp
  0x0000000002dc5cee: test   %eax,-0x21c5cf4(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dc5cf4: retq   
  0x0000000002dc5cf5: add    $0x2,%r9d
  0x0000000002dc5cf9: jmp    0x0000000002dc5ce6
  0x0000000002dc5cfb: add    $0x4,%r9d
  0x0000000002dc5cff: jmp    0x0000000002dc5ce6
  0x0000000002dc5d01: add    $0x6,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x0000000002dc5d05: jmp    0x0000000002dc5ce6
  0x0000000002dc5d07: mov    $0xffffff86,%edx
  0x0000000002dc5d0c: mov    %r8d,(%rsp)
  0x0000000002dc5d10: mov    %r9d,0x4(%rsp)
  0x0000000002dc5d15: mov    %ecx,0x8(%rsp)
  0x0000000002dc5d19: xchg   %ax,%ax
  0x0000000002dc5d1b: callq  0x0000000002cf57a0  ; OopMap{[8]=NarrowOop off=384}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x0000000002dc5d20: int3                      ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x0000000002dc5d21: mov    $0xffffff65,%edx
  0x0000000002dc5d26: mov    %r8d,(%rsp)
  0x0000000002dc5d2a: mov    %r9d,0x8(%rsp)
  0x0000000002dc5d2f: mov    %r10,0x10(%rsp)
  0x0000000002dc5d34: data16 xchg %ax,%ax
  0x0000000002dc5d37: callq  0x0000000002cf57a0  ; OopMap{[16]=Oop off=412}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x0000000002dc5d3c: int3                      ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x0000000002dc5d3d: mov    $0xffffff65,%edx
  0x0000000002dc5d42: mov    %r9d,0x4(%rsp)
  0x0000000002dc5d47: mov    %r8d,0x8(%rsp)
  0x0000000002dc5d4c: mov    %r10,0x10(%rsp)
  0x0000000002dc5d51: xchg   %ax,%ax
  0x0000000002dc5d53: callq  0x0000000002cf57a0  ; OopMap{[16]=Oop off=440}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x0000000002dc5d58: int3                      ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x0000000002dc5d59: mov    $0xfffffff6,%edx
  0x0000000002dc5d5e: nop
  0x0000000002dc5d5f: callq  0x0000000002cf57a0  ; OopMap{off=452}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x0000000002dc5d64: int3                      ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)

  0x0000000002dc5d65: hlt    
  0x0000000002dc5d66: hlt    
  0x0000000002dc5d67: hlt    
  0x0000000002dc5d68: hlt    
  0x0000000002dc5d69: hlt    
  0x0000000002dc5d6a: hlt    
  0x0000000002dc5d6b: hlt    
  0x0000000002dc5d6c: hlt    
  0x0000000002dc5d6d: hlt    
  0x0000000002dc5d6e: hlt    
  0x0000000002dc5d6f: hlt    
  0x0000000002dc5d70: hlt    
  0x0000000002dc5d71: hlt    
  0x0000000002dc5d72: hlt    
  0x0000000002dc5d73: hlt    
  0x0000000002dc5d74: hlt    
  0x0000000002dc5d75: hlt    
  0x0000000002dc5d76: hlt    
  0x0000000002dc5d77: hlt    
  0x0000000002dc5d78: hlt    
  0x0000000002dc5d79: hlt    
  0x0000000002dc5d7a: hlt    
  0x0000000002dc5d7b: hlt    
  0x0000000002dc5d7c: hlt    
  0x0000000002dc5d7d: hlt    
  0x0000000002dc5d7e: hlt    
  0x0000000002dc5d7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc5d80: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dc5d85: callq  0x0000000002dc5d8a
  0x0000000002dc5d8a: subq   $0x5,(%rsp)
  0x0000000002dc5d8f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc5d94: hlt    
  0x0000000002dc5d95: hlt    
  0x0000000002dc5d96: hlt    
  0x0000000002dc5d97: hlt    
<nmethod compile_id='32' compiler='C2' level='4' entry='0x0000000002dc5ba0' size='1800' address='0x0000000002dc5a50' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='848' scopes_pcs_offset='1008' dependencies_offset='1776' nul_chk_table_offset='1784' method='java/lang/String indexOf (II)I' bytes='70' count='3805' backedge_count='230560' iicount='3805' stamp='0.713'/>
<writer thread='22236'/>
<task_queued compile_id='37' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='72064' iicount='72064' stamp='0.713' comment='tiered' hot_count='72064'/>
<writer thread='31108'/>
<task_queued compile_id='38' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='4737' iicount='4737' level='3' stamp='0.713' comment='tiered' hot_count='4736'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dc57d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bde9988} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x20]  (sp of caller)
  0x0000000002dc5900: mov    0x8(%rdx),%r10d
  0x0000000002dc5904: shl    $0x3,%r10
  0x0000000002dc5908: cmp    %r10,%rax
  0x0000000002dc590b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc5911: data16 xchg %ax,%ax
  0x0000000002dc5914: nopl   0x0(%rax,%rax,1)
  0x0000000002dc591c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc5920: sub    $0x18,%rsp
  0x0000000002dc5927: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)

  0x0000000002dc592c: cmp    $0x5c,%r8d
  0x0000000002dc5930: je     0x0000000002dc5946  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x0000000002dc5932: cmp    $0x2f,%r8d
  0x0000000002dc5936: je     0x0000000002dc5946  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x0000000002dc5938: xor    %eax,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x0000000002dc593a: add    $0x10,%rsp
  0x0000000002dc593e: pop    %rbp
  0x0000000002dc593f: test   %eax,-0x21c5945(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dc5945: retq                      ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)

  0x0000000002dc5946: mov    $0x1,%eax
  0x0000000002dc594b: jmp    0x0000000002dc593a
  0x0000000002dc594d: hlt    
  0x0000000002dc594e: hlt    
  0x0000000002dc594f: hlt    
  0x0000000002dc5950: hlt    
  0x0000000002dc5951: hlt    
  0x0000000002dc5952: hlt    
  0x0000000002dc5953: hlt    
  0x0000000002dc5954: hlt    
  0x0000000002dc5955: hlt    
  0x0000000002dc5956: hlt    
  0x0000000002dc5957: hlt    
  0x0000000002dc5958: hlt    
  0x0000000002dc5959: hlt    
  0x0000000002dc595a: hlt    
  0x0000000002dc595b: hlt    
  0x0000000002dc595c: hlt    
  0x0000000002dc595d: hlt    
  0x0000000002dc595e: hlt    
  0x0000000002dc595f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc5960: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dc5965: callq  0x0000000002dc596a
  0x0000000002dc596a: subq   $0x5,(%rsp)
  0x0000000002dc596f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc5974: hlt    
  0x0000000002dc5975: hlt    
  0x0000000002dc5976: hlt    
  0x0000000002dc5977: hlt    
<nmethod compile_id='35' compiler='C2' level='4' entry='0x0000000002dc5900' size='584' address='0x0000000002dc57d0' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='576' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='79782' iicount='79782' stamp='0.715'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dc3a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = char
  # parm1:    r9        = char
  #           [sp+0x60]  (sp of caller)
  0x0000000002dc3c40: mov    0x8(%rdx),%r10d
  0x0000000002dc3c44: shl    $0x3,%r10
  0x0000000002dc3c48: cmp    %rax,%r10
  0x0000000002dc3c4b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc3c51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dc3c5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc3c60: mov    %eax,-0x6000(%rsp)
  0x0000000002dc3c67: push   %rbp
  0x0000000002dc3c68: sub    $0x50,%rsp
  0x0000000002dc3c6c: movabs $0x1beb77b8,%rbx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3c76: mov    0xdc(%rbx),%esi
  0x0000000002dc3c7c: add    $0x8,%esi
  0x0000000002dc3c7f: mov    %esi,0xdc(%rbx)
  0x0000000002dc3c85: movabs $0x1bc75ef0,%rbx   ;   {metadata({method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3c8f: and    $0x1ff8,%esi
  0x0000000002dc3c95: cmp    $0x0,%esi
  0x0000000002dc3c98: je     0x0000000002dc413f  ;*iload_1
                                                ; - java.lang.String::replace@0 (line 2067)

  0x0000000002dc3c9e: cmp    %r9d,%r8d
  0x0000000002dc3ca1: movabs $0x1beb77b8,%rbx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3cab: movabs $0x108,%rsi
  0x0000000002dc3cb5: je     0x0000000002dc3cc5
  0x0000000002dc3cbb: movabs $0x118,%rsi
  0x0000000002dc3cc5: mov    (%rbx,%rsi,1),%rdi
  0x0000000002dc3cc9: lea    0x1(%rdi),%rdi
  0x0000000002dc3ccd: mov    %rdi,(%rbx,%rsi,1)
  0x0000000002dc3cd1: je     0x0000000002dc4130  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)

  0x0000000002dc3cd7: mov    0xc(%rdx),%r11d
  0x0000000002dc3cdb: shl    $0x3,%r11          ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x0000000002dc3cdf: mov    0xc(%r11),%r13d    ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x0000000002dc4156
  0x0000000002dc3ce3: mov    $0xffffffff,%ebx
  0x0000000002dc3ce8: jmpq   0x0000000002dc3d77  ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x0000000002dc3ced: data16 xchg %ax,%ax
  0x0000000002dc3cf0: movslq %r14d,%rbx
  0x0000000002dc3cf3: cmp    0xc(%r11),%r14d
  0x0000000002dc3cf7: jae    0x0000000002dc415b
  0x0000000002dc3cfd: movzwl 0x10(%r11,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x0000000002dc3d03: movabs $0x1beb77b8,%rsi   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3d0d: mov    0xe0(%rsi),%edi
  0x0000000002dc3d13: add    $0x8,%edi
  0x0000000002dc3d16: mov    %edi,0xe0(%rsi)
  0x0000000002dc3d1c: movabs $0x1bc75ef0,%rsi   ;   {metadata({method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3d26: and    $0xfff8,%edi
  0x0000000002dc3d2c: cmp    $0x0,%edi
  0x0000000002dc3d2f: je     0x0000000002dc4164  ; OopMap{rdx=Oop r11=Oop off=245}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x0000000002dc3d35: test   %eax,-0x21c3c3b(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dc3d3b: cmp    %r8d,%ebx
  0x0000000002dc3d3e: movabs $0x1beb77b8,%rbx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3d48: movabs $0x148,%rsi
  0x0000000002dc3d52: jne    0x0000000002dc3d62
  0x0000000002dc3d58: movabs $0x158,%rsi
  0x0000000002dc3d62: mov    (%rbx,%rsi,1),%rdi
  0x0000000002dc3d66: lea    0x1(%rdi),%rdi
  0x0000000002dc3d6a: mov    %rdi,(%rbx,%rsi,1)
  0x0000000002dc3d6e: je     0x0000000002dc3dbb  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x0000000002dc3d74: mov    %r14,%rbx          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x0000000002dc3d77: mov    %rbx,%r14
  0x0000000002dc3d7a: inc    %r14d
  0x0000000002dc3d7d: cmp    %r13d,%r14d
  0x0000000002dc3d80: movabs $0x1beb77b8,%rbx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3d8a: movabs $0x128,%rsi
  0x0000000002dc3d94: jge    0x0000000002dc3da4
  0x0000000002dc3d9a: movabs $0x138,%rsi
  0x0000000002dc3da4: mov    (%rbx,%rsi,1),%rdi
  0x0000000002dc3da8: lea    0x1(%rdi),%rdi
  0x0000000002dc3dac: mov    %rdi,(%rbx,%rsi,1)
  0x0000000002dc3db0: jge    0x0000000002dc3dcb
  0x0000000002dc3db6: jmpq   0x0000000002dc3cf0  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x0000000002dc3dbb: movabs $0x1beb77b8,%rbx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3dc5: incl   0x168(%rbx)        ;*goto
                                                ; - java.lang.String::replace@38 (line 2074)

  0x0000000002dc3dcb: cmp    %r13d,%r14d
  0x0000000002dc3dce: movabs $0x1beb77b8,%rbx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3dd8: movabs $0x180,%rsi
  0x0000000002dc3de2: jge    0x0000000002dc3df2
  0x0000000002dc3de8: movabs $0x190,%rsi
  0x0000000002dc3df2: mov    (%rbx,%rsi,1),%rdi
  0x0000000002dc3df6: lea    0x1(%rdi),%rdi
  0x0000000002dc3dfa: mov    %rdi,(%rbx,%rsi,1)
  0x0000000002dc3dfe: jge    0x0000000002dc4130  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x0000000002dc3e04: mov    %r13,%rbx
  0x0000000002dc3e07: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002dc3e11: movslq %ebx,%rbx
  0x0000000002dc3e14: mov    %rbx,%rdi
  0x0000000002dc3e17: cmp    $0xffffff,%rbx
  0x0000000002dc3e1e: ja     0x0000000002dc417b
  0x0000000002dc3e24: movabs $0x17,%rsi
  0x0000000002dc3e2e: lea    (%rsi,%rbx,2),%rsi
  0x0000000002dc3e32: and    $0xfffffffffffffff8,%rsi
  0x0000000002dc3e36: mov    0x60(%r15),%rax
  0x0000000002dc3e3a: lea    (%rax,%rsi,1),%rsi
  0x0000000002dc3e3e: cmp    0x70(%r15),%rsi
  0x0000000002dc3e42: ja     0x0000000002dc417b
  0x0000000002dc3e48: mov    %rsi,0x60(%r15)
  0x0000000002dc3e4c: sub    %rax,%rsi
  0x0000000002dc3e4f: movq   $0x1,(%rax)
  0x0000000002dc3e56: mov    %rdx,%rcx
  0x0000000002dc3e59: shr    $0x3,%rcx
  0x0000000002dc3e5d: mov    %ecx,0x8(%rax)
  0x0000000002dc3e60: mov    %ebx,0xc(%rax)
  0x0000000002dc3e63: sub    $0x10,%rsi
  0x0000000002dc3e67: je     0x0000000002dc3e7e
  0x0000000002dc3e6d: xor    %rbx,%rbx
  0x0000000002dc3e70: shr    $0x3,%rsi
  0x0000000002dc3e74: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002dc3e79: dec    %rsi
  0x0000000002dc3e7c: jne    0x0000000002dc3e74
  0x0000000002dc3e7e: mov    %rax,%rbx          ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)

  0x0000000002dc3e81: mov    $0x0,%edx
  0x0000000002dc3e86: jmpq   0x0000000002dc3efe  ;*iload
                                                ; - java.lang.String::replace@55 (line 2079)

  0x0000000002dc3e8b: nopl   0x0(%rax,%rax,1)
  0x0000000002dc3e90: movslq %edx,%rsi
  0x0000000002dc3e93: cmp    0xc(%r11),%edx
  0x0000000002dc3e97: jae    0x0000000002dc4185
  0x0000000002dc3e9d: movzwl 0x10(%r11,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)

  0x0000000002dc3ea3: movslq %edx,%rdi
  0x0000000002dc3ea6: cmp    0xc(%rbx),%edx
  0x0000000002dc3ea9: jae    0x0000000002dc418e
  0x0000000002dc3eaf: mov    %si,0x10(%rbx,%rdi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x0000000002dc3eb4: inc    %edx
  0x0000000002dc3eb6: movabs $0x1beb77b8,%rsi   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3ec0: mov    0xe0(%rsi),%edi
  0x0000000002dc3ec6: add    $0x8,%edi
  0x0000000002dc3ec9: mov    %edi,0xe0(%rsi)
  0x0000000002dc3ecf: movabs $0x1bc75ef0,%rsi   ;   {metadata({method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3ed9: and    $0xfff8,%edi
  0x0000000002dc3edf: cmp    $0x0,%edi
  0x0000000002dc3ee2: je     0x0000000002dc4197  ; OopMap{r11=Oop rbx=Oop off=680}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x0000000002dc3ee8: test   %eax,-0x21c3dee(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dc3eee: movabs $0x1beb77b8,%rsi   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3ef8: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x0000000002dc3efe: cmp    %r14d,%edx
  0x0000000002dc3f01: movabs $0x1beb77b8,%rsi   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3f0b: movabs $0x1a0,%rdi
  0x0000000002dc3f15: jge    0x0000000002dc3f25
  0x0000000002dc3f1b: movabs $0x1b0,%rdi
  0x0000000002dc3f25: mov    (%rsi,%rdi,1),%rax
  0x0000000002dc3f29: lea    0x1(%rax),%rax
  0x0000000002dc3f2d: mov    %rax,(%rsi,%rdi,1)
  0x0000000002dc3f31: jge    0x0000000002dc3ffc
  0x0000000002dc3f37: jmpq   0x0000000002dc3e90  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x0000000002dc3f3c: nopl   0x0(%rax)
  0x0000000002dc3f40: movslq %r14d,%rdx
  0x0000000002dc3f43: cmp    0xc(%r11),%r14d
  0x0000000002dc3f47: jae    0x0000000002dc41ae
  0x0000000002dc3f4d: movzwl 0x10(%r11,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x0000000002dc3f53: cmp    %r8d,%edx
  0x0000000002dc3f56: movabs $0x1beb77b8,%rsi   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3f60: movabs $0x1f8,%rdi
  0x0000000002dc3f6a: jne    0x0000000002dc3f7a
  0x0000000002dc3f70: movabs $0x208,%rdi
  0x0000000002dc3f7a: mov    (%rsi,%rdi,1),%rax
  0x0000000002dc3f7e: lea    0x1(%rax),%rax
  0x0000000002dc3f82: mov    %rax,(%rsi,%rdi,1)
  0x0000000002dc3f86: jne    0x0000000002dc3f9f  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x0000000002dc3f8c: movabs $0x1beb77b8,%rdx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3f96: incl   0x218(%rdx)
  0x0000000002dc3f9c: mov    %r9,%rdx           ;*goto
                                                ; - java.lang.String::replace@102 (line 2084)

  0x0000000002dc3f9f: movslq %r14d,%rsi
  0x0000000002dc3fa2: cmp    0xc(%rbx),%r14d
  0x0000000002dc3fa6: jae    0x0000000002dc41b7
  0x0000000002dc3fac: mov    %dx,0x10(%rbx,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x0000000002dc3fb1: inc    %r14d
  0x0000000002dc3fb4: movabs $0x1beb77b8,%rdx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3fbe: mov    0xe0(%rdx),%esi
  0x0000000002dc3fc4: add    $0x8,%esi
  0x0000000002dc3fc7: mov    %esi,0xe0(%rdx)
  0x0000000002dc3fcd: movabs $0x1bc75ef0,%rdx   ;   {metadata({method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3fd7: and    $0xfff8,%esi
  0x0000000002dc3fdd: cmp    $0x0,%esi
  0x0000000002dc3fe0: je     0x0000000002dc41c0  ; OopMap{r11=Oop rbx=Oop off=934}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x0000000002dc3fe6: test   %eax,-0x21c3eec(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dc3fec: movabs $0x1beb77b8,%rdx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc3ff6: incl   0x230(%rdx)        ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x0000000002dc3ffc: cmp    %r13d,%r14d
  0x0000000002dc3fff: movabs $0x1beb77b8,%rdx   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc4009: movabs $0x1d8,%rsi
  0x0000000002dc4013: jge    0x0000000002dc4023
  0x0000000002dc4019: movabs $0x1e8,%rsi
  0x0000000002dc4023: mov    (%rdx,%rsi,1),%rdi
  0x0000000002dc4027: lea    0x1(%rdi),%rdi
  0x0000000002dc402b: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002dc402f: jl     0x0000000002dc3f40  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x0000000002dc4035: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002dc403f: mov    0x60(%r15),%rax
  0x0000000002dc4043: lea    0x18(%rax),%rdi
  0x0000000002dc4047: cmp    0x70(%r15),%rdi
  0x0000000002dc404b: ja     0x0000000002dc41d7
  0x0000000002dc4051: mov    %rdi,0x60(%r15)
  0x0000000002dc4055: mov    0xa8(%rdx),%rcx
  0x0000000002dc405c: mov    %rcx,(%rax)
  0x0000000002dc405f: mov    %rdx,%rcx
  0x0000000002dc4062: shr    $0x3,%rcx
  0x0000000002dc4066: mov    %ecx,0x8(%rax)
  0x0000000002dc4069: xor    %rcx,%rcx
  0x0000000002dc406c: mov    %ecx,0xc(%rax)
  0x0000000002dc406f: xor    %rcx,%rcx
  0x0000000002dc4072: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x0000000002dc4076: mov    %rax,%rsi
  0x0000000002dc4079: movabs $0x1beb77b8,%rdi   ;   {metadata(method data for {method} {0x000000001bc75ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc4083: addq   $0x1,0x248(%rdi)
  0x0000000002dc408b: movabs $0x1beb5650,%rsi   ;   {metadata(method data for {method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc4095: mov    0xdc(%rsi),%edi
  0x0000000002dc409b: add    $0x8,%edi
  0x0000000002dc409e: mov    %edi,0xdc(%rsi)
  0x0000000002dc40a4: movabs $0x1bc73b80,%rsi   ;   {metadata({method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc40ae: and    $0x7ffff8,%edi
  0x0000000002dc40b4: cmp    $0x0,%edi
  0x0000000002dc40b7: je     0x0000000002dc41e4
  0x0000000002dc40bd: mov    %rax,%rsi
  0x0000000002dc40c0: movabs $0x1beb5650,%rdi   ;   {metadata(method data for {method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc40ca: addq   $0x1,0x108(%rdi)
  0x0000000002dc40d2: movabs $0x1bda1c10,%rsi   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dc40dc: mov    0xdc(%rsi),%edi
  0x0000000002dc40e2: add    $0x8,%edi
  0x0000000002dc40e5: mov    %edi,0xdc(%rsi)
  0x0000000002dc40eb: movabs $0x1bc70480,%rsi   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dc40f5: and    $0x7ffff8,%edi
  0x0000000002dc40fb: cmp    $0x0,%edi
  0x0000000002dc40fe: je     0x0000000002dc41fb
  0x0000000002dc4104: mov    %rbx,%r10
  0x0000000002dc4107: shr    $0x3,%r10
  0x0000000002dc410b: mov    %r10d,0xc(%rax)
  0x0000000002dc410f: mov    %rax,%rsi
  0x0000000002dc4112: shr    $0x9,%rsi
  0x0000000002dc4116: movabs $0xea5d000,%rdi
  0x0000000002dc4120: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.String::replace@121 (line 2087)

  0x0000000002dc4124: add    $0x50,%rsp
  0x0000000002dc4128: pop    %rbp
  0x0000000002dc4129: test   %eax,-0x21c402f(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc412f: retq                      ;*areturn
                                                ; - java.lang.String::replace@124 (line 2087)

  0x0000000002dc4130: mov    %rdx,%rax
  0x0000000002dc4133: add    $0x50,%rsp
  0x0000000002dc4137: pop    %rbp
  0x0000000002dc4138: test   %eax,-0x21c403e(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc413e: retq   
  0x0000000002dc413f: mov    %rbx,0x8(%rsp)
  0x0000000002dc4144: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc414c: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=1297}
                                                ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)
                                                ;   {runtime_call}
  0x0000000002dc4151: jmpq   0x0000000002dc3c9e
  0x0000000002dc4156: callq  0x0000000002dad680  ; OopMap{rdx=Oop r11=Oop off=1307}
                                                ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x0000000002dc415b: mov    %r14,(%rsp)
  0x0000000002dc415f: callq  0x0000000002dac940  ; OopMap{rdx=Oop r11=Oop off=1316}
                                                ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)
                                                ;   {runtime_call}
  0x0000000002dc4164: mov    %rsi,0x8(%rsp)
  0x0000000002dc4169: movq   $0x23,(%rsp)
  0x0000000002dc4171: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r11=Oop off=1334}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)
                                                ;   {runtime_call}
  0x0000000002dc4176: jmpq   0x0000000002dc3d35
  0x0000000002dc417b: callq  0x0000000002dae700  ; OopMap{r11=Oop off=1344}
                                                ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x0000000002dc4180: jmpq   0x0000000002dc3e7e
  0x0000000002dc4185: mov    %rdx,(%rsp)
  0x0000000002dc4189: callq  0x0000000002dac940  ; OopMap{r11=Oop rbx=Oop off=1358}
                                                ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)
                                                ;   {runtime_call}
  0x0000000002dc418e: mov    %rdx,(%rsp)
  0x0000000002dc4192: callq  0x0000000002dac940  ; OopMap{r11=Oop rbx=Oop off=1367}
                                                ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)
                                                ;   {runtime_call}
  0x0000000002dc4197: mov    %rsi,0x8(%rsp)
  0x0000000002dc419c: movq   $0x4b,(%rsp)
  0x0000000002dc41a4: callq  0x0000000002db1d60  ; OopMap{r11=Oop rbx=Oop off=1385}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)
                                                ;   {runtime_call}
  0x0000000002dc41a9: jmpq   0x0000000002dc3ee8
  0x0000000002dc41ae: mov    %r14,(%rsp)
  0x0000000002dc41b2: callq  0x0000000002dac940  ; OopMap{r11=Oop rbx=Oop off=1399}
                                                ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x0000000002dc41b7: mov    %r14,(%rsp)
  0x0000000002dc41bb: callq  0x0000000002dac940  ; OopMap{r11=Oop rbx=Oop off=1408}
                                                ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x0000000002dc41c0: mov    %rdx,0x8(%rsp)
  0x0000000002dc41c5: movq   $0x6f,(%rsp)
  0x0000000002dc41cd: callq  0x0000000002db1d60  ; OopMap{r11=Oop rbx=Oop off=1426}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)
                                                ;   {runtime_call}
  0x0000000002dc41d2: jmpq   0x0000000002dc3fe6
  0x0000000002dc41d7: mov    %rdx,%rdx
  0x0000000002dc41da: callq  0x0000000002dade00  ; OopMap{rbx=Oop off=1439}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x0000000002dc41df: jmpq   0x0000000002dc4076
  0x0000000002dc41e4: mov    %rsi,0x8(%rsp)
  0x0000000002dc41e9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc41f1: callq  0x0000000002db1d60  ; OopMap{rbx=Oop rax=Oop off=1462}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x0000000002dc41f6: jmpq   0x0000000002dc40bd
  0x0000000002dc41fb: mov    %rsi,0x8(%rsp)
  0x0000000002dc4200: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc4208: callq  0x0000000002db1d60  ; OopMap{rbx=Oop rax=Oop off=1485}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x0000000002dc420d: jmpq   0x0000000002dc4104
  0x0000000002dc4212: nop
  0x0000000002dc4213: nop
  0x0000000002dc4214: mov    0x2a8(%r15),%rax
  0x0000000002dc421b: movabs $0x0,%r10
  0x0000000002dc4225: mov    %r10,0x2a8(%r15)
  0x0000000002dc422c: movabs $0x0,%r10
  0x0000000002dc4236: mov    %r10,0x2b0(%r15)
  0x0000000002dc423d: add    $0x50,%rsp
  0x0000000002dc4241: pop    %rbp
  0x0000000002dc4242: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dc4247: hlt    
  0x0000000002dc4248: hlt    
  0x0000000002dc4249: hlt    
  0x0000000002dc424a: hlt    
  0x0000000002dc424b: hlt    
  0x0000000002dc424c: hlt    
  0x0000000002dc424d: hlt    
  0x0000000002dc424e: hlt    
  0x0000000002dc424f: hlt    
  0x0000000002dc4250: hlt    
  0x0000000002dc4251: hlt    
  0x0000000002dc4252: hlt    
  0x0000000002dc4253: hlt    
  0x0000000002dc4254: hlt    
  0x0000000002dc4255: hlt    
  0x0000000002dc4256: hlt    
  0x0000000002dc4257: hlt    
  0x0000000002dc4258: hlt    
  0x0000000002dc4259: hlt    
  0x0000000002dc425a: hlt    
  0x0000000002dc425b: hlt    
  0x0000000002dc425c: hlt    
  0x0000000002dc425d: hlt    
  0x0000000002dc425e: hlt    
  0x0000000002dc425f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc4260: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dc4265: mov    %rsp,-0x28(%rsp)
  0x0000000002dc426a: sub    $0x80,%rsp
  0x0000000002dc4271: mov    %rax,0x78(%rsp)
  0x0000000002dc4276: mov    %rcx,0x70(%rsp)
  0x0000000002dc427b: mov    %rdx,0x68(%rsp)
  0x0000000002dc4280: mov    %rbx,0x60(%rsp)
  0x0000000002dc4285: mov    %rbp,0x50(%rsp)
  0x0000000002dc428a: mov    %rsi,0x48(%rsp)
  0x0000000002dc428f: mov    %rdi,0x40(%rsp)
  0x0000000002dc4294: mov    %r8,0x38(%rsp)
  0x0000000002dc4299: mov    %r9,0x30(%rsp)
  0x0000000002dc429e: mov    %r10,0x28(%rsp)
  0x0000000002dc42a3: mov    %r11,0x20(%rsp)
  0x0000000002dc42a8: mov    %r12,0x18(%rsp)
  0x0000000002dc42ad: mov    %r13,0x10(%rsp)
  0x0000000002dc42b2: mov    %r14,0x8(%rsp)
  0x0000000002dc42b7: mov    %r15,(%rsp)
  0x0000000002dc42bb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dc42c5: movabs $0x2dc4265,%rdx    ;   {internal_word}
  0x0000000002dc42cf: mov    %rsp,%r8
  0x0000000002dc42d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002dc42d6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dc42db: hlt    
[Deopt Handler Code]
  0x0000000002dc42dc: movabs $0x2dc42dc,%r10    ;   {section_word}
  0x0000000002dc42e6: push   %r10
  0x0000000002dc42e8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc42ed: hlt    
  0x0000000002dc42ee: hlt    
  0x0000000002dc42ef: hlt    
<nmethod compile_id='33' compiler='C1' level='3' entry='0x0000000002dc3c40' size='3352' address='0x0000000002dc3a90' relocation_offset='288' insts_offset='432' stub_offset='2000' scopes_data_offset='2168' scopes_pcs_offset='2608' dependencies_offset='3328' nul_chk_table_offset='3336' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='377' backedge_count='26990' iicount='377' stamp='0.726'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dc32d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdd1ee0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  # parm3:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002dc3420: mov    0x8(%rdx),%r10d
  0x0000000002dc3424: shl    $0x3,%r10
  0x0000000002dc3428: cmp    %r10,%rax
  0x0000000002dc342b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc3431: data16 xchg %ax,%ax
  0x0000000002dc3434: nopl   0x0(%rax,%rax,1)
  0x0000000002dc343c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc3440: mov    %eax,-0x6000(%rsp)
  0x0000000002dc3447: push   %rbp
  0x0000000002dc3448: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)

  0x0000000002dc344c: mov    %rdx,%r13
  0x0000000002dc344f: mov    0xc(%rsi),%r11d    ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x0000000002dc3645
  0x0000000002dc3453: cmp    %r11d,%edi
  0x0000000002dc3456: mov    %r11d,%r10d
  0x0000000002dc3459: cmovl  %edi,%r10d         ;*invokestatic min
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x0000000002dc345d: mov    %r9d,%ecx
  0x0000000002dc3460: add    %edi,%ecx          ;*iadd
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@2 (line 704)

  0x0000000002dc3462: xor    %eax,%eax
  0x0000000002dc3464: test   %r10d,%r10d
  0x0000000002dc3467: jle    0x0000000002dc3593  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000002dc346d: mov    0xc(%r8),%ebx      ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ; implicit exception: dispatches to 0x0000000002dc35dd
  0x0000000002dc3471: cmp    %ebx,%r9d
  0x0000000002dc3474: jae    0x0000000002dc35dd
  0x0000000002dc347a: mov    %r9d,%edx
  0x0000000002dc347d: add    %r10d,%edx
  0x0000000002dc3480: dec    %edx
  0x0000000002dc3482: cmp    %ebx,%edx
  0x0000000002dc3484: jae    0x0000000002dc35dd
  0x0000000002dc348a: test   %r11d,%r11d
  0x0000000002dc348d: jbe    0x0000000002dc35dd
  0x0000000002dc3493: mov    %r10d,%edi
  0x0000000002dc3496: dec    %edi
  0x0000000002dc3498: cmp    %r11d,%edi
  0x0000000002dc349b: jae    0x0000000002dc35dd  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000002dc34a1: movzwl 0x10(%r8,%r9,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000002dc34a7: cmp    $0x80,%ebp
  0x0000000002dc34ad: jge    0x0000000002dc3635  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000002dc34b3: mov    %bpl,0x10(%rsi)    ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000002dc34b7: mov    %r10d,%edi
  0x0000000002dc34ba: add    $0xfffffffd,%edi
  0x0000000002dc34bd: mov    $0x80000000,%r11d
  0x0000000002dc34c3: cmp    %edi,%r10d
  0x0000000002dc34c6: cmovl  %r11d,%edi
  0x0000000002dc34ca: mov    $0x1,%eax
  0x0000000002dc34cf: cmp    $0x1,%edi
  0x0000000002dc34d2: jle    0x0000000002dc3605
  0x0000000002dc34d8: nopl   0x0(%rax,%rax,1)
  0x0000000002dc34e0: mov    %eax,%r11d
  0x0000000002dc34e3: add    %r9d,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000002dc34e6: movzwl 0x10(%r8,%r11,2),%ebx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000002dc34ec: cmp    $0x80,%ebx
  0x0000000002dc34f2: jge    0x0000000002dc359f  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000002dc34f8: movslq %r11d,%r14
  0x0000000002dc34fb: movzwl 0x12(%r8,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000002dc3501: movslq %eax,%rdx
  0x0000000002dc3504: mov    %bl,0x10(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000002dc3508: cmp    $0x80,%ebp
  0x0000000002dc350e: jge    0x0000000002dc35a3  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000002dc3514: movzwl 0x14(%r8,%r14,2),%ebx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000002dc351a: movslq %eax,%rdx
  0x0000000002dc351d: mov    %bpl,0x11(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000002dc3522: cmp    $0x80,%ebx
  0x0000000002dc3528: jge    0x0000000002dc3598  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000002dc352a: mov    %bl,0x12(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000002dc352e: movzwl 0x16(%r8,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000002dc3534: cmp    $0x80,%ebp
  0x0000000002dc353a: jge    0x0000000002dc35aa  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000002dc353c: mov    %bpl,0x13(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000002dc3541: add    $0x4,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x0000000002dc3544: cmp    %edi,%eax
  0x0000000002dc3546: jl     0x0000000002dc34e0
  0x0000000002dc3548: add    $0x3,%r11d
  0x0000000002dc354c: cmp    %r10d,%eax
  0x0000000002dc354f: jge    0x0000000002dc357b
  0x0000000002dc3551: data16 xchg %ax,%ax
  0x0000000002dc3554: mov    %eax,%r11d
  0x0000000002dc3557: add    %r9d,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000002dc355a: movzwl 0x10(%r8,%r11,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x0000000002dc3560: cmp    $0x80,%ebp
  0x0000000002dc3566: jge    0x0000000002dc363d  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000002dc356c: movslq %eax,%rbx
  0x0000000002dc356f: mov    %bpl,0x10(%rsi,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x0000000002dc3574: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x0000000002dc3576: cmp    %r10d,%eax
  0x0000000002dc3579: jl     0x0000000002dc3554
  0x0000000002dc357b: inc    %r11d              ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000002dc357e: cmp    %ecx,%r11d
  0x0000000002dc3581: jl     0x0000000002dc360d
  0x0000000002dc3587: add    $0x40,%rsp
  0x0000000002dc358b: pop    %rbp
  0x0000000002dc358c: test   %eax,-0x21c3592(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dc3592: retq   
  0x0000000002dc3593: mov    %r9d,%r11d
  0x0000000002dc3596: jmp    0x0000000002dc357e
  0x0000000002dc3598: add    $0x2,%r11d
  0x0000000002dc359c: add    $0x2,%eax
  0x0000000002dc359f: mov    %ebx,%ebp
  0x0000000002dc35a1: jmp    0x0000000002dc35b1  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000002dc35a3: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x0000000002dc35a5: inc    %r11d
  0x0000000002dc35a8: jmp    0x0000000002dc35b1  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000002dc35aa: add    $0x3,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x0000000002dc35ad: add    $0x3,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000002dc35b1: mov    %eax,(%rsp)
  0x0000000002dc35b4: mov    $0xffffff65,%edx
  0x0000000002dc35b9: mov    %r8,0x8(%rsp)
  0x0000000002dc35be: mov    %r11d,0x4(%rsp)
  0x0000000002dc35c3: mov    %r13,0x10(%rsp)
  0x0000000002dc35c8: mov    %rsi,0x18(%rsp)
  0x0000000002dc35cd: mov    %ecx,0x20(%rsp)
  0x0000000002dc35d1: mov    %r10d,0x24(%rsp)
  0x0000000002dc35d6: nop
  0x0000000002dc35d7: callq  0x0000000002cf57a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=444}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x0000000002dc35dc: int3                      ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000002dc35dd: mov    $0xffffff86,%edx
  0x0000000002dc35e2: mov    %r8,%rbp
  0x0000000002dc35e5: mov    %r9d,(%rsp)
  0x0000000002dc35e9: mov    %r13,0x8(%rsp)
  0x0000000002dc35ee: mov    %rsi,0x10(%rsp)
  0x0000000002dc35f3: mov    %ecx,0x4(%rsp)
  0x0000000002dc35f7: mov    %r10d,0x18(%rsp)
  0x0000000002dc35fc: data16 xchg %ax,%ax
  0x0000000002dc35ff: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [8]=Oop [16]=Oop off=484}
                                                ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x0000000002dc3604: int3                      ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000002dc3605: mov    %r9d,%r11d
  0x0000000002dc3608: jmpq   0x0000000002dc354c  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x0000000002dc360d: mov    $0xffffff65,%edx
  0x0000000002dc3612: mov    %r8,%rbp
  0x0000000002dc3615: mov    %eax,0x4(%rsp)
  0x0000000002dc3619: mov    %r11d,0x8(%rsp)
  0x0000000002dc361e: mov    %r13,0x10(%rsp)
  0x0000000002dc3623: mov    %rsi,0x18(%rsp)
  0x0000000002dc3628: mov    %ecx,0x20(%rsp)
  0x0000000002dc362c: data16 xchg %ax,%ax
  0x0000000002dc362f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [16]=Oop [24]=Oop off=532}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x0000000002dc3634: int3                      ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x0000000002dc3635: mov    %r9d,%r11d
  0x0000000002dc3638: jmpq   0x0000000002dc35b1  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000002dc363d: mov    %eax,(%rsp)
  0x0000000002dc3640: jmpq   0x0000000002dc35b4
  0x0000000002dc3645: mov    $0xfffffff6,%edx
  0x0000000002dc364a: nop
  0x0000000002dc364b: callq  0x0000000002cf57a0  ; OopMap{off=560}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x0000000002dc3650: int3                      ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x0000000002dc3651: hlt    
  0x0000000002dc3652: hlt    
  0x0000000002dc3653: hlt    
  0x0000000002dc3654: hlt    
  0x0000000002dc3655: hlt    
  0x0000000002dc3656: hlt    
  0x0000000002dc3657: hlt    
  0x0000000002dc3658: hlt    
  0x0000000002dc3659: hlt    
  0x0000000002dc365a: hlt    
  0x0000000002dc365b: hlt    
  0x0000000002dc365c: hlt    
  0x0000000002dc365d: hlt    
  0x0000000002dc365e: hlt    
  0x0000000002dc365f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc3660: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dc3665: callq  0x0000000002dc366a
  0x0000000002dc366a: subq   $0x5,(%rsp)
  0x0000000002dc366f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc3674: hlt    
  0x0000000002dc3675: hlt    
  0x0000000002dc3676: hlt    
  0x0000000002dc3677: hlt    
<nmethod compile_id='30' compiler='C2' level='4' entry='0x0000000002dc3420' size='1936' address='0x0000000002dc32d0' relocation_offset='288' insts_offset='336' stub_offset='912' scopes_data_offset='944' scopes_pcs_offset='1152' dependencies_offset='1904' nul_chk_table_offset='1912' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1654' backedge_count='62892' iicount='1654' stamp='0.731'/>
<writer thread='31108'/>
<task_queued compile_id='39' method='java/lang/String getChars (II[CI)V' bytes='62' count='3968' iicount='3968' level='3' stamp='0.732' comment='tiered' hot_count='3968'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dca890:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002dcaaa0: mov    %eax,-0x6000(%rsp)
  0x0000000002dcaaa7: push   %rbp
  0x0000000002dcaaa8: sub    $0xa0,%rsp
  0x0000000002dcaaaf: mov    %rdx,%r11
  0x0000000002dcaab2: movabs $0x1be5c7b8,%rbx   ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcaabc: mov    0xdc(%rbx),%edx
  0x0000000002dcaac2: add    $0x8,%edx
  0x0000000002dcaac5: mov    %edx,0xdc(%rbx)
  0x0000000002dcaacb: movabs $0x1bd87820,%rbx   ;   {metadata({method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcaad5: and    $0x1ff8,%edx
  0x0000000002dcaadb: cmp    $0x0,%edx
  0x0000000002dcaade: je     0x0000000002dcb349  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000002dcaae4: mov    %r9,%r13
  0x0000000002dcaae7: sub    %r8d,%r13d
  0x0000000002dcaaea: cmp    $0x0,%r13d
  0x0000000002dcaaee: movabs $0x1be5c7b8,%rbx   ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcaaf8: movabs $0x108,%rdx
  0x0000000002dcab02: jge    0x0000000002dcab12
  0x0000000002dcab08: movabs $0x118,%rdx
  0x0000000002dcab12: mov    (%rbx,%rdx,1),%rsi
  0x0000000002dcab16: lea    0x1(%rsi),%rsi
  0x0000000002dcab1a: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002dcab1e: jl     0x0000000002dcace6  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000002dcab24: mov    %r13,%rbx
  0x0000000002dcab27: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002dcab31: movslq %ebx,%rbx
  0x0000000002dcab34: mov    %rbx,%rdi
  0x0000000002dcab37: cmp    $0xffffff,%rbx
  0x0000000002dcab3e: ja     0x0000000002dcb360
  0x0000000002dcab44: movabs $0x17,%rsi
  0x0000000002dcab4e: lea    (%rsi,%rbx,2),%rsi
  0x0000000002dcab52: and    $0xfffffffffffffff8,%rsi
  0x0000000002dcab56: mov    0x60(%r15),%rax
  0x0000000002dcab5a: lea    (%rax,%rsi,1),%rsi
  0x0000000002dcab5e: cmp    0x70(%r15),%rsi
  0x0000000002dcab62: ja     0x0000000002dcb360
  0x0000000002dcab68: mov    %rsi,0x60(%r15)
  0x0000000002dcab6c: sub    %rax,%rsi
  0x0000000002dcab6f: movq   $0x1,(%rax)
  0x0000000002dcab76: mov    %rdx,%rcx
  0x0000000002dcab79: shr    $0x3,%rcx
  0x0000000002dcab7d: mov    %ecx,0x8(%rax)
  0x0000000002dcab80: mov    %ebx,0xc(%rax)
  0x0000000002dcab83: sub    $0x10,%rsi
  0x0000000002dcab87: je     0x0000000002dcab9e
  0x0000000002dcab8d: xor    %rbx,%rbx
  0x0000000002dcab90: shr    $0x3,%rsi
  0x0000000002dcab94: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002dcab99: dec    %rsi
  0x0000000002dcab9c: jne    0x0000000002dcab94  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002dcab9e: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000002dcb36a
  0x0000000002dcaba2: sub    %r8d,%edx
  0x0000000002dcaba5: movabs $0x1be5c7b8,%r9    ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcabaf: addq   $0x1,0x208(%r9)
  0x0000000002dcabb7: movabs $0x1be5bf60,%r9    ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dcabc1: mov    0xdc(%r9),%edi
  0x0000000002dcabc8: add    $0x8,%edi
  0x0000000002dcabcb: mov    %edi,0xdc(%r9)
  0x0000000002dcabd2: movabs $0x1bd62b00,%r9    ;   {metadata({method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dcabdc: and    $0x7ffff8,%edi
  0x0000000002dcabe2: cmp    $0x0,%edi
  0x0000000002dcabe5: je     0x0000000002dcb36f
  0x0000000002dcabeb: cmp    %r13d,%edx
  0x0000000002dcabee: movabs $0x1be5bf60,%r9    ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dcabf8: movabs $0x108,%rdi
  0x0000000002dcac02: jg     0x0000000002dcac12
  0x0000000002dcac08: movabs $0x118,%rdi
  0x0000000002dcac12: mov    (%r9,%rdi,1),%rsi
  0x0000000002dcac16: lea    0x1(%rsi),%rsi
  0x0000000002dcac1a: mov    %rsi,(%r9,%rdi,1)
  0x0000000002dcac1e: jg     0x0000000002dcac3d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002dcac24: movabs $0x1be5bf60,%r9    ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dcac2e: incl   0x128(%r9)
  0x0000000002dcac35: mov    %rdx,%rsi
  0x0000000002dcac38: jmpq   0x0000000002dcac40  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002dcac3d: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002dcac40: movabs $0x1be5c7b8,%rdx   ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcac4a: addq   $0x1,0x218(%rdx)
  0x0000000002dcac52: mov    %r11,%rdx
  0x0000000002dcac55: mov    %rax,%r9
  0x0000000002dcac58: mov    $0x0,%edi
  0x0000000002dcac5d: mov    %rax,0x70(%rsp)
  0x0000000002dcac62: test   %r8d,%r8d
  0x0000000002dcac65: jl     0x0000000002dcb386
  0x0000000002dcac6b: lea    (%r8,%rsi,1),%rcx
  0x0000000002dcac6f: cmp    0xc(%rdx),%ecx
  0x0000000002dcac72: ja     0x0000000002dcb386
  0x0000000002dcac78: lea    (%rdi,%rsi,1),%rcx
  0x0000000002dcac7c: cmp    0xc(%r9),%ecx
  0x0000000002dcac80: ja     0x0000000002dcb386
  0x0000000002dcac86: test   %esi,%esi
  0x0000000002dcac88: jl     0x0000000002dcb386
  0x0000000002dcac8e: je     0x0000000002dcacd2
  0x0000000002dcac94: movslq %r8d,%r8
  0x0000000002dcac97: movslq %edi,%rdi
  0x0000000002dcac9a: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002dcac9f: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002dcaca4: mov    %rsi,%r8
  0x0000000002dcaca7: sub    $0x20,%rsp
  0x0000000002dcacab: test   $0xf,%esp
  0x0000000002dcacb1: je     0x0000000002dcacc9
  0x0000000002dcacb7: sub    $0x8,%rsp
  0x0000000002dcacbb: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002dcacc0: add    $0x8,%rsp
  0x0000000002dcacc4: jmpq   0x0000000002dcacce
  0x0000000002dcacc9: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002dcacce: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002dcacd2: mov    0x70(%rsp),%rax
  0x0000000002dcacd7: add    $0xa0,%rsp
  0x0000000002dcacde: pop    %rbp
  0x0000000002dcacdf: test   %eax,-0x21cabe5(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dcace5: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x0000000002dcace6: mov    %r9d,0x80(%rsp)
  0x0000000002dcacee: xchg   %ax,%ax
  0x0000000002dcacf0: jmpq   0x0000000002dcb3a0  ;   {no_reloc}
  0x0000000002dcacf5: add    %al,(%rax)
  0x0000000002dcacf7: add    %al,(%rax)
  0x0000000002dcacf9: add    %cl,-0x75(%rcx)
  0x0000000002dcacfc: rex.RXB (bad) 
  0x0000000002dcacfe: lea    0x20(%rax),%rdi
  0x0000000002dcad02: cmp    0x70(%r15),%rdi
  0x0000000002dcad06: ja     0x0000000002dcb3aa
  0x0000000002dcad0c: mov    %rdi,0x60(%r15)
  0x0000000002dcad10: mov    0xa8(%rdx),%rcx
  0x0000000002dcad17: mov    %rcx,(%rax)
  0x0000000002dcad1a: mov    %rdx,%rcx
  0x0000000002dcad1d: shr    $0x3,%rcx
  0x0000000002dcad21: mov    %ecx,0x8(%rax)
  0x0000000002dcad24: xor    %rcx,%rcx
  0x0000000002dcad27: mov    %ecx,0xc(%rax)
  0x0000000002dcad2a: xor    %rcx,%rcx
  0x0000000002dcad2d: mov    %rcx,0x10(%rax)
  0x0000000002dcad31: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x0000000002dcad35: data16 xchg %ax,%ax
  0x0000000002dcad38: jmpq   0x0000000002dcb3c6  ;   {no_reloc}
  0x0000000002dcad3d: add    %al,(%rax)
  0x0000000002dcad3f: add    %al,(%rax)
  0x0000000002dcad41: add    %cl,-0x77(%rax)
  0x0000000002dcad44: test   %ah,(%rax,%rcx,4)
  0x0000000002dcad47: add    %al,(%rax)
  0x0000000002dcad49: add    %cl,-0x75(%rcx)
  0x0000000002dcad4c: rex.RXB (bad) 
  0x0000000002dcad4e: lea    0x18(%rax),%rdi
  0x0000000002dcad52: cmp    0x70(%r15),%rdi
  0x0000000002dcad56: ja     0x0000000002dcb3d0
  0x0000000002dcad5c: mov    %rdi,0x60(%r15)
  0x0000000002dcad60: mov    0xa8(%rdx),%rcx
  0x0000000002dcad67: mov    %rcx,(%rax)
  0x0000000002dcad6a: mov    %rdx,%rcx
  0x0000000002dcad6d: shr    $0x3,%rcx
  0x0000000002dcad71: mov    %ecx,0x8(%rax)
  0x0000000002dcad74: xor    %rcx,%rcx
  0x0000000002dcad77: mov    %ecx,0xc(%rax)
  0x0000000002dcad7a: xor    %rcx,%rcx
  0x0000000002dcad7d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x0000000002dcad81: mov    %rax,%rbx
  0x0000000002dcad84: movabs $0x1be5c7b8,%rdx   ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcad8e: addq   $0x1,0x128(%rdx)
  0x0000000002dcad96: movabs $0x1bea7de8,%rbx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcada0: mov    0xdc(%rbx),%edx
  0x0000000002dcada6: add    $0x8,%edx
  0x0000000002dcada9: mov    %edx,0xdc(%rbx)
  0x0000000002dcadaf: movabs $0x1bce7640,%rbx   ;   {metadata({method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcadb9: and    $0x7ffff8,%edx
  0x0000000002dcadbf: cmp    $0x0,%edx
  0x0000000002dcadc2: je     0x0000000002dcb3dd
  0x0000000002dcadc8: mov    %rax,%rbx
  0x0000000002dcadcb: movabs $0x1bea7de8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcadd5: addq   $0x1,0x108(%rdx)
  0x0000000002dcaddd: movabs $0x1be9d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002dcade7: mov    0xdc(%rbx),%edx
  0x0000000002dcaded: add    $0x8,%edx
  0x0000000002dcadf0: mov    %edx,0xdc(%rbx)
  0x0000000002dcadf6: movabs $0x1bce3970,%rbx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002dcae00: and    $0x7ffff8,%edx
  0x0000000002dcae06: cmp    $0x0,%edx
  0x0000000002dcae09: je     0x0000000002dcb3f4
  0x0000000002dcae0f: mov    %rax,%rbx
  0x0000000002dcae12: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002dcae1c: addq   $0x1,0x108(%rdx)
  0x0000000002dcae24: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dcae2e: mov    0xdc(%rbx),%edx
  0x0000000002dcae34: add    $0x8,%edx
  0x0000000002dcae37: mov    %edx,0xdc(%rbx)
  0x0000000002dcae3d: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dcae47: and    $0x7ffff8,%edx
  0x0000000002dcae4d: cmp    $0x0,%edx
  0x0000000002dcae50: je     0x0000000002dcb40b
  0x0000000002dcae56: mov    $0x10,%ebx
  0x0000000002dcae5b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002dcae65: mov    %rax,%r13
  0x0000000002dcae68: movslq %ebx,%rbx
  0x0000000002dcae6b: mov    %rbx,%rdi
  0x0000000002dcae6e: cmp    $0xffffff,%rbx
  0x0000000002dcae75: ja     0x0000000002dcb422
  0x0000000002dcae7b: movabs $0x17,%rsi
  0x0000000002dcae85: lea    (%rsi,%rbx,2),%rsi
  0x0000000002dcae89: and    $0xfffffffffffffff8,%rsi
  0x0000000002dcae8d: mov    0x60(%r15),%rax
  0x0000000002dcae91: lea    (%rax,%rsi,1),%rsi
  0x0000000002dcae95: cmp    0x70(%r15),%rsi
  0x0000000002dcae99: ja     0x0000000002dcb422
  0x0000000002dcae9f: mov    %rsi,0x60(%r15)
  0x0000000002dcaea3: sub    %rax,%rsi
  0x0000000002dcaea6: movq   $0x1,(%rax)
  0x0000000002dcaead: mov    %rdx,%rcx
  0x0000000002dcaeb0: shr    $0x3,%rcx
  0x0000000002dcaeb4: mov    %ecx,0x8(%rax)
  0x0000000002dcaeb7: mov    %ebx,0xc(%rax)
  0x0000000002dcaeba: sub    $0x10,%rsi
  0x0000000002dcaebe: je     0x0000000002dcaed5
  0x0000000002dcaec4: xor    %rbx,%rbx
  0x0000000002dcaec7: shr    $0x3,%rsi
  0x0000000002dcaecb: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002dcaed0: dec    %rsi
  0x0000000002dcaed3: jne    0x0000000002dcaecb  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002dcaed5: mov    %rax,%r10
  0x0000000002dcaed8: shr    $0x3,%r10
  0x0000000002dcaedc: mov    %r10d,0x10(%r13)
  0x0000000002dcaee0: mov    %r13,%rax
  0x0000000002dcaee3: shr    $0x9,%rax
  0x0000000002dcaee7: movabs $0xea5d000,%rdx
  0x0000000002dcaef1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000002dcaef5: mov    %r13,%rax
  0x0000000002dcaef8: movabs $0x1be5c7b8,%rdx   ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcaf02: mov    0x8(%rax),%eax
  0x0000000002dcaf05: shl    $0x3,%rax
  0x0000000002dcaf09: cmp    0x140(%rdx),%rax
  0x0000000002dcaf10: jne    0x0000000002dcaf1f
  0x0000000002dcaf12: addq   $0x1,0x148(%rdx)
  0x0000000002dcaf1a: jmpq   0x0000000002dcaf85
  0x0000000002dcaf1f: cmp    0x150(%rdx),%rax
  0x0000000002dcaf26: jne    0x0000000002dcaf35
  0x0000000002dcaf28: addq   $0x1,0x158(%rdx)
  0x0000000002dcaf30: jmpq   0x0000000002dcaf85
  0x0000000002dcaf35: cmpq   $0x0,0x140(%rdx)
  0x0000000002dcaf40: jne    0x0000000002dcaf59
  0x0000000002dcaf42: mov    %rax,0x140(%rdx)
  0x0000000002dcaf49: movq   $0x1,0x148(%rdx)
  0x0000000002dcaf54: jmpq   0x0000000002dcaf85
  0x0000000002dcaf59: cmpq   $0x0,0x150(%rdx)
  0x0000000002dcaf64: jne    0x0000000002dcaf7d
  0x0000000002dcaf66: mov    %rax,0x150(%rdx)
  0x0000000002dcaf6d: movq   $0x1,0x158(%rdx)
  0x0000000002dcaf78: jmpq   0x0000000002dcaf85
  0x0000000002dcaf7d: addq   $0x1,0x138(%rdx)
  0x0000000002dcaf85: movabs $0x1bf788f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcaf8f: mov    0xdc(%rdx),%esi
  0x0000000002dcaf95: add    $0x8,%esi
  0x0000000002dcaf98: mov    %esi,0xdc(%rdx)
  0x0000000002dcaf9e: movabs $0x1bce7e18,%rdx   ;   {metadata({method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcafa8: and    $0x7ffff8,%esi
  0x0000000002dcafae: cmp    $0x0,%esi
  0x0000000002dcafb1: je     0x0000000002dcb42c
  0x0000000002dcafb7: mov    %r13,%rax
  0x0000000002dcafba: movabs $0x1bf788f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcafc4: addq   $0x1,0x108(%rdx)
  0x0000000002dcafcc: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000002dcafcf: mov    %r13,0x78(%rsp)
  0x0000000002dcafd4: nop
  0x0000000002dcafd5: nop
  0x0000000002dcafd6: nop
  0x0000000002dcafd7: callq  0x0000000002cf61a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002dcafdc: mov    0x78(%rsp),%rax
  0x0000000002dcafe1: movabs $0x1be5c7b8,%r8    ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcafeb: mov    0x8(%rax),%eax
  0x0000000002dcafee: shl    $0x3,%rax
  0x0000000002dcaff2: cmp    0x170(%r8),%rax
  0x0000000002dcaff9: jne    0x0000000002dcb008
  0x0000000002dcaffb: addq   $0x1,0x178(%r8)
  0x0000000002dcb003: jmpq   0x0000000002dcb06e
  0x0000000002dcb008: cmp    0x180(%r8),%rax
  0x0000000002dcb00f: jne    0x0000000002dcb01e
  0x0000000002dcb011: addq   $0x1,0x188(%r8)
  0x0000000002dcb019: jmpq   0x0000000002dcb06e
  0x0000000002dcb01e: cmpq   $0x0,0x170(%r8)
  0x0000000002dcb029: jne    0x0000000002dcb042
  0x0000000002dcb02b: mov    %rax,0x170(%r8)
  0x0000000002dcb032: movq   $0x1,0x178(%r8)
  0x0000000002dcb03d: jmpq   0x0000000002dcb06e
  0x0000000002dcb042: cmpq   $0x0,0x180(%r8)
  0x0000000002dcb04d: jne    0x0000000002dcb066
  0x0000000002dcb04f: mov    %rax,0x180(%r8)
  0x0000000002dcb056: movq   $0x1,0x188(%r8)
  0x0000000002dcb061: jmpq   0x0000000002dcb06e
  0x0000000002dcb066: addq   $0x1,0x168(%r8)
  0x0000000002dcb06e: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcb078: mov    0xdc(%r8),%edx
  0x0000000002dcb07f: add    $0x8,%edx
  0x0000000002dcb082: mov    %edx,0xdc(%r8)
  0x0000000002dcb089: movabs $0x1bce7958,%r8    ;   {metadata({method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcb093: and    $0x7ffff8,%edx
  0x0000000002dcb099: cmp    $0x0,%edx
  0x0000000002dcb09c: je     0x0000000002dcb443
  0x0000000002dcb0a2: mov    0x78(%rsp),%rax
  0x0000000002dcb0a7: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcb0b1: addq   $0x1,0x108(%r8)
  0x0000000002dcb0b9: movabs $0x76bf1efd8,%r8   ;   {oop(&quot; &gt; &quot;)}
  0x0000000002dcb0c3: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000002dcb0c8: nop
  0x0000000002dcb0c9: nop
  0x0000000002dcb0ca: nop
  0x0000000002dcb0cb: nop
  0x0000000002dcb0cc: nop
  0x0000000002dcb0cd: nop
  0x0000000002dcb0ce: nop
  0x0000000002dcb0cf: callq  0x0000000002cf61a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002dcb0d4: mov    0x78(%rsp),%rax
  0x0000000002dcb0d9: movabs $0x1be5c7b8,%r8    ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcb0e3: mov    0x8(%rax),%eax
  0x0000000002dcb0e6: shl    $0x3,%rax
  0x0000000002dcb0ea: cmp    0x1a0(%r8),%rax
  0x0000000002dcb0f1: jne    0x0000000002dcb100
  0x0000000002dcb0f3: addq   $0x1,0x1a8(%r8)
  0x0000000002dcb0fb: jmpq   0x0000000002dcb166
  0x0000000002dcb100: cmp    0x1b0(%r8),%rax
  0x0000000002dcb107: jne    0x0000000002dcb116
  0x0000000002dcb109: addq   $0x1,0x1b8(%r8)
  0x0000000002dcb111: jmpq   0x0000000002dcb166
  0x0000000002dcb116: cmpq   $0x0,0x1a0(%r8)
  0x0000000002dcb121: jne    0x0000000002dcb13a
  0x0000000002dcb123: mov    %rax,0x1a0(%r8)
  0x0000000002dcb12a: movq   $0x1,0x1a8(%r8)
  0x0000000002dcb135: jmpq   0x0000000002dcb166
  0x0000000002dcb13a: cmpq   $0x0,0x1b0(%r8)
  0x0000000002dcb145: jne    0x0000000002dcb15e
  0x0000000002dcb147: mov    %rax,0x1b0(%r8)
  0x0000000002dcb14e: movq   $0x1,0x1b8(%r8)
  0x0000000002dcb159: jmpq   0x0000000002dcb166
  0x0000000002dcb15e: addq   $0x1,0x198(%r8)
  0x0000000002dcb166: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcb170: mov    0xdc(%r8),%edx
  0x0000000002dcb177: add    $0x8,%edx
  0x0000000002dcb17a: mov    %edx,0xdc(%r8)
  0x0000000002dcb181: movabs $0x1bce7e18,%r8    ;   {metadata({method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcb18b: and    $0x7ffff8,%edx
  0x0000000002dcb191: cmp    $0x0,%edx
  0x0000000002dcb194: je     0x0000000002dcb45a
  0x0000000002dcb19a: mov    0x78(%rsp),%rax
  0x0000000002dcb19f: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcb1a9: addq   $0x1,0x108(%r8)
  0x0000000002dcb1b1: mov    0x80(%rsp),%r8d
  0x0000000002dcb1b9: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000002dcb1be: nop
  0x0000000002dcb1bf: callq  0x0000000002cf61a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002dcb1c4: mov    0x78(%rsp),%rax
  0x0000000002dcb1c9: movabs $0x1be5c7b8,%rdx   ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcb1d3: mov    0x8(%rax),%eax
  0x0000000002dcb1d6: shl    $0x3,%rax
  0x0000000002dcb1da: cmp    0x1d0(%rdx),%rax
  0x0000000002dcb1e1: jne    0x0000000002dcb1f0
  0x0000000002dcb1e3: addq   $0x1,0x1d8(%rdx)
  0x0000000002dcb1eb: jmpq   0x0000000002dcb256
  0x0000000002dcb1f0: cmp    0x1e0(%rdx),%rax
  0x0000000002dcb1f7: jne    0x0000000002dcb206
  0x0000000002dcb1f9: addq   $0x1,0x1e8(%rdx)
  0x0000000002dcb201: jmpq   0x0000000002dcb256
  0x0000000002dcb206: cmpq   $0x0,0x1d0(%rdx)
  0x0000000002dcb211: jne    0x0000000002dcb22a
  0x0000000002dcb213: mov    %rax,0x1d0(%rdx)
  0x0000000002dcb21a: movq   $0x1,0x1d8(%rdx)
  0x0000000002dcb225: jmpq   0x0000000002dcb256
  0x0000000002dcb22a: cmpq   $0x0,0x1e0(%rdx)
  0x0000000002dcb235: jne    0x0000000002dcb24e
  0x0000000002dcb237: mov    %rax,0x1e0(%rdx)
  0x0000000002dcb23e: movq   $0x1,0x1e8(%rdx)
  0x0000000002dcb249: jmpq   0x0000000002dcb256
  0x0000000002dcb24e: addq   $0x1,0x1c8(%rdx)
  0x0000000002dcb256: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcb260: mov    0xdc(%rdx),%esi
  0x0000000002dcb266: add    $0x8,%esi
  0x0000000002dcb269: mov    %esi,0xdc(%rdx)
  0x0000000002dcb26f: movabs $0x1bce8d08,%rdx   ;   {metadata({method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcb279: and    $0x7ffff8,%esi
  0x0000000002dcb27f: cmp    $0x0,%esi
  0x0000000002dcb282: je     0x0000000002dcb471
  0x0000000002dcb288: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002dcb292: mov    0x60(%r15),%rax
  0x0000000002dcb296: lea    0x18(%rax),%rdi
  0x0000000002dcb29a: cmp    0x70(%r15),%rdi
  0x0000000002dcb29e: ja     0x0000000002dcb488
  0x0000000002dcb2a4: mov    %rdi,0x60(%r15)
  0x0000000002dcb2a8: mov    0xa8(%rdx),%rcx
  0x0000000002dcb2af: mov    %rcx,(%rax)
  0x0000000002dcb2b2: mov    %rdx,%rcx
  0x0000000002dcb2b5: shr    $0x3,%rcx
  0x0000000002dcb2b9: mov    %ecx,0x8(%rax)
  0x0000000002dcb2bc: xor    %rcx,%rcx
  0x0000000002dcb2bf: mov    %ecx,0xc(%rax)
  0x0000000002dcb2c2: xor    %rcx,%rcx
  0x0000000002dcb2c5: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002dcb2c9: mov    0x78(%rsp),%r8
  0x0000000002dcb2ce: mov    0x10(%r8),%r9d
  0x0000000002dcb2d2: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002dcb2d6: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002dcb2da: mov    %rax,%r8
  0x0000000002dcb2dd: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcb2e7: addq   $0x1,0x108(%rdx)
  0x0000000002dcb2ef: mov    %r9,%r8
  0x0000000002dcb2f2: mov    $0x0,%r9d
  0x0000000002dcb2f8: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000002dcb2fb: mov    %rax,0x90(%rsp)
  0x0000000002dcb303: nop
  0x0000000002dcb304: nop
  0x0000000002dcb305: nop
  0x0000000002dcb306: nop
  0x0000000002dcb307: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop [144]=Oop off=2156}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002dcb30c: mov    0x88(%rsp),%rax
  0x0000000002dcb314: movabs $0x1be5c7b8,%r8    ;   {metadata(method data for {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dcb31e: addq   $0x1,0x1f8(%r8)
  0x0000000002dcb326: mov    0x90(%rsp),%r8
  0x0000000002dcb32e: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x0000000002dcb336: nop
  0x0000000002dcb337: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000002dcb33c: mov    0x88(%rsp),%rax
  0x0000000002dcb344: jmpq   0x0000000002dcb4c0
  0x0000000002dcb349: mov    %rbx,0x8(%rsp)
  0x0000000002dcb34e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcb356: callq  0x0000000002db1d60  ; OopMap{r11=Oop off=2235}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x0000000002dcb35b: jmpq   0x0000000002dcaae4
  0x0000000002dcb360: callq  0x0000000002dae700  ; OopMap{r11=Oop off=2245}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000002dcb365: jmpq   0x0000000002dcab9e
  0x0000000002dcb36a: callq  0x0000000002dad680  ; OopMap{r11=Oop rax=Oop off=2255}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000002dcb36f: mov    %r9,0x8(%rsp)
  0x0000000002dcb374: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcb37c: callq  0x0000000002db1d60  ; OopMap{r11=Oop rax=Oop off=2273}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x0000000002dcb381: jmpq   0x0000000002dcabeb
  0x0000000002dcb386: nop
  0x0000000002dcb387: callq  0x0000000002cf6620  ; OopMap{[112]=Oop off=2284}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x0000000002dcb38c: jmpq   0x0000000002dcacd2
  0x0000000002dcb391: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dcb39b: mov    $0xa050f00,%eax
  0x0000000002dcb3a0: callq  0x0000000002db0ca0  ; OopMap{off=2309}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb3a5: jmpq   0x0000000002dcacf0
  0x0000000002dcb3aa: mov    %rdx,%rdx
  0x0000000002dcb3ad: callq  0x0000000002dade00  ; OopMap{off=2322}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb3b2: jmpq   0x0000000002dcad35
  0x0000000002dcb3b7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dcb3c1: mov    $0xa050f00,%eax
  0x0000000002dcb3c6: callq  0x0000000002db0ca0  ; OopMap{rax=Oop off=2347}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb3cb: jmpq   0x0000000002dcad38
  0x0000000002dcb3d0: mov    %rdx,%rdx
  0x0000000002dcb3d3: callq  0x0000000002dade00  ; OopMap{[136]=Oop off=2360}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb3d8: jmpq   0x0000000002dcad81
  0x0000000002dcb3dd: mov    %rbx,0x8(%rsp)
  0x0000000002dcb3e2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcb3ea: callq  0x0000000002db1d60  ; OopMap{[136]=Oop rax=Oop off=2383}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb3ef: jmpq   0x0000000002dcadc8
  0x0000000002dcb3f4: mov    %rbx,0x8(%rsp)
  0x0000000002dcb3f9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcb401: callq  0x0000000002db1d60  ; OopMap{[136]=Oop rax=Oop off=2406}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb406: jmpq   0x0000000002dcae0f
  0x0000000002dcb40b: mov    %rbx,0x8(%rsp)
  0x0000000002dcb410: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcb418: callq  0x0000000002db1d60  ; OopMap{[136]=Oop rax=Oop off=2429}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb41d: jmpq   0x0000000002dcae56
  0x0000000002dcb422: callq  0x0000000002dae700  ; OopMap{[136]=Oop r13=Oop off=2439}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb427: jmpq   0x0000000002dcaed5
  0x0000000002dcb42c: mov    %rdx,0x8(%rsp)
  0x0000000002dcb431: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcb439: callq  0x0000000002db1d60  ; OopMap{[136]=Oop r13=Oop off=2462}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb43e: jmpq   0x0000000002dcafb7
  0x0000000002dcb443: mov    %r8,0x8(%rsp)
  0x0000000002dcb448: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcb450: callq  0x0000000002db1d60  ; OopMap{[120]=Oop [136]=Oop off=2485}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb455: jmpq   0x0000000002dcb0a2
  0x0000000002dcb45a: mov    %r8,0x8(%rsp)
  0x0000000002dcb45f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcb467: callq  0x0000000002db1d60  ; OopMap{[120]=Oop [136]=Oop off=2508}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb46c: jmpq   0x0000000002dcb19a
  0x0000000002dcb471: mov    %rdx,0x8(%rsp)
  0x0000000002dcb476: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcb47e: callq  0x0000000002db1d60  ; OopMap{[120]=Oop [136]=Oop off=2531}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb483: jmpq   0x0000000002dcb288
  0x0000000002dcb488: mov    %rdx,%rdx
  0x0000000002dcb48b: callq  0x0000000002dade00  ; OopMap{[120]=Oop [136]=Oop off=2544}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x0000000002dcb490: jmpq   0x0000000002dcb2c9
  0x0000000002dcb495: nop
  0x0000000002dcb496: nop
  0x0000000002dcb497: mov    0x2a8(%r15),%rax
  0x0000000002dcb49e: movabs $0x0,%r10
  0x0000000002dcb4a8: mov    %r10,0x2a8(%r15)
  0x0000000002dcb4af: movabs $0x0,%r10
  0x0000000002dcb4b9: mov    %r10,0x2b0(%r15)
  0x0000000002dcb4c0: add    $0xa0,%rsp
  0x0000000002dcb4c7: pop    %rbp
  0x0000000002dcb4c8: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dcb4cd: hlt    
  0x0000000002dcb4ce: hlt    
  0x0000000002dcb4cf: hlt    
  0x0000000002dcb4d0: hlt    
  0x0000000002dcb4d1: hlt    
  0x0000000002dcb4d2: hlt    
  0x0000000002dcb4d3: hlt    
  0x0000000002dcb4d4: hlt    
  0x0000000002dcb4d5: hlt    
  0x0000000002dcb4d6: hlt    
  0x0000000002dcb4d7: hlt    
  0x0000000002dcb4d8: hlt    
  0x0000000002dcb4d9: hlt    
  0x0000000002dcb4da: hlt    
  0x0000000002dcb4db: hlt    
  0x0000000002dcb4dc: hlt    
  0x0000000002dcb4dd: hlt    
  0x0000000002dcb4de: hlt    
  0x0000000002dcb4df: hlt    
[Stub Code]
  0x0000000002dcb4e0: nop                       ;   {no_reloc}
  0x0000000002dcb4e1: nop
  0x0000000002dcb4e2: nop
  0x0000000002dcb4e3: nop
  0x0000000002dcb4e4: nop
  0x0000000002dcb4e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcb4ef: jmpq   0x0000000002dcb4ef  ;   {runtime_call}
  0x0000000002dcb4f4: nop
  0x0000000002dcb4f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcb4ff: jmpq   0x0000000002dcb4ff  ;   {runtime_call}
  0x0000000002dcb504: nop
  0x0000000002dcb505: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcb50f: jmpq   0x0000000002dcb50f  ;   {runtime_call}
  0x0000000002dcb514: nop
  0x0000000002dcb515: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcb51f: jmpq   0x0000000002dcb51f  ;   {runtime_call}
  0x0000000002dcb524: nop
  0x0000000002dcb525: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcb52f: jmpq   0x0000000002dcb52f  ;   {runtime_call}
  0x0000000002dcb534: nop
  0x0000000002dcb535: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcb53f: jmpq   0x0000000002dcb53f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dcb544: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dcb549: mov    %rsp,-0x28(%rsp)
  0x0000000002dcb54e: sub    $0x80,%rsp
  0x0000000002dcb555: mov    %rax,0x78(%rsp)
  0x0000000002dcb55a: mov    %rcx,0x70(%rsp)
  0x0000000002dcb55f: mov    %rdx,0x68(%rsp)
  0x0000000002dcb564: mov    %rbx,0x60(%rsp)
  0x0000000002dcb569: mov    %rbp,0x50(%rsp)
  0x0000000002dcb56e: mov    %rsi,0x48(%rsp)
  0x0000000002dcb573: mov    %rdi,0x40(%rsp)
  0x0000000002dcb578: mov    %r8,0x38(%rsp)
  0x0000000002dcb57d: mov    %r9,0x30(%rsp)
  0x0000000002dcb582: mov    %r10,0x28(%rsp)
  0x0000000002dcb587: mov    %r11,0x20(%rsp)
  0x0000000002dcb58c: mov    %r12,0x18(%rsp)
  0x0000000002dcb591: mov    %r13,0x10(%rsp)
  0x0000000002dcb596: mov    %r14,0x8(%rsp)
  0x0000000002dcb59b: mov    %r15,(%rsp)
  0x0000000002dcb59f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dcb5a9: movabs $0x2dcb549,%rdx    ;   {internal_word}
  0x0000000002dcb5b3: mov    %rsp,%r8
  0x0000000002dcb5b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcb5ba: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dcb5bf: hlt    
[Deopt Handler Code]
  0x0000000002dcb5c0: movabs $0x2dcb5c0,%r10    ;   {section_word}
  0x0000000002dcb5ca: push   %r10
  0x0000000002dcb5cc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcb5d1: hlt    
  0x0000000002dcb5d2: hlt    
  0x0000000002dcb5d3: hlt    
  0x0000000002dcb5d4: hlt    
  0x0000000002dcb5d5: hlt    
  0x0000000002dcb5d6: hlt    
  0x0000000002dcb5d7: hlt    
<nmethod compile_id='38' compiler='C1' level='3' entry='0x0000000002dcaaa0' size='4856' address='0x0000000002dca890' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='4757' iicount='4757' stamp='0.748'/>
<writer thread='31108'/>
<task_queued compile_id='40' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='1152' iicount='1152' level='3' stamp='0.748' comment='tiered' hot_count='1152'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dc6c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bce4d30} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x80]  (sp of caller)
  0x0000000002dc6da0: mov    0x8(%rdx),%r10d
  0x0000000002dc6da4: shl    $0x3,%r10
  0x0000000002dc6da8: cmp    %r10,%rax
  0x0000000002dc6dab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc6db1: data16 xchg %ax,%ax
  0x0000000002dc6db4: nopl   0x0(%rax,%rax,1)
  0x0000000002dc6dbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc6dc0: mov    %eax,-0x6000(%rsp)
  0x0000000002dc6dc7: push   %rbp
  0x0000000002dc6dc8: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002dc6dcc: mov    %r8d,0x28(%rsp)
  0x0000000002dc6dd1: mov    %rdx,0x48(%rsp)
  0x0000000002dc6dd6: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6dda: mov    0xc(%r12,%r9,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x0000000002dc70c5
  0x0000000002dc6ddf: mov    0xc(%rdx),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x0000000002dc6de3: mov    %r11d,%ecx
  0x0000000002dc6de6: sub    %r8d,%ecx
  0x0000000002dc6de9: mov    %r11d,%ebx
  0x0000000002dc6dec: inc    %ebx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)

  0x0000000002dc6dee: inc    %ecx
  0x0000000002dc6df0: test   %ecx,%ecx
  0x0000000002dc6df2: jg     0x0000000002dc6e36  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6df4: mov    %r9,%rbp
  0x0000000002dc6df7: shl    $0x3,%rbp          ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002dc6dfb: mov    0x48(%rsp),%r10
  0x0000000002dc6e00: mov    %ebx,0xc(%r10)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x0000000002dc6e04: test   %rbp,%rbp
  0x0000000002dc6e07: je     0x0000000002dc700a
  0x0000000002dc6e0d: mov    0xc(%rbp),%r10d
  0x0000000002dc6e11: cmp    %r10d,%r11d
  0x0000000002dc6e14: jae    0x0000000002dc7021
  0x0000000002dc6e1a: mov    0x28(%rsp),%r8d
  0x0000000002dc6e1f: mov    %r8w,0x10(%rbp,%r11,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x0000000002dc6e25: mov    0x48(%rsp),%rax
  0x0000000002dc6e2a: add    $0x70,%rsp
  0x0000000002dc6e2e: pop    %rbp
  0x0000000002dc6e2f: test   %eax,-0x21c6e35(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dc6e35: retq   
  0x0000000002dc6e36: mov    %r8d,%r10d
  0x0000000002dc6e39: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6e3c: mov    %r10d,%ecx
  0x0000000002dc6e3f: sub    %r11d,%ecx
  0x0000000002dc6e42: inc    %ecx
  0x0000000002dc6e44: test   %ecx,%ecx
  0x0000000002dc6e46: jl     0x0000000002dc6e4e  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6e48: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6e4c: jmp    0x0000000002dc6e51
  0x0000000002dc6e4e: mov    %ebx,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6e51: test   %r10d,%r10d
  0x0000000002dc6e54: jle    0x0000000002dc7077  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6e5a: mov    $0x7ffffff7,%ebp
  0x0000000002dc6e5f: sub    %r10d,%ebp         ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6e62: test   %ebp,%ebp
  0x0000000002dc6e64: jl     0x0000000002dc70a1  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6e6a: cmp    $0x80000,%r10d
  0x0000000002dc6e71: ja     0x0000000002dc7031
  0x0000000002dc6e77: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6e7a: shl    %r11
  0x0000000002dc6e7d: lea    (%r12,%r9,8),%rbx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6e81: add    $0x17,%r11
  0x0000000002dc6e85: mov    %r11,%rdi
  0x0000000002dc6e88: and    $0xfffffffffffffff8,%rdi
  0x0000000002dc6e8c: cmp    $0x80000,%r10d
  0x0000000002dc6e93: ja     0x0000000002dc6faf
  0x0000000002dc6e99: mov    0x60(%r15),%rbp
  0x0000000002dc6e9d: mov    %rbp,%rcx
  0x0000000002dc6ea0: add    %rdi,%rcx
  0x0000000002dc6ea3: cmp    0x70(%r15),%rcx
  0x0000000002dc6ea7: jae    0x0000000002dc6faf
  0x0000000002dc6ead: mov    %rcx,0x60(%r15)
  0x0000000002dc6eb1: prefetchw 0xc0(%rcx)
  0x0000000002dc6eb8: movq   $0x1,0x0(%rbp)
  0x0000000002dc6ec0: prefetchw 0x100(%rcx)
  0x0000000002dc6ec7: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x0000000002dc6ece: mov    %r10d,0xc(%rbp)
  0x0000000002dc6ed2: prefetchw 0x140(%rcx)
  0x0000000002dc6ed9: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6ee0: cmp    %r10d,%r8d
  0x0000000002dc6ee3: mov    %r10d,%esi
  0x0000000002dc6ee6: cmovl  %r8d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6eea: mov    %rbp,%rdx
  0x0000000002dc6eed: add    $0x10,%rdx
  0x0000000002dc6ef1: shr    $0x3,%r11
  0x0000000002dc6ef5: mov    %r11,%rcx
  0x0000000002dc6ef8: add    $0xfffffffffffffffe,%rcx
  0x0000000002dc6efc: cmp    %esi,%r8d
  0x0000000002dc6eff: jb     0x0000000002dc7039
  0x0000000002dc6f05: cmp    %esi,%r10d
  0x0000000002dc6f08: jb     0x0000000002dc7039
  0x0000000002dc6f0e: test   %esi,%esi
  0x0000000002dc6f10: jle    0x0000000002dc7065
  0x0000000002dc6f16: lea    0x10(%r12,%r9,8),%r9
  0x0000000002dc6f1b: cmp    %r10d,%esi
  0x0000000002dc6f1e: jl     0x0000000002dc6f6f
  0x0000000002dc6f20: add    $0xfffffffffffffff0,%rdi
  0x0000000002dc6f24: shr    $0x3,%rdi
  0x0000000002dc6f28: mov    %r9,%rcx
  0x0000000002dc6f2b: mov    %rdi,%r8
  0x0000000002dc6f2e: movabs $0x2d02ca0,%r10
  0x0000000002dc6f38: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6f3b: mov    0x48(%rsp),%r10
  0x0000000002dc6f40: mov    0xc(%r10),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x0000000002dc6f44: mov    %rbp,%r10
  0x0000000002dc6f47: shr    $0x3,%r10
  0x0000000002dc6f4b: mov    0x48(%rsp),%r8
  0x0000000002dc6f50: mov    %r10d,0x10(%r8)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6f54: mov    %r11d,%ebx
  0x0000000002dc6f57: inc    %ebx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)

  0x0000000002dc6f59: mov    %r8,%r10
  0x0000000002dc6f5c: shr    $0x9,%r10
  0x0000000002dc6f60: mov    $0xea5d000,%r8d
  0x0000000002dc6f66: mov    %r12b,(%r8,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6f6a: jmpq   0x0000000002dc6dfb
  0x0000000002dc6f6f: movslq %esi,%r8
  0x0000000002dc6f72: mov    %r8,%r10
  0x0000000002dc6f75: shl    %r10
  0x0000000002dc6f78: add    $0x10,%r10
  0x0000000002dc6f7c: mov    %r10,%rcx
  0x0000000002dc6f7f: and    $0xfffffffffffffff9,%rcx
  0x0000000002dc6f83: mov    %rbp,%rdi
  0x0000000002dc6f86: add    %rcx,%rdi
  0x0000000002dc6f89: shr    $0x3,%r10
  0x0000000002dc6f8d: sub    %r10,%r11
  0x0000000002dc6f90: mov    %r11,%rcx
  0x0000000002dc6f93: xor    %rax,%rax
  0x0000000002dc6f96: shl    $0x3,%rcx
  0x0000000002dc6f9a: rep rex.W stos %al,%es:(%rdi)
  0x0000000002dc6f9d: mov    %r9,%rcx
  0x0000000002dc6fa0: movabs $0x2d02980,%r10
  0x0000000002dc6faa: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc6fad: jmp    0x0000000002dc6f3b
  0x0000000002dc6faf: mov    %r8d,0x50(%rsp)
  0x0000000002dc6fb4: mov    %r9d,0x2c(%rsp)
  0x0000000002dc6fb9: mov    %rdi,0x40(%rsp)
  0x0000000002dc6fbe: mov    %rbx,0x38(%rsp)
  0x0000000002dc6fc3: mov    %r11,0x30(%rsp)
  0x0000000002dc6fc8: mov    %r10d,0x20(%rsp)
  0x0000000002dc6fcd: mov    %rdx,%rbp
  0x0000000002dc6fd0: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002dc6fda: mov    %r10d,%r8d
  0x0000000002dc6fdd: xchg   %ax,%ax
  0x0000000002dc6fdf: callq  0x0000000002db36e0  ; OopMap{rbp=Oop [44]=NarrowOop [56]=Oop [72]=Oop off=580}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002dc6fe4: mov    %rax,%rbp
  0x0000000002dc6fe7: mov    0x20(%rsp),%r10d
  0x0000000002dc6fec: mov    0x30(%rsp),%r11
  0x0000000002dc6ff1: mov    0x38(%rsp),%rbx
  0x0000000002dc6ff6: mov    0x40(%rsp),%rdi
  0x0000000002dc6ffb: mov    0x2c(%rsp),%r9d
  0x0000000002dc7000: mov    0x50(%rsp),%r8d
  0x0000000002dc7005: jmpq   0x0000000002dc6ee0
  0x0000000002dc700a: mov    $0xfffffff6,%edx
  0x0000000002dc700f: mov    0x28(%rsp),%ebp
  0x0000000002dc7013: mov    %r11d,0x20(%rsp)
  0x0000000002dc7018: data16 xchg %ax,%ax
  0x0000000002dc701b: callq  0x0000000002cf57a0  ; OopMap{off=640}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002dc7020: int3   
  0x0000000002dc7021: mov    $0xffffffe4,%edx
  0x0000000002dc7026: mov    %r11d,0x2c(%rsp)
  0x0000000002dc702b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [72]=Oop off=656}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x0000000002dc7030: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x0000000002dc7031: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc7034: jmpq   0x0000000002dc6e7a
  0x0000000002dc7039: mov    %rdx,%rdi
  0x0000000002dc703c: xor    %rax,%rax
  0x0000000002dc703f: shl    $0x3,%rcx
  0x0000000002dc7043: rep rex.W stos %al,%es:(%rdi)
  0x0000000002dc7046: mov    %rbx,%rdx
  0x0000000002dc7049: xor    %r8d,%r8d
  0x0000000002dc704c: mov    %rbp,%r9
  0x0000000002dc704f: xor    %edi,%edi
  0x0000000002dc7051: rex.W pushq 0x48(%rsp)
  0x0000000002dc7056: rex.W popq 0x20(%rsp)
  0x0000000002dc705b: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [32]=Oop [72]=Oop off=704}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002dc7060: jmpq   0x0000000002dc6f3b
  0x0000000002dc7065: mov    %rdx,%rdi
  0x0000000002dc7068: xor    %rax,%rax
  0x0000000002dc706b: shl    $0x3,%rcx
  0x0000000002dc706f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc7072: jmpq   0x0000000002dc6f3b
  0x0000000002dc7077: mov    $0xffffff65,%edx
  0x0000000002dc707c: mov    0x48(%rsp),%rbp
  0x0000000002dc7081: mov    0x28(%rsp),%r8d
  0x0000000002dc7086: mov    %r8d,0x20(%rsp)
  0x0000000002dc708b: mov    %r9d,0x24(%rsp)
  0x0000000002dc7090: mov    %ebx,0x38(%rsp)
  0x0000000002dc7094: mov    %r10d,0x40(%rsp)
  0x0000000002dc7099: xchg   %ax,%ax
  0x0000000002dc709b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [36]=NarrowOop off=768}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002dc70a0: int3                      ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc70a1: mov    $0xffffff65,%edx
  0x0000000002dc70a6: rex.W pushq 0x48(%rsp)
  0x0000000002dc70ab: rex.W popq 0x20(%rsp)
  0x0000000002dc70b0: mov    %r9d,0x2c(%rsp)
  0x0000000002dc70b5: mov    %ebx,0x40(%rsp)
  0x0000000002dc70b9: mov    %r10d,0x44(%rsp)
  0x0000000002dc70be: nop
  0x0000000002dc70bf: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [44]=NarrowOop off=804}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002dc70c4: int3                      ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc70c5: mov    $0xfffffff6,%edx
  0x0000000002dc70ca: nop
  0x0000000002dc70cb: callq  0x0000000002cf57a0  ; OopMap{off=816}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x0000000002dc70d0: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc70d1: mov    %rax,%rdx
  0x0000000002dc70d4: jmp    0x0000000002dc70d9  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc70d6: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x0000000002dc70d9: add    $0x70,%rsp
  0x0000000002dc70dd: pop    %rbp
  0x0000000002dc70de: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002dc70e3: hlt    
  0x0000000002dc70e4: hlt    
  0x0000000002dc70e5: hlt    
  0x0000000002dc70e6: hlt    
  0x0000000002dc70e7: hlt    
  0x0000000002dc70e8: hlt    
  0x0000000002dc70e9: hlt    
  0x0000000002dc70ea: hlt    
  0x0000000002dc70eb: hlt    
  0x0000000002dc70ec: hlt    
  0x0000000002dc70ed: hlt    
  0x0000000002dc70ee: hlt    
  0x0000000002dc70ef: hlt    
  0x0000000002dc70f0: hlt    
  0x0000000002dc70f1: hlt    
  0x0000000002dc70f2: hlt    
  0x0000000002dc70f3: hlt    
  0x0000000002dc70f4: hlt    
  0x0000000002dc70f5: hlt    
  0x0000000002dc70f6: hlt    
  0x0000000002dc70f7: hlt    
  0x0000000002dc70f8: hlt    
  0x0000000002dc70f9: hlt    
  0x0000000002dc70fa: hlt    
  0x0000000002dc70fb: hlt    
  0x0000000002dc70fc: hlt    
  0x0000000002dc70fd: hlt    
  0x0000000002dc70fe: hlt    
  0x0000000002dc70ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc7100: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dc7105: callq  0x0000000002dc710a
  0x0000000002dc710a: subq   $0x5,(%rsp)
  0x0000000002dc710f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc7114: hlt    
  0x0000000002dc7115: hlt    
  0x0000000002dc7116: hlt    
  0x0000000002dc7117: hlt    
<nmethod compile_id='36' compiler='C2' level='4' entry='0x0000000002dc6da0' size='2408' address='0x0000000002dc6c50' relocation_offset='288' insts_offset='336' stub_offset='1200' scopes_data_offset='1264' scopes_pcs_offset='1648' dependencies_offset='2336' handler_table_offset='2344' nul_chk_table_offset='2392' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='72459' iicount='72459' stamp='0.756'/>
<writer thread='22236'/>
<task_queued compile_id='41' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='1664' iicount='1664' level='3' stamp='0.756' comment='tiered' hot_count='1664'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dcde50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcdff50} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x0000000002dcdfa0: mov    0x8(%rdx),%r10d
  0x0000000002dcdfa4: shl    $0x3,%r10
  0x0000000002dcdfa8: cmp    %r10,%rax
  0x0000000002dcdfab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcdfb1: data16 xchg %ax,%ax
  0x0000000002dcdfb4: nopl   0x0(%rax,%rax,1)
  0x0000000002dcdfbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcdfc0: mov    %eax,-0x6000(%rsp)
  0x0000000002dcdfc7: push   %rbp
  0x0000000002dcdfc8: sub    $0x80,%rsp
  0x0000000002dcdfcf: mov    %r8d,0x38(%rsp)
  0x0000000002dcdfd4: mov    %rdx,0x48(%rsp)
  0x0000000002dcdfd9: mov    (%rdx),%rax
  0x0000000002dcdfdc: mov    %rax,%r10
  0x0000000002dcdfdf: and    $0x7,%r10
  0x0000000002dcdfe3: cmp    $0x5,%r10
  0x0000000002dcdfe7: jne    0x0000000002dce2b2
  0x0000000002dcdfed: mov    $0xf8001ac1,%r11d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000000002dcdff3: movabs $0x0,%r10
  0x0000000002dcdffd: lea    (%r10,%r11,8),%r10
  0x0000000002dce001: mov    0xa8(%r10),%r10
  0x0000000002dce008: mov    %r10,%r11
  0x0000000002dce00b: or     %r15,%r11
  0x0000000002dce00e: mov    %r11,%r8
  0x0000000002dce011: xor    %rax,%r8
  0x0000000002dce014: test   $0xffffffffffffff87,%r8
  0x0000000002dce01b: jne    0x0000000002dce319  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002dce021: mov    0x48(%rsp),%r10
  0x0000000002dce026: mov    0x10(%r10),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce02a: mov    %r12d,0x14(%r10)   ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x0000000002dce02e: mov    0xc(%r12,%r9,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x0000000002dce481
  0x0000000002dce033: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce037: mov    %r10d,%r11d
  0x0000000002dce03a: sub    %r8d,%r11d
  0x0000000002dce03d: mov    %r10d,%ebx
  0x0000000002dce040: inc    %ebx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce042: inc    %r11d
  0x0000000002dce045: test   %r11d,%r11d
  0x0000000002dce048: jg     0x0000000002dce0a7  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce04a: mov    %r9,%rbp
  0x0000000002dce04d: shl    $0x3,%rbp          ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce051: mov    0x48(%rsp),%r11
  0x0000000002dce056: mov    %ebx,0xc(%r11)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce05a: test   %rbp,%rbp
  0x0000000002dce05d: je     0x0000000002dce27e
  0x0000000002dce063: mov    0xc(%rbp),%r8d
  0x0000000002dce067: cmp    %r8d,%r10d
  0x0000000002dce06a: jae    0x0000000002dce291
  0x0000000002dce070: mov    0x38(%rsp),%r11d
  0x0000000002dce075: mov    %r11w,0x10(%rbp,%r10,2)
  0x0000000002dce07b: mov    $0x7,%r10d
  0x0000000002dce081: mov    0x48(%rsp),%r11
  0x0000000002dce086: and    (%r11),%r10
  0x0000000002dce089: cmp    $0x5,%r10
  0x0000000002dce08d: jne    0x0000000002dce344  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000002dce093: mov    0x48(%rsp),%rax
  0x0000000002dce098: add    $0x80,%rsp
  0x0000000002dce09f: pop    %rbp
  0x0000000002dce0a0: test   %eax,-0x21ce0a6(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dce0a6: retq   
  0x0000000002dce0a7: mov    %r8d,%r11d
  0x0000000002dce0aa: shl    %r11d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce0ad: mov    %r11d,%edi
  0x0000000002dce0b0: sub    %r10d,%edi
  0x0000000002dce0b3: inc    %edi
  0x0000000002dce0b5: test   %edi,%edi
  0x0000000002dce0b7: jl     0x0000000002dce0bf  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce0b9: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce0bd: jmp    0x0000000002dce0c2
  0x0000000002dce0bf: mov    %ebx,%r11d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce0c2: test   %r11d,%r11d
  0x0000000002dce0c5: jle    0x0000000002dce433  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce0cb: mov    $0x7ffffff7,%ebp
  0x0000000002dce0d0: sub    %r11d,%ebp         ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce0d3: test   %ebp,%ebp
  0x0000000002dce0d5: jl     0x0000000002dce45d  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce0db: cmp    $0x80000,%r11d
  0x0000000002dce0e2: ja     0x0000000002dce3ea
  0x0000000002dce0e8: movslq %r11d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce0eb: shl    %r10
  0x0000000002dce0ee: lea    (%r12,%r9,8),%rbx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce0f2: add    $0x17,%r10
  0x0000000002dce0f6: mov    %r10,%rdi
  0x0000000002dce0f9: and    $0xfffffffffffffff8,%rdi
  0x0000000002dce0fd: cmp    $0x80000,%r11d
  0x0000000002dce104: ja     0x0000000002dce222
  0x0000000002dce10a: mov    0x60(%r15),%rbp
  0x0000000002dce10e: mov    %rbp,%rcx
  0x0000000002dce111: add    %rdi,%rcx
  0x0000000002dce114: cmp    0x70(%r15),%rcx
  0x0000000002dce118: jae    0x0000000002dce222
  0x0000000002dce11e: mov    %rcx,0x60(%r15)
  0x0000000002dce122: prefetchw 0xc0(%rcx)
  0x0000000002dce129: movq   $0x1,0x0(%rbp)
  0x0000000002dce131: prefetchw 0x100(%rcx)
  0x0000000002dce138: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x0000000002dce13f: mov    %r11d,0xc(%rbp)
  0x0000000002dce143: prefetchw 0x140(%rcx)
  0x0000000002dce14a: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce151: cmp    %r11d,%r8d
  0x0000000002dce154: mov    %r11d,%esi
  0x0000000002dce157: cmovl  %r8d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce15b: mov    %rbp,%rdx
  0x0000000002dce15e: add    $0x10,%rdx
  0x0000000002dce162: shr    $0x3,%r10
  0x0000000002dce166: mov    %r10,%rcx
  0x0000000002dce169: add    $0xfffffffffffffffe,%rcx
  0x0000000002dce16d: cmp    %esi,%r8d
  0x0000000002dce170: jb     0x0000000002dce3f2
  0x0000000002dce176: cmp    %esi,%r11d
  0x0000000002dce179: jb     0x0000000002dce3f2
  0x0000000002dce17f: test   %esi,%esi
  0x0000000002dce181: jle    0x0000000002dce421
  0x0000000002dce187: lea    0x10(%r12,%r9,8),%r9
  0x0000000002dce18c: cmp    %r11d,%esi
  0x0000000002dce18f: jl     0x0000000002dce1e2
  0x0000000002dce191: add    $0xfffffffffffffff0,%rdi
  0x0000000002dce195: shr    $0x3,%rdi
  0x0000000002dce199: mov    %r9,%rcx
  0x0000000002dce19c: mov    %rdi,%r8
  0x0000000002dce19f: movabs $0x2d02ca0,%r10
  0x0000000002dce1a9: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce1ac: mov    0x48(%rsp),%r10
  0x0000000002dce1b1: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce1b5: mov    %rbp,%r8
  0x0000000002dce1b8: shr    $0x3,%r8
  0x0000000002dce1bc: mov    0x48(%rsp),%r11
  0x0000000002dce1c1: mov    %r8d,0x10(%r11)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce1c5: mov    %r10d,%ebx
  0x0000000002dce1c8: inc    %ebx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce1ca: mov    0x48(%rsp),%r11
  0x0000000002dce1cf: shr    $0x9,%r11
  0x0000000002dce1d3: mov    $0xea5d000,%r8d
  0x0000000002dce1d9: mov    %r12b,(%r8,%r11,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce1dd: jmpq   0x0000000002dce051
  0x0000000002dce1e2: movslq %esi,%r8
  0x0000000002dce1e5: mov    %r8,%r11
  0x0000000002dce1e8: shl    %r11
  0x0000000002dce1eb: add    $0x10,%r11
  0x0000000002dce1ef: mov    %r11,%rcx
  0x0000000002dce1f2: and    $0xfffffffffffffff9,%rcx
  0x0000000002dce1f6: mov    %rbp,%rdi
  0x0000000002dce1f9: add    %rcx,%rdi
  0x0000000002dce1fc: shr    $0x3,%r11
  0x0000000002dce200: sub    %r11,%r10
  0x0000000002dce203: mov    %r10,%rcx
  0x0000000002dce206: xor    %rax,%rax
  0x0000000002dce209: shl    $0x3,%rcx
  0x0000000002dce20d: rep rex.W stos %al,%es:(%rdi)
  0x0000000002dce210: mov    %r9,%rcx
  0x0000000002dce213: movabs $0x2d02980,%r10
  0x0000000002dce21d: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce220: jmp    0x0000000002dce1ac
  0x0000000002dce222: mov    %r8d,0x60(%rsp)
  0x0000000002dce227: mov    %r9d,0x3c(%rsp)
  0x0000000002dce22c: mov    %rdi,0x40(%rsp)
  0x0000000002dce231: mov    %rbx,0x30(%rsp)
  0x0000000002dce236: mov    %r10,0x28(%rsp)
  0x0000000002dce23b: mov    %r11d,0x20(%rsp)
  0x0000000002dce240: mov    0x48(%rsp),%rbp    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce245: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002dce24f: mov    %r11d,%r8d
  0x0000000002dce252: nop
  0x0000000002dce253: callq  0x0000000002db36e0  ; OopMap{rbp=Oop [48]=Oop [60]=NarrowOop [72]=Oop off=696}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002dce258: mov    %rax,%rbp
  0x0000000002dce25b: mov    0x20(%rsp),%r11d
  0x0000000002dce260: mov    0x28(%rsp),%r10
  0x0000000002dce265: mov    0x30(%rsp),%rbx
  0x0000000002dce26a: mov    0x40(%rsp),%rdi
  0x0000000002dce26f: mov    0x3c(%rsp),%r9d
  0x0000000002dce274: mov    0x60(%rsp),%r8d
  0x0000000002dce279: jmpq   0x0000000002dce151
  0x0000000002dce27e: mov    $0xfffffff6,%edx
  0x0000000002dce283: mov    %r11,%rbp
  0x0000000002dce286: mov    %r10d,0x24(%rsp)
  0x0000000002dce28b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop off=752}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002dce290: int3   
  0x0000000002dce291: mov    $0xffffffe4,%edx
  0x0000000002dce296: mov    %r11,0x28(%rsp)
  0x0000000002dce29b: mov    %r11,0x30(%rsp)
  0x0000000002dce2a0: mov    %r10d,0x3c(%rsp)
  0x0000000002dce2a5: xchg   %ax,%ax
  0x0000000002dce2a7: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [40]=Oop [48]=Oop off=780}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002dce2ac: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce2ad: lock cmpxchg %r10,(%rdx)
  0x0000000002dce2b2: lea    0x70(%rsp),%rbx
  0x0000000002dce2b7: mov    (%rdx),%rax
  0x0000000002dce2ba: test   $0x2,%rax
  0x0000000002dce2c0: jne    0x0000000002dce2e6
  0x0000000002dce2c2: or     $0x1,%rax
  0x0000000002dce2c6: mov    %rax,(%rbx)
  0x0000000002dce2c9: lock cmpxchg %rbx,(%rdx)
  0x0000000002dce2ce: je     0x0000000002dce2ff
  0x0000000002dce2d4: sub    %rsp,%rax
  0x0000000002dce2d7: and    $0xfffffffffffff007,%rax
  0x0000000002dce2de: mov    %rax,(%rbx)
  0x0000000002dce2e1: jmpq   0x0000000002dce2ff
  0x0000000002dce2e6: movq   $0x3,(%rbx)
  0x0000000002dce2ed: mov    %rax,%rbx
  0x0000000002dce2f0: mov    0x16(%rbx),%rax
  0x0000000002dce2f4: test   %rax,%rax
  0x0000000002dce2f7: jne    0x0000000002dce2ff
  0x0000000002dce2f9: lock cmpxchg %r15,0x16(%rbx)
  0x0000000002dce2ff: je     0x0000000002dce021
  0x0000000002dce305: lea    0x70(%rsp),%r8
  0x0000000002dce30a: mov    %rdx,0x28(%rsp)
  0x0000000002dce30f: callq  0x0000000002db3d20  ; OopMap{[40]=Oop [72]=Oop off=884}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x0000000002dce314: jmpq   0x0000000002dce021
  0x0000000002dce319: test   $0x7,%r8
  0x0000000002dce320: jne    0x0000000002dce2ad
  0x0000000002dce322: test   $0x300,%r8
  0x0000000002dce329: jne    0x0000000002dce338
  0x0000000002dce32b: and    $0x37f,%rax
  0x0000000002dce332: mov    %rax,%r11
  0x0000000002dce335: or     %r15,%r11
  0x0000000002dce338: lock cmpxchg %r11,(%rdx)
  0x0000000002dce33d: jne    0x0000000002dce305
  0x0000000002dce33f: jmpq   0x0000000002dce021
  0x0000000002dce344: lea    0x70(%rsp),%rax
  0x0000000002dce349: cmpq   $0x0,(%rax)
  0x0000000002dce350: je     0x0000000002dce3ca
  0x0000000002dce356: mov    (%r11),%r10
  0x0000000002dce359: test   $0x2,%r10
  0x0000000002dce360: je     0x0000000002dce3c2
  0x0000000002dce362: mov    0x16(%r10),%rax
  0x0000000002dce366: xor    %r15,%rax
  0x0000000002dce369: or     0x26(%r10),%rax
  0x0000000002dce36d: jne    0x0000000002dce3ca
  0x0000000002dce36f: mov    0x36(%r10),%rax
  0x0000000002dce373: or     0x3e(%r10),%rax
  0x0000000002dce377: jne    0x0000000002dce383
  0x0000000002dce379: movq   $0x0,0x16(%r10)
  0x0000000002dce381: jmp    0x0000000002dce3ca
  0x0000000002dce383: cmpq   $0x0,0x46(%r10)
  0x0000000002dce38b: je     0x0000000002dce3b6
  0x0000000002dce38d: movq   $0x0,0x16(%r10)
  0x0000000002dce395: lock addl $0x0,(%rsp)
  0x0000000002dce39a: cmpq   $0x0,0x46(%r10)
  0x0000000002dce3a2: jne    0x0000000002dce3bb
  0x0000000002dce3a4: movabs $0x0,%rax
  0x0000000002dce3ae: lock cmpxchg %r15,0x16(%r10)
  0x0000000002dce3b4: jne    0x0000000002dce3bb
  0x0000000002dce3b6: or     $0x1,%eax
  0x0000000002dce3b9: jmp    0x0000000002dce3ca
  0x0000000002dce3bb: test   $0x0,%eax
  0x0000000002dce3c0: jmp    0x0000000002dce3ca
  0x0000000002dce3c2: mov    (%rax),%r10
  0x0000000002dce3c5: lock cmpxchg %r10,(%r11)
  0x0000000002dce3ca: je     0x0000000002dce093
  0x0000000002dce3d0: mov    %r11,%rcx
  0x0000000002dce3d3: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002dce3d8: movabs $0x5590c5c0,%r10
  0x0000000002dce3e2: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x0000000002dce3e5: jmpq   0x0000000002dce093
  0x0000000002dce3ea: movslq %r11d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce3ed: jmpq   0x0000000002dce0eb
  0x0000000002dce3f2: mov    %rdx,%rdi
  0x0000000002dce3f5: xor    %rax,%rax
  0x0000000002dce3f8: shl    $0x3,%rcx
  0x0000000002dce3fc: rep rex.W stos %al,%es:(%rdi)
  0x0000000002dce3ff: mov    %rbx,%rdx
  0x0000000002dce402: xor    %r8d,%r8d
  0x0000000002dce405: mov    %rbp,%r9
  0x0000000002dce408: xor    %edi,%edi
  0x0000000002dce40a: rex.W pushq 0x48(%rsp)
  0x0000000002dce40f: rex.W popq 0x20(%rsp)
  0x0000000002dce414: data16 xchg %ax,%ax
  0x0000000002dce417: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [32]=Oop [72]=Oop off=1148}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002dce41c: jmpq   0x0000000002dce1ac
  0x0000000002dce421: mov    %rdx,%rdi
  0x0000000002dce424: xor    %rax,%rax
  0x0000000002dce427: shl    $0x3,%rcx
  0x0000000002dce42b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce42e: jmpq   0x0000000002dce1ac  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce433: mov    $0xffffff65,%edx
  0x0000000002dce438: mov    0x48(%rsp),%rbp
  0x0000000002dce43d: mov    0x38(%rsp),%r10d
  0x0000000002dce442: mov    %r10d,0x30(%rsp)
  0x0000000002dce447: mov    %r9d,0x34(%rsp)
  0x0000000002dce44c: mov    %ebx,0x48(%rsp)
  0x0000000002dce450: mov    %r11d,0x50(%rsp)
  0x0000000002dce455: xchg   %ax,%ax
  0x0000000002dce457: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [52]=NarrowOop off=1212}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002dce45c: int3                      ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce45d: mov    $0xffffff65,%edx
  0x0000000002dce462: rex.W pushq 0x48(%rsp)
  0x0000000002dce467: rex.W popq 0x20(%rsp)
  0x0000000002dce46c: mov    %r9d,0x3c(%rsp)
  0x0000000002dce471: mov    %ebx,0x50(%rsp)
  0x0000000002dce475: mov    %r11d,0x54(%rsp)
  0x0000000002dce47a: nop
  0x0000000002dce47b: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [60]=NarrowOop off=1248}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002dce480: int3   
  0x0000000002dce481: mov    $0xfffffff6,%edx
  0x0000000002dce486: mov    %r10,%rbp
  0x0000000002dce489: xchg   %ax,%ax
  0x0000000002dce48b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop off=1264}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x0000000002dce490: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce491: mov    %rax,%rbx
  0x0000000002dce494: jmp    0x0000000002dce499  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce496: mov    %rax,%rbx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x0000000002dce499: mov    $0x7,%r10d
  0x0000000002dce49f: mov    0x48(%rsp),%r11
  0x0000000002dce4a4: and    (%r11),%r10
  0x0000000002dce4a7: cmp    $0x5,%r10
  0x0000000002dce4ab: jne    0x0000000002dce4bd
  0x0000000002dce4ad: mov    %rbx,%rdx
  0x0000000002dce4b0: add    $0x80,%rsp
  0x0000000002dce4b7: pop    %rbp
  0x0000000002dce4b8: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002dce4bd: lea    0x70(%rsp),%rax
  0x0000000002dce4c2: cmpq   $0x0,(%rax)
  0x0000000002dce4c9: je     0x0000000002dce543
  0x0000000002dce4cf: mov    (%r11),%r10
  0x0000000002dce4d2: test   $0x2,%r10
  0x0000000002dce4d9: je     0x0000000002dce53b
  0x0000000002dce4db: mov    0x16(%r10),%rax
  0x0000000002dce4df: xor    %r15,%rax
  0x0000000002dce4e2: or     0x26(%r10),%rax
  0x0000000002dce4e6: jne    0x0000000002dce543
  0x0000000002dce4e8: mov    0x36(%r10),%rax
  0x0000000002dce4ec: or     0x3e(%r10),%rax
  0x0000000002dce4f0: jne    0x0000000002dce4fc
  0x0000000002dce4f2: movq   $0x0,0x16(%r10)
  0x0000000002dce4fa: jmp    0x0000000002dce543
  0x0000000002dce4fc: cmpq   $0x0,0x46(%r10)
  0x0000000002dce504: je     0x0000000002dce52f
  0x0000000002dce506: movq   $0x0,0x16(%r10)
  0x0000000002dce50e: lock addl $0x0,(%rsp)
  0x0000000002dce513: cmpq   $0x0,0x46(%r10)
  0x0000000002dce51b: jne    0x0000000002dce534
  0x0000000002dce51d: movabs $0x0,%rax
  0x0000000002dce527: lock cmpxchg %r15,0x16(%r10)
  0x0000000002dce52d: jne    0x0000000002dce534
  0x0000000002dce52f: or     $0x1,%eax
  0x0000000002dce532: jmp    0x0000000002dce543
  0x0000000002dce534: test   $0x0,%eax
  0x0000000002dce539: jmp    0x0000000002dce543
  0x0000000002dce53b: mov    (%rax),%r10
  0x0000000002dce53e: lock cmpxchg %r10,(%r11)
  0x0000000002dce543: je     0x0000000002dce4ad
  0x0000000002dce549: mov    %r11,%rcx
  0x0000000002dce54c: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x0000000002dce551: movabs $0x5590c5c0,%r10
  0x0000000002dce55b: callq  *%r10
  0x0000000002dce55e: jmpq   0x0000000002dce4ad
  0x0000000002dce563: hlt    
  0x0000000002dce564: hlt    
  0x0000000002dce565: hlt    
  0x0000000002dce566: hlt    
  0x0000000002dce567: hlt    
  0x0000000002dce568: hlt    
  0x0000000002dce569: hlt    
  0x0000000002dce56a: hlt    
  0x0000000002dce56b: hlt    
  0x0000000002dce56c: hlt    
  0x0000000002dce56d: hlt    
  0x0000000002dce56e: hlt    
  0x0000000002dce56f: hlt    
  0x0000000002dce570: hlt    
  0x0000000002dce571: hlt    
  0x0000000002dce572: hlt    
  0x0000000002dce573: hlt    
  0x0000000002dce574: hlt    
  0x0000000002dce575: hlt    
  0x0000000002dce576: hlt    
  0x0000000002dce577: hlt    
  0x0000000002dce578: hlt    
  0x0000000002dce579: hlt    
  0x0000000002dce57a: hlt    
  0x0000000002dce57b: hlt    
  0x0000000002dce57c: hlt    
  0x0000000002dce57d: hlt    
  0x0000000002dce57e: hlt    
  0x0000000002dce57f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dce580: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dce585: callq  0x0000000002dce58a
  0x0000000002dce58a: subq   $0x5,(%rsp)
  0x0000000002dce58f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dce594: hlt    
  0x0000000002dce595: hlt    
  0x0000000002dce596: hlt    
  0x0000000002dce597: hlt    
<nmethod compile_id='37' compiler='C2' level='4' entry='0x0000000002dcdfa0' size='3288' address='0x0000000002dcde50' relocation_offset='288' insts_offset='336' stub_offset='1840' scopes_data_offset='1920' scopes_pcs_offset='2432' dependencies_offset='3216' handler_table_offset='3224' nul_chk_table_offset='3272' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='72169' iicount='72169' stamp='0.766'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dcff50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002dd0100: mov    0x8(%rdx),%r10d
  0x0000000002dd0104: shl    $0x3,%r10
  0x0000000002dd0108: cmp    %rax,%r10
  0x0000000002dd010b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd0111: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd011c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd0120: mov    %eax,-0x6000(%rsp)
  0x0000000002dd0127: push   %rbp
  0x0000000002dd0128: sub    $0x60,%rsp
  0x0000000002dd012c: movabs $0x1be60fc8,%rbx   ;   {metadata(method data for {method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd0136: mov    0xdc(%rbx),%eax
  0x0000000002dd013c: add    $0x8,%eax
  0x0000000002dd013f: mov    %eax,0xdc(%rbx)
  0x0000000002dd0145: movabs $0x1bc741c0,%rbx   ;   {metadata({method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd014f: and    $0x1ff8,%eax
  0x0000000002dd0155: cmp    $0x0,%eax
  0x0000000002dd0158: je     0x0000000002dd038e  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x0000000002dd015e: cmp    $0x0,%r8d
  0x0000000002dd0162: movabs $0x1be60fc8,%rbx   ;   {metadata(method data for {method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd016c: movabs $0x108,%rax
  0x0000000002dd0176: jge    0x0000000002dd0186
  0x0000000002dd017c: movabs $0x118,%rax
  0x0000000002dd0186: mov    (%rbx,%rax,1),%rcx
  0x0000000002dd018a: lea    0x1(%rcx),%rcx
  0x0000000002dd018e: mov    %rcx,(%rbx,%rax,1)
  0x0000000002dd0192: jl     0x0000000002dd034e  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x0000000002dd0198: mov    0xc(%rdx),%edx
  0x0000000002dd019b: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x0000000002dd019f: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x0000000002dd03a5
  0x0000000002dd01a2: cmp    %ebx,%r9d
  0x0000000002dd01a5: movabs $0x1be60fc8,%rbx   ;   {metadata(method data for {method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd01af: movabs $0x138,%rax
  0x0000000002dd01b9: jle    0x0000000002dd01c9
  0x0000000002dd01bf: movabs $0x148,%rax
  0x0000000002dd01c9: mov    (%rbx,%rax,1),%rcx
  0x0000000002dd01cd: lea    0x1(%rcx),%rcx
  0x0000000002dd01d1: mov    %rcx,(%rbx,%rax,1)
  0x0000000002dd01d5: jg     0x0000000002dd030e  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x0000000002dd01db: cmp    %r9d,%r8d
  0x0000000002dd01de: movabs $0x1be60fc8,%rbx   ;   {metadata(method data for {method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd01e8: movabs $0x168,%rax
  0x0000000002dd01f2: jle    0x0000000002dd0202
  0x0000000002dd01f8: movabs $0x178,%rax
  0x0000000002dd0202: mov    (%rbx,%rax,1),%rcx
  0x0000000002dd0206: lea    0x1(%rcx),%rcx
  0x0000000002dd020a: mov    %rcx,(%rbx,%rax,1)
  0x0000000002dd020e: jg     0x0000000002dd02c2  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x0000000002dd0214: movabs $0x1be60fc8,%rbx   ;   {metadata(method data for {method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd021e: addq   $0x1,0x198(%rbx)
  0x0000000002dd0226: mov    %r9,%rbx
  0x0000000002dd0229: sub    %r8d,%ebx
  0x0000000002dd022c: mov    %rdi,%r9
  0x0000000002dd022f: mov    %rsi,%rdi
  0x0000000002dd0232: mov    %rbx,%rsi
  0x0000000002dd0235: test   %r9,%r9
  0x0000000002dd0238: je     0x0000000002dd03aa
  0x0000000002dd023e: test   %r8d,%r8d
  0x0000000002dd0241: jl     0x0000000002dd03aa
  0x0000000002dd0247: test   %edi,%edi
  0x0000000002dd0249: jl     0x0000000002dd03aa
  0x0000000002dd024f: lea    (%r8,%rsi,1),%rcx
  0x0000000002dd0253: cmp    0xc(%rdx),%ecx
  0x0000000002dd0256: ja     0x0000000002dd03aa
  0x0000000002dd025c: lea    (%rdi,%rsi,1),%rcx
  0x0000000002dd0260: cmp    0xc(%r9),%ecx
  0x0000000002dd0264: ja     0x0000000002dd03aa
  0x0000000002dd026a: test   %esi,%esi
  0x0000000002dd026c: jl     0x0000000002dd03aa
  0x0000000002dd0272: je     0x0000000002dd02b6
  0x0000000002dd0278: movslq %r8d,%r8
  0x0000000002dd027b: movslq %edi,%rdi
  0x0000000002dd027e: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002dd0283: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002dd0288: mov    %rsi,%r8
  0x0000000002dd028b: sub    $0x20,%rsp
  0x0000000002dd028f: test   $0xf,%esp
  0x0000000002dd0295: je     0x0000000002dd02ad
  0x0000000002dd029b: sub    $0x8,%rsp
  0x0000000002dd029f: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002dd02a4: add    $0x8,%rsp
  0x0000000002dd02a8: jmpq   0x0000000002dd02b2
  0x0000000002dd02ad: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x0000000002dd02b2: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)

  0x0000000002dd02b6: add    $0x60,%rsp
  0x0000000002dd02ba: pop    %rbp
  0x0000000002dd02bb: test   %eax,-0x21d01c1(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd02c1: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x0000000002dd02c2: nopw   0x0(%rax,%rax,1)
  0x0000000002dd02c8: jmpq   0x0000000002dd03c8  ;   {no_reloc}
  0x0000000002dd02cd: add    %al,(%rax)
  0x0000000002dd02cf: add    %al,(%rax)
  0x0000000002dd02d1: add    %ch,%cl
  0x0000000002dd02d3: sti    
  0x0000000002dd02d4: add    %al,(%rax)
  0x0000000002dd02d6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x0000000002dd02d9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd02dc: enterq $0xe60f,$0x1b
  0x0000000002dd02e0: add    %al,(%rax)
  0x0000000002dd02e2: add    %al,(%rax)
  0x0000000002dd02e4: addq   $0x1,0x188(%rsi)
  0x0000000002dd02ec: sub    %r8d,%r9d
  0x0000000002dd02ef: mov    %r9,%r8
  0x0000000002dd02f2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x0000000002dd02f5: mov    %rax,0x38(%rsp)
  0x0000000002dd02fa: nop
  0x0000000002dd02fb: nop
  0x0000000002dd02fc: nop
  0x0000000002dd02fd: nop
  0x0000000002dd02fe: nop
  0x0000000002dd02ff: callq  0x0000000002cf61a0  ; OopMap{[56]=Oop off=516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x0000000002dd0304: mov    0x38(%rsp),%rax
  0x0000000002dd0309: jmpq   0x0000000002dd0456  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x0000000002dd030e: xchg   %ax,%ax
  0x0000000002dd0310: jmpq   0x0000000002dd03ee  ;   {no_reloc}
  0x0000000002dd0315: add    %al,(%rax)
  0x0000000002dd0317: add    %al,(%rax)
  0x0000000002dd0319: add    %ch,%cl
  0x0000000002dd031b: flds   (%rax)
  0x0000000002dd031d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x0000000002dd031f: mov    %rax,%r8
  0x0000000002dd0322: movabs $0x1be60fc8,%rdx   ;   {metadata(method data for {method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd032c: addq   $0x1,0x158(%rdx)
  0x0000000002dd0334: mov    %r9,%r8
  0x0000000002dd0337: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x0000000002dd033a: mov    %rax,0x40(%rsp)
  0x0000000002dd033f: callq  0x0000000002cf61a0  ; OopMap{[64]=Oop off=580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x0000000002dd0344: mov    0x40(%rsp),%rax
  0x0000000002dd0349: jmpq   0x0000000002dd0456  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x0000000002dd034e: xchg   %ax,%ax
  0x0000000002dd0350: jmpq   0x0000000002dd0414  ;   {no_reloc}
  0x0000000002dd0355: add    %al,(%rax)
  0x0000000002dd0357: add    %al,(%rax)
  0x0000000002dd0359: add    %ch,%cl
  0x0000000002dd035b: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x0000000002dd0360: mov    %eax,%edx
  0x0000000002dd0362: movabs $0x1be60fc8,%rsi   ;   {metadata(method data for {method} {0x000000001bc741c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd036c: addq   $0x1,0x128(%rsi)
  0x0000000002dd0374: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x0000000002dd0377: mov    %rax,0x48(%rsp)
  0x0000000002dd037c: nop
  0x0000000002dd037d: nop
  0x0000000002dd037e: nop
  0x0000000002dd037f: callq  0x0000000002cf61a0  ; OopMap{[72]=Oop off=644}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x0000000002dd0384: mov    0x48(%rsp),%rax
  0x0000000002dd0389: jmpq   0x0000000002dd0456
  0x0000000002dd038e: mov    %rbx,0x8(%rsp)
  0x0000000002dd0393: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd039b: callq  0x0000000002db1d60  ; OopMap{rdx=Oop rdi=Oop off=672}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x0000000002dd03a0: jmpq   0x0000000002dd015e
  0x0000000002dd03a5: callq  0x0000000002dad680  ; OopMap{rdi=Oop rdx=Oop off=682}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x0000000002dd03aa: nop
  0x0000000002dd03ab: nop
  0x0000000002dd03ac: nop
  0x0000000002dd03ad: nop
  0x0000000002dd03ae: nop
  0x0000000002dd03af: callq  0x0000000002cf6620  ; OopMap{off=692}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x0000000002dd03b4: jmpq   0x0000000002dd02b6
  0x0000000002dd03b9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd03c3: mov    $0xa050f00,%eax
  0x0000000002dd03c8: callq  0x0000000002db0ca0  ; OopMap{off=717}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000002dd03cd: jmpq   0x0000000002dd02c8
  0x0000000002dd03d2: mov    %rdx,%rdx
  0x0000000002dd03d5: callq  0x0000000002dadb20  ; OopMap{off=730}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x0000000002dd03da: jmpq   0x0000000002dd02d7
  0x0000000002dd03df: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd03e9: mov    $0xa050f00,%eax
  0x0000000002dd03ee: callq  0x0000000002db0ca0  ; OopMap{off=755}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000002dd03f3: jmpq   0x0000000002dd0310
  0x0000000002dd03f8: mov    %rdx,%rdx
  0x0000000002dd03fb: callq  0x0000000002dadb20  ; OopMap{off=768}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x0000000002dd0400: jmpq   0x0000000002dd031f
  0x0000000002dd0405: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd040f: mov    $0xa050f00,%eax
  0x0000000002dd0414: callq  0x0000000002db0ca0  ; OopMap{off=793}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000002dd0419: jmpq   0x0000000002dd0350
  0x0000000002dd041e: mov    %rdx,%rdx
  0x0000000002dd0421: callq  0x0000000002dadb20  ; OopMap{off=806}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x0000000002dd0426: jmpq   0x0000000002dd035f
  0x0000000002dd042b: nop
  0x0000000002dd042c: nop
  0x0000000002dd042d: mov    0x2a8(%r15),%rax
  0x0000000002dd0434: movabs $0x0,%r10
  0x0000000002dd043e: mov    %r10,0x2a8(%r15)
  0x0000000002dd0445: movabs $0x0,%r10
  0x0000000002dd044f: mov    %r10,0x2b0(%r15)
  0x0000000002dd0456: add    $0x60,%rsp
  0x0000000002dd045a: pop    %rbp
  0x0000000002dd045b: jmpq   0x0000000002dacde0  ;   {runtime_call}
[Stub Code]
  0x0000000002dd0460: nop                       ;   {no_reloc}
  0x0000000002dd0461: nop
  0x0000000002dd0462: nop
  0x0000000002dd0463: nop
  0x0000000002dd0464: nop
  0x0000000002dd0465: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd046f: jmpq   0x0000000002dd046f  ;   {runtime_call}
  0x0000000002dd0474: nop
  0x0000000002dd0475: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd047f: jmpq   0x0000000002dd047f  ;   {runtime_call}
  0x0000000002dd0484: nop
  0x0000000002dd0485: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd048f: jmpq   0x0000000002dd048f  ;   {runtime_call}
  0x0000000002dd0494: nop
  0x0000000002dd0495: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd049f: jmpq   0x0000000002dd049f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dd04a4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dd04a9: mov    %rsp,-0x28(%rsp)
  0x0000000002dd04ae: sub    $0x80,%rsp
  0x0000000002dd04b5: mov    %rax,0x78(%rsp)
  0x0000000002dd04ba: mov    %rcx,0x70(%rsp)
  0x0000000002dd04bf: mov    %rdx,0x68(%rsp)
  0x0000000002dd04c4: mov    %rbx,0x60(%rsp)
  0x0000000002dd04c9: mov    %rbp,0x50(%rsp)
  0x0000000002dd04ce: mov    %rsi,0x48(%rsp)
  0x0000000002dd04d3: mov    %rdi,0x40(%rsp)
  0x0000000002dd04d8: mov    %r8,0x38(%rsp)
  0x0000000002dd04dd: mov    %r9,0x30(%rsp)
  0x0000000002dd04e2: mov    %r10,0x28(%rsp)
  0x0000000002dd04e7: mov    %r11,0x20(%rsp)
  0x0000000002dd04ec: mov    %r12,0x18(%rsp)
  0x0000000002dd04f1: mov    %r13,0x10(%rsp)
  0x0000000002dd04f6: mov    %r14,0x8(%rsp)
  0x0000000002dd04fb: mov    %r15,(%rsp)
  0x0000000002dd04ff: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd0509: movabs $0x2dd04a9,%rdx    ;   {internal_word}
  0x0000000002dd0513: mov    %rsp,%r8
  0x0000000002dd0516: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd051a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd051f: hlt    
[Deopt Handler Code]
  0x0000000002dd0520: movabs $0x2dd0520,%r10    ;   {section_word}
  0x0000000002dd052a: push   %r10
  0x0000000002dd052c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd0531: hlt    
  0x0000000002dd0532: hlt    
  0x0000000002dd0533: hlt    
  0x0000000002dd0534: hlt    
  0x0000000002dd0535: hlt    
  0x0000000002dd0536: hlt    
  0x0000000002dd0537: hlt    
<nmethod compile_id='39' compiler='C1' level='3' entry='0x0000000002dd0100' size='2256' address='0x0000000002dcff50' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='3970' iicount='3970' stamp='0.771'/>
<writer thread='22236'/>
<task_queued compile_id='42' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='1664' iicount='1664' level='3' stamp='0.771' comment='tiered' hot_count='1664'/>
<task_queued compile_id='43' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='1664' iicount='1664' level='3' stamp='0.771' comment='tiered' hot_count='1664'/>
<task_queued compile_id='44' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='1664' iicount='1664' level='3' stamp='0.771' comment='tiered' hot_count='1664'/>
<task_queued compile_id='45' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='1664' iicount='1664' level='3' stamp='0.771' comment='tiered' hot_count='1664'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dcfb10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc74e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dcfc80: mov    0x8(%rdx),%r10d
  0x0000000002dcfc84: shl    $0x3,%r10
  0x0000000002dcfc88: cmp    %rax,%r10
  0x0000000002dcfc8b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcfc91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcfc9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcfca0: mov    %eax,-0x6000(%rsp)
  0x0000000002dcfca7: push   %rbp
  0x0000000002dcfca8: sub    $0x30,%rsp
  0x0000000002dcfcac: movabs $0x1beb54d0,%r9    ;   {metadata(method data for {method} {0x000000001bc74e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dcfcb6: mov    0xdc(%r9),%esi
  0x0000000002dcfcbd: add    $0x8,%esi
  0x0000000002dcfcc0: mov    %esi,0xdc(%r9)
  0x0000000002dcfcc7: movabs $0x1bc74e48,%r9    ;   {metadata({method} {0x000000001bc74e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dcfcd1: and    $0x1ff8,%esi
  0x0000000002dcfcd7: cmp    $0x0,%esi
  0x0000000002dcfcda: je     0x0000000002dcfd8b  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x0000000002dcfce0: mov    %rdx,%r9
  0x0000000002dcfce3: movabs $0x1beb54d0,%rsi   ;   {metadata(method data for {method} {0x000000001bc74e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dcfced: mov    0x8(%r9),%r9d
  0x0000000002dcfcf1: shl    $0x3,%r9
  0x0000000002dcfcf5: cmp    0x110(%rsi),%r9
  0x0000000002dcfcfc: jne    0x0000000002dcfd0b
  0x0000000002dcfcfe: addq   $0x1,0x118(%rsi)
  0x0000000002dcfd06: jmpq   0x0000000002dcfd71
  0x0000000002dcfd0b: cmp    0x120(%rsi),%r9
  0x0000000002dcfd12: jne    0x0000000002dcfd21
  0x0000000002dcfd14: addq   $0x1,0x128(%rsi)
  0x0000000002dcfd1c: jmpq   0x0000000002dcfd71
  0x0000000002dcfd21: cmpq   $0x0,0x110(%rsi)
  0x0000000002dcfd2c: jne    0x0000000002dcfd45
  0x0000000002dcfd2e: mov    %r9,0x110(%rsi)
  0x0000000002dcfd35: movq   $0x1,0x118(%rsi)
  0x0000000002dcfd40: jmpq   0x0000000002dcfd71
  0x0000000002dcfd45: cmpq   $0x0,0x120(%rsi)
  0x0000000002dcfd50: jne    0x0000000002dcfd69
  0x0000000002dcfd52: mov    %r9,0x120(%rsi)
  0x0000000002dcfd59: movq   $0x1,0x128(%rsi)
  0x0000000002dcfd64: jmpq   0x0000000002dcfd71
  0x0000000002dcfd69: addq   $0x1,0x108(%rsi)
  0x0000000002dcfd71: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x0000000002dcfd77: callq  0x0000000002cf61a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x0000000002dcfd7c: and    $0x1,%eax
  0x0000000002dcfd7f: add    $0x30,%rsp
  0x0000000002dcfd83: pop    %rbp
  0x0000000002dcfd84: test   %eax,-0x21cfc8a(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dcfd8a: retq   
  0x0000000002dcfd8b: mov    %r9,0x8(%rsp)
  0x0000000002dcfd90: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcfd98: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x0000000002dcfd9d: jmpq   0x0000000002dcfce0
  0x0000000002dcfda2: nop
  0x0000000002dcfda3: nop
  0x0000000002dcfda4: mov    0x2a8(%r15),%rax
  0x0000000002dcfdab: movabs $0x0,%r10
  0x0000000002dcfdb5: mov    %r10,0x2a8(%r15)
  0x0000000002dcfdbc: movabs $0x0,%r10
  0x0000000002dcfdc6: mov    %r10,0x2b0(%r15)
  0x0000000002dcfdcd: add    $0x30,%rsp
  0x0000000002dcfdd1: pop    %rbp
  0x0000000002dcfdd2: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dcfdd7: hlt    
  0x0000000002dcfdd8: hlt    
  0x0000000002dcfdd9: hlt    
  0x0000000002dcfdda: hlt    
  0x0000000002dcfddb: hlt    
  0x0000000002dcfddc: hlt    
  0x0000000002dcfddd: hlt    
  0x0000000002dcfdde: hlt    
  0x0000000002dcfddf: hlt    
[Stub Code]
  0x0000000002dcfde0: nop                       ;   {no_reloc}
  0x0000000002dcfde1: nop
  0x0000000002dcfde2: nop
  0x0000000002dcfde3: nop
  0x0000000002dcfde4: nop
  0x0000000002dcfde5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcfdef: jmpq   0x0000000002dcfdef  ;   {runtime_call}
[Exception Handler]
  0x0000000002dcfdf4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dcfdf9: mov    %rsp,-0x28(%rsp)
  0x0000000002dcfdfe: sub    $0x80,%rsp
  0x0000000002dcfe05: mov    %rax,0x78(%rsp)
  0x0000000002dcfe0a: mov    %rcx,0x70(%rsp)
  0x0000000002dcfe0f: mov    %rdx,0x68(%rsp)
  0x0000000002dcfe14: mov    %rbx,0x60(%rsp)
  0x0000000002dcfe19: mov    %rbp,0x50(%rsp)
  0x0000000002dcfe1e: mov    %rsi,0x48(%rsp)
  0x0000000002dcfe23: mov    %rdi,0x40(%rsp)
  0x0000000002dcfe28: mov    %r8,0x38(%rsp)
  0x0000000002dcfe2d: mov    %r9,0x30(%rsp)
  0x0000000002dcfe32: mov    %r10,0x28(%rsp)
  0x0000000002dcfe37: mov    %r11,0x20(%rsp)
  0x0000000002dcfe3c: mov    %r12,0x18(%rsp)
  0x0000000002dcfe41: mov    %r13,0x10(%rsp)
  0x0000000002dcfe46: mov    %r14,0x8(%rsp)
  0x0000000002dcfe4b: mov    %r15,(%rsp)
  0x0000000002dcfe4f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dcfe59: movabs $0x2dcfdf9,%rdx    ;   {internal_word}
  0x0000000002dcfe63: mov    %rsp,%r8
  0x0000000002dcfe66: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcfe6a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dcfe6f: hlt    
[Deopt Handler Code]
  0x0000000002dcfe70: movabs $0x2dcfe70,%r10    ;   {section_word}
  0x0000000002dcfe7a: push   %r10
  0x0000000002dcfe7c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcfe81: hlt    
  0x0000000002dcfe82: hlt    
  0x0000000002dcfe83: hlt    
  0x0000000002dcfe84: hlt    
  0x0000000002dcfe85: hlt    
  0x0000000002dcfe86: hlt    
  0x0000000002dcfe87: hlt    
<nmethod compile_id='28' compiler='C1' level='3' entry='0x0000000002dcfc80' size='1040' address='0x0000000002dcfb10' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1190' iicount='1190' stamp='0.775'/>
<writer thread='22236'/>
Decoding compiled method 0x0000000002dcf750:
Code:
[Entry Point]
  # {method} {0x000000001be72070} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = &apos;[B&apos;
  # parm2:    r9        = boolean
  #           [sp+0x80]  (sp of caller)
  0x0000000002dcf8c0: mov    0x8(%rdx),%r10d
  0x0000000002dcf8c4: shl    $0x3,%r10
  0x0000000002dcf8c8: cmp    %r10,%rax
  0x0000000002dcf8cb: je     0x0000000002dcf8d8
  0x0000000002dcf8d1: jmpq   0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcf8d6: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002dcf8d8: mov    %eax,-0x6000(%rsp)
  0x0000000002dcf8df: push   %rbp
  0x0000000002dcf8e0: mov    %rsp,%rbp
  0x0000000002dcf8e3: sub    $0x70,%rsp
  0x0000000002dcf8e7: mov    %r9,0x20(%rsp)
  0x0000000002dcf8ec: mov    %r8,0x30(%rsp)
  0x0000000002dcf8f1: cmp    $0x0,%r8
  0x0000000002dcf8f5: lea    0x30(%rsp),%r9
  0x0000000002dcf8fa: cmove  0x30(%rsp),%r9
  0x0000000002dcf900: mov    %rdx,%r8
  0x0000000002dcf903: movabs $0x76b8d81c0,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/util/zip/ZipFile&apos;)}
  0x0000000002dcf90d: mov    %r14,0x58(%rsp)
  0x0000000002dcf912: lea    0x58(%rsp),%r14
  0x0000000002dcf917: mov    %r14,%rdx          ; OopMap{[48]=Oop [88]=Oop off=90}
  0x0000000002dcf91a: movabs $0x2dcf91a,%r10    ;   {section_word}
  0x0000000002dcf924: mov    %r10,0x1e0(%r15)
  0x0000000002dcf92b: mov    %rsp,0x1d8(%r15)
  0x0000000002dcf932: cmpb   $0x0,0x5311be48(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002dcf939: je     0x0000000002dcf981
  0x0000000002dcf93f: push   %rdx
  0x0000000002dcf940: push   %r8
  0x0000000002dcf942: push   %r9
  0x0000000002dcf944: movabs $0x1be72068,%rdx   ;   {metadata({method} {0x000000001be72070} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x0000000002dcf94e: mov    %r15,%rcx
  0x0000000002dcf951: sub    $0x20,%rsp
  0x0000000002dcf955: test   $0xf,%esp
  0x0000000002dcf95b: je     0x0000000002dcf973
  0x0000000002dcf961: sub    $0x8,%rsp
  0x0000000002dcf965: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dcf96a: add    $0x8,%rsp
  0x0000000002dcf96e: jmpq   0x0000000002dcf978
  0x0000000002dcf973: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dcf978: add    $0x20,%rsp
  0x0000000002dcf97c: pop    %r9
  0x0000000002dcf97e: pop    %r8
  0x0000000002dcf980: pop    %rdx
  0x0000000002dcf981: lea    0x1f8(%r15),%rcx
  0x0000000002dcf988: movl   $0x4,0x270(%r15)
  0x0000000002dcf993: callq  0x0000000055691f98  ;   {runtime_call}
  0x0000000002dcf998: vzeroupper 
  0x0000000002dcf99b: movl   $0x5,0x270(%r15)
  0x0000000002dcf9a6: mov    %r15d,%ecx
  0x0000000002dcf9a9: shr    $0x4,%ecx
  0x0000000002dcf9ac: and    $0xffc,%ecx
  0x0000000002dcf9b2: movabs $0xc10000,%r10     ;   {external_word}
  0x0000000002dcf9bc: mov    %ecx,(%r10,%rcx,1)
  0x0000000002dcf9c0: cmpl   $0x0,0x5311c986(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x0000000002dcf9ca: jne    0x0000000002dcf9de
  0x0000000002dcf9d0: cmpl   $0x0,0x30(%r15)
  0x0000000002dcf9d8: je     0x0000000002dcf9ff
  0x0000000002dcf9de: mov    %rax,-0x8(%rbp)
  0x0000000002dcf9e2: mov    %r15,%rcx
  0x0000000002dcf9e5: mov    %rsp,%r12
  0x0000000002dcf9e8: sub    $0x20,%rsp
  0x0000000002dcf9ec: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcf9f0: callq  0x00000000559236e0  ;   {runtime_call}
  0x0000000002dcf9f5: mov    %r12,%rsp
  0x0000000002dcf9f8: xor    %r12,%r12
  0x0000000002dcf9fb: mov    -0x8(%rbp),%rax
  0x0000000002dcf9ff: movl   $0x8,0x270(%r15)
  0x0000000002dcfa0a: cmpl   $0x1,0x29c(%r15)
  0x0000000002dcfa15: je     0x0000000002dcfaad
  0x0000000002dcfa1b: cmpb   $0x0,0x5311bd5f(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002dcfa22: je     0x0000000002dcfa68
  0x0000000002dcfa28: mov    %rax,-0x8(%rbp)
  0x0000000002dcfa2c: movabs $0x1be72068,%rdx   ;   {metadata({method} {0x000000001be72070} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x0000000002dcfa36: mov    %r15,%rcx
  0x0000000002dcfa39: sub    $0x20,%rsp
  0x0000000002dcfa3d: test   $0xf,%esp
  0x0000000002dcfa43: je     0x0000000002dcfa5b
  0x0000000002dcfa49: sub    $0x8,%rsp
  0x0000000002dcfa4d: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dcfa52: add    $0x8,%rsp
  0x0000000002dcfa56: jmpq   0x0000000002dcfa60
  0x0000000002dcfa5b: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dcfa60: add    $0x20,%rsp
  0x0000000002dcfa64: mov    -0x8(%rbp),%rax
  0x0000000002dcfa68: movabs $0x0,%r10
  0x0000000002dcfa72: mov    %r10,0x1d8(%r15)
  0x0000000002dcfa79: movabs $0x0,%r10
  0x0000000002dcfa83: mov    %r10,0x1e0(%r15)
  0x0000000002dcfa8a: mov    0x38(%r15),%rcx
  0x0000000002dcfa8e: movl   $0x0,0x100(%rcx)
  0x0000000002dcfa98: leaveq 
  0x0000000002dcfa99: cmpq   $0x0,0x8(%r15)
  0x0000000002dcfaa1: jne    0x0000000002dcfaa8
  0x0000000002dcfaa7: retq   
  0x0000000002dcfaa8: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002dcfaad: mov    %rax,-0x8(%rbp)
  0x0000000002dcfab1: mov    %rsp,%r12
  0x0000000002dcfab4: sub    $0x20,%rsp
  0x0000000002dcfab8: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcfabc: callq  0x000000005590c5a0  ;   {runtime_call}
  0x0000000002dcfac1: mov    %r12,%rsp
  0x0000000002dcfac4: xor    %r12,%r12
  0x0000000002dcfac7: mov    -0x8(%rbp),%rax
  0x0000000002dcfacb: jmpq   0x0000000002dcfa1b
<nmethod compile_id='46' compile_kind='c2n' level='0' entry='0x0000000002dcf8c0' size='896' address='0x0000000002dcf750' relocation_offset='288' consts_offset='896' insts_offset='368' method='java/util/zip/ZipFile getEntry (J[BZ)J' bytes='0' count='1664' iicount='1664' stamp='0.777'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dc8ed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x40]  (sp of caller)
  0x0000000002dc9040: mov    0x8(%rdx),%r10d
  0x0000000002dc9044: shl    $0x3,%r10
  0x0000000002dc9048: cmp    %rax,%r10
  0x0000000002dc904b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc9051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dc905c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc9060: mov    %eax,-0x6000(%rsp)
  0x0000000002dc9067: push   %rbp
  0x0000000002dc9068: sub    $0x30,%rsp
  0x0000000002dc906c: movabs $0x1be5df40,%rax   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dc9076: mov    0xdc(%rax),%esi
  0x0000000002dc907c: add    $0x8,%esi
  0x0000000002dc907f: mov    %esi,0xdc(%rax)
  0x0000000002dc9085: movabs $0x1bde9a30,%rax   ;   {metadata({method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dc908f: and    $0x1ff8,%esi
  0x0000000002dc9095: cmp    $0x0,%esi
  0x0000000002dc9098: je     0x0000000002dc91b4  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isLetter@0 (line 57)

  0x0000000002dc909e: cmp    $0x61,%r8d
  0x0000000002dc90a2: movabs $0x1be5df40,%rax   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dc90ac: movabs $0x108,%rsi
  0x0000000002dc90b6: jl     0x0000000002dc90c6
  0x0000000002dc90bc: movabs $0x118,%rsi
  0x0000000002dc90c6: mov    (%rax,%rsi,1),%rdi
  0x0000000002dc90ca: lea    0x1(%rdi),%rdi
  0x0000000002dc90ce: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dc90d2: jl     0x0000000002dc9112  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)

  0x0000000002dc90d8: cmp    $0x7a,%r8d
  0x0000000002dc90dc: movabs $0x1be5df40,%rax   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dc90e6: movabs $0x128,%rsi
  0x0000000002dc90f0: jle    0x0000000002dc9100
  0x0000000002dc90f6: movabs $0x138,%rsi
  0x0000000002dc9100: mov    (%rax,%rsi,1),%rdi
  0x0000000002dc9104: lea    0x1(%rdi),%rdi
  0x0000000002dc9108: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dc910c: jle    0x0000000002dc9190  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::isLetter@9 (line 57)

  0x0000000002dc9112: cmp    $0x41,%r8d
  0x0000000002dc9116: movabs $0x1be5df40,%rax   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dc9120: movabs $0x148,%rsi
  0x0000000002dc912a: jl     0x0000000002dc913a
  0x0000000002dc9130: movabs $0x158,%rsi
  0x0000000002dc913a: mov    (%rax,%rsi,1),%rdi
  0x0000000002dc913e: lea    0x1(%rdi),%rdi
  0x0000000002dc9142: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dc9146: jl     0x0000000002dc9186  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)

  0x0000000002dc914c: cmp    $0x5a,%r8d
  0x0000000002dc9150: movabs $0x1be5df40,%rax   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dc915a: movabs $0x168,%rsi
  0x0000000002dc9164: jg     0x0000000002dc9174
  0x0000000002dc916a: movabs $0x178,%rsi
  0x0000000002dc9174: mov    (%rax,%rsi,1),%rdi
  0x0000000002dc9178: lea    0x1(%rdi),%rdi
  0x0000000002dc917c: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dc9180: jle    0x0000000002dc9190  ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)

  0x0000000002dc9186: mov    $0x0,%eax
  0x0000000002dc918b: jmpq   0x0000000002dc91a5  ;*ireturn
                                                ; - java.io.WinNTFileSystem::isLetter@29 (line 57)

  0x0000000002dc9190: movabs $0x1be5df40,%rax   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dc919a: incl   0x188(%rax)
  0x0000000002dc91a0: mov    $0x1,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isLetter@25 (line 57)

  0x0000000002dc91a5: and    $0x1,%eax
  0x0000000002dc91a8: add    $0x30,%rsp
  0x0000000002dc91ac: pop    %rbp
  0x0000000002dc91ad: test   %eax,-0x21c90b3(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc91b3: retq   
  0x0000000002dc91b4: mov    %rax,0x8(%rsp)
  0x0000000002dc91b9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc91c1: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=390}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isLetter@-1 (line 57)
                                                ;   {runtime_call}
  0x0000000002dc91c6: jmpq   0x0000000002dc909e
  0x0000000002dc91cb: nop
  0x0000000002dc91cc: nop
  0x0000000002dc91cd: mov    0x2a8(%r15),%rax
  0x0000000002dc91d4: movabs $0x0,%r10
  0x0000000002dc91de: mov    %r10,0x2a8(%r15)
  0x0000000002dc91e5: movabs $0x0,%r10
  0x0000000002dc91ef: mov    %r10,0x2b0(%r15)
  0x0000000002dc91f6: add    $0x30,%rsp
  0x0000000002dc91fa: pop    %rbp
  0x0000000002dc91fb: jmpq   0x0000000002dacde0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x0000000002dc9200: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dc9205: mov    %rsp,-0x28(%rsp)
  0x0000000002dc920a: sub    $0x80,%rsp
  0x0000000002dc9211: mov    %rax,0x78(%rsp)
  0x0000000002dc9216: mov    %rcx,0x70(%rsp)
  0x0000000002dc921b: mov    %rdx,0x68(%rsp)
  0x0000000002dc9220: mov    %rbx,0x60(%rsp)
  0x0000000002dc9225: mov    %rbp,0x50(%rsp)
  0x0000000002dc922a: mov    %rsi,0x48(%rsp)
  0x0000000002dc922f: mov    %rdi,0x40(%rsp)
  0x0000000002dc9234: mov    %r8,0x38(%rsp)
  0x0000000002dc9239: mov    %r9,0x30(%rsp)
  0x0000000002dc923e: mov    %r10,0x28(%rsp)
  0x0000000002dc9243: mov    %r11,0x20(%rsp)
  0x0000000002dc9248: mov    %r12,0x18(%rsp)
  0x0000000002dc924d: mov    %r13,0x10(%rsp)
  0x0000000002dc9252: mov    %r14,0x8(%rsp)
  0x0000000002dc9257: mov    %r15,(%rsp)
  0x0000000002dc925b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dc9265: movabs $0x2dc9205,%rdx    ;   {internal_word}
  0x0000000002dc926f: mov    %rsp,%r8
  0x0000000002dc9272: and    $0xfffffffffffffff0,%rsp
  0x0000000002dc9276: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dc927b: hlt    
[Deopt Handler Code]
  0x0000000002dc927c: movabs $0x2dc927c,%r10    ;   {section_word}
  0x0000000002dc9286: push   %r10
  0x0000000002dc9288: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc928d: hlt    
  0x0000000002dc928e: hlt    
  0x0000000002dc928f: hlt    
<nmethod compile_id='34' compiler='C1' level='3' entry='0x0000000002dc9040' size='1192' address='0x0000000002dc8ed0' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='968' scopes_pcs_offset='1024' dependencies_offset='1184' method='java/io/WinNTFileSystem isLetter (C)Z' bytes='30' count='2697' iicount='2697' stamp='0.779'/>
<writer thread='22236'/>
<task_queued compile_id='47' method='java/lang/String lastIndexOf (II)I' bytes='52' count='714' backedge_count='53661' iicount='714' level='3' stamp='0.779' comment='tiered' hot_count='714'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dc6910:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001be3fcf8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002dc6a40: mov    %eax,-0x6000(%rsp)
  0x0000000002dc6a47: push   %rbp
  0x0000000002dc6a48: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)

  0x0000000002dc6a4c: mov    %edx,%r11d
  0x0000000002dc6a4f: shr    $0x8,%r11d         ;*iushr
                                                ; - java.lang.CharacterData::of@3 (line 77)

  0x0000000002dc6a53: test   %r11d,%r11d
  0x0000000002dc6a56: jne    0x0000000002dc6a6e  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000002dc6a58: movabs $0x76b81ae18,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x0000000002dc6a62: add    $0x20,%rsp
  0x0000000002dc6a66: pop    %rbp
  0x0000000002dc6a67: test   %eax,-0x21c6a6d(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dc6a6d: retq   
  0x0000000002dc6a6e: mov    %edx,%ebp
  0x0000000002dc6a70: mov    %r11d,(%rsp)
  0x0000000002dc6a74: mov    $0xffffff65,%edx
  0x0000000002dc6a79: xchg   %ax,%ax
  0x0000000002dc6a7b: callq  0x0000000002cf57a0  ; OopMap{off=64}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ;   {runtime_call}
  0x0000000002dc6a80: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x0000000002dc6a81: hlt    
  0x0000000002dc6a82: hlt    
  0x0000000002dc6a83: hlt    
  0x0000000002dc6a84: hlt    
  0x0000000002dc6a85: hlt    
  0x0000000002dc6a86: hlt    
  0x0000000002dc6a87: hlt    
  0x0000000002dc6a88: hlt    
  0x0000000002dc6a89: hlt    
  0x0000000002dc6a8a: hlt    
  0x0000000002dc6a8b: hlt    
  0x0000000002dc6a8c: hlt    
  0x0000000002dc6a8d: hlt    
  0x0000000002dc6a8e: hlt    
  0x0000000002dc6a8f: hlt    
  0x0000000002dc6a90: hlt    
  0x0000000002dc6a91: hlt    
  0x0000000002dc6a92: hlt    
  0x0000000002dc6a93: hlt    
  0x0000000002dc6a94: hlt    
  0x0000000002dc6a95: hlt    
  0x0000000002dc6a96: hlt    
  0x0000000002dc6a97: hlt    
  0x0000000002dc6a98: hlt    
  0x0000000002dc6a99: hlt    
  0x0000000002dc6a9a: hlt    
  0x0000000002dc6a9b: hlt    
  0x0000000002dc6a9c: hlt    
  0x0000000002dc6a9d: hlt    
  0x0000000002dc6a9e: hlt    
  0x0000000002dc6a9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc6aa0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dc6aa5: callq  0x0000000002dc6aaa
  0x0000000002dc6aaa: subq   $0x5,(%rsp)
  0x0000000002dc6aaf: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc6ab4: hlt    
  0x0000000002dc6ab5: hlt    
  0x0000000002dc6ab6: hlt    
  0x0000000002dc6ab7: hlt    
<nmethod compile_id='13' compiler='C2' level='4' entry='0x0000000002dc6a40' size='600' address='0x0000000002dc6910' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='448' scopes_pcs_offset='480' dependencies_offset='592' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='32857' iicount='32857' stamp='0.780'/>
<writer thread='22236'/>
<task_queued compile_id='48' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='1280' iicount='1280' level='1' stamp='0.780' comment='tiered' hot_count='1280'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dcf4d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001be403b8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x0000000002dcf600: mov    0x8(%rdx),%r10d
  0x0000000002dcf604: shl    $0x3,%r10
  0x0000000002dcf608: cmp    %r10,%rax
  0x0000000002dcf60b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcf611: data16 xchg %ax,%ax
  0x0000000002dcf614: nopl   0x0(%rax,%rax,1)
  0x0000000002dcf61c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcf620: mov    %eax,-0x6000(%rsp)
  0x0000000002dcf627: push   %rbp
  0x0000000002dcf628: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)

  0x0000000002dcf62c: movzwl %r8w,%r8d          ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)

  0x0000000002dcf630: cmp    $0x100,%r8d
  0x0000000002dcf637: jae    0x0000000002dcf654
  0x0000000002dcf639: movabs $0x76b81ae28,%r10  ;   {oop([I)}
  0x0000000002dcf643: mov    0x10(%r10,%r8,4),%eax
  0x0000000002dcf648: add    $0x10,%rsp
  0x0000000002dcf64c: pop    %rbp
  0x0000000002dcf64d: test   %eax,-0x21cf653(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dcf653: retq   
  0x0000000002dcf654: mov    $0xffffffe4,%edx
  0x0000000002dcf659: mov    %r8d,%ebp
  0x0000000002dcf65c: data16 xchg %ax,%ax
  0x0000000002dcf65f: callq  0x0000000002cf57a0  ; OopMap{off=100}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x0000000002dcf664: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000002dcf665: hlt    
  0x0000000002dcf666: hlt    
  0x0000000002dcf667: hlt    
  0x0000000002dcf668: hlt    
  0x0000000002dcf669: hlt    
  0x0000000002dcf66a: hlt    
  0x0000000002dcf66b: hlt    
  0x0000000002dcf66c: hlt    
  0x0000000002dcf66d: hlt    
  0x0000000002dcf66e: hlt    
  0x0000000002dcf66f: hlt    
  0x0000000002dcf670: hlt    
  0x0000000002dcf671: hlt    
  0x0000000002dcf672: hlt    
  0x0000000002dcf673: hlt    
  0x0000000002dcf674: hlt    
  0x0000000002dcf675: hlt    
  0x0000000002dcf676: hlt    
  0x0000000002dcf677: hlt    
  0x0000000002dcf678: hlt    
  0x0000000002dcf679: hlt    
  0x0000000002dcf67a: hlt    
  0x0000000002dcf67b: hlt    
  0x0000000002dcf67c: hlt    
  0x0000000002dcf67d: hlt    
  0x0000000002dcf67e: hlt    
  0x0000000002dcf67f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dcf680: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dcf685: callq  0x0000000002dcf68a
  0x0000000002dcf68a: subq   $0x5,(%rsp)
  0x0000000002dcf68f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcf694: hlt    
  0x0000000002dcf695: hlt    
  0x0000000002dcf696: hlt    
  0x0000000002dcf697: hlt    
<nmethod compile_id='14' compiler='C2' level='4' entry='0x0000000002dcf600' size='616' address='0x0000000002dcf4d0' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='472' scopes_pcs_offset='512' dependencies_offset='608' oops_offset='456' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='32857' iicount='32857' stamp='0.781'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dcf090:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x0000000002dcf1c0: sub    $0x18,%rsp
  0x0000000002dcf1c7: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x0000000002dcf1cc: cmp    %r8d,%edx
  0x0000000002dcf1cf: mov    %r8d,%eax
  0x0000000002dcf1d2: cmovle %edx,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x0000000002dcf1d5: add    $0x10,%rsp
  0x0000000002dcf1d9: pop    %rbp
  0x0000000002dcf1da: test   %eax,-0x21cf1e0(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dcf1e0: retq   
  0x0000000002dcf1e1: hlt    
  0x0000000002dcf1e2: hlt    
  0x0000000002dcf1e3: hlt    
  0x0000000002dcf1e4: hlt    
  0x0000000002dcf1e5: hlt    
  0x0000000002dcf1e6: hlt    
  0x0000000002dcf1e7: hlt    
  0x0000000002dcf1e8: hlt    
  0x0000000002dcf1e9: hlt    
  0x0000000002dcf1ea: hlt    
  0x0000000002dcf1eb: hlt    
  0x0000000002dcf1ec: hlt    
  0x0000000002dcf1ed: hlt    
  0x0000000002dcf1ee: hlt    
  0x0000000002dcf1ef: hlt    
  0x0000000002dcf1f0: hlt    
  0x0000000002dcf1f1: hlt    
  0x0000000002dcf1f2: hlt    
  0x0000000002dcf1f3: hlt    
  0x0000000002dcf1f4: hlt    
  0x0000000002dcf1f5: hlt    
  0x0000000002dcf1f6: hlt    
  0x0000000002dcf1f7: hlt    
  0x0000000002dcf1f8: hlt    
  0x0000000002dcf1f9: hlt    
  0x0000000002dcf1fa: hlt    
  0x0000000002dcf1fb: hlt    
  0x0000000002dcf1fc: hlt    
  0x0000000002dcf1fd: hlt    
  0x0000000002dcf1fe: hlt    
  0x0000000002dcf1ff: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dcf200: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dcf205: callq  0x0000000002dcf20a
  0x0000000002dcf20a: subq   $0x5,(%rsp)
  0x0000000002dcf20f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcf214: hlt    
  0x0000000002dcf215: hlt    
  0x0000000002dcf216: hlt    
  0x0000000002dcf217: hlt    
<nmethod compile_id='2' compiler='C2' level='4' entry='0x0000000002dcf1c0' size='488' address='0x0000000002dcf090' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='416' dependencies_offset='480' method='java/lang/Math min (II)I' bytes='11' count='12259' iicount='12259' stamp='0.782'/>
<writer thread='13852'/>
Decoding compiled method 0x0000000002dcecd0:
Code:
[Entry Point]
  # {method} {0x000000001bcef220} &apos;compareAndSwapInt&apos; &apos;(Ljava/lang/Object;JII)Z&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  # parm3:    rsi       = int
  #           [sp+0x80]  (sp of caller)
  0x0000000002dcee40: mov    0x8(%rdx),%r10d
  0x0000000002dcee44: shl    $0x3,%r10
  0x0000000002dcee48: cmp    %r10,%rax
  0x0000000002dcee4b: je     0x0000000002dcee58
  0x0000000002dcee51: jmpq   0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcee56: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002dcee58: mov    %eax,-0x6000(%rsp)
  0x0000000002dcee5f: push   %rbp
  0x0000000002dcee60: mov    %rsp,%rbp
  0x0000000002dcee63: sub    $0x70,%rsp
  0x0000000002dcee67: mov    %rsi,0x28(%rsp)
  0x0000000002dcee6c: mov    %rdi,0x20(%rsp)
  0x0000000002dcee71: mov    %r8,0x38(%rsp)
  0x0000000002dcee76: cmp    $0x0,%r8
  0x0000000002dcee7a: lea    0x38(%rsp),%r8
  0x0000000002dcee7f: cmove  0x38(%rsp),%r8
  0x0000000002dcee85: mov    %rdx,0x30(%rsp)
  0x0000000002dcee8a: cmp    $0x0,%rdx
  0x0000000002dcee8e: lea    0x30(%rsp),%rdx
  0x0000000002dcee93: cmove  0x30(%rsp),%rdx    ; OopMap{[56]=Oop [48]=Oop off=89}
  0x0000000002dcee99: movabs $0x2dcee99,%r10    ;   {section_word}
  0x0000000002dceea3: mov    %r10,0x1e0(%r15)
  0x0000000002dceeaa: mov    %rsp,0x1d8(%r15)
  0x0000000002dceeb1: cmpb   $0x0,0x5311c8c9(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002dceeb8: je     0x0000000002dcef00
  0x0000000002dceebe: push   %rdx
  0x0000000002dceebf: push   %r8
  0x0000000002dceec1: push   %r9
  0x0000000002dceec3: movabs $0x1bcef218,%rdx   ;   {metadata({method} {0x000000001bcef220} &apos;compareAndSwapInt&apos; &apos;(Ljava/lang/Object;JII)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002dceecd: mov    %r15,%rcx
  0x0000000002dceed0: sub    $0x20,%rsp
  0x0000000002dceed4: test   $0xf,%esp
  0x0000000002dceeda: je     0x0000000002dceef2
  0x0000000002dceee0: sub    $0x8,%rsp
  0x0000000002dceee4: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dceee9: add    $0x8,%rsp
  0x0000000002dceeed: jmpq   0x0000000002dceef7
  0x0000000002dceef2: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dceef7: add    $0x20,%rsp
  0x0000000002dceefb: pop    %r9
  0x0000000002dceefd: pop    %r8
  0x0000000002dceeff: pop    %rdx
  0x0000000002dcef00: lea    0x1f8(%r15),%rcx
  0x0000000002dcef07: movl   $0x4,0x270(%r15)
  0x0000000002dcef12: callq  0x00000000558c57e0  ;   {runtime_call}
  0x0000000002dcef17: vzeroupper 
  0x0000000002dcef1a: and    $0xff,%eax
  0x0000000002dcef20: setne  %al
  0x0000000002dcef23: movl   $0x5,0x270(%r15)
  0x0000000002dcef2e: mov    %r15d,%ecx
  0x0000000002dcef31: shr    $0x4,%ecx
  0x0000000002dcef34: and    $0xffc,%ecx
  0x0000000002dcef3a: movabs $0xc10000,%r10     ;   {external_word}
  0x0000000002dcef44: mov    %ecx,(%r10,%rcx,1)
  0x0000000002dcef48: cmpl   $0x0,0x5311d3fe(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x0000000002dcef52: jne    0x0000000002dcef66
  0x0000000002dcef58: cmpl   $0x0,0x30(%r15)
  0x0000000002dcef60: je     0x0000000002dcef87
  0x0000000002dcef66: mov    %rax,-0x8(%rbp)
  0x0000000002dcef6a: mov    %r15,%rcx
  0x0000000002dcef6d: mov    %rsp,%r12
  0x0000000002dcef70: sub    $0x20,%rsp
  0x0000000002dcef74: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcef78: callq  0x00000000559236e0  ;   {runtime_call}
  0x0000000002dcef7d: mov    %r12,%rsp
  0x0000000002dcef80: xor    %r12,%r12
  0x0000000002dcef83: mov    -0x8(%rbp),%rax
  0x0000000002dcef87: movl   $0x8,0x270(%r15)
  0x0000000002dcef92: cmpl   $0x1,0x29c(%r15)
  0x0000000002dcef9d: je     0x0000000002dcf035
  0x0000000002dcefa3: cmpb   $0x0,0x5311c7d7(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002dcefaa: je     0x0000000002dceff0
  0x0000000002dcefb0: mov    %rax,-0x8(%rbp)
  0x0000000002dcefb4: movabs $0x1bcef218,%rdx   ;   {metadata({method} {0x000000001bcef220} &apos;compareAndSwapInt&apos; &apos;(Ljava/lang/Object;JII)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002dcefbe: mov    %r15,%rcx
  0x0000000002dcefc1: sub    $0x20,%rsp
  0x0000000002dcefc5: test   $0xf,%esp
  0x0000000002dcefcb: je     0x0000000002dcefe3
  0x0000000002dcefd1: sub    $0x8,%rsp
  0x0000000002dcefd5: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dcefda: add    $0x8,%rsp
  0x0000000002dcefde: jmpq   0x0000000002dcefe8
  0x0000000002dcefe3: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dcefe8: add    $0x20,%rsp
  0x0000000002dcefec: mov    -0x8(%rbp),%rax
  0x0000000002dceff0: movabs $0x0,%r10
  0x0000000002dceffa: mov    %r10,0x1d8(%r15)
  0x0000000002dcf001: movabs $0x0,%r10
  0x0000000002dcf00b: mov    %r10,0x1e0(%r15)
  0x0000000002dcf012: mov    0x38(%r15),%rcx
  0x0000000002dcf016: movl   $0x0,0x100(%rcx)
  0x0000000002dcf020: leaveq 
  0x0000000002dcf021: cmpq   $0x0,0x8(%r15)
  0x0000000002dcf029: jne    0x0000000002dcf030
  0x0000000002dcf02f: retq   
  0x0000000002dcf030: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002dcf035: mov    %rax,-0x8(%rbp)
  0x0000000002dcf039: mov    %rsp,%r12
  0x0000000002dcf03c: sub    $0x20,%rsp
  0x0000000002dcf040: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcf044: callq  0x000000005590c5a0  ;   {runtime_call}
  0x0000000002dcf049: mov    %r12,%rsp
  0x0000000002dcf04c: xor    %r12,%r12
  0x0000000002dcf04f: mov    -0x8(%rbp),%rax
  0x0000000002dcf053: jmpq   0x0000000002dcefa3
<nmethod compile_id='49' compile_kind='c2n' level='0' entry='0x0000000002dcee40' size='904' address='0x0000000002dcecd0' relocation_offset='288' consts_offset='904' insts_offset='368' method='sun/misc/Unsafe compareAndSwapInt (Ljava/lang/Object;JII)Z' bytes='0' count='791' iicount='791' stamp='0.784'/>
<writer thread='22236'/>
<task_queued compile_id='50' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='2944' iicount='2944' level='3' stamp='0.784' comment='tiered' hot_count='2944'/>
<writer thread='6824'/>
Decoding compiled method 0x0000000002dca4d0:
Code:
[Entry Point]
  # {method} {0x000000001bcef480} &apos;getIntVolatile&apos; &apos;(Ljava/lang/Object;J)I&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = 
<writer thread='22236'/>
<task_queued compile_id='52' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='1152' iicount='1152' level='3' stamp='0.785' comment='tiered' hot_count='1152'/>
<writer thread='6824'/>
long
  #           [sp+0x70]  (sp of caller)
  0x0000000002dca640: mov    0x8(%rdx),%r10d
  0x0000000002dca644: shl    $0x3,%r10
  0x0000000002dca648: cmp    %r10,%rax
  0x0000000002dca64b: je     0x0000000002dca658
  0x0000000002dca651: jmpq   0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dca656: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002dca658: mov    %eax,-0x6000(%rsp)
  0x0000000002dca65f: push   %rbp
  0x0000000002dca660: mov    %rsp,%rbp
  0x0000000002dca663: sub    $0x60,%rsp
  0x0000000002dca667: mov    %r8,0x28(%rsp)
  0x0000000002dca66c: cmp    $0x0,%r8
  0x0000000002dca670: lea    0x28(%rsp),%r8
  0x0000000002dca675: cmove  0x28(%rsp),%r8
  0x0000000002dca67b: mov    %rdx,0x20(%rsp)
  0x0000000002dca680: cmp    $0x0,%rdx
  0x0000000002dca684: lea    0x20(%rsp),%rdx
  0x0000000002dca689: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x0000000002dca68f: movabs $0x2dca68f,%r10    ;   {section_word}
  0x0000000002dca699: mov    %r10,0x1e0(%r15)
  0x0000000002dca6a0: mov    %rsp,0x1d8(%r15)
  0x0000000002dca6a7: cmpb   $0x0,0x531210d3(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002dca6ae: je     0x0000000002dca6f6
  0x0000000002dca6b4: push   %rdx
  0x0000000002dca6b5: push   %r8
  0x0000000002dca6b7: push   %r9
  0x0000000002dca6b9: movabs $0x1bcef478,%rdx   ;   {metadata({method} {0x000000001bcef480} &apos;getIntVolatile&apos; &apos;(Ljava/lang/Object;J)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002dca6c3: mov    %r15,%rcx
  0x0000000002dca6c6: sub    $0x20,%rsp
  0x0000000002dca6ca: test   $0xf,%esp
  0x0000000002dca6d0: je     0x0000000002dca6e8
  0x0000000002dca6d6: sub    $0x8,%rsp
  0x0000000002dca6da: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dca6df: add    $0x8,%rsp
  0x0000000002dca6e3: jmpq   0x0000000002dca6ed
  0x0000000002dca6e8: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dca6ed: add    $0x20,%rsp
  0x0000000002dca6f1: pop    %r9
  0x0000000002dca6f3: pop    %r8
  0x0000000002dca6f5: pop    %rdx
  0x0000000002dca6f6: lea    0x1f8(%r15),%rcx
  0x0000000002dca6fd: movl   $0x4,0x270(%r15)
  0x0000000002dca708: callq  0x00000000558c1570  ;   {runtime_call}
  0x0000000002dca70d: vzeroupper 
  0x0000000002dca710: movl   $0x5,0x270(%r15)
  0x0000000002dca71b: mov    %r15d,%ecx
  0x0000000002dca71e: shr    $0x4,%ecx
  0x0000000002dca721: and    $0xffc,%ecx
  0x0000000002dca727: movabs $0xc10000,%r10     ;   {external_word}
  0x0000000002dca731: mov    %ecx,(%r10,%rcx,1)
  0x0000000002dca735: cmpl   $0x0,0x53121c11(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x0000000002dca73f: jne    0x0000000002dca753
  0x0000000002dca745: cmpl   $0x0,0x30(%r15)
  0x0000000002dca74d: je     0x0000000002dca774
  0x0000000002dca753: mov    %rax,-0x8(%rbp)
  0x0000000002dca757: mov    %r15,%rcx
  0x0000000002dca75a: mov    %rsp,%r12
  0x0000000002dca75d: sub    $0x20,%rsp
  0x0000000002dca761: and    $0xfffffffffffffff0,%rsp
  0x0000000002dca765: callq  0x00000000559236e0  ;   {runtime_call}
  0x0000000002dca76a: mov    %r12,%rsp
  0x0000000002dca76d: xor    %r12,%r12
  0x0000000002dca770: mov    -0x8(%rbp),%rax
  0x0000000002dca774: movl   $0x8,0x270(%r15)
  0x0000000002dca77f: cmpl   $0x1,0x29c(%r15)
  0x0000000002dca78a: je     0x0000000002dca822
  0x0000000002dca790: cmpb   $0x0,0x53120fea(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002dca797: je     0x0000000002dca7dd
  0x0000000002dca79d: mov    %rax,-0x8(%rbp)
  0x0000000002dca7a1: movabs $0x1bcef478,%rdx   ;   {metadata({method} {0x000000001bcef480} &apos;getIntVolatile&apos; &apos;(Ljava/lang/Object;J)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002dca7ab: mov    %r15,%rcx
  0x0000000002dca7ae: sub    $0x20,%rsp
  0x0000000002dca7b2: test   $0xf,%esp
  0x0000000002dca7b8: je     0x0000000002dca7d0
  0x0000000002dca7be: sub    $0x8,%rsp
  0x0000000002dca7c2: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dca7c7: add    $0x8,%rsp
  0x0000000002dca7cb: jmpq   0x0000000002dca7d5
  0x0000000002dca7d0: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dca7d5: add    $0x20,%rsp
  0x0000000002dca7d9: mov    -0x8(%rbp),%rax
  0x0000000002dca7dd: movabs $0x0,%r10
  0x0000000002dca7e7: mov    %r10,0x1d8(%r15)
  0x0000000002dca7ee: movabs $0x0,%r10
  0x0000000002dca7f8: mov    %r10,0x1e0(%r15)
  0x0000000002dca7ff: mov    0x38(%r15),%rcx
  0x0000000002dca803: movl   $0x0,0x100(%rcx)
  0x0000000002dca80d: leaveq 
  0x0000000002dca80e: cmpq   $0x0,0x8(%r15)
  0x0000000002dca816: jne    0x0000000002dca81d
  0x0000000002dca81c: retq   
  0x0000000002dca81d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002dca822: mov    %rax,-0x8(%rbp)
  0x0000000002dca826: mov    %rsp,%r12
  0x0000000002dca829: sub    $0x20,%rsp
  0x0000000002dca82d: and    $0xfffffffffffffff0,%rsp
  0x0000000002dca831: callq  0x000000005590c5a0  ;   {runtime_call}
  0x0000000002dca836: mov    %r12,%rsp
  0x0000000002dca839: xor    %r12,%r12
  0x0000000002dca83c: mov    -0x8(%rbp),%rax
  0x0000000002dca840: jmpq   0x0000000002dca790
  0x0000000002dca845: hlt    
  0x0000000002dca846: hlt    
  0x0000000002dca847: hlt    
<nmethod compile_id='51' compile_kind='c2n' level='0' entry='0x0000000002dca640' size='888' address='0x0000000002dca4d0' relocation_offset='288' consts_offset='888' insts_offset='368' method='sun/misc/Unsafe getIntVolatile (Ljava/lang/Object;J)I' bytes='0' count='1225' iicount='1225' stamp='0.787'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dc9d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002dc9ea0: mov    0x8(%rdx),%r10d
  0x0000000002dc9ea4: shl    $0x3,%r10
  0x0000000002dc9ea8: cmp    %rax,%r10
  0x0000000002dc9eab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc9eb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dc9ebc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc9ec0: mov    %eax,-0x6000(%rsp)
  0x0000000002dc9ec7: push   %rbp
  0x0000000002dc9ec8: sub    $0x40,%rsp
  0x0000000002dc9ecc: movabs $0x1be614f8,%rax   ;   {metadata(method data for {method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc9ed6: mov    0xdc(%rax),%esi
  0x0000000002dc9edc: add    $0x8,%esi
  0x0000000002dc9edf: mov    %esi,0xdc(%rax)
  0x0000000002dc9ee5: movabs $0x1bc75388,%rax   ;   {metadata({method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc9eef: and    $0x1ff8,%esi
  0x0000000002dc9ef5: cmp    $0x0,%esi
  0x0000000002dc9ef8: je     0x0000000002dca108  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x0000000002dc9efe: cmp    $0x10000,%r8d
  0x0000000002dc9f05: movabs $0x1be614f8,%rax   ;   {metadata(method data for {method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc9f0f: movabs $0x108,%rsi
  0x0000000002dc9f19: jge    0x0000000002dc9f29
  0x0000000002dc9f1f: movabs $0x118,%rsi
  0x0000000002dc9f29: mov    (%rax,%rsi,1),%rdi
  0x0000000002dc9f2d: lea    0x1(%rdi),%rdi
  0x0000000002dc9f31: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dc9f35: jge    0x0000000002dca0dd  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x0000000002dc9f3b: mov    0xc(%rdx),%eax
  0x0000000002dc9f3e: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x0000000002dc9f42: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x0000000002dca11f
  0x0000000002dc9f45: dec    %edx
  0x0000000002dc9f47: movabs $0x1be614f8,%rsi   ;   {metadata(method data for {method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dc9f51: addq   $0x1,0x128(%rsi)
  0x0000000002dc9f59: movabs $0x1be5bf60,%rsi   ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dc9f63: mov    0xdc(%rsi),%edi
  0x0000000002dc9f69: add    $0x8,%edi
  0x0000000002dc9f6c: mov    %edi,0xdc(%rsi)
  0x0000000002dc9f72: movabs $0x1bd62b00,%rsi   ;   {metadata({method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dc9f7c: and    $0x7ffff8,%edi
  0x0000000002dc9f82: cmp    $0x0,%edi
  0x0000000002dc9f85: je     0x0000000002dca124
  0x0000000002dc9f8b: cmp    %edx,%r9d
  0x0000000002dc9f8e: movabs $0x1be5bf60,%rsi   ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dc9f98: movabs $0x108,%rdi
  0x0000000002dc9fa2: jg     0x0000000002dc9fb2
  0x0000000002dc9fa8: movabs $0x118,%rdi
  0x0000000002dc9fb2: mov    (%rsi,%rdi,1),%rbx
  0x0000000002dc9fb6: lea    0x1(%rbx),%rbx
  0x0000000002dc9fba: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002dc9fbe: jg     0x0000000002dc9fd9  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000002dc9fc4: movabs $0x1be5bf60,%rdx   ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dc9fce: incl   0x128(%rdx)
  0x0000000002dc9fd4: jmpq   0x0000000002dca07e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000002dc9fd9: mov    %rdx,%r9
  0x0000000002dc9fdc: jmpq   0x0000000002dca07e  ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000002dc9fe1: nopl   0x0(%rax)
  0x0000000002dc9fe8: movslq %r9d,%rdx
  0x0000000002dc9feb: cmp    0xc(%rax),%r9d
  0x0000000002dc9fef: jae    0x0000000002dca13b
  0x0000000002dc9ff5: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000002dc9ffa: cmp    %r8d,%edx
  0x0000000002dc9ffd: movabs $0x1be614f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dca007: movabs $0x158,%rsi
  0x0000000002dca011: jne    0x0000000002dca021
  0x0000000002dca017: movabs $0x168,%rsi
  0x0000000002dca021: mov    (%rdx,%rsi,1),%rdi
  0x0000000002dca025: lea    0x1(%rdi),%rdi
  0x0000000002dca029: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002dca02d: je     0x0000000002dca0bd  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000002dca033: dec    %r9d
  0x0000000002dca036: movabs $0x1be614f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dca040: mov    0xe0(%rdx),%esi
  0x0000000002dca046: add    $0x8,%esi
  0x0000000002dca049: mov    %esi,0xe0(%rdx)
  0x0000000002dca04f: movabs $0x1bc75388,%rdx   ;   {metadata({method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dca059: and    $0xfff8,%esi
  0x0000000002dca05f: cmp    $0x0,%esi
  0x0000000002dca062: je     0x0000000002dca144  ; OopMap{rax=Oop off=456}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000002dca068: test   %eax,-0x21c9f6e(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dca06e: movabs $0x1be614f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dca078: incl   0x178(%rdx)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000002dca07e: cmp    $0x0,%r9d
  0x0000000002dca082: movabs $0x1be614f8,%rdx   ;   {metadata(method data for {method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dca08c: movabs $0x138,%rsi
  0x0000000002dca096: jl     0x0000000002dca0a6
  0x0000000002dca09c: movabs $0x148,%rsi
  0x0000000002dca0a6: mov    (%rdx,%rsi,1),%rdi
  0x0000000002dca0aa: lea    0x1(%rdi),%rdi
  0x0000000002dca0ae: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002dca0b2: jl     0x0000000002dca0cc
  0x0000000002dca0b8: jmpq   0x0000000002dc9fe8  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x0000000002dca0bd: mov    %r9,%rax
  0x0000000002dca0c0: add    $0x40,%rsp
  0x0000000002dca0c4: pop    %rbp
  0x0000000002dca0c5: test   %eax,-0x21c9fcb(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dca0cb: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x0000000002dca0cc: mov    $0xffffffff,%eax
  0x0000000002dca0d1: add    $0x40,%rsp
  0x0000000002dca0d5: pop    %rbp
  0x0000000002dca0d6: test   %eax,-0x21c9fdc(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dca0dc: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x0000000002dca0dd: mov    %rdx,%rsi
  0x0000000002dca0e0: movabs $0x1be614f8,%rdi   ;   {metadata(method data for {method} {0x000000001bc75390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dca0ea: addq   $0x1,0x190(%rdi)
  0x0000000002dca0f2: nop
  0x0000000002dca0f3: nop
  0x0000000002dca0f4: nop
  0x0000000002dca0f5: nop
  0x0000000002dca0f6: nop
  0x0000000002dca0f7: callq  0x0000000002cf61a0  ; OopMap{off=604}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x0000000002dca0fc: add    $0x40,%rsp
  0x0000000002dca100: pop    %rbp
  0x0000000002dca101: test   %eax,-0x21ca007(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dca107: retq   
  0x0000000002dca108: mov    %rax,0x8(%rsp)
  0x0000000002dca10d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dca115: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=634}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x0000000002dca11a: jmpq   0x0000000002dc9efe
  0x0000000002dca11f: callq  0x0000000002dad680  ; OopMap{rax=Oop off=644}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x0000000002dca124: mov    %rsi,0x8(%rsp)
  0x0000000002dca129: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dca131: callq  0x0000000002db1d60  ; OopMap{rax=Oop off=662}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x0000000002dca136: jmpq   0x0000000002dc9f8b
  0x0000000002dca13b: mov    %r9,(%rsp)
  0x0000000002dca13f: callq  0x0000000002dac940  ; OopMap{rax=Oop off=676}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x0000000002dca144: mov    %rdx,0x8(%rsp)
  0x0000000002dca149: movq   $0x28,(%rsp)
  0x0000000002dca151: callq  0x0000000002db1d60  ; OopMap{rax=Oop off=694}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x0000000002dca156: jmpq   0x0000000002dca068
  0x0000000002dca15b: nop
  0x0000000002dca15c: nop
  0x0000000002dca15d: mov    0x2a8(%r15),%rax
  0x0000000002dca164: movabs $0x0,%r10
  0x0000000002dca16e: mov    %r10,0x2a8(%r15)
  0x0000000002dca175: movabs $0x0,%r10
  0x0000000002dca17f: mov    %r10,0x2b0(%r15)
  0x0000000002dca186: add    $0x40,%rsp
  0x0000000002dca18a: pop    %rbp
  0x0000000002dca18b: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dca190: hlt    
  0x0000000002dca191: hlt    
  0x0000000002dca192: hlt    
  0x0000000002dca193: hlt    
  0x0000000002dca194: hlt    
  0x0000000002dca195: hlt    
  0x0000000002dca196: hlt    
  0x0000000002dca197: hlt    
  0x0000000002dca198: hlt    
  0x0000000002dca199: hlt    
  0x0000000002dca19a: hlt    
  0x0000000002dca19b: hlt    
  0x0000000002dca19c: hlt    
  0x0000000002dca19d: hlt    
  0x0000000002dca19e: hlt    
  0x0000000002dca19f: hlt    
[Stub Code]
  0x0000000002dca1a0: nop                       ;   {no_reloc}
  0x0000000002dca1a1: nop
  0x0000000002dca1a2: nop
  0x0000000002dca1a3: nop
  0x0000000002dca1a4: nop
  0x0000000002dca1a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dca1af: jmpq   0x0000000002dca1af  ;   {runtime_call}
[Exception Handler]
  0x0000000002dca1b4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dca1b9: mov    %rsp,-0x28(%rsp)
  0x0000000002dca1be: sub    $0x80,%rsp
  0x0000000002dca1c5: mov    %rax,0x78(%rsp)
  0x0000000002dca1ca: mov    %rcx,0x70(%rsp)
  0x0000000002dca1cf: mov    %rdx,0x68(%rsp)
  0x0000000002dca1d4: mov    %rbx,0x60(%rsp)
  0x0000000002dca1d9: mov    %rbp,0x50(%rsp)
  0x0000000002dca1de: mov    %rsi,0x48(%rsp)
  0x0000000002dca1e3: mov    %rdi,0x40(%rsp)
  0x0000000002dca1e8: mov    %r8,0x38(%rsp)
  0x0000000002dca1ed: mov    %r9,0x30(%rsp)
  0x0000000002dca1f2: mov    %r10,0x28(%rsp)
  0x0000000002dca1f7: mov    %r11,0x20(%rsp)
  0x0000000002dca1fc: mov    %r12,0x18(%rsp)
  0x0000000002dca201: mov    %r13,0x10(%rsp)
  0x0000000002dca206: mov    %r14,0x8(%rsp)
  0x0000000002dca20b: mov    %r15,(%rsp)
  0x0000000002dca20f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dca219: movabs $0x2dca1b9,%rdx    ;   {internal_word}
  0x0000000002dca223: mov    %rsp,%r8
  0x0000000002dca226: and    $0xfffffffffffffff0,%rsp
  0x0000000002dca22a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dca22f: hlt    
[Deopt Handler Code]
  0x0000000002dca230: movabs $0x2dca230,%r10    ;   {section_word}
  0x0000000002dca23a: push   %r10
  0x0000000002dca23c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dca241: hlt    
  0x0000000002dca242: hlt    
  0x0000000002dca243: hlt    
  0x0000000002dca244: hlt    
  0x0000000002dca245: hlt    
  0x0000000002dca246: hlt    
  0x0000000002dca247: hlt    
<nmethod compile_id='47' compiler='C1' level='3' entry='0x0000000002dc9ea0' size='1912' address='0x0000000002dc9d10' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1352' scopes_pcs_offset='1536' dependencies_offset='1888' nul_chk_table_offset='1896' method='java/lang/String lastIndexOf (II)I' bytes='52' count='718' backedge_count='53699' iicount='718' stamp='0.792'/>
<writer thread='24756'/>
<task_queued compile_id='53' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='1408' iicount='1408' level='3' stamp='0.792' comment='tiered' hot_count='768'/>
<writer thread='30756'/>
<task_queued compile_id='54' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='1461' backedge_count='259' iicount='1467' level='3' stamp='0.792' comment='tiered' hot_count='775'/>
<writer thread='31108'/>
<task_queued compile_id='55' method='java/util/Vector size ()I' bytes='5' count='1024' iicount='1024' level='1' stamp='0.792' comment='tiered' hot_count='1024'/>
<writer thread='22236'/>
<task_queued compile_id='56' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='0.792' comment='tiered' hot_count='256'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dc9890:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcf01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  #           [sp+0x60]  (sp of caller)
  0x0000000002dc9a00: mov    0x8(%rdx),%r10d
  0x0000000002dc9a04: shl    $0x3,%r10
  0x0000000002dc9a08: cmp    %rax,%r10
  0x0000000002dc9a0b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc9a11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dc9a1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc9a20: mov    %eax,-0x6000(%rsp)
  0x0000000002dc9a27: push   %rbp
  0x0000000002dc9a28: sub    $0x50,%rsp
  0x0000000002dc9a2c: movabs $0x1bf88d38,%rax   ;   {metadata(method data for {method} {0x000000001bcf01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002dc9a36: mov    0xdc(%rax),%esi
  0x0000000002dc9a3c: add    $0x8,%esi
  0x0000000002dc9a3f: mov    %esi,0xdc(%rax)
  0x0000000002dc9a45: movabs $0x1bcf01b0,%rax   ;   {metadata({method} {0x000000001bcf01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002dc9a4f: and    $0x1ff8,%esi
  0x0000000002dc9a55: cmp    $0x0,%esi
  0x0000000002dc9a58: je     0x0000000002dc9b04  ;*aload_0
                                                ; - sun.misc.Unsafe::getAndAddInt@0 (line 1034)

  0x0000000002dc9a5e: xchg   %ax,%ax
  0x0000000002dc9a60: mov    (%r8,%r9,1),%esi
  0x0000000002dc9a64: mov    %rdi,%rbx
  0x0000000002dc9a67: add    %esi,%ebx
  0x0000000002dc9a69: mov    %rsi,%rax
  0x0000000002dc9a6c: lea    (%r8,%r9,1),%rcx
  0x0000000002dc9a70: lock cmpxchg %ebx,(%rcx)
  0x0000000002dc9a74: mov    $0x1,%eax
  0x0000000002dc9a79: je     0x0000000002dc9a84
  0x0000000002dc9a7f: mov    $0x0,%eax          ;*invokevirtual compareAndSwapInt
                                                ; - sun.misc.Unsafe::getAndAddInt@18 (line 1035)

  0x0000000002dc9a84: movabs $0x1bf88d38,%rbx   ;   {metadata(method data for {method} {0x000000001bcf01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002dc9a8e: mov    0xe0(%rbx),%ecx
  0x0000000002dc9a94: add    $0x8,%ecx
  0x0000000002dc9a97: mov    %ecx,0xe0(%rbx)
  0x0000000002dc9a9d: movabs $0x1bcf01b0,%rbx   ;   {metadata({method} {0x000000001bcf01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002dc9aa7: and    $0xfff8,%ecx
  0x0000000002dc9aad: cmp    $0x0,%ecx
  0x0000000002dc9ab0: je     0x0000000002dc9b1b  ; OopMap{rdx=Oop r8=Oop off=182}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x0000000002dc9ab6: test   %eax,-0x21c99bc(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dc9abc: cmp    $0x0,%eax
  0x0000000002dc9abf: movabs $0x1bf88d38,%rax   ;   {metadata(method data for {method} {0x000000001bcf01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x0000000002dc9ac9: movabs $0x168,%rbx
  0x0000000002dc9ad3: je     0x0000000002dc9ae3
  0x0000000002dc9ad9: movabs $0x178,%rbx
  0x0000000002dc9ae3: mov    (%rax,%rbx,1),%rcx
  0x0000000002dc9ae7: lea    0x1(%rcx),%rcx
  0x0000000002dc9aeb: mov    %rcx,(%rax,%rbx,1)
  0x0000000002dc9aef: je     0x0000000002dc9a60  ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x0000000002dc9af5: mov    %rsi,%rax
  0x0000000002dc9af8: add    $0x50,%rsp
  0x0000000002dc9afc: pop    %rbp
  0x0000000002dc9afd: test   %eax,-0x21c9a03(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc9b03: retq   
  0x0000000002dc9b04: mov    %rax,0x8(%rsp)
  0x0000000002dc9b09: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc9b11: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=278}
                                                ;*synchronization entry
                                                ; - sun.misc.Unsafe::getAndAddInt@-1 (line 1034)
                                                ;   {runtime_call}
  0x0000000002dc9b16: jmpq   0x0000000002dc9a5e
  0x0000000002dc9b1b: mov    %rbx,0x8(%rsp)
  0x0000000002dc9b20: movq   $0x15,(%rsp)
  0x0000000002dc9b28: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=301}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)
                                                ;   {runtime_call}
  0x0000000002dc9b2d: jmp    0x0000000002dc9ab6
  0x0000000002dc9b2f: nop
  0x0000000002dc9b30: nop
  0x0000000002dc9b31: mov    0x2a8(%r15),%rax
  0x0000000002dc9b38: movabs $0x0,%r10
  0x0000000002dc9b42: mov    %r10,0x2a8(%r15)
  0x0000000002dc9b49: movabs $0x0,%r10
  0x0000000002dc9b53: mov    %r10,0x2b0(%r15)
  0x0000000002dc9b5a: add    $0x50,%rsp
  0x0000000002dc9b5e: pop    %rbp
  0x0000000002dc9b5f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dc9b64: hlt    
  0x0000000002dc9b65: hlt    
  0x0000000002dc9b66: hlt    
  0x0000000002dc9b67: hlt    
  0x0000000002dc9b68: hlt    
  0x0000000002dc9b69: hlt    
  0x0000000002dc9b6a: hlt    
  0x0000000002dc9b6b: hlt    
  0x0000000002dc9b6c: hlt    
  0x0000000002dc9b6d: hlt    
  0x0000000002dc9b6e: hlt    
  0x0000000002dc9b6f: hlt    
  0x0000000002dc9b70: hlt    
  0x0000000002dc9b71: hlt    
  0x0000000002dc9b72: hlt    
  0x0000000002dc9b73: hlt    
  0x0000000002dc9b74: hlt    
  0x0000000002dc9b75: hlt    
  0x0000000002dc9b76: hlt    
  0x0000000002dc9b77: hlt    
  0x0000000002dc9b78: hlt    
  0x0000000002dc9b79: hlt    
  0x0000000002dc9b7a: hlt    
  0x0000000002dc9b7b: hlt    
  0x0000000002dc9b7c: hlt    
  0x0000000002dc9b7d: hlt    
  0x0000000002dc9b7e: hlt    
  0x0000000002dc9b7f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc9b80: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dc9b85: mov    %rsp,-0x28(%rsp)
  0x0000000002dc9b8a: sub    $0x80,%rsp
  0x0000000002dc9b91: mov    %rax,0x78(%rsp)
  0x0000000002dc9b96: mov    %rcx,0x70(%rsp)
  0x0000000002dc9b9b: mov    %rdx,0x68(%rsp)
  0x0000000002dc9ba0: mov    %rbx,0x60(%rsp)
  0x0000000002dc9ba5: mov    %rbp,0x50(%rsp)
  0x0000000002dc9baa: mov    %rsi,0x48(%rsp)
  0x0000000002dc9baf: mov    %rdi,0x40(%rsp)
  0x0000000002dc9bb4: mov    %r8,0x38(%rsp)
  0x0000000002dc9bb9: mov    %r9,0x30(%rsp)
  0x0000000002dc9bbe: mov    %r10,0x28(%rsp)
  0x0000000002dc9bc3: mov    %r11,0x20(%rsp)
  0x0000000002dc9bc8: mov    %r12,0x18(%rsp)
  0x0000000002dc9bcd: mov    %r13,0x10(%rsp)
  0x0000000002dc9bd2: mov    %r14,0x8(%rsp)
  0x0000000002dc9bd7: mov    %r15,(%rsp)
  0x0000000002dc9bdb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dc9be5: movabs $0x2dc9b85,%rdx    ;   {internal_word}
  0x0000000002dc9bef: mov    %rsp,%r8
  0x0000000002dc9bf2: and    $0xfffffffffffffff0,%rsp
  0x0000000002dc9bf6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dc9bfb: hlt    
[Deopt Handler Code]
  0x0000000002dc9bfc: movabs $0x2dc9bfc,%r10    ;   {section_word}
  0x0000000002dc9c06: push   %r10
  0x0000000002dc9c08: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc9c0d: hlt    
  0x0000000002dc9c0e: hlt    
  0x0000000002dc9c0f: hlt    
<nmethod compile_id='54' compiler='C1' level='3' entry='0x0000000002dc9a00' size='1112' address='0x0000000002dc9890' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='904' scopes_pcs_offset='976' dependencies_offset='1104' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='21262' backedge_count='25214' iicount='21272' stamp='0.796'/>
<writer thread='13852'/>
<task_queued compile_id='57' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='22193' backedge_count='26598' iicount='22207' stamp='0.796' comment='tiered' hot_count='22030'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dc9550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd72890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002dc96a0: mov    0x8(%rdx),%r10d
  0x0000000002dc96a4: shl    $0x3,%r10
  0x0000000002dc96a8: cmp    %rax,%r10
  0x0000000002dc96ab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dc96b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dc96bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dc96c0: mov    %eax,-0x6000(%rsp)
  0x0000000002dc96c7: push   %rbp
  0x0000000002dc96c8: sub    $0x40,%rsp
  0x0000000002dc96cc: movabs $0x1bf88cd8,%rax
  0x0000000002dc96d6: mov    0x8(%rax),%esi
  0x0000000002dc96d9: add    $0x8,%esi
  0x0000000002dc96dc: mov    %esi,0x8(%rax)
  0x0000000002dc96df: movabs $0x1bd72888,%rax   ;   {metadata({method} {0x000000001bd72890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;)}
  0x0000000002dc96e9: and    $0x3ff8,%esi
  0x0000000002dc96ef: cmp    $0x0,%esi
  0x0000000002dc96f2: je     0x0000000002dc970e  ;*getstatic unsafe
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@0 (line 158)

  0x0000000002dc96f8: mov    $0x1,%eax
  0x0000000002dc96fd: lock xadd %eax,0xc(%rdx)
  0x0000000002dc9702: add    $0x40,%rsp
  0x0000000002dc9706: pop    %rbp
  0x0000000002dc9707: test   %eax,-0x21c960d(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dc970d: retq   
  0x0000000002dc970e: mov    %rax,0x8(%rsp)
  0x0000000002dc9713: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dc971b: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=128}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@-1 (line 158)
                                                ;   {runtime_call}
  0x0000000002dc9720: jmp    0x0000000002dc96f8
  0x0000000002dc9722: nop
  0x0000000002dc9723: nop
  0x0000000002dc9724: mov    0x2a8(%r15),%rax
  0x0000000002dc972b: movabs $0x0,%r10
  0x0000000002dc9735: mov    %r10,0x2a8(%r15)
  0x0000000002dc973c: movabs $0x0,%r10
  0x0000000002dc9746: mov    %r10,0x2b0(%r15)
  0x0000000002dc974d: add    $0x40,%rsp
  0x0000000002dc9751: pop    %rbp
  0x0000000002dc9752: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dc9757: hlt    
  0x0000000002dc9758: hlt    
  0x0000000002dc9759: hlt    
  0x0000000002dc975a: hlt    
  0x0000000002dc975b: hlt    
  0x0000000002dc975c: hlt    
  0x0000000002dc975d: hlt    
  0x0000000002dc975e: hlt    
  0x0000000002dc975f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dc9760: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dc9765: mov    %rsp,-0x28(%rsp)
  0x0000000002dc976a: sub    $0x80,%rsp
  0x0000000002dc9771: mov    %rax,0x78(%rsp)
  0x0000000002dc9776: mov    %rcx,0x70(%rsp)
  0x0000000002dc977b: mov    %rdx,0x68(%rsp)
  0x0000000002dc9780: mov    %rbx,0x60(%rsp)
  0x0000000002dc9785: mov    %rbp,0x50(%rsp)
  0x0000000002dc978a: mov    %rsi,0x48(%rsp)
  0x0000000002dc978f: mov    %rdi,0x40(%rsp)
  0x0000000002dc9794: mov    %r8,0x38(%rsp)
  0x0000000002dc9799: mov    %r9,0x30(%rsp)
  0x0000000002dc979e: mov    %r10,0x28(%rsp)
  0x0000000002dc97a3: mov    %r11,0x20(%rsp)
  0x0000000002dc97a8: mov    %r12,0x18(%rsp)
  0x0000000002dc97ad: mov    %r13,0x10(%rsp)
  0x0000000002dc97b2: mov    %r14,0x8(%rsp)
  0x0000000002dc97b7: mov    %r15,(%rsp)
  0x0000000002dc97bb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dc97c5: movabs $0x2dc9765,%rdx    ;   {internal_word}
  0x0000000002dc97cf: mov    %rsp,%r8
  0x0000000002dc97d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002dc97d6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dc97db: hlt    
[Deopt Handler Code]
  0x0000000002dc97dc: movabs $0x2dc97dc,%r10    ;   {section_word}
  0x0000000002dc97e6: push   %r10
  0x0000000002dc97e8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dc97ed: hlt    
  0x0000000002dc97ee: hlt    
  0x0000000002dc97ef: hlt    
<nmethod compile_id='53' compiler='C1' level='2' entry='0x0000000002dc96a0' size='768' address='0x0000000002dc9550' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='42773' iicount='42779' stamp='0.798'/>
<writer thread='13852'/>
<task_queued compile_id='58' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='44502' iicount='44513' level='1' stamp='0.798' comment='tiered' hot_count='44362'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dcda90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dcdc00: mov    0x8(%rdx),%r10d
  0x0000000002dcdc04: shl    $0x3,%r10
  0x0000000002dcdc08: cmp    %rax,%r10
  0x0000000002dcdc0b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcdc11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcdc1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcdc20: mov    %eax,-0x6000(%rsp)
  0x0000000002dcdc27: push   %rbp
  0x0000000002dcdc28: sub    $0x30,%rsp
  0x0000000002dcdc2c: movabs $0x1be611d0,%rsi   ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcdc36: mov    0xdc(%rsi),%edi
  0x0000000002dcdc3c: add    $0x8,%edi
  0x0000000002dcdc3f: mov    %edi,0xdc(%rsi)
  0x0000000002dcdc45: movabs $0x1bce7958,%rsi   ;   {metadata({method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcdc4f: and    $0x1ff8,%edi
  0x0000000002dcdc55: cmp    $0x0,%edi
  0x0000000002dcdc58: je     0x0000000002dcdc95  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x0000000002dcdc5e: mov    %rdx,%rsi
  0x0000000002dcdc61: movabs $0x1be611d0,%rdi   ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dcdc6b: addq   $0x1,0x108(%rdi)
  0x0000000002dcdc73: mov    %rdx,%rsi
  0x0000000002dcdc76: mov    %rsi,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x0000000002dcdc79: mov    %rsi,0x20(%rsp)
  0x0000000002dcdc7e: nop
  0x0000000002dcdc7f: callq  0x0000000002cf61a0  ; OopMap{[32]=Oop off=132}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x0000000002dcdc84: mov    0x20(%rsp),%rax
  0x0000000002dcdc89: add    $0x30,%rsp
  0x0000000002dcdc8d: pop    %rbp
  0x0000000002dcdc8e: test   %eax,-0x21cdb94(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dcdc94: retq   
  0x0000000002dcdc95: mov    %rsi,0x8(%rsp)
  0x0000000002dcdc9a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcdca2: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=167}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x0000000002dcdca7: jmp    0x0000000002dcdc5e
  0x0000000002dcdca9: nop
  0x0000000002dcdcaa: nop
  0x0000000002dcdcab: mov    0x2a8(%r15),%rax
  0x0000000002dcdcb2: movabs $0x0,%r10
  0x0000000002dcdcbc: mov    %r10,0x2a8(%r15)
  0x0000000002dcdcc3: movabs $0x0,%r10
  0x0000000002dcdccd: mov    %r10,0x2b0(%r15)
  0x0000000002dcdcd4: add    $0x30,%rsp
  0x0000000002dcdcd8: pop    %rbp
  0x0000000002dcdcd9: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dcdcde: hlt    
  0x0000000002dcdcdf: hlt    
[Stub Code]
  0x0000000002dcdce0: nop                       ;   {no_reloc}
  0x0000000002dcdce1: nop
  0x0000000002dcdce2: nop
  0x0000000002dcdce3: nop
  0x0000000002dcdce4: nop
  0x0000000002dcdce5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcdcef: jmpq   0x0000000002dcdcef  ;   {runtime_call}
[Exception Handler]
  0x0000000002dcdcf4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dcdcf9: mov    %rsp,-0x28(%rsp)
  0x0000000002dcdcfe: sub    $0x80,%rsp
  0x0000000002dcdd05: mov    %rax,0x78(%rsp)
  0x0000000002dcdd0a: mov    %rcx,0x70(%rsp)
  0x0000000002dcdd0f: mov    %rdx,0x68(%rsp)
  0x0000000002dcdd14: mov    %rbx,0x60(%rsp)
  0x0000000002dcdd19: mov    %rbp,0x50(%rsp)
  0x0000000002dcdd1e: mov    %rsi,0x48(%rsp)
  0x0000000002dcdd23: mov    %rdi,0x40(%rsp)
  0x0000000002dcdd28: mov    %r8,0x38(%rsp)
  0x0000000002dcdd2d: mov    %r9,0x30(%rsp)
  0x0000000002dcdd32: mov    %r10,0x28(%rsp)
  0x0000000002dcdd37: mov    %r11,0x20(%rsp)
  0x0000000002dcdd3c: mov    %r12,0x18(%rsp)
  0x0000000002dcdd41: mov    %r13,0x10(%rsp)
  0x0000000002dcdd46: mov    %r14,0x8(%rsp)
  0x0000000002dcdd4b: mov    %r15,(%rsp)
  0x0000000002dcdd4f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dcdd59: movabs $0x2dcdcf9,%rdx    ;   {internal_word}
  0x0000000002dcdd63: mov    %rsp,%r8
  0x0000000002dcdd66: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcdd6a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dcdd6f: hlt    
[Deopt Handler Code]
  0x0000000002dcdd70: movabs $0x2dcdd70,%r10    ;   {section_word}
  0x0000000002dcdd7a: push   %r10
  0x0000000002dcdd7c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcdd81: hlt    
  0x0000000002dcdd82: hlt    
  0x0000000002dcdd83: hlt    
  0x0000000002dcdd84: hlt    
  0x0000000002dcdd85: hlt    
  0x0000000002dcdd86: hlt    
  0x0000000002dcdd87: hlt    
<nmethod compile_id='50' compiler='C1' level='3' entry='0x0000000002dcdc00' size='912' address='0x0000000002dcda90' relocation_offset='288' insts_offset='368' stub_offset='592' scopes_data_offset='768' scopes_pcs_offset='808' dependencies_offset='904' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='2951' iicount='2951' stamp='0.801'/>
Decoding compiled method 0x0000000002dcd7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd72890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002dcd920: mov    0x8(%rdx),%r10d
  0x0000000002dcd924: shl    $0x3,%r10
  0x0000000002dcd928: cmp    %rax,%r10
  0x0000000002dcd92b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcd931: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcd93c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcd940: mov    %eax,-0x6000(%rsp)
  0x0000000002dcd947: push   %rbp
  0x0000000002dcd948: sub    $0x40,%rsp         ;*getstatic unsafe
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@0 (line 158)

  0x0000000002dcd94c: mov    $0x1,%eax
  0x0000000002dcd951: lock xadd %eax,0xc(%rdx)
  0x0000000002dcd956: add    $0x40,%rsp
  0x0000000002dcd95a: pop    %rbp
  0x0000000002dcd95b: test   %eax,-0x21cd861(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dcd961: retq   
  0x0000000002dcd962: nop
  0x0000000002dcd963: nop
  0x0000000002dcd964: mov    0x2a8(%r15),%rax
  0x0000000002dcd96b: movabs $0x0,%r10
  0x0000000002dcd975: mov    %r10,0x2a8(%r15)
  0x0000000002dcd97c: movabs $0x0,%r10
  0x0000000002dcd986: mov    %r10,0x2b0(%r15)
  0x0000000002dcd98d: add    $0x40,%rsp
  0x0000000002dcd991: pop    %rbp
  0x0000000002dcd992: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dcd997: hlt    
  0x0000000002dcd998: hlt    
  0x0000000002dcd999: hlt    
  0x0000000002dcd99a: hlt    
  0x0000000002dcd99b: hlt    
  0x0000000002dcd99c: hlt    
  0x0000000002dcd99d: hlt    
  0x0000000002dcd99e: hlt    
  0x0000000002dcd99f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dcd9a0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dcd9a5: mov    %rsp,-0x28(%rsp)
  0x0000000002dcd9aa: sub    $0x80,%rsp
  0x0000000002dcd9b1: mov    %rax,0x78(%rsp)
  0x0000000002dcd9b6: mov    %rcx,0x70(%rsp)
  0x0000000002dcd9bb: mov    %rdx,0x68(%rsp)
  0x0000000002dcd9c0: mov    %rbx,0x60(%rsp)
  0x0000000002dcd9c5: mov    %rbp,0x50(%rsp)
  0x0000000002dcd9ca: mov    %rsi,0x48(%rsp)
  0x0000000002dcd9cf: mov    %rdi,0x40(%rsp)
  0x0000000002dcd9d4: mov    %r8,0x38(%rsp)
  0x0000000002dcd9d9: mov    %r9,0x30(%rsp)
  0x0000000002dcd9de: mov    %r10,0x28(%rsp)
  0x0000000002dcd9e3: mov    %r11,0x20(%rsp)
  0x0000000002dcd9e8: mov    %r12,0x18(%rsp)
  0x0000000002dcd9ed: mov    %r13,0x10(%rsp)
  0x0000000002dcd9f2: mov    %r14,0x8(%rsp)
  0x0000000002dcd9f7: mov    %r15,(%rsp)
  0x0000000002dcd9fb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dcda05: movabs $0x2dcd9a5,%rdx    ;   {internal_word}
  0x0000000002dcda0f: mov    %rsp,%r8
  0x0000000002dcda12: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcda16: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dcda1b: hlt    
[Deopt Handler Code]
  0x0000000002dcda1c: movabs $0x2dcda1c,%r10    ;   {section_word}
  0x0000000002dcda26: push   %r10
  0x0000000002dcda28: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcda2d: hlt    
  0x0000000002dcda2e: hlt    
  0x0000000002dcda2f: hlt    
<nmethod compile_id='58' compiler='C1' level='1' entry='0x0000000002dcd920' size='680' address='0x0000000002dcd7d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='111916' iicount='111922' stamp='0.803'/>
<make_not_entrant thread='17312' compile_id='53' compiler='C1' level='2' stamp='0.803'/>
Decoding compiled method 0x0000000002dcd4d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcacc70} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/reflect/Field&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dcd620: mov    0x8(%rdx),%r10d
  0x0000000002dcd624: shl    $0x3,%r10
  0x0000000002dcd628: cmp    %rax,%r10
  0x0000000002dcd62b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcd631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcd63c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcd640: mov    %eax,-0x6000(%rsp)
  0x0000000002dcd647: push   %rbp
  0x0000000002dcd648: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.reflect.Field::getName@0 (line 171)

  0x0000000002dcd64c: mov    0x20(%rdx),%eax
  0x0000000002dcd64f: shl    $0x3,%rax          ;*getfield name
                                                ; - java.lang.reflect.Field::getName@1 (line 171)

  0x0000000002dcd653: add    $0x30,%rsp
  0x0000000002dcd657: pop    %rbp
  0x0000000002dcd658: test   %eax,-0x21cd55e(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dcd65e: retq   
  0x0000000002dcd65f: nop
  0x0000000002dcd660: nop
  0x0000000002dcd661: mov    0x2a8(%r15),%rax
  0x0000000002dcd668: movabs $0x0,%r10
  0x0000000002dcd672: mov    %r10,0x2a8(%r15)
  0x0000000002dcd679: movabs $0x0,%r10
  0x0000000002dcd683: mov    %r10,0x2b0(%r15)
  0x0000000002dcd68a: add    $0x30,%rsp
  0x0000000002dcd68e: pop    %rbp
  0x0000000002dcd68f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dcd694: hlt    
  0x0000000002dcd695: hlt    
  0x0000000002dcd696: hlt    
  0x0000000002dcd697: hlt    
  0x0000000002dcd698: hlt    
  0x0000000002dcd699: hlt    
  0x0000000002dcd69a: hlt    
  0x0000000002dcd69b: hlt    
  0x0000000002dcd69c: hlt    
  0x0000000002dcd69d: hlt    
  0x0000000002dcd69e: hlt    
  0x0000000002dcd69f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dcd6a0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dcd6a5: mov    %rsp,-0x28(%rsp)
  0x0000000002dcd6aa: sub    $0x80,%rsp
  0x0000000002dcd6b1: mov    %rax,0x78(%rsp)
  0x0000000002dcd6b6: mov    %rcx,0x70(%rsp)
  0x0000000002dcd6bb: mov    %rdx,0x68(%rsp)
  0x0000000002dcd6c0: mov    %rbx,0x60(%rsp)
  0x0000000002dcd6c5: mov    %rbp,0x50(%rsp)
  0x0000000002dcd6ca: mov    %rsi,0x48(%rsp)
  0x0000000002dcd6cf: mov    %rdi,0x40(%rsp)
  0x0000000002dcd6d4: mov    %r8,0x38(%rsp)
  0x0000000002dcd6d9: mov    %r9,0x30(%rsp)
  0x0000000002dcd6de: mov    %r10,0x28(%rsp)
  0x0000000002dcd6e3: mov    %r11,0x20(%rsp)
  0x0000000002dcd6e8: mov    %r12,0x18(%rsp)
  0x0000000002dcd6ed: mov    %r13,0x10(%rsp)
  0x0000000002dcd6f2: mov    %r14,0x8(%rsp)
  0x0000000002dcd6f7: mov    %r15,(%rsp)
  0x0000000002dcd6fb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dcd705: movabs $0x2dcd6a5,%rdx    ;   {internal_word}
  0x0000000002dcd70f: mov    %rsp,%r8
  0x0000000002dcd712: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcd716: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dcd71b: hlt    
[Deopt Handler Code]
  0x0000000002dcd71c: movabs $0x2dcd71c,%r10    ;   {section_word}
  0x0000000002dcd726: push   %r10
  0x0000000002dcd728: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcd72d: hlt    
  0x0000000002dcd72e: hlt    
  0x0000000002dcd72f: hlt    
<nmethod compile_id='56' compiler='C1' level='1' entry='0x0000000002dcd620' size='704' address='0x0000000002dcd4d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='314' iicount='314' stamp='0.805'/>
Decoding compiled method 0x0000000002dcd1d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcfb758} &apos;getProtocol&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dcd320: mov    0x8(%rdx),%r10d
  0x0000000002dcd324: shl    $0x3,%r10
  0x0000000002dcd328: cmp    %rax,%r10
  0x0000000002dcd32b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcd331: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcd33c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcd340: mov    %eax,-0x6000(%rsp)
  0x0000000002dcd347: push   %rbp
  0x0000000002dcd348: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getProtocol@0 (line 799)

  0x0000000002dcd34c: mov    0x14(%rdx),%eax
  0x0000000002dcd34f: shl    $0x3,%rax          ;*getfield protocol
                                                ; - java.net.URL::getProtocol@1 (line 799)

  0x0000000002dcd353: add    $0x30,%rsp
  0x0000000002dcd357: pop    %rbp
  0x0000000002dcd358: test   %eax,-0x21cd25e(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dcd35e: retq   
  0x0000000002dcd35f: nop
  0x0000000002dcd360: nop
  0x0000000002dcd361: mov    0x2a8(%r15),%rax
  0x0000000002dcd368: movabs $0x0,%r10
  0x0000000002dcd372: mov    %r10,0x2a8(%r15)
  0x0000000002dcd379: movabs $0x0,%r10
  0x0000000002dcd383: mov    %r10,0x2b0(%r15)
  0x0000000002dcd38a: add    $0x30,%rsp
  0x0000000002dcd38e: pop    %rbp
  0x0000000002dcd38f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dcd394: hlt    
  0x0000000002dcd395: hlt    
  0x0000000002dcd396: hlt    
  0x0000000002dcd397: hlt    
  0x0000000002dcd398: hlt    
  0x0000000002dcd399: hlt    
  0x0000000002dcd39a: hlt    
  0x0000000002dcd39b: hlt    
  0x0000000002dcd39c: hlt    
  0x0000000002dcd39d: hlt    
  0x0000000002dcd39e: hlt    
  0x0000000002dcd39f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dcd3a0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dcd3a5: mov    %rsp,-0x28(%rsp)
  0x0000000002dcd3aa: sub    $0x80,%rsp
  0x0000000002dcd3b1: mov    %rax,0x78(%rsp)
  0x0000000002dcd3b6: mov    %rcx,0x70(%rsp)
  0x0000000002dcd3bb: mov    %rdx,0x68(%rsp)
  0x0000000002dcd3c0: mov    %rbx,0x60(%rsp)
  0x0000000002dcd3c5: mov    %rbp,0x50(%rsp)
  0x0000000002dcd3ca: mov    %rsi,0x48(%rsp)
  0x0000000002dcd3cf: mov    %rdi,0x40(%rsp)
  0x0000000002dcd3d4: mov    %r8,0x38(%rsp)
  0x0000000002dcd3d9: mov    %r9,0x30(%rsp)
  0x0000000002dcd3de: mov    %r10,0x28(%rsp)
  0x0000000002dcd3e3: mov    %r11,0x20(%rsp)
  0x0000000002dcd3e8: mov    %r12,0x18(%rsp)
  0x0000000002dcd3ed: mov    %r13,0x10(%rsp)
  0x0000000002dcd3f2: mov    %r14,0x8(%rsp)
  0x0000000002dcd3f7: mov    %r15,(%rsp)
  0x0000000002dcd3fb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dcd405: movabs $0x2dcd3a5,%rdx    ;   {internal_word}
  0x0000000002dcd40f: mov    %rsp,%r8
  0x0000000002dcd412: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcd416: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dcd41b: hlt    
[Deopt Handler Code]
  0x0000000002dcd41c: movabs $0x2dcd41c,%r10    ;   {section_word}
  0x0000000002dcd426: push   %r10
  0x0000000002dcd428: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcd42d: hlt    
  0x0000000002dcd42e: hlt    
  0x0000000002dcd42f: hlt    
<nmethod compile_id='31' compiler='C1' level='1' entry='0x0000000002dcd320' size='704' address='0x0000000002dcd1d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='1678' iicount='1678' stamp='0.807'/>
<writer thread='5740'/>
<task_queued compile_id='59' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='112037' iicount='112037' level='3' stamp='0.807' comment='tiered' hot_count='1153'/>
<task_queued compile_id='60' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='170093' iicount='12' osr_bci='2' stamp='0.807' comment='tiered' hot_count='170093'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dcce90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd72890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002dccfe0: mov    0x8(%rdx),%r10d
  0x0000000002dccfe4: shl    $0x3,%r10
  0x0000000002dccfe8: cmp    %rax,%r10
  0x0000000002dccfeb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dccff1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dccffc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcd000: mov    %eax,-0x6000(%rsp)
  0x0000000002dcd007: push   %rbp
  0x0000000002dcd008: sub    $0x40,%rsp
  0x0000000002dcd00c: movabs $0x1bf88cd8,%rax
  0x0000000002dcd016: mov    0x8(%rax),%esi
  0x0000000002dcd019: add    $0x8,%esi
  0x0000000002dcd01c: mov    %esi,0x8(%rax)
  0x0000000002dcd01f: movabs $0x1bd72888,%rax   ;   {metadata({method} {0x000000001bd72890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;)}
  0x0000000002dcd029: and    $0x3ff8,%esi
  0x0000000002dcd02f: cmp    $0x0,%esi
  0x0000000002dcd032: je     0x0000000002dcd04e  ;*getstatic unsafe
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@0 (line 158)

  0x0000000002dcd038: mov    $0x1,%eax
  0x0000000002dcd03d: lock xadd %eax,0xc(%rdx)
  0x0000000002dcd042: add    $0x40,%rsp
  0x0000000002dcd046: pop    %rbp
  0x0000000002dcd047: test   %eax,-0x21ccf4d(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dcd04d: retq   
  0x0000000002dcd04e: mov    %rax,0x8(%rsp)
  0x0000000002dcd053: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcd05b: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=128}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@-1 (line 158)
                                                ;   {runtime_call}
  0x0000000002dcd060: jmp    0x0000000002dcd038
  0x0000000002dcd062: nop
  0x0000000002dcd063: nop
  0x0000000002dcd064: mov    0x2a8(%r15),%rax
  0x0000000002dcd06b: movabs $0x0,%r10
  0x0000000002dcd075: mov    %r10,0x2a8(%r15)
  0x0000000002dcd07c: movabs $0x0,%r10
  0x0000000002dcd086: mov    %r10,0x2b0(%r15)
  0x0000000002dcd08d: add    $0x40,%rsp
  0x0000000002dcd091: pop    %rbp
  0x0000000002dcd092: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dcd097: hlt    
  0x0000000002dcd098: hlt    
  0x0000000002dcd099: hlt    
  0x0000000002dcd09a: hlt    
  0x0000000002dcd09b: hlt    
  0x0000000002dcd09c: hlt    
  0x0000000002dcd09d: hlt    
  0x0000000002dcd09e: hlt    
  0x0000000002dcd09f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dcd0a0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dcd0a5: mov    %rsp,-0x28(%rsp)
  0x0000000002dcd0aa: sub    $0x80,%rsp
  0x0000000002dcd0b1: mov    %rax,0x78(%rsp)
  0x0000000002dcd0b6: mov    %rcx,0x70(%rsp)
  0x0000000002dcd0bb: mov    %rdx,0x68(%rsp)
  0x0000000002dcd0c0: mov    %rbx,0x60(%rsp)
  0x0000000002dcd0c5: mov    %rbp,0x50(%rsp)
  0x0000000002dcd0ca: mov    %rsi,0x48(%rsp)
  0x0000000002dcd0cf: mov    %rdi,0x40(%rsp)
  0x0000000002dcd0d4: mov    %r8,0x38(%rsp)
  0x0000000002dcd0d9: mov    %r9,0x30(%rsp)
  0x0000000002dcd0de: mov    %r10,0x28(%rsp)
  0x0000000002dcd0e3: mov    %r11,0x20(%rsp)
  0x0000000002dcd0e8: mov    %r12,0x18(%rsp)
  0x0000000002dcd0ed: mov    %r13,0x10(%rsp)
  0x0000000002dcd0f2: mov    %r14,0x8(%rsp)
  0x0000000002dcd0f7: mov    %r15,(%rsp)
  0x0000000002dcd0fb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dcd105: movabs $0x2dcd0a5,%rdx    ;   {internal_word}
  0x0000000002dcd10f: mov    %rsp,%r8
  0x0000000002dcd112: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcd116: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dcd11b: hlt    
[Deopt Handler Code]
  0x0000000002dcd11c: movabs $0x2dcd11c,%r10    ;   {section_word}
  0x0000000002dcd126: push   %r10
  0x0000000002dcd128: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcd12d: hlt    
  0x0000000002dcd12e: hlt    
  0x0000000002dcd12f: hlt    
<nmethod compile_id='59' compiler='C1' level='2' entry='0x0000000002dccfe0' size='768' address='0x0000000002dcce90' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='112037' iicount='112037' stamp='0.809'/>
<make_not_entrant thread='17312' compile_id='58' compiler='C1' level='1' stamp='0.809'/>
<writer thread='29788'/>
<task_queued compile_id='61' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='113729' iicount='113739' level='3' stamp='0.809' comment='tiered' hot_count='896'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dd2290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000000002dd2480: mov    0x8(%rdx),%r10d
  0x0000000002dd2484: shl    $0x3,%r10
  0x0000000002dd2488: cmp    %rax,%r10
  0x0000000002dd248b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd2491: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd249c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd24a0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd24a7: push   %rbp
  0x0000000002dd24a8: sub    $0x80,%rsp
  0x0000000002dd24af: mov    %rdx,0x58(%rsp)
  0x0000000002dd24b4: mov    %r8,0x50(%rsp)
  0x0000000002dd24b9: movabs $0x1be5dc08,%rax   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd24c3: mov    0xdc(%rax),%esi
  0x0000000002dd24c9: add    $0x8,%esi
  0x0000000002dd24cc: mov    %esi,0xdc(%rax)
  0x0000000002dd24d2: movabs $0x1bdea100,%rax   ;   {metadata({method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd24dc: and    $0x1ff8,%esi
  0x0000000002dd24e2: cmp    $0x0,%esi
  0x0000000002dd24e5: je     0x0000000002dd2dbe  ;*aload_0
                                                ; - java.io.WinNTFileSystem::prefixLength@0 (line 208)

  0x0000000002dd24eb: movzwl 0xc(%rdx),%esi     ;*getfield slash
                                                ; - java.io.WinNTFileSystem::prefixLength@1 (line 208)

  0x0000000002dd24ef: mov    %esi,0x40(%rsp)
  0x0000000002dd24f3: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::prefixLength@6 (line 209)
                                                ; implicit exception: dispatches to 0x0000000002dd2dd5
  0x0000000002dd24f6: mov    %r8,%rax
  0x0000000002dd24f9: movabs $0x1be5dc08,%rdi   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2503: mov    0x8(%rax),%eax
  0x0000000002dd2506: shl    $0x3,%rax
  0x0000000002dd250a: cmp    0x110(%rdi),%rax
  0x0000000002dd2511: jne    0x0000000002dd2520
  0x0000000002dd2513: addq   $0x1,0x118(%rdi)
  0x0000000002dd251b: jmpq   0x0000000002dd2586
  0x0000000002dd2520: cmp    0x120(%rdi),%rax
  0x0000000002dd2527: jne    0x0000000002dd2536
  0x0000000002dd2529: addq   $0x1,0x128(%rdi)
  0x0000000002dd2531: jmpq   0x0000000002dd2586
  0x0000000002dd2536: cmpq   $0x0,0x110(%rdi)
  0x0000000002dd2541: jne    0x0000000002dd255a
  0x0000000002dd2543: mov    %rax,0x110(%rdi)
  0x0000000002dd254a: movq   $0x1,0x118(%rdi)
  0x0000000002dd2555: jmpq   0x0000000002dd2586
  0x0000000002dd255a: cmpq   $0x0,0x120(%rdi)
  0x0000000002dd2565: jne    0x0000000002dd257e
  0x0000000002dd2567: mov    %rax,0x120(%rdi)
  0x0000000002dd256e: movq   $0x1,0x128(%rdi)
  0x0000000002dd2579: jmpq   0x0000000002dd2586
  0x0000000002dd257e: addq   $0x1,0x108(%rdi)
  0x0000000002dd2586: movabs $0x1bda0ed0,%rax   ;   {metadata(method data for {method} {0x000000001bc73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd2590: mov    0xdc(%rax),%edi
  0x0000000002dd2596: add    $0x8,%edi
  0x0000000002dd2599: mov    %edi,0xdc(%rax)
  0x0000000002dd259f: movabs $0x1bc73c18,%rax   ;   {metadata({method} {0x000000001bc73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd25a9: and    $0x7ffff8,%edi
  0x0000000002dd25af: cmp    $0x0,%edi
  0x0000000002dd25b2: je     0x0000000002dd2dda
  0x0000000002dd25b8: mov    0xc(%r8),%eax
  0x0000000002dd25bc: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::prefixLength@6 (line 209)

  0x0000000002dd25c0: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::prefixLength@6 (line 209)
                                                ; implicit exception: dispatches to 0x0000000002dd2df1
  0x0000000002dd25c3: mov    %edi,0x44(%rsp)
  0x0000000002dd25c7: cmp    $0x0,%edi
  0x0000000002dd25ca: movabs $0x1be5dc08,%rbx   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd25d4: movabs $0x138,%rcx
  0x0000000002dd25de: jne    0x0000000002dd25ee
  0x0000000002dd25e4: movabs $0x148,%rcx
  0x0000000002dd25ee: mov    (%rbx,%rcx,1),%r9
  0x0000000002dd25f2: lea    0x1(%r9),%r9
  0x0000000002dd25f6: mov    %r9,(%rbx,%rcx,1)
  0x0000000002dd25fa: je     0x0000000002dd2cca  ;*ifne
                                                ; - java.io.WinNTFileSystem::prefixLength@11 (line 210)

  0x0000000002dd2600: mov    %r8,%rbx
  0x0000000002dd2603: movabs $0x1be5dc08,%rcx   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd260d: mov    0x8(%rbx),%ebx
  0x0000000002dd2610: shl    $0x3,%rbx
  0x0000000002dd2614: cmp    0x160(%rcx),%rbx
  0x0000000002dd261b: jne    0x0000000002dd262a
  0x0000000002dd261d: addq   $0x1,0x168(%rcx)
  0x0000000002dd2625: jmpq   0x0000000002dd2690
  0x0000000002dd262a: cmp    0x170(%rcx),%rbx
  0x0000000002dd2631: jne    0x0000000002dd2640
  0x0000000002dd2633: addq   $0x1,0x178(%rcx)
  0x0000000002dd263b: jmpq   0x0000000002dd2690
  0x0000000002dd2640: cmpq   $0x0,0x160(%rcx)
  0x0000000002dd264b: jne    0x0000000002dd2664
  0x0000000002dd264d: mov    %rbx,0x160(%rcx)
  0x0000000002dd2654: movq   $0x1,0x168(%rcx)
  0x0000000002dd265f: jmpq   0x0000000002dd2690
  0x0000000002dd2664: cmpq   $0x0,0x170(%rcx)
  0x0000000002dd266f: jne    0x0000000002dd2688
  0x0000000002dd2671: mov    %rbx,0x170(%rcx)
  0x0000000002dd2678: movq   $0x1,0x178(%rcx)
  0x0000000002dd2683: jmpq   0x0000000002dd2690
  0x0000000002dd2688: addq   $0x1,0x158(%rcx)
  0x0000000002dd2690: movabs $0x1bda0d58,%rbx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd269a: mov    0xdc(%rbx),%ecx
  0x0000000002dd26a0: add    $0x8,%ecx
  0x0000000002dd26a3: mov    %ecx,0xdc(%rbx)
  0x0000000002dd26a9: movabs $0x1bc73d68,%rbx   ;   {metadata({method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd26b3: and    $0x7ffff8,%ecx
  0x0000000002dd26b9: cmp    $0x0,%ecx
  0x0000000002dd26bc: je     0x0000000002dd2df6
  0x0000000002dd26c2: movabs $0x1bda0d58,%rbx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd26cc: incl   0x118(%rbx)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)

  0x0000000002dd26d2: cmp    $0x0,%edi
  0x0000000002dd26d5: movabs $0x1bda0d58,%rbx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd26df: movabs $0x128,%rcx
  0x0000000002dd26e9: jg     0x0000000002dd26f9
  0x0000000002dd26ef: movabs $0x138,%rcx
  0x0000000002dd26f9: mov    (%rbx,%rcx,1),%r9
  0x0000000002dd26fd: lea    0x1(%r9),%r9
  0x0000000002dd2701: mov    %r9,(%rbx,%rcx,1)
  0x0000000002dd2705: jle    0x0000000002dd2d76  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)

  0x0000000002dd270b: cmpl   $0x0,0xc(%rax)
  0x0000000002dd2712: jbe    0x0000000002dd2e0d
  0x0000000002dd2718: movzwl 0x10(%rax),%ebx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)

  0x0000000002dd271c: and    $0xffff,%ebx
  0x0000000002dd2722: cmp    $0x1,%edi
  0x0000000002dd2725: movabs $0x1be5dc08,%rcx   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd272f: movabs $0x188,%r9
  0x0000000002dd2739: jle    0x0000000002dd2749
  0x0000000002dd273f: movabs $0x198,%r9
  0x0000000002dd2749: mov    (%rcx,%r9,1),%r11
  0x0000000002dd274d: lea    0x1(%r11),%r11
  0x0000000002dd2751: mov    %r11,(%rcx,%r9,1)
  0x0000000002dd2755: jle    0x0000000002dd2898  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::prefixLength@25 (line 212)

  0x0000000002dd275b: mov    %r8,%rcx
  0x0000000002dd275e: movabs $0x1be5dc08,%r9    ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2768: mov    0x8(%rcx),%ecx
  0x0000000002dd276b: shl    $0x3,%rcx
  0x0000000002dd276f: cmp    0x1b0(%r9),%rcx
  0x0000000002dd2776: jne    0x0000000002dd2785
  0x0000000002dd2778: addq   $0x1,0x1b8(%r9)
  0x0000000002dd2780: jmpq   0x0000000002dd27eb
  0x0000000002dd2785: cmp    0x1c0(%r9),%rcx
  0x0000000002dd278c: jne    0x0000000002dd279b
  0x0000000002dd278e: addq   $0x1,0x1c8(%r9)
  0x0000000002dd2796: jmpq   0x0000000002dd27eb
  0x0000000002dd279b: cmpq   $0x0,0x1b0(%r9)
  0x0000000002dd27a6: jne    0x0000000002dd27bf
  0x0000000002dd27a8: mov    %rcx,0x1b0(%r9)
  0x0000000002dd27af: movq   $0x1,0x1b8(%r9)
  0x0000000002dd27ba: jmpq   0x0000000002dd27eb
  0x0000000002dd27bf: cmpq   $0x0,0x1c0(%r9)
  0x0000000002dd27ca: jne    0x0000000002dd27e3
  0x0000000002dd27cc: mov    %rcx,0x1c0(%r9)
  0x0000000002dd27d3: movq   $0x1,0x1c8(%r9)
  0x0000000002dd27de: jmpq   0x0000000002dd27eb
  0x0000000002dd27e3: addq   $0x1,0x1a8(%r9)
  0x0000000002dd27eb: movabs $0x1bda0d58,%rcx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd27f5: mov    0xdc(%rcx),%r9d
  0x0000000002dd27fc: add    $0x8,%r9d
  0x0000000002dd2800: mov    %r9d,0xdc(%rcx)
  0x0000000002dd2807: movabs $0x1bc73d68,%rcx   ;   {metadata({method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd2811: and    $0x7ffff8,%r9d
  0x0000000002dd2818: cmp    $0x0,%r9d
  0x0000000002dd281c: je     0x0000000002dd2e1a
  0x0000000002dd2822: movabs $0x1bda0d58,%rcx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd282c: incl   0x118(%rcx)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)

  0x0000000002dd2832: cmp    $0x1,%edi
  0x0000000002dd2835: movabs $0x1bda0d58,%rcx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd283f: movabs $0x128,%r9
  0x0000000002dd2849: jg     0x0000000002dd2859
  0x0000000002dd284f: movabs $0x138,%r9
  0x0000000002dd2859: mov    (%rcx,%r9,1),%r11
  0x0000000002dd285d: lea    0x1(%r11),%r11
  0x0000000002dd2861: mov    %r11,(%rcx,%r9,1)
  0x0000000002dd2865: jle    0x0000000002dd2d26  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)

  0x0000000002dd286b: cmpl   $0x1,0xc(%rax)
  0x0000000002dd2872: jbe    0x0000000002dd2e31
  0x0000000002dd2878: movzwl 0x12(%rax),%ecx    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)

  0x0000000002dd287c: and    $0xffff,%ecx
  0x0000000002dd2882: movabs $0x1be5dc08,%r9    ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd288c: incl   0x1d8(%r9)
  0x0000000002dd2893: jmpq   0x0000000002dd289d  ;*goto
                                                ; - java.io.WinNTFileSystem::prefixLength@33 (line 212)

  0x0000000002dd2898: mov    $0x0,%ecx          ;*istore
                                                ; - java.io.WinNTFileSystem::prefixLength@37 (line 212)

  0x0000000002dd289d: cmp    %esi,%ebx
  0x0000000002dd289f: movabs $0x1be5dc08,%r9    ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd28a9: movabs $0x1f0,%r11
  0x0000000002dd28b3: jne    0x0000000002dd28c3
  0x0000000002dd28b9: movabs $0x200,%r11
  0x0000000002dd28c3: mov    (%r9,%r11,1),%r13
  0x0000000002dd28c7: lea    0x1(%r13),%r13
  0x0000000002dd28cb: mov    %r13,(%r9,%r11,1)
  0x0000000002dd28cf: jne    0x0000000002dd2912  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::prefixLength@42 (line 213)

  0x0000000002dd28d5: cmp    %esi,%ecx
  0x0000000002dd28d7: movabs $0x1be5dc08,%rax   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd28e1: movabs $0x210,%rdx
  0x0000000002dd28eb: jne    0x0000000002dd28fb
  0x0000000002dd28f1: movabs $0x220,%rdx
  0x0000000002dd28fb: mov    (%rax,%rdx,1),%r8
  0x0000000002dd28ff: lea    0x1(%r8),%r8
  0x0000000002dd2903: mov    %r8,(%rax,%rdx,1)
  0x0000000002dd2907: jne    0x0000000002dd2cb6
  0x0000000002dd290d: jmpq   0x0000000002dd2ca2  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::prefixLength@48 (line 214)

  0x0000000002dd2912: movabs $0x1be5dc08,%r9    ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd291c: addq   $0x1,0x230(%r9)
  0x0000000002dd2924: movabs $0x1be5df40,%rdx   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd292e: mov    0xdc(%rdx),%r9d
  0x0000000002dd2935: add    $0x8,%r9d
  0x0000000002dd2939: mov    %r9d,0xdc(%rdx)
  0x0000000002dd2940: movabs $0x1bde9a30,%rdx   ;   {metadata({method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd294a: and    $0x7ffff8,%r9d
  0x0000000002dd2951: cmp    $0x0,%r9d
  0x0000000002dd2955: je     0x0000000002dd2e3e
  0x0000000002dd295b: cmp    $0x61,%ebx
  0x0000000002dd295e: movabs $0x1be5df40,%rdx   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2968: movabs $0x108,%r9
  0x0000000002dd2972: jl     0x0000000002dd2982
  0x0000000002dd2978: movabs $0x118,%r9
  0x0000000002dd2982: mov    (%rdx,%r9,1),%r11
  0x0000000002dd2986: lea    0x1(%r11),%r11
  0x0000000002dd298a: mov    %r11,(%rdx,%r9,1)
  0x0000000002dd298e: jl     0x0000000002dd29cd  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::prefixLength@58 (line 217)

  0x0000000002dd2994: cmp    $0x7a,%ebx
  0x0000000002dd2997: movabs $0x1be5df40,%rdx   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd29a1: movabs $0x128,%r9
  0x0000000002dd29ab: jle    0x0000000002dd29bb
  0x0000000002dd29b1: movabs $0x138,%r9
  0x0000000002dd29bb: mov    (%rdx,%r9,1),%r11
  0x0000000002dd29bf: lea    0x1(%r11),%r11
  0x0000000002dd29c3: mov    %r11,(%rdx,%r9,1)
  0x0000000002dd29c7: jle    0x0000000002dd2a49  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::isLetter@9 (line 57)
                                                ; - java.io.WinNTFileSystem::prefixLength@58 (line 217)

  0x0000000002dd29cd: cmp    $0x41,%ebx
  0x0000000002dd29d0: movabs $0x1be5df40,%rdx   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd29da: movabs $0x148,%r9
  0x0000000002dd29e4: jl     0x0000000002dd29f4
  0x0000000002dd29ea: movabs $0x158,%r9
  0x0000000002dd29f4: mov    (%rdx,%r9,1),%r11
  0x0000000002dd29f8: lea    0x1(%r11),%r11
  0x0000000002dd29fc: mov    %r11,(%rdx,%r9,1)
  0x0000000002dd2a00: jl     0x0000000002dd2a3f  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::prefixLength@58 (line 217)

  0x0000000002dd2a06: cmp    $0x5a,%ebx
  0x0000000002dd2a09: movabs $0x1be5df40,%rdx   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2a13: movabs $0x168,%rbx
  0x0000000002dd2a1d: jg     0x0000000002dd2a2d
  0x0000000002dd2a23: movabs $0x178,%rbx
  0x0000000002dd2a2d: mov    (%rdx,%rbx,1),%r9
  0x0000000002dd2a31: lea    0x1(%r9),%r9
  0x0000000002dd2a35: mov    %r9,(%rdx,%rbx,1)
  0x0000000002dd2a39: jle    0x0000000002dd2a49  ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::prefixLength@58 (line 217)

  0x0000000002dd2a3f: mov    $0x0,%edx
  0x0000000002dd2a44: jmpq   0x0000000002dd2a5e  ;*ireturn
                                                ; - java.io.WinNTFileSystem::isLetter@29 (line 57)
                                                ; - java.io.WinNTFileSystem::prefixLength@58 (line 217)

  0x0000000002dd2a49: movabs $0x1be5df40,%rdx   ;   {metadata(method data for {method} {0x000000001bde9a38} &apos;isLetter&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2a53: incl   0x188(%rdx)
  0x0000000002dd2a59: mov    $0x1,%edx          ;*goto
                                                ; - java.io.WinNTFileSystem::isLetter@25 (line 57)
                                                ; - java.io.WinNTFileSystem::prefixLength@58 (line 217)

  0x0000000002dd2a5e: and    $0x1,%edx
  0x0000000002dd2a61: cmp    $0x0,%edx
  0x0000000002dd2a64: movabs $0x1be5dc08,%rdx   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2a6e: movabs $0x240,%rbx
  0x0000000002dd2a78: je     0x0000000002dd2a88
  0x0000000002dd2a7e: movabs $0x250,%rbx
  0x0000000002dd2a88: mov    (%rdx,%rbx,1),%r9
  0x0000000002dd2a8c: lea    0x1(%r9),%r9
  0x0000000002dd2a90: mov    %r9,(%rdx,%rbx,1)
  0x0000000002dd2a94: je     0x0000000002dd2c8e  ;*ifeq
                                                ; - java.io.WinNTFileSystem::prefixLength@61 (line 217)

  0x0000000002dd2a9a: cmp    $0x3a,%ecx
  0x0000000002dd2a9d: movabs $0x1be5dc08,%rdx   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2aa7: movabs $0x260,%rbx
  0x0000000002dd2ab1: jne    0x0000000002dd2ac1
  0x0000000002dd2ab7: movabs $0x270,%rbx
  0x0000000002dd2ac1: mov    (%rdx,%rbx,1),%rcx
  0x0000000002dd2ac5: lea    0x1(%rcx),%rcx
  0x0000000002dd2ac9: mov    %rcx,(%rdx,%rbx,1)
  0x0000000002dd2acd: jne    0x0000000002dd2c8e  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::prefixLength@68 (line 217)

  0x0000000002dd2ad3: cmp    $0x2,%edi
  0x0000000002dd2ad6: movabs $0x1be5dc08,%rdx   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2ae0: movabs $0x280,%rbx
  0x0000000002dd2aea: jle    0x0000000002dd2afa
  0x0000000002dd2af0: movabs $0x290,%rbx
  0x0000000002dd2afa: mov    (%rdx,%rbx,1),%rcx
  0x0000000002dd2afe: lea    0x1(%rcx),%rcx
  0x0000000002dd2b02: mov    %rcx,(%rdx,%rbx,1)
  0x0000000002dd2b06: jle    0x0000000002dd2c66  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::prefixLength@73 (line 218)

  0x0000000002dd2b0c: mov    %r8,%rdx
  0x0000000002dd2b0f: movabs $0x1be5dc08,%rbx   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2b19: mov    0x8(%rdx),%edx
  0x0000000002dd2b1c: shl    $0x3,%rdx
  0x0000000002dd2b20: cmp    0x2a8(%rbx),%rdx
  0x0000000002dd2b27: jne    0x0000000002dd2b36
  0x0000000002dd2b29: addq   $0x1,0x2b0(%rbx)
  0x0000000002dd2b31: jmpq   0x0000000002dd2b9c
  0x0000000002dd2b36: cmp    0x2b8(%rbx),%rdx
  0x0000000002dd2b3d: jne    0x0000000002dd2b4c
  0x0000000002dd2b3f: addq   $0x1,0x2c0(%rbx)
  0x0000000002dd2b47: jmpq   0x0000000002dd2b9c
  0x0000000002dd2b4c: cmpq   $0x0,0x2a8(%rbx)
  0x0000000002dd2b57: jne    0x0000000002dd2b70
  0x0000000002dd2b59: mov    %rdx,0x2a8(%rbx)
  0x0000000002dd2b60: movq   $0x1,0x2b0(%rbx)
  0x0000000002dd2b6b: jmpq   0x0000000002dd2b9c
  0x0000000002dd2b70: cmpq   $0x0,0x2b8(%rbx)
  0x0000000002dd2b7b: jne    0x0000000002dd2b94
  0x0000000002dd2b7d: mov    %rdx,0x2b8(%rbx)
  0x0000000002dd2b84: movq   $0x1,0x2c0(%rbx)
  0x0000000002dd2b8f: jmpq   0x0000000002dd2b9c
  0x0000000002dd2b94: addq   $0x1,0x2a0(%rbx)
  0x0000000002dd2b9c: movabs $0x1bda0d58,%rdx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd2ba6: mov    0xdc(%rdx),%ebx
  0x0000000002dd2bac: add    $0x8,%ebx
  0x0000000002dd2baf: mov    %ebx,0xdc(%rdx)
  0x0000000002dd2bb5: movabs $0x1bc73d68,%rdx   ;   {metadata({method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd2bbf: and    $0x7ffff8,%ebx
  0x0000000002dd2bc5: cmp    $0x0,%ebx
  0x0000000002dd2bc8: je     0x0000000002dd2e55
  0x0000000002dd2bce: movabs $0x1bda0d58,%rdx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd2bd8: incl   0x118(%rdx)        ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)

  0x0000000002dd2bde: cmp    $0x2,%edi
  0x0000000002dd2be1: movabs $0x1bda0d58,%rdx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd2beb: movabs $0x128,%r8
  0x0000000002dd2bf5: jg     0x0000000002dd2c05
  0x0000000002dd2bfb: movabs $0x138,%r8
  0x0000000002dd2c05: mov    (%rdx,%r8,1),%rdi
  0x0000000002dd2c09: lea    0x1(%rdi),%rdi
  0x0000000002dd2c0d: mov    %rdi,(%rdx,%r8,1)
  0x0000000002dd2c11: jle    0x0000000002dd2cde  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)

  0x0000000002dd2c17: cmpl   $0x2,0xc(%rax)
  0x0000000002dd2c1e: jbe    0x0000000002dd2e6c
  0x0000000002dd2c24: movzwl 0x14(%rax),%eax    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)

  0x0000000002dd2c28: and    $0xffff,%eax
  0x0000000002dd2c2e: cmp    %esi,%eax
  0x0000000002dd2c30: movabs $0x1be5dc08,%rax   ;   {metadata(method data for {method} {0x000000001bdea108} &apos;prefixLength&apos; &apos;(Ljava/lang/String;)I&apos; in &apos;java/io/WinNTFileSystem&apos;)}
  0x0000000002dd2c3a: movabs $0x2d0,%rdx
  0x0000000002dd2c44: jne    0x0000000002dd2c54
  0x0000000002dd2c4a: movabs $0x2e0,%rdx
  0x0000000002dd2c54: mov    (%rax,%rdx,1),%r8
  0x0000000002dd2c58: lea    0x1(%r8),%r8
  0x0000000002dd2c5c: mov    %r8,(%rax,%rdx,1)
  0x0000000002dd2c60: je     0x0000000002dd2c7a  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::prefixLength@82 (line 218)

  0x0000000002dd2c66: mov    $0x2,%eax
  0x0000000002dd2c6b: add    $0x80,%rsp
  0x0000000002dd2c72: pop    %rbp
  0x0000000002dd2c73: test   %eax,-0x21d2b79(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd2c79: retq                      ;*ireturn
                                                ; - java.io.WinNTFileSystem::prefixLength@88 (line 220)

  0x0000000002dd2c7a: mov    $0x3,%eax
  0x0000000002dd2c7f: add    $0x80,%rsp
  0x0000000002dd2c86: pop    %rbp
  0x0000000002dd2c87: test   %eax,-0x21d2b8d(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd2c8d: retq                      ;*ireturn
                                                ; - java.io.WinNTFileSystem::prefixLength@86 (line 219)

  0x0000000002dd2c8e: mov    $0x0,%eax
  0x0000000002dd2c93: add    $0x80,%rsp
  0x0000000002dd2c9a: pop    %rbp
  0x0000000002dd2c9b: test   %eax,-0x21d2ba1(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd2ca1: retq                      ;*ireturn
                                                ; - java.io.WinNTFileSystem::prefixLength@90 (line 222)

  0x0000000002dd2ca2: mov    $0x2,%eax
  0x0000000002dd2ca7: add    $0x80,%rsp
  0x0000000002dd2cae: pop    %rbp
  0x0000000002dd2caf: test   %eax,-0x21d2bb5(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd2cb5: retq                      ;*ireturn
                                                ; - java.io.WinNTFileSystem::prefixLength@52 (line 214)

  0x0000000002dd2cb6: mov    $0x1,%eax
  0x0000000002dd2cbb: add    $0x80,%rsp
  0x0000000002dd2cc2: pop    %rbp
  0x0000000002dd2cc3: test   %eax,-0x21d2bc9(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd2cc9: retq                      ;*ireturn
                                                ; - java.io.WinNTFileSystem::prefixLength@54 (line 215)

  0x0000000002dd2cca: mov    $0x0,%eax
  0x0000000002dd2ccf: add    $0x80,%rsp
  0x0000000002dd2cd6: pop    %rbp
  0x0000000002dd2cd7: test   %eax,-0x21d2bdd(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd2cdd: retq                      ;*ireturn
                                                ; - java.io.WinNTFileSystem::prefixLength@15 (line 210)

  0x0000000002dd2cde: xchg   %ax,%ax
  0x0000000002dd2ce0: jmpq   0x0000000002dd2e88  ;   {no_reloc}
  0x0000000002dd2ce5: add    %al,(%rax)
  0x0000000002dd2ce7: add    %al,(%rax)
  0x0000000002dd2ce9: add    %ch,%cl
  0x0000000002dd2ceb: movabs %eax,0xba48c08b4c000001  ;*new
                                                ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)
                                                ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd2cf4: pop    %rax
  0x0000000002dd2cf5: or     $0x1bda,%eax
  0x0000000002dd2cfa: add    %al,(%rax)
  0x0000000002dd2cfc: addq   $0x1,0x148(%rdx)
  0x0000000002dd2d04: mov    $0x2,%r8d
  0x0000000002dd2d0a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)

  0x0000000002dd2d0d: mov    %rax,0x38(%rsp)
  0x0000000002dd2d12: nop
  0x0000000002dd2d13: nop
  0x0000000002dd2d14: nop
  0x0000000002dd2d15: nop
  0x0000000002dd2d16: nop
  0x0000000002dd2d17: callq  0x0000000002cf61a0  ; OopMap{[56]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)
                                                ;   {optimized virtual_call}
  0x0000000002dd2d1c: mov    0x38(%rsp),%rax
  0x0000000002dd2d21: jmpq   0x0000000002dd2f16  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)

  0x0000000002dd2d26: mov    %ebx,0x60(%rsp)
  0x0000000002dd2d2a: nopw   0x0(%rax,%rax,1)
  0x0000000002dd2d30: jmpq   0x0000000002dd2eae  ;   {no_reloc}
  0x0000000002dd2d35: add    %al,(%rax)
  0x0000000002dd2d37: add    %al,(%rax)
  0x0000000002dd2d39: add    %ch,%cl
  0x0000000002dd2d3b: jns    0x0000000002dd2d3e
  0x0000000002dd2d3d: add    %al,(%rax)         ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)

  0x0000000002dd2d3f: mov    %rax,%rdx
  0x0000000002dd2d42: movabs $0x1bda0d58,%rcx   ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd2d4c: addq   $0x1,0x148(%rcx)
  0x0000000002dd2d54: mov    $0x1,%r8d
  0x0000000002dd2d5a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)

  0x0000000002dd2d5d: mov    %rax,0x48(%rsp)
  0x0000000002dd2d62: nop
  0x0000000002dd2d63: nop
  0x0000000002dd2d64: nop
  0x0000000002dd2d65: nop
  0x0000000002dd2d66: nop
  0x0000000002dd2d67: callq  0x0000000002cf61a0  ; OopMap{[72]=Oop [88]=Oop [80]=Oop off=2284}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)
                                                ;   {optimized virtual_call}
  0x0000000002dd2d6c: mov    0x48(%rsp),%rax
  0x0000000002dd2d71: jmpq   0x0000000002dd2f16  ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)

  0x0000000002dd2d76: xchg   %ax,%ax
  0x0000000002dd2d78: jmpq   0x0000000002dd2ed4  ;   {no_reloc}
  0x0000000002dd2d7d: add    %al,(%rax)
  0x0000000002dd2d7f: add    %al,(%rax)
  0x0000000002dd2d81: add    %ch,%cl
  0x0000000002dd2d83: push   %rdi
  0x0000000002dd2d84: add    %eax,(%rax)
  0x0000000002dd2d86: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)

  0x0000000002dd2d89: rorb   -0x47(%rax)        ;   {metadata(method data for {method} {0x000000001bc73d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd2d8c: pop    %rax
  0x0000000002dd2d8d: or     $0x1bda,%eax
  0x0000000002dd2d92: add    %al,(%rax)
  0x0000000002dd2d94: addq   $0x1,0x148(%rcx)
  0x0000000002dd2d9c: mov    $0x0,%r8d
  0x0000000002dd2da2: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)

  0x0000000002dd2da5: mov    %rax,0x68(%rsp)
  0x0000000002dd2daa: nop
  0x0000000002dd2dab: nop
  0x0000000002dd2dac: nop
  0x0000000002dd2dad: nop
  0x0000000002dd2dae: nop
  0x0000000002dd2daf: callq  0x0000000002cf61a0  ; OopMap{[80]=Oop [104]=Oop [88]=Oop off=2356}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)
                                                ;   {optimized virtual_call}
  0x0000000002dd2db4: mov    0x68(%rsp),%rax
  0x0000000002dd2db9: jmpq   0x0000000002dd2f16
  0x0000000002dd2dbe: mov    %rax,0x8(%rsp)
  0x0000000002dd2dc3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd2dcb: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [88]=Oop r8=Oop [80]=Oop off=2384}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::prefixLength@-1 (line 208)
                                                ;   {runtime_call}
  0x0000000002dd2dd0: jmpq   0x0000000002dd24eb
  0x0000000002dd2dd5: callq  0x0000000002dad680  ; OopMap{rdx=Oop [88]=Oop r8=Oop [80]=Oop off=2394}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::prefixLength@6 (line 209)
                                                ;   {runtime_call}
  0x0000000002dd2dda: mov    %rax,0x8(%rsp)
  0x0000000002dd2ddf: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd2de7: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [88]=Oop r8=Oop [80]=Oop off=2412}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.io.WinNTFileSystem::prefixLength@6 (line 209)
                                                ;   {runtime_call}
  0x0000000002dd2dec: jmpq   0x0000000002dd25b8
  0x0000000002dd2df1: callq  0x0000000002dad680  ; OopMap{rdx=Oop [88]=Oop r8=Oop [80]=Oop rax=Oop off=2422}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::prefixLength@6 (line 209)
                                                ;   {runtime_call}
  0x0000000002dd2df6: mov    %rbx,0x8(%rsp)
  0x0000000002dd2dfb: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd2e03: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [88]=Oop r8=Oop [80]=Oop rax=Oop off=2440}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)
                                                ;   {runtime_call}
  0x0000000002dd2e08: jmpq   0x0000000002dd26c2
  0x0000000002dd2e0d: movq   $0x0,(%rsp)
  0x0000000002dd2e15: callq  0x0000000002dac940  ; OopMap{rdx=Oop [88]=Oop r8=Oop [80]=Oop rax=Oop off=2458}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)
                                                ;   {runtime_call}
  0x0000000002dd2e1a: mov    %rcx,0x8(%rsp)
  0x0000000002dd2e1f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd2e27: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [88]=Oop r8=Oop [80]=Oop rax=Oop off=2476}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)
                                                ;   {runtime_call}
  0x0000000002dd2e2c: jmpq   0x0000000002dd2822
  0x0000000002dd2e31: movq   $0x1,(%rsp)
  0x0000000002dd2e39: callq  0x0000000002dac940  ; OopMap{rdx=Oop [88]=Oop r8=Oop [80]=Oop rax=Oop off=2494}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)
                                                ;   {runtime_call}
  0x0000000002dd2e3e: mov    %rdx,0x8(%rsp)
  0x0000000002dd2e43: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd2e4b: callq  0x0000000002db1d60  ; OopMap{rax=Oop r8=Oop [80]=Oop off=2512}
                                                ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isLetter@-1 (line 57)
                                                ; - java.io.WinNTFileSystem::prefixLength@58 (line 217)
                                                ;   {runtime_call}
  0x0000000002dd2e50: jmpq   0x0000000002dd295b
  0x0000000002dd2e55: mov    %rdx,0x8(%rsp)
  0x0000000002dd2e5a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd2e62: callq  0x0000000002db1d60  ; OopMap{r8=Oop [80]=Oop rax=Oop off=2535}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)
                                                ;   {runtime_call}
  0x0000000002dd2e67: jmpq   0x0000000002dd2bce
  0x0000000002dd2e6c: movq   $0x2,(%rsp)
  0x0000000002dd2e74: callq  0x0000000002dac940  ; OopMap{rax=Oop off=2553}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)
                                                ;   {runtime_call}
  0x0000000002dd2e79: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd2e83: mov    $0xa050f00,%eax
  0x0000000002dd2e88: callq  0x0000000002db0ca0  ; OopMap{off=2573}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)
                                                ;   {runtime_call}
  0x0000000002dd2e8d: jmpq   0x0000000002dd2ce0
  0x0000000002dd2e92: mov    %rdx,%rdx
  0x0000000002dd2e95: callq  0x0000000002dadb20  ; OopMap{off=2586}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@78 (line 218)
                                                ;   {runtime_call}
  0x0000000002dd2e9a: jmpq   0x0000000002dd2cef
  0x0000000002dd2e9f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd2ea9: mov    $0xa050f00,%eax
  0x0000000002dd2eae: callq  0x0000000002db0ca0  ; OopMap{[80]=Oop [88]=Oop off=2611}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)
                                                ;   {runtime_call}
  0x0000000002dd2eb3: jmpq   0x0000000002dd2d30
  0x0000000002dd2eb8: mov    %rdx,%rdx
  0x0000000002dd2ebb: callq  0x0000000002dadb20  ; OopMap{[80]=Oop [88]=Oop off=2624}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@30 (line 212)
                                                ;   {runtime_call}
  0x0000000002dd2ec0: jmpq   0x0000000002dd2d3f
  0x0000000002dd2ec5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd2ecf: mov    $0xa050f00,%eax
  0x0000000002dd2ed4: callq  0x0000000002db0ca0  ; OopMap{[80]=Oop [88]=Oop off=2649}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)
                                                ;   {runtime_call}
  0x0000000002dd2ed9: jmpq   0x0000000002dd2d78
  0x0000000002dd2ede: mov    %rdx,%rdx
  0x0000000002dd2ee1: callq  0x0000000002dadb20  ; OopMap{[80]=Oop [88]=Oop off=2662}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ; - java.io.WinNTFileSystem::prefixLength@18 (line 211)
                                                ;   {runtime_call}
  0x0000000002dd2ee6: jmpq   0x0000000002dd2d87
  0x0000000002dd2eeb: nop
  0x0000000002dd2eec: nop
  0x0000000002dd2eed: mov    0x2a8(%r15),%rax
  0x0000000002dd2ef4: movabs $0x0,%r10
  0x0000000002dd2efe: mov    %r10,0x2a8(%r15)
  0x0000000002dd2f05: movabs $0x0,%r10
  0x0000000002dd2f0f: mov    %r10,0x2b0(%r15)
  0x0000000002dd2f16: add    $0x80,%rsp
  0x0000000002dd2f1d: pop    %rbp
  0x0000000002dd2f1e: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd2f23: hlt    
  0x0000000002dd2f24: hlt    
  0x0000000002dd2f25: hlt    
  0x0000000002dd2f26: hlt    
  0x0000000002dd2f27: hlt    
  0x0000000002dd2f28: hlt    
  0x0000000002dd2f29: hlt    
  0x0000000002dd2f2a: hlt    
  0x0000000002dd2f2b: hlt    
  0x0000000002dd2f2c: hlt    
  0x0000000002dd2f2d: hlt    
  0x0000000002dd2f2e: hlt    
  0x0000000002dd2f2f: hlt    
  0x0000000002dd2f30: hlt    
  0x0000000002dd2f31: hlt    
  0x0000000002dd2f32: hlt    
  0x0000000002dd2f33: hlt    
  0x0000000002dd2f34: hlt    
  0x0000000002dd2f35: hlt    
  0x0000000002dd2f36: hlt    
  0x0000000002dd2f37: hlt    
  0x0000000002dd2f38: hlt    
  0x0000000002dd2f39: hlt    
  0x0000000002dd2f3a: hlt    
  0x0000000002dd2f3b: hlt    
  0x0000000002dd2f3c: hlt    
  0x0000000002dd2f3d: hlt    
  0x0000000002dd2f3e: hlt    
  0x0000000002dd2f3f: hlt    
[Stub Code]
  0x0000000002dd2f40: nop                       ;   {no_reloc}
  0x0000000002dd2f41: nop
  0x0000000002dd2f42: nop
  0x0000000002dd2f43: nop
  0x0000000002dd2f44: nop
  0x0000000002dd2f45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd2f4f: jmpq   0x0000000002dd2f4f  ;   {runtime_call}
  0x0000000002dd2f54: nop
  0x0000000002dd2f55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd2f5f: jmpq   0x0000000002dd2f5f  ;   {runtime_call}
  0x0000000002dd2f64: nop
  0x0000000002dd2f65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd2f6f: jmpq   0x0000000002dd2f6f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dd2f74: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dd2f79: mov    %rsp,-0x28(%rsp)
  0x0000000002dd2f7e: sub    $0x80,%rsp
  0x0000000002dd2f85: mov    %rax,0x78(%rsp)
  0x0000000002dd2f8a: mov    %rcx,0x70(%rsp)
  0x0000000002dd2f8f: mov    %rdx,0x68(%rsp)
  0x0000000002dd2f94: mov    %rbx,0x60(%rsp)
  0x0000000002dd2f99: mov    %rbp,0x50(%rsp)
  0x0000000002dd2f9e: mov    %rsi,0x48(%rsp)
  0x0000000002dd2fa3: mov    %rdi,0x40(%rsp)
  0x0000000002dd2fa8: mov    %r8,0x38(%rsp)
  0x0000000002dd2fad: mov    %r9,0x30(%rsp)
  0x0000000002dd2fb2: mov    %r10,0x28(%rsp)
  0x0000000002dd2fb7: mov    %r11,0x20(%rsp)
  0x0000000002dd2fbc: mov    %r12,0x18(%rsp)
  0x0000000002dd2fc1: mov    %r13,0x10(%rsp)
  0x0000000002dd2fc6: mov    %r14,0x8(%rsp)
  0x0000000002dd2fcb: mov    %r15,(%rsp)
  0x0000000002dd2fcf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd2fd9: movabs $0x2dd2f79,%rdx    ;   {internal_word}
  0x0000000002dd2fe3: mov    %rsp,%r8
  0x0000000002dd2fe6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd2fea: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd2fef: hlt    
[Deopt Handler Code]
  0x0000000002dd2ff0: movabs $0x2dd2ff0,%r10    ;   {section_word}
  0x0000000002dd2ffa: push   %r10
  0x0000000002dd2ffc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd3001: hlt    
  0x0000000002dd3002: hlt    
  0x0000000002dd3003: hlt    
  0x0000000002dd3004: hlt    
  0x0000000002dd3005: hlt    
  0x0000000002dd3006: hlt    
  0x0000000002dd3007: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x0000000002dd2480' size='5280' address='0x0000000002dd2290' relocation_offset='288' insts_offset='496' stub_offset='3248' scopes_data_offset='3488' scopes_pcs_offset='4192' dependencies_offset='5248' nul_chk_table_offset='5256' method='java/io/WinNTFileSystem prefixLength (Ljava/lang/String;)I' bytes='91' count='1806' iicount='1806' stamp='0.829'/>
Decoding compiled method 0x0000000002dccb50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd72890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002dccca0: mov    0x8(%rdx),%r10d
  0x0000000002dccca4: shl    $0x3,%r10
  0x0000000002dccca8: cmp    %rax,%r10
  0x0000000002dcccab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcccb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcccbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcccc0: mov    %eax,-0x6000(%rsp)
  0x0000000002dcccc7: push   %rbp
  0x0000000002dcccc8: sub    $0x40,%rsp
  0x0000000002dccccc: movabs $0x1bf88cd8,%rax
  0x0000000002dcccd6: mov    0x8(%rax),%esi
  0x0000000002dcccd9: add    $0x8,%esi
  0x0000000002dcccdc: mov    %esi,0x8(%rax)
  0x0000000002dcccdf: movabs $0x1bd72888,%rax   ;   {metadata({method} {0x000000001bd72890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;)}
  0x0000000002dccce9: and    $0x3ff8,%esi
  0x0000000002dcccef: cmp    $0x0,%esi
  0x0000000002dcccf2: je     0x0000000002dccd0e  ;*getstatic unsafe
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@0 (line 158)

  0x0000000002dcccf8: mov    $0x1,%eax
  0x0000000002dcccfd: lock xadd %eax,0xc(%rdx)
  0x0000000002dccd02: add    $0x40,%rsp
  0x0000000002dccd06: pop    %rbp
  0x0000000002dccd07: test   %eax,-0x21ccc0d(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dccd0d: retq   
  0x0000000002dccd0e: mov    %rax,0x8(%rsp)
  0x0000000002dccd13: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dccd1b: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=128}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@-1 (line 158)
                                                ;   {runtime_call}
  0x0000000002dccd20: jmp    0x0000000002dcccf8
  0x0000000002dccd22: nop
  0x0000000002dccd23: nop
  0x0000000002dccd24: mov    0x2a8(%r15),%rax
  0x0000000002dccd2b: movabs $0x0,%r10
  0x0000000002dccd35: mov    %r10,0x2a8(%r15)
  0x0000000002dccd3c: movabs $0x0,%r10
  0x0000000002dccd46: mov    %r10,0x2b0(%r15)
  0x0000000002dccd4d: add    $0x40,%rsp
  0x0000000002dccd51: pop    %rbp
  0x0000000002dccd52: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dccd57: hlt    
  0x0000000002dccd58: hlt    
  0x0000000002dccd59: hlt    
  0x0000000002dccd5a: hlt    
  0x0000000002dccd5b: hlt    
  0x0000000002dccd5c: hlt    
  0x0000000002dccd5d: hlt    
  0x0000000002dccd5e: hlt    
  0x0000000002dccd5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dccd60: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dccd65: mov    %rsp,-0x28(%rsp)
  0x0000000002dccd6a: sub    $0x80,%rsp
  0x0000000002dccd71: mov    %rax,0x78(%rsp)
  0x0000000002dccd76: mov    %rcx,0x70(%rsp)
  0x0000000002dccd7b: mov    %rdx,0x68(%rsp)
  0x0000000002dccd80: mov    %rbx,0x60(%rsp)
  0x0000000002dccd85: mov    %rbp,0x50(%rsp)
  0x0000000002dccd8a: mov    %rsi,0x48(%rsp)
  0x0000000002dccd8f: mov    %rdi,0x40(%rsp)
  0x0000000002dccd94: mov    %r8,0x38(%rsp)
  0x0000000002dccd99: mov    %r9,0x30(%rsp)
  0x0000000002dccd9e: mov    %r10,0x28(%rsp)
  0x0000000002dccda3: mov    %r11,0x20(%rsp)
  0x0000000002dccda8: mov    %r12,0x18(%rsp)
  0x0000000002dccdad: mov    %r13,0x10(%rsp)
  0x0000000002dccdb2: mov    %r14,0x8(%rsp)
  0x0000000002dccdb7: mov    %r15,(%rsp)
  0x0000000002dccdbb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dccdc5: movabs $0x2dccd65,%rdx    ;   {internal_word}
  0x0000000002dccdcf: mov    %rsp,%r8
  0x0000000002dccdd2: and    $0xfffffffffffffff0,%rsp
  0x0000000002dccdd6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dccddb: hlt    
[Deopt Handler Code]
  0x0000000002dccddc: movabs $0x2dccddc,%r10    ;   {section_word}
  0x0000000002dccde6: push   %r10
  0x0000000002dccde8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dccded: hlt    
  0x0000000002dccdee: hlt    
  0x0000000002dccdef: hlt    
<nmethod compile_id='61' compiler='C1' level='2' entry='0x0000000002dccca0' size='768' address='0x0000000002dccb50' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='396397' iicount='396407' stamp='0.831'/>
<make_not_entrant thread='17312' compile_id='59' compiler='C1' level='2' stamp='0.831'/>
<writer thread='29788'/>
<task_queued compile_id='62' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='396744' iicount='396751' level='1' stamp='0.831' comment='tiered' hot_count='396695'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dcc890:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd72890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002dcc9e0: mov    0x8(%rdx),%r10d
  0x0000000002dcc9e4: shl    $0x3,%r10
  0x0000000002dcc9e8: cmp    %rax,%r10
  0x0000000002dcc9eb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcc9f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcc9fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcca00: mov    %eax,-0x6000(%rsp)
  0x0000000002dcca07: push   %rbp
  0x0000000002dcca08: sub    $0x40,%rsp         ;*getstatic unsafe
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@0 (line 158)

  0x0000000002dcca0c: mov    $0x1,%eax
  0x0000000002dcca11: lock xadd %eax,0xc(%rdx)
  0x0000000002dcca16: add    $0x40,%rsp
  0x0000000002dcca1a: pop    %rbp
  0x0000000002dcca1b: test   %eax,-0x21cc921(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dcca21: retq   
  0x0000000002dcca22: nop
  0x0000000002dcca23: nop
  0x0000000002dcca24: mov    0x2a8(%r15),%rax
  0x0000000002dcca2b: movabs $0x0,%r10
  0x0000000002dcca35: mov    %r10,0x2a8(%r15)
  0x0000000002dcca3c: movabs $0x0,%r10
  0x0000000002dcca46: mov    %r10,0x2b0(%r15)
  0x0000000002dcca4d: add    $0x40,%rsp
  0x0000000002dcca51: pop    %rbp
  0x0000000002dcca52: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dcca57: hlt    
  0x0000000002dcca58: hlt    
  0x0000000002dcca59: hlt    
  0x0000000002dcca5a: hlt    
  0x0000000002dcca5b: hlt    
  0x0000000002dcca5c: hlt    
  0x0000000002dcca5d: hlt    
  0x0000000002dcca5e: hlt    
  0x0000000002dcca5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dcca60: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dcca65: mov    %rsp,-0x28(%rsp)
  0x0000000002dcca6a: sub    $0x80,%rsp
  0x0000000002dcca71: mov    %rax,0x78(%rsp)
  0x0000000002dcca76: mov    %rcx,0x70(%rsp)
  0x0000000002dcca7b: mov    %rdx,0x68(%rsp)
  0x0000000002dcca80: mov    %rbx,0x60(%rsp)
  0x0000000002dcca85: mov    %rbp,0x50(%rsp)
  0x0000000002dcca8a: mov    %rsi,0x48(%rsp)
  0x0000000002dcca8f: mov    %rdi,0x40(%rsp)
  0x0000000002dcca94: mov    %r8,0x38(%rsp)
  0x0000000002dcca99: mov    %r9,0x30(%rsp)
  0x0000000002dcca9e: mov    %r10,0x28(%rsp)
  0x0000000002dccaa3: mov    %r11,0x20(%rsp)
  0x0000000002dccaa8: mov    %r12,0x18(%rsp)
  0x0000000002dccaad: mov    %r13,0x10(%rsp)
  0x0000000002dccab2: mov    %r14,0x8(%rsp)
  0x0000000002dccab7: mov    %r15,(%rsp)
  0x0000000002dccabb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dccac5: movabs $0x2dcca65,%rdx    ;   {internal_word}
  0x0000000002dccacf: mov    %rsp,%r8
  0x0000000002dccad2: and    $0xfffffffffffffff0,%rsp
  0x0000000002dccad6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dccadb: hlt    
[Deopt Handler Code]
  0x0000000002dccadc: movabs $0x2dccadc,%r10    ;   {section_word}
  0x0000000002dccae6: push   %r10
  0x0000000002dccae8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dccaed: hlt    
  0x0000000002dccaee: hlt    
  0x0000000002dccaef: hlt    
<nmethod compile_id='62' compiler='C1' level='1' entry='0x0000000002dcc9e0' size='680' address='0x0000000002dcc890' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='872037' iicount='872044' stamp='0.864'/>
<make_not_entrant thread='17312' compile_id='61' compiler='C1' level='2' stamp='0.864'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dd0b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcf01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  #           [sp+0x20]  (sp of caller)
  0x0000000002dd0c40: mov    0x8(%rdx),%r10d
  0x0000000002dd0c44: shl    $0x3,%r10
  0x0000000002dd0c48: cmp    %r10,%rax
  0x0000000002dd0c4b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd0c51: data16 xchg %ax,%ax
  0x0000000002dd0c54: nopl   0x0(%rax,%rax,1)
  0x0000000002dd0c5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd0c60: sub    $0x18,%rsp
  0x0000000002dd0c67: mov    %rbp,0x10(%rsp)
  0x0000000002dd0c6c: mov    %r8,%r11
  0x0000000002dd0c6f: add    %r9,%r11
  0x0000000002dd0c72: mov    (%r11),%r10d
  0x0000000002dd0c75: mov    %edi,%ebx
  0x0000000002dd0c77: add    %r10d,%ebx
  0x0000000002dd0c7a: mov    %r10d,%eax
  0x0000000002dd0c7d: lock cmpxchg %ebx,(%r11)
  0x0000000002dd0c82: sete   %cl
  0x0000000002dd0c85: movzbl %cl,%ecx           ;*invokevirtual compareAndSwapInt
                                                ; - sun.misc.Unsafe::getAndAddInt@18 (line 1035)

  0x0000000002dd0c88: test   %ecx,%ecx
  0x0000000002dd0c8a: jne    0x0000000002dd0cb0  ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x0000000002dd0c8c: nopl   0x0(%rax)
  0x0000000002dd0c90: mov    (%r11),%r10d
  0x0000000002dd0c93: mov    %r10d,%ebx
  0x0000000002dd0c96: add    %edi,%ebx
  0x0000000002dd0c98: mov    %r10d,%eax
  0x0000000002dd0c9b: lock cmpxchg %ebx,(%r11)
  0x0000000002dd0ca0: sete   %bl
  0x0000000002dd0ca3: movzbl %bl,%ebx           ; OopMap{r11=Derived_oop_r8 r8=Oop rdx=Oop off=102}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x0000000002dd0ca6: test   %eax,-0x21d0cac(%rip)        # 0x0000000000c00000
                                                ;   {poll}
  0x0000000002dd0cac: test   %ebx,%ebx
  0x0000000002dd0cae: je     0x0000000002dd0c90  ;*iload
                                                ; - sun.misc.Unsafe::getAndAddInt@24 (line 1036)

  0x0000000002dd0cb0: mov    %r10d,%eax
  0x0000000002dd0cb3: add    $0x10,%rsp
  0x0000000002dd0cb7: pop    %rbp
  0x0000000002dd0cb8: test   %eax,-0x21d0cbe(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dd0cbe: retq   
  0x0000000002dd0cbf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dd0cc0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dd0cc5: callq  0x0000000002dd0cca
  0x0000000002dd0cca: subq   $0x5,(%rsp)
  0x0000000002dd0ccf: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd0cd4: hlt    
  0x0000000002dd0cd5: hlt    
  0x0000000002dd0cd6: hlt    
  0x0000000002dd0cd7: hlt    
<nmethod compile_id='57' compiler='C2' level='4' entry='0x0000000002dd0c40' size='616' address='0x0000000002dd0b10' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='512' dependencies_offset='608' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='42850' backedge_count='55669' iicount='42850' stamp='0.866'/>
<make_not_entrant thread='30136' compile_id='54' compiler='C1' level='3' stamp='0.866'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dcc390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c073828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread&apos;
  0x0000000002dcc4e0: int3   
  0x0000000002dcc4e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcc4ec: data16 data16 xchg %ax,%ax
  0x0000000002dcc4f0: mov    %eax,-0x6000(%rsp)
  0x0000000002dcc4f7: push   %rbp
  0x0000000002dcc4f8: sub    $0x40,%rsp
  0x0000000002dcc4fc: mov    (%rdx),%ebp
  0x0000000002dcc4fe: mov    0x8(%rdx),%rbx
  0x0000000002dcc502: mov    %rdx,%rcx
  0x0000000002dcc505: movabs $0x5590be80,%r10
  0x0000000002dcc50f: callq  *%r10
  0x0000000002dcc512: mov    0x8(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002dcc5bf
  0x0000000002dcc516: cmp    $0xf800c143,%r11d  ;   {metadata(&apos;com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread&apos;)}
  0x0000000002dcc51d: jne    0x0000000002dcc59d
  0x0000000002dcc523: jmp    0x0000000002dcc547
  0x0000000002dcc525: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcc530: mov    %rbx,0x20(%rsp)    ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)

  0x0000000002dcc535: lea    (%r12,%r11,8),%rdx  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@11 (line 18)

  0x0000000002dcc539: xchg   %ax,%ax
  0x0000000002dcc53b: callq  0x0000000002cf61a0  ; OopMap{[32]=Oop off=96}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)
                                                ;   {optimized virtual_call}
  0x0000000002dcc540: inc    %ebp               ;*iinc
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@18 (line 17)

  0x0000000002dcc542: mov    0x20(%rsp),%rbx    ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)

  0x0000000002dcc547: mov    0x178(%rbx),%r11d
  0x0000000002dcc54e: cmp    %r11d,%ebp
  0x0000000002dcc551: jge    0x0000000002dcc56d  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x0000000002dcc553: mov    0x17c(%rbx),%r11d  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@11 (line 18)

  0x0000000002dcc55a: test   %r11d,%r11d
  0x0000000002dcc55d: jne    0x0000000002dcc530
  0x0000000002dcc55f: mov    $0xfffffff6,%edx
  0x0000000002dcc564: data16 xchg %ax,%ax
  0x0000000002dcc567: callq  0x0000000002cf57a0  ; OopMap{off=140}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x0000000002dcc56c: int3                      ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)

  0x0000000002dcc56d: mov    0x180(%rbx),%r10d  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@25 (line 20)

  0x0000000002dcc574: test   %r10d,%r10d
  0x0000000002dcc577: je     0x0000000002dcc590  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x0000000002dcc579: lea    (%r12,%r10,8),%rdx  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@25 (line 20)

  0x0000000002dcc57d: xchg   %ax,%ax
  0x0000000002dcc57f: callq  0x0000000002cf61a0  ; OopMap{off=164}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@28 (line 20)
                                                ;   {optimized virtual_call}
  0x0000000002dcc584: add    $0x40,%rsp
  0x0000000002dcc588: pop    %rbp
  0x0000000002dcc589: test   %eax,-0x21cc58f(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dcc58f: retq   
  0x0000000002dcc590: mov    $0xfffffff6,%edx
  0x0000000002dcc595: xchg   %ax,%ax
  0x0000000002dcc597: callq  0x0000000002cf57a0  ; OopMap{off=188}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002dcc59c: int3   
  0x0000000002dcc59d: mov    $0xffffff9d,%edx
  0x0000000002dcc5a2: mov    %rbx,0x20(%rsp)
  0x0000000002dcc5a7: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop off=204}
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)
                                                ;   {runtime_call}
  0x0000000002dcc5ac: int3                      ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@28 (line 20)

  0x0000000002dcc5ad: mov    %rax,%rdx
  0x0000000002dcc5b0: jmp    0x0000000002dcc5b5  ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)

  0x0000000002dcc5b2: mov    %rax,%rdx          ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@28 (line 20)

  0x0000000002dcc5b5: add    $0x40,%rsp
  0x0000000002dcc5b9: pop    %rbp
  0x0000000002dcc5ba: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002dcc5bf: mov    $0xffffff86,%edx
  0x0000000002dcc5c4: data16 xchg %ax,%ax
  0x0000000002dcc5c7: callq  0x0000000002cf57a0  ; OopMap{off=236}
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)
                                                ;   {runtime_call}
  0x0000000002dcc5cc: int3                      ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)

  0x0000000002dcc5cd: hlt    
  0x0000000002dcc5ce: hlt    
  0x0000000002dcc5cf: hlt    
  0x0000000002dcc5d0: hlt    
  0x0000000002dcc5d1: hlt    
  0x0000000002dcc5d2: hlt    
  0x0000000002dcc5d3: hlt    
  0x0000000002dcc5d4: hlt    
  0x0000000002dcc5d5: hlt    
  0x0000000002dcc5d6: hlt    
  0x0000000002dcc5d7: hlt    
  0x0000000002dcc5d8: hlt    
  0x0000000002dcc5d9: hlt    
  0x0000000002dcc5da: hlt    
  0x0000000002dcc5db: hlt    
  0x0000000002dcc5dc: hlt    
  0x0000000002dcc5dd: hlt    
  0x0000000002dcc5de: hlt    
  0x0000000002dcc5df: hlt    
[Stub Code]
  0x0000000002dcc5e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002dcc5ea: jmpq   0x0000000002dcc5ea  ;   {runtime_call}
  0x0000000002dcc5ef: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcc5f9: jmpq   0x0000000002dcc5f9  ;   {runtime_call}
[Exception Handler]
  0x0000000002dcc5fe: jmpq   0x0000000002dad0e0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002dcc603: callq  0x0000000002dcc608
  0x0000000002dcc608: subq   $0x5,(%rsp)
  0x0000000002dcc60d: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcc612: hlt    
  0x0000000002dcc613: hlt    
  0x0000000002dcc614: hlt    
  0x0000000002dcc615: hlt    
  0x0000000002dcc616: hlt    
  0x0000000002dcc617: hlt    
<nmethod compile_id='60' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002dcc4e0' size='1208' address='0x0000000002dcc390' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='680' scopes_pcs_offset='784' dependencies_offset='1136' handler_table_offset='1144' nul_chk_table_offset='1192' oops_offset='648' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='946592' iicount='12' stamp='0.869'/>
<writer thread='30756'/>
<task_queued compile_id='63' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='947527' iicount='12' stamp='0.870' comment='tiered' hot_count='12'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dcbbd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd56db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000000002dcbd60: mov    0x8(%rdx),%r10d
  0x0000000002dcbd64: shl    $0x3,%r10
  0x0000000002dcbd68: cmp    %rax,%r10
  0x0000000002dcbd6b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dcbd71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dcbd7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dcbd80: mov    %eax,-0x6000(%rsp)
  0x0000000002dcbd87: push   %rbp
  0x0000000002dcbd88: sub    $0x80,%rsp
  0x0000000002dcbd8f: movabs $0x1be62df8,%rsi   ;   {metadata(method data for {method} {0x000000001bd56db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dcbd99: mov    0xdc(%rsi),%edi
  0x0000000002dcbd9f: add    $0x8,%edi
  0x0000000002dcbda2: mov    %edi,0xdc(%rsi)
  0x0000000002dcbda8: movabs $0x1bd56da8,%rsi   ;   {metadata({method} {0x000000001bd56db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dcbdb2: and    $0x1ff8,%edi
  0x0000000002dcbdb8: cmp    $0x0,%edi
  0x0000000002dcbdbb: je     0x0000000002dcbfeb  ;*aload_0
                                                ; - java.util.HashMap::put@0 (line 611)

  0x0000000002dcbdc1: movabs $0x1be62df8,%rsi   ;   {metadata(method data for {method} {0x000000001bd56db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dcbdcb: addq   $0x1,0x108(%rsi)
  0x0000000002dcbdd3: movabs $0x1be5d8d8,%rsi   ;   {metadata(method data for {method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dcbddd: mov    0xdc(%rsi),%edi
  0x0000000002dcbde3: add    $0x8,%edi
  0x0000000002dcbde6: mov    %edi,0xdc(%rsi)
  0x0000000002dcbdec: movabs $0x1bd562b8,%rsi   ;   {metadata({method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dcbdf6: and    $0x7ffff8,%edi
  0x0000000002dcbdfc: cmp    $0x0,%edi
  0x0000000002dcbdff: je     0x0000000002dcc002
  0x0000000002dcbe05: cmp    $0x0,%r8
  0x0000000002dcbe09: movabs $0x1be5d8d8,%rsi   ;   {metadata(method data for {method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dcbe13: movabs $0x108,%rdi
  0x0000000002dcbe1d: jne    0x0000000002dcbe2d
  0x0000000002dcbe23: movabs $0x118,%rdi
  0x0000000002dcbe2d: mov    (%rsi,%rdi,1),%rbx
  0x0000000002dcbe31: lea    0x1(%rbx),%rbx
  0x0000000002dcbe35: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002dcbe39: jne    0x0000000002dcbe68  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x0000000002dcbe3f: movabs $0x1be5d8d8,%rsi   ;   {metadata(method data for {method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dcbe49: incl   0x128(%rsi)
  0x0000000002dcbe4f: mov    $0x0,%esi
  0x0000000002dcbe54: mov    %r9,0x68(%rsp)
  0x0000000002dcbe59: mov    %r8,0x60(%rsp)
  0x0000000002dcbe5e: mov    %rdx,0x58(%rsp)
  0x0000000002dcbe63: jmpq   0x0000000002dcbf29  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x0000000002dcbe68: mov    %r9,0x68(%rsp)
  0x0000000002dcbe6d: mov    %rdx,0x58(%rsp)
  0x0000000002dcbe72: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000000002dcc019
  0x0000000002dcbe75: mov    %r8,%rsi
  0x0000000002dcbe78: movabs $0x1be5d8d8,%rdi   ;   {metadata(method data for {method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dcbe82: mov    0x8(%rsi),%esi
  0x0000000002dcbe85: shl    $0x3,%rsi
  0x0000000002dcbe89: cmp    0x148(%rdi),%rsi
  0x0000000002dcbe90: jne    0x0000000002dcbe9f
  0x0000000002dcbe92: addq   $0x1,0x150(%rdi)
  0x0000000002dcbe9a: jmpq   0x0000000002dcbf05
  0x0000000002dcbe9f: cmp    0x158(%rdi),%rsi
  0x0000000002dcbea6: jne    0x0000000002dcbeb5
  0x0000000002dcbea8: addq   $0x1,0x160(%rdi)
  0x0000000002dcbeb0: jmpq   0x0000000002dcbf05
  0x0000000002dcbeb5: cmpq   $0x0,0x148(%rdi)
  0x0000000002dcbec0: jne    0x0000000002dcbed9
  0x0000000002dcbec2: mov    %rsi,0x148(%rdi)
  0x0000000002dcbec9: movq   $0x1,0x150(%rdi)
  0x0000000002dcbed4: jmpq   0x0000000002dcbf05
  0x0000000002dcbed9: cmpq   $0x0,0x158(%rdi)
  0x0000000002dcbee4: jne    0x0000000002dcbefd
  0x0000000002dcbee6: mov    %rsi,0x158(%rdi)
  0x0000000002dcbeed: movq   $0x1,0x160(%rdi)
  0x0000000002dcbef8: jmpq   0x0000000002dcbf05
  0x0000000002dcbefd: addq   $0x1,0x140(%rdi)
  0x0000000002dcbf05: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x0000000002dcbf08: mov    %r8,0x60(%rsp)
  0x0000000002dcbf0d: movabs $0xffffffffffffffff,%rax
  0x0000000002dcbf17: callq  0x0000000002cf63e0  ; OopMap{[88]=Oop [104]=Oop [96]=Oop off=444}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {virtual_call}
  0x0000000002dcbf1c: mov    %rax,%r8
  0x0000000002dcbf1f: shr    $0x10,%r8d
  0x0000000002dcbf23: xor    %rax,%r8
  0x0000000002dcbf26: mov    %r8,%rsi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x0000000002dcbf29: mov    0x68(%rsp),%rdi
  0x0000000002dcbf2e: mov    0x60(%rsp),%r9
  0x0000000002dcbf33: mov    0x58(%rsp),%rdx
  0x0000000002dcbf38: mov    %rdx,%r8
  0x0000000002dcbf3b: movabs $0x1be62df8,%rcx   ;   {metadata(method data for {method} {0x000000001bd56db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dcbf45: mov    0x8(%r8),%r8d
  0x0000000002dcbf49: shl    $0x3,%r8
  0x0000000002dcbf4d: cmp    0x120(%rcx),%r8
  0x0000000002dcbf54: jne    0x0000000002dcbf63
  0x0000000002dcbf56: addq   $0x1,0x128(%rcx)
  0x0000000002dcbf5e: jmpq   0x0000000002dcbfc9
  0x0000000002dcbf63: cmp    0x130(%rcx),%r8
  0x0000000002dcbf6a: jne    0x0000000002dcbf79
  0x0000000002dcbf6c: addq   $0x1,0x138(%rcx)
  0x0000000002dcbf74: jmpq   0x0000000002dcbfc9
  0x0000000002dcbf79: cmpq   $0x0,0x120(%rcx)
  0x0000000002dcbf84: jne    0x0000000002dcbf9d
  0x0000000002dcbf86: mov    %r8,0x120(%rcx)
  0x0000000002dcbf8d: movq   $0x1,0x128(%rcx)
  0x0000000002dcbf98: jmpq   0x0000000002dcbfc9
  0x0000000002dcbf9d: cmpq   $0x0,0x130(%rcx)
  0x0000000002dcbfa8: jne    0x0000000002dcbfc1
  0x0000000002dcbfaa: mov    %r8,0x130(%rcx)
  0x0000000002dcbfb1: movq   $0x1,0x138(%rcx)
  0x0000000002dcbfbc: jmpq   0x0000000002dcbfc9
  0x0000000002dcbfc1: addq   $0x1,0x118(%rcx)
  0x0000000002dcbfc9: mov    %rsi,%r8
  0x0000000002dcbfcc: mov    $0x0,%esi
  0x0000000002dcbfd1: mov    $0x1,%ecx          ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 611)

  0x0000000002dcbfd6: nop
  0x0000000002dcbfd7: callq  0x0000000002cf61a0  ; OopMap{off=636}
                                                ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ;   {optimized virtual_call}
  0x0000000002dcbfdc: add    $0x80,%rsp
  0x0000000002dcbfe3: pop    %rbp
  0x0000000002dcbfe4: test   %eax,-0x21cbeea(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dcbfea: retq   
  0x0000000002dcbfeb: mov    %rsi,0x8(%rsp)
  0x0000000002dcbff0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcbff8: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop r9=Oop off=669}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 611)
                                                ;   {runtime_call}
  0x0000000002dcbffd: jmpq   0x0000000002dcbdc1
  0x0000000002dcc002: mov    %rsi,0x8(%rsp)
  0x0000000002dcc007: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dcc00f: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop r9=Oop off=692}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x0000000002dcc014: jmpq   0x0000000002dcbe05
  0x0000000002dcc019: callq  0x0000000002dad680  ; OopMap{r8=Oop [88]=Oop [104]=Oop off=702}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x0000000002dcc01e: nop
  0x0000000002dcc01f: nop
  0x0000000002dcc020: mov    0x2a8(%r15),%rax
  0x0000000002dcc027: movabs $0x0,%r10
  0x0000000002dcc031: mov    %r10,0x2a8(%r15)
  0x0000000002dcc038: movabs $0x0,%r10
  0x0000000002dcc042: mov    %r10,0x2b0(%r15)
  0x0000000002dcc049: add    $0x80,%rsp
  0x0000000002dcc050: pop    %rbp
  0x0000000002dcc051: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dcc056: hlt    
  0x0000000002dcc057: hlt    
  0x0000000002dcc058: hlt    
  0x0000000002dcc059: hlt    
  0x0000000002dcc05a: hlt    
  0x0000000002dcc05b: hlt    
  0x0000000002dcc05c: hlt    
  0x0000000002dcc05d: hlt    
  0x0000000002dcc05e: hlt    
  0x0000000002dcc05f: hlt    
[Stub Code]
  0x0000000002dcc060: nop                       ;   {no_reloc}
  0x0000000002dcc061: nop
  0x0000000002dcc062: nop
  0x0000000002dcc063: nop
  0x0000000002dcc064: nop
  0x0000000002dcc065: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcc06f: jmpq   0x0000000002dcc06f  ;   {runtime_call}
  0x0000000002dcc074: nop
  0x0000000002dcc075: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dcc07f: jmpq   0x0000000002dcc07f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dcc084: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dcc089: mov    %rsp,-0x28(%rsp)
  0x0000000002dcc08e: sub    $0x80,%rsp
  0x0000000002dcc095: mov    %rax,0x78(%rsp)
  0x0000000002dcc09a: mov    %rcx,0x70(%rsp)
  0x0000000002dcc09f: mov    %rdx,0x68(%rsp)
  0x0000000002dcc0a4: mov    %rbx,0x60(%rsp)
  0x0000000002dcc0a9: mov    %rbp,0x50(%rsp)
  0x0000000002dcc0ae: mov    %rsi,0x48(%rsp)
  0x0000000002dcc0b3: mov    %rdi,0x40(%rsp)
  0x0000000002dcc0b8: mov    %r8,0x38(%rsp)
  0x0000000002dcc0bd: mov    %r9,0x30(%rsp)
  0x0000000002dcc0c2: mov    %r10,0x28(%rsp)
  0x0000000002dcc0c7: mov    %r11,0x20(%rsp)
  0x0000000002dcc0cc: mov    %r12,0x18(%rsp)
  0x0000000002dcc0d1: mov    %r13,0x10(%rsp)
  0x0000000002dcc0d6: mov    %r14,0x8(%rsp)
  0x0000000002dcc0db: mov    %r15,(%rsp)
  0x0000000002dcc0df: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dcc0e9: movabs $0x2dcc089,%rdx    ;   {internal_word}
  0x0000000002dcc0f3: mov    %rsp,%r8
  0x0000000002dcc0f6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dcc0fa: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dcc0ff: hlt    
[Deopt Handler Code]
  0x0000000002dcc100: movabs $0x2dcc100,%r10    ;   {section_word}
  0x0000000002dcc10a: push   %r10
  0x0000000002dcc10c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dcc111: hlt    
  0x0000000002dcc112: hlt    
  0x0000000002dcc113: hlt    
  0x0000000002dcc114: hlt    
  0x0000000002dcc115: hlt    
  0x0000000002dcc116: hlt    
  0x0000000002dcc117: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x0000000002dcbd60' size='1752' address='0x0000000002dcbbd0' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1368' scopes_pcs_offset='1520' dependencies_offset='1728' nul_chk_table_offset='1736' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1439' iicount='1439' stamp='0.904'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dd5fd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c073828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002dd6120: mov    0x8(%rdx),%r10d
  0x0000000002dd6124: shl    $0x3,%r10
  0x0000000002dd6128: cmp    %r10,%rax
  0x0000000002dd612b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd6131: data16 xchg %ax,%ax
  0x0000000002dd6134: nopl   0x0(%rax,%rax,1)
  0x0000000002dd613c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd6140: mov    %eax,-0x6000(%rsp)
  0x0000000002dd6147: push   %rbp
  0x0000000002dd6148: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@-1 (line 17)

  0x0000000002dd614c: mov    %rdx,(%rsp)
  0x0000000002dd6150: mov    0x178(%rdx),%r10d
  0x0000000002dd6157: test   %r10d,%r10d
  0x0000000002dd615a: jle    0x0000000002dd618e  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x0000000002dd615c: xor    %ebp,%ebp
  0x0000000002dd615e: xchg   %ax,%ax            ;*aload_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@10 (line 18)

  0x0000000002dd6160: mov    (%rsp),%r10
  0x0000000002dd6164: mov    0x17c(%r10),%r10d  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@11 (line 18)

  0x0000000002dd616b: test   %r10d,%r10d
  0x0000000002dd616e: je     0x0000000002dd61b4  ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)

  0x0000000002dd6170: lea    (%r12,%r10,8),%rdx  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@11 (line 18)

  0x0000000002dd6174: data16 xchg %ax,%ax
  0x0000000002dd6177: callq  0x0000000002cf61a0  ; OopMap{[0]=Oop off=92}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)
                                                ;   {optimized virtual_call}
  0x0000000002dd617c: mov    (%rsp),%r10
  0x0000000002dd6180: mov    0x178(%r10),%r11d
  0x0000000002dd6187: inc    %ebp               ;*iinc
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@18 (line 17)

  0x0000000002dd6189: cmp    %r11d,%ebp
  0x0000000002dd618c: jl     0x0000000002dd6160  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x0000000002dd618e: mov    (%rsp),%r10
  0x0000000002dd6192: mov    0x180(%r10),%r11d  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@25 (line 20)

  0x0000000002dd6199: test   %r11d,%r11d
  0x0000000002dd619c: je     0x0000000002dd61c1  ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@28 (line 20)

  0x0000000002dd619e: lea    (%r12,%r11,8),%rdx  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@25 (line 20)

  0x0000000002dd61a2: nop
  0x0000000002dd61a3: callq  0x0000000002cf61a0  ; OopMap{off=136}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@28 (line 20)
                                                ;   {optimized virtual_call}
  0x0000000002dd61a8: add    $0x20,%rsp
  0x0000000002dd61ac: pop    %rbp
  0x0000000002dd61ad: test   %eax,-0x21d61b3(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dd61b3: retq   
  0x0000000002dd61b4: mov    $0xfffffff6,%edx
  0x0000000002dd61b9: xchg   %ax,%ax
  0x0000000002dd61bb: callq  0x0000000002cf57a0  ; OopMap{off=160}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x0000000002dd61c0: int3                      ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)

  0x0000000002dd61c1: mov    $0xfffffff6,%edx
  0x0000000002dd61c6: nop
  0x0000000002dd61c7: callq  0x0000000002cf57a0  ; OopMap{off=172}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002dd61cc: int3                      ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@28 (line 20)

  0x0000000002dd61cd: mov    %rax,%rdx
  0x0000000002dd61d0: jmp    0x0000000002dd61d5  ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)

  0x0000000002dd61d2: mov    %rax,%rdx          ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@28 (line 20)

  0x0000000002dd61d5: add    $0x20,%rsp
  0x0000000002dd61d9: pop    %rbp
  0x0000000002dd61da: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002dd61df: hlt    
[Stub Code]
  0x0000000002dd61e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002dd61ea: jmpq   0x0000000002dd61ea  ;   {runtime_call}
  0x0000000002dd61ef: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd61f9: jmpq   0x0000000002dd61f9  ;   {runtime_call}
[Exception Handler]
  0x0000000002dd61fe: jmpq   0x0000000002dad0e0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002dd6203: callq  0x0000000002dd6208
  0x0000000002dd6208: subq   $0x5,(%rsp)
  0x0000000002dd620d: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd6212: hlt    
  0x0000000002dd6213: hlt    
  0x0000000002dd6214: hlt    
  0x0000000002dd6215: hlt    
  0x0000000002dd6216: hlt    
  0x0000000002dd6217: hlt    
<nmethod compile_id='63' compiler='C2' level='4' entry='0x0000000002dd6120' size='1088' address='0x0000000002dd5fd0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='608' scopes_pcs_offset='696' dependencies_offset='1032' handler_table_offset='1040' oops_offset='584' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='988269' iicount='12' stamp='0.965'/>
<writer thread='19128'/>
Decoding compiled method 0x0000000002dde250:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bde9d58} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xc0]  (sp of caller)
  0x0000000002dde520: mov    0x8(%rdx),%r10d
  0x0000000002dde524: shl    $0x3,%r10
  0x0000000002dde528: cmp    %r10,%rax
  0x0000000002dde52b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dde531: data16 xchg %ax,%ax
  0x0000000002dde534: nopl   0x0(%rax,%rax,1)
  0x0000000002dde53c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dde540: mov    %eax,-0x6000(%rsp)
  0x0000000002dde547: push   %rbp
  0x0000000002dde548: sub    $0xb0,%rsp         ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde54f: mov    %rdx,%r11
  0x0000000002dde552: mov    %r8,%rcx
  0x0000000002dde555: mov    0xc(%r8),%ebx      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x0000000002de3275
  0x0000000002dde559: mov    0xc(%r12,%rbx,8),%r10d  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x0000000002de3281
  0x0000000002dde55e: movzwl 0xc(%rdx),%r9d     ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde563: test   %r10d,%r10d
  0x0000000002dde566: jle    0x0000000002ddfc34  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde56c: movzwl 0xe(%rdx),%r8d     ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde571: test   %r10d,%r10d
  0x0000000002dde574: jbe    0x0000000002de17a4  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde57a: mov    %r10d,%edx
  0x0000000002dde57d: dec    %edx               ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde57f: cmp    %r10d,%edx
  0x0000000002dde582: jae    0x0000000002de17a4  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde588: mov    %edx,0x20(%rsp)
  0x0000000002dde58c: mov    %r9d,0x3c(%rsp)
  0x0000000002dde591: mov    %r11,0x50(%rsp)
  0x0000000002dde596: mov    %rcx,0x40(%rsp)
  0x0000000002dde59b: movslq %r10d,%rcx
  0x0000000002dde59e: mov    %r10d,%r11d
  0x0000000002dde5a1: shl    %r11d              ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@33 (line 179)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde5a4: shl    %rcx
  0x0000000002dde5a7: mov    %r11d,%r9d
  0x0000000002dde5aa: inc    %r9d               ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde5ad: mov    %r9d,0x28(%rsp)
  0x0000000002dde5b2: add    $0x17,%rcx         ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde5b6: add    $0x2,%r11d         ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde5ba: mov    %r11d,0x24(%rsp)
  0x0000000002dde5bf: mov    %rcx,%r9
  0x0000000002dde5c2: and    $0xfffffffffffffff8,%r9  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde5c6: shr    $0x3,%rcx
  0x0000000002dde5ca: lea    (%r12,%rbx,8),%r11
  0x0000000002dde5ce: mov    %r11,0x30(%rsp)
  0x0000000002dde5d3: mov    %ebx,0x48(%rsp)
  0x0000000002dde5d7: add    $0xfffffffffffffffe,%rcx
  0x0000000002dde5db: mov    $0xf80002da,%ebx   ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002dde5e0: movabs $0x0,%r11
  0x0000000002dde5ea: lea    (%r11,%rbx,8),%r11
  0x0000000002dde5ee: mov    %r11,0x58(%rsp)
  0x0000000002dde5f3: mov    $0x2,%r11d
  0x0000000002dde5f9: cmp    %r11d,%r10d
  0x0000000002dde5fc: mov    %r10d,%r11d
  0x0000000002dde5ff: mov    $0x2,%edi
  0x0000000002dde604: cmovg  %edi,%r11d         ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde608: mov    %r11d,0x2c(%rsp)
  0x0000000002dde60d: mov    $0x1,%ebx
  0x0000000002dde612: cmp    %ebx,%r10d
  0x0000000002dde615: mov    %r10d,0x4c(%rsp)
  0x0000000002dde61a: mov    $0x1,%r11d
  0x0000000002dde620: cmovg  %r11d,%r10d        ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde624: mov    %r10d,0x38(%rsp)
  0x0000000002dde629: mov    $0x1,%r10d
  0x0000000002dde62f: sub    0x4c(%rsp),%r10d   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde634: mov    %r10d,0x60(%rsp)
  0x0000000002dde639: mov    $0x80000000,%r11d
  0x0000000002dde63f: mov    0x4c(%rsp),%ebx
  0x0000000002dde643: cmp    %edx,%ebx
  0x0000000002dde645: mov    %edx,%ebx
  0x0000000002dde647: cmovl  %r11d,%ebx         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde64b: mov    %ebx,0x64(%rsp)
  0x0000000002dde64f: xor    %r10d,%r10d
  0x0000000002dde652: xor    %edi,%edi
  0x0000000002dde654: mov    $0x2,%ebx
  0x0000000002dde659: mov    $0x1,%r11d
  0x0000000002dde65f: mov    %ebx,0x88(%rsp)
  0x0000000002dde666: mov    %r11d,0x78(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde66b: test   %r10d,%r10d
  0x0000000002dde66e: jl     0x0000000002de17c9
  0x0000000002dde674: cmp    0x4c(%rsp),%r10d
  0x0000000002dde679: jge    0x0000000002de1805
  0x0000000002dde67f: mov    0x30(%rsp),%r11
  0x0000000002dde684: movzwl 0x10(%r11,%r10,2),%ebx
  0x0000000002dde68a: cmp    %r8d,%ebx
  0x0000000002dde68d: je     0x0000000002ddfc25
  0x0000000002dde693: cmp    0x3c(%rsp),%ebx
  0x0000000002dde697: je     0x0000000002dde7a1  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde69d: cmp    $0x3a,%ebx
  0x0000000002dde6a0: je     0x0000000002ddf163  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde6a6: inc    %r10d
  0x0000000002dde6a9: cmp    0x38(%rsp),%r10d
  0x0000000002dde6ae: jge    0x0000000002dde6b4  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde6b0: mov    %ebx,%edi
  0x0000000002dde6b2: jmp    0x0000000002dde66b
  0x0000000002dde6b4: mov    0x2c(%rsp),%r11d
  0x0000000002dde6b9: add    $0xfffffffd,%r11d
  0x0000000002dde6bd: cmp    %r11d,%r10d
  0x0000000002dde6c0: jge    0x0000000002ddeec0  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde6c6: jmp    0x0000000002dde70d
  0x0000000002dde6c8: cmp    0x3c(%rsp),%ebx
  0x0000000002dde6cc: jne    0x0000000002dde727
  0x0000000002dde6ce: jmp    0x0000000002dde6de
  0x0000000002dde6d0: cmp    0x3c(%rsp),%ebx
  0x0000000002dde6d4: jne    0x0000000002dde758  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde6da: add    $0x2,%r10d         ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde6de: mov    %ebx,%r11d
  0x0000000002dde6e1: mov    %edi,%ebx
  0x0000000002dde6e3: mov    %r11d,%edi
  0x0000000002dde6e6: jmpq   0x0000000002dde777
  0x0000000002dde6eb: cmp    0x3c(%rsp),%edi
  0x0000000002dde6ef: jne    0x0000000002dde73f  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde6f1: inc    %r10d              ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde6f4: jmpq   0x0000000002dde777
  0x0000000002dde6f9: nopl   0x0(%rax)          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde700: add    $0x4,%r10d         ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde704: cmp    %r11d,%r10d
  0x0000000002dde707: jge    0x0000000002ddeec0  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde70d: mov    0x30(%rsp),%rdi
  0x0000000002dde712: movzwl 0x10(%rdi,%r10,2),%edi  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde718: cmp    %r8d,%edi
  0x0000000002dde71b: je     0x0000000002dde7ad  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde721: cmp    0x3c(%rsp),%edi
  0x0000000002dde725: je     0x0000000002dde6c8  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde727: movslq %r10d,%rdx
  0x0000000002dde72a: mov    0x30(%rsp),%rbx
  0x0000000002dde72f: movzwl 0x12(%rbx,%rdx,2),%ebx  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde734: cmp    %r8d,%ebx
  0x0000000002dde737: je     0x0000000002dde7b8  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde739: cmp    0x3c(%rsp),%ebx
  0x0000000002dde73d: je     0x0000000002dde6eb  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde73f: mov    0x30(%rsp),%rdi
  0x0000000002dde744: movzwl 0x14(%rdi,%rdx,2),%edi  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde749: cmp    %r8d,%edi
  0x0000000002dde74c: je     0x0000000002dde7c7  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde74e: cmp    0x3c(%rsp),%edi
  0x0000000002dde752: je     0x0000000002dde6d0  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde758: mov    0x30(%rsp),%rbx
  0x0000000002dde75d: movzwl 0x16(%rbx,%rdx,2),%ebx  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde762: cmp    %r8d,%ebx
  0x0000000002dde765: je     0x0000000002dde7d7  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde767: cmp    0x3c(%rsp),%ebx
  0x0000000002dde76b: jne    0x0000000002dde700  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@49 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde76d: cmp    0x3c(%rsp),%edi
  0x0000000002dde771: jne    0x0000000002dde700  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde773: add    $0x3,%r10d         ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde777: mov    %ebx,%ebp
  0x0000000002dde779: mov    %edi,%ebx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde77b: mov    $0xffffff65,%edx
  0x0000000002dde780: mov    0x40(%rsp),%r11
  0x0000000002dde785: mov    %r11,0x20(%rsp)
  0x0000000002dde78a: mov    %r8d,0x30(%rsp)
  0x0000000002dde78f: mov    %r10d,0x34(%rsp)
  0x0000000002dde794: mov    %ebx,0x38(%rsp)
  0x0000000002dde798: data16 xchg %ax,%ax
  0x0000000002dde79b: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [80]=Oop off=640}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)
                                                ;   {runtime_call}
  0x0000000002dde7a0: int3                      ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002dde7a1: cmp    0x3c(%rsp),%edi
  0x0000000002dde7a5: jne    0x0000000002dde69d  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde7ab: jmp    0x0000000002dde777
  0x0000000002dde7ad: cmp    0x3c(%rsp),%ebx
  0x0000000002dde7b1: jne    0x0000000002dde7e5
  0x0000000002dde7b3: jmpq   0x0000000002de1fb0
  0x0000000002dde7b8: cmp    0x3c(%rsp),%edi
  0x0000000002dde7bc: je     0x0000000002de1fb4  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde7c2: inc    %r10d              ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde7c5: jmp    0x0000000002dde7e5
  0x0000000002dde7c7: cmp    0x3c(%rsp),%ebx
  0x0000000002dde7cb: je     0x0000000002de1fac  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde7d1: add    $0x2,%r10d         ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde7d5: jmp    0x0000000002dde7e5
  0x0000000002dde7d7: cmp    0x3c(%rsp),%edi
  0x0000000002dde7db: je     0x0000000002de1fb9  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde7e1: add    $0x3,%r10d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde7e5: mov    0x4c(%rsp),%r11d
  0x0000000002dde7ea: test   %r11d,%r11d
  0x0000000002dde7ed: je     0x0000000002de1b6d  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde7f3: cmp    $0x3,%r10d
  0x0000000002dde7f7: jge    0x0000000002de1b89  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde7fd: cmp    $0x80000,%r11d
  0x0000000002dde804: ja     0x0000000002de0ae0
  0x0000000002dde80a: mov    0x60(%r15),%r10
  0x0000000002dde80e: mov    %r10,%r11
  0x0000000002dde811: add    %r9,%r11
  0x0000000002dde814: cmp    0x70(%r15),%r11
  0x0000000002dde818: jae    0x0000000002de0ae0
  0x0000000002dde81e: mov    %r11,0x60(%r15)
  0x0000000002dde822: prefetchw 0xc0(%r11)
  0x0000000002dde82a: movq   $0x1,(%r10)
  0x0000000002dde831: prefetchw 0x100(%r11)
  0x0000000002dde839: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x0000000002dde841: mov    0x4c(%rsp),%r8d
  0x0000000002dde846: mov    %r8d,0xc(%r10)
  0x0000000002dde84a: prefetchw 0x140(%r11)
  0x0000000002dde852: mov    %r10,%rdi
  0x0000000002dde855: add    $0x10,%rdi
  0x0000000002dde859: xor    %rax,%rax
  0x0000000002dde85c: shl    $0x3,%rcx
  0x0000000002dde860: rep rex.W stos %al,%es:(%rdi)
  0x0000000002dde863: prefetchw 0x180(%r11)     ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde86b: xor    %r11d,%r11d        ;*getfield value
                                                ; - java.lang.StringBuffer::toString@9 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde86e: test   %r11d,%r11d
  0x0000000002dde871: jl     0x0000000002de1a9d  ;*getfield count
                                                ; - java.lang.StringBuffer::toString@14 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde877: cmp    0x4c(%rsp),%r11d
  0x0000000002dde87c: jge    0x0000000002de1ad1  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde882: mov    %r11d,%r9d
  0x0000000002dde885: mov    0x30(%rsp),%r11
  0x0000000002dde88a: movzwl 0x10(%r11,%r9,2),%r11d  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde890: cmp    $0x5c,%r11d
  0x0000000002dde894: je     0x0000000002ddf107
  0x0000000002dde89a: cmp    $0x2f,%r11d
  0x0000000002dde89e: je     0x0000000002ddf107  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde8a4: mov    0x30(%rsp),%rbx
  0x0000000002dde8a9: mov    %r9d,%r11d         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde8ac: mov    0x4c(%rsp),%edi
  0x0000000002dde8b0: sub    %r11d,%edi
  0x0000000002dde8b3: mov    %r10,%rcx
  0x0000000002dde8b6: add    $0x10,%rcx         ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde8ba: mov    %r10,%r8
  0x0000000002dde8bd: shr    $0x3,%r8           ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde8c1: cmp    $0x2,%edi
  0x0000000002dde8c4: jl     0x0000000002dde95a  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde8ca: test   %r11d,%r11d
  0x0000000002dde8cd: jl     0x0000000002de1ca8  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde8d3: cmp    0x4c(%rsp),%r11d
  0x0000000002dde8d8: jge    0x0000000002de1d51  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde8de: cmp    0x4c(%rsp),%r11d
  0x0000000002dde8e3: jae    0x0000000002de1b09  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde8e9: movzwl 0x10(%rbx,%r11,2),%r9d  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde8ef: cmp    $0x61,%r9d
  0x0000000002dde8f3: jge    0x0000000002de1d85
  0x0000000002dde8f9: cmp    $0x41,%r9d
  0x0000000002dde8fd: jl     0x0000000002de1cdd
  0x0000000002dde903: cmp    $0x5a,%r9d
  0x0000000002dde907: jg     0x0000000002de1dc5  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde90d: mov    %r9d,0x70(%rsp)
  0x0000000002dde912: mov    %rcx,0x30(%rsp)
  0x0000000002dde917: mov    %r11d,0x64(%rsp)
  0x0000000002dde91c: mov    %r10,0x68(%rsp)
  0x0000000002dde921: mov    %r11d,%ebp
  0x0000000002dde924: inc    %ebp               ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde926: test   %ebp,%ebp
  0x0000000002dde928: jl     0x0000000002de1d1d  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde92e: cmp    0x4c(%rsp),%ebp
  0x0000000002dde932: jge    0x0000000002de1e01  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde938: cmp    0x4c(%rsp),%ebp
  0x0000000002dde93c: jae    0x0000000002de1b41  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde942: movslq %r11d,%r10
  0x0000000002dde945: movzwl 0x12(%rbx,%r10,2),%r10d
  0x0000000002dde94b: cmp    $0x3a,%r10d
  0x0000000002dde94f: je     0x0000000002ddf5a4  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde955: mov    0x68(%rsp),%r10    ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde95a: mov    0x4c(%rsp),%r11d
  0x0000000002dde95f: cmp    $0x2,%r11d
  0x0000000002dde963: jl     0x0000000002dde992  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde965: mov    0x48(%rsp),%r9d
  0x0000000002dde96a: movzwl 0x10(%r12,%r9,8),%ebx  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde970: cmp    $0x5c,%ebx
  0x0000000002dde973: je     0x0000000002ddfa8a  ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@122 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde979: cmp    $0x2f,%ebx
  0x0000000002dde97c: je     0x0000000002ddfa8a  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde982: xor    %edi,%edi
  0x0000000002dde984: xor    %ebp,%ebp
  0x0000000002dde986: xor    %edx,%edx
  0x0000000002dde988: mov    0x3c(%rsp),%ecx
  0x0000000002dde98c: mov    0x78(%rsp),%ebx
  0x0000000002dde990: jmp    0x0000000002dde9a0
  0x0000000002dde992: xor    %edi,%edi
  0x0000000002dde994: xor    %ebp,%ebp
  0x0000000002dde996: xor    %edx,%edx
  0x0000000002dde998: mov    0x3c(%rsp),%ecx
  0x0000000002dde99c: mov    0x78(%rsp),%ebx    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde9a0: cmp    %r11d,%ebp
  0x0000000002dde9a3: jge    0x0000000002ddfd86  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dde9a9: xor    %r9d,%r9d
  0x0000000002dde9ac: xor    %edi,%edi
  0x0000000002dde9ae: cmp    %r9d,%ebx
  0x0000000002dde9b1: cmovl  %edi,%ebx
  0x0000000002dde9b4: cmp    %r11d,%ebx
  0x0000000002dde9b7: cmovg  %r11d,%ebx         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde9bb: mov    %ebp,%esi
  0x0000000002dde9bd: add    %edx,%esi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde9bf: mov    %ebp,%edi
  0x0000000002dde9c1: inc    %edi               ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde9c3: test   %ebp,%ebp
  0x0000000002dde9c5: jl     0x0000000002de1896  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde9cb: mov    0x40(%rsp),%rax
  0x0000000002dde9d0: mov    0xc(%rax),%r10d
  0x0000000002dde9d4: mov    0xc(%r12,%r10,8),%r9d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x0000000002de325d
  0x0000000002dde9d9: cmp    %r9d,%ebp
  0x0000000002dde9dc: jge    0x0000000002de18c1  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde9e2: shl    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde9e6: cmp    %r9d,%ebp
  0x0000000002dde9e9: jae    0x0000000002de1674  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dde9ef: mov    %edi,0x2c(%rsp)
  0x0000000002dde9f3: mov    %esi,0x48(%rsp)
  0x0000000002dde9f7: mov    %edx,0x28(%rsp)
  0x0000000002dde9fb: mov    %ebp,%edi
  0x0000000002dde9fd: mov    %ebx,0x24(%rsp)
  0x0000000002ddea01: mov    %ecx,0x34(%rsp)
  0x0000000002ddea05: mov    %r11d,0x30(%rsp)
  0x0000000002ddea0a: movzwl 0x10(%r10,%rbp,2),%ecx
  0x0000000002ddea10: mov    %ecx,0x4c(%rsp)
  0x0000000002ddea14: mov    0xc(%r12,%r8,8),%ebp  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea19: mov    %esi,%ecx
  0x0000000002ddea1b: sub    %ebp,%ecx
  0x0000000002ddea1d: mov    %esi,%ebx
  0x0000000002ddea1f: inc    %ebx               ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea21: mov    %ebx,0x60(%rsp)
  0x0000000002ddea25: inc    %ecx
  0x0000000002ddea27: mov    %ebp,%r11d
  0x0000000002ddea2a: shl    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea2d: mov    %r11d,%edx
  0x0000000002ddea30: sub    %esi,%edx
  0x0000000002ddea32: lea    (%r12,%r8,8),%rbx  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea36: mov    %rbx,0x38(%rsp)
  0x0000000002ddea3b: lea    0x10(%r12,%r8,8),%rbx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea40: mov    %rbx,0x68(%rsp)
  0x0000000002ddea45: inc    %edx
  0x0000000002ddea47: add    $0x2,%r11d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea4b: mov    %r11d,%esi
  0x0000000002ddea4e: mov    0x4c(%rsp),%r11d
  0x0000000002ddea53: cmp    $0x5c,%r11d
  0x0000000002ddea57: je     0x0000000002ddf082  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea5d: cmp    $0x2f,%r11d
  0x0000000002ddea61: je     0x0000000002ddf082  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea67: test   %ecx,%ecx
  0x0000000002ddea69: jg     0x0000000002ddfad8  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea6f: mov    0x38(%rsp),%r10
  0x0000000002ddea74: mov    0xc(%r10),%r9d
  0x0000000002ddea78: mov    0x48(%rsp),%ebp
  0x0000000002ddea7c: cmp    %r9d,%ebp
  0x0000000002ddea7f: jae    0x0000000002de0e0b  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea85: mov    0x4c(%rsp),%r9d
  0x0000000002ddea8a: mov    %r9w,0x10(%r10,%rbp,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea90: mov    0x34(%rsp),%ecx    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea94: mov    0x2c(%rsp),%edi
  0x0000000002ddea98: cmp    0x24(%rsp),%edi
  0x0000000002ddea9c: jge    0x0000000002ddeab2  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddea9e: mov    0x30(%rsp),%r11d
  0x0000000002ddeaa3: mov    0x24(%rsp),%ebx
  0x0000000002ddeaa7: mov    %edi,%ebp
  0x0000000002ddeaa9: mov    0x28(%rsp),%edx
  0x0000000002ddeaad: jmpq   0x0000000002dde9bb
  0x0000000002ddeab2: cmp    0x20(%rsp),%edi
  0x0000000002ddeab6: jge    0x0000000002dded45  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeabc: jmpq   0x0000000002ddec95  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeac1: mov    0x24(%rsp),%ebx
  0x0000000002ddeac5: cmp    %r9d,%ebx
  0x0000000002ddeac8: jge    0x0000000002de14e9  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeace: cmp    %r9d,%ebx
  0x0000000002ddead1: jae    0x0000000002de11e9  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddead7: movslq %r13d,%r11
  0x0000000002ddeada: movzwl 0x12(%r10,%r11,2),%r10d  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddeae0: cmp    $0x5c,%r10d
  0x0000000002ddeae4: je     0x0000000002de123f  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddeaea: cmp    $0x2f,%r10d
  0x0000000002ddeaee: je     0x0000000002de1255  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@49 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddeaf4: cmp    0x30(%rsp),%ebx
  0x0000000002ddeaf8: je     0x0000000002de1532  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeafe: test   %ecx,%ecx
  0x0000000002ddeb00: jg     0x0000000002ddef42
  0x0000000002ddeb06: mov    0x38(%rsp),%r11
  0x0000000002ddeb0b: mov    0xc(%r11),%r10d
  0x0000000002ddeb0f: mov    0x48(%rsp),%ebp
  0x0000000002ddeb13: cmp    %r10d,%ebp
  0x0000000002ddeb16: jae    0x0000000002de128f  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeb1c: mov    0x34(%rsp),%ecx
  0x0000000002ddeb20: mov    %cx,0x10(%r11,%rbp,2)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeb26: jmpq   0x0000000002ddec85
  0x0000000002ddeb2b: mov    0x60(%rsp),%esi    ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeb2f: mov    %esi,%r10d
  0x0000000002ddeb32: test   %esi,%esi
  0x0000000002ddeb34: jle    0x0000000002de19e4  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeb3a: mov    %esi,%r9d
  0x0000000002ddeb3d: mov    $0x7ffffff7,%ecx
  0x0000000002ddeb42: sub    %esi,%ecx          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeb44: test   %ecx,%ecx
  0x0000000002ddeb46: jl     0x0000000002de1a3d  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeb4c: cmp    $0x80000,%esi
  0x0000000002ddeb52: ja     0x0000000002de1841
  0x0000000002ddeb58: movslq %esi,%r10          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddeb5b: mov    %esi,0x2c(%rsp)
  0x0000000002ddeb5f: shl    %r10
  0x0000000002ddeb62: add    $0x17,%r10         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddeb66: mov    %r10,0x70(%rsp)
  0x0000000002ddeb6b: and    $0xfffffffffffffff8,%r10
  0x0000000002ddeb6f: mov    %r10,0x78(%rsp)
  0x0000000002ddeb74: cmp    $0x80000,%esi
  0x0000000002ddeb7a: ja     0x0000000002de0ac6
  0x0000000002ddeb80: mov    0x60(%r15),%r8
  0x0000000002ddeb84: mov    %r8,%r10
  0x0000000002ddeb87: mov    0x78(%rsp),%r11
  0x0000000002ddeb8c: add    %r11,%r10
  0x0000000002ddeb8f: cmp    0x70(%r15),%r10
  0x0000000002ddeb93: jae    0x0000000002de0ac6
  0x0000000002ddeb99: mov    %r10,0x60(%r15)
  0x0000000002ddeb9d: prefetchw 0xc0(%r10)
  0x0000000002ddeba5: movq   $0x1,(%r8)
  0x0000000002ddebac: prefetchw 0x100(%r10)
  0x0000000002ddebb4: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000002ddebbc: mov    %esi,0xc(%r8)
  0x0000000002ddebc0: prefetchw 0x140(%r10)
  0x0000000002ddebc8: prefetchw 0x180(%r10)
  0x0000000002ddebd0: mov    %r8,0x80(%rsp)
  0x0000000002ddebd8: cmp    0x2c(%rsp),%ebp
  0x0000000002ddebdc: mov    0x2c(%rsp),%esi
  0x0000000002ddebe0: cmovl  %ebp,%esi          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddebe3: mov    %r8,%rdx
  0x0000000002ddebe6: add    $0x10,%rdx         ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddebea: mov    0x70(%rsp),%r10
  0x0000000002ddebef: shr    $0x3,%r10          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddebf3: mov    %r10,%rcx
  0x0000000002ddebf6: add    $0xfffffffffffffffe,%rcx  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddebfa: cmp    %esi,%ebp
  0x0000000002ddebfc: jb     0x0000000002de1849  ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddec02: mov    0x2c(%rsp),%ebp
  0x0000000002ddec06: cmp    %esi,%ebp
  0x0000000002ddec08: jb     0x0000000002de1849  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddec0e: test   %esi,%esi
  0x0000000002ddec10: jle    0x0000000002de1875
  0x0000000002ddec16: cmp    %ebp,%esi
  0x0000000002ddec18: jl     0x0000000002de04f6
  0x0000000002ddec1e: mov    0x78(%rsp),%r8
  0x0000000002ddec23: add    $0xfffffffffffffff0,%r8
  0x0000000002ddec27: shr    $0x3,%r8           ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddec2b: mov    0x68(%rsp),%rcx
  0x0000000002ddec30: movabs $0x2d02ca0,%r10
  0x0000000002ddec3a: callq  *%r10              ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddec3d: mov    0x80(%rsp),%r10
  0x0000000002ddec45: mov    %r10,%r8
  0x0000000002ddec48: shr    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddec4c: mov    %r10,0x38(%rsp)
  0x0000000002ddec51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002ddec5c: data16 data16 xchg %ax,%ax  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddec60: mov    0x38(%rsp),%r10
  0x0000000002ddec65: mov    0xc(%r10),%r11d
  0x0000000002ddec69: mov    0x48(%rsp),%ebp
  0x0000000002ddec6d: cmp    %r11d,%ebp
  0x0000000002ddec70: jae    0x0000000002de0e01  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddec76: mov    0x4c(%rsp),%r11d
  0x0000000002ddec7b: mov    %r11w,0x10(%r10,%rbp,2)
  0x0000000002ddec81: mov    0x34(%rsp),%ecx    ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddec85: mov    0x24(%rsp),%ebp
  0x0000000002ddec89: cmp    0x20(%rsp),%ebp
  0x0000000002ddec8d: jge    0x0000000002dded47  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddec93: mov    %ebp,%edi          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddec95: mov    0x40(%rsp),%rax
  0x0000000002ddec9a: mov    0xc(%rax),%r11d    ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddec9e: mov    0xc(%r12,%r11,8),%r9d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x0000000002de325d
  0x0000000002ddeca3: mov    %edi,%esi
  0x0000000002ddeca5: add    0x28(%rsp),%esi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddeca9: mov    %edi,%ebp
  0x0000000002ddecab: inc    %ebp               ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddecad: cmp    %r9d,%edi
  0x0000000002ddecb0: jge    0x0000000002de10f4  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddecb6: lea    (%r12,%r11,8),%r10  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddecba: cmp    %r9d,%edi
  0x0000000002ddecbd: jae    0x0000000002de0dc9  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddecc3: mov    %edi,%r13d
  0x0000000002ddecc6: mov    %esi,0x48(%rsp)
  0x0000000002ddecca: mov    %ebp,0x24(%rsp)
  0x0000000002ddecce: mov    %ecx,0x34(%rsp)
  0x0000000002ddecd2: movzwl 0x10(%r10,%rdi,2),%r11d  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddecd8: mov    %r11d,0x4c(%rsp)
  0x0000000002ddecdd: mov    0xc(%r12,%r8,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddece2: mov    %esi,%ecx
  0x0000000002ddece4: sub    %ebp,%ecx
  0x0000000002ddece6: lea    (%r12,%r8,8),%r11  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddecea: mov    %r11,0x38(%rsp)
  0x0000000002ddecef: lea    0x10(%r12,%r8,8),%r11  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddecf4: mov    %r11,0x68(%rsp)
  0x0000000002ddecf9: inc    %ecx               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddecfb: mov    %ebp,%r11d
  0x0000000002ddecfe: shl    %r11d              ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dded01: mov    %r11d,%edi
  0x0000000002dded04: sub    %esi,%edi
  0x0000000002dded06: mov    %esi,%ebx
  0x0000000002dded08: inc    %ebx               ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dded0a: mov    %ebx,0x60(%rsp)
  0x0000000002dded0e: inc    %edi               ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dded10: add    $0x2,%r11d         ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded14: mov    %r11d,%esi
  0x0000000002dded17: mov    0x4c(%rsp),%r11d
  0x0000000002dded1c: cmp    $0x5c,%r11d
  0x0000000002dded20: je     0x0000000002ddeac1  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dded26: cmp    $0x2f,%r11d
  0x0000000002dded2a: je     0x0000000002ddeac1  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dded30: test   %ecx,%ecx
  0x0000000002dded32: jle    0x0000000002ddec60  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dded38: test   %edi,%edi
  0x0000000002dded3a: jl     0x0000000002ddeb2b  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002dded40: jmpq   0x0000000002ddeb2f
  0x0000000002dded45: mov    %edi,%ebp          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded47: cmp    0x30(%rsp),%ebp
  0x0000000002dded4b: jge    0x0000000002ddee3c  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded51: data16 xchg %ax,%ax       ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded54: mov    %ebp,%esi
  0x0000000002dded56: add    0x28(%rsp),%esi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded5a: mov    %ebp,%edi
  0x0000000002dded5c: inc    %edi               ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded5e: test   %ebp,%ebp
  0x0000000002dded60: jl     0x0000000002de1891  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded66: mov    0x40(%rsp),%rax
  0x0000000002dded6b: mov    0xc(%rax),%r11d    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded6f: mov    0xc(%r12,%r11,8),%r9d  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x0000000002de325d
  0x0000000002dded74: cmp    %r9d,%ebp
  0x0000000002dded77: jge    0x0000000002de1ba1  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded7d: lea    (%r12,%r11,8),%r10  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded81: cmp    %r9d,%ebp
  0x0000000002dded84: jae    0x0000000002de1887  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded8a: mov    %edi,0x2c(%rsp)
  0x0000000002dded8e: mov    %esi,0x48(%rsp)
  0x0000000002dded92: mov    %ecx,0x34(%rsp)
  0x0000000002dded96: movzwl 0x10(%r10,%rbp,2),%ecx  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002dded9c: mov    %ecx,0x4c(%rsp)
  0x0000000002ddeda0: mov    %ebp,%esi
  0x0000000002ddeda2: mov    0xc(%r12,%r8,8),%ebp  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeda7: mov    0x48(%rsp),%ecx
  0x0000000002ddedab: sub    %ebp,%ecx
  0x0000000002ddedad: lea    (%r12,%r8,8),%r11  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddedb1: mov    %r11,0x20(%rsp)
  0x0000000002ddedb6: lea    0x10(%r12,%r8,8),%r11  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddedbb: mov    %r11,0x38(%rsp)
  0x0000000002ddedc0: inc    %ecx
  0x0000000002ddedc2: mov    %ebp,%r11d
  0x0000000002ddedc5: shl    %r11d              ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddedc8: mov    %r11d,%edi
  0x0000000002ddedcb: sub    0x48(%rsp),%edi
  0x0000000002ddedcf: mov    0x48(%rsp),%ebx
  0x0000000002ddedd3: inc    %ebx               ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddedd5: mov    %ebx,0x60(%rsp)
  0x0000000002ddedd9: inc    %edi
  0x0000000002ddeddb: add    $0x2,%r11d         ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeddf: mov    %r11d,%edx
  0x0000000002ddede2: mov    0x4c(%rsp),%r11d
  0x0000000002ddede7: cmp    $0x5c,%r11d
  0x0000000002ddedeb: je     0x0000000002ddf524
  0x0000000002ddedf1: cmp    $0x2f,%r11d
  0x0000000002ddedf5: je     0x0000000002ddf524
  0x0000000002ddedfb: test   %ecx,%ecx
  0x0000000002ddedfd: jg     0x0000000002ddfc44  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddee03: mov    0x20(%rsp),%r10
  0x0000000002ddee08: mov    0xc(%r10),%r11d
  0x0000000002ddee0c: mov    0x48(%rsp),%ebp
  0x0000000002ddee10: cmp    %r11d,%ebp
  0x0000000002ddee13: jae    0x0000000002de0e0b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddee19: mov    0x4c(%rsp),%r9d
  0x0000000002ddee1e: mov    %r9w,0x10(%r10,%rbp,2)  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddee24: mov    0x34(%rsp),%ecx
  0x0000000002ddee28: mov    0x2c(%rsp),%r10d   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddee2d: cmp    0x30(%rsp),%r10d
  0x0000000002ddee32: jge    0x0000000002ddee3c  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddee34: mov    %r10d,%ebp
  0x0000000002ddee37: jmpq   0x0000000002dded54  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddee3c: lea    (%r12,%r8,8),%rdx  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddee40: mov    %r8d,0x20(%rsp)
  0x0000000002ddee45: lea    0xa0(%rsp),%rbp    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddee4d: xor    %r8d,%r8d
  0x0000000002ddee50: mov    0x60(%rsp),%r9d
  0x0000000002ddee55: xchg   %ax,%ax
  0x0000000002ddee57: callq  0x0000000002cf6620  ; OopMap{[32]=NarrowOop off=2364}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {static_call}
  0x0000000002ddee5c: mov    %rax,0x28(%rsp)
  0x0000000002ddee61: mov    0x60(%r15),%rax
  0x0000000002ddee65: mov    %rax,%r10
  0x0000000002ddee68: add    $0x18,%r10
  0x0000000002ddee6c: cmp    0x70(%r15),%r10
  0x0000000002ddee70: jae    0x0000000002de0b04
  0x0000000002ddee76: mov    %r10,0x60(%r15)
  0x0000000002ddee7a: prefetchw 0xc0(%r10)
  0x0000000002ddee82: mov    0x58(%rsp),%r10
  0x0000000002ddee87: mov    0xa8(%r10),%r10
  0x0000000002ddee8e: mov    %r10,(%rax)
  0x0000000002ddee91: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002ddee98: mov    %r12d,0xc(%rax)
  0x0000000002ddee9c: mov    %r12,0x10(%rax)
  0x0000000002ddeea0: mov    0x28(%rsp),%r10
  0x0000000002ddeea5: shr    $0x3,%r10
  0x0000000002ddeea9: mov    %r10d,0xc(%rax)
  0x0000000002ddeead: mov    %rax,%r10
  0x0000000002ddeeb0: shr    $0x9,%r10
  0x0000000002ddeeb4: mov    $0xea5d000,%r11d
  0x0000000002ddeeba: mov    %r12b,(%r11,%r10,1)  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddeebe: jmp    0x0000000002ddef33  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddeec0: cmp    0x4c(%rsp),%r10d
  0x0000000002ddeec5: jge    0x0000000002ddef21
  0x0000000002ddeec7: test   %r10d,%r10d
  0x0000000002ddeeca: jl     0x0000000002de17cb
  0x0000000002ddeed0: cmp    0x4c(%rsp),%r10d
  0x0000000002ddeed5: jge    0x0000000002de1807  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddeedb: mov    0x30(%rsp),%r11
  0x0000000002ddeee0: movzwl 0x10(%r11,%r10,2),%ebp  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddeee6: cmp    %r8d,%ebp
  0x0000000002ddeee9: je     0x0000000002de01ee
  0x0000000002ddeeef: cmp    0x3c(%rsp),%ebp
  0x0000000002ddeef3: je     0x0000000002ddfac9
  0x0000000002ddeef9: cmp    $0x3a,%ebp
  0x0000000002ddeefc: je     0x0000000002ddfd96  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef02: inc    %r10d              ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef05: cmp    0x4c(%rsp),%r10d
  0x0000000002ddef0a: jge    0x0000000002ddef10  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef0c: mov    %ebp,%ebx
  0x0000000002ddef0e: jmp    0x0000000002ddeec7
  0x0000000002ddef10: cmp    0x3c(%rsp),%ebp
  0x0000000002ddef14: je     0x0000000002de21ee
  0x0000000002ddef1a: mov    0x40(%rsp),%rcx
  0x0000000002ddef1f: jmp    0x0000000002ddef30
  0x0000000002ddef21: cmp    0x3c(%rsp),%ebx
  0x0000000002ddef25: je     0x0000000002de21ec  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef2b: mov    0x40(%rsp),%rcx    ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddef30: mov    %rcx,%rax          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddef33: add    $0xb0,%rsp
  0x0000000002ddef3a: pop    %rbp
  0x0000000002ddef3b: test   %eax,-0x21def41(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002ddef41: retq                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002ddef42: test   %edi,%edi
  0x0000000002ddef44: jge    0x0000000002ddef4a  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef46: mov    0x60(%rsp),%esi    ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddef4a: mov    %esi,%r11d
  0x0000000002ddef4d: test   %esi,%esi
  0x0000000002ddef4f: jle    0x0000000002de217e  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddef55: mov    $0x7ffffff7,%r9d
  0x0000000002ddef5b: sub    %esi,%r9d          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddef5e: test   %r9d,%r9d
  0x0000000002ddef61: jl     0x0000000002de222b  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddef67: cmp    $0x80000,%esi
  0x0000000002ddef6d: ja     0x0000000002de1f30  ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef73: movslq %esi,%r8           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef76: mov    %esi,0x2c(%rsp)
  0x0000000002ddef7a: cmp    %esi,%ebp
  0x0000000002ddef7c: mov    %esi,%r10d
  0x0000000002ddef7f: cmovl  %ebp,%r10d         ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef83: mov    %r10d,0x4c(%rsp)
  0x0000000002ddef88: shl    %r8
  0x0000000002ddef8b: add    $0x17,%r8          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef8f: mov    %r8,%r10
  0x0000000002ddef92: shr    $0x3,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef96: mov    %r10,0x70(%rsp)
  0x0000000002ddef9b: and    $0xfffffffffffffff8,%r8  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddef9f: mov    %r8,0x78(%rsp)
  0x0000000002ddefa4: add    $0xfffffffffffffffe,%r10  ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddefa8: mov    %r10,0x80(%rsp)
  0x0000000002ddefb0: cmp    $0x80000,%esi
  0x0000000002ddefb6: ja     0x0000000002de11ca
  0x0000000002ddefbc: mov    0x60(%r15),%r8
  0x0000000002ddefc0: mov    %r8,%r10
  0x0000000002ddefc3: mov    0x78(%rsp),%r11
  0x0000000002ddefc8: add    %r11,%r10
  0x0000000002ddefcb: cmp    0x70(%r15),%r10
  0x0000000002ddefcf: jae    0x0000000002de11ca
  0x0000000002ddefd5: mov    %r10,0x60(%r15)
  0x0000000002ddefd9: prefetchw 0xc0(%r10)
  0x0000000002ddefe1: movq   $0x1,(%r8)
  0x0000000002ddefe8: prefetchw 0x100(%r10)
  0x0000000002ddeff0: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000002ddeff8: mov    %esi,0xc(%r8)
  0x0000000002ddeffc: prefetchw 0x140(%r10)
  0x0000000002ddf004: prefetchw 0x180(%r10)     ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf00c: mov    %r8,0x88(%rsp)
  0x0000000002ddf014: mov    %r8,%rdx
  0x0000000002ddf017: add    $0x10,%rdx
  0x0000000002ddf01b: cmp    0x4c(%rsp),%ebp
  0x0000000002ddf01f: jb     0x0000000002de1f3b
  0x0000000002ddf025: mov    0x2c(%rsp),%r10d
  0x0000000002ddf02a: cmp    0x4c(%rsp),%r10d
  0x0000000002ddf02f: jb     0x0000000002de1f3b  ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf035: mov    0x4c(%rsp),%ebp
  0x0000000002ddf039: test   %ebp,%ebp
  0x0000000002ddf03b: jle    0x0000000002de1f75  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf041: cmp    %r10d,%ebp
  0x0000000002ddf044: jl     0x0000000002de0a77  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf04a: mov    0x78(%rsp),%r8
  0x0000000002ddf04f: add    $0xfffffffffffffff0,%r8
  0x0000000002ddf053: shr    $0x3,%r8           ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf057: mov    0x68(%rsp),%rcx
  0x0000000002ddf05c: movabs $0x2d02ca0,%r10
  0x0000000002ddf066: callq  *%r10              ;*goto
                                                ; - java.io.WinNTFileSystem::normalizePrefix@25 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf069: mov    0x88(%rsp),%r10
  0x0000000002ddf071: mov    %r10,%r8
  0x0000000002ddf074: shr    $0x3,%r8           ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf078: mov    %r10,0x38(%rsp)
  0x0000000002ddf07d: jmpq   0x0000000002ddeb06
  0x0000000002ddf082: mov    0x2c(%rsp),%r11d
  0x0000000002ddf087: cmp    0x30(%rsp),%r11d
  0x0000000002ddf08c: jge    0x0000000002de2011  ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf092: test   %r11d,%r11d
  0x0000000002ddf095: jl     0x0000000002de1fdd
  0x0000000002ddf09b: cmp    %r9d,%r11d
  0x0000000002ddf09e: jge    0x0000000002de14e4
  0x0000000002ddf0a4: cmp    %r9d,%r11d
  0x0000000002ddf0a7: jae    0x0000000002de11e4  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf0ad: movslq %edi,%r11
  0x0000000002ddf0b0: movzwl 0x12(%r10,%r11,2),%r11d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf0b6: cmp    $0x5c,%r11d
  0x0000000002ddf0ba: je     0x0000000002de1235  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf0c0: cmp    $0x2f,%r11d
  0x0000000002ddf0c4: je     0x0000000002de124b  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf0ca: mov    0x2c(%rsp),%r11d
  0x0000000002ddf0cf: cmp    0x30(%rsp),%r11d
  0x0000000002ddf0d4: je     0x0000000002de152d
  0x0000000002ddf0da: test   %ecx,%ecx
  0x0000000002ddf0dc: jg     0x0000000002de000f  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf0e2: mov    0x38(%rsp),%r11
  0x0000000002ddf0e7: mov    0xc(%r11),%r9d
  0x0000000002ddf0eb: mov    0x48(%rsp),%ebp
  0x0000000002ddf0ef: cmp    %r9d,%ebp
  0x0000000002ddf0f2: jae    0x0000000002de1285  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf0f8: mov    0x34(%rsp),%ecx
  0x0000000002ddf0fc: mov    %cx,0x10(%r11,%rbp,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf102: jmpq   0x0000000002ddea94  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf107: mov    %r9d,%r11d
  0x0000000002ddf10a: inc    %r11d              ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf10d: cmp    0x38(%rsp),%r11d
  0x0000000002ddf112: jl     0x0000000002dde86e  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf118: cmp    0x64(%rsp),%r11d
  0x0000000002ddf11d: jge    0x0000000002de2745  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf123: mov    0x30(%rsp),%rbx
  0x0000000002ddf128: movzwl 0x10(%rbx,%r11,2),%r8d  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf12e: cmp    $0x5c,%r8d
  0x0000000002ddf132: je     0x0000000002ddf13e
  0x0000000002ddf134: cmp    $0x2f,%r8d
  0x0000000002ddf138: jne    0x0000000002dde8ac  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf13e: movslq %r11d,%r8
  0x0000000002ddf141: movzwl 0x12(%rbx,%r8,2),%r9d  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf147: cmp    $0x5c,%r9d
  0x0000000002ddf14b: je     0x0000000002de0c33  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf151: cmp    $0x2f,%r9d
  0x0000000002ddf155: je     0x0000000002de0c33  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf15b: inc    %r11d              ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf15e: jmpq   0x0000000002dde8ac
  0x0000000002ddf163: cmp    $0x1,%r10d
  0x0000000002ddf167: jle    0x0000000002dde6a6  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf16d: mov    0x4c(%rsp),%r11d
  0x0000000002ddf172: test   %r11d,%r11d
  0x0000000002ddf175: je     0x0000000002de2635
  0x0000000002ddf17b: mov    %r11d,%r10d
  0x0000000002ddf17e: cmp    $0x80000,%r10d
  0x0000000002ddf185: ja     0x0000000002de132c
  0x0000000002ddf18b: mov    0x60(%r15),%r10
  0x0000000002ddf18f: mov    %r10,%r8
  0x0000000002ddf192: mov    %r10,%r11
  0x0000000002ddf195: add    %r9,%r11
  0x0000000002ddf198: cmp    0x70(%r15),%r11
  0x0000000002ddf19c: jae    0x0000000002de132c
  0x0000000002ddf1a2: mov    %r11,0x60(%r15)
  0x0000000002ddf1a6: mov    %r10,%rdi
  0x0000000002ddf1a9: add    $0x10,%rdi
  0x0000000002ddf1ad: movq   $0x1,(%r10)
  0x0000000002ddf1b4: prefetchw 0xc0(%r11)
  0x0000000002ddf1bc: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x0000000002ddf1c4: mov    0x4c(%rsp),%r10d
  0x0000000002ddf1c9: mov    %r10d,0xc(%r8)
  0x0000000002ddf1cd: xor    %rax,%rax
  0x0000000002ddf1d0: shl    $0x3,%rcx
  0x0000000002ddf1d4: rep rex.W stos %al,%es:(%rdi)
  0x0000000002ddf1d7: prefetchw 0x100(%r11)
  0x0000000002ddf1df: prefetchw 0x140(%r11)
  0x0000000002ddf1e7: prefetchw 0x180(%r11)     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf1ef: mov    %r8,%r10           ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf1f2: mov    %r10,0x68(%rsp)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf1f7: xor    %r10d,%r10d
  0x0000000002ddf1fa: test   %r10d,%r10d
  0x0000000002ddf1fd: jl     0x0000000002de2529
  0x0000000002ddf203: cmp    0x4c(%rsp),%r10d
  0x0000000002ddf208: jge    0x0000000002de2559  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf20e: mov    0x30(%rsp),%r11
  0x0000000002ddf213: movzwl 0x10(%r11,%r10,2),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf219: cmp    $0x5c,%r11d
  0x0000000002ddf21d: je     0x0000000002ddff7a  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf223: cmp    $0x2f,%r11d
  0x0000000002ddf227: je     0x0000000002ddff7a  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf22d: mov    %r10d,0x80(%rsp)   ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf235: mov    0x4c(%rsp),%r8d
  0x0000000002ddf23a: sub    0x80(%rsp),%r8d
  0x0000000002ddf242: mov    0x68(%rsp),%r10
  0x0000000002ddf247: add    $0x10,%r10         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf24b: mov    %r10,0x70(%rsp)
  0x0000000002ddf250: mov    0x68(%rsp),%r10
  0x0000000002ddf255: mov    %r10,%r11
  0x0000000002ddf258: shr    $0x3,%r11          ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 120)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf25c: cmp    $0x2,%r8d
  0x0000000002ddf260: jl     0x0000000002ddf3a3  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf266: mov    0x80(%rsp),%r8d
  0x0000000002ddf26e: test   %r8d,%r8d
  0x0000000002ddf271: jl     0x0000000002de26ab
  0x0000000002ddf277: cmp    0x4c(%rsp),%r8d
  0x0000000002ddf27c: jge    0x0000000002de274f
  0x0000000002ddf282: cmp    0x4c(%rsp),%r8d
  0x0000000002ddf287: jae    0x0000000002de25a7  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf28d: mov    0x30(%rsp),%r10
  0x0000000002ddf292: movzwl 0x10(%r10,%r8,2),%r10d  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf298: mov    %r10d,0x64(%rsp)
  0x0000000002ddf29d: cmp    $0x61,%r10d
  0x0000000002ddf2a1: jge    0x0000000002de2775  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf2a7: cmp    $0x41,%r10d
  0x0000000002ddf2ab: jl     0x0000000002de26d1  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf2b1: cmp    $0x5a,%r10d
  0x0000000002ddf2b5: jg     0x0000000002de27b5  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf2bb: mov    0x80(%rsp),%ebp
  0x0000000002ddf2c2: inc    %ebp               ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf2c4: test   %ebp,%ebp
  0x0000000002ddf2c6: jl     0x0000000002de2711
  0x0000000002ddf2cc: cmp    0x4c(%rsp),%ebp
  0x0000000002ddf2d0: jge    0x0000000002de27ed
  0x0000000002ddf2d6: cmp    0x4c(%rsp),%ebp
  0x0000000002ddf2da: jae    0x0000000002de25d5  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf2e0: movslq 0x80(%rsp),%r10
  0x0000000002ddf2e8: mov    0x30(%rsp),%r8
  0x0000000002ddf2ed: movzwl 0x12(%r8,%r10,2),%r8d
  0x0000000002ddf2f3: cmp    $0x3a,%r8d
  0x0000000002ddf2f7: jne    0x0000000002ddf3a3  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf2fd: mov    0x60(%rsp),%r10d
  0x0000000002ddf302: test   %r10d,%r10d
  0x0000000002ddf305: jg     0x0000000002de0e95  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf30b: mov    0x68(%rsp),%r8
  0x0000000002ddf310: mov    0x4c(%rsp),%r10d
  0x0000000002ddf315: mov    %r11d,%r9d
  0x0000000002ddf318: mov    %r8,%rbx           ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf31b: mov    0x68(%rsp),%r8
  0x0000000002ddf320: mov    0xc(%r8),%ecx      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf324: mov    %ecx,0x74(%rsp)
  0x0000000002ddf328: test   %ecx,%ecx
  0x0000000002ddf32a: jbe    0x0000000002de2bad  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf330: mov    $0x2,%edx
  0x0000000002ddf335: sub    %ecx,%edx
  0x0000000002ddf337: mov    0x68(%rsp),%rdi
  0x0000000002ddf33c: add    $0x10,%rdi         ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf340: mov    0x64(%rsp),%ecx
  0x0000000002ddf344: mov    %cx,(%rdi)         ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf347: test   %edx,%edx
  0x0000000002ddf349: jg     0x0000000002de0fc0  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf34f: mov    0x74(%rsp),%r11d
  0x0000000002ddf354: cmp    $0x1,%r11d
  0x0000000002ddf358: jbe    0x0000000002de2bcd  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf35e: mov    $0x3a,%r11d
  0x0000000002ddf364: mov    %r11w,0x12(%r8)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf369: mov    0x80(%rsp),%edx
  0x0000000002ddf370: add    $0x3,%edx
  0x0000000002ddf373: xor    %ecx,%ecx
  0x0000000002ddf375: xor    %ebx,%ebx
  0x0000000002ddf377: cmp    %ebx,%edx
  0x0000000002ddf379: cmovl  %ebx,%edx
  0x0000000002ddf37c: cmp    %r10d,%edx
  0x0000000002ddf37f: cmovg  %r10d,%edx
  0x0000000002ddf383: mov    0x80(%rsp),%edi
  0x0000000002ddf38a: neg    %edi               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf38c: mov    0x80(%rsp),%ebp
  0x0000000002ddf393: add    $0x2,%ebp          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf396: mov    0x3c(%rsp),%ebx
  0x0000000002ddf39a: mov    0x88(%rsp),%esi
  0x0000000002ddf3a1: jmp    0x0000000002ddf3fb  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf3a3: mov    0x4c(%rsp),%r10d
  0x0000000002ddf3a8: cmp    $0x2,%r10d
  0x0000000002ddf3ac: jl     0x0000000002ddf3e5  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf3ae: mov    0x48(%rsp),%r8d
  0x0000000002ddf3b3: movzwl 0x10(%r12,%r8,8),%r9d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf3b9: cmp    $0x5c,%r9d
  0x0000000002ddf3bd: je     0x0000000002de0356  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf3c3: cmp    $0x2f,%r9d
  0x0000000002ddf3c7: je     0x0000000002de0356  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf3cd: xor    %esi,%esi
  0x0000000002ddf3cf: xor    %ebp,%ebp
  0x0000000002ddf3d1: xor    %edi,%edi
  0x0000000002ddf3d3: mov    0x3c(%rsp),%ebx
  0x0000000002ddf3d7: mov    0x38(%rsp),%edx
  0x0000000002ddf3db: mov    0x68(%rsp),%r8
  0x0000000002ddf3e0: mov    %r11d,%r9d
  0x0000000002ddf3e3: jmp    0x0000000002ddf3fb
  0x0000000002ddf3e5: xor    %esi,%esi
  0x0000000002ddf3e7: xor    %ebp,%ebp
  0x0000000002ddf3e9: xor    %edi,%edi
  0x0000000002ddf3eb: mov    0x3c(%rsp),%ebx
  0x0000000002ddf3ef: mov    0x38(%rsp),%edx
  0x0000000002ddf3f3: mov    0x68(%rsp),%r8
  0x0000000002ddf3f8: mov    %r11d,%r9d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf3fb: cmp    %r10d,%ebp
  0x0000000002ddf3fe: jge    0x0000000002de08db  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf404: mov    %ebp,%ecx
  0x0000000002ddf406: add    %edi,%ecx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf408: mov    %ebp,%r11d
  0x0000000002ddf40b: inc    %r11d              ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf40e: test   %ebp,%ebp
  0x0000000002ddf410: jl     0x0000000002de233a  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf416: mov    %r11d,0x38(%rsp)
  0x0000000002ddf41b: mov    %ecx,0x48(%rsp)
  0x0000000002ddf41f: mov    %edi,0x28(%rsp)
  0x0000000002ddf423: mov    %r9d,%ecx
  0x0000000002ddf426: mov    %ebp,%r11d
  0x0000000002ddf429: mov    %edx,0x24(%rsp)
  0x0000000002ddf42d: mov    %ebx,0x34(%rsp)
  0x0000000002ddf431: mov    %r10d,0x30(%rsp)
  0x0000000002ddf436: mov    0x40(%rsp),%r10
  0x0000000002ddf43b: mov    0xc(%r10),%r9d
  0x0000000002ddf43f: mov    0xc(%r12,%r9,8),%r10d  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x0000000002de3269
  0x0000000002ddf444: cmp    %r10d,%ebp
  0x0000000002ddf447: jge    0x0000000002de1681  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf44d: lea    (%r12,%r9,8),%r8   ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf451: cmp    %r10d,%ebp
  0x0000000002ddf454: jae    0x0000000002de155d  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf45a: movzwl 0x10(%r8,%rbp,2),%ebx  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf460: mov    %ebx,0x4c(%rsp)
  0x0000000002ddf464: mov    %ecx,%r9d
  0x0000000002ddf467: mov    0xc(%r12,%r9,8),%ebp  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf46c: mov    0x48(%rsp),%ebx
  0x0000000002ddf470: sub    %ebp,%ebx
  0x0000000002ddf472: mov    0x48(%rsp),%edi
  0x0000000002ddf476: inc    %edi               ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf478: mov    %edi,0x60(%rsp)
  0x0000000002ddf47c: inc    %ebx               ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf47e: mov    %ebp,%r9d
  0x0000000002ddf481: shl    %r9d               ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf484: mov    %r9d,%edx
  0x0000000002ddf487: sub    0x48(%rsp),%r9d
  0x0000000002ddf48c: lea    (%r12,%rcx,8),%rdi  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf490: mov    %rdi,0x68(%rsp)
  0x0000000002ddf495: lea    0x10(%r12,%rcx,8),%rdi  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf49a: mov    %rdi,0x70(%rsp)
  0x0000000002ddf49f: inc    %r9d               ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf4a2: add    $0x2,%edx          ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf4a5: mov    %edx,%esi
  0x0000000002ddf4a7: mov    0x4c(%rsp),%edi
  0x0000000002ddf4ab: cmp    $0x5c,%edi
  0x0000000002ddf4ae: je     0x0000000002ddfefb
  0x0000000002ddf4b4: cmp    $0x2f,%edi
  0x0000000002ddf4b7: je     0x0000000002ddfefb  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf4bd: test   %ebx,%ebx
  0x0000000002ddf4bf: jg     0x0000000002de039f  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf4c5: mov    0x68(%rsp),%r10
  0x0000000002ddf4ca: mov    0xc(%r10),%r10d
  0x0000000002ddf4ce: mov    0x48(%rsp),%r8d
  0x0000000002ddf4d3: cmp    %r10d,%r8d
  0x0000000002ddf4d6: jae    0x0000000002de2089  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf4dc: mov    0x68(%rsp),%r10
  0x0000000002ddf4e1: mov    0x4c(%rsp),%r9d
  0x0000000002ddf4e6: mov    %r9w,0x10(%r10,%r8,2)  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf4ec: mov    0x34(%rsp),%ebx
  0x0000000002ddf4f0: mov    %ecx,%r9d          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf4f3: mov    0x38(%rsp),%r11d
  0x0000000002ddf4f8: cmp    0x24(%rsp),%r11d
  0x0000000002ddf4fd: jge    0x0000000002ddf514  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf4ff: mov    0x30(%rsp),%r10d
  0x0000000002ddf504: mov    0x24(%rsp),%edx
  0x0000000002ddf508: mov    %r11d,%ebp
  0x0000000002ddf50b: mov    0x28(%rsp),%edi
  0x0000000002ddf50f: jmpq   0x0000000002ddf404
  0x0000000002ddf514: cmp    0x20(%rsp),%r11d
  0x0000000002ddf519: jge    0x0000000002ddf8f5
  0x0000000002ddf51f: jmpq   0x0000000002ddf6f9
  0x0000000002ddf524: mov    0x2c(%rsp),%ebx
  0x0000000002ddf528: cmp    0x30(%rsp),%ebx
  0x0000000002ddf52c: jge    0x0000000002de2011
  0x0000000002ddf532: test   %ebx,%ebx
  0x0000000002ddf534: jl     0x0000000002de1fdd
  0x0000000002ddf53a: cmp    %r9d,%ebx
  0x0000000002ddf53d: jge    0x0000000002de14f3
  0x0000000002ddf543: cmp    %r9d,%ebx
  0x0000000002ddf546: jae    0x0000000002de11f3  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf54c: movslq %esi,%r11
  0x0000000002ddf54f: movzwl 0x12(%r10,%r11,2),%r10d  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf555: cmp    $0x5c,%r10d
  0x0000000002ddf559: je     0x0000000002de125f
  0x0000000002ddf55f: cmp    $0x2f,%r10d
  0x0000000002ddf563: je     0x0000000002de125f
  0x0000000002ddf569: mov    %ebx,%r10d
  0x0000000002ddf56c: cmp    0x30(%rsp),%r10d
  0x0000000002ddf571: je     0x0000000002de1537  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf577: test   %ecx,%ecx
  0x0000000002ddf579: jg     0x0000000002de01fd  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf57f: mov    0x20(%rsp),%r11
  0x0000000002ddf584: mov    0xc(%r11),%r9d
  0x0000000002ddf588: mov    0x48(%rsp),%ebp
  0x0000000002ddf58c: cmp    %r9d,%ebp
  0x0000000002ddf58f: jae    0x0000000002de1294  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf595: mov    0x34(%rsp),%ecx
  0x0000000002ddf599: mov    %cx,0x10(%r11,%rbp,2)  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf59f: jmpq   0x0000000002ddee2d
  0x0000000002ddf5a4: mov    0x60(%rsp),%r10d
  0x0000000002ddf5a9: test   %r10d,%r10d
  0x0000000002ddf5ac: jg     0x0000000002de0540  ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf5b2: mov    0x68(%rsp),%r10
  0x0000000002ddf5b7: mov    0x4c(%rsp),%r11d   ;   {no_reloc}
  0x0000000002ddf5bc: mov    %r10,%rbx          ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf5bf: mov    0x68(%rsp),%r10
  0x0000000002ddf5c4: mov    0xc(%r10),%r9d     ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf5c8: mov    %r9d,0x80(%rsp)
  0x0000000002ddf5d0: test   %r9d,%r9d
  0x0000000002ddf5d3: jbe    0x0000000002de22f1  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf5d9: mov    $0x2,%r9d
  0x0000000002ddf5df: mov    0x80(%rsp),%ecx
  0x0000000002ddf5e6: sub    %ecx,%r9d
  0x0000000002ddf5e9: mov    0x68(%rsp),%rdi
  0x0000000002ddf5ee: add    $0x10,%rdi         ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf5f2: mov    0x70(%rsp),%edx
  0x0000000002ddf5f6: mov    %dx,(%rdi)         ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf5f9: test   %r9d,%r9d
  0x0000000002ddf5fc: jg     0x0000000002de0662  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf602: mov    0x80(%rsp),%r9d
  0x0000000002ddf60a: cmp    $0x1,%r9d
  0x0000000002ddf60e: jbe    0x0000000002de2311  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf614: mov    $0x3a,%r9d
  0x0000000002ddf61a: mov    %r9w,0x12(%r10)    ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf61f: mov    0x64(%rsp),%ecx
  0x0000000002ddf623: mov    %ecx,%ebx
  0x0000000002ddf625: add    $0x3,%ebx          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf628: mov    %ecx,%edx
  0x0000000002ddf62a: neg    %edx               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf62c: mov    %ecx,%ebp
  0x0000000002ddf62e: add    $0x2,%ebp          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf631: mov    0x3c(%rsp),%ecx
  0x0000000002ddf635: mov    0x88(%rsp),%edi
  0x0000000002ddf63c: jmpq   0x0000000002dde9a0  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf641: mov    0x24(%rsp),%r11d
  0x0000000002ddf646: cmp    %r10d,%r11d
  0x0000000002ddf649: jge    0x0000000002de1e3d
  0x0000000002ddf64f: cmp    %r10d,%r11d
  0x0000000002ddf652: jae    0x0000000002de1bb3  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf658: movslq %edx,%r10
  0x0000000002ddf65b: movzwl 0x12(%r8,%r10,2),%r11d  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf661: cmp    $0x5c,%r11d
  0x0000000002ddf665: je     0x0000000002de1c15  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf66b: cmp    $0x2f,%r11d
  0x0000000002ddf66f: je     0x0000000002de1c25  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf675: mov    0x24(%rsp),%r10d
  0x0000000002ddf67a: cmp    0x30(%rsp),%r10d
  0x0000000002ddf67f: je     0x0000000002de1e91  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf685: test   %r9d,%r9d
  0x0000000002ddf688: jg     0x0000000002ddfda5  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf68e: mov    %ecx,%r9d
  0x0000000002ddf691: mov    0x38(%rsp),%r11
  0x0000000002ddf696: mov    0xc(%r11),%r8d
  0x0000000002ddf69a: mov    0x48(%rsp),%ebp
  0x0000000002ddf69e: cmp    %r8d,%ebp
  0x0000000002ddf6a1: jae    0x0000000002de1c5f  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf6a7: mov    0x34(%rsp),%ebx
  0x0000000002ddf6ab: mov    %bx,0x10(%r11,%rbp,2)  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x0000000002ddf6b1: jmp    0x0000000002ddf6e8
  0x0000000002ddf6b3: nopw   0x0(%rax,%rax,1)
  0x0000000002ddf6bc: data16 data16 xchg %ax,%ax
  0x0000000002ddf6c0: mov    %ecx,%r9d          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf6c3: mov    0x38(%rsp),%r10
  0x0000000002ddf6c8: mov    0xc(%r10),%r8d
  0x0000000002ddf6cc: mov    0x48(%rsp),%ebp
  0x0000000002ddf6d0: cmp    %r8d,%ebp
  0x0000000002ddf6d3: jae    0x0000000002de15b1  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf6d9: mov    0x4c(%rsp),%r11d
  0x0000000002ddf6de: mov    %r11w,0x10(%r10,%rbp,2)  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x0000000002ddf6e4: mov    0x34(%rsp),%ebx    ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf6e8: mov    0x24(%rsp),%ebp
  0x0000000002ddf6ec: cmp    0x20(%rsp),%ebp
  0x0000000002ddf6f0: jge    0x0000000002ddf8f8  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf6f6: mov    %ebp,%r11d         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf6f9: mov    0x40(%rsp),%rdi
  0x0000000002ddf6fe: mov    0xc(%rdi),%r8d     ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x0000000002ddf702: mov    0xc(%r12,%r8,8),%r10d  ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x0000000002de3269
  0x0000000002ddf707: mov    %r11d,%ecx
  0x0000000002ddf70a: add    0x28(%rsp),%ecx    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf70e: mov    %r11d,%ebp
  0x0000000002ddf711: inc    %ebp               ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf713: cmp    %r10d,%r11d
  0x0000000002ddf716: jge    0x0000000002de169a  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf71c: shl    $0x3,%r8           ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf720: cmp    %r10d,%r11d
  0x0000000002ddf723: jae    0x0000000002de1576  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf729: mov    %r11d,%edx
  0x0000000002ddf72c: mov    %ecx,0x48(%rsp)
  0x0000000002ddf730: mov    %r9d,%ecx
  0x0000000002ddf733: mov    %ebp,0x24(%rsp)
  0x0000000002ddf737: mov    %ebx,0x34(%rsp)
  0x0000000002ddf73b: movzwl 0x10(%r8,%r11,2),%r11d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf741: mov    %r11d,0x4c(%rsp)
  0x0000000002ddf746: mov    0xc(%r12,%r9,8),%ebp  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf74b: mov    0x48(%rsp),%r9d
  0x0000000002ddf750: sub    %ebp,%r9d
  0x0000000002ddf753: lea    (%r12,%rcx,8),%r11  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf757: mov    %r11,0x38(%rsp)
  0x0000000002ddf75c: lea    0x10(%r12,%rcx,8),%r11  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf761: mov    %r11,0x68(%rsp)
  0x0000000002ddf766: inc    %r9d               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf769: mov    %ebp,%r11d
  0x0000000002ddf76c: shl    %r11d              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf76f: mov    %r11d,%edi
  0x0000000002ddf772: sub    0x48(%rsp),%edi
  0x0000000002ddf776: mov    0x48(%rsp),%ebx
  0x0000000002ddf77a: inc    %ebx               ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf77c: mov    %ebx,0x60(%rsp)
  0x0000000002ddf780: inc    %edi               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf782: add    $0x2,%r11d         ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf786: mov    %r11d,%eax
  0x0000000002ddf789: mov    0x4c(%rsp),%ebx
  0x0000000002ddf78d: cmp    $0x5c,%ebx
  0x0000000002ddf790: je     0x0000000002ddf641
  0x0000000002ddf796: mov    %ebx,%r11d
  0x0000000002ddf799: cmp    $0x2f,%r11d
  0x0000000002ddf79d: je     0x0000000002ddf641  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf7a3: test   %r9d,%r9d
  0x0000000002ddf7a6: jle    0x0000000002ddf6c0  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf7ac: test   %edi,%edi
  0x0000000002ddf7ae: jge    0x0000000002ddf7b4  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf7b0: mov    0x60(%rsp),%eax    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf7b4: mov    %eax,%r11d
  0x0000000002ddf7b7: test   %eax,%eax
  0x0000000002ddf7b9: jle    0x0000000002de2463  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf7bf: mov    %eax,%esi
  0x0000000002ddf7c1: mov    $0x7ffffff7,%r10d
  0x0000000002ddf7c7: sub    %eax,%r10d         ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf7ca: mov    %r10d,%r8d
  0x0000000002ddf7cd: test   %r10d,%r10d
  0x0000000002ddf7d0: jl     0x0000000002de24c1  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf7d6: cmp    $0x80000,%eax
  0x0000000002ddf7dc: ja     0x0000000002de2271  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf7e2: movslq %eax,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf7e5: mov    %eax,0x2c(%rsp)
  0x0000000002ddf7e9: shl    %r10
  0x0000000002ddf7ec: add    $0x17,%r10         ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf7f0: mov    %r10,0x70(%rsp)
  0x0000000002ddf7f5: and    $0xfffffffffffffff8,%r10  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf7f9: mov    %r10,0x78(%rsp)
  0x0000000002ddf7fe: cmp    $0x80000,%eax
  0x0000000002ddf804: ja     0x0000000002de130f
  0x0000000002ddf80a: mov    0x60(%r15),%r10
  0x0000000002ddf80e: mov    %r10,%r8
  0x0000000002ddf811: mov    %r10,%r11
  0x0000000002ddf814: mov    0x78(%rsp),%r10
  0x0000000002ddf819: add    %r10,%r11
  0x0000000002ddf81c: cmp    0x70(%r15),%r11
  0x0000000002ddf820: jae    0x0000000002de130f
  0x0000000002ddf826: mov    %r11,0x60(%r15)
  0x0000000002ddf82a: prefetchw 0xc0(%r11)
  0x0000000002ddf832: mov    %r8,%r10
  0x0000000002ddf835: movq   $0x1,(%r10)
  0x0000000002ddf83c: prefetchw 0x100(%r11)
  0x0000000002ddf844: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x0000000002ddf84c: mov    %eax,0xc(%r8)
  0x0000000002ddf850: prefetchw 0x140(%r11)
  0x0000000002ddf858: prefetchw 0x180(%r11)     ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf860: mov    %r8,%r10
  0x0000000002ddf863: mov    %r10,0x80(%rsp)
  0x0000000002ddf86b: cmp    0x2c(%rsp),%ebp
  0x0000000002ddf86f: mov    0x2c(%rsp),%esi
  0x0000000002ddf873: cmovl  %ebp,%esi          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf876: add    $0x10,%r10         ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf87a: mov    %r10,%r9
  0x0000000002ddf87d: mov    0x70(%rsp),%r10
  0x0000000002ddf882: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf886: mov    %r10,%rbx
  0x0000000002ddf889: mov    %r10,%rcx
  0x0000000002ddf88c: add    $0xfffffffffffffffe,%rcx
  0x0000000002ddf890: cmp    %esi,%ebp
  0x0000000002ddf892: jb     0x0000000002de2279
  0x0000000002ddf898: mov    0x2c(%rsp),%r10d
  0x0000000002ddf89d: cmp    %esi,%r10d
  0x0000000002ddf8a0: jb     0x0000000002de2279  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf8a6: test   %esi,%esi
  0x0000000002ddf8a8: jle    0x0000000002de22a5
  0x0000000002ddf8ae: cmp    %r10d,%esi
  0x0000000002ddf8b1: jl     0x0000000002de0e45
  0x0000000002ddf8b7: mov    0x78(%rsp),%r10
  0x0000000002ddf8bc: add    $0xfffffffffffffff0,%r10
  0x0000000002ddf8c0: shr    $0x3,%r10          ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@28 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf8c4: mov    0x68(%rsp),%rcx
  0x0000000002ddf8c9: mov    %r9,%rdx
  0x0000000002ddf8cc: mov    %r10,%r8
  0x0000000002ddf8cf: movabs $0x2d02ca0,%r10
  0x0000000002ddf8d9: callq  *%r10              ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf8dc: mov    0x80(%rsp),%r10
  0x0000000002ddf8e4: mov    %r10,%r9
  0x0000000002ddf8e7: shr    $0x3,%r9           ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddf8eb: mov    %r10,0x38(%rsp)
  0x0000000002ddf8f0: jmpq   0x0000000002ddf6c3
  0x0000000002ddf8f5: mov    %r11d,%ebp
  0x0000000002ddf8f8: cmp    0x30(%rsp),%ebp
  0x0000000002ddf8fc: jge    0x0000000002ddf9f7  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf902: xchg   %ax,%ax            ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf904: mov    %ebp,%ecx
  0x0000000002ddf906: add    0x28(%rsp),%ecx    ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf90a: mov    %ebp,%r11d
  0x0000000002ddf90d: inc    %r11d              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf910: test   %ebp,%ebp
  0x0000000002ddf912: jl     0x0000000002de2335  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf918: mov    0x40(%rsp),%rdi
  0x0000000002ddf91d: mov    0xc(%rdi),%r8d
  0x0000000002ddf921: mov    0xc(%r12,%r8,8),%r10d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x0000000002de3269
  0x0000000002ddf926: cmp    %r10d,%ebp
  0x0000000002ddf929: jge    0x0000000002de16a3  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf92f: shl    $0x3,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf933: cmp    %r10d,%ebp
  0x0000000002ddf936: jae    0x0000000002de157f  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf93c: mov    %r11d,0x38(%rsp)
  0x0000000002ddf941: mov    %ecx,0x48(%rsp)
  0x0000000002ddf945: mov    %r9d,%ecx
  0x0000000002ddf948: mov    %ebx,0x34(%rsp)
  0x0000000002ddf94c: movzwl 0x10(%r8,%rbp,2),%r11d
  0x0000000002ddf952: mov    %r11d,0x4c(%rsp)
  0x0000000002ddf957: mov    %ebp,%edx
  0x0000000002ddf959: mov    0xc(%r12,%r9,8),%ebp  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf95e: mov    0x48(%rsp),%r9d
  0x0000000002ddf963: sub    %ebp,%r9d
  0x0000000002ddf966: lea    (%r12,%rcx,8),%r11  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf96a: mov    %r11,0x20(%rsp)
  0x0000000002ddf96f: lea    0x10(%r12,%rcx,8),%r11  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf974: mov    %r11,0x68(%rsp)
  0x0000000002ddf979: inc    %r9d
  0x0000000002ddf97c: mov    %ebp,%ebx
  0x0000000002ddf97e: shl    %ebx               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf980: mov    %ebx,%r11d
  0x0000000002ddf983: sub    0x48(%rsp),%r11d
  0x0000000002ddf988: mov    0x48(%rsp),%esi
  0x0000000002ddf98c: mov    %esi,%edi
  0x0000000002ddf98e: inc    %edi               ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf990: mov    %edi,0x60(%rsp)
  0x0000000002ddf994: inc    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf997: add    $0x2,%ebx          ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf99a: mov    %ebx,%eax
  0x0000000002ddf99c: mov    0x4c(%rsp),%edi
  0x0000000002ddf9a0: cmp    $0x5c,%edi
  0x0000000002ddf9a3: je     0x0000000002de016b  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf9a9: cmp    $0x2f,%edi
  0x0000000002ddf9ac: je     0x0000000002de016b  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf9b2: test   %r9d,%r9d
  0x0000000002ddf9b5: jg     0x0000000002de0798  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf9bb: mov    %ecx,%r9d          ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf9be: mov    0x20(%rsp),%r10
  0x0000000002ddf9c3: mov    0xc(%r10),%r8d
  0x0000000002ddf9c7: mov    0x48(%rsp),%ebp
  0x0000000002ddf9cb: cmp    %r8d,%ebp
  0x0000000002ddf9ce: jae    0x0000000002de15bb  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf9d4: mov    0x4c(%rsp),%r8d
  0x0000000002ddf9d9: mov    %r8w,0x10(%r10,%rbp,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf9df: mov    0x34(%rsp),%ebx
  0x0000000002ddf9e3: mov    0x38(%rsp),%r10d   ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf9e8: cmp    0x30(%rsp),%r10d
  0x0000000002ddf9ed: jge    0x0000000002ddf9f7  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf9ef: mov    %r10d,%ebp
  0x0000000002ddf9f2: jmpq   0x0000000002ddf904  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddf9f7: mov    0x60(%rsp),%r10d
  0x0000000002ddf9fc: mov    %r10d,0x24(%rsp)   ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfa01: lea    (%r12,%r9,8),%rdx  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfa05: mov    %r9d,0x20(%rsp)
  0x0000000002ddfa0a: lea    0xa0(%rsp),%rbp    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfa12: xor    %r8d,%r8d
  0x0000000002ddfa15: mov    0x24(%rsp),%r9d
  0x0000000002ddfa1a: nop
  0x0000000002ddfa1b: callq  0x0000000002cf6620  ; OopMap{[32]=NarrowOop off=5376}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {static_call}
  0x0000000002ddfa20: mov    %rax,0x28(%rsp)
  0x0000000002ddfa25: mov    0x60(%r15),%rax
  0x0000000002ddfa29: mov    %rax,%r10
  0x0000000002ddfa2c: add    $0x18,%r10
  0x0000000002ddfa30: cmp    0x70(%r15),%r10
  0x0000000002ddfa34: jae    0x0000000002de1350
  0x0000000002ddfa3a: mov    %r10,0x60(%r15)
  0x0000000002ddfa3e: prefetchw 0xc0(%r10)
  0x0000000002ddfa46: mov    0x58(%rsp),%r10
  0x0000000002ddfa4b: mov    0xa8(%r10),%r10
  0x0000000002ddfa52: mov    %r10,(%rax)
  0x0000000002ddfa55: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002ddfa5c: mov    %r12d,0xc(%rax)
  0x0000000002ddfa60: mov    %r12,0x10(%rax)    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfa64: mov    0x28(%rsp),%r10
  0x0000000002ddfa69: mov    %r10,%r11
  0x0000000002ddfa6c: shr    $0x3,%r11
  0x0000000002ddfa70: mov    %r11d,0xc(%rax)    ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x0000000002ddfa74: mov    %rax,%r10
  0x0000000002ddfa77: shr    $0x9,%r10
  0x0000000002ddfa7b: mov    $0xea5d000,%r11d
  0x0000000002ddfa81: mov    %r12b,(%r11,%r10,1)  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfa85: jmpq   0x0000000002ddef33  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfa8a: cmp    $0x1,%r11d
  0x0000000002ddfa8e: jle    0x0000000002de2601  ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfa94: cmp    $0x1,%r11d
  0x0000000002ddfa98: jbe    0x0000000002de22b7  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfa9e: movzwl 0x12(%r12,%r9,8),%ebx  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfaa4: cmp    $0x5c,%ebx
  0x0000000002ddfaa7: je     0x0000000002ddffd8  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfaad: cmp    $0x2f,%ebx
  0x0000000002ddfab0: je     0x0000000002ddffd8  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfab6: xor    %edi,%edi
  0x0000000002ddfab8: xor    %ebp,%ebp
  0x0000000002ddfaba: xor    %edx,%edx
  0x0000000002ddfabc: mov    0x3c(%rsp),%ecx
  0x0000000002ddfac0: mov    0x78(%rsp),%ebx
  0x0000000002ddfac4: jmpq   0x0000000002dde9a0
  0x0000000002ddfac9: cmp    0x3c(%rsp),%ebx
  0x0000000002ddfacd: jne    0x0000000002ddeef9  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfad3: jmpq   0x0000000002dde77b
  0x0000000002ddfad8: test   %edx,%edx
  0x0000000002ddfada: jge    0x0000000002ddfae0  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfadc: mov    0x60(%rsp),%esi    ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfae0: mov    %esi,%r10d
  0x0000000002ddfae3: test   %esi,%esi
  0x0000000002ddfae5: jle    0x0000000002de19ee  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfaeb: mov    %esi,%r9d
  0x0000000002ddfaee: mov    $0x7ffffff7,%r10d
  0x0000000002ddfaf4: sub    %esi,%r10d         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfaf7: mov    %r10d,%ecx
  0x0000000002ddfafa: test   %r10d,%r10d
  0x0000000002ddfafd: jl     0x0000000002de1a47  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfb03: cmp    $0x80000,%esi
  0x0000000002ddfb09: ja     0x0000000002de241c  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfb0f: movslq %esi,%r11          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfb12: mov    %esi,0x64(%rsp)
  0x0000000002ddfb16: shl    %r11
  0x0000000002ddfb19: add    $0x17,%r11
  0x0000000002ddfb1d: mov    %r11,0x70(%rsp)
  0x0000000002ddfb22: mov    %r11,%r10
  0x0000000002ddfb25: and    $0xfffffffffffffff8,%r10  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfb29: mov    %r10,0x78(%rsp)
  0x0000000002ddfb2e: cmp    $0x80000,%esi
  0x0000000002ddfb34: ja     0x0000000002de1657
  0x0000000002ddfb3a: mov    0x60(%r15),%r10
  0x0000000002ddfb3e: mov    %r10,%r8
  0x0000000002ddfb41: mov    %r10,%r11
  0x0000000002ddfb44: mov    0x78(%rsp),%r10
  0x0000000002ddfb49: add    %r10,%r11
  0x0000000002ddfb4c: cmp    0x70(%r15),%r11
  0x0000000002ddfb50: jae    0x0000000002de1657
  0x0000000002ddfb56: mov    %r11,0x60(%r15)
  0x0000000002ddfb5a: prefetchw 0xc0(%r11)
  0x0000000002ddfb62: mov    %r8,%r10
  0x0000000002ddfb65: movq   $0x1,(%r10)
  0x0000000002ddfb6c: prefetchw 0x100(%r11)
  0x0000000002ddfb74: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x0000000002ddfb7c: mov    %esi,0xc(%r8)
  0x0000000002ddfb80: prefetchw 0x140(%r11)
  0x0000000002ddfb88: prefetchw 0x180(%r11)     ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfb90: mov    %r8,%r10           ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfb93: mov    %r10,0x80(%rsp)
  0x0000000002ddfb9b: cmp    0x64(%rsp),%ebp
  0x0000000002ddfb9f: mov    0x64(%rsp),%esi
  0x0000000002ddfba3: cmovl  %ebp,%esi          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfba6: add    $0x10,%r10
  0x0000000002ddfbaa: mov    %r10,%r9
  0x0000000002ddfbad: mov    0x70(%rsp),%r10
  0x0000000002ddfbb2: shr    $0x3,%r10
  0x0000000002ddfbb6: mov    %r10,%rbx
  0x0000000002ddfbb9: mov    %r10,%rcx
  0x0000000002ddfbbc: add    $0xfffffffffffffffe,%rcx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfbc0: cmp    %esi,%ebp
  0x0000000002ddfbc2: jb     0x0000000002de2424
  0x0000000002ddfbc8: mov    0x64(%rsp),%r10d
  0x0000000002ddfbcd: cmp    %esi,%r10d
  0x0000000002ddfbd0: jb     0x0000000002de2424  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfbd6: test   %esi,%esi
  0x0000000002ddfbd8: jle    0x0000000002de2451  ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfbde: cmp    %r10d,%esi
  0x0000000002ddfbe1: jl     0x0000000002de112d  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfbe7: mov    0x78(%rsp),%r10
  0x0000000002ddfbec: add    $0xfffffffffffffff0,%r10
  0x0000000002ddfbf0: shr    $0x3,%r10          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfbf4: mov    0x68(%rsp),%rcx
  0x0000000002ddfbf9: mov    %r9,%rdx
  0x0000000002ddfbfc: mov    %r10,%r8
  0x0000000002ddfbff: movabs $0x2d02ca0,%r10
  0x0000000002ddfc09: callq  *%r10              ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfc0c: mov    0x80(%rsp),%r10
  0x0000000002ddfc14: mov    %r10,%r8
  0x0000000002ddfc17: shr    $0x3,%r8           ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfc1b: mov    %r10,0x38(%rsp)
  0x0000000002ddfc20: jmpq   0x0000000002ddea6f
  0x0000000002ddfc25: cmp    0x3c(%rsp),%edi
  0x0000000002ddfc29: jne    0x0000000002dde7e5  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfc2f: jmpq   0x0000000002de1fbd
  0x0000000002ddfc34: test   %r9d,%r9d
  0x0000000002ddfc37: jne    0x0000000002ddef30  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfc3d: xor    %ebp,%ebp
  0x0000000002ddfc3f: jmpq   0x0000000002de2202
  0x0000000002ddfc44: test   %edi,%edi
  0x0000000002ddfc46: jge    0x0000000002ddfc4c
  0x0000000002ddfc48: mov    0x60(%rsp),%edx
  0x0000000002ddfc4c: mov    %edx,%r10d
  0x0000000002ddfc4f: test   %edx,%edx
  0x0000000002ddfc51: jle    0x0000000002de19ee  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfc57: mov    $0x7ffffff7,%r11d
  0x0000000002ddfc5d: sub    %edx,%r11d         ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfc60: test   %r11d,%r11d
  0x0000000002ddfc63: jl     0x0000000002de1a4d
  0x0000000002ddfc69: cmp    $0x80000,%edx
  0x0000000002ddfc6f: ja     0x0000000002de2668
  0x0000000002ddfc75: movslq %edx,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfc78: shl    %r8
  0x0000000002ddfc7b: add    $0x17,%r8          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfc7f: mov    %r8,%r11
  0x0000000002ddfc82: and    $0xfffffffffffffff8,%r11  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfc86: cmp    $0x80000,%edx
  0x0000000002ddfc8c: ja     0x0000000002de1727
  0x0000000002ddfc92: mov    %r11,0x70(%rsp)
  0x0000000002ddfc97: mov    %r8,0x68(%rsp)
  0x0000000002ddfc9c: mov    %edx,0x64(%rsp)
  0x0000000002ddfca0: mov    0x60(%r15),%r10
  0x0000000002ddfca4: mov    %r10,%r8
  0x0000000002ddfca7: mov    %r10,%r11
  0x0000000002ddfcaa: mov    0x70(%rsp),%r10
  0x0000000002ddfcaf: add    %r10,%r11
  0x0000000002ddfcb2: cmp    0x70(%r15),%r11
  0x0000000002ddfcb6: jae    0x0000000002de1735
  0x0000000002ddfcbc: mov    %r11,0x60(%r15)
  0x0000000002ddfcc0: prefetchw 0xc0(%r11)
  0x0000000002ddfcc8: mov    %r8,%r10
  0x0000000002ddfccb: movq   $0x1,(%r10)
  0x0000000002ddfcd2: prefetchw 0x100(%r11)
  0x0000000002ddfcda: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x0000000002ddfce2: mov    %edx,0xc(%r8)
  0x0000000002ddfce6: prefetchw 0x140(%r11)
  0x0000000002ddfcee: prefetchw 0x180(%r11)     ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfcf6: mov    %r8,%r10           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfcf9: mov    %r10,0x78(%rsp)
  0x0000000002ddfcfe: cmp    0x64(%rsp),%ebp
  0x0000000002ddfd02: mov    0x64(%rsp),%esi
  0x0000000002ddfd06: cmovl  %ebp,%esi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfd09: add    $0x10,%r10
  0x0000000002ddfd0d: mov    %r10,%r9
  0x0000000002ddfd10: mov    0x68(%rsp),%r10
  0x0000000002ddfd15: shr    $0x3,%r10
  0x0000000002ddfd19: mov    %r10,%rbx
  0x0000000002ddfd1c: mov    %r10,%rcx
  0x0000000002ddfd1f: add    $0xfffffffffffffffe,%rcx  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfd23: cmp    %esi,%ebp
  0x0000000002ddfd25: jb     0x0000000002de2670
  0x0000000002ddfd2b: mov    0x64(%rsp),%r11d
  0x0000000002ddfd30: cmp    %esi,%r11d
  0x0000000002ddfd33: jb     0x0000000002de2670
  0x0000000002ddfd39: test   %esi,%esi
  0x0000000002ddfd3b: jle    0x0000000002de2699  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfd41: cmp    0x64(%rsp),%esi
  0x0000000002ddfd45: jl     0x0000000002de117d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfd4b: mov    0x70(%rsp),%r10
  0x0000000002ddfd50: add    $0xfffffffffffffff0,%r10
  0x0000000002ddfd54: shr    $0x3,%r10          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfd58: mov    0x38(%rsp),%rcx
  0x0000000002ddfd5d: mov    %r9,%rdx
  0x0000000002ddfd60: mov    %r10,%r8
  0x0000000002ddfd63: movabs $0x2d02ca0,%r10
  0x0000000002ddfd6d: callq  *%r10              ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfd70: mov    0x78(%rsp),%r10
  0x0000000002ddfd75: mov    %r10,%r8
  0x0000000002ddfd78: shr    $0x3,%r8           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfd7c: mov    %r10,0x20(%rsp)
  0x0000000002ddfd81: jmpq   0x0000000002ddee03
  0x0000000002ddfd86: mov    %r10,%r8
  0x0000000002ddfd89: shr    $0x3,%r8
  0x0000000002ddfd8d: mov    %edi,0x60(%rsp)
  0x0000000002ddfd91: jmpq   0x0000000002ddee3c
  0x0000000002ddfd96: cmp    $0x1,%r10d
  0x0000000002ddfd9a: jle    0x0000000002ddef02  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfda0: jmpq   0x0000000002ddf16d
  0x0000000002ddfda5: test   %edi,%edi
  0x0000000002ddfda7: jge    0x0000000002ddfdad  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfda9: mov    0x60(%rsp),%eax    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfdad: mov    %eax,%r8d
  0x0000000002ddfdb0: test   %eax,%eax
  0x0000000002ddfdb2: jle    0x0000000002de2ae7  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfdb8: mov    $0x7ffffff7,%r9d
  0x0000000002ddfdbe: sub    %eax,%r9d          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfdc1: test   %r9d,%r9d
  0x0000000002ddfdc4: jl     0x0000000002de2b33  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfdca: cmp    $0x80000,%eax
  0x0000000002ddfdd0: ja     0x0000000002de28b4  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfdd6: movslq %eax,%r10          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfdd9: mov    %r10,%r9           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfddc: mov    %eax,0x2c(%rsp)
  0x0000000002ddfde0: cmp    %eax,%ebp
  0x0000000002ddfde2: mov    %eax,%r11d
  0x0000000002ddfde5: cmovl  %ebp,%r11d         ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfde9: mov    %r11d,0x4c(%rsp)
  0x0000000002ddfdee: mov    %r9,%r10
  0x0000000002ddfdf1: shl    %r10
  0x0000000002ddfdf4: add    $0x17,%r10         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfdf8: mov    %r10,%r11
  0x0000000002ddfdfb: shr    $0x3,%r11
  0x0000000002ddfdff: mov    %r11,0x70(%rsp)
  0x0000000002ddfe04: and    $0xfffffffffffffff8,%r10  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfe08: mov    %r10,0x78(%rsp)
  0x0000000002ddfe0d: mov    %r11,%r10
  0x0000000002ddfe10: add    $0xfffffffffffffffe,%r10  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfe14: mov    %r10,0x80(%rsp)
  0x0000000002ddfe1c: cmp    $0x80000,%eax
  0x0000000002ddfe22: ja     0x0000000002de19ca
  0x0000000002ddfe28: mov    0x60(%r15),%r10
  0x0000000002ddfe2c: mov    %r10,%r8
  0x0000000002ddfe2f: mov    0x78(%rsp),%r11
  0x0000000002ddfe34: add    %r11,%r10
  0x0000000002ddfe37: cmp    0x70(%r15),%r10
  0x0000000002ddfe3b: jae    0x0000000002de19ca
  0x0000000002ddfe41: mov    %r10,0x60(%r15)
  0x0000000002ddfe45: prefetchw 0xc0(%r10)
  0x0000000002ddfe4d: movq   $0x1,(%r8)
  0x0000000002ddfe54: prefetchw 0x100(%r10)
  0x0000000002ddfe5c: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000002ddfe64: mov    %eax,0xc(%r8)
  0x0000000002ddfe68: prefetchw 0x140(%r10)
  0x0000000002ddfe70: prefetchw 0x180(%r10)     ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfe78: mov    %r8,%r10           ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfe7b: mov    %r10,0x88(%rsp)
  0x0000000002ddfe83: add    $0x10,%r10
  0x0000000002ddfe87: mov    %r10,%r9
  0x0000000002ddfe8a: cmp    0x4c(%rsp),%ebp
  0x0000000002ddfe8e: jb     0x0000000002de28bf
  0x0000000002ddfe94: mov    0x2c(%rsp),%r10d
  0x0000000002ddfe99: cmp    0x4c(%rsp),%r10d
  0x0000000002ddfe9e: jb     0x0000000002de28bf  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfea4: mov    0x4c(%rsp),%r11d
  0x0000000002ddfea9: test   %r11d,%r11d
  0x0000000002ddfeac: jle    0x0000000002de28f9
  0x0000000002ddfeb2: cmp    0x2c(%rsp),%r11d
  0x0000000002ddfeb7: jl     0x0000000002de12bd
  0x0000000002ddfebd: mov    0x78(%rsp),%r10
  0x0000000002ddfec2: add    $0xfffffffffffffff0,%r10
  0x0000000002ddfec6: shr    $0x3,%r10          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfeca: mov    0x68(%rsp),%rcx
  0x0000000002ddfecf: mov    %r9,%rdx
  0x0000000002ddfed2: mov    %r10,%r8
  0x0000000002ddfed5: movabs $0x2d02ca0,%r10
  0x0000000002ddfedf: callq  *%r10              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfee2: mov    0x88(%rsp),%r10
  0x0000000002ddfeea: mov    %r10,%r9
  0x0000000002ddfeed: shr    $0x3,%r9           ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfef1: mov    %r10,0x38(%rsp)
  0x0000000002ddfef6: jmpq   0x0000000002ddf691  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfefb: mov    0x38(%rsp),%edi
  0x0000000002ddfeff: cmp    0x30(%rsp),%edi
  0x0000000002ddff03: jge    0x0000000002de2975  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff09: test   %edi,%edi
  0x0000000002ddff0b: jl     0x0000000002de2939
  0x0000000002ddff11: cmp    %r10d,%edi
  0x0000000002ddff14: jge    0x0000000002de1e39
  0x0000000002ddff1a: cmp    %r10d,%edi
  0x0000000002ddff1d: jae    0x0000000002de1bab  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff23: movslq %r11d,%r10
  0x0000000002ddff26: movzwl 0x12(%r8,%r10,2),%r11d  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff2c: cmp    $0x5c,%r11d
  0x0000000002ddff30: je     0x0000000002de1c11  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddff36: cmp    $0x2f,%r11d
  0x0000000002ddff3a: je     0x0000000002de1c21  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddff40: cmp    0x30(%rsp),%edi
  0x0000000002ddff44: je     0x0000000002de1e89  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff4a: test   %ebx,%ebx
  0x0000000002ddff4c: jg     0x0000000002de092f  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddff52: mov    %ecx,%r9d
  0x0000000002ddff55: mov    0x68(%rsp),%r11
  0x0000000002ddff5a: mov    0xc(%r11),%r10d
  0x0000000002ddff5e: mov    0x48(%rsp),%ebp
  0x0000000002ddff62: cmp    %r10d,%ebp
  0x0000000002ddff65: jae    0x0000000002de1c55  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff6b: mov    0x34(%rsp),%ebx
  0x0000000002ddff6f: mov    %bx,0x10(%r11,%rbp,2)  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff75: jmpq   0x0000000002ddf4f3  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff7a: inc    %r10d              ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff7d: cmp    0x38(%rsp),%r10d
  0x0000000002ddff82: jl     0x0000000002ddf1fa  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff88: cmp    0x64(%rsp),%r10d
  0x0000000002ddff8d: jge    0x0000000002de1492
  0x0000000002ddff93: mov    0x30(%rsp),%r11
  0x0000000002ddff98: movzwl 0x10(%r11,%r10,2),%r11d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddff9e: cmp    $0x5c,%r11d
  0x0000000002ddffa2: je     0x0000000002ddffae  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddffa4: cmp    $0x2f,%r11d
  0x0000000002ddffa8: jne    0x0000000002ddf22d  ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddffae: movslq %r10d,%r11
  0x0000000002ddffb1: mov    0x30(%rsp),%r8
  0x0000000002ddffb6: movzwl 0x12(%r8,%r11,2),%r8d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddffbc: cmp    $0x5c,%r8d
  0x0000000002ddffc0: je     0x0000000002de1483  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddffc6: cmp    $0x2f,%r8d
  0x0000000002ddffca: je     0x0000000002de1483  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddffd0: inc    %r10d              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddffd3: jmpq   0x0000000002ddf22d  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddffd8: mov    0x60(%rsp),%ebx
  0x0000000002ddffdc: test   %ebx,%ebx
  0x0000000002ddffde: jg     0x0000000002de0b19  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddffe4: mov    0xc(%r10),%ecx
  0x0000000002ddffe8: test   %ecx,%ecx
  0x0000000002ddffea: jbe    0x0000000002de2913  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002ddfff0: mov    0x3c(%rsp),%ecx
  0x0000000002ddfff4: mov    %cx,0x10(%r10)     ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002ddfff9: mov    $0x1,%edi
  0x0000000002ddfffe: mov    $0x2,%ebx
  0x0000000002de0003: mov    $0x1,%ebp
  0x0000000002de0008: xor    %edx,%edx
  0x0000000002de000a: jmpq   0x0000000002dde9a0
  0x0000000002de000f: test   %edx,%edx
  0x0000000002de0011: jge    0x0000000002de0017  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0013: mov    0x60(%rsp),%esi
  0x0000000002de0017: mov    %esi,%r11d
  0x0000000002de001a: test   %esi,%esi
  0x0000000002de001c: jle    0x0000000002de2174  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0022: mov    $0x7ffffff7,%r9d
  0x0000000002de0028: sub    %esi,%r9d          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de002b: test   %r9d,%r9d
  0x0000000002de002e: jl     0x0000000002de2221  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0034: cmp    $0x80000,%esi
  0x0000000002de003a: ja     0x0000000002de2a84  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0040: movslq %esi,%r10          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0043: mov    %r10,%r8           ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0046: mov    %esi,0x4c(%rsp)
  0x0000000002de004a: cmp    %esi,%ebp
  0x0000000002de004c: cmovl  %ebp,%r11d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0050: mov    %r11d,0x64(%rsp)
  0x0000000002de0055: mov    %r8,%r10
  0x0000000002de0058: shl    %r10
  0x0000000002de005b: add    $0x17,%r10
  0x0000000002de005f: mov    %r10,%r11
  0x0000000002de0062: shr    $0x3,%r11          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0066: mov    %r11,0x70(%rsp)
  0x0000000002de006b: and    $0xfffffffffffffff8,%r10  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de006f: mov    %r10,0x78(%rsp)
  0x0000000002de0074: mov    %r11,%r10
  0x0000000002de0077: add    $0xfffffffffffffffe,%r10  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de007b: mov    %r10,0x80(%rsp)
  0x0000000002de0083: cmp    $0x80000,%esi
  0x0000000002de0089: ja     0x0000000002de1c8d
  0x0000000002de008f: mov    0x60(%r15),%r10
  0x0000000002de0093: mov    %r10,%r8
  0x0000000002de0096: mov    %r10,%r11
  0x0000000002de0099: mov    0x78(%rsp),%r10
  0x0000000002de009e: add    %r10,%r11
  0x0000000002de00a1: cmp    0x70(%r15),%r11
  0x0000000002de00a5: jae    0x0000000002de1c8d
  0x0000000002de00ab: mov    %r11,0x60(%r15)
  0x0000000002de00af: prefetchw 0xc0(%r11)
  0x0000000002de00b7: mov    %r8,%r10
  0x0000000002de00ba: movq   $0x1,(%r10)
  0x0000000002de00c1: prefetchw 0x100(%r11)
  0x0000000002de00c9: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x0000000002de00d1: mov    %esi,0xc(%r8)
  0x0000000002de00d5: prefetchw 0x140(%r11)
  0x0000000002de00dd: prefetchw 0x180(%r11)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de00e5: mov    %r8,%r10           ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de00e8: mov    %r10,0x88(%rsp)
  0x0000000002de00f0: add    $0x10,%r10         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de00f4: mov    %r10,%r9
  0x0000000002de00f7: cmp    0x64(%rsp),%ebp
  0x0000000002de00fb: jb     0x0000000002de2a8f
  0x0000000002de0101: mov    0x4c(%rsp),%r11d
  0x0000000002de0106: cmp    0x64(%rsp),%r11d
  0x0000000002de010b: jb     0x0000000002de2a8f
  0x0000000002de0111: mov    0x64(%rsp),%r10d
  0x0000000002de0116: test   %r10d,%r10d
  0x0000000002de0119: jle    0x0000000002de2ac9
  0x0000000002de011f: mov    %r10d,%r11d
  0x0000000002de0122: cmp    0x4c(%rsp),%r11d
  0x0000000002de0127: jl     0x0000000002de1605  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de012d: mov    0x78(%rsp),%r10
  0x0000000002de0132: add    $0xfffffffffffffff0,%r10
  0x0000000002de0136: shr    $0x3,%r10          ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de013a: mov    0x68(%rsp),%rcx
  0x0000000002de013f: mov    %r9,%rdx
  0x0000000002de0142: mov    %r10,%r8
  0x0000000002de0145: movabs $0x2d02ca0,%r10
  0x0000000002de014f: callq  *%r10
  0x0000000002de0152: mov    0x88(%rsp),%r10
  0x0000000002de015a: mov    %r10,%r8
  0x0000000002de015d: shr    $0x3,%r8           ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0161: mov    %r10,0x38(%rsp)
  0x0000000002de0166: jmpq   0x0000000002ddf0e2
  0x0000000002de016b: mov    0x38(%rsp),%ebx
  0x0000000002de016f: cmp    0x30(%rsp),%ebx
  0x0000000002de0173: jge    0x0000000002de2975
  0x0000000002de0179: test   %ebx,%ebx
  0x0000000002de017b: jl     0x0000000002de2939  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0181: cmp    %r10d,%ebx
  0x0000000002de0184: jge    0x0000000002de1e47  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de018a: cmp    %r10d,%ebx
  0x0000000002de018d: jae    0x0000000002de1bbd  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0193: movslq %edx,%r10
  0x0000000002de0196: movzwl 0x12(%r8,%r10,2),%r10d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de019c: cmp    $0x5c,%r10d
  0x0000000002de01a0: je     0x0000000002de1c2f
  0x0000000002de01a6: cmp    $0x2f,%r10d
  0x0000000002de01aa: je     0x0000000002de1c2f  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de01b0: mov    %ebx,%r10d
  0x0000000002de01b3: cmp    0x30(%rsp),%r10d
  0x0000000002de01b8: je     0x0000000002de1e96  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de01be: test   %r9d,%r9d
  0x0000000002de01c1: jg     0x0000000002de0c86  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de01c7: mov    %ecx,%r9d          ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de01ca: mov    0x20(%rsp),%r11
  0x0000000002de01cf: mov    0xc(%r11),%ecx
  0x0000000002de01d3: mov    0x48(%rsp),%ebp
  0x0000000002de01d7: cmp    %ecx,%ebp
  0x0000000002de01d9: jae    0x0000000002de1c64  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de01df: mov    0x34(%rsp),%ebx
  0x0000000002de01e3: mov    %bx,0x10(%r11,%rbp,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de01e9: jmpq   0x0000000002ddf9e8
  0x0000000002de01ee: cmp    0x3c(%rsp),%ebx
  0x0000000002de01f2: jne    0x0000000002dde7e5  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de01f8: jmpq   0x0000000002de1fbf
  0x0000000002de01fd: test   %edi,%edi
  0x0000000002de01ff: jge    0x0000000002de0205
  0x0000000002de0201: mov    0x60(%rsp),%edx    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0205: mov    %edx,%r11d
  0x0000000002de0208: test   %edx,%edx
  0x0000000002de020a: jle    0x0000000002de2183  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0210: mov    $0x7ffffff7,%r9d
  0x0000000002de0216: sub    %edx,%r9d          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0219: test   %r9d,%r9d
  0x0000000002de021c: jl     0x0000000002de2230
  0x0000000002de0222: cmp    $0x80000,%edx
  0x0000000002de0228: ja     0x0000000002de2bf1
  0x0000000002de022e: movslq %edx,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0231: mov    %edx,0x4c(%rsp)
  0x0000000002de0235: cmp    %edx,%ebp
  0x0000000002de0237: mov    %edx,%r10d
  0x0000000002de023a: cmovl  %ebp,%r10d         ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de023e: mov    %r10d,0x64(%rsp)
  0x0000000002de0243: mov    %r8,%r10
  0x0000000002de0246: shl    %r10
  0x0000000002de0249: add    $0x17,%r10
  0x0000000002de024d: mov    %r10,%r11
  0x0000000002de0250: shr    $0x3,%r11          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0254: mov    %r11,0x70(%rsp)
  0x0000000002de0259: and    $0xfffffffffffffff8,%r10  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de025d: mov    %r10,0x68(%rsp)
  0x0000000002de0262: mov    %r11,%r10
  0x0000000002de0265: add    $0xfffffffffffffffe,%r10  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0269: mov    %r10,0x78(%rsp)
  0x0000000002de026e: cmp    $0x80000,%edx
  0x0000000002de0274: ja     0x0000000002de1ec1
  0x0000000002de027a: mov    0x60(%r15),%r10
  0x0000000002de027e: mov    %r10,%r8
  0x0000000002de0281: mov    %r10,%r11
  0x0000000002de0284: mov    0x68(%rsp),%r10
  0x0000000002de0289: add    %r10,%r11
  0x0000000002de028c: cmp    0x70(%r15),%r11
  0x0000000002de0290: jae    0x0000000002de1ec1
  0x0000000002de0296: mov    %r11,0x60(%r15)
  0x0000000002de029a: prefetchw 0xc0(%r11)
  0x0000000002de02a2: mov    %r8,%r10
  0x0000000002de02a5: movq   $0x1,(%r10)
  0x0000000002de02ac: prefetchw 0x100(%r11)
  0x0000000002de02b4: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x0000000002de02bc: mov    %edx,0xc(%r8)
  0x0000000002de02c0: prefetchw 0x140(%r11)
  0x0000000002de02c8: prefetchw 0x180(%r11)     ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de02d0: mov    %r8,%r10           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de02d3: mov    %r10,0x80(%rsp)
  0x0000000002de02db: add    $0x10,%r10         ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de02df: mov    %r10,%r9
  0x0000000002de02e2: cmp    0x64(%rsp),%ebp
  0x0000000002de02e6: jb     0x0000000002de2bf9
  0x0000000002de02ec: mov    0x4c(%rsp),%r10d
  0x0000000002de02f1: cmp    0x64(%rsp),%r10d
  0x0000000002de02f6: jb     0x0000000002de2bf9
  0x0000000002de02fc: mov    0x64(%rsp),%r8d
  0x0000000002de0301: test   %r8d,%r8d
  0x0000000002de0304: jle    0x0000000002de2c31
  0x0000000002de030a: cmp    %r10d,%r8d
  0x0000000002de030d: jl     0x0000000002de16d5  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0313: mov    0x68(%rsp),%r10
  0x0000000002de0318: add    $0xfffffffffffffff0,%r10
  0x0000000002de031c: shr    $0x3,%r10          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0320: mov    0x38(%rsp),%rcx
  0x0000000002de0325: mov    %r9,%rdx
  0x0000000002de0328: mov    %r10,%r8
  0x0000000002de032b: movabs $0x2d02ca0,%r10
  0x0000000002de0335: callq  *%r10
  0x0000000002de0338: mov    0x80(%rsp),%r10
  0x0000000002de0340: mov    %r10,%r8
  0x0000000002de0343: shr    $0x3,%r8           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0347: mov    %r10,0x20(%rsp)
  0x0000000002de034c: mov    0x2c(%rsp),%r10d
  0x0000000002de0351: jmpq   0x0000000002ddf57f  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x0000000002de0356: cmp    $0x1,%r10d
  0x0000000002de035a: jle    0x0000000002de2c93
  0x0000000002de0360: cmp    $0x1,%r10d
  0x0000000002de0364: jbe    0x0000000002de2b79  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de036a: movzwl 0x12(%r12,%r8,8),%r9d  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0370: cmp    $0x5c,%r9d
  0x0000000002de0374: je     0x0000000002de08eb  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@218 (line 157)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de037a: cmp    $0x2f,%r9d
  0x0000000002de037e: je     0x0000000002de08eb  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0384: xor    %esi,%esi
  0x0000000002de0386: xor    %ebp,%ebp
  0x0000000002de0388: xor    %edi,%edi
  0x0000000002de038a: mov    0x3c(%rsp),%ebx
  0x0000000002de038e: mov    0x38(%rsp),%edx
  0x0000000002de0392: mov    0x68(%rsp),%r8
  0x0000000002de0397: mov    %r11d,%r9d
  0x0000000002de039a: jmpq   0x0000000002ddf3fb
  0x0000000002de039f: test   %r9d,%r9d
  0x0000000002de03a2: jge    0x0000000002de03a8  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de03a4: mov    0x60(%rsp),%esi    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de03a8: test   %esi,%esi
  0x0000000002de03aa: jle    0x0000000002de2d7e  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de03b0: mov    $0x7ffffff7,%r10d
  0x0000000002de03b6: sub    %esi,%r10d         ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de03b9: mov    %r10d,%r8d
  0x0000000002de03bc: test   %r10d,%r10d
  0x0000000002de03bf: jl     0x0000000002de24cb  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de03c5: cmp    $0x80000,%esi
  0x0000000002de03cb: ja     0x0000000002de2c48  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de03d1: mov    %esi,0x2c(%rsp)
  0x0000000002de03d5: movslq %esi,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de03d8: shl    %r10
  0x0000000002de03db: add    $0x17,%r10         ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de03df: mov    %r10,0x78(%rsp)
  0x0000000002de03e4: and    $0xfffffffffffffff8,%r10  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de03e8: mov    %r10,0x80(%rsp)
  0x0000000002de03f0: mov    0x2c(%rsp),%r10d
  0x0000000002de03f5: cmp    $0x80000,%r10d
  0x0000000002de03fc: ja     0x0000000002de1f8f
  0x0000000002de0402: mov    0x60(%r15),%r10
  0x0000000002de0406: mov    %r10,%r8
  0x0000000002de0409: mov    0x80(%rsp),%r11
  0x0000000002de0411: add    %r11,%r10
  0x0000000002de0414: cmp    0x70(%r15),%r10
  0x0000000002de0418: jae    0x0000000002de1f8f
  0x0000000002de041e: mov    %r10,0x60(%r15)
  0x0000000002de0422: prefetchw 0xc0(%r10)
  0x0000000002de042a: movq   $0x1,(%r8)
  0x0000000002de0431: prefetchw 0x100(%r10)
  0x0000000002de0439: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000002de0441: mov    0x2c(%rsp),%r11d
  0x0000000002de0446: mov    %r11d,0xc(%r8)
  0x0000000002de044a: prefetchw 0x140(%r10)
  0x0000000002de0452: prefetchw 0x180(%r10)     ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de045a: mov    %r8,%r10
  0x0000000002de045d: mov    %r10,0x88(%rsp)
  0x0000000002de0465: cmp    0x2c(%rsp),%ebp
  0x0000000002de0469: mov    0x2c(%rsp),%esi
  0x0000000002de046d: cmovl  %ebp,%esi          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0470: add    $0x10,%r10         ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0474: mov    %r10,%r9
  0x0000000002de0477: mov    0x78(%rsp),%r10
  0x0000000002de047c: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0480: mov    %r10,%rbx
  0x0000000002de0483: mov    %r10,%rcx
  0x0000000002de0486: add    $0xfffffffffffffffe,%rcx
  0x0000000002de048a: cmp    %esi,%ebp
  0x0000000002de048c: jb     0x0000000002de2c54
  0x0000000002de0492: mov    0x2c(%rsp),%r11d
  0x0000000002de0497: cmp    %esi,%r11d
  0x0000000002de049a: jb     0x0000000002de2c54  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de04a0: test   %esi,%esi
  0x0000000002de04a2: jle    0x0000000002de2c81
  0x0000000002de04a8: cmp    0x2c(%rsp),%esi
  0x0000000002de04ac: jl     0x0000000002de1754
  0x0000000002de04b2: mov    0x80(%rsp),%r10
  0x0000000002de04ba: add    $0xfffffffffffffff0,%r10
  0x0000000002de04be: shr    $0x3,%r10          ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@28 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de04c2: mov    0x70(%rsp),%rcx
  0x0000000002de04c7: mov    %r9,%rdx
  0x0000000002de04ca: mov    %r10,%r8
  0x0000000002de04cd: movabs $0x2d02ca0,%r10
  0x0000000002de04d7: callq  *%r10              ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de04da: mov    0x88(%rsp),%r10
  0x0000000002de04e2: mov    %r10,%r11
  0x0000000002de04e5: shr    $0x3,%r11          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de04e9: mov    %r10,0x68(%rsp)
  0x0000000002de04ee: mov    %r11d,%ecx
  0x0000000002de04f1: jmpq   0x0000000002ddf4c5
  0x0000000002de04f6: movslq %esi,%r8           ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de04f9: mov    %r8,%r11
  0x0000000002de04fc: shl    %r11
  0x0000000002de04ff: add    $0x10,%r11         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0503: mov    %r11,%r9
  0x0000000002de0506: and    $0xfffffffffffffff9,%r9
  0x0000000002de050a: mov    0x80(%rsp),%rdi
  0x0000000002de0512: add    %r9,%rdi
  0x0000000002de0515: shr    $0x3,%r11
  0x0000000002de0519: sub    %r11,%r10
  0x0000000002de051c: mov    %r10,%rcx
  0x0000000002de051f: xor    %rax,%rax
  0x0000000002de0522: shl    $0x3,%rcx
  0x0000000002de0526: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0529: mov    0x68(%rsp),%rcx
  0x0000000002de052e: movabs $0x2d02980,%r10
  0x0000000002de0538: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de053b: jmpq   0x0000000002ddec3d
  0x0000000002de0540: mov    0x28(%rsp),%r11d
  0x0000000002de0545: test   %r11d,%r11d
  0x0000000002de0548: jl     0x0000000002de0554  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de054a: mov    0x24(%rsp),%r10d
  0x0000000002de054f: mov    %r10d,0x78(%rsp)   ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0554: mov    0x78(%rsp),%r8d
  0x0000000002de0559: test   %r8d,%r8d
  0x0000000002de055c: jle    0x0000000002de2e12  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0562: mov    $0x7ffffff7,%ebp
  0x0000000002de0567: sub    0x78(%rsp),%ebp    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de056b: test   %ebp,%ebp
  0x0000000002de056d: jl     0x0000000002de2e65  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0573: cmp    $0x80000,%r8d
  0x0000000002de057a: ja     0x0000000002de2cc1  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0580: movslq 0x78(%rsp),%r9     ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0585: shl    %r9
  0x0000000002de0588: add    $0x17,%r9          ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@115 (line 124)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de058c: mov    %r9,%rdi
  0x0000000002de058f: and    $0xfffffffffffffff8,%rdi  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0593: cmp    $0x80000,%r8d
  0x0000000002de059a: ja     0x0000000002de20e3
  0x0000000002de05a0: mov    0x60(%r15),%rbx
  0x0000000002de05a4: mov    %rbx,%r10
  0x0000000002de05a7: add    %rdi,%r10
  0x0000000002de05aa: cmp    0x70(%r15),%r10
  0x0000000002de05ae: jae    0x0000000002de20e3
  0x0000000002de05b4: mov    %r10,0x60(%r15)
  0x0000000002de05b8: prefetchw 0xc0(%r10)
  0x0000000002de05c0: movq   $0x1,(%rbx)
  0x0000000002de05c7: prefetchw 0x100(%r10)
  0x0000000002de05cf: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002de05d6: mov    %r8d,0xc(%rbx)
  0x0000000002de05da: prefetchw 0x140(%r10)
  0x0000000002de05e2: prefetchw 0x180(%r10)
  0x0000000002de05ea: mov    0x4c(%rsp),%r11d
  0x0000000002de05ef: cmp    %r8d,%r11d
  0x0000000002de05f2: mov    %r8d,%esi
  0x0000000002de05f5: cmovl  %r11d,%esi         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de05f9: mov    %rbx,%rdx
  0x0000000002de05fc: add    $0x10,%rdx         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0600: shr    $0x3,%r9           ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0604: mov    %r9,%rcx
  0x0000000002de0607: add    $0xfffffffffffffffe,%rcx  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::newCapacity@-1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de060b: cmp    %esi,%r11d
  0x0000000002de060e: jb     0x0000000002de2cd3  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0614: cmp    %esi,%r8d
  0x0000000002de0617: jb     0x0000000002de2cd3  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de061d: test   %esi,%esi
  0x0000000002de061f: jle    0x0000000002de2d52
  0x0000000002de0625: cmp    %r8d,%esi
  0x0000000002de0628: jl     0x0000000002de18ce  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de062e: mov    %r11d,%ebp
  0x0000000002de0631: add    $0xfffffffffffffff0,%rdi
  0x0000000002de0635: shr    $0x3,%rdi          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0639: mov    0x30(%rsp),%rcx
  0x0000000002de063e: mov    %rdi,%r8
  0x0000000002de0641: movabs $0x2d02ca0,%r10
  0x0000000002de064b: callq  *%r10              ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de064e: mov    %ebp,%r11d         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0651: mov    %rbx,%r8
  0x0000000002de0654: shr    $0x3,%r8           ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0658: mov    %rbx,0x68(%rsp)
  0x0000000002de065d: jmpq   0x0000000002ddf5bf
  0x0000000002de0662: mov    %ecx,%r13d
  0x0000000002de0665: shl    %r13d              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0668: test   %r13d,%r13d
  0x0000000002de066b: jl     0x0000000002de0673  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de066d: add    $0x2,%r13d
  0x0000000002de0671: jmp    0x0000000002de0679
  0x0000000002de0673: mov    $0x2,%r13d         ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0679: test   %r13d,%r13d
  0x0000000002de067c: jle    0x0000000002de2e41  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0682: mov    $0x7ffffff7,%ebp
  0x0000000002de0687: sub    %r13d,%ebp         ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de068a: test   %ebp,%ebp
  0x0000000002de068c: jl     0x0000000002de2e99  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0692: cmp    $0x80000,%r13d
  0x0000000002de0699: ja     0x0000000002de2ccb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de069f: movslq %r13d,%rdx         ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de06a2: shl    %rdx
  0x0000000002de06a5: add    $0x17,%rdx         ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)

  0x0000000002de06a9: mov    %rdx,%rax
  0x0000000002de06ac: and    $0xfffffffffffffff8,%rax  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de06b0: cmp    $0x80000,%r13d
  0x0000000002de06b7: ja     0x0000000002de2115
  0x0000000002de06bd: mov    0x60(%r15),%rbp
  0x0000000002de06c1: mov    %rbp,%r8
  0x0000000002de06c4: add    %rax,%r8
  0x0000000002de06c7: cmp    0x70(%r15),%r8
  0x0000000002de06cb: jae    0x0000000002de2115
  0x0000000002de06d1: mov    %r8,0x60(%r15)
  0x0000000002de06d5: prefetchw 0xc0(%r8)
  0x0000000002de06dd: movq   $0x1,0x0(%rbp)
  0x0000000002de06e5: prefetchw 0x100(%r8)
  0x0000000002de06ed: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x0000000002de06f4: mov    %r13d,0xc(%rbp)
  0x0000000002de06f8: prefetchw 0x140(%r8)
  0x0000000002de0700: prefetchw 0x180(%r8)
  0x0000000002de0708: mov    0x80(%rsp),%r8d
  0x0000000002de0710: cmp    %r13d,%r8d
  0x0000000002de0713: mov    %r13d,%esi
  0x0000000002de0716: cmovl  %r8d,%esi          ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de071a: mov    %rbp,%r8
  0x0000000002de071d: add    $0x10,%r8          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0721: shr    $0x3,%rdx          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0725: mov    %rdx,%rcx
  0x0000000002de0728: add    $0xfffffffffffffffe,%rcx
  0x0000000002de072c: mov    0x80(%rsp),%r9d
  0x0000000002de0734: cmp    %esi,%r9d
  0x0000000002de0737: jb     0x0000000002de2d09
  0x0000000002de073d: cmp    %esi,%r13d
  0x0000000002de0740: jb     0x0000000002de2d09  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0746: test   %esi,%esi
  0x0000000002de0748: jle    0x0000000002de2d64  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de074e: cmp    %r13d,%esi
  0x0000000002de0751: jl     0x0000000002de1922  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0757: mov    %rbp,%r14
  0x0000000002de075a: mov    %r11d,%ebp
  0x0000000002de075d: add    $0xfffffffffffffff0,%rax
  0x0000000002de0761: shr    $0x3,%rax          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0765: mov    %rdi,%rcx
  0x0000000002de0768: mov    %r8,%rdx
  0x0000000002de076b: mov    %rax,%r8
  0x0000000002de076e: movabs $0x2d02ca0,%r10
  0x0000000002de0778: callq  *%r10              ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de077b: mov    %ebp,%r11d
  0x0000000002de077e: mov    %r14,%rbp          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0781: mov    %rbp,%r8
  0x0000000002de0784: shr    $0x3,%r8           ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0788: mov    %rbp,%r10
  0x0000000002de078b: mov    %r13d,0x80(%rsp)
  0x0000000002de0793: jmpq   0x0000000002ddf602
  0x0000000002de0798: test   %r11d,%r11d
  0x0000000002de079b: jge    0x0000000002de07a1
  0x0000000002de079d: mov    0x60(%rsp),%eax    ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de07a1: mov    %eax,%r11d
  0x0000000002de07a4: test   %eax,%eax
  0x0000000002de07a6: jle    0x0000000002de246d  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de07ac: mov    $0x7ffffff7,%r10d
  0x0000000002de07b2: sub    %eax,%r10d         ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de07b5: test   %r10d,%r10d
  0x0000000002de07b8: jl     0x0000000002de24d1
  0x0000000002de07be: cmp    $0x80000,%eax
  0x0000000002de07c4: ja     0x0000000002de2d76  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de07ca: movslq %eax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de07cd: shl    %r8
  0x0000000002de07d0: add    $0x17,%r8
  0x0000000002de07d4: mov    %r8,%r10
  0x0000000002de07d7: and    $0xfffffffffffffff8,%r10  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de07db: cmp    $0x80000,%eax
  0x0000000002de07e1: ja     0x0000000002de21c1
  0x0000000002de07e7: mov    %r10,0x78(%rsp)
  0x0000000002de07ec: mov    %r8,0x70(%rsp)
  0x0000000002de07f1: mov    %eax,0x2c(%rsp)
  0x0000000002de07f5: mov    0x60(%r15),%r10
  0x0000000002de07f9: mov    %r10,%r8
  0x0000000002de07fc: mov    0x78(%rsp),%r11
  0x0000000002de0801: add    %r11,%r10
  0x0000000002de0804: cmp    0x70(%r15),%r10
  0x0000000002de0808: jae    0x0000000002de21cf
  0x0000000002de080e: mov    %r10,0x60(%r15)
  0x0000000002de0812: prefetchw 0xc0(%r10)
  0x0000000002de081a: movq   $0x1,(%r8)
  0x0000000002de0821: prefetchw 0x100(%r10)
  0x0000000002de0829: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000002de0831: mov    %eax,0xc(%r8)
  0x0000000002de0835: prefetchw 0x140(%r10)
  0x0000000002de083d: prefetchw 0x180(%r10)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0845: mov    %r8,%r10           ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0848: mov    %r10,0x80(%rsp)
  0x0000000002de0850: cmp    0x2c(%rsp),%ebp
  0x0000000002de0854: mov    0x2c(%rsp),%esi
  0x0000000002de0858: cmovl  %ebp,%esi          ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de085b: add    $0x10,%r10
  0x0000000002de085f: mov    %r10,%r9
  0x0000000002de0862: mov    0x70(%rsp),%r10
  0x0000000002de0867: shr    $0x3,%r10
  0x0000000002de086b: mov    %r10,%rbx
  0x0000000002de086e: mov    %r10,%rcx
  0x0000000002de0871: add    $0xfffffffffffffffe,%rcx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0875: cmp    %esi,%ebp
  0x0000000002de0877: jb     0x0000000002de2d86
  0x0000000002de087d: mov    0x2c(%rsp),%r11d
  0x0000000002de0882: cmp    %esi,%r11d
  0x0000000002de0885: jb     0x0000000002de2d86
  0x0000000002de088b: test   %esi,%esi
  0x0000000002de088d: jle    0x0000000002de2db5
  0x0000000002de0893: cmp    0x2c(%rsp),%esi
  0x0000000002de0897: jl     0x0000000002de197a  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de089d: mov    0x78(%rsp),%r10
  0x0000000002de08a2: add    $0xfffffffffffffff0,%r10
  0x0000000002de08a6: shr    $0x3,%r10          ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de08aa: mov    0x68(%rsp),%rcx
  0x0000000002de08af: mov    %r9,%rdx
  0x0000000002de08b2: mov    %r10,%r8
  0x0000000002de08b5: movabs $0x2d02ca0,%r10
  0x0000000002de08bf: callq  *%r10
  0x0000000002de08c2: mov    0x80(%rsp),%r10
  0x0000000002de08ca: mov    %r10,%r9
  0x0000000002de08cd: shr    $0x3,%r9           ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de08d1: mov    %r10,0x20(%rsp)
  0x0000000002de08d6: jmpq   0x0000000002ddf9be
  0x0000000002de08db: mov    %r8,%r9
  0x0000000002de08de: shr    $0x3,%r9
  0x0000000002de08e2: mov    %esi,0x24(%rsp)
  0x0000000002de08e6: jmpq   0x0000000002ddfa01  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de08eb: mov    0x60(%rsp),%r9d
  0x0000000002de08f0: test   %r9d,%r9d
  0x0000000002de08f3: jg     0x0000000002de1365  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de08f9: mov    %r11d,%r9d         ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de08fc: mov    0x68(%rsp),%r8
  0x0000000002de0901: mov    0xc(%r8),%ecx
  0x0000000002de0905: test   %ecx,%ecx
  0x0000000002de0907: jbe    0x0000000002de2ec5  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de090d: mov    0x3c(%rsp),%ebx
  0x0000000002de0911: mov    %bx,0x10(%r8)      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0916: mov    0x2c(%rsp),%r11d
  0x0000000002de091b: mov    $0x1,%esi
  0x0000000002de0920: mov    $0x1,%ebp
  0x0000000002de0925: xor    %edi,%edi
  0x0000000002de0927: mov    %r11d,%edx
  0x0000000002de092a: jmpq   0x0000000002ddf3fb
  0x0000000002de092f: test   %r9d,%r9d
  0x0000000002de0932: jge    0x0000000002de0938  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0934: mov    0x60(%rsp),%esi    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0938: mov    %esi,%r8d
  0x0000000002de093b: test   %esi,%esi
  0x0000000002de093d: jle    0x0000000002de2ae3  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0943: mov    $0x7ffffff7,%r10d
  0x0000000002de0949: sub    %esi,%r10d         ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de094c: test   %r10d,%r10d
  0x0000000002de094f: jl     0x0000000002de2b29  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0955: cmp    $0x80000,%esi
  0x0000000002de095b: ja     0x0000000002de2ee5  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0961: movslq %esi,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0964: mov    %esi,0x2c(%rsp)
  0x0000000002de0968: shl    %r10
  0x0000000002de096b: add    $0x17,%r10         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de096f: mov    %r10,0x78(%rsp)
  0x0000000002de0974: and    $0xfffffffffffffff8,%r10  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0978: mov    %r10,0x80(%rsp)
  0x0000000002de0980: cmp    $0x80000,%esi
  0x0000000002de0986: ja     0x0000000002de264d
  0x0000000002de098c: mov    0x60(%r15),%r10
  0x0000000002de0990: mov    %r10,%r8
  0x0000000002de0993: mov    0x80(%rsp),%r11
  0x0000000002de099b: add    %r11,%r10
  0x0000000002de099e: cmp    0x70(%r15),%r10
  0x0000000002de09a2: jae    0x0000000002de264d
  0x0000000002de09a8: mov    %r10,0x60(%r15)
  0x0000000002de09ac: prefetchw 0xc0(%r10)
  0x0000000002de09b4: movq   $0x1,(%r8)
  0x0000000002de09bb: prefetchw 0x100(%r10)
  0x0000000002de09c3: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000002de09cb: mov    %esi,0xc(%r8)
  0x0000000002de09cf: prefetchw 0x140(%r10)
  0x0000000002de09d7: prefetchw 0x180(%r10)     ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de09df: mov    %r8,%r10           ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de09e2: mov    %r10,0x88(%rsp)
  0x0000000002de09ea: cmp    0x2c(%rsp),%ebp
  0x0000000002de09ee: mov    0x2c(%rsp),%esi
  0x0000000002de09f2: cmovl  %ebp,%esi          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de09f5: add    $0x10,%r10         ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de09f9: mov    %r10,%r9
  0x0000000002de09fc: mov    0x78(%rsp),%r10
  0x0000000002de0a01: shr    $0x3,%r10          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0a05: mov    %r10,%rbx
  0x0000000002de0a08: mov    %r10,%rcx
  0x0000000002de0a0b: add    $0xfffffffffffffffe,%rcx
  0x0000000002de0a0f: cmp    %esi,%ebp
  0x0000000002de0a11: jb     0x0000000002de2eed
  0x0000000002de0a17: mov    0x2c(%rsp),%r11d
  0x0000000002de0a1c: cmp    %esi,%r11d
  0x0000000002de0a1f: jb     0x0000000002de2eed  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0a25: test   %esi,%esi
  0x0000000002de0a27: jle    0x0000000002de2f19
  0x0000000002de0a2d: cmp    %r11d,%esi
  0x0000000002de0a30: jl     0x0000000002de1ee0  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0a36: mov    0x80(%rsp),%r10
  0x0000000002de0a3e: add    $0xfffffffffffffff0,%r10
  0x0000000002de0a42: shr    $0x3,%r10          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0a46: mov    0x70(%rsp),%rcx
  0x0000000002de0a4b: mov    %r9,%rdx
  0x0000000002de0a4e: mov    %r10,%r8
  0x0000000002de0a51: movabs $0x2d02ca0,%r10
  0x0000000002de0a5b: callq  *%r10              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0a5e: mov    0x88(%rsp),%r10
  0x0000000002de0a66: mov    %r10,%r9
  0x0000000002de0a69: shr    $0x3,%r9           ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0a6d: mov    %r10,0x68(%rsp)
  0x0000000002de0a72: jmpq   0x0000000002ddff55
  0x0000000002de0a77: movslq %ebp,%r8           ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0a7a: mov    %r8,%r10
  0x0000000002de0a7d: shl    %r10
  0x0000000002de0a80: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0a84: mov    %r10,%r11
  0x0000000002de0a87: and    $0xfffffffffffffff9,%r11
  0x0000000002de0a8b: mov    0x88(%rsp),%rdi
  0x0000000002de0a93: add    %r11,%rdi
  0x0000000002de0a96: shr    $0x3,%r10
  0x0000000002de0a9a: mov    0x70(%rsp),%r11
  0x0000000002de0a9f: sub    %r10,%r11
  0x0000000002de0aa2: mov    %r11,%rcx
  0x0000000002de0aa5: xor    %rax,%rax
  0x0000000002de0aa8: shl    $0x3,%rcx
  0x0000000002de0aac: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0aaf: mov    0x68(%rsp),%rcx
  0x0000000002de0ab4: movabs $0x2d02980,%r10
  0x0000000002de0abe: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0ac1: jmpq   0x0000000002ddf069  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0ac6: movabs $0x7c0000208,%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de0ad0: mov    %esi,%r8d
  0x0000000002de0ad3: callq  0x0000000002db36e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=9656}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de0ad8: mov    %rax,%r8
  0x0000000002de0adb: jmpq   0x0000000002ddebd0
  0x0000000002de0ae0: movabs $0x7c0000208,%rdx  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de0aea: mov    0x4c(%rsp),%r8d
  0x0000000002de0aef: mov    0x50(%rsp),%rbp
  0x0000000002de0af4: data16 xchg %ax,%ax
  0x0000000002de0af7: callq  0x0000000002db4fe0  ; OopMap{rbp=Oop [48]=Oop [64]=Oop [72]=NarrowOop [80]=Oop off=9692}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de0afc: mov    %rax,%r10
  0x0000000002de0aff: jmpq   0x0000000002dde86b  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0b04: movabs $0x7c00016d0,%rdx  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002de0b0e: nop
  0x0000000002de0b0f: callq  0x0000000002db4ee0  ; OopMap{[32]=NarrowOop [40]=Oop off=9716}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de0b14: jmpq   0x0000000002ddeea0
  0x0000000002de0b19: mov    0x28(%rsp),%r8d
  0x0000000002de0b1e: test   %r8d,%r8d
  0x0000000002de0b21: jl     0x0000000002de0b2a  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0b23: mov    0x24(%rsp),%r9d
  0x0000000002de0b28: jmp    0x0000000002de0b30
  0x0000000002de0b2a: mov    $0x1,%r9d          ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0b30: test   %r9d,%r9d
  0x0000000002de0b33: jle    0x0000000002de2fd7  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0b39: mov    $0x7ffffff7,%ebp
  0x0000000002de0b3e: sub    %r9d,%ebp          ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0b41: test   %ebp,%ebp
  0x0000000002de0b43: jl     0x0000000002de3001  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0b49: cmp    $0x80000,%r9d
  0x0000000002de0b50: ja     0x0000000002de2f2b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0b56: movslq %r9d,%rdi          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0b59: cmp    %r9d,%r11d
  0x0000000002de0b5c: mov    %r9d,%ebx
  0x0000000002de0b5f: cmovl  %r11d,%ebx         ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0b63: shl    %rdi
  0x0000000002de0b66: add    $0x17,%rdi         ;*invokevirtual toString
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0b6a: mov    %rdi,%rdx
  0x0000000002de0b6d: shr    $0x3,%rdx          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0b71: and    $0xfffffffffffffff8,%rdi  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0b75: mov    %rdx,%rbp
  0x0000000002de0b78: add    $0xfffffffffffffffe,%rbp  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0b7c: cmp    $0x80000,%r9d
  0x0000000002de0b83: ja     0x0000000002de2825
  0x0000000002de0b89: mov    0x60(%r15),%rsi
  0x0000000002de0b8d: mov    %rsi,%r8
  0x0000000002de0b90: add    %rdi,%r8
  0x0000000002de0b93: cmp    0x70(%r15),%r8
  0x0000000002de0b97: jae    0x0000000002de2825
  0x0000000002de0b9d: mov    %r8,0x60(%r15)
  0x0000000002de0ba1: prefetchw 0xc0(%r8)
  0x0000000002de0ba9: movq   $0x1,(%rsi)
  0x0000000002de0bb0: prefetchw 0x100(%r8)
  0x0000000002de0bb8: movl   $0xf8000041,0x8(%rsi)  ;   {metadata({type array char})}
  0x0000000002de0bbf: mov    %r9d,0xc(%rsi)
  0x0000000002de0bc3: prefetchw 0x140(%r8)
  0x0000000002de0bcb: prefetchw 0x180(%r8)      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0bd3: mov    %rsi,%rax
  0x0000000002de0bd6: add    $0x10,%rax         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0bda: cmp    %ebx,%r11d
  0x0000000002de0bdd: jb     0x0000000002de2f33
  0x0000000002de0be3: cmp    %ebx,%r9d
  0x0000000002de0be6: jb     0x0000000002de2f33  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0bec: test   %ebx,%ebx
  0x0000000002de0bee: jle    0x0000000002de2f7b
  0x0000000002de0bf4: cmp    %r9d,%ebx
  0x0000000002de0bf7: jl     0x0000000002de2031  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0bfd: mov    %rsi,%rbp
  0x0000000002de0c00: mov    %r11d,%ebx
  0x0000000002de0c03: add    $0xfffffffffffffff0,%rdi
  0x0000000002de0c07: shr    $0x3,%rdi          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c0b: mov    %rax,%rdx
  0x0000000002de0c0e: mov    %rdi,%r8
  0x0000000002de0c11: movabs $0x2d02ca0,%r10
  0x0000000002de0c1b: callq  *%r10              ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c1e: mov    %ebx,%r11d
  0x0000000002de0c21: mov    %rbp,%rsi          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c24: mov    %rsi,%r8
  0x0000000002de0c27: shr    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c2b: mov    %rsi,%r10
  0x0000000002de0c2e: jmpq   0x0000000002ddffe4  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c33: add    $0x2,%r11d         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0c37: cmp    0x64(%rsp),%r11d
  0x0000000002de0c3c: jl     0x0000000002ddf123  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::toString@20 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0c42: cmp    0x4c(%rsp),%r11d
  0x0000000002de0c47: jge    0x0000000002dde8ac
  0x0000000002de0c4d: test   %r11d,%r11d
  0x0000000002de0c50: jl     0x0000000002de1a9d
  0x0000000002de0c56: cmp    0x4c(%rsp),%r11d
  0x0000000002de0c5b: jge    0x0000000002de1ad1  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c61: movzwl 0x10(%rbx,%r11,2),%r8d  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c67: cmp    $0x5c,%r8d
  0x0000000002de0c6b: je     0x0000000002de0c77
  0x0000000002de0c6d: cmp    $0x2f,%r8d
  0x0000000002de0c71: jne    0x0000000002dde8ac  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c77: inc    %r11d              ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c7a: cmp    0x4c(%rsp),%r11d
  0x0000000002de0c7f: jl     0x0000000002de0c4d  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0c81: jmpq   0x0000000002dde8ac
  0x0000000002de0c86: test   %r11d,%r11d
  0x0000000002de0c89: jge    0x0000000002de0c8f
  0x0000000002de0c8b: mov    0x60(%rsp),%eax    ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0c8f: mov    %eax,%r8d
  0x0000000002de0c92: test   %eax,%eax
  0x0000000002de0c94: jle    0x0000000002de2aec  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0c9a: mov    $0x7ffffff7,%r9d
  0x0000000002de0ca0: sub    %eax,%r9d          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0ca3: test   %r9d,%r9d
  0x0000000002de0ca6: jl     0x0000000002de2b38
  0x0000000002de0cac: cmp    $0x80000,%eax
  0x0000000002de0cb2: ja     0x0000000002de2f90  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0cb8: movslq %eax,%rbx          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0cbb: shl    %rbx
  0x0000000002de0cbe: add    $0x17,%rbx
  0x0000000002de0cc2: mov    %rbx,%r9
  0x0000000002de0cc5: and    $0xfffffffffffffff8,%r9  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0cc9: cmp    $0x80000,%eax
  0x0000000002de0ccf: ja     0x0000000002de2889
  0x0000000002de0cd5: mov    0x60(%r15),%rcx
  0x0000000002de0cd9: mov    %rcx,%r11
  0x0000000002de0cdc: add    %r9,%r11
  0x0000000002de0cdf: cmp    0x70(%r15),%r11
  0x0000000002de0ce3: jae    0x0000000002de2889
  0x0000000002de0ce9: mov    %r11,0x60(%r15)
  0x0000000002de0ced: prefetchw 0xc0(%r11)
  0x0000000002de0cf5: movq   $0x1,(%rcx)
  0x0000000002de0cfc: prefetchw 0x100(%r11)
  0x0000000002de0d04: movl   $0xf8000041,0x8(%rcx)  ;   {metadata({type array char})}
  0x0000000002de0d0b: mov    %eax,0xc(%rcx)
  0x0000000002de0d0e: prefetchw 0x140(%r11)
  0x0000000002de0d16: prefetchw 0x180(%r11)
  0x0000000002de0d1e: mov    %r10d,0x2c(%rsp)
  0x0000000002de0d23: mov    %eax,0x38(%rsp)
  0x0000000002de0d27: mov    %rbx,0x70(%rsp)
  0x0000000002de0d2c: mov    %r9,0x78(%rsp)     ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0d31: cmp    0x38(%rsp),%ebp
  0x0000000002de0d35: mov    0x38(%rsp),%esi
  0x0000000002de0d39: cmovl  %ebp,%esi          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0d3c: mov    %rcx,%r10
  0x0000000002de0d3f: add    $0x10,%r10         ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0d43: mov    %r10,%rbx
  0x0000000002de0d46: mov    %rcx,0x80(%rsp)
  0x0000000002de0d4e: mov    0x70(%rsp),%r10
  0x0000000002de0d53: shr    $0x3,%r10
  0x0000000002de0d57: mov    %r10,%rcx
  0x0000000002de0d5a: add    $0xfffffffffffffffe,%rcx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0d5e: cmp    %esi,%ebp
  0x0000000002de0d60: jb     0x0000000002de2f98
  0x0000000002de0d66: mov    0x38(%rsp),%r11d
  0x0000000002de0d6b: cmp    %esi,%r11d
  0x0000000002de0d6e: jb     0x0000000002de2f98
  0x0000000002de0d74: test   %esi,%esi
  0x0000000002de0d76: jle    0x0000000002de2fc5
  0x0000000002de0d7c: cmp    0x38(%rsp),%esi
  0x0000000002de0d80: jl     0x0000000002de2096  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0d86: mov    0x78(%rsp),%r10
  0x0000000002de0d8b: add    $0xfffffffffffffff0,%r10
  0x0000000002de0d8f: shr    $0x3,%r10          ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0d93: mov    0x68(%rsp),%rcx
  0x0000000002de0d98: mov    %rbx,%rdx
  0x0000000002de0d9b: mov    %r10,%r8
  0x0000000002de0d9e: movabs $0x2d02ca0,%r10
  0x0000000002de0da8: callq  *%r10
  0x0000000002de0dab: mov    0x80(%rsp),%r10
  0x0000000002de0db3: mov    %r10,%r9
  0x0000000002de0db6: shr    $0x3,%r9           ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0dba: mov    %r10,0x20(%rsp)
  0x0000000002de0dbf: mov    0x2c(%rsp),%r10d
  0x0000000002de0dc4: jmpq   0x0000000002de01ca
  0x0000000002de0dc9: mov    0x30(%rsp),%r11d   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0dce: mov    %edi,%ebx
  0x0000000002de0dd0: mov    %ebp,%edi
  0x0000000002de0dd2: mov    %ebx,%ebp          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0dd4: mov    $0xffffffe4,%edx
  0x0000000002de0dd9: mov    %rax,0x20(%rsp)
  0x0000000002de0dde: mov    %r11d,0x28(%rsp)
  0x0000000002de0de3: mov    %edi,0x2c(%rsp)
  0x0000000002de0de7: mov    %ecx,0x30(%rsp)
  0x0000000002de0deb: mov    %r10,0x38(%rsp)
  0x0000000002de0df0: mov    %esi,0x34(%rsp)
  0x0000000002de0df4: mov    %r8d,0x40(%rsp)
  0x0000000002de0df9: xchg   %ax,%ax
  0x0000000002de0dfb: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [64]=NarrowOop [80]=Oop off=10464}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de0e00: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002de0e01: mov    0x24(%rsp),%r8d
  0x0000000002de0e06: mov    %r8d,0x2c(%rsp)    ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0e0b: mov    $0xffffffe4,%edx   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0e10: mov    0x40(%rsp),%r11
  0x0000000002de0e15: mov    %r11,0x20(%rsp)
  0x0000000002de0e1a: mov    0x30(%rsp),%r11d
  0x0000000002de0e1f: mov    %r11d,0x28(%rsp)
  0x0000000002de0e24: mov    0x34(%rsp),%r8d
  0x0000000002de0e29: mov    %r8d,0x30(%rsp)
  0x0000000002de0e2e: mov    0x4c(%rsp),%r11d
  0x0000000002de0e33: mov    %r11d,0x34(%rsp)
  0x0000000002de0e38: mov    %r10,0x48(%rsp)
  0x0000000002de0e3d: xchg   %ax,%ax
  0x0000000002de0e3f: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=10532}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de0e44: int3   
  0x0000000002de0e45: movslq %esi,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0e48: mov    %r8,%r10
  0x0000000002de0e4b: shl    %r10
  0x0000000002de0e4e: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0e52: mov    %r10,%r11
  0x0000000002de0e55: and    $0xfffffffffffffff9,%r11
  0x0000000002de0e59: mov    0x80(%rsp),%rdi
  0x0000000002de0e61: add    %r11,%rdi
  0x0000000002de0e64: shr    $0x3,%r10
  0x0000000002de0e68: mov    %rbx,%r11
  0x0000000002de0e6b: sub    %r10,%r11
  0x0000000002de0e6e: mov    %r11,%rcx
  0x0000000002de0e71: xor    %rax,%rax
  0x0000000002de0e74: shl    $0x3,%rcx
  0x0000000002de0e78: rep rex.W stos %al,%es:(%rdi)  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0e7b: mov    0x68(%rsp),%rcx
  0x0000000002de0e80: mov    %r9,%rdx
  0x0000000002de0e83: movabs $0x2d02980,%r10
  0x0000000002de0e8d: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0e90: jmpq   0x0000000002ddf8dc
  0x0000000002de0e95: mov    0x28(%rsp),%r11d
  0x0000000002de0e9a: test   %r11d,%r11d
  0x0000000002de0e9d: jl     0x0000000002de0ea9  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0e9f: mov    0x24(%rsp),%r10d
  0x0000000002de0ea4: mov    %r10d,0x78(%rsp)   ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalizePrefix@62 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0ea9: mov    0x78(%rsp),%r8d
  0x0000000002de0eae: test   %r8d,%r8d
  0x0000000002de0eb1: jle    0x0000000002de30ed  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0eb7: mov    $0x7ffffff7,%ebp
  0x0000000002de0ebc: sub    0x78(%rsp),%ebp    ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalizePrefix@62 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0ec0: test   %ebp,%ebp
  0x0000000002de0ec2: jl     0x0000000002de3141  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0ec8: cmp    $0x80000,%r8d
  0x0000000002de0ecf: ja     0x0000000002de3031  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0ed5: movslq 0x78(%rsp),%r11    ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0eda: shl    %r11
  0x0000000002de0edd: add    $0x17,%r11         ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0ee1: mov    %r11,%r9
  0x0000000002de0ee4: and    $0xfffffffffffffff8,%r9  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0ee8: cmp    $0x80000,%r8d
  0x0000000002de0eef: ja     0x0000000002de29f0
  0x0000000002de0ef5: mov    0x60(%r15),%rbx
  0x0000000002de0ef9: mov    %rbx,%r10
  0x0000000002de0efc: add    %r9,%r10
  0x0000000002de0eff: cmp    0x70(%r15),%r10
  0x0000000002de0f03: jae    0x0000000002de29f0
  0x0000000002de0f09: mov    %r10,0x60(%r15)
  0x0000000002de0f0d: prefetchw 0xc0(%r10)
  0x0000000002de0f15: movq   $0x1,(%rbx)
  0x0000000002de0f1c: prefetchw 0x100(%r10)
  0x0000000002de0f24: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002de0f2b: mov    %r8d,0xc(%rbx)
  0x0000000002de0f2f: prefetchw 0x140(%r10)
  0x0000000002de0f37: prefetchw 0x180(%r10)
  0x0000000002de0f3f: mov    0x4c(%rsp),%r10d
  0x0000000002de0f44: cmp    %r8d,%r10d
  0x0000000002de0f47: mov    %r8d,%esi
  0x0000000002de0f4a: cmovl  %r10d,%esi         ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0f4e: mov    %rbx,%rdi
  0x0000000002de0f51: add    $0x10,%rdi         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0f55: shr    $0x3,%r11          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0f59: mov    %r11,%rcx
  0x0000000002de0f5c: add    $0xfffffffffffffffe,%rcx
  0x0000000002de0f60: cmp    %esi,%r10d
  0x0000000002de0f63: jb     0x0000000002de3043
  0x0000000002de0f69: cmp    %esi,%r8d
  0x0000000002de0f6c: jb     0x0000000002de3043
  0x0000000002de0f72: test   %esi,%esi
  0x0000000002de0f74: jle    0x0000000002de30cc
  0x0000000002de0f7a: cmp    %r8d,%esi
  0x0000000002de0f7d: jl     0x0000000002de2369  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0f83: mov    %rbx,%rbp
  0x0000000002de0f86: mov    %r10d,%ebx
  0x0000000002de0f89: add    $0xfffffffffffffff0,%r9
  0x0000000002de0f8d: shr    $0x3,%r9           ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0f91: mov    0x70(%rsp),%rcx
  0x0000000002de0f96: mov    %rdi,%rdx
  0x0000000002de0f99: mov    %r9,%r8
  0x0000000002de0f9c: movabs $0x2d02ca0,%r10
  0x0000000002de0fa6: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0fa9: mov    %ebx,%r10d
  0x0000000002de0fac: mov    %rbp,%rbx          ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0faf: mov    %rbx,%r9
  0x0000000002de0fb2: shr    $0x3,%r9           ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0fb6: mov    %rbx,0x68(%rsp)
  0x0000000002de0fbb: jmpq   0x0000000002ddf31b
  0x0000000002de0fc0: mov    0x74(%rsp),%r9d
  0x0000000002de0fc5: mov    %r9d,%r13d
  0x0000000002de0fc8: shl    %r13d              ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0fcb: test   %r13d,%r13d
  0x0000000002de0fce: jl     0x0000000002de0fd6  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de0fd0: add    $0x2,%r13d
  0x0000000002de0fd4: jmp    0x0000000002de0fdc
  0x0000000002de0fd6: mov    $0x2,%r13d         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0fdc: test   %r13d,%r13d
  0x0000000002de0fdf: jle    0x0000000002de311d
  0x0000000002de0fe5: mov    $0x7ffffff7,%ebp
  0x0000000002de0fea: sub    %r13d,%ebp
  0x0000000002de0fed: test   %ebp,%ebp
  0x0000000002de0fef: jl     0x0000000002de3175  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de0ff5: cmp    $0x80000,%r13d
  0x0000000002de0ffc: ja     0x0000000002de303b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1002: movslq %r13d,%r9          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1005: shl    %r9
  0x0000000002de1008: add    $0x17,%r9          ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de100c: mov    %r9,%rax
  0x0000000002de100f: and    $0xfffffffffffffff8,%rax  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1013: cmp    $0x80000,%r13d
  0x0000000002de101a: ja     0x0000000002de2a25
  0x0000000002de1020: mov    0x60(%r15),%rdx
  0x0000000002de1024: mov    %rdx,%r11
  0x0000000002de1027: add    %rax,%r11
  0x0000000002de102a: cmp    0x70(%r15),%r11
  0x0000000002de102e: jae    0x0000000002de2a25
  0x0000000002de1034: mov    %r11,0x60(%r15)
  0x0000000002de1038: prefetchw 0xc0(%r11)
  0x0000000002de1040: movq   $0x1,(%rdx)
  0x0000000002de1047: prefetchw 0x100(%r11)
  0x0000000002de104f: movl   $0xf8000041,0x8(%rdx)  ;   {metadata({type array char})}
  0x0000000002de1056: mov    %r13d,0xc(%rdx)
  0x0000000002de105a: prefetchw 0x140(%r11)
  0x0000000002de1062: prefetchw 0x180(%r11)     ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de106a: mov    0x74(%rsp),%r11d
  0x0000000002de106f: cmp    %r13d,%r11d
  0x0000000002de1072: mov    %r13d,%esi
  0x0000000002de1075: cmovl  %r11d,%esi         ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1079: mov    %rdx,%rbp
  0x0000000002de107c: add    $0x10,%rbp         ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1080: shr    $0x3,%r9           ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1084: mov    %r9,%rcx
  0x0000000002de1087: add    $0xfffffffffffffffe,%rcx
  0x0000000002de108b: mov    0x74(%rsp),%r11d
  0x0000000002de1090: cmp    %esi,%r11d
  0x0000000002de1093: jb     0x0000000002de3075
  0x0000000002de1099: cmp    %esi,%r13d
  0x0000000002de109c: jb     0x0000000002de3075
  0x0000000002de10a2: test   %esi,%esi
  0x0000000002de10a4: jle    0x0000000002de30db
  0x0000000002de10aa: cmp    %r13d,%esi
  0x0000000002de10ad: jl     0x0000000002de23c0  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de10b3: mov    %rbp,%r8
  0x0000000002de10b6: mov    %rdx,%r14
  0x0000000002de10b9: mov    %r10d,%ebp
  0x0000000002de10bc: add    $0xfffffffffffffff0,%rax
  0x0000000002de10c0: shr    $0x3,%rax          ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de10c4: mov    %rdi,%rcx
  0x0000000002de10c7: mov    %r8,%rdx
  0x0000000002de10ca: mov    %rax,%r8
  0x0000000002de10cd: movabs $0x2d02ca0,%r10
  0x0000000002de10d7: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de10da: mov    %ebp,%r10d
  0x0000000002de10dd: mov    %r14,%rdx          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de10e0: mov    %rdx,%r9
  0x0000000002de10e3: shr    $0x3,%r9           ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de10e7: mov    %rdx,%r8
  0x0000000002de10ea: mov    %r13d,0x74(%rsp)
  0x0000000002de10ef: jmpq   0x0000000002ddf34f
  0x0000000002de10f4: mov    0x30(%rsp),%r11d   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de10f9: mov    %edi,%ebx
  0x0000000002de10fb: mov    %ebp,%edi
  0x0000000002de10fd: mov    %ebx,%ebp          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de10ff: mov    $0xffffff65,%edx
  0x0000000002de1104: mov    %r11d,0x28(%rsp)
  0x0000000002de1109: mov    %edi,0x2c(%rsp)
  0x0000000002de110d: mov    %ecx,0x30(%rsp)
  0x0000000002de1111: mov    %rax,0x38(%rsp)
  0x0000000002de1116: mov    %r9d,0x40(%rsp)
  0x0000000002de111b: mov    %esi,0x44(%rsp)
  0x0000000002de111f: mov    %r8d,0x48(%rsp)
  0x0000000002de1124: data16 xchg %ax,%ax
  0x0000000002de1127: callq  0x0000000002cf57a0  ; OopMap{[56]=Oop [72]=NarrowOop [80]=Oop off=11276}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de112c: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002de112d: movslq %esi,%r8           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1130: mov    %r8,%r10
  0x0000000002de1133: shl    %r10
  0x0000000002de1136: add    $0x10,%r10
  0x0000000002de113a: mov    %r10,%r11
  0x0000000002de113d: and    $0xfffffffffffffff9,%r11
  0x0000000002de1141: mov    0x80(%rsp),%rdi
  0x0000000002de1149: add    %r11,%rdi
  0x0000000002de114c: shr    $0x3,%r10
  0x0000000002de1150: mov    %rbx,%r11
  0x0000000002de1153: sub    %r10,%r11
  0x0000000002de1156: mov    %r11,%rcx
  0x0000000002de1159: xor    %rax,%rax
  0x0000000002de115c: shl    $0x3,%rcx
  0x0000000002de1160: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1163: mov    0x68(%rsp),%rcx
  0x0000000002de1168: mov    %r9,%rdx
  0x0000000002de116b: movabs $0x2d02980,%r10
  0x0000000002de1175: callq  *%r10              ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1178: jmpq   0x0000000002ddfc0c
  0x0000000002de117d: movslq %esi,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1180: mov    %r8,%r10
  0x0000000002de1183: shl    %r10
  0x0000000002de1186: add    $0x10,%r10         ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de118a: mov    %r10,%r11
  0x0000000002de118d: and    $0xfffffffffffffff9,%r11
  0x0000000002de1191: mov    0x78(%rsp),%rdi
  0x0000000002de1196: add    %r11,%rdi
  0x0000000002de1199: shr    $0x3,%r10
  0x0000000002de119d: mov    %rbx,%r11
  0x0000000002de11a0: sub    %r10,%r11
  0x0000000002de11a3: mov    %r11,%rcx
  0x0000000002de11a6: xor    %rax,%rax
  0x0000000002de11a9: shl    $0x3,%rcx
  0x0000000002de11ad: rep rex.W stos %al,%es:(%rdi)  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de11b0: mov    0x38(%rsp),%rcx
  0x0000000002de11b5: mov    %r9,%rdx
  0x0000000002de11b8: movabs $0x2d02980,%r10
  0x0000000002de11c2: callq  *%r10              ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de11c5: jmpq   0x0000000002ddfd70  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de11ca: movabs $0x7c0000208,%rdx  ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de11d4: mov    %esi,%r8d
  0x0000000002de11d7: callq  0x0000000002db36e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=11452}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de11dc: mov    %rax,%r8
  0x0000000002de11df: jmpq   0x0000000002ddf00c
  0x0000000002de11e4: mov    %r11d,0x24(%rsp)   ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de11e9: mov    0x24(%rsp),%r9d
  0x0000000002de11ee: mov    %r9d,0x2c(%rsp)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de11f3: mov    $0xffffffe4,%edx
  0x0000000002de11f8: mov    0x40(%rsp),%rbp
  0x0000000002de11fd: mov    0x30(%rsp),%r11d
  0x0000000002de1202: mov    %r11d,0x20(%rsp)
  0x0000000002de1207: mov    0x34(%rsp),%r11d
  0x0000000002de120c: mov    %r11d,0x28(%rsp)
  0x0000000002de1211: mov    %r10,0x30(%rsp)
  0x0000000002de1216: mov    0x48(%rsp),%r11d
  0x0000000002de121b: mov    %r11d,0x38(%rsp)
  0x0000000002de1220: mov    %r8d,0x3c(%rsp)
  0x0000000002de1225: mov    0x50(%rsp),%r10
  0x0000000002de122a: mov    %r10,0x48(%rsp)
  0x0000000002de122f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [48]=Oop [60]=NarrowOop [72]=Oop [80]=Oop off=11540}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1234: int3   
  0x0000000002de1235: mov    0x2c(%rsp),%r10d
  0x0000000002de123a: mov    %r10d,0x24(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de123f: mov    0x24(%rsp),%r11d
  0x0000000002de1244: mov    %r11d,0x2c(%rsp)
  0x0000000002de1249: jmp    0x0000000002de125f
  0x0000000002de124b: mov    0x2c(%rsp),%r10d
  0x0000000002de1250: mov    %r10d,0x24(%rsp)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1255: mov    0x24(%rsp),%r11d
  0x0000000002de125a: mov    %r11d,0x2c(%rsp)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de125f: mov    $0xffffff65,%edx
  0x0000000002de1264: mov    0x30(%rsp),%r10d
  0x0000000002de1269: mov    %r10d,0x20(%rsp)
  0x0000000002de126e: mov    0x2c(%rsp),%r11d
  0x0000000002de1273: mov    %r11d,0x24(%rsp)
  0x0000000002de1278: mov    %r8d,0x30(%rsp)
  0x0000000002de127d: xchg   %ax,%ax
  0x0000000002de127f: callq  0x0000000002cf57a0  ; OopMap{[48]=NarrowOop [64]=Oop [80]=Oop off=11620}
                                                ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1284: int3   
  0x0000000002de1285: mov    0x2c(%rsp),%r10d
  0x0000000002de128a: mov    %r10d,0x24(%rsp)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de128f: mov    0x24(%rsp),%r10d   ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1294: mov    $0xffffffe4,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1299: mov    0x40(%rsp),%r8
  0x0000000002de129e: mov    %r8,0x20(%rsp)
  0x0000000002de12a3: mov    0x30(%rsp),%r9d
  0x0000000002de12a8: mov    %r9d,0x28(%rsp)
  0x0000000002de12ad: mov    %r10d,0x2c(%rsp)
  0x0000000002de12b2: mov    %r11,0x48(%rsp)
  0x0000000002de12b7: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=11676}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de12bc: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002de12bd: movslq %r11d,%r8          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de12c0: mov    %r8,%r10
  0x0000000002de12c3: shl    %r10
  0x0000000002de12c6: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de12ca: mov    %r10,%r11
  0x0000000002de12cd: and    $0xfffffffffffffff9,%r11
  0x0000000002de12d1: mov    0x88(%rsp),%rdi
  0x0000000002de12d9: add    %r11,%rdi
  0x0000000002de12dc: shr    $0x3,%r10
  0x0000000002de12e0: mov    0x70(%rsp),%r11
  0x0000000002de12e5: sub    %r10,%r11
  0x0000000002de12e8: mov    %r11,%rcx
  0x0000000002de12eb: xor    %rax,%rax
  0x0000000002de12ee: shl    $0x3,%rcx
  0x0000000002de12f2: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de12f5: mov    0x68(%rsp),%rcx
  0x0000000002de12fa: mov    %r9,%rdx
  0x0000000002de12fd: movabs $0x2d02980,%r10
  0x0000000002de1307: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de130a: jmpq   0x0000000002ddfee2  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de130f: movabs $0x7c0000208,%rdx  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de1319: mov    %eax,%r8d
  0x0000000002de131c: data16 xchg %ax,%ax
  0x0000000002de131f: callq  0x0000000002db36e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=11780}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1324: mov    %rax,%r8
  0x0000000002de1327: jmpq   0x0000000002ddf860
  0x0000000002de132c: movabs $0x7c0000208,%rdx  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de1336: mov    0x4c(%rsp),%r8d
  0x0000000002de133b: mov    0x50(%rsp),%rbp
  0x0000000002de1340: data16 xchg %ax,%ax
  0x0000000002de1343: callq  0x0000000002db4fe0  ; OopMap{rbp=Oop [48]=Oop [64]=Oop [72]=NarrowOop [80]=Oop off=11816}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1348: mov    %rax,%r8
  0x0000000002de134b: jmpq   0x0000000002ddf1ef  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1350: movabs $0x7c00016d0,%rdx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002de135a: nop
  0x0000000002de135b: callq  0x0000000002db4ee0  ; OopMap{[32]=NarrowOop [40]=Oop off=11840}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1360: jmpq   0x0000000002ddfa64
  0x0000000002de1365: mov    0x28(%rsp),%r11d
  0x0000000002de136a: test   %r11d,%r11d
  0x0000000002de136d: jl     0x0000000002de1376  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de136f: mov    0x24(%rsp),%r11d
  0x0000000002de1374: jmp    0x0000000002de137c
  0x0000000002de1376: mov    $0x1,%r11d         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de137c: test   %r11d,%r11d
  0x0000000002de137f: jle    0x0000000002de31fb  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1385: mov    $0x7ffffff7,%ebp
  0x0000000002de138a: sub    %r11d,%ebp         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de138d: test   %ebp,%ebp
  0x0000000002de138f: jl     0x0000000002de3229  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1395: cmp    $0x80000,%r11d
  0x0000000002de139c: ja     0x0000000002de31a1  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de13a2: movslq %r11d,%r9          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de13a5: shl    %r9
  0x0000000002de13a8: add    $0x17,%r9
  0x0000000002de13ac: mov    %r9,%rdi
  0x0000000002de13af: and    $0xfffffffffffffff8,%rdi  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de13b3: cmp    $0x80000,%r11d
  0x0000000002de13ba: ja     0x0000000002de2dc7
  0x0000000002de13c0: mov    0x60(%r15),%rbx
  0x0000000002de13c4: mov    %rbx,%r8
  0x0000000002de13c7: add    %rdi,%r8
  0x0000000002de13ca: cmp    0x70(%r15),%r8
  0x0000000002de13ce: jae    0x0000000002de2dc7
  0x0000000002de13d4: mov    %r8,0x60(%r15)
  0x0000000002de13d8: prefetchw 0xc0(%r8)
  0x0000000002de13e0: movq   $0x1,(%rbx)
  0x0000000002de13e7: prefetchw 0x100(%r8)
  0x0000000002de13ef: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x0000000002de13f6: mov    %r11d,0xc(%rbx)
  0x0000000002de13fa: prefetchw 0x140(%r8)
  0x0000000002de1402: prefetchw 0x180(%r8)      ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de140a: cmp    %r11d,%r10d
  0x0000000002de140d: mov    %r11d,%esi
  0x0000000002de1410: cmovl  %r10d,%esi         ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1414: mov    %rbx,%rdx
  0x0000000002de1417: add    $0x10,%rdx
  0x0000000002de141b: shr    $0x3,%r9           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de141f: mov    %r9,%rcx
  0x0000000002de1422: add    $0xfffffffffffffffe,%rcx
  0x0000000002de1426: cmp    %esi,%r10d
  0x0000000002de1429: jb     0x0000000002de31a9
  0x0000000002de142f: cmp    %esi,%r11d
  0x0000000002de1432: jb     0x0000000002de31a9
  0x0000000002de1438: test   %esi,%esi
  0x0000000002de143a: jle    0x0000000002de31e9
  0x0000000002de1440: cmp    %r11d,%esi
  0x0000000002de1443: jl     0x0000000002de29a5  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1449: mov    %rbx,%rbp
  0x0000000002de144c: mov    %r10d,%ebx
  0x0000000002de144f: add    $0xfffffffffffffff0,%rdi
  0x0000000002de1453: shr    $0x3,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1457: mov    0x70(%rsp),%rcx
  0x0000000002de145c: mov    %rdi,%r8
  0x0000000002de145f: movabs $0x2d02ca0,%r10
  0x0000000002de1469: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de146c: mov    %ebx,%r10d
  0x0000000002de146f: mov    %rbp,%rbx          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1472: mov    %rbx,%r9
  0x0000000002de1475: shr    $0x3,%r9           ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1479: mov    %rbx,0x68(%rsp)
  0x0000000002de147e: jmpq   0x0000000002de08fc  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1483: add    $0x2,%r10d         ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1487: cmp    0x64(%rsp),%r10d
  0x0000000002de148c: jl     0x0000000002ddff93  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1492: cmp    0x4c(%rsp),%r10d
  0x0000000002de1497: jge    0x0000000002de14d7  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1499: test   %r10d,%r10d
  0x0000000002de149c: jl     0x0000000002de2529  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de14a2: cmp    0x4c(%rsp),%r10d
  0x0000000002de14a7: jge    0x0000000002de2559  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de14ad: mov    %r10d,%r11d
  0x0000000002de14b0: mov    0x30(%rsp),%r10
  0x0000000002de14b5: movzwl 0x10(%r10,%r11,2),%r10d  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de14bb: cmp    $0x5c,%r10d
  0x0000000002de14bf: je     0x0000000002de2591
  0x0000000002de14c5: cmp    $0x2f,%r10d
  0x0000000002de14c9: je     0x0000000002de2591  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de14cf: mov    %r11d,%r10d
  0x0000000002de14d2: jmpq   0x0000000002ddf22d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de14d7: mov    %r10d,0x80(%rsp)
  0x0000000002de14df: jmpq   0x0000000002ddf235
  0x0000000002de14e4: mov    %r11d,0x24(%rsp)   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de14e9: mov    0x24(%rsp),%r11d
  0x0000000002de14ee: mov    %r11d,0x2c(%rsp)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de14f3: mov    $0xffffff65,%edx
  0x0000000002de14f8: mov    0x40(%rsp),%rbp
  0x0000000002de14fd: mov    0x30(%rsp),%r10d
  0x0000000002de1502: mov    %r10d,0x20(%rsp)
  0x0000000002de1507: mov    0x34(%rsp),%r10d
  0x0000000002de150c: mov    %r10d,0x28(%rsp)
  0x0000000002de1511: mov    %r9d,0x3c(%rsp)
  0x0000000002de1516: mov    0x48(%rsp),%r10d
  0x0000000002de151b: mov    %r10d,0x40(%rsp)
  0x0000000002de1520: mov    %r8d,0x44(%rsp)
  0x0000000002de1525: xchg   %ax,%ax
  0x0000000002de1527: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=12300}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de152c: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002de152d: mov    %r11d,0x24(%rsp)   ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1532: mov    0x24(%rsp),%r10d   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1537: mov    $0xffffff65,%edx
  0x0000000002de153c: mov    0x40(%rsp),%rbp
  0x0000000002de1541: mov    0x34(%rsp),%r11d
  0x0000000002de1546: mov    %r11d,0x28(%rsp)
  0x0000000002de154b: mov    %r10d,0x2c(%rsp)
  0x0000000002de1550: mov    %r8d,0x38(%rsp)
  0x0000000002de1555: xchg   %ax,%ax
  0x0000000002de1557: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [56]=NarrowOop [80]=Oop off=12348}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@115 (line 124)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de155c: int3                      ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002de155d: mov    0x38(%rsp),%r11d
  0x0000000002de1562: mov    %ebp,%edx
  0x0000000002de1564: mov    0x40(%rsp),%rdi
  0x0000000002de1569: mov    %r11d,%ebp
  0x0000000002de156c: mov    %ecx,%r9d
  0x0000000002de156f: mov    0x48(%rsp),%ecx
  0x0000000002de1573: mov    %edx,%r11d         ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1576: mov    %r11d,%r10d
  0x0000000002de1579: mov    %ebp,%r11d
  0x0000000002de157c: mov    %r10d,%ebp         ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de157f: mov    $0xffffffe4,%edx
  0x0000000002de1584: mov    %rdi,0x20(%rsp)
  0x0000000002de1589: mov    0x30(%rsp),%edi
  0x0000000002de158d: mov    %edi,0x28(%rsp)
  0x0000000002de1591: mov    %r11d,0x2c(%rsp)
  0x0000000002de1596: mov    %ebx,0x30(%rsp)
  0x0000000002de159a: mov    %r8,0x38(%rsp)
  0x0000000002de159f: mov    %ecx,0x34(%rsp)
  0x0000000002de15a3: mov    %r9d,0x40(%rsp)
  0x0000000002de15a8: data16 xchg %ax,%ax
  0x0000000002de15ab: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [64]=NarrowOop [80]=Oop off=12432}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de15b0: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x0000000002de15b1: mov    0x24(%rsp),%r8d
  0x0000000002de15b6: mov    %r8d,0x38(%rsp)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de15bb: mov    $0xffffffe4,%edx   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de15c0: rex.W pushq 0x40(%rsp)
  0x0000000002de15c5: rex.W popq 0x20(%rsp)
  0x0000000002de15ca: mov    0x30(%rsp),%r11d
  0x0000000002de15cf: mov    %r11d,0x28(%rsp)
  0x0000000002de15d4: mov    0x38(%rsp),%r8d
  0x0000000002de15d9: mov    %r8d,0x2c(%rsp)
  0x0000000002de15de: mov    %rax,-0x8(%rsp)
  0x0000000002de15e3: mov    0x34(%rsp),%eax
  0x0000000002de15e7: mov    %eax,0x30(%rsp)
  0x0000000002de15eb: mov    -0x8(%rsp),%rax
  0x0000000002de15f0: mov    0x4c(%rsp),%r11d
  0x0000000002de15f5: mov    %r11d,0x34(%rsp)
  0x0000000002de15fa: mov    %r10,0x48(%rsp)
  0x0000000002de15ff: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=12516}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1604: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de1605: movslq %r11d,%r8
  0x0000000002de1608: mov    %r8,%r10
  0x0000000002de160b: shl    %r10
  0x0000000002de160e: add    $0x10,%r10
  0x0000000002de1612: mov    %r10,%r11
  0x0000000002de1615: and    $0xfffffffffffffff9,%r11
  0x0000000002de1619: mov    0x88(%rsp),%rdi
  0x0000000002de1621: add    %r11,%rdi
  0x0000000002de1624: shr    $0x3,%r10
  0x0000000002de1628: mov    0x70(%rsp),%r11
  0x0000000002de162d: sub    %r10,%r11
  0x0000000002de1630: mov    %r11,%rcx
  0x0000000002de1633: xor    %rax,%rax
  0x0000000002de1636: shl    $0x3,%rcx
  0x0000000002de163a: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de163d: mov    0x68(%rsp),%rcx
  0x0000000002de1642: mov    %r9,%rdx
  0x0000000002de1645: movabs $0x2d02980,%r10
  0x0000000002de164f: callq  *%r10              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1652: jmpq   0x0000000002de0152  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1657: movabs $0x7c0000208,%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de1661: mov    %esi,%r8d
  0x0000000002de1664: data16 xchg %ax,%ax
  0x0000000002de1667: callq  0x0000000002db36e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=12620}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de166c: mov    %rax,%r8
  0x0000000002de166f: jmpq   0x0000000002ddfb90
  0x0000000002de1674: mov    %ebp,%r9d
  0x0000000002de1677: mov    %edi,%ebp
  0x0000000002de1679: mov    %r9d,%edi
  0x0000000002de167c: jmpq   0x0000000002de0dce
  0x0000000002de1681: mov    0x38(%rsp),%r11d
  0x0000000002de1686: mov    %ebp,%edx
  0x0000000002de1688: mov    0x40(%rsp),%rdi
  0x0000000002de168d: mov    %r11d,%ebp
  0x0000000002de1690: mov    %ecx,%r9d
  0x0000000002de1693: mov    0x48(%rsp),%ecx
  0x0000000002de1697: mov    %edx,%r11d         ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de169a: mov    %ebp,%r8d
  0x0000000002de169d: mov    %r11d,%ebp
  0x0000000002de16a0: mov    %r8d,%r11d         ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de16a3: mov    $0xffffff65,%edx
  0x0000000002de16a8: mov    0x30(%rsp),%r8d
  0x0000000002de16ad: mov    %r8d,0x28(%rsp)
  0x0000000002de16b2: mov    %r11d,0x2c(%rsp)
  0x0000000002de16b7: mov    %ebx,0x30(%rsp)
  0x0000000002de16bb: mov    %rdi,0x38(%rsp)
  0x0000000002de16c0: mov    %r10d,0x40(%rsp)
  0x0000000002de16c5: mov    %ecx,0x44(%rsp)
  0x0000000002de16c9: mov    %r9d,0x48(%rsp)
  0x0000000002de16ce: nop
  0x0000000002de16cf: callq  0x0000000002cf57a0  ; OopMap{[56]=Oop [72]=NarrowOop [80]=Oop off=12724}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de16d4: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x0000000002de16d5: movslq %r8d,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de16d8: mov    %r8,%r10
  0x0000000002de16db: shl    %r10
  0x0000000002de16de: add    $0x10,%r10         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de16e2: mov    %r10,%r11
  0x0000000002de16e5: and    $0xfffffffffffffff9,%r11
  0x0000000002de16e9: mov    0x80(%rsp),%rdi
  0x0000000002de16f1: add    %r11,%rdi
  0x0000000002de16f4: shr    $0x3,%r10
  0x0000000002de16f8: mov    0x70(%rsp),%r11
  0x0000000002de16fd: sub    %r10,%r11
  0x0000000002de1700: mov    %r11,%rcx
  0x0000000002de1703: xor    %rax,%rax
  0x0000000002de1706: shl    $0x3,%rcx
  0x0000000002de170a: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de170d: mov    0x38(%rsp),%rcx
  0x0000000002de1712: mov    %r9,%rdx
  0x0000000002de1715: movabs $0x2d02980,%r10
  0x0000000002de171f: callq  *%r10              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1722: jmpq   0x0000000002de0338
  0x0000000002de1727: mov    %edx,0x64(%rsp)
  0x0000000002de172b: mov    %r8,0x68(%rsp)
  0x0000000002de1730: mov    %r11,0x70(%rsp)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1735: movabs $0x7c0000208,%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de173f: mov    0x64(%rsp),%r8d
  0x0000000002de1744: data16 xchg %ax,%ax
  0x0000000002de1747: callq  0x0000000002db36e0  ; OopMap{[32]=Oop [56]=Derived_oop_[32] [64]=Oop [80]=Oop off=12844}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de174c: mov    %rax,%r8
  0x0000000002de174f: jmpq   0x0000000002ddfcf6
  0x0000000002de1754: movslq %esi,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1757: mov    %r8,%r10
  0x0000000002de175a: shl    %r10
  0x0000000002de175d: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1761: mov    %r10,%r11
  0x0000000002de1764: and    $0xfffffffffffffff9,%r11
  0x0000000002de1768: mov    0x88(%rsp),%rdi
  0x0000000002de1770: add    %r11,%rdi
  0x0000000002de1773: shr    $0x3,%r10
  0x0000000002de1777: mov    %rbx,%r11
  0x0000000002de177a: sub    %r10,%r11
  0x0000000002de177d: mov    %r11,%rcx
  0x0000000002de1780: xor    %rax,%rax
  0x0000000002de1783: shl    $0x3,%rcx
  0x0000000002de1787: rep rex.W stos %al,%es:(%rdi)  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de178a: mov    0x70(%rsp),%rcx
  0x0000000002de178f: mov    %r9,%rdx
  0x0000000002de1792: movabs $0x2d02980,%r10
  0x0000000002de179c: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de179f: jmpq   0x0000000002de04da
  0x0000000002de17a4: mov    $0xffffff86,%edx   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de17a9: mov    %rcx,%rbp
  0x0000000002de17ac: mov    %r10d,0x20(%rsp)
  0x0000000002de17b1: mov    %r9d,0x24(%rsp)
  0x0000000002de17b6: mov    %r8d,0x28(%rsp)
  0x0000000002de17bb: mov    %r11,0x30(%rsp)
  0x0000000002de17c0: data16 xchg %ax,%ax
  0x0000000002de17c3: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [48]=Oop off=12968}
                                                ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)
                                                ;   {runtime_call}
  0x0000000002de17c8: int3   
  0x0000000002de17c9: mov    %edi,%ebx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de17cb: mov    $0xffffff65,%edx
  0x0000000002de17d0: mov    0x40(%rsp),%rbp
  0x0000000002de17d5: mov    0x4c(%rsp),%r9d
  0x0000000002de17da: mov    %r9d,0x20(%rsp)
  0x0000000002de17df: mov    0x3c(%rsp),%r11d
  0x0000000002de17e4: mov    %r11d,0x24(%rsp)
  0x0000000002de17e9: mov    %r8d,0x28(%rsp)
  0x0000000002de17ee: mov    %ebx,0x2c(%rsp)
  0x0000000002de17f2: mov    %r10d,0x34(%rsp)
  0x0000000002de17f7: mov    %r10d,0x40(%rsp)
  0x0000000002de17fc: data16 xchg %ax,%ax
  0x0000000002de17ff: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop off=13028}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002de1804: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x0000000002de1805: mov    %edi,%ebx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1807: mov    $0xffffff65,%edx
  0x0000000002de180c: mov    0x40(%rsp),%rbp
  0x0000000002de1811: mov    0x4c(%rsp),%r11d
  0x0000000002de1816: mov    %r11d,0x20(%rsp)
  0x0000000002de181b: mov    0x3c(%rsp),%r9d
  0x0000000002de1820: mov    %r9d,0x24(%rsp)
  0x0000000002de1825: mov    %r8d,0x28(%rsp)
  0x0000000002de182a: mov    %ebx,0x2c(%rsp)
  0x0000000002de182e: mov    %r10d,0x34(%rsp)
  0x0000000002de1833: mov    %r10d,0x40(%rsp)
  0x0000000002de1838: data16 xchg %ax,%ax
  0x0000000002de183b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop off=13088}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x0000000002de1840: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x0000000002de1841: movslq %esi,%r10          ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1844: jmpq   0x0000000002ddeb5b
  0x0000000002de1849: mov    %rdx,%rdi
  0x0000000002de184c: xor    %rax,%rax
  0x0000000002de184f: shl    $0x3,%rcx
  0x0000000002de1853: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1856: mov    0x38(%rsp),%rbp
  0x0000000002de185b: mov    %rbp,%rdx
  0x0000000002de185e: xor    %r8d,%r8d
  0x0000000002de1861: mov    0x80(%rsp),%r9
  0x0000000002de1869: xor    %edi,%edi
  0x0000000002de186b: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=13136}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1870: jmpq   0x0000000002ddec3d
  0x0000000002de1875: mov    %rdx,%rdi
  0x0000000002de1878: xor    %rax,%rax
  0x0000000002de187b: shl    $0x3,%rcx
  0x0000000002de187f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1882: jmpq   0x0000000002ddec3d
  0x0000000002de1887: mov    0x30(%rsp),%r11d
  0x0000000002de188c: jmpq   0x0000000002de0dd4
  0x0000000002de1891: mov    0x30(%rsp),%r11d   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1896: mov    $0xffffff65,%edx
  0x0000000002de189b: mov    0x40(%rsp),%r10
  0x0000000002de18a0: mov    %r11d,0x28(%rsp)
  0x0000000002de18a5: mov    %edi,0x2c(%rsp)
  0x0000000002de18a9: mov    %ecx,0x30(%rsp)
  0x0000000002de18ad: mov    %r10,0x38(%rsp)
  0x0000000002de18b2: mov    %esi,0x40(%rsp)
  0x0000000002de18b6: mov    %r8d,0x44(%rsp)
  0x0000000002de18bb: callq  0x0000000002cf57a0  ; OopMap{[56]=Oop [68]=NarrowOop [80]=Oop off=13216}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de18c0: int3   
  0x0000000002de18c1: mov    %ebp,%r10d
  0x0000000002de18c4: mov    %edi,%ebp
  0x0000000002de18c6: mov    %r10d,%edi
  0x0000000002de18c9: jmpq   0x0000000002de10f9
  0x0000000002de18ce: mov    %rbx,%rbp
  0x0000000002de18d1: mov    %r9,%r10
  0x0000000002de18d4: mov    %r11d,%ebx
  0x0000000002de18d7: movslq %esi,%r8           ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de18da: mov    %r8,%r11
  0x0000000002de18dd: shl    %r11
  0x0000000002de18e0: add    $0x10,%r11         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de18e4: mov    %r11,%r9
  0x0000000002de18e7: and    $0xfffffffffffffff9,%r9
  0x0000000002de18eb: mov    %rbp,%rdi
  0x0000000002de18ee: add    %r9,%rdi
  0x0000000002de18f1: shr    $0x3,%r11
  0x0000000002de18f5: sub    %r11,%r10
  0x0000000002de18f8: mov    %r10,%rcx
  0x0000000002de18fb: xor    %rax,%rax
  0x0000000002de18fe: shl    $0x3,%rcx
  0x0000000002de1902: rep rex.W stos %al,%es:(%rdi)  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1905: mov    0x30(%rsp),%rcx
  0x0000000002de190a: movabs $0x2d02980,%r10
  0x0000000002de1914: callq  *%r10              ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1917: mov    %ebx,%r11d
  0x0000000002de191a: mov    %rbp,%rbx
  0x0000000002de191d: jmpq   0x0000000002de0651
  0x0000000002de1922: mov    %r8,%r9
  0x0000000002de1925: mov    %r13d,%ebx
  0x0000000002de1928: mov    %rdi,%r10
  0x0000000002de192b: mov    %r11d,%r13d
  0x0000000002de192e: movslq %esi,%r8           ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1931: mov    %r8,%r11
  0x0000000002de1934: shl    %r11
  0x0000000002de1937: add    $0x10,%r11         ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de193b: mov    %r11,%rcx
  0x0000000002de193e: and    $0xfffffffffffffff9,%rcx
  0x0000000002de1942: mov    %rbp,%rdi
  0x0000000002de1945: add    %rcx,%rdi
  0x0000000002de1948: shr    $0x3,%r11
  0x0000000002de194c: sub    %r11,%rdx
  0x0000000002de194f: mov    %rdx,%rcx
  0x0000000002de1952: xor    %rax,%rax
  0x0000000002de1955: shl    $0x3,%rcx
  0x0000000002de1959: rep rex.W stos %al,%es:(%rdi)  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de195c: mov    %r10,%rcx
  0x0000000002de195f: mov    %r9,%rdx
  0x0000000002de1962: movabs $0x2d02980,%r10
  0x0000000002de196c: callq  *%r10              ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de196f: mov    %r13d,%r11d
  0x0000000002de1972: mov    %ebx,%r13d
  0x0000000002de1975: jmpq   0x0000000002de0781
  0x0000000002de197a: movslq %esi,%r8
  0x0000000002de197d: mov    %r8,%r10
  0x0000000002de1980: shl    %r10
  0x0000000002de1983: add    $0x10,%r10         ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1987: mov    %r10,%r11
  0x0000000002de198a: and    $0xfffffffffffffff9,%r11
  0x0000000002de198e: mov    0x80(%rsp),%rdi
  0x0000000002de1996: add    %r11,%rdi
  0x0000000002de1999: shr    $0x3,%r10
  0x0000000002de199d: mov    %rbx,%r11
  0x0000000002de19a0: sub    %r10,%r11
  0x0000000002de19a3: mov    %r11,%rcx
  0x0000000002de19a6: xor    %rax,%rax
  0x0000000002de19a9: shl    $0x3,%rcx
  0x0000000002de19ad: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de19b0: mov    0x68(%rsp),%rcx
  0x0000000002de19b5: mov    %r9,%rdx
  0x0000000002de19b8: movabs $0x2d02980,%r10
  0x0000000002de19c2: callq  *%r10              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de19c5: jmpq   0x0000000002de08c2  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de19ca: movabs $0x7c0000208,%rdx  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de19d4: mov    %eax,%r8d
  0x0000000002de19d7: callq  0x0000000002db36e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=13500}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de19dc: mov    %rax,%r8
  0x0000000002de19df: jmpq   0x0000000002ddfe78
  0x0000000002de19e4: mov    0x24(%rsp),%r9d
  0x0000000002de19e9: mov    %r9d,0x2c(%rsp)    ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de19ee: mov    $0xffffff65,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de19f3: mov    0x40(%rsp),%rbp
  0x0000000002de19f8: mov    0x30(%rsp),%r11d
  0x0000000002de19fd: mov    %r11d,0x20(%rsp)
  0x0000000002de1a02: mov    0x2c(%rsp),%r9d
  0x0000000002de1a07: mov    %r9d,0x24(%rsp)
  0x0000000002de1a0c: mov    0x34(%rsp),%r11d
  0x0000000002de1a11: mov    %r11d,0x28(%rsp)
  0x0000000002de1a16: mov    0x4c(%rsp),%r9d
  0x0000000002de1a1b: mov    %r9d,0x2c(%rsp)
  0x0000000002de1a20: mov    %r10d,0x3c(%rsp)
  0x0000000002de1a25: mov    0x48(%rsp),%r11d
  0x0000000002de1a2a: mov    %r11d,0x40(%rsp)
  0x0000000002de1a2f: mov    %r8d,0x44(%rsp)
  0x0000000002de1a34: data16 xchg %ax,%ax
  0x0000000002de1a37: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=13596}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1a3c: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de1a3d: mov    0x24(%rsp),%r10d
  0x0000000002de1a42: mov    %r10d,0x2c(%rsp)   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1a47: mov    %r9d,%r10d
  0x0000000002de1a4a: mov    %ecx,%r11d         ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1a4d: mov    $0xffffff65,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1a52: mov    0x40(%rsp),%rbp
  0x0000000002de1a57: mov    0x30(%rsp),%r9d
  0x0000000002de1a5c: mov    %r9d,0x20(%rsp)
  0x0000000002de1a61: mov    0x2c(%rsp),%ecx
  0x0000000002de1a65: mov    %ecx,0x24(%rsp)
  0x0000000002de1a69: mov    0x34(%rsp),%r9d
  0x0000000002de1a6e: mov    %r9d,0x28(%rsp)
  0x0000000002de1a73: mov    0x4c(%rsp),%ecx
  0x0000000002de1a77: mov    %ecx,0x2c(%rsp)
  0x0000000002de1a7b: mov    %r10d,0x38(%rsp)
  0x0000000002de1a80: mov    0x48(%rsp),%r9d
  0x0000000002de1a85: mov    %r9d,0x3c(%rsp)
  0x0000000002de1a8a: mov    %r8d,0x40(%rsp)
  0x0000000002de1a8f: mov    %r11d,0x44(%rsp)
  0x0000000002de1a94: data16 xchg %ax,%ax
  0x0000000002de1a97: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=13692}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1a9c: int3                      ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1a9d: mov    $0xffffff65,%edx
  0x0000000002de1aa2: mov    0x40(%rsp),%rbp
  0x0000000002de1aa7: mov    0x4c(%rsp),%r8d
  0x0000000002de1aac: mov    %r8d,0x20(%rsp)
  0x0000000002de1ab1: mov    0x3c(%rsp),%r9d
  0x0000000002de1ab6: mov    %r9d,0x24(%rsp)
  0x0000000002de1abb: mov    %r11d,0x40(%rsp)
  0x0000000002de1ac0: mov    %r11d,0x44(%rsp)
  0x0000000002de1ac5: mov    %r10,0x60(%rsp)
  0x0000000002de1aca: nop
  0x0000000002de1acb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [96]=Oop off=13744}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1ad0: int3                      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1ad1: mov    $0xffffff65,%edx
  0x0000000002de1ad6: mov    0x40(%rsp),%rbp
  0x0000000002de1adb: mov    0x4c(%rsp),%r9d
  0x0000000002de1ae0: mov    0x3c(%rsp),%r8d
  0x0000000002de1ae5: mov    %r8d,0x24(%rsp)
  0x0000000002de1aea: mov    %r9d,0x30(%rsp)
  0x0000000002de1aef: mov    %r11d,0x40(%rsp)
  0x0000000002de1af4: mov    %r11d,0x44(%rsp)
  0x0000000002de1af9: mov    %r9d,0x48(%rsp)
  0x0000000002de1afe: mov    %r10,0x68(%rsp)
  0x0000000002de1b03: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=13800}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1b08: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1b09: mov    $0xffffffe4,%edx
  0x0000000002de1b0e: mov    0x40(%rsp),%rbp
  0x0000000002de1b13: mov    0x4c(%rsp),%r9d
  0x0000000002de1b18: mov    0x3c(%rsp),%r8d
  0x0000000002de1b1d: mov    %r8d,0x24(%rsp)
  0x0000000002de1b22: mov    %r9d,0x30(%rsp)
  0x0000000002de1b27: mov    %r11d,0x38(%rsp)
  0x0000000002de1b2c: mov    0x48(%rsp),%r8d
  0x0000000002de1b31: mov    %r8d,0x3c(%rsp)
  0x0000000002de1b36: mov    %r10,0x48(%rsp)
  0x0000000002de1b3b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [60]=NarrowOop [72]=Oop [80]=Oop off=13856}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1b40: int3                      ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1b41: mov    $0xffffffe4,%edx
  0x0000000002de1b46: mov    0x40(%rsp),%r10
  0x0000000002de1b4b: mov    %r10,0x20(%rsp)
  0x0000000002de1b50: mov    0x4c(%rsp),%r11d
  0x0000000002de1b55: mov    0x3c(%rsp),%r10d
  0x0000000002de1b5a: mov    %r10d,0x2c(%rsp)
  0x0000000002de1b5f: mov    %r11d,0x38(%rsp)
  0x0000000002de1b64: data16 xchg %ax,%ax
  0x0000000002de1b67: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [72]=NarrowOop [80]=Oop [104]=Oop off=13900}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1b6c: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002de1b6d: mov    $0xffffff65,%edx
  0x0000000002de1b72: mov    0x40(%rsp),%rbp
  0x0000000002de1b77: mov    %r10d,0x24(%rsp)
  0x0000000002de1b7c: mov    %r11d,0x28(%rsp)
  0x0000000002de1b81: xchg   %ax,%ax
  0x0000000002de1b83: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop off=13928}
                                                ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1b88: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x0000000002de1b89: mov    $0xffffff65,%edx
  0x0000000002de1b8e: mov    0x40(%rsp),%rbp
  0x0000000002de1b93: mov    %r10d,0x28(%rsp)
  0x0000000002de1b98: data16 xchg %ax,%ax
  0x0000000002de1b9b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop off=13952}
                                                ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@8 (line 104)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1ba0: int3   
  0x0000000002de1ba1: mov    0x30(%rsp),%r11d
  0x0000000002de1ba6: jmpq   0x0000000002de10ff
  0x0000000002de1bab: mov    %edi,%r11d
  0x0000000002de1bae: mov    %r11d,0x24(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1bb3: mov    0x24(%rsp),%r10d
  0x0000000002de1bb8: mov    %r10d,0x38(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1bbd: mov    $0xffffffe4,%edx   ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1bc2: mov    0x40(%rsp),%rbp
  0x0000000002de1bc7: mov    0x30(%rsp),%r11d
  0x0000000002de1bcc: mov    %r11d,0x20(%rsp)
  0x0000000002de1bd1: mov    0x38(%rsp),%r10d
  0x0000000002de1bd6: mov    %rax,-0x8(%rsp)
  0x0000000002de1bdb: mov    0x34(%rsp),%eax
  0x0000000002de1bdf: mov    %eax,0x28(%rsp)
  0x0000000002de1be3: mov    -0x8(%rsp),%rax
  0x0000000002de1be8: mov    %r8,0x30(%rsp)
  0x0000000002de1bed: mov    %r10d,0x2c(%rsp)
  0x0000000002de1bf2: mov    0x48(%rsp),%r10d
  0x0000000002de1bf7: mov    %r10d,0x38(%rsp)
  0x0000000002de1bfc: mov    %ecx,0x3c(%rsp)
  0x0000000002de1c00: mov    0x50(%rsp),%r10
  0x0000000002de1c05: mov    %r10,0x48(%rsp)
  0x0000000002de1c0a: nop
  0x0000000002de1c0b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [48]=Oop [60]=NarrowOop [72]=Oop [80]=Oop off=14064}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1c10: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de1c11: mov    %edi,0x24(%rsp)
  0x0000000002de1c15: mov    0x24(%rsp),%r11d
  0x0000000002de1c1a: mov    %r11d,0x38(%rsp)
  0x0000000002de1c1f: jmp    0x0000000002de1c2f
  0x0000000002de1c21: mov    %edi,0x24(%rsp)
  0x0000000002de1c25: mov    0x24(%rsp),%r11d
  0x0000000002de1c2a: mov    %r11d,0x38(%rsp)   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1c2f: mov    $0xffffff65,%edx
  0x0000000002de1c34: mov    0x30(%rsp),%r10d
  0x0000000002de1c39: mov    %r10d,0x20(%rsp)
  0x0000000002de1c3e: mov    0x38(%rsp),%r11d
  0x0000000002de1c43: mov    %r11d,0x24(%rsp)
  0x0000000002de1c48: mov    %ecx,0x30(%rsp)
  0x0000000002de1c4c: data16 xchg %ax,%ax
  0x0000000002de1c4f: callq  0x0000000002cf57a0  ; OopMap{[48]=NarrowOop [64]=Oop [80]=Oop off=14132}
                                                ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1c54: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de1c55: mov    0x38(%rsp),%r8d
  0x0000000002de1c5a: mov    %r8d,0x24(%rsp)
  0x0000000002de1c5f: mov    0x24(%rsp),%r10d   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1c64: mov    $0xffffffe4,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1c69: rex.W pushq 0x40(%rsp)
  0x0000000002de1c6e: rex.W popq 0x20(%rsp)
  0x0000000002de1c73: mov    0x30(%rsp),%r8d
  0x0000000002de1c78: mov    %r8d,0x28(%rsp)
  0x0000000002de1c7d: mov    %r10d,0x2c(%rsp)
  0x0000000002de1c82: mov    %r11,0x48(%rsp)
  0x0000000002de1c87: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=14188}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1c8c: int3                      ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1c8d: movabs $0x7c0000208,%rdx  ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de1c97: mov    %esi,%r8d
  0x0000000002de1c9a: nop
  0x0000000002de1c9b: callq  0x0000000002db36e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=14208}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1ca0: mov    %rax,%r8
  0x0000000002de1ca3: jmpq   0x0000000002de00e5  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1ca8: mov    $0xffffff65,%edx
  0x0000000002de1cad: mov    0x40(%rsp),%rbp
  0x0000000002de1cb2: mov    0x4c(%rsp),%r9d
  0x0000000002de1cb7: mov    0x3c(%rsp),%r8d
  0x0000000002de1cbc: mov    %r8d,0x24(%rsp)
  0x0000000002de1cc1: mov    %r9d,0x30(%rsp)
  0x0000000002de1cc6: mov    %r11d,0x40(%rsp)
  0x0000000002de1ccb: mov    %r11d,0x44(%rsp)
  0x0000000002de1cd0: mov    %r10,0x60(%rsp)
  0x0000000002de1cd5: xchg   %ax,%ax
  0x0000000002de1cd7: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [96]=Oop off=14268}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1cdc: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1cdd: mov    $0xffffff65,%edx
  0x0000000002de1ce2: mov    0x40(%rsp),%rbp
  0x0000000002de1ce7: mov    0x4c(%rsp),%ecx
  0x0000000002de1ceb: mov    0x3c(%rsp),%r8d
  0x0000000002de1cf0: mov    %r8d,0x24(%rsp)
  0x0000000002de1cf5: mov    %ecx,0x30(%rsp)
  0x0000000002de1cf9: mov    %r11d,0x34(%rsp)
  0x0000000002de1cfe: mov    0x50(%rsp),%r11
  0x0000000002de1d03: mov    %r11,0x40(%rsp)
  0x0000000002de1d08: mov    %r9d,0x4c(%rsp)
  0x0000000002de1d0d: mov    %r9d,0x50(%rsp)
  0x0000000002de1d12: mov    %r10,0x58(%rsp)
  0x0000000002de1d17: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [88]=Oop off=14332}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1d1c: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1d1d: mov    $0xffffff65,%edx
  0x0000000002de1d22: mov    0x40(%rsp),%r10
  0x0000000002de1d27: mov    %r10,0x20(%rsp)
  0x0000000002de1d2c: mov    0x4c(%rsp),%r10d
  0x0000000002de1d31: mov    %r10d,0x28(%rsp)
  0x0000000002de1d36: mov    0x3c(%rsp),%r11d
  0x0000000002de1d3b: mov    %r11d,0x2c(%rsp)
  0x0000000002de1d40: mov    0x64(%rsp),%r11d
  0x0000000002de1d45: mov    %r11d,0x3c(%rsp)
  0x0000000002de1d4a: nop
  0x0000000002de1d4b: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=14384}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1d50: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1d51: mov    $0xffffff65,%edx
  0x0000000002de1d56: mov    0x40(%rsp),%rbp
  0x0000000002de1d5b: mov    0x4c(%rsp),%r8d
  0x0000000002de1d60: mov    %r8d,0x20(%rsp)
  0x0000000002de1d65: mov    0x3c(%rsp),%r9d
  0x0000000002de1d6a: mov    %r9d,0x24(%rsp)
  0x0000000002de1d6f: mov    %r11d,0x40(%rsp)
  0x0000000002de1d74: mov    %r11d,0x44(%rsp)
  0x0000000002de1d79: mov    %r10,0x68(%rsp)
  0x0000000002de1d7e: nop
  0x0000000002de1d7f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=14436}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1d84: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1d85: mov    $0xffffff65,%edx
  0x0000000002de1d8a: mov    0x40(%rsp),%rbp
  0x0000000002de1d8f: mov    0x4c(%rsp),%r8d
  0x0000000002de1d94: mov    %r8d,0x20(%rsp)
  0x0000000002de1d99: mov    0x3c(%rsp),%ecx
  0x0000000002de1d9d: mov    %ecx,0x24(%rsp)
  0x0000000002de1da1: mov    %r11d,0x34(%rsp)
  0x0000000002de1da6: mov    0x50(%rsp),%r11
  0x0000000002de1dab: mov    %r11,0x40(%rsp)
  0x0000000002de1db0: mov    %r9d,0x4c(%rsp)
  0x0000000002de1db5: mov    %r9d,0x50(%rsp)
  0x0000000002de1dba: mov    %r10,0x58(%rsp)
  0x0000000002de1dbf: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [88]=Oop off=14500}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1dc4: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1dc5: mov    $0xffffff65,%edx
  0x0000000002de1dca: mov    0x40(%rsp),%rbp
  0x0000000002de1dcf: mov    0x4c(%rsp),%r8d
  0x0000000002de1dd4: mov    %r8d,0x20(%rsp)
  0x0000000002de1dd9: mov    0x3c(%rsp),%ecx
  0x0000000002de1ddd: mov    %ecx,0x24(%rsp)
  0x0000000002de1de1: mov    %r11d,0x34(%rsp)
  0x0000000002de1de6: mov    0x50(%rsp),%r11
  0x0000000002de1deb: mov    %r11,0x40(%rsp)
  0x0000000002de1df0: mov    %r9d,0x4c(%rsp)
  0x0000000002de1df5: mov    %r10,0x50(%rsp)
  0x0000000002de1dfa: nop
  0x0000000002de1dfb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=14560}
                                                ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1e00: int3                      ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1e01: mov    $0xffffff65,%edx
  0x0000000002de1e06: mov    0x40(%rsp),%r10
  0x0000000002de1e0b: mov    %r10,0x20(%rsp)
  0x0000000002de1e10: mov    0x4c(%rsp),%r11d
  0x0000000002de1e15: mov    0x3c(%rsp),%r10d
  0x0000000002de1e1a: mov    %r10d,0x2c(%rsp)
  0x0000000002de1e1f: mov    %r11d,0x38(%rsp)
  0x0000000002de1e24: mov    0x64(%rsp),%r10d
  0x0000000002de1e29: mov    %r10d,0x3c(%rsp)
  0x0000000002de1e2e: mov    %r11d,0x48(%rsp)
  0x0000000002de1e33: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=14616}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1e38: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002de1e39: mov    %edi,0x24(%rsp)    ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1e3d: mov    0x24(%rsp),%r11d
  0x0000000002de1e42: mov    %r11d,0x38(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1e47: mov    $0xffffff65,%edx
  0x0000000002de1e4c: mov    0x40(%rsp),%rbp
  0x0000000002de1e51: mov    0x30(%rsp),%r8d
  0x0000000002de1e56: mov    %r8d,0x20(%rsp)
  0x0000000002de1e5b: mov    %rax,-0x8(%rsp)
  0x0000000002de1e60: mov    0x34(%rsp),%eax
  0x0000000002de1e64: mov    %eax,0x28(%rsp)
  0x0000000002de1e68: mov    -0x8(%rsp),%rax
  0x0000000002de1e6d: mov    %r10d,0x3c(%rsp)
  0x0000000002de1e72: mov    0x48(%rsp),%r10d
  0x0000000002de1e77: mov    %r10d,0x40(%rsp)
  0x0000000002de1e7c: mov    %ecx,0x44(%rsp)
  0x0000000002de1e80: data16 xchg %ax,%ax
  0x0000000002de1e83: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=14696}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1e88: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de1e89: mov    %edi,%r11d
  0x0000000002de1e8c: mov    %r11d,0x24(%rsp)   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1e91: mov    0x24(%rsp),%r10d   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1e96: mov    $0xffffff65,%edx   ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1e9b: mov    0x40(%rsp),%rbp
  0x0000000002de1ea0: mov    %rax,-0x8(%rsp)
  0x0000000002de1ea5: mov    0x34(%rsp),%eax
  0x0000000002de1ea9: mov    %eax,0x28(%rsp)
  0x0000000002de1ead: mov    -0x8(%rsp),%rax
  0x0000000002de1eb2: mov    %r10d,0x2c(%rsp)
  0x0000000002de1eb7: mov    %ecx,0x38(%rsp)
  0x0000000002de1ebb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [56]=NarrowOop [80]=Oop off=14752}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@115 (line 124)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1ec0: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1ec1: movabs $0x7c0000208,%rdx  ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de1ecb: mov    0x4c(%rsp),%r8d
  0x0000000002de1ed0: data16 xchg %ax,%ax
  0x0000000002de1ed3: callq  0x0000000002db36e0  ; OopMap{[32]=Oop [56]=Derived_oop_[32] [64]=Oop [80]=Oop off=14776}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1ed8: mov    %rax,%r8
  0x0000000002de1edb: jmpq   0x0000000002de02d0
  0x0000000002de1ee0: movslq %esi,%r8           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1ee3: mov    %r8,%r10
  0x0000000002de1ee6: shl    %r10
  0x0000000002de1ee9: add    $0x10,%r10         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1eed: mov    %r10,%r11
  0x0000000002de1ef0: and    $0xfffffffffffffff9,%r11
  0x0000000002de1ef4: mov    0x88(%rsp),%rdi
  0x0000000002de1efc: add    %r11,%rdi
  0x0000000002de1eff: shr    $0x3,%r10
  0x0000000002de1f03: mov    %rbx,%r11
  0x0000000002de1f06: sub    %r10,%r11
  0x0000000002de1f09: mov    %r11,%rcx
  0x0000000002de1f0c: xor    %rax,%rax
  0x0000000002de1f0f: shl    $0x3,%rcx
  0x0000000002de1f13: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1f16: mov    0x70(%rsp),%rcx
  0x0000000002de1f1b: mov    %r9,%rdx
  0x0000000002de1f1e: movabs $0x2d02980,%r10
  0x0000000002de1f28: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1f2b: jmpq   0x0000000002de0a5e
  0x0000000002de1f30: movslq %esi,%r10          ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1f33: mov    %r10,%r8
  0x0000000002de1f36: jmpq   0x0000000002ddef76
  0x0000000002de1f3b: mov    0x80(%rsp),%rcx
  0x0000000002de1f43: mov    %rdx,%rdi
  0x0000000002de1f46: xor    %rax,%rax
  0x0000000002de1f49: shl    $0x3,%rcx
  0x0000000002de1f4d: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1f50: mov    0x38(%rsp),%rbp
  0x0000000002de1f55: mov    %rbp,%rdx
  0x0000000002de1f58: xor    %r8d,%r8d
  0x0000000002de1f5b: mov    0x88(%rsp),%r9
  0x0000000002de1f63: xor    %edi,%edi
  0x0000000002de1f65: mov    0x4c(%rsp),%esi
  0x0000000002de1f69: xchg   %ax,%ax
  0x0000000002de1f6b: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [136]=Oop off=14928}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1f70: jmpq   0x0000000002ddf069
  0x0000000002de1f75: mov    0x80(%rsp),%rcx
  0x0000000002de1f7d: mov    %rdx,%rdi
  0x0000000002de1f80: xor    %rax,%rax
  0x0000000002de1f83: shl    $0x3,%rcx
  0x0000000002de1f87: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1f8a: jmpq   0x0000000002ddf069  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1f8f: movabs $0x7c0000208,%rdx  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de1f99: mov    0x2c(%rsp),%r8d
  0x0000000002de1f9e: nop
  0x0000000002de1f9f: callq  0x0000000002db36e0  ; OopMap{[64]=Oop [80]=Oop [104]=Oop [112]=Derived_oop_[104] off=14980}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de1fa4: mov    %rax,%r8
  0x0000000002de1fa7: jmpq   0x0000000002de045a
  0x0000000002de1fac: add    $0x2,%r10d         ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de1fb0: mov    %ebx,%edi
  0x0000000002de1fb2: jmp    0x0000000002de1fbd
  0x0000000002de1fb4: inc    %r10d
  0x0000000002de1fb7: jmp    0x0000000002de1fbd
  0x0000000002de1fb9: add    $0x3,%r10d         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1fbd: mov    %edi,%ebx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1fbf: mov    $0xffffff65,%edx
  0x0000000002de1fc4: mov    %r10d,%ebp
  0x0000000002de1fc7: mov    %ebx,0x2c(%rsp)
  0x0000000002de1fcb: mov    0x3c(%rsp),%r11d
  0x0000000002de1fd0: mov    %r11d,0x30(%rsp)
  0x0000000002de1fd5: xchg   %ax,%ax
  0x0000000002de1fd7: callq  0x0000000002cf57a0  ; OopMap{[64]=Oop [80]=Oop off=15036}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@49 (line 89)
                                                ;   {runtime_call}
  0x0000000002de1fdc: int3                      ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de1fdd: mov    $0xffffff65,%edx
  0x0000000002de1fe2: mov    0x40(%rsp),%rbp
  0x0000000002de1fe7: mov    0x30(%rsp),%r11d
  0x0000000002de1fec: mov    %r11d,0x20(%rsp)
  0x0000000002de1ff1: mov    0x34(%rsp),%r11d
  0x0000000002de1ff6: mov    %r11d,0x28(%rsp)
  0x0000000002de1ffb: mov    0x48(%rsp),%r11d
  0x0000000002de2000: mov    %r11d,0x3c(%rsp)
  0x0000000002de2005: mov    %r8d,0x40(%rsp)
  0x0000000002de200a: nop
  0x0000000002de200b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=15088}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2010: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2011: mov    $0xffffff65,%edx
  0x0000000002de2016: mov    0x40(%rsp),%rbp
  0x0000000002de201b: mov    0x34(%rsp),%r10d
  0x0000000002de2020: mov    %r10d,0x28(%rsp)
  0x0000000002de2025: mov    %r8d,0x38(%rsp)
  0x0000000002de202a: nop
  0x0000000002de202b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [56]=NarrowOop [80]=Oop off=15120}
                                                ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2030: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002de2031: mov    %rax,%r9
  0x0000000002de2034: mov    %rcx,%r10
  0x0000000002de2037: mov    %r11d,%ebp
  0x0000000002de203a: movslq %ebx,%r8           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de203d: mov    %r8,%r11
  0x0000000002de2040: shl    %r11
  0x0000000002de2043: add    $0x10,%r11         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2047: mov    %r11,%rcx
  0x0000000002de204a: and    $0xfffffffffffffff9,%rcx
  0x0000000002de204e: mov    %rsi,%rdi
  0x0000000002de2051: add    %rcx,%rdi
  0x0000000002de2054: mov    %rsi,%rbx
  0x0000000002de2057: shr    $0x3,%r11
  0x0000000002de205b: sub    %r11,%rdx
  0x0000000002de205e: mov    %rdx,%rcx
  0x0000000002de2061: xor    %rax,%rax
  0x0000000002de2064: shl    $0x3,%rcx
  0x0000000002de2068: rep rex.W stos %al,%es:(%rdi)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de206b: mov    %r10,%rcx
  0x0000000002de206e: mov    %r9,%rdx
  0x0000000002de2071: movabs $0x2d02980,%r10
  0x0000000002de207b: callq  *%r10              ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de207e: mov    %ebp,%r11d
  0x0000000002de2081: mov    %rbx,%rsi
  0x0000000002de2084: jmpq   0x0000000002de0c24
  0x0000000002de2089: mov    %r8d,%ebp
  0x0000000002de208c: mov    0x68(%rsp),%r10
  0x0000000002de2091: jmpq   0x0000000002de15bb
  0x0000000002de2096: movslq %esi,%r8
  0x0000000002de2099: mov    %r8,%r11
  0x0000000002de209c: shl    %r11
  0x0000000002de209f: add    $0x10,%r11
  0x0000000002de20a3: mov    %r11,%r9
  0x0000000002de20a6: and    $0xfffffffffffffff9,%r9
  0x0000000002de20aa: mov    0x80(%rsp),%rdi
  0x0000000002de20b2: add    %r9,%rdi
  0x0000000002de20b5: shr    $0x3,%r11
  0x0000000002de20b9: sub    %r11,%r10
  0x0000000002de20bc: mov    %r10,%rcx
  0x0000000002de20bf: xor    %rax,%rax
  0x0000000002de20c2: shl    $0x3,%rcx
  0x0000000002de20c6: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de20c9: mov    0x68(%rsp),%rcx
  0x0000000002de20ce: mov    %rbx,%rdx
  0x0000000002de20d1: movabs $0x2d02980,%r10
  0x0000000002de20db: callq  *%r10              ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de20de: jmpq   0x0000000002de0dab
  0x0000000002de20e3: mov    %rdi,0x78(%rsp)
  0x0000000002de20e8: mov    %r9,0x28(%rsp)
  0x0000000002de20ed: mov    %r8d,%ebp          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de20f0: movabs $0x7c0000208,%rdx  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de20fa: nop
  0x0000000002de20fb: callq  0x0000000002db36e0  ; OopMap{[48]=Derived_oop_[104] [64]=Oop [80]=Oop [104]=Oop off=15328}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2100: mov    %ebp,%r8d
  0x0000000002de2103: mov    0x28(%rsp),%r9
  0x0000000002de2108: mov    0x78(%rsp),%rdi
  0x0000000002de210d: mov    %rax,%rbx
  0x0000000002de2110: jmpq   0x0000000002de05ea
  0x0000000002de2115: mov    %rax,0x70(%rsp)
  0x0000000002de211a: mov    %rdx,0x68(%rsp)
  0x0000000002de211f: mov    %r13d,0x24(%rsp)
  0x0000000002de2124: mov    %rdi,0x48(%rsp)
  0x0000000002de2129: mov    %rbx,0x30(%rsp)
  0x0000000002de212e: mov    %r10,0x28(%rsp)
  0x0000000002de2133: mov    %r11d,%ebp         ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2136: movabs $0x7c0000208,%rdx  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de2140: mov    %r13d,%r8d
  0x0000000002de2143: callq  0x0000000002db36e0  ; OopMap{[40]=Oop [48]=Oop [64]=Oop [72]=Derived_oop_[40] [80]=Oop off=15400}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2148: mov    %rax,%r8
  0x0000000002de214b: mov    %ebp,%r11d
  0x0000000002de214e: mov    0x28(%rsp),%r10
  0x0000000002de2153: mov    0x30(%rsp),%rbx
  0x0000000002de2158: mov    0x48(%rsp),%rdi
  0x0000000002de215d: mov    0x24(%rsp),%r13d
  0x0000000002de2162: mov    0x68(%rsp),%rdx
  0x0000000002de2167: mov    0x70(%rsp),%rax
  0x0000000002de216c: mov    %r8,%rbp
  0x0000000002de216f: jmpq   0x0000000002de0708
  0x0000000002de2174: mov    0x2c(%rsp),%r10d
  0x0000000002de2179: mov    %r10d,0x24(%rsp)   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de217e: mov    0x24(%rsp),%r10d   ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2183: mov    $0xffffff65,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2188: mov    0x40(%rsp),%rbp
  0x0000000002de218d: mov    0x30(%rsp),%ecx
  0x0000000002de2191: mov    %ecx,0x20(%rsp)
  0x0000000002de2195: mov    %r10d,0x24(%rsp)
  0x0000000002de219a: mov    0x34(%rsp),%r10d
  0x0000000002de219f: mov    %r10d,0x2c(%rsp)
  0x0000000002de21a4: mov    %r11d,0x3c(%rsp)
  0x0000000002de21a9: mov    0x48(%rsp),%r11d
  0x0000000002de21ae: mov    %r11d,0x40(%rsp)
  0x0000000002de21b3: mov    %r8d,0x44(%rsp)
  0x0000000002de21b8: data16 xchg %ax,%ax
  0x0000000002de21bb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=15520}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de21c0: int3   
  0x0000000002de21c1: mov    %eax,0x2c(%rsp)
  0x0000000002de21c5: mov    %r8,0x70(%rsp)
  0x0000000002de21ca: mov    %r10,0x78(%rsp)    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de21cf: movabs $0x7c0000208,%rdx  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de21d9: mov    0x2c(%rsp),%r8d
  0x0000000002de21de: nop
  0x0000000002de21df: callq  0x0000000002db36e0  ; OopMap{[32]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[32] off=15556}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de21e4: mov    %rax,%r8
  0x0000000002de21e7: jmpq   0x0000000002de0845
  0x0000000002de21ec: mov    %ebx,%ebp          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de21ee: mov    0x40(%rsp),%rcx
  0x0000000002de21f3: mov    0x50(%rsp),%r11
  0x0000000002de21f8: mov    0x4c(%rsp),%r10d
  0x0000000002de21fd: mov    0x3c(%rsp),%r9d    ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2202: mov    $0xffffff65,%edx
  0x0000000002de2207: mov    %rcx,0x20(%rsp)
  0x0000000002de220c: mov    %r10d,0x28(%rsp)
  0x0000000002de2211: mov    %r9d,0x2c(%rsp)
  0x0000000002de2216: mov    %r11,0x30(%rsp)
  0x0000000002de221b: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [48]=Oop off=15616}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)
                                                ;   {runtime_call}
  0x0000000002de2220: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de2221: mov    0x2c(%rsp),%r10d
  0x0000000002de2226: mov    %r10d,0x24(%rsp)   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de222b: mov    0x24(%rsp),%r10d   ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2230: mov    $0xffffff65,%edx   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2235: mov    0x40(%rsp),%rbp
  0x0000000002de223a: mov    0x30(%rsp),%ebx
  0x0000000002de223e: mov    %ebx,0x20(%rsp)
  0x0000000002de2242: mov    %r10d,0x24(%rsp)
  0x0000000002de2247: mov    0x34(%rsp),%r10d
  0x0000000002de224c: mov    %r10d,0x2c(%rsp)
  0x0000000002de2251: mov    %r11d,0x38(%rsp)
  0x0000000002de2256: mov    0x48(%rsp),%r11d
  0x0000000002de225b: mov    %r11d,0x3c(%rsp)
  0x0000000002de2260: mov    %r8d,0x40(%rsp)
  0x0000000002de2265: mov    %r9d,0x44(%rsp)
  0x0000000002de226a: nop
  0x0000000002de226b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=15696}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2270: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002de2271: movslq %eax,%r10          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2274: jmpq   0x0000000002ddf7e5  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2279: mov    %r9,%rdi
  0x0000000002de227c: xor    %rax,%rax
  0x0000000002de227f: shl    $0x3,%rcx
  0x0000000002de2283: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2286: mov    0x38(%rsp),%rbp
  0x0000000002de228b: mov    %rbp,%rdx
  0x0000000002de228e: xor    %r8d,%r8d
  0x0000000002de2291: mov    0x80(%rsp),%r9
  0x0000000002de2299: xor    %edi,%edi
  0x0000000002de229b: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=15744}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de22a0: jmpq   0x0000000002ddf8dc
  0x0000000002de22a5: mov    %r9,%rdi
  0x0000000002de22a8: xor    %rax,%rax
  0x0000000002de22ab: shl    $0x3,%rcx
  0x0000000002de22af: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de22b2: jmpq   0x0000000002ddf8dc  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de22b7: mov    $0xffffffe4,%edx
  0x0000000002de22bc: mov    0x40(%rsp),%rbp
  0x0000000002de22c1: mov    %r11d,0x20(%rsp)
  0x0000000002de22c6: mov    0x3c(%rsp),%r11d
  0x0000000002de22cb: mov    %r11d,0x24(%rsp)
  0x0000000002de22d0: mov    0x50(%rsp),%r11
  0x0000000002de22d5: mov    %r11,0x30(%rsp)
  0x0000000002de22da: mov    %r11,0x38(%rsp)
  0x0000000002de22df: mov    %r9d,0x40(%rsp)
  0x0000000002de22e4: mov    %r10,0x48(%rsp)
  0x0000000002de22e9: xchg   %ax,%ax
  0x0000000002de22eb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop off=15824}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de22f0: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de22f1: mov    $0xffffffe4,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de22f6: mov    0x40(%rsp),%rbp
  0x0000000002de22fb: mov    %r11d,0x20(%rsp)
  0x0000000002de2300: mov    0x3c(%rsp),%r11d
  0x0000000002de2305: mov    %r11d,0x24(%rsp)
  0x0000000002de230a: nop
  0x0000000002de230b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=15856}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2310: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2311: mov    $0xffffffe4,%edx   ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2316: mov    0x40(%rsp),%rbp
  0x0000000002de231b: mov    %r11d,0x20(%rsp)
  0x0000000002de2320: mov    0x3c(%rsp),%r11d
  0x0000000002de2325: mov    %r11d,0x24(%rsp)
  0x0000000002de232a: mov    %r10,0x40(%rsp)
  0x0000000002de232f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=15892}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2334: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002de2335: mov    0x30(%rsp),%r10d   ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de233a: mov    $0xffffff65,%edx
  0x0000000002de233f: mov    0x40(%rsp),%r8
  0x0000000002de2344: mov    %r10d,0x28(%rsp)
  0x0000000002de2349: mov    %r11d,0x2c(%rsp)
  0x0000000002de234e: mov    %ebx,0x30(%rsp)
  0x0000000002de2352: mov    %r8,0x38(%rsp)
  0x0000000002de2357: mov    %ecx,0x40(%rsp)
  0x0000000002de235b: mov    %r9d,0x44(%rsp)
  0x0000000002de2360: data16 xchg %ax,%ax
  0x0000000002de2363: callq  0x0000000002cf57a0  ; OopMap{[56]=Oop [68]=NarrowOop [80]=Oop off=15944}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2368: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x0000000002de2369: mov    %rdi,%r9
  0x0000000002de236c: mov    %rbx,%rbp
  0x0000000002de236f: mov    %r10d,%ebx
  0x0000000002de2372: movslq %esi,%r8           ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2375: mov    %r8,%r10
  0x0000000002de2378: shl    %r10
  0x0000000002de237b: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de237f: mov    %r10,%rcx
  0x0000000002de2382: and    $0xfffffffffffffff9,%rcx
  0x0000000002de2386: mov    %rbp,%rdi
  0x0000000002de2389: add    %rcx,%rdi
  0x0000000002de238c: shr    $0x3,%r10
  0x0000000002de2390: sub    %r10,%r11
  0x0000000002de2393: mov    %r11,%rcx
  0x0000000002de2396: xor    %rax,%rax
  0x0000000002de2399: shl    $0x3,%rcx
  0x0000000002de239d: rep rex.W stos %al,%es:(%rdi)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de23a0: mov    0x70(%rsp),%rcx
  0x0000000002de23a5: mov    %r9,%rdx
  0x0000000002de23a8: movabs $0x2d02980,%r10
  0x0000000002de23b2: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de23b5: mov    %ebx,%r10d
  0x0000000002de23b8: mov    %rbp,%rbx
  0x0000000002de23bb: jmpq   0x0000000002de0faf
  0x0000000002de23c0: vmovq  %rbp,%xmm0
  0x0000000002de23c5: mov    %rdi,%r11
  0x0000000002de23c8: mov    %r10d,%ebp
  0x0000000002de23cb: movslq %esi,%r8           ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de23ce: mov    %r8,%r10
  0x0000000002de23d1: shl    %r10
  0x0000000002de23d4: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de23d8: mov    %r10,%rcx
  0x0000000002de23db: and    $0xfffffffffffffff9,%rcx
  0x0000000002de23df: mov    %rdx,%rdi
  0x0000000002de23e2: add    %rcx,%rdi
  0x0000000002de23e5: mov    %rdx,%r14
  0x0000000002de23e8: shr    $0x3,%r10
  0x0000000002de23ec: sub    %r10,%r9
  0x0000000002de23ef: mov    %r9,%rcx
  0x0000000002de23f2: xor    %rax,%rax
  0x0000000002de23f5: shl    $0x3,%rcx
  0x0000000002de23f9: rep rex.W stos %al,%es:(%rdi)  ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de23fc: mov    %r11,%rcx
  0x0000000002de23ff: vmovq  %xmm0,%rdx
  0x0000000002de2404: movabs $0x2d02980,%r10
  0x0000000002de240e: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2411: mov    %ebp,%r10d
  0x0000000002de2414: mov    %r14,%rdx
  0x0000000002de2417: jmpq   0x0000000002de10e0
  0x0000000002de241c: movslq %esi,%r11          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de241f: jmpq   0x0000000002ddfb12  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2424: mov    %r9,%rdi
  0x0000000002de2427: xor    %rax,%rax
  0x0000000002de242a: shl    $0x3,%rcx
  0x0000000002de242e: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2431: mov    0x38(%rsp),%rbp
  0x0000000002de2436: mov    %rbp,%rdx
  0x0000000002de2439: xor    %r8d,%r8d
  0x0000000002de243c: mov    0x80(%rsp),%r9
  0x0000000002de2444: xor    %edi,%edi
  0x0000000002de2446: nop
  0x0000000002de2447: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=16172}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de244c: jmpq   0x0000000002ddfc0c
  0x0000000002de2451: mov    %r9,%rdi
  0x0000000002de2454: xor    %rax,%rax
  0x0000000002de2457: shl    $0x3,%rcx
  0x0000000002de245b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de245e: jmpq   0x0000000002ddfc0c
  0x0000000002de2463: mov    0x24(%rsp),%r8d
  0x0000000002de2468: mov    %r8d,0x38(%rsp)    ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de246d: mov    $0xffffff65,%edx   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2472: mov    0x40(%rsp),%rbp
  0x0000000002de2477: mov    0x30(%rsp),%r8d
  0x0000000002de247c: mov    %r8d,0x20(%rsp)
  0x0000000002de2481: mov    0x38(%rsp),%r10d
  0x0000000002de2486: mov    %r10d,0x24(%rsp)
  0x0000000002de248b: mov    %rax,-0x8(%rsp)
  0x0000000002de2490: mov    0x34(%rsp),%eax
  0x0000000002de2494: mov    %eax,0x28(%rsp)
  0x0000000002de2498: mov    -0x8(%rsp),%rax
  0x0000000002de249d: mov    0x4c(%rsp),%r8d
  0x0000000002de24a2: mov    %r8d,0x2c(%rsp)
  0x0000000002de24a7: mov    %r11d,0x3c(%rsp)
  0x0000000002de24ac: mov    0x48(%rsp),%r11d
  0x0000000002de24b1: mov    %r11d,0x40(%rsp)
  0x0000000002de24b6: mov    %ecx,0x44(%rsp)
  0x0000000002de24ba: nop
  0x0000000002de24bb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=16288}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de24c0: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de24c1: mov    0x24(%rsp),%r10d
  0x0000000002de24c6: mov    %r10d,0x38(%rsp)   ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de24cb: mov    %esi,%r11d
  0x0000000002de24ce: mov    %r8d,%r10d         ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de24d1: mov    $0xffffff65,%edx   ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de24d6: mov    0x40(%rsp),%rbp
  0x0000000002de24db: mov    0x30(%rsp),%r8d
  0x0000000002de24e0: mov    %r8d,0x20(%rsp)
  0x0000000002de24e5: mov    0x38(%rsp),%r9d
  0x0000000002de24ea: mov    %r9d,0x24(%rsp)
  0x0000000002de24ef: mov    %rax,-0x8(%rsp)
  0x0000000002de24f4: mov    0x34(%rsp),%eax
  0x0000000002de24f8: mov    %eax,0x28(%rsp)
  0x0000000002de24fc: mov    -0x8(%rsp),%rax
  0x0000000002de2501: mov    0x4c(%rsp),%r8d
  0x0000000002de2506: mov    %r8d,0x2c(%rsp)
  0x0000000002de250b: mov    %r11d,0x38(%rsp)
  0x0000000002de2510: mov    0x48(%rsp),%r11d
  0x0000000002de2515: mov    %r11d,0x3c(%rsp)
  0x0000000002de251a: mov    %ecx,0x40(%rsp)
  0x0000000002de251e: mov    %r10d,0x44(%rsp)
  0x0000000002de2523: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=16392}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2528: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2529: mov    $0xffffff65,%edx
  0x0000000002de252e: mov    0x40(%rsp),%rbp
  0x0000000002de2533: mov    0x4c(%rsp),%r11d
  0x0000000002de2538: mov    %r11d,0x20(%rsp)
  0x0000000002de253d: mov    0x3c(%rsp),%r8d
  0x0000000002de2542: mov    %r8d,0x24(%rsp)
  0x0000000002de2547: mov    %r10d,0x40(%rsp)
  0x0000000002de254c: mov    %r10d,0x44(%rsp)
  0x0000000002de2551: xchg   %ax,%ax
  0x0000000002de2553: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=16440}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2558: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2559: mov    $0xffffff65,%edx
  0x0000000002de255e: mov    0x40(%rsp),%rbp
  0x0000000002de2563: mov    0x4c(%rsp),%r8d
  0x0000000002de2568: mov    0x3c(%rsp),%r11d
  0x0000000002de256d: mov    %r11d,0x24(%rsp)
  0x0000000002de2572: mov    %r8d,0x30(%rsp)
  0x0000000002de2577: mov    %r10d,0x40(%rsp)
  0x0000000002de257c: mov    %r10d,0x44(%rsp)
  0x0000000002de2581: mov    %r8d,%r10d
  0x0000000002de2584: mov    %r10d,0x48(%rsp)
  0x0000000002de2589: xchg   %ax,%ax
  0x0000000002de258b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=16496}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2590: int3                      ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2591: mov    %r11d,%r10d
  0x0000000002de2594: inc    %r10d              ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2597: cmp    0x4c(%rsp),%r10d
  0x0000000002de259c: jl     0x0000000002de1499  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de25a2: jmpq   0x0000000002de14d7  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de25a7: mov    $0xffffffe4,%edx
  0x0000000002de25ac: mov    0x40(%rsp),%rbp
  0x0000000002de25b1: mov    0x4c(%rsp),%r10d
  0x0000000002de25b6: mov    %r10d,0x20(%rsp)
  0x0000000002de25bb: mov    0x3c(%rsp),%r11d
  0x0000000002de25c0: mov    %r11d,0x24(%rsp)
  0x0000000002de25c5: mov    0x48(%rsp),%r10d
  0x0000000002de25ca: mov    %r10d,0x3c(%rsp)
  0x0000000002de25cf: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [60]=NarrowOop [80]=Oop [104]=Oop off=16564}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de25d4: int3                      ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de25d5: mov    $0xffffffe4,%edx
  0x0000000002de25da: mov    0x40(%rsp),%r10
  0x0000000002de25df: mov    %r10,0x20(%rsp)
  0x0000000002de25e4: mov    0x4c(%rsp),%r11d
  0x0000000002de25e9: mov    0x3c(%rsp),%r10d
  0x0000000002de25ee: mov    %r10d,0x2c(%rsp)
  0x0000000002de25f3: mov    %r11d,0x38(%rsp)
  0x0000000002de25f8: data16 xchg %ax,%ax
  0x0000000002de25fb: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [72]=NarrowOop [80]=Oop [104]=Oop off=16608}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2600: int3                      ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2601: mov    $0xffffff65,%edx
  0x0000000002de2606: mov    0x40(%rsp),%rbp
  0x0000000002de260b: mov    0x3c(%rsp),%r9d
  0x0000000002de2610: mov    %r9d,0x24(%rsp)
  0x0000000002de2615: mov    %r11d,0x30(%rsp)
  0x0000000002de261a: mov    0x50(%rsp),%r11
  0x0000000002de261f: mov    %r11,0x40(%rsp)
  0x0000000002de2624: mov    %r11,0x48(%rsp)
  0x0000000002de2629: mov    %r10,0x50(%rsp)
  0x0000000002de262e: nop
  0x0000000002de262f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [72]=Oop [80]=Oop off=16660}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2634: int3   
  0x0000000002de2635: mov    $0xffffff65,%edx
  0x0000000002de263a: mov    0x40(%rsp),%rbp
  0x0000000002de263f: mov    %r11d,%r10d
  0x0000000002de2642: mov    %r10d,0x24(%rsp)
  0x0000000002de2647: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop off=16684}
                                                ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de264c: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de264d: movabs $0x7c0000208,%rdx  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de2657: mov    %esi,%r8d
  0x0000000002de265a: nop
  0x0000000002de265b: callq  0x0000000002db36e0  ; OopMap{[64]=Oop [80]=Oop [104]=Oop [112]=Derived_oop_[104] off=16704}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2660: mov    %rax,%r8
  0x0000000002de2663: jmpq   0x0000000002de09df
  0x0000000002de2668: movslq %edx,%r8           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de266b: jmpq   0x0000000002ddfc78  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2670: mov    %r9,%rdi
  0x0000000002de2673: xor    %rax,%rax
  0x0000000002de2676: shl    $0x3,%rcx
  0x0000000002de267a: rep rex.W stos %al,%es:(%rdi)  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de267d: mov    0x20(%rsp),%rbp
  0x0000000002de2682: mov    %rbp,%rdx
  0x0000000002de2685: xor    %r8d,%r8d
  0x0000000002de2688: mov    0x78(%rsp),%r9
  0x0000000002de268d: xor    %edi,%edi
  0x0000000002de268f: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [120]=Oop off=16756}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2694: jmpq   0x0000000002ddfd70
  0x0000000002de2699: mov    %r9,%rdi
  0x0000000002de269c: xor    %rax,%rax
  0x0000000002de269f: shl    $0x3,%rcx
  0x0000000002de26a3: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de26a6: jmpq   0x0000000002ddfd70  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de26ab: mov    $0xffffff65,%edx
  0x0000000002de26b0: mov    0x40(%rsp),%rbp
  0x0000000002de26b5: mov    0x4c(%rsp),%r11d
  0x0000000002de26ba: mov    0x3c(%rsp),%r10d
  0x0000000002de26bf: mov    %r10d,0x24(%rsp)
  0x0000000002de26c4: mov    %r11d,0x30(%rsp)
  0x0000000002de26c9: xchg   %ax,%ax
  0x0000000002de26cb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=16816}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de26d0: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de26d1: mov    $0xffffff65,%edx
  0x0000000002de26d6: mov    0x40(%rsp),%rbp
  0x0000000002de26db: mov    0x4c(%rsp),%r10d
  0x0000000002de26e0: mov    %r10d,0x20(%rsp)
  0x0000000002de26e5: mov    0x3c(%rsp),%r11d
  0x0000000002de26ea: mov    %r11d,0x24(%rsp)
  0x0000000002de26ef: mov    0x50(%rsp),%r10
  0x0000000002de26f4: mov    %r10,0x40(%rsp)
  0x0000000002de26f9: mov    0x64(%rsp),%r11d
  0x0000000002de26fe: mov    %r11d,%r10d
  0x0000000002de2701: mov    %r10d,0x4c(%rsp)
  0x0000000002de2706: mov    %r10d,0x50(%rsp)
  0x0000000002de270b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [104]=Oop off=16880}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2710: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2711: mov    $0xffffff65,%edx
  0x0000000002de2716: mov    0x40(%rsp),%r10
  0x0000000002de271b: mov    %r10,0x20(%rsp)
  0x0000000002de2720: mov    0x4c(%rsp),%r10d
  0x0000000002de2725: mov    %r10d,0x28(%rsp)
  0x0000000002de272a: mov    0x3c(%rsp),%r11d
  0x0000000002de272f: mov    %r11d,0x2c(%rsp)
  0x0000000002de2734: mov    0x64(%rsp),%r11d
  0x0000000002de2739: mov    %r11d,0x58(%rsp)
  0x0000000002de273e: nop
  0x0000000002de273f: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=16932}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2744: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002de2745: mov    0x30(%rsp),%rbx
  0x0000000002de274a: jmpq   0x0000000002de0c42  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de274f: mov    $0xffffff65,%edx
  0x0000000002de2754: mov    0x40(%rsp),%rbp
  0x0000000002de2759: mov    0x4c(%rsp),%r11d
  0x0000000002de275e: mov    %r11d,0x20(%rsp)
  0x0000000002de2763: mov    0x3c(%rsp),%r10d
  0x0000000002de2768: mov    %r10d,0x24(%rsp)
  0x0000000002de276d: xchg   %ax,%ax
  0x0000000002de276f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=16980}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2774: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2775: mov    $0xffffff65,%edx
  0x0000000002de277a: mov    0x40(%rsp),%rbp
  0x0000000002de277f: mov    0x4c(%rsp),%r10d
  0x0000000002de2784: mov    %r10d,0x20(%rsp)
  0x0000000002de2789: mov    0x3c(%rsp),%r11d
  0x0000000002de278e: mov    %r11d,0x24(%rsp)
  0x0000000002de2793: mov    0x50(%rsp),%r10
  0x0000000002de2798: mov    %r10,0x40(%rsp)
  0x0000000002de279d: mov    0x64(%rsp),%r11d
  0x0000000002de27a2: mov    %r11d,%r10d
  0x0000000002de27a5: mov    %r10d,0x4c(%rsp)
  0x0000000002de27aa: mov    %r10d,0x50(%rsp)
  0x0000000002de27af: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [104]=Oop off=17044}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de27b4: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de27b5: mov    $0xffffff65,%edx
  0x0000000002de27ba: mov    0x40(%rsp),%rbp
  0x0000000002de27bf: mov    0x4c(%rsp),%r10d
  0x0000000002de27c4: mov    %r10d,0x20(%rsp)
  0x0000000002de27c9: mov    0x3c(%rsp),%r11d
  0x0000000002de27ce: mov    %r11d,0x24(%rsp)
  0x0000000002de27d3: mov    0x50(%rsp),%r10
  0x0000000002de27d8: mov    %r10,0x40(%rsp)
  0x0000000002de27dd: mov    0x64(%rsp),%r10d
  0x0000000002de27e2: mov    %r10d,0x4c(%rsp)
  0x0000000002de27e7: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [104]=Oop off=17100}
                                                ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de27ec: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de27ed: mov    $0xffffff65,%edx
  0x0000000002de27f2: mov    0x40(%rsp),%r10
  0x0000000002de27f7: mov    %r10,0x20(%rsp)
  0x0000000002de27fc: mov    0x4c(%rsp),%r11d
  0x0000000002de2801: mov    0x3c(%rsp),%r10d
  0x0000000002de2806: mov    %r10d,0x2c(%rsp)
  0x0000000002de280b: mov    %r11d,0x38(%rsp)
  0x0000000002de2810: mov    %r11d,0x48(%rsp)
  0x0000000002de2815: mov    0x64(%rsp),%r11d
  0x0000000002de281a: mov    %r11d,0x4c(%rsp)
  0x0000000002de281f: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=17156}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2824: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x0000000002de2825: mov    %rbp,0x68(%rsp)
  0x0000000002de282a: mov    %rdx,0x60(%rsp)
  0x0000000002de282f: mov    %ebx,0x38(%rsp)
  0x0000000002de2833: mov    %rdi,0x48(%rsp)
  0x0000000002de2838: mov    %rcx,0x30(%rsp)
  0x0000000002de283d: mov    %r10,0x28(%rsp)
  0x0000000002de2842: mov    %r9d,0x24(%rsp)
  0x0000000002de2847: mov    %r11d,%ebp         ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de284a: movabs $0x7c0000208,%rdx  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de2854: mov    %r9d,%r8d
  0x0000000002de2857: callq  0x0000000002db36e0  ; OopMap{[40]=Oop [48]=Derived_oop_[40] [64]=Oop [80]=Oop off=17212}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de285c: mov    %ebp,%r11d
  0x0000000002de285f: mov    0x24(%rsp),%r9d
  0x0000000002de2864: mov    0x28(%rsp),%r10
  0x0000000002de2869: mov    0x30(%rsp),%rcx
  0x0000000002de286e: mov    0x48(%rsp),%rdi
  0x0000000002de2873: mov    0x38(%rsp),%ebx
  0x0000000002de2877: mov    0x60(%rsp),%rdx
  0x0000000002de287c: mov    0x68(%rsp),%rbp
  0x0000000002de2881: mov    %rax,%rsi
  0x0000000002de2884: jmpq   0x0000000002de0bd3
  0x0000000002de2889: mov    %r9,0x78(%rsp)
  0x0000000002de288e: mov    %rbx,0x70(%rsp)
  0x0000000002de2893: mov    %eax,0x38(%rsp)
  0x0000000002de2897: mov    %r10d,0x2c(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de289c: movabs $0x7c0000208,%rdx  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de28a6: nop
  0x0000000002de28a7: callq  0x0000000002db36e0  ; OopMap{[32]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[32] off=17292}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de28ac: mov    %rax,%rcx
  0x0000000002de28af: jmpq   0x0000000002de0d31
  0x0000000002de28b4: movslq %eax,%r10          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de28b7: mov    %r10,%r9
  0x0000000002de28ba: jmpq   0x0000000002ddfddc
  0x0000000002de28bf: mov    0x80(%rsp),%rcx
  0x0000000002de28c7: mov    %r9,%rdi
  0x0000000002de28ca: xor    %rax,%rax
  0x0000000002de28cd: shl    $0x3,%rcx
  0x0000000002de28d1: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de28d4: mov    0x38(%rsp),%rbp
  0x0000000002de28d9: mov    %rbp,%rdx
  0x0000000002de28dc: xor    %r8d,%r8d
  0x0000000002de28df: mov    0x88(%rsp),%r9
  0x0000000002de28e7: xor    %edi,%edi
  0x0000000002de28e9: mov    0x4c(%rsp),%esi
  0x0000000002de28ed: xchg   %ax,%ax
  0x0000000002de28ef: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [136]=Oop off=17364}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de28f4: jmpq   0x0000000002ddfee2
  0x0000000002de28f9: mov    0x80(%rsp),%rcx
  0x0000000002de2901: mov    %r9,%rdi
  0x0000000002de2904: xor    %rax,%rax
  0x0000000002de2907: shl    $0x3,%rcx
  0x0000000002de290b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de290e: jmpq   0x0000000002ddfee2  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2913: mov    $0xffffffe4,%edx   ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2918: mov    0x40(%rsp),%rbp
  0x0000000002de291d: mov    %r11d,0x20(%rsp)
  0x0000000002de2922: mov    0x3c(%rsp),%r11d
  0x0000000002de2927: mov    %r11d,0x28(%rsp)
  0x0000000002de292c: mov    %r10,0x40(%rsp)
  0x0000000002de2931: xchg   %ax,%ax
  0x0000000002de2933: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=17432}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2938: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2939: mov    $0xffffff65,%edx
  0x0000000002de293e: mov    0x40(%rsp),%rbp
  0x0000000002de2943: mov    0x30(%rsp),%r11d
  0x0000000002de2948: mov    %r11d,0x20(%rsp)
  0x0000000002de294d: mov    %rax,-0x8(%rsp)
  0x0000000002de2952: mov    0x34(%rsp),%eax
  0x0000000002de2956: mov    %eax,0x28(%rsp)
  0x0000000002de295a: mov    -0x8(%rsp),%rax
  0x0000000002de295f: mov    0x48(%rsp),%r10d
  0x0000000002de2964: mov    %r10d,0x3c(%rsp)
  0x0000000002de2969: mov    %ecx,0x40(%rsp)
  0x0000000002de296d: xchg   %ax,%ax
  0x0000000002de296f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=17492}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2974: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2975: mov    $0xffffff65,%edx
  0x0000000002de297a: mov    0x40(%rsp),%rbp
  0x0000000002de297f: mov    0x38(%rsp),%r10d
  0x0000000002de2984: mov    %rax,-0x8(%rsp)
  0x0000000002de2989: mov    0x34(%rsp),%eax
  0x0000000002de298d: mov    %eax,0x28(%rsp)
  0x0000000002de2991: mov    -0x8(%rsp),%rax
  0x0000000002de2996: mov    %r10d,0x2c(%rsp)
  0x0000000002de299b: mov    %ecx,0x38(%rsp)
  0x0000000002de299f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [56]=NarrowOop [80]=Oop off=17540}
                                                ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de29a4: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x0000000002de29a5: mov    %r10d,%r13d
  0x0000000002de29a8: movslq %esi,%r8           ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de29ab: mov    %r8,%r10
  0x0000000002de29ae: shl    %r10
  0x0000000002de29b1: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de29b5: mov    %r10,%rcx
  0x0000000002de29b8: and    $0xfffffffffffffff9,%rcx
  0x0000000002de29bc: mov    %rbx,%rdi
  0x0000000002de29bf: add    %rcx,%rdi
  0x0000000002de29c2: shr    $0x3,%r10
  0x0000000002de29c6: sub    %r10,%r9
  0x0000000002de29c9: mov    %r9,%rcx
  0x0000000002de29cc: xor    %rax,%rax
  0x0000000002de29cf: shl    $0x3,%rcx
  0x0000000002de29d3: rep rex.W stos %al,%es:(%rdi)  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de29d6: mov    0x70(%rsp),%rcx
  0x0000000002de29db: movabs $0x2d02980,%r10
  0x0000000002de29e5: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de29e8: mov    %r13d,%r10d
  0x0000000002de29eb: jmpq   0x0000000002de1472
  0x0000000002de29f0: mov    %r9,0x30(%rsp)
  0x0000000002de29f5: mov    %r11,0x28(%rsp)
  0x0000000002de29fa: mov    0x78(%rsp),%ebp    ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de29fe: movabs $0x7c0000208,%rdx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de2a08: data16 xchg %ax,%ax
  0x0000000002de2a0b: callq  0x0000000002db36e0  ; OopMap{[64]=Oop [80]=Oop [104]=Oop [112]=Derived_oop_[104] off=17648}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2a10: mov    %ebp,%r8d
  0x0000000002de2a13: mov    0x28(%rsp),%r11
  0x0000000002de2a18: mov    0x30(%rsp),%r9
  0x0000000002de2a1d: mov    %rax,%rbx
  0x0000000002de2a20: jmpq   0x0000000002de0f3f
  0x0000000002de2a25: mov    %rax,0x68(%rsp)
  0x0000000002de2a2a: mov    %r9,0x60(%rsp)
  0x0000000002de2a2f: mov    %r13d,0x24(%rsp)
  0x0000000002de2a34: mov    %rdi,0x48(%rsp)
  0x0000000002de2a39: mov    %rbx,0x30(%rsp)
  0x0000000002de2a3e: mov    %r8,0x28(%rsp)
  0x0000000002de2a43: mov    %r10d,%ebp         ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2a46: movabs $0x7c0000208,%rdx  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de2a50: mov    %r13d,%r8d
  0x0000000002de2a53: callq  0x0000000002db36e0  ; OopMap{[40]=Oop [48]=Oop [64]=Oop [72]=Derived_oop_[40] [80]=Oop off=17720}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2a58: mov    %rax,%r11
  0x0000000002de2a5b: mov    %ebp,%r10d
  0x0000000002de2a5e: mov    0x28(%rsp),%r8
  0x0000000002de2a63: mov    0x30(%rsp),%rbx
  0x0000000002de2a68: mov    0x48(%rsp),%rdi
  0x0000000002de2a6d: mov    0x24(%rsp),%r13d
  0x0000000002de2a72: mov    0x60(%rsp),%r9
  0x0000000002de2a77: mov    0x68(%rsp),%rax
  0x0000000002de2a7c: mov    %r11,%rdx
  0x0000000002de2a7f: jmpq   0x0000000002de106a
  0x0000000002de2a84: movslq %esi,%r10          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2a87: mov    %r10,%r8
  0x0000000002de2a8a: jmpq   0x0000000002de0046  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2a8f: mov    0x80(%rsp),%rcx
  0x0000000002de2a97: mov    %r10,%rdi
  0x0000000002de2a9a: xor    %rax,%rax
  0x0000000002de2a9d: shl    $0x3,%rcx
  0x0000000002de2aa1: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2aa4: mov    0x38(%rsp),%rbp
  0x0000000002de2aa9: mov    %rbp,%rdx
  0x0000000002de2aac: xor    %r8d,%r8d
  0x0000000002de2aaf: mov    0x88(%rsp),%r9
  0x0000000002de2ab7: xor    %edi,%edi
  0x0000000002de2ab9: mov    0x64(%rsp),%esi
  0x0000000002de2abd: xchg   %ax,%ax
  0x0000000002de2abf: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [136]=Oop off=17828}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2ac4: jmpq   0x0000000002de0152
  0x0000000002de2ac9: mov    0x80(%rsp),%rcx
  0x0000000002de2ad1: mov    %r9,%rdi
  0x0000000002de2ad4: xor    %rax,%rax
  0x0000000002de2ad7: shl    $0x3,%rcx
  0x0000000002de2adb: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2ade: jmpq   0x0000000002de0152
  0x0000000002de2ae3: mov    %edi,0x24(%rsp)    ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2ae7: mov    0x24(%rsp),%r10d   ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2aec: mov    $0xffffff65,%edx   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2af1: mov    0x40(%rsp),%rbp
  0x0000000002de2af6: mov    0x30(%rsp),%r9d
  0x0000000002de2afb: mov    %r9d,0x20(%rsp)
  0x0000000002de2b00: mov    %r10d,0x24(%rsp)
  0x0000000002de2b05: mov    0x34(%rsp),%r10d
  0x0000000002de2b0a: mov    %r10d,0x2c(%rsp)
  0x0000000002de2b0f: mov    %r8d,0x3c(%rsp)
  0x0000000002de2b14: mov    0x48(%rsp),%r10d
  0x0000000002de2b19: mov    %r10d,0x40(%rsp)
  0x0000000002de2b1e: mov    %ecx,0x44(%rsp)
  0x0000000002de2b22: nop
  0x0000000002de2b23: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=17928}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2b28: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de2b29: mov    %edi,0x24(%rsp)
  0x0000000002de2b2d: mov    %esi,%r8d
  0x0000000002de2b30: mov    %r10d,%r9d         ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2b33: mov    0x24(%rsp),%r10d   ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2b38: mov    $0xffffff65,%edx   ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2b3d: mov    0x40(%rsp),%rbp
  0x0000000002de2b42: mov    0x30(%rsp),%r11d
  0x0000000002de2b47: mov    %r11d,0x20(%rsp)
  0x0000000002de2b4c: mov    %r10d,0x24(%rsp)
  0x0000000002de2b51: mov    0x34(%rsp),%r11d
  0x0000000002de2b56: mov    %r11d,0x2c(%rsp)
  0x0000000002de2b5b: mov    %r8d,0x38(%rsp)
  0x0000000002de2b60: mov    0x48(%rsp),%r11d
  0x0000000002de2b65: mov    %r11d,0x3c(%rsp)
  0x0000000002de2b6a: mov    %ecx,0x40(%rsp)
  0x0000000002de2b6e: mov    %r9d,0x44(%rsp)
  0x0000000002de2b73: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=18008}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2b78: int3                      ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2b79: mov    $0xffffffe4,%edx
  0x0000000002de2b7e: mov    0x40(%rsp),%rbp
  0x0000000002de2b83: mov    %r10d,0x20(%rsp)
  0x0000000002de2b88: mov    0x3c(%rsp),%r11d
  0x0000000002de2b8d: mov    %r11d,0x24(%rsp)
  0x0000000002de2b92: mov    0x50(%rsp),%r10
  0x0000000002de2b97: mov    %r10,0x30(%rsp)
  0x0000000002de2b9c: mov    %r10,0x38(%rsp)
  0x0000000002de2ba1: mov    %r8d,0x40(%rsp)
  0x0000000002de2ba6: nop
  0x0000000002de2ba7: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [48]=Oop [56]=Oop [64]=NarrowOop [104]=Oop off=18060}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2bac: int3                      ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2bad: mov    $0xffffffe4,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2bb2: mov    0x40(%rsp),%rbp
  0x0000000002de2bb7: mov    %r10d,0x20(%rsp)
  0x0000000002de2bbc: mov    0x3c(%rsp),%r10d
  0x0000000002de2bc1: mov    %r10d,0x24(%rsp)
  0x0000000002de2bc6: nop
  0x0000000002de2bc7: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=18092}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2bcc: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2bcd: mov    $0xffffffe4,%edx   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2bd2: mov    0x40(%rsp),%rbp
  0x0000000002de2bd7: mov    %r10d,0x20(%rsp)
  0x0000000002de2bdc: mov    0x3c(%rsp),%r10d
  0x0000000002de2be1: mov    %r10d,0x24(%rsp)
  0x0000000002de2be6: mov    %r8,0x40(%rsp)
  0x0000000002de2beb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=18128}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2bf0: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de2bf1: movslq %edx,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2bf4: jmpq   0x0000000002de0231  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2bf9: mov    0x78(%rsp),%rcx
  0x0000000002de2bfe: mov    %r9,%rdi
  0x0000000002de2c01: xor    %rax,%rax
  0x0000000002de2c04: shl    $0x3,%rcx
  0x0000000002de2c08: rep rex.W stos %al,%es:(%rdi)  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2c0b: mov    0x20(%rsp),%rbp
  0x0000000002de2c10: mov    %rbp,%rdx
  0x0000000002de2c13: xor    %r8d,%r8d
  0x0000000002de2c16: mov    0x80(%rsp),%r9
  0x0000000002de2c1e: xor    %edi,%edi
  0x0000000002de2c20: mov    0x64(%rsp),%esi
  0x0000000002de2c24: data16 xchg %ax,%ax
  0x0000000002de2c27: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=18188}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2c2c: jmpq   0x0000000002de0338
  0x0000000002de2c31: mov    0x78(%rsp),%rcx
  0x0000000002de2c36: mov    %r9,%rdi
  0x0000000002de2c39: xor    %rax,%rax
  0x0000000002de2c3c: shl    $0x3,%rcx
  0x0000000002de2c40: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2c43: jmpq   0x0000000002de0338
  0x0000000002de2c48: mov    %esi,0x2c(%rsp)
  0x0000000002de2c4c: movslq %esi,%r10          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2c4f: jmpq   0x0000000002de03d8  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2c54: mov    %r9,%rdi
  0x0000000002de2c57: xor    %rax,%rax
  0x0000000002de2c5a: shl    $0x3,%rcx
  0x0000000002de2c5e: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2c61: mov    0x68(%rsp),%rbp
  0x0000000002de2c66: mov    %rbp,%rdx
  0x0000000002de2c69: xor    %r8d,%r8d
  0x0000000002de2c6c: mov    0x88(%rsp),%r9
  0x0000000002de2c74: xor    %edi,%edi
  0x0000000002de2c76: nop
  0x0000000002de2c77: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [136]=Oop off=18268}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2c7c: jmpq   0x0000000002de04da
  0x0000000002de2c81: mov    %r9,%rdi
  0x0000000002de2c84: xor    %rax,%rax
  0x0000000002de2c87: shl    $0x3,%rcx
  0x0000000002de2c8b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2c8e: jmpq   0x0000000002de04da  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2c93: mov    $0xffffff65,%edx
  0x0000000002de2c98: mov    0x40(%rsp),%rbp
  0x0000000002de2c9d: mov    0x3c(%rsp),%r11d
  0x0000000002de2ca2: mov    %r11d,0x24(%rsp)
  0x0000000002de2ca7: mov    %r10d,0x30(%rsp)
  0x0000000002de2cac: mov    0x50(%rsp),%r10
  0x0000000002de2cb1: mov    %r10,0x40(%rsp)
  0x0000000002de2cb6: mov    %r10,0x48(%rsp)
  0x0000000002de2cbb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [64]=Oop [72]=Oop [104]=Oop off=18336}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2cc0: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x0000000002de2cc1: movslq 0x78(%rsp),%r9     ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2cc6: jmpq   0x0000000002de0585
  0x0000000002de2ccb: movslq %r13d,%rdx         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2cce: jmpq   0x0000000002de06a2  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2cd3: mov    %rbx,0x28(%rsp)
  0x0000000002de2cd8: mov    %r11d,%ebp
  0x0000000002de2cdb: mov    %rdx,%rdi
  0x0000000002de2cde: xor    %rax,%rax
  0x0000000002de2ce1: shl    $0x3,%rcx
  0x0000000002de2ce5: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2ce8: mov    0x68(%rsp),%rdx
  0x0000000002de2ced: xor    %r8d,%r8d
  0x0000000002de2cf0: mov    %rbx,%r9
  0x0000000002de2cf3: xor    %edi,%edi
  0x0000000002de2cf5: xchg   %ax,%ax
  0x0000000002de2cf7: callq  0x0000000002db3b60  ; OopMap{[40]=Oop [64]=Oop [80]=Oop [104]=Oop off=18396}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2cfc: mov    %ebp,%r11d
  0x0000000002de2cff: mov    0x28(%rsp),%rbx
  0x0000000002de2d04: jmpq   0x0000000002de0651  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2d09: mov    %rbp,0x28(%rsp)
  0x0000000002de2d0e: mov    %r13d,0x24(%rsp)
  0x0000000002de2d13: mov    %rbx,%r9
  0x0000000002de2d16: mov    %r10,%rbx
  0x0000000002de2d19: mov    %r11d,%ebp
  0x0000000002de2d1c: mov    %r8,%rdi
  0x0000000002de2d1f: xor    %rax,%rax
  0x0000000002de2d22: shl    $0x3,%rcx
  0x0000000002de2d26: rep rex.W stos %al,%es:(%rdi)  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2d29: mov    %r9,%rdx
  0x0000000002de2d2c: xor    %r8d,%r8d
  0x0000000002de2d2f: mov    0x28(%rsp),%r9
  0x0000000002de2d34: xor    %edi,%edi
  0x0000000002de2d36: mov    %rbx,0x68(%rsp)
  0x0000000002de2d3b: callq  0x0000000002db3b60  ; OopMap{[40]=Oop [64]=Oop [80]=Oop [104]=Oop off=18464}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2d40: mov    %ebp,%r11d
  0x0000000002de2d43: mov    0x24(%rsp),%r13d
  0x0000000002de2d48: mov    0x28(%rsp),%rbp
  0x0000000002de2d4d: jmpq   0x0000000002de0781
  0x0000000002de2d52: mov    %rdx,%rdi
  0x0000000002de2d55: xor    %rax,%rax
  0x0000000002de2d58: shl    $0x3,%rcx
  0x0000000002de2d5c: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2d5f: jmpq   0x0000000002de0651
  0x0000000002de2d64: mov    %r8,%rdi
  0x0000000002de2d67: xor    %rax,%rax
  0x0000000002de2d6a: shl    $0x3,%rcx
  0x0000000002de2d6e: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2d71: jmpq   0x0000000002de0781
  0x0000000002de2d76: movslq %eax,%r8           ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2d79: jmpq   0x0000000002de07cd
  0x0000000002de2d7e: mov    %esi,%r11d
  0x0000000002de2d81: jmpq   0x0000000002de246d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2d86: mov    %r9,%rdi
  0x0000000002de2d89: xor    %rax,%rax
  0x0000000002de2d8c: shl    $0x3,%rcx
  0x0000000002de2d90: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2d93: mov    0x20(%rsp),%rbp
  0x0000000002de2d98: mov    %rbp,%rdx
  0x0000000002de2d9b: xor    %r8d,%r8d
  0x0000000002de2d9e: mov    0x80(%rsp),%r9
  0x0000000002de2da6: xor    %edi,%edi
  0x0000000002de2da8: data16 xchg %ax,%ax
  0x0000000002de2dab: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=18576}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2db0: jmpq   0x0000000002de08c2
  0x0000000002de2db5: mov    %r9,%rdi
  0x0000000002de2db8: xor    %rax,%rax
  0x0000000002de2dbb: shl    $0x3,%rcx
  0x0000000002de2dbf: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2dc2: jmpq   0x0000000002de08c2
  0x0000000002de2dc7: mov    %rdi,0x48(%rsp)
  0x0000000002de2dcc: mov    %r9,0x30(%rsp)
  0x0000000002de2dd1: mov    %r11d,0x24(%rsp)
  0x0000000002de2dd6: mov    %r10d,%ebp         ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2dd9: movabs $0x7c0000208,%rdx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x0000000002de2de3: mov    %r11d,%r8d
  0x0000000002de2de6: mov    0x3c(%rsp),%r11d
  0x0000000002de2deb: mov    %r11d,0x38(%rsp)
  0x0000000002de2df0: data16 xchg %ax,%ax
  0x0000000002de2df3: callq  0x0000000002db36e0  ; OopMap{[64]=Oop [80]=Oop [104]=Oop [112]=Derived_oop_[104] off=18648}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2df8: mov    %ebp,%r10d
  0x0000000002de2dfb: mov    0x24(%rsp),%r11d
  0x0000000002de2e00: mov    0x30(%rsp),%r9
  0x0000000002de2e05: mov    0x48(%rsp),%rdi
  0x0000000002de2e0a: mov    %rax,%rbx
  0x0000000002de2e0d: jmpq   0x0000000002de140a  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2e12: mov    $0xffffff65,%edx   ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2e17: mov    0x40(%rsp),%rbp
  0x0000000002de2e1c: mov    0x4c(%rsp),%r11d
  0x0000000002de2e21: mov    %r11d,0x20(%rsp)
  0x0000000002de2e26: mov    0x3c(%rsp),%r10d
  0x0000000002de2e2b: mov    %r10d,0x24(%rsp)
  0x0000000002de2e30: mov    0x68(%rsp),%r10
  0x0000000002de2e35: mov    %r10,0x48(%rsp)
  0x0000000002de2e3a: nop
  0x0000000002de2e3b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [72]=Oop [80]=Oop [104]=Oop off=18720}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2e40: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2e41: mov    $0xffffff65,%edx   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2e46: mov    0x40(%rsp),%rbp
  0x0000000002de2e4b: mov    %r11d,0x20(%rsp)
  0x0000000002de2e50: mov    0x3c(%rsp),%r11d
  0x0000000002de2e55: mov    %r11d,0x24(%rsp)
  0x0000000002de2e5a: mov    %r13d,0x40(%rsp)
  0x0000000002de2e5f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=18756}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2e64: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2e65: mov    $0xffffff65,%edx   ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2e6a: mov    0x40(%rsp),%r10
  0x0000000002de2e6f: mov    %r10,0x20(%rsp)
  0x0000000002de2e74: mov    0x3c(%rsp),%r10d
  0x0000000002de2e79: mov    %r10d,0x2c(%rsp)
  0x0000000002de2e7e: mov    0x50(%rsp),%r10
  0x0000000002de2e83: mov    %r10,0x38(%rsp)
  0x0000000002de2e88: mov    0x68(%rsp),%r10
  0x0000000002de2e8d: mov    %r10,0x50(%rsp)
  0x0000000002de2e92: nop
  0x0000000002de2e93: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop [104]=Oop off=18808}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2e98: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2e99: mov    $0xffffff65,%edx   ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2e9e: mov    0x40(%rsp),%r8
  0x0000000002de2ea3: mov    %r8,0x20(%rsp)
  0x0000000002de2ea8: mov    %r11d,0x28(%rsp)
  0x0000000002de2ead: mov    0x3c(%rsp),%r11d
  0x0000000002de2eb2: mov    %r11d,0x2c(%rsp)
  0x0000000002de2eb7: mov    %r13d,0x34(%rsp)
  0x0000000002de2ebc: data16 xchg %ax,%ax
  0x0000000002de2ebf: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=18852}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2ec4: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2ec5: mov    $0xffffffe4,%edx   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2eca: mov    0x40(%rsp),%rbp
  0x0000000002de2ecf: mov    %r10d,0x20(%rsp)
  0x0000000002de2ed4: mov    0x3c(%rsp),%r11d
  0x0000000002de2ed9: mov    %r11d,0x28(%rsp)
  0x0000000002de2ede: nop
  0x0000000002de2edf: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=18884}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2ee4: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de2ee5: movslq %esi,%r10          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2ee8: jmpq   0x0000000002de0964  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2eed: mov    %r9,%rdi
  0x0000000002de2ef0: xor    %rax,%rax
  0x0000000002de2ef3: shl    $0x3,%rcx
  0x0000000002de2ef7: rep rex.W stos %al,%es:(%rdi)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2efa: mov    0x68(%rsp),%rbp
  0x0000000002de2eff: mov    %rbp,%rdx
  0x0000000002de2f02: xor    %r8d,%r8d
  0x0000000002de2f05: mov    0x88(%rsp),%r9
  0x0000000002de2f0d: xor    %edi,%edi
  0x0000000002de2f0f: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [136]=Oop off=18932}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2f14: jmpq   0x0000000002de0a5e
  0x0000000002de2f19: mov    %r9,%rdi
  0x0000000002de2f1c: xor    %rax,%rax
  0x0000000002de2f1f: shl    $0x3,%rcx
  0x0000000002de2f23: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2f26: jmpq   0x0000000002de0a5e
  0x0000000002de2f2b: movslq %r9d,%rdi          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2f2e: jmpq   0x0000000002de0b59
  0x0000000002de2f33: mov    %rsi,0x28(%rsp)
  0x0000000002de2f38: mov    %r11d,0x24(%rsp)
  0x0000000002de2f3d: mov    %rbp,%rcx
  0x0000000002de2f40: mov    %rax,%rdi
  0x0000000002de2f43: xor    %rax,%rax
  0x0000000002de2f46: shl    $0x3,%rcx
  0x0000000002de2f4a: rep rex.W stos %al,%es:(%rdi)  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2f4d: mov    %r10,%rdx
  0x0000000002de2f50: xor    %r8d,%r8d
  0x0000000002de2f53: mov    %rsi,%r9
  0x0000000002de2f56: xor    %edi,%edi
  0x0000000002de2f58: mov    %ebx,%esi
  0x0000000002de2f5a: mov    0x50(%rsp),%rbp
  0x0000000002de2f5f: mov    %r10,0x48(%rsp)
  0x0000000002de2f64: data16 xchg %ax,%ax
  0x0000000002de2f67: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [40]=Oop [64]=Oop [72]=Oop [80]=Oop off=19020}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de2f6c: mov    0x24(%rsp),%r11d
  0x0000000002de2f71: mov    0x28(%rsp),%rsi
  0x0000000002de2f76: jmpq   0x0000000002de0c24
  0x0000000002de2f7b: mov    %rbp,%rcx
  0x0000000002de2f7e: mov    %rax,%rdi
  0x0000000002de2f81: xor    %rax,%rax
  0x0000000002de2f84: shl    $0x3,%rcx
  0x0000000002de2f88: rep rex.W stos %al,%es:(%rdi)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2f8b: jmpq   0x0000000002de0c24
  0x0000000002de2f90: movslq %eax,%rbx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2f93: jmpq   0x0000000002de0cbb  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2f98: mov    %rbx,%rdi
  0x0000000002de2f9b: xor    %rax,%rax
  0x0000000002de2f9e: shl    $0x3,%rcx
  0x0000000002de2fa2: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2fa5: mov    0x20(%rsp),%rbp
  0x0000000002de2faa: mov    %rbp,%rdx
  0x0000000002de2fad: xor    %r8d,%r8d
  0x0000000002de2fb0: mov    0x80(%rsp),%r9
  0x0000000002de2fb8: xor    %edi,%edi
  0x0000000002de2fba: nop
  0x0000000002de2fbb: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=19104}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de2fc0: jmpq   0x0000000002de0dab
  0x0000000002de2fc5: mov    %rbx,%rdi
  0x0000000002de2fc8: xor    %rax,%rax
  0x0000000002de2fcb: shl    $0x3,%rcx
  0x0000000002de2fcf: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2fd2: jmpq   0x0000000002de0dab  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de2fd7: mov    $0xffffff65,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de2fdc: mov    0x40(%rsp),%rbp
  0x0000000002de2fe1: mov    %r11d,0x20(%rsp)
  0x0000000002de2fe6: mov    0x3c(%rsp),%r11d
  0x0000000002de2feb: mov    %r11d,0x28(%rsp)
  0x0000000002de2ff0: mov    %r9d,0x40(%rsp)
  0x0000000002de2ff5: mov    %r10,0x48(%rsp)
  0x0000000002de2ffa: nop
  0x0000000002de2ffb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [72]=Oop [80]=Oop off=19168}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de3000: int3                      ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de3001: mov    $0xffffff65,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3006: mov    0x40(%rsp),%r8
  0x0000000002de300b: mov    %r8,0x20(%rsp)
  0x0000000002de3010: mov    %r11d,0x28(%rsp)
  0x0000000002de3015: mov    0x3c(%rsp),%r11d
  0x0000000002de301a: mov    %r11d,0x30(%rsp)
  0x0000000002de301f: mov    %r9d,0x34(%rsp)
  0x0000000002de3024: mov    %r10,0x48(%rsp)
  0x0000000002de3029: xchg   %ax,%ax
  0x0000000002de302b: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=19216}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de3030: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x0000000002de3031: movslq 0x78(%rsp),%r11
  0x0000000002de3036: jmpq   0x0000000002de0eda
  0x0000000002de303b: movslq %r13d,%r9          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de303e: jmpq   0x0000000002de1005  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3043: mov    %rbx,0x28(%rsp)
  0x0000000002de3048: mov    %r10d,%ebp
  0x0000000002de304b: xor    %rax,%rax
  0x0000000002de304e: shl    $0x3,%rcx
  0x0000000002de3052: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3055: mov    0x68(%rsp),%rdx
  0x0000000002de305a: xor    %r8d,%r8d
  0x0000000002de305d: mov    %rbx,%r9
  0x0000000002de3060: xor    %edi,%edi
  0x0000000002de3062: nop
  0x0000000002de3063: callq  0x0000000002db3b60  ; OopMap{[40]=Oop [64]=Oop [80]=Oop [104]=Oop off=19272}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de3068: mov    %ebp,%r10d
  0x0000000002de306b: mov    0x28(%rsp),%rbx
  0x0000000002de3070: jmpq   0x0000000002de0faf  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3075: mov    %rdx,0x30(%rsp)
  0x0000000002de307a: mov    %r13d,0x28(%rsp)
  0x0000000002de307f: mov    %rbx,%r11
  0x0000000002de3082: mov    %r8,%rbx
  0x0000000002de3085: mov    %r10d,0x24(%rsp)
  0x0000000002de308a: mov    %rbp,%rdi
  0x0000000002de308d: xor    %rax,%rax
  0x0000000002de3090: shl    $0x3,%rcx
  0x0000000002de3094: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3097: mov    %r11,%rdx
  0x0000000002de309a: xor    %r8d,%r8d
  0x0000000002de309d: mov    0x30(%rsp),%r9
  0x0000000002de30a2: xor    %edi,%edi
  0x0000000002de30a4: mov    0x50(%rsp),%r10
  0x0000000002de30a9: mov    %r10,%rbp
  0x0000000002de30ac: mov    %rbx,0x48(%rsp)
  0x0000000002de30b1: xchg   %ax,%ax
  0x0000000002de30b3: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Oop off=19352}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de30b8: mov    0x24(%rsp),%r10d
  0x0000000002de30bd: mov    0x28(%rsp),%r13d
  0x0000000002de30c2: mov    0x30(%rsp),%rdx
  0x0000000002de30c7: jmpq   0x0000000002de10e0
  0x0000000002de30cc: xor    %rax,%rax
  0x0000000002de30cf: shl    $0x3,%rcx
  0x0000000002de30d3: rep rex.W stos %al,%es:(%rdi)
  0x0000000002de30d6: jmpq   0x0000000002de0faf
  0x0000000002de30db: mov    %rbp,%rdi
  0x0000000002de30de: xor    %rax,%rax
  0x0000000002de30e1: shl    $0x3,%rcx
  0x0000000002de30e5: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de30e8: jmpq   0x0000000002de10e0  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de30ed: mov    $0xffffff65,%edx   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de30f2: mov    0x40(%rsp),%rbp
  0x0000000002de30f7: mov    0x4c(%rsp),%r11d
  0x0000000002de30fc: mov    %r11d,0x20(%rsp)
  0x0000000002de3101: mov    0x3c(%rsp),%r10d
  0x0000000002de3106: mov    %r10d,0x24(%rsp)
  0x0000000002de310b: mov    0x68(%rsp),%r10
  0x0000000002de3110: mov    %r10,0x48(%rsp)
  0x0000000002de3115: xchg   %ax,%ax
  0x0000000002de3117: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [72]=Oop [80]=Oop [104]=Oop off=19452}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de311c: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de311d: mov    $0xffffff65,%edx   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3122: mov    0x40(%rsp),%rbp
  0x0000000002de3127: mov    %r10d,0x20(%rsp)
  0x0000000002de312c: mov    0x3c(%rsp),%r10d
  0x0000000002de3131: mov    %r10d,0x24(%rsp)
  0x0000000002de3136: mov    %r13d,0x40(%rsp)
  0x0000000002de313b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=19488}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de3140: int3                      ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalizePrefix@62 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de3141: mov    $0xffffff65,%edx   ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3146: mov    0x40(%rsp),%r10
  0x0000000002de314b: mov    %r10,0x20(%rsp)
  0x0000000002de3150: mov    0x3c(%rsp),%r10d
  0x0000000002de3155: mov    %r10d,0x2c(%rsp)
  0x0000000002de315a: mov    0x50(%rsp),%r10
  0x0000000002de315f: mov    %r10,0x38(%rsp)
  0x0000000002de3164: mov    0x68(%rsp),%r10
  0x0000000002de3169: mov    %r10,0x50(%rsp)
  0x0000000002de316e: nop
  0x0000000002de316f: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop [104]=Oop off=19540}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de3174: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de3175: mov    $0xffffff65,%edx   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de317a: mov    0x40(%rsp),%r11
  0x0000000002de317f: mov    %r11,0x20(%rsp)
  0x0000000002de3184: mov    %r10d,0x28(%rsp)
  0x0000000002de3189: mov    0x3c(%rsp),%r10d
  0x0000000002de318e: mov    %r10d,0x2c(%rsp)
  0x0000000002de3193: mov    %r13d,0x34(%rsp)
  0x0000000002de3198: data16 xchg %ax,%ax
  0x0000000002de319b: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=19584}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de31a0: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x0000000002de31a1: movslq %r11d,%r9          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de31a4: jmpq   0x0000000002de13a5  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de31a9: mov    %rbx,0x30(%rsp)
  0x0000000002de31ae: mov    %r10d,%ebp
  0x0000000002de31b1: mov    %rdx,%rdi
  0x0000000002de31b4: xor    %rax,%rax
  0x0000000002de31b7: shl    $0x3,%rcx
  0x0000000002de31bb: rep rex.W stos %al,%es:(%rdi)  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de31be: mov    0x68(%rsp),%rdx
  0x0000000002de31c3: xor    %r8d,%r8d
  0x0000000002de31c6: mov    %rbx,%r9
  0x0000000002de31c9: xor    %edi,%edi
  0x0000000002de31cb: mov    0x3c(%rsp),%r11d
  0x0000000002de31d0: mov    %r11d,0x28(%rsp)
  0x0000000002de31d5: xchg   %ax,%ax
  0x0000000002de31d7: callq  0x0000000002db3b60  ; OopMap{[48]=Oop [64]=Oop [80]=Oop [104]=Oop off=19644}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de31dc: mov    %ebp,%r10d
  0x0000000002de31df: mov    0x30(%rsp),%rbx
  0x0000000002de31e4: jmpq   0x0000000002de1472
  0x0000000002de31e9: mov    %rdx,%rdi
  0x0000000002de31ec: xor    %rax,%rax
  0x0000000002de31ef: shl    $0x3,%rcx
  0x0000000002de31f3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de31f6: jmpq   0x0000000002de1472  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de31fb: mov    $0xffffff65,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3200: mov    0x40(%rsp),%rbp
  0x0000000002de3205: mov    %r10d,0x20(%rsp)
  0x0000000002de320a: mov    0x3c(%rsp),%r8d
  0x0000000002de320f: mov    %r8d,0x28(%rsp)
  0x0000000002de3214: mov    0x68(%rsp),%r10
  0x0000000002de3219: mov    %r11d,0x40(%rsp)
  0x0000000002de321e: mov    %r10,0x48(%rsp)
  0x0000000002de3223: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [72]=Oop [80]=Oop [104]=Oop off=19720}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de3228: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de3229: mov    $0xffffff65,%edx   ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de322e: mov    0x40(%rsp),%r8
  0x0000000002de3233: mov    %r8,0x20(%rsp)
  0x0000000002de3238: mov    %r10d,0x28(%rsp)
  0x0000000002de323d: mov    0x3c(%rsp),%r8d
  0x0000000002de3242: mov    %r8d,0x30(%rsp)
  0x0000000002de3247: mov    0x68(%rsp),%r10
  0x0000000002de324c: mov    %r11d,0x34(%rsp)
  0x0000000002de3251: mov    %r10,0x48(%rsp)
  0x0000000002de3256: nop
  0x0000000002de3257: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop [104]=Oop off=19772}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de325c: int3                      ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de325d: mov    $0xfffffff6,%edx
  0x0000000002de3262: nop
  0x0000000002de3263: callq  0x0000000002cf57a0  ; OopMap{off=19784}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de3268: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de3269: mov    $0xfffffff6,%edx   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de326e: nop
  0x0000000002de326f: callq  0x0000000002cf57a0  ; OopMap{off=19796}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x0000000002de3274: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x0000000002de3275: mov    $0xfffffff6,%edx
  0x0000000002de327a: nop
  0x0000000002de327b: callq  0x0000000002cf57a0  ; OopMap{off=19808}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000002de3280: int3   
  0x0000000002de3281: mov    $0xfffffff6,%edx
  0x0000000002de3286: nop
  0x0000000002de3287: callq  0x0000000002cf57a0  ; OopMap{off=19820}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x0000000002de328c: int3   
  0x0000000002de328d: jmp    0x0000000002de32dd
  0x0000000002de328f: jmp    0x0000000002de32dd  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3291: jmp    0x0000000002de32dd  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de3293: jmp    0x0000000002de32dd  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3295: jmp    0x0000000002de32e2  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de3297: jmp    0x0000000002de32dd  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de3299: jmp    0x0000000002de32dd  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de329b: jmp    0x0000000002de32dd
  0x0000000002de329d: jmp    0x0000000002de32e2  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de329f: jmp    0x0000000002de32e2  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32a1: jmp    0x0000000002de32dd  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32a3: jmp    0x0000000002de32e2
  0x0000000002de32a5: jmp    0x0000000002de32dd  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de32a7: jmp    0x0000000002de32dd  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32a9: jmp    0x0000000002de32e2  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32ab: jmp    0x0000000002de32dd  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de32ad: jmp    0x0000000002de32e2  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32af: jmp    0x0000000002de32dd  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32b1: jmp    0x0000000002de32dd  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32b3: jmp    0x0000000002de32e2  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32b5: jmp    0x0000000002de32e2  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32b7: jmp    0x0000000002de32dd  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de32b9: jmp    0x0000000002de32e2  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x0000000002de32bb: jmp    0x0000000002de32e2
  0x0000000002de32bd: jmp    0x0000000002de32dd  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32bf: jmp    0x0000000002de32dd  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32c1: jmp    0x0000000002de32e2  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32c3: jmp    0x0000000002de32e2  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32c5: jmp    0x0000000002de32e2  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32c7: jmp    0x0000000002de32dd  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32c9: jmp    0x0000000002de32e2
  0x0000000002de32cb: jmp    0x0000000002de32e2  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32cd: jmp    0x0000000002de32e2  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32cf: jmp    0x0000000002de32dd  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32d1: jmp    0x0000000002de32dd  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32d3: jmp    0x0000000002de32dd  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32d5: jmp    0x0000000002de32e2  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32d7: jmp    0x0000000002de32e2  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32d9: jmp    0x0000000002de32e2  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32db: jmp    0x0000000002de32e2
  0x0000000002de32dd: mov    %rax,%rdx
  0x0000000002de32e0: jmp    0x0000000002de32e5  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32e2: mov    %rax,%rdx          ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x0000000002de32e5: add    $0xb0,%rsp
  0x0000000002de32ec: pop    %rbp
  0x0000000002de32ed: jmpq   0x0000000002db3c20  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x0000000002de32f2: hlt    
  0x0000000002de32f3: hlt    
  0x0000000002de32f4: hlt    
  0x0000000002de32f5: hlt    
  0x0000000002de32f6: hlt    
  0x0000000002de32f7: hlt    
  0x0000000002de32f8: hlt    
  0x0000000002de32f9: hlt    
  0x0000000002de32fa: hlt    
  0x0000000002de32fb: hlt    
  0x0000000002de32fc: hlt    
  0x0000000002de32fd: hlt    
  0x0000000002de32fe: hlt    
  0x0000000002de32ff: hlt    
[Stub Code]
  0x0000000002de3300: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002de330a: jmpq   0x0000000002de330a  ;   {runtime_call}
  0x0000000002de330f: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002de3319: jmpq   0x0000000002de3319  ;   {runtime_call}
[Exception Handler]
  0x0000000002de331e: jmpq   0x0000000002dad0e0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002de3323: callq  0x0000000002de3328
  0x0000000002de3328: subq   $0x5,(%rsp)
  0x0000000002de332d: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002de3332: hlt    
  0x0000000002de3333: hlt    
  0x0000000002de3334: hlt    
  0x0000000002de3335: hlt    
  0x0000000002de3336: hlt    
  0x0000000002de3337: hlt    
<nmethod compile_id='4' compiler='C2' level='4' entry='0x0000000002dde520' size='57472' address='0x0000000002dde250' relocation_offset='288' insts_offset='720' stub_offset='20656' scopes_data_offset='20872' scopes_pcs_offset='36784' dependencies_offset='56384' handler_table_offset='56392' nul_chk_table_offset='57400' oops_offset='20712' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='1510' backedge_count='48460' iicount='1510' stamp='1.326'/>
<writer thread='8664'/>
<task_queued compile_id='64' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='256' iicount='256' level='3' stamp='1.392' comment='tiered' hot_count='256'/>
<task_queued compile_id='65' method='java/io/BufferedInputStream read ()I' bytes='49' count='256' iicount='256' level='3' stamp='1.392' comment='tiered' hot_count='256'/>
<task_queued compile_id='66' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='183' backedge_count='3072' iicount='183' level='3' stamp='1.392' comment='tiered' hot_count='183'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dd1350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dd14c0: mov    0x8(%rdx),%r10d
  0x0000000002dd14c4: shl    $0x3,%r10
  0x0000000002dd14c8: cmp    %rax,%r10
  0x0000000002dd14cb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd14d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd14dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd14e0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd14e7: push   %rbp
  0x0000000002dd14e8: sub    $0x30,%rsp
  0x0000000002dd14ec: movabs $0x1bfaa748,%rax   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd14f6: mov    0xdc(%rax),%esi
  0x0000000002dd14fc: add    $0x8,%esi
  0x0000000002dd14ff: mov    %esi,0xdc(%rax)
  0x0000000002dd1505: movabs $0x1bdbfec8,%rax   ;   {metadata({method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd150f: and    $0x1ff8,%esi
  0x0000000002dd1515: cmp    $0x0,%esi
  0x0000000002dd1518: je     0x0000000002dd15ee  ;*aload_0
                                                ; - java.io.BufferedInputStream::getBufIfOpen@0 (line 168)

  0x0000000002dd151e: mov    0x20(%rdx),%eax
  0x0000000002dd1521: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x0000000002dd1525: cmp    $0x0,%rax
  0x0000000002dd1529: movabs $0x1bfaa748,%rdx   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd1533: movabs $0x108,%rsi
  0x0000000002dd153d: jne    0x0000000002dd154d
  0x0000000002dd1543: movabs $0x118,%rsi
  0x0000000002dd154d: mov    (%rdx,%rsi,1),%rdi
  0x0000000002dd1551: lea    0x1(%rdi),%rdi
  0x0000000002dd1555: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002dd1559: je     0x0000000002dd156b  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x0000000002dd155f: add    $0x30,%rsp
  0x0000000002dd1563: pop    %rbp
  0x0000000002dd1564: test   %eax,-0x21d146a(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd156a: retq                      ;*areturn
                                                ; - java.io.BufferedInputStream::getBufIfOpen@20 (line 171)

  0x0000000002dd156b: nopl   0x0(%rax,%rax,1)
  0x0000000002dd1570: jmpq   0x0000000002dd1614  ;   {no_reloc}
  0x0000000002dd1575: add    %al,(%rax)
  0x0000000002dd1577: add    %al,(%rax)
  0x0000000002dd1579: add    %cl,-0x75(%rcx)
  0x0000000002dd157c: rex.RXB (bad) 
  0x0000000002dd157e: lea    0x20(%rax),%rdi
  0x0000000002dd1582: cmp    0x70(%r15),%rdi
  0x0000000002dd1586: ja     0x0000000002dd161e
  0x0000000002dd158c: mov    %rdi,0x60(%r15)
  0x0000000002dd1590: mov    0xa8(%rdx),%rcx
  0x0000000002dd1597: mov    %rcx,(%rax)
  0x0000000002dd159a: mov    %rdx,%rcx
  0x0000000002dd159d: shr    $0x3,%rcx
  0x0000000002dd15a1: mov    %ecx,0x8(%rax)
  0x0000000002dd15a4: xor    %rcx,%rcx
  0x0000000002dd15a7: mov    %ecx,0xc(%rax)
  0x0000000002dd15aa: xor    %rcx,%rcx
  0x0000000002dd15ad: mov    %rcx,0x10(%rax)
  0x0000000002dd15b1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)

  0x0000000002dd15b5: mov    %rax,%r8
  0x0000000002dd15b8: movabs $0x1bfaa748,%rdx   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd15c2: addq   $0x1,0x128(%rdx)
  0x0000000002dd15ca: movabs $0x76bf1f008,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002dd15d4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)

  0x0000000002dd15d7: mov    %rax,0x20(%rsp)
  0x0000000002dd15dc: nop
  0x0000000002dd15dd: nop
  0x0000000002dd15de: nop
  0x0000000002dd15df: callq  0x0000000002cf61a0  ; OopMap{[32]=Oop off=292}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ;   {optimized virtual_call}
  0x0000000002dd15e4: mov    0x20(%rsp),%rax
  0x0000000002dd15e9: jmpq   0x0000000002dd1653
  0x0000000002dd15ee: mov    %rax,0x8(%rsp)
  0x0000000002dd15f3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd15fb: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=320}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ;   {runtime_call}
  0x0000000002dd1600: jmpq   0x0000000002dd151e
  0x0000000002dd1605: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd160f: mov    $0xa050f00,%eax
  0x0000000002dd1614: callq  0x0000000002db0ca0  ; OopMap{off=345}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x0000000002dd1619: jmpq   0x0000000002dd1570
  0x0000000002dd161e: mov    %rdx,%rdx
  0x0000000002dd1621: callq  0x0000000002dade00  ; OopMap{off=358}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x0000000002dd1626: jmp    0x0000000002dd15b5
  0x0000000002dd1628: nop
  0x0000000002dd1629: nop
  0x0000000002dd162a: mov    0x2a8(%r15),%rax
  0x0000000002dd1631: movabs $0x0,%r10
  0x0000000002dd163b: mov    %r10,0x2a8(%r15)
  0x0000000002dd1642: movabs $0x0,%r10
  0x0000000002dd164c: mov    %r10,0x2b0(%r15)
  0x0000000002dd1653: add    $0x30,%rsp
  0x0000000002dd1657: pop    %rbp
  0x0000000002dd1658: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd165d: hlt    
  0x0000000002dd165e: hlt    
  0x0000000002dd165f: hlt    
[Stub Code]
  0x0000000002dd1660: nop                       ;   {no_reloc}
  0x0000000002dd1661: nop
  0x0000000002dd1662: nop
  0x0000000002dd1663: nop
  0x0000000002dd1664: nop
  0x0000000002dd1665: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd166f: jmpq   0x0000000002dd166f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dd1674: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dd1679: mov    %rsp,-0x28(%rsp)
  0x0000000002dd167e: sub    $0x80,%rsp
  0x0000000002dd1685: mov    %rax,0x78(%rsp)
  0x0000000002dd168a: mov    %rcx,0x70(%rsp)
  0x0000000002dd168f: mov    %rdx,0x68(%rsp)
  0x0000000002dd1694: mov    %rbx,0x60(%rsp)
  0x0000000002dd1699: mov    %rbp,0x50(%rsp)
  0x0000000002dd169e: mov    %rsi,0x48(%rsp)
  0x0000000002dd16a3: mov    %rdi,0x40(%rsp)
  0x0000000002dd16a8: mov    %r8,0x38(%rsp)
  0x0000000002dd16ad: mov    %r9,0x30(%rsp)
  0x0000000002dd16b2: mov    %r10,0x28(%rsp)
  0x0000000002dd16b7: mov    %r11,0x20(%rsp)
  0x0000000002dd16bc: mov    %r12,0x18(%rsp)
  0x0000000002dd16c1: mov    %r13,0x10(%rsp)
  0x0000000002dd16c6: mov    %r14,0x8(%rsp)
  0x0000000002dd16cb: mov    %r15,(%rsp)
  0x0000000002dd16cf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd16d9: movabs $0x2dd1679,%rdx    ;   {internal_word}
  0x0000000002dd16e3: mov    %rsp,%r8
  0x0000000002dd16e6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd16ea: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd16ef: hlt    
[Deopt Handler Code]
  0x0000000002dd16f0: movabs $0x2dd16f0,%r10    ;   {section_word}
  0x0000000002dd16fa: push   %r10
  0x0000000002dd16fc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd1701: hlt    
  0x0000000002dd1702: hlt    
  0x0000000002dd1703: hlt    
  0x0000000002dd1704: hlt    
  0x0000000002dd1705: hlt    
  0x0000000002dd1706: hlt    
  0x0000000002dd1707: hlt    
<nmethod compile_id='64' compiler='C1' level='3' entry='0x0000000002dd14c0' size='1232' address='0x0000000002dd1350' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1032' dependencies_offset='1224' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='1526' iicount='1526' stamp='1.395'/>
<writer thread='8664'/>
<task_queued compile_id='67' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='384' iicount='384' level='3' stamp='1.395' comment='tiered' hot_count='384'/>
<task_queued compile_id='68' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='384' iicount='384' level='3' stamp='1.395' comment='tiered' hot_count='384'/>
<task_queued compile_id='69' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='384' iicount='384' level='3' stamp='1.395' comment='tiered' hot_count='384'/>
<task_queued compile_id='70' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='512' backedge_count='511' iicount='512' level='3' stamp='1.396' comment='tiered' hot_count='512'/>
<task_queued compile_id='71' method='java/io/DataInputStream readShort ()S' bytes='40' count='512' iicount='512' level='3' stamp='1.397' comment='tiered' hot_count='512'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dda6d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;
  # parm0:    rdx:rdx   = &apos;java/io/DataInput&apos;
  #           [sp+0x110]  (sp of caller)
  0x0000000002ddaaa0: mov    %eax,-0x6000(%rsp)
  0x0000000002ddaaa7: push   %rbp
  0x0000000002ddaaa8: sub    $0x100,%rsp
  0x0000000002ddaaaf: movabs $0x1bfaa9d0,%rsi   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddaab9: mov    0xdc(%rsi),%edi
  0x0000000002ddaabf: add    $0x8,%edi
  0x0000000002ddaac2: mov    %edi,0xdc(%rsi)
  0x0000000002ddaac8: movabs $0x1bfaa190,%rsi   ;   {metadata({method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddaad2: and    $0x1ff8,%edi
  0x0000000002ddaad8: cmp    $0x0,%edi
  0x0000000002ddaadb: je     0x0000000002ddc649  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 589)

  0x0000000002ddaae1: cmp    $0x0,%rdx
  0x0000000002ddaae5: je     0x0000000002ddab0b
  0x0000000002ddaaeb: movabs $0x7c0065b80,%rax  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x0000000002ddaaf5: mov    0x8(%rdx),%ebx
  0x0000000002ddaaf8: shl    $0x3,%rbx
  0x0000000002ddaafc: cmp    0x40(%rbx),%rax
  0x0000000002ddab00: jne    0x0000000002ddc660
  0x0000000002ddab06: jmpq   0x0000000002ddab0b
  0x0000000002ddab0b: mov    %rdx,%rsi
  0x0000000002ddab0e: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002ddc665
  0x0000000002ddab11: mov    %rdx,%rsi
  0x0000000002ddab14: movabs $0x1bfaa9d0,%rdi   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddab1e: addq   $0x1,0x118(%rdi)
  0x0000000002ddab26: mov    %rdx,%rsi
  0x0000000002ddab29: mov    %rsi,%rdx          ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)

  0x0000000002ddab2c: mov    %rsi,0x68(%rsp)
  0x0000000002ddab31: nop
  0x0000000002ddab32: nop
  0x0000000002ddab33: nop
  0x0000000002ddab34: nop
  0x0000000002ddab35: nop
  0x0000000002ddab36: nop
  0x0000000002ddab37: callq  0x0000000002cf61a0  ; OopMap{[104]=Oop off=156}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {optimized virtual_call}
  0x0000000002ddab3c: mov    0x68(%rsp),%r11
  0x0000000002ddab41: cmp    $0x0,%r11
  0x0000000002ddab45: jne    0x0000000002ddab60
  0x0000000002ddab47: movabs $0x1bfaa9d0,%rsi   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddab51: orl    $0x100,0x130(%rsi)
  0x0000000002ddab5b: jmpq   0x0000000002ddac22
  0x0000000002ddab60: movabs $0x7c0065b80,%rdi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x0000000002ddab6a: mov    0x8(%r11),%edx
  0x0000000002ddab6e: shl    $0x3,%rdx
  0x0000000002ddab72: cmp    %rdx,%rdi
  0x0000000002ddab75: jne    0x0000000002ddac06
  0x0000000002ddab7b: movabs $0x1bfaa9d0,%rsi   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddab85: mov    0x8(%r11),%edi
  0x0000000002ddab89: shl    $0x3,%rdi
  0x0000000002ddab8d: cmp    0x140(%rsi),%rdi
  0x0000000002ddab94: jne    0x0000000002ddaba3
  0x0000000002ddab96: addq   $0x1,0x148(%rsi)
  0x0000000002ddab9e: jmpq   0x0000000002ddac27
  0x0000000002ddaba3: cmp    0x150(%rsi),%rdi
  0x0000000002ddabaa: jne    0x0000000002ddabb9
  0x0000000002ddabac: addq   $0x1,0x158(%rsi)
  0x0000000002ddabb4: jmpq   0x0000000002ddac27
  0x0000000002ddabb9: cmpq   $0x0,0x140(%rsi)
  0x0000000002ddabc4: jne    0x0000000002ddabdd
  0x0000000002ddabc6: mov    %rdi,0x140(%rsi)
  0x0000000002ddabcd: movq   $0x1,0x148(%rsi)
  0x0000000002ddabd8: jmpq   0x0000000002ddac27
  0x0000000002ddabdd: cmpq   $0x0,0x150(%rsi)
  0x0000000002ddabe8: jne    0x0000000002ddac01
  0x0000000002ddabea: mov    %rdi,0x150(%rsi)
  0x0000000002ddabf1: movq   $0x1,0x158(%rsi)
  0x0000000002ddabfc: jmpq   0x0000000002ddac27
  0x0000000002ddac01: jmpq   0x0000000002ddac27
  0x0000000002ddac06: movabs $0x1bfaa9d0,%rsi   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddac10: subq   $0x1,0x138(%rsi)
  0x0000000002ddac18: jmpq   0x0000000002ddac22
  0x0000000002ddac1d: jmpq   0x0000000002ddac27
  0x0000000002ddac22: xor    %rbx,%rbx
  0x0000000002ddac25: jmp    0x0000000002ddac31
  0x0000000002ddac27: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.io.DataInputStream::readUTF@12 (line 592)

  0x0000000002ddac31: cmp    $0x0,%ebx
  0x0000000002ddac34: movabs $0x1bfaa9d0,%rbx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddac3e: movabs $0x168,%rdx
  0x0000000002ddac48: je     0x0000000002ddac58
  0x0000000002ddac4e: movabs $0x178,%rdx
  0x0000000002ddac58: mov    (%rbx,%rdx,1),%rsi
  0x0000000002ddac5c: lea    0x1(%rsi),%rsi
  0x0000000002ddac60: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002ddac64: je     0x0000000002ddaef3  ;*ifeq
                                                ; - java.io.DataInputStream::readUTF@15 (line 592)

  0x0000000002ddac6a: cmp    $0x0,%r11
  0x0000000002ddac6e: jne    0x0000000002ddac89
  0x0000000002ddac70: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddac7a: orl    $0x100,0x180(%rdx)
  0x0000000002ddac84: jmpq   0x0000000002ddad4b
  0x0000000002ddac89: movabs $0x7c0065b80,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x0000000002ddac93: mov    0x8(%r11),%ebx
  0x0000000002ddac97: shl    $0x3,%rbx
  0x0000000002ddac9b: cmp    %rbx,%rsi
  0x0000000002ddac9e: jne    0x0000000002ddad2f
  0x0000000002ddaca4: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddacae: mov    0x8(%r11),%esi
  0x0000000002ddacb2: shl    $0x3,%rsi
  0x0000000002ddacb6: cmp    0x190(%rdx),%rsi
  0x0000000002ddacbd: jne    0x0000000002ddaccc
  0x0000000002ddacbf: addq   $0x1,0x198(%rdx)
  0x0000000002ddacc7: jmpq   0x0000000002ddad4b
  0x0000000002ddaccc: cmp    0x1a0(%rdx),%rsi
  0x0000000002ddacd3: jne    0x0000000002ddace2
  0x0000000002ddacd5: addq   $0x1,0x1a8(%rdx)
  0x0000000002ddacdd: jmpq   0x0000000002ddad4b
  0x0000000002ddace2: cmpq   $0x0,0x190(%rdx)
  0x0000000002ddaced: jne    0x0000000002ddad06
  0x0000000002ddacef: mov    %rsi,0x190(%rdx)
  0x0000000002ddacf6: movq   $0x1,0x198(%rdx)
  0x0000000002ddad01: jmpq   0x0000000002ddad4b
  0x0000000002ddad06: cmpq   $0x0,0x1a0(%rdx)
  0x0000000002ddad11: jne    0x0000000002ddad2a
  0x0000000002ddad13: mov    %rsi,0x1a0(%rdx)
  0x0000000002ddad1a: movq   $0x1,0x1a8(%rdx)
  0x0000000002ddad25: jmpq   0x0000000002ddad4b
  0x0000000002ddad2a: jmpq   0x0000000002ddad4b
  0x0000000002ddad2f: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddad39: subq   $0x1,0x188(%rdx)
  0x0000000002ddad41: jmpq   0x0000000002ddc66a
  0x0000000002ddad46: jmpq   0x0000000002ddad4b
  0x0000000002ddad4b: mov    %r11,%r8           ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)

  0x0000000002ddad4e: mov    0x10(%r8),%ebx     ; implicit exception: dispatches to 0x0000000002ddc673
  0x0000000002ddad52: shl    $0x3,%rbx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)

  0x0000000002ddad56: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ; implicit exception: dispatches to 0x0000000002ddc678
  0x0000000002ddad59: cmp    %eax,%ebx
  0x0000000002ddad5b: movabs $0x1bfaa9d0,%rbx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddad65: movabs $0x1b8,%rdx
  0x0000000002ddad6f: jge    0x0000000002ddad7f
  0x0000000002ddad75: movabs $0x1c8,%rdx
  0x0000000002ddad7f: mov    (%rbx,%rdx,1),%rsi
  0x0000000002ddad83: lea    0x1(%rsi),%rsi
  0x0000000002ddad87: mov    %rsi,(%rbx,%rdx,1)
  0x0000000002ddad8b: jl     0x0000000002ddad99  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@31 (line 594)

  0x0000000002ddad91: mov    %rax,%r13
  0x0000000002ddad94: jmpq   0x0000000002ddaece  ;*aload
                                                ; - java.io.DataInputStream::readUTF@54 (line 598)

  0x0000000002ddad99: mov    %rax,%r9
  0x0000000002ddad9c: shl    %r9d
  0x0000000002ddad9f: mov    %r9,%rbx
  0x0000000002ddada2: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x0000000002ddadac: mov    %rax,%r13
  0x0000000002ddadaf: movslq %ebx,%rbx
  0x0000000002ddadb2: mov    %rbx,%rdi
  0x0000000002ddadb5: cmp    $0xffffff,%rbx
  0x0000000002ddadbc: ja     0x0000000002ddc67d
  0x0000000002ddadc2: movabs $0x17,%rsi
  0x0000000002ddadcc: lea    (%rsi,%rbx,1),%rsi
  0x0000000002ddadd0: and    $0xfffffffffffffff8,%rsi
  0x0000000002ddadd4: mov    0x60(%r15),%rax
  0x0000000002ddadd8: lea    (%rax,%rsi,1),%rsi
  0x0000000002ddaddc: cmp    0x70(%r15),%rsi
  0x0000000002ddade0: ja     0x0000000002ddc67d
  0x0000000002ddade6: mov    %rsi,0x60(%r15)
  0x0000000002ddadea: sub    %rax,%rsi
  0x0000000002ddaded: movq   $0x1,(%rax)
  0x0000000002ddadf4: mov    %rdx,%rcx
  0x0000000002ddadf7: shr    $0x3,%rcx
  0x0000000002ddadfb: mov    %ecx,0x8(%rax)
  0x0000000002ddadfe: mov    %ebx,0xc(%rax)
  0x0000000002ddae01: sub    $0x10,%rsi
  0x0000000002ddae05: je     0x0000000002ddae1c
  0x0000000002ddae0b: xor    %rbx,%rbx
  0x0000000002ddae0e: shr    $0x3,%rsi
  0x0000000002ddae12: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002ddae17: dec    %rsi
  0x0000000002ddae1a: jne    0x0000000002ddae12  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)

  0x0000000002ddae1c: mov    %rax,%r10
  0x0000000002ddae1f: shr    $0x3,%r10
  0x0000000002ddae23: mov    %r10d,0x10(%r8)
  0x0000000002ddae27: mov    %r8,%rbx
  0x0000000002ddae2a: shr    $0x9,%rbx
  0x0000000002ddae2e: movabs $0xea5d000,%r14
  0x0000000002ddae38: movb   $0x0,(%rbx,%r14,1)  ;*putfield bytearr
                                                ; - java.io.DataInputStream::readUTF@41 (line 595)

  0x0000000002ddae3d: mov    %r9,%rbx
  0x0000000002ddae40: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002ddae4a: movslq %ebx,%rbx
  0x0000000002ddae4d: mov    %rbx,%rdi
  0x0000000002ddae50: cmp    $0xffffff,%rbx
  0x0000000002ddae57: ja     0x0000000002ddc687
  0x0000000002ddae5d: movabs $0x17,%rsi
  0x0000000002ddae67: lea    (%rsi,%rbx,2),%rsi
  0x0000000002ddae6b: and    $0xfffffffffffffff8,%rsi
  0x0000000002ddae6f: mov    0x60(%r15),%rax
  0x0000000002ddae73: lea    (%rax,%rsi,1),%rsi
  0x0000000002ddae77: cmp    0x70(%r15),%rsi
  0x0000000002ddae7b: ja     0x0000000002ddc687
  0x0000000002ddae81: mov    %rsi,0x60(%r15)
  0x0000000002ddae85: sub    %rax,%rsi
  0x0000000002ddae88: movq   $0x1,(%rax)
  0x0000000002ddae8f: mov    %rdx,%rcx
  0x0000000002ddae92: shr    $0x3,%rcx
  0x0000000002ddae96: mov    %ecx,0x8(%rax)
  0x0000000002ddae99: mov    %ebx,0xc(%rax)
  0x0000000002ddae9c: sub    $0x10,%rsi
  0x0000000002ddaea0: je     0x0000000002ddaeb7
  0x0000000002ddaea6: xor    %rbx,%rbx
  0x0000000002ddaea9: shr    $0x3,%rsi
  0x0000000002ddaead: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002ddaeb2: dec    %rsi
  0x0000000002ddaeb5: jne    0x0000000002ddaead  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)

  0x0000000002ddaeb7: mov    %rax,%r10
  0x0000000002ddaeba: shr    $0x3,%r10
  0x0000000002ddaebe: mov    %r10d,0x14(%r8)
  0x0000000002ddaec2: mov    %r8,%rbx
  0x0000000002ddaec5: shr    $0x9,%rbx
  0x0000000002ddaec9: movb   $0x0,(%rbx,%r14,1)  ;*putfield chararr
                                                ; - java.io.DataInputStream::readUTF@51 (line 596)

  0x0000000002ddaece: mov    0x14(%r8),%ebx
  0x0000000002ddaed2: shl    $0x3,%rbx          ;*getfield chararr
                                                ; - java.io.DataInputStream::readUTF@56 (line 598)

  0x0000000002ddaed6: mov    0x10(%r8),%edx
  0x0000000002ddaeda: shl    $0x3,%rdx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@62 (line 599)

  0x0000000002ddaede: movabs $0x1bfaa9d0,%rsi   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddaee8: incl   0x1d8(%rsi)
  0x0000000002ddaeee: jmpq   0x0000000002ddaff3  ;*goto
                                                ; - java.io.DataInputStream::readUTF@66 (line 600)

  0x0000000002ddaef3: mov    %rax,%r13
  0x0000000002ddaef6: mov    %r13,%rbx
  0x0000000002ddaef9: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x0000000002ddaf03: movslq %ebx,%rbx
  0x0000000002ddaf06: mov    %rbx,%rdi
  0x0000000002ddaf09: cmp    $0xffffff,%rbx
  0x0000000002ddaf10: ja     0x0000000002ddc691
  0x0000000002ddaf16: movabs $0x17,%rsi
  0x0000000002ddaf20: lea    (%rsi,%rbx,1),%rsi
  0x0000000002ddaf24: and    $0xfffffffffffffff8,%rsi
  0x0000000002ddaf28: mov    0x60(%r15),%rax
  0x0000000002ddaf2c: lea    (%rax,%rsi,1),%rsi
  0x0000000002ddaf30: cmp    0x70(%r15),%rsi
  0x0000000002ddaf34: ja     0x0000000002ddc691
  0x0000000002ddaf3a: mov    %rsi,0x60(%r15)
  0x0000000002ddaf3e: sub    %rax,%rsi
  0x0000000002ddaf41: movq   $0x1,(%rax)
  0x0000000002ddaf48: mov    %rdx,%rcx
  0x0000000002ddaf4b: shr    $0x3,%rcx
  0x0000000002ddaf4f: mov    %ecx,0x8(%rax)
  0x0000000002ddaf52: mov    %ebx,0xc(%rax)
  0x0000000002ddaf55: sub    $0x10,%rsi
  0x0000000002ddaf59: je     0x0000000002ddaf70
  0x0000000002ddaf5f: xor    %rbx,%rbx
  0x0000000002ddaf62: shr    $0x3,%rsi
  0x0000000002ddaf66: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002ddaf6b: dec    %rsi
  0x0000000002ddaf6e: jne    0x0000000002ddaf66
  0x0000000002ddaf70: mov    %rax,%r8           ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)

  0x0000000002ddaf73: mov    %r13,%rbx
  0x0000000002ddaf76: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002ddaf80: movslq %ebx,%rbx
  0x0000000002ddaf83: mov    %rbx,%rdi
  0x0000000002ddaf86: cmp    $0xffffff,%rbx
  0x0000000002ddaf8d: ja     0x0000000002ddc69b
  0x0000000002ddaf93: movabs $0x17,%rsi
  0x0000000002ddaf9d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002ddafa1: and    $0xfffffffffffffff8,%rsi
  0x0000000002ddafa5: mov    0x60(%r15),%rax
  0x0000000002ddafa9: lea    (%rax,%rsi,1),%rsi
  0x0000000002ddafad: cmp    0x70(%r15),%rsi
  0x0000000002ddafb1: ja     0x0000000002ddc69b
  0x0000000002ddafb7: mov    %rsi,0x60(%r15)
  0x0000000002ddafbb: sub    %rax,%rsi
  0x0000000002ddafbe: movq   $0x1,(%rax)
  0x0000000002ddafc5: mov    %rdx,%rcx
  0x0000000002ddafc8: shr    $0x3,%rcx
  0x0000000002ddafcc: mov    %ecx,0x8(%rax)
  0x0000000002ddafcf: mov    %ebx,0xc(%rax)
  0x0000000002ddafd2: sub    $0x10,%rsi
  0x0000000002ddafd6: je     0x0000000002ddafed
  0x0000000002ddafdc: xor    %rbx,%rbx
  0x0000000002ddafdf: shr    $0x3,%rsi
  0x0000000002ddafe3: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002ddafe8: dec    %rsi
  0x0000000002ddafeb: jne    0x0000000002ddafe3  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)

  0x0000000002ddafed: mov    %rax,%rbx
  0x0000000002ddaff0: mov    %r8,%rdx           ;*iconst_0
                                                ; - java.io.DataInputStream::readUTF@77 (line 606)

  0x0000000002ddaff3: mov    %rbx,0x80(%rsp)
  0x0000000002ddaffb: cmp    $0x0,%r11
  0x0000000002ddafff: je     0x0000000002ddb026
  0x0000000002ddb005: movabs $0x7c0065b80,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb00f: mov    0x8(%r11),%edi
  0x0000000002ddb013: shl    $0x3,%rdi
  0x0000000002ddb017: cmp    0x40(%rdi),%rsi
  0x0000000002ddb01b: jne    0x0000000002ddc6a5
  0x0000000002ddb021: jmpq   0x0000000002ddb026
  0x0000000002ddb026: mov    %r11,%r8
  0x0000000002ddb029: mov    %r11,%r8
  0x0000000002ddb02c: movabs $0x1bfaa9d0,%r9    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb036: addq   $0x1,0x200(%r9)
  0x0000000002ddb03e: mov    %rdx,%r8
  0x0000000002ddb041: mov    $0x0,%r9d
  0x0000000002ddb047: mov    %r13,%rdi
  0x0000000002ddb04a: mov    %rdx,0x78(%rsp)
  0x0000000002ddb04f: mov    %r11,%rdx          ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)

  0x0000000002ddb052: mov    %r13d,0x70(%rsp)
  0x0000000002ddb057: callq  0x0000000002cf61a0  ; OopMap{[120]=Oop [128]=Oop off=1468}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {optimized virtual_call}
  0x0000000002ddb05c: mov    $0x0,%edx
  0x0000000002ddb061: mov    $0x0,%esi
  0x0000000002ddb066: mov    0x80(%rsp),%rbx
  0x0000000002ddb06e: mov    0x78(%rsp),%rdi
  0x0000000002ddb073: mov    0x70(%rsp),%eax
  0x0000000002ddb077: jmpq   0x0000000002ddb135  ;*iload
                                                ; - java.io.DataInputStream::readUTF@92 (line 611)

  0x0000000002ddb07c: nopl   0x0(%rax)
  0x0000000002ddb080: movslq %esi,%rcx
  0x0000000002ddb083: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x0000000002ddc6aa
  0x0000000002ddb086: jae    0x0000000002ddc6b4
  0x0000000002ddb08c: movsbl 0x10(%rdi,%rcx,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)

  0x0000000002ddb091: and    $0xff,%ecx
  0x0000000002ddb097: cmp    $0x7f,%ecx
  0x0000000002ddb09a: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb0a4: movabs $0x240,%r9
  0x0000000002ddb0ae: jle    0x0000000002ddb0be
  0x0000000002ddb0b4: movabs $0x250,%r9
  0x0000000002ddb0be: mov    (%r8,%r9,1),%r11
  0x0000000002ddb0c2: lea    0x1(%r11),%r11
  0x0000000002ddb0c6: mov    %r11,(%r8,%r9,1)
  0x0000000002ddb0ca: jg     0x0000000002ddb175  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@112 (line 613)

  0x0000000002ddb0d0: inc    %esi
  0x0000000002ddb0d2: mov    %rdx,%r8
  0x0000000002ddb0d5: inc    %r8d
  0x0000000002ddb0d8: movslq %edx,%r9
  0x0000000002ddb0db: cmp    0xc(%rbx),%edx     ; implicit exception: dispatches to 0x0000000002ddc6bd
  0x0000000002ddb0de: jae    0x0000000002ddc6c7
  0x0000000002ddb0e4: mov    %cx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)

  0x0000000002ddb0ea: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb0f4: mov    0xe0(%rdx),%ecx
  0x0000000002ddb0fa: add    $0x8,%ecx
  0x0000000002ddb0fd: mov    %ecx,0xe0(%rdx)
  0x0000000002ddb103: movabs $0x1bfaa190,%rdx   ;   {metadata({method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb10d: and    $0xfff8,%ecx
  0x0000000002ddb113: cmp    $0x0,%ecx
  0x0000000002ddb116: je     0x0000000002ddc6d0  ; OopMap{rbx=Oop rdi=Oop off=1660}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x0000000002ddb11c: test   %eax,-0x21db022(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002ddb122: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb12c: incl   0x278(%rdx)
  0x0000000002ddb132: mov    %r8,%rdx           ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x0000000002ddb135: cmp    %eax,%esi
  0x0000000002ddb137: movabs $0x1bfaa9d0,%rcx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb141: movabs $0x220,%r8
  0x0000000002ddb14b: jge    0x0000000002ddb15b
  0x0000000002ddb151: movabs $0x230,%r8
  0x0000000002ddb15b: mov    (%rcx,%r8,1),%r9
  0x0000000002ddb15f: lea    0x1(%r9),%r9
  0x0000000002ddb163: mov    %r9,(%rcx,%r8,1)
  0x0000000002ddb167: jl     0x0000000002ddb080  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@95 (line 611)

  0x0000000002ddb16d: mov    %rdx,%r11
  0x0000000002ddb170: jmpq   0x0000000002ddb188  ;*iload
                                                ; - java.io.DataInputStream::readUTF@134 (line 618)

  0x0000000002ddb175: movabs $0x1bfaa9d0,%rcx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb17f: incl   0x260(%rcx)
  0x0000000002ddb185: mov    %rdx,%r11          ;*goto
                                                ; - java.io.DataInputStream::readUTF@115 (line 613)

  0x0000000002ddb188: cmp    %eax,%esi
  0x0000000002ddb18a: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb194: movabs $0x290,%rcx
  0x0000000002ddb19e: jge    0x0000000002ddb1ae
  0x0000000002ddb1a4: movabs $0x2a0,%rcx
  0x0000000002ddb1ae: mov    (%rdx,%rcx,1),%r8
  0x0000000002ddb1b2: lea    0x1(%r8),%r8
  0x0000000002ddb1b6: mov    %r8,(%rdx,%rcx,1)
  0x0000000002ddb1ba: jge    0x0000000002ddb51b  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@137 (line 618)

  0x0000000002ddb1c0: movslq %esi,%rdx
  0x0000000002ddb1c3: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x0000000002ddc6e7
  0x0000000002ddb1c6: jae    0x0000000002ddc6f1
  0x0000000002ddb1cc: movsbl 0x10(%rdi,%rdx,1),%edx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)

  0x0000000002ddb1d1: and    $0xff,%edx
  0x0000000002ddb1d7: mov    %rdx,%rcx
  0x0000000002ddb1da: sar    $0x4,%ecx
  0x0000000002ddb1dd: cmp    $0x0,%ecx
  0x0000000002ddb1e0: jl     0x0000000002ddb1ef
  0x0000000002ddb1e6: cmp    $0x7,%ecx
  0x0000000002ddb1e9: jle    0x0000000002ddb4a0
  0x0000000002ddb1ef: cmp    $0xc,%ecx
  0x0000000002ddb1f2: je     0x0000000002ddb20f
  0x0000000002ddb1f8: cmp    $0xd,%ecx
  0x0000000002ddb1fb: je     0x0000000002ddb20f
  0x0000000002ddb201: cmp    $0xe,%ecx
  0x0000000002ddb204: je     0x0000000002ddb2ad
  0x0000000002ddb20a: jmpq   0x0000000002ddb50f  ;*tableswitch
                                                ; - java.io.DataInputStream::readUTF@154 (line 620)

  0x0000000002ddb20f: add    $0x2,%esi
  0x0000000002ddb212: cmp    %eax,%esi
  0x0000000002ddb214: movabs $0x1bfaa9d0,%rcx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb21e: movabs $0x3d8,%r8
  0x0000000002ddb228: jle    0x0000000002ddb238
  0x0000000002ddb22e: movabs $0x3e8,%r8
  0x0000000002ddb238: mov    (%rcx,%r8,1),%r9
  0x0000000002ddb23c: lea    0x1(%r9),%r9
  0x0000000002ddb240: mov    %r9,(%rcx,%r8,1)
  0x0000000002ddb244: jg     0x0000000002ddc5f1  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@250 (line 629)

  0x0000000002ddb24a: mov    %rsi,%rcx
  0x0000000002ddb24d: dec    %ecx
  0x0000000002ddb24f: movslq %ecx,%r8
  0x0000000002ddb252: cmp    0xc(%rdi),%ecx
  0x0000000002ddb255: jae    0x0000000002ddc6fa
  0x0000000002ddb25b: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)

  0x0000000002ddb261: mov    %rcx,%r8
  0x0000000002ddb264: and    $0xc0,%r8d
  0x0000000002ddb26b: cmp    $0x80,%r8d
  0x0000000002ddb272: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb27c: movabs $0x408,%r9
  0x0000000002ddb286: je     0x0000000002ddb296
  0x0000000002ddb28c: movabs $0x418,%r9
  0x0000000002ddb296: mov    (%r8,%r9,1),%r13
  0x0000000002ddb29a: lea    0x1(%r13),%r13
  0x0000000002ddb29e: mov    %r13,(%r8,%r9,1)
  0x0000000002ddb2a2: je     0x0000000002ddb42c
  0x0000000002ddb2a8: jmpq   0x0000000002ddc0a1  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@280 (line 633)

  0x0000000002ddb2ad: add    $0x3,%esi
  0x0000000002ddb2b0: cmp    %eax,%esi
  0x0000000002ddb2b2: movabs $0x1bfaa9d0,%rcx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb2bc: movabs $0x4f0,%r8
  0x0000000002ddb2c6: jle    0x0000000002ddb2d6
  0x0000000002ddb2cc: movabs $0x500,%r8
  0x0000000002ddb2d6: mov    (%rcx,%r8,1),%r9
  0x0000000002ddb2da: lea    0x1(%r9),%r9
  0x0000000002ddb2de: mov    %r9,(%rcx,%r8,1)
  0x0000000002ddb2e2: jg     0x0000000002ddc049  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@342 (line 642)

  0x0000000002ddb2e8: mov    %rsi,%rcx
  0x0000000002ddb2eb: sub    $0x2,%ecx
  0x0000000002ddb2ee: movslq %ecx,%r8
  0x0000000002ddb2f1: cmp    0xc(%rdi),%ecx
  0x0000000002ddb2f4: jae    0x0000000002ddc703
  0x0000000002ddb2fa: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)

  0x0000000002ddb300: mov    %rsi,%r9
  0x0000000002ddb303: dec    %r9d
  0x0000000002ddb306: mov    %r9d,0x74(%rsp)
  0x0000000002ddb30b: movslq %r9d,%r8
  0x0000000002ddb30e: cmp    0xc(%rdi),%r9d
  0x0000000002ddb312: jae    0x0000000002ddc70c
  0x0000000002ddb318: movsbl 0x10(%rdi,%r8,1),%r8d  ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)

  0x0000000002ddb31e: mov    %rcx,%r13
  0x0000000002ddb321: and    $0xc0,%r13d
  0x0000000002ddb328: cmp    $0x80,%r13d
  0x0000000002ddb32f: movabs $0x1bfaa9d0,%r13   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb339: movabs $0x520,%r14
  0x0000000002ddb343: jne    0x0000000002ddb353
  0x0000000002ddb349: movabs $0x530,%r14
  0x0000000002ddb353: mov    0x0(%r13,%r14,1),%r9
  0x0000000002ddb358: lea    0x1(%r9),%r9
  0x0000000002ddb35c: mov    %r9,0x0(%r13,%r14,1)
  0x0000000002ddb361: jne    0x0000000002ddbaf9  ;*if_icmpne
                                                ; - java.io.DataInputStream::readUTF@380 (line 647)

  0x0000000002ddb367: mov    %r8,%r9
  0x0000000002ddb36a: and    $0xc0,%r9d
  0x0000000002ddb371: cmp    $0x80,%r9d
  0x0000000002ddb378: movabs $0x1bfaa9d0,%r9    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb382: movabs $0x540,%r13
  0x0000000002ddb38c: je     0x0000000002ddb39c
  0x0000000002ddb392: movabs $0x550,%r13
  0x0000000002ddb39c: mov    (%r9,%r13,1),%r14
  0x0000000002ddb3a0: lea    0x1(%r14),%r14
  0x0000000002ddb3a4: mov    %r14,(%r9,%r13,1)
  0x0000000002ddb3a8: jne    0x0000000002ddbaf9  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@392 (line 647)

  0x0000000002ddb3ae: mov    %r11,%r9
  0x0000000002ddb3b1: inc    %r9d
  0x0000000002ddb3b4: and    $0xf,%edx
  0x0000000002ddb3b7: shl    $0xc,%edx
  0x0000000002ddb3ba: and    $0x3f,%ecx
  0x0000000002ddb3bd: shl    $0x6,%ecx
  0x0000000002ddb3c0: or     %rcx,%rdx
  0x0000000002ddb3c3: and    $0x3f,%r8d
  0x0000000002ddb3c7: or     %r8,%rdx
  0x0000000002ddb3ca: movslq %r11d,%rcx
  0x0000000002ddb3cd: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002ddc715
  0x0000000002ddb3d1: jae    0x0000000002ddc71f
  0x0000000002ddb3d7: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)

  0x0000000002ddb3dc: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb3e6: mov    0xe0(%rdx),%ecx
  0x0000000002ddb3ec: add    $0x8,%ecx
  0x0000000002ddb3ef: mov    %ecx,0xe0(%rdx)
  0x0000000002ddb3f5: movabs $0x1bfaa190,%rdx   ;   {metadata({method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb3ff: and    $0xfff8,%ecx
  0x0000000002ddb405: cmp    $0x0,%ecx
  0x0000000002ddb408: je     0x0000000002ddc728  ; OopMap{rbx=Oop rdi=Oop off=2414}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x0000000002ddb40e: test   %eax,-0x21db314(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002ddb414: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb41e: incl   0x610(%rdx)
  0x0000000002ddb424: mov    %r9,%r11
  0x0000000002ddb427: jmpq   0x0000000002ddb188  ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x0000000002ddb42c: mov    %r11,%r8
  0x0000000002ddb42f: inc    %r8d
  0x0000000002ddb432: and    $0x1f,%edx
  0x0000000002ddb435: shl    $0x6,%edx
  0x0000000002ddb438: and    $0x3f,%ecx
  0x0000000002ddb43b: or     %rcx,%rdx
  0x0000000002ddb43e: movslq %r11d,%rcx
  0x0000000002ddb441: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002ddc73f
  0x0000000002ddb445: jae    0x0000000002ddc749
  0x0000000002ddb44b: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)

  0x0000000002ddb450: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb45a: mov    0xe0(%rdx),%ecx
  0x0000000002ddb460: add    $0x8,%ecx
  0x0000000002ddb463: mov    %ecx,0xe0(%rdx)
  0x0000000002ddb469: movabs $0x1bfaa190,%rdx   ;   {metadata({method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb473: and    $0xfff8,%ecx
  0x0000000002ddb479: cmp    $0x0,%ecx
  0x0000000002ddb47c: je     0x0000000002ddc752  ; OopMap{rbx=Oop rdi=Oop off=2530}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x0000000002ddb482: test   %eax,-0x21db388(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002ddb488: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb492: incl   0x4d8(%rdx)
  0x0000000002ddb498: mov    %r8,%r11
  0x0000000002ddb49b: jmpq   0x0000000002ddb188  ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x0000000002ddb4a0: inc    %esi
  0x0000000002ddb4a2: mov    %r11,%rcx
  0x0000000002ddb4a5: inc    %ecx
  0x0000000002ddb4a7: movslq %r11d,%r8
  0x0000000002ddb4aa: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002ddc769
  0x0000000002ddb4ae: jae    0x0000000002ddc773
  0x0000000002ddb4b4: mov    %dx,0x10(%rbx,%r8,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)

  0x0000000002ddb4ba: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb4c4: mov    0xe0(%rdx),%r8d
  0x0000000002ddb4cb: add    $0x8,%r8d
  0x0000000002ddb4cf: mov    %r8d,0xe0(%rdx)
  0x0000000002ddb4d6: movabs $0x1bfaa190,%rdx   ;   {metadata({method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb4e0: and    $0xfff8,%r8d
  0x0000000002ddb4e7: cmp    $0x0,%r8d
  0x0000000002ddb4eb: je     0x0000000002ddc77c  ; OopMap{rbx=Oop rdi=Oop off=2641}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x0000000002ddb4f1: test   %eax,-0x21db3f7(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002ddb4f7: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb501: incl   0x3c0(%rdx)
  0x0000000002ddb507: mov    %rcx,%r11
  0x0000000002ddb50a: jmpq   0x0000000002ddb188  ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x0000000002ddb50f: mov    %esi,0x98(%rsp)
  0x0000000002ddb516: jmpq   0x0000000002ddb5ab  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x0000000002ddb51b: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002ddb525: mov    0x60(%r15),%rax
  0x0000000002ddb529: lea    0x18(%rax),%rdi
  0x0000000002ddb52d: cmp    0x70(%r15),%rdi
  0x0000000002ddb531: ja     0x0000000002ddc793
  0x0000000002ddb537: mov    %rdi,0x60(%r15)
  0x0000000002ddb53b: mov    0xa8(%rdx),%rcx
  0x0000000002ddb542: mov    %rcx,(%rax)
  0x0000000002ddb545: mov    %rdx,%rcx
  0x0000000002ddb548: shr    $0x3,%rcx
  0x0000000002ddb54c: mov    %ecx,0x8(%rax)
  0x0000000002ddb54f: xor    %rcx,%rcx
  0x0000000002ddb552: mov    %ecx,0xc(%rax)
  0x0000000002ddb555: xor    %rcx,%rcx
  0x0000000002ddb558: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)

  0x0000000002ddb55c: mov    %rax,%r8
  0x0000000002ddb55f: movabs $0x1bfaa9d0,%r9    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb569: addq   $0x1,0x6d8(%r9)
  0x0000000002ddb571: mov    %rbx,%r8
  0x0000000002ddb574: mov    $0x0,%r9d
  0x0000000002ddb57a: mov    %r11,%rdi
  0x0000000002ddb57d: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)

  0x0000000002ddb580: mov    %rax,0x88(%rsp)
  0x0000000002ddb588: nop
  0x0000000002ddb589: nop
  0x0000000002ddb58a: nop
  0x0000000002ddb58b: nop
  0x0000000002ddb58c: nop
  0x0000000002ddb58d: nop
  0x0000000002ddb58e: nop
  0x0000000002ddb58f: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop off=2804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)
                                                ;   {optimized virtual_call}
  0x0000000002ddb594: mov    0x88(%rsp),%rax
  0x0000000002ddb59c: add    $0x100,%rsp
  0x0000000002ddb5a3: pop    %rbp
  0x0000000002ddb5a4: test   %eax,-0x21db4aa(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002ddb5aa: retq                      ;*areturn
                                                ; - java.io.DataInputStream::readUTF@500 (line 661)

  0x0000000002ddb5ab: nopl   0x0(%rax,%rax,1)
  0x0000000002ddb5b0: jmpq   0x0000000002ddc7af  ;   {no_reloc}
  0x0000000002ddb5b5: add    %al,(%rax)
  0x0000000002ddb5b7: add    %al,(%rax)
  0x0000000002ddb5b9: add    %ch,%cl
  0x0000000002ddb5bb: cli    
  0x0000000002ddb5bc: adc    %eax,(%rax)
  0x0000000002ddb5be: add    %dl,0x1210e9(%rax)  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {no_reloc}
  0x0000000002ddb5c4: add    %al,(%rax)
  0x0000000002ddb5c6: add    %al,(%rax)
  0x0000000002ddb5c8: add    %al,(%rax)
  0x0000000002ddb5ca: mov    %rax,0xa0(%rsp)
  0x0000000002ddb5d2: mov    0x60(%r15),%rax
  0x0000000002ddb5d6: lea    0x18(%rax),%rdi
  0x0000000002ddb5da: cmp    0x70(%r15),%rdi
  0x0000000002ddb5de: ja     0x0000000002ddc7df
  0x0000000002ddb5e4: mov    %rdi,0x60(%r15)
  0x0000000002ddb5e8: mov    0xa8(%rdx),%rcx
  0x0000000002ddb5ef: mov    %rcx,(%rax)
  0x0000000002ddb5f2: mov    %rdx,%rcx
  0x0000000002ddb5f5: shr    $0x3,%rcx
  0x0000000002ddb5f9: mov    %ecx,0x8(%rax)
  0x0000000002ddb5fc: xor    %rcx,%rcx
  0x0000000002ddb5ff: mov    %ecx,0xc(%rax)
  0x0000000002ddb602: xor    %rcx,%rcx
  0x0000000002ddb605: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)

  0x0000000002ddb609: mov    %rax,%rbx
  0x0000000002ddb60c: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb616: addq   $0x1,0x628(%rdx)
  0x0000000002ddb61e: movabs $0x1bea7de8,%rbx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddb628: mov    0xdc(%rbx),%edx
  0x0000000002ddb62e: add    $0x8,%edx
  0x0000000002ddb631: mov    %edx,0xdc(%rbx)
  0x0000000002ddb637: movabs $0x1bce7640,%rbx   ;   {metadata({method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddb641: and    $0x7ffff8,%edx
  0x0000000002ddb647: cmp    $0x0,%edx
  0x0000000002ddb64a: je     0x0000000002ddc7ec
  0x0000000002ddb650: mov    %rax,%rbx
  0x0000000002ddb653: movabs $0x1bea7de8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddb65d: addq   $0x1,0x108(%rdx)
  0x0000000002ddb665: movabs $0x1be9d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002ddb66f: mov    0xdc(%rbx),%edx
  0x0000000002ddb675: add    $0x8,%edx
  0x0000000002ddb678: mov    %edx,0xdc(%rbx)
  0x0000000002ddb67e: movabs $0x1bce3970,%rbx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002ddb688: and    $0x7ffff8,%edx
  0x0000000002ddb68e: cmp    $0x0,%edx
  0x0000000002ddb691: je     0x0000000002ddc803
  0x0000000002ddb697: mov    %rax,%rbx
  0x0000000002ddb69a: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002ddb6a4: addq   $0x1,0x108(%rdx)
  0x0000000002ddb6ac: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002ddb6b6: mov    0xdc(%rbx),%edx
  0x0000000002ddb6bc: add    $0x8,%edx
  0x0000000002ddb6bf: mov    %edx,0xdc(%rbx)
  0x0000000002ddb6c5: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002ddb6cf: and    $0x7ffff8,%edx
  0x0000000002ddb6d5: cmp    $0x0,%edx
  0x0000000002ddb6d8: je     0x0000000002ddc81a
  0x0000000002ddb6de: mov    $0x10,%ebx
  0x0000000002ddb6e3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002ddb6ed: mov    %rax,%r13
  0x0000000002ddb6f0: movslq %ebx,%rbx
  0x0000000002ddb6f3: mov    %rbx,%rdi
  0x0000000002ddb6f6: cmp    $0xffffff,%rbx
  0x0000000002ddb6fd: ja     0x0000000002ddc831
  0x0000000002ddb703: movabs $0x17,%rsi
  0x0000000002ddb70d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002ddb711: and    $0xfffffffffffffff8,%rsi
  0x0000000002ddb715: mov    0x60(%r15),%rax
  0x0000000002ddb719: lea    (%rax,%rsi,1),%rsi
  0x0000000002ddb71d: cmp    0x70(%r15),%rsi
  0x0000000002ddb721: ja     0x0000000002ddc831
  0x0000000002ddb727: mov    %rsi,0x60(%r15)
  0x0000000002ddb72b: sub    %rax,%rsi
  0x0000000002ddb72e: movq   $0x1,(%rax)
  0x0000000002ddb735: mov    %rdx,%rcx
  0x0000000002ddb738: shr    $0x3,%rcx
  0x0000000002ddb73c: mov    %ecx,0x8(%rax)
  0x0000000002ddb73f: mov    %ebx,0xc(%rax)
  0x0000000002ddb742: sub    $0x10,%rsi
  0x0000000002ddb746: je     0x0000000002ddb75d
  0x0000000002ddb74c: xor    %rbx,%rbx
  0x0000000002ddb74f: shr    $0x3,%rsi
  0x0000000002ddb753: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002ddb758: dec    %rsi
  0x0000000002ddb75b: jne    0x0000000002ddb753  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x0000000002ddb75d: mov    %rax,%r10
  0x0000000002ddb760: shr    $0x3,%r10
  0x0000000002ddb764: mov    %r10d,0x10(%r13)
  0x0000000002ddb768: mov    %r13,%rax
  0x0000000002ddb76b: shr    $0x9,%rax
  0x0000000002ddb76f: movabs $0xea5d000,%r8
  0x0000000002ddb779: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x0000000002ddb77e: mov    %r13,%rax
  0x0000000002ddb781: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb78b: mov    0x8(%rax),%eax
  0x0000000002ddb78e: shl    $0x3,%rax
  0x0000000002ddb792: cmp    0x640(%r8),%rax
  0x0000000002ddb799: jne    0x0000000002ddb7a8
  0x0000000002ddb79b: addq   $0x1,0x648(%r8)
  0x0000000002ddb7a3: jmpq   0x0000000002ddb80e
  0x0000000002ddb7a8: cmp    0x650(%r8),%rax
  0x0000000002ddb7af: jne    0x0000000002ddb7be
  0x0000000002ddb7b1: addq   $0x1,0x658(%r8)
  0x0000000002ddb7b9: jmpq   0x0000000002ddb80e
  0x0000000002ddb7be: cmpq   $0x0,0x640(%r8)
  0x0000000002ddb7c9: jne    0x0000000002ddb7e2
  0x0000000002ddb7cb: mov    %rax,0x640(%r8)
  0x0000000002ddb7d2: movq   $0x1,0x648(%r8)
  0x0000000002ddb7dd: jmpq   0x0000000002ddb80e
  0x0000000002ddb7e2: cmpq   $0x0,0x650(%r8)
  0x0000000002ddb7ed: jne    0x0000000002ddb806
  0x0000000002ddb7ef: mov    %rax,0x650(%r8)
  0x0000000002ddb7f6: movq   $0x1,0x658(%r8)
  0x0000000002ddb801: jmpq   0x0000000002ddb80e
  0x0000000002ddb806: addq   $0x1,0x638(%r8)
  0x0000000002ddb80e: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddb818: mov    0xdc(%r8),%edx
  0x0000000002ddb81f: add    $0x8,%edx
  0x0000000002ddb822: mov    %edx,0xdc(%r8)
  0x0000000002ddb829: movabs $0x1bce7958,%r8    ;   {metadata({method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddb833: and    $0x7ffff8,%edx
  0x0000000002ddb839: cmp    $0x0,%edx
  0x0000000002ddb83c: je     0x0000000002ddc83b
  0x0000000002ddb842: mov    %r13,%rax
  0x0000000002ddb845: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddb84f: addq   $0x1,0x108(%r8)
  0x0000000002ddb857: movabs $0x76bf1f0d0,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x0000000002ddb861: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)

  0x0000000002ddb864: mov    %r13,0x90(%rsp)
  0x0000000002ddb86c: nop
  0x0000000002ddb86d: nop
  0x0000000002ddb86e: nop
  0x0000000002ddb86f: callq  0x0000000002cf61a0  ; OopMap{[144]=Oop [160]=Oop off=3540}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {optimized virtual_call}
  0x0000000002ddb874: mov    0x90(%rsp),%rax
  0x0000000002ddb87c: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb886: mov    0x8(%rax),%eax
  0x0000000002ddb889: shl    $0x3,%rax
  0x0000000002ddb88d: cmp    0x670(%r8),%rax
  0x0000000002ddb894: jne    0x0000000002ddb8a3
  0x0000000002ddb896: addq   $0x1,0x678(%r8)
  0x0000000002ddb89e: jmpq   0x0000000002ddb909
  0x0000000002ddb8a3: cmp    0x680(%r8),%rax
  0x0000000002ddb8aa: jne    0x0000000002ddb8b9
  0x0000000002ddb8ac: addq   $0x1,0x688(%r8)
  0x0000000002ddb8b4: jmpq   0x0000000002ddb909
  0x0000000002ddb8b9: cmpq   $0x0,0x670(%r8)
  0x0000000002ddb8c4: jne    0x0000000002ddb8dd
  0x0000000002ddb8c6: mov    %rax,0x670(%r8)
  0x0000000002ddb8cd: movq   $0x1,0x678(%r8)
  0x0000000002ddb8d8: jmpq   0x0000000002ddb909
  0x0000000002ddb8dd: cmpq   $0x0,0x680(%r8)
  0x0000000002ddb8e8: jne    0x0000000002ddb901
  0x0000000002ddb8ea: mov    %rax,0x680(%r8)
  0x0000000002ddb8f1: movq   $0x1,0x688(%r8)
  0x0000000002ddb8fc: jmpq   0x0000000002ddb909
  0x0000000002ddb901: addq   $0x1,0x668(%r8)
  0x0000000002ddb909: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddb913: mov    0xdc(%r8),%edx
  0x0000000002ddb91a: add    $0x8,%edx
  0x0000000002ddb91d: mov    %edx,0xdc(%r8)
  0x0000000002ddb924: movabs $0x1bce7e18,%r8    ;   {metadata({method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddb92e: and    $0x7ffff8,%edx
  0x0000000002ddb934: cmp    $0x0,%edx
  0x0000000002ddb937: je     0x0000000002ddc852
  0x0000000002ddb93d: mov    0x90(%rsp),%rax
  0x0000000002ddb945: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddb94f: addq   $0x1,0x108(%r8)
  0x0000000002ddb957: mov    0x98(%rsp),%r8d
  0x0000000002ddb95f: mov    0x90(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)

  0x0000000002ddb967: callq  0x0000000002cf61a0  ; OopMap{[144]=Oop [160]=Oop off=3788}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {optimized virtual_call}
  0x0000000002ddb96c: mov    0x90(%rsp),%rax
  0x0000000002ddb974: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddb97e: mov    0x8(%rax),%eax
  0x0000000002ddb981: shl    $0x3,%rax
  0x0000000002ddb985: cmp    0x6a0(%rdx),%rax
  0x0000000002ddb98c: jne    0x0000000002ddb99b
  0x0000000002ddb98e: addq   $0x1,0x6a8(%rdx)
  0x0000000002ddb996: jmpq   0x0000000002ddba01
  0x0000000002ddb99b: cmp    0x6b0(%rdx),%rax
  0x0000000002ddb9a2: jne    0x0000000002ddb9b1
  0x0000000002ddb9a4: addq   $0x1,0x6b8(%rdx)
  0x0000000002ddb9ac: jmpq   0x0000000002ddba01
  0x0000000002ddb9b1: cmpq   $0x0,0x6a0(%rdx)
  0x0000000002ddb9bc: jne    0x0000000002ddb9d5
  0x0000000002ddb9be: mov    %rax,0x6a0(%rdx)
  0x0000000002ddb9c5: movq   $0x1,0x6a8(%rdx)
  0x0000000002ddb9d0: jmpq   0x0000000002ddba01
  0x0000000002ddb9d5: cmpq   $0x0,0x6b0(%rdx)
  0x0000000002ddb9e0: jne    0x0000000002ddb9f9
  0x0000000002ddb9e2: mov    %rax,0x6b0(%rdx)
  0x0000000002ddb9e9: movq   $0x1,0x6b8(%rdx)
  0x0000000002ddb9f4: jmpq   0x0000000002ddba01
  0x0000000002ddb9f9: addq   $0x1,0x698(%rdx)
  0x0000000002ddba01: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddba0b: mov    0xdc(%rdx),%esi
  0x0000000002ddba11: add    $0x8,%esi
  0x0000000002ddba14: mov    %esi,0xdc(%rdx)
  0x0000000002ddba1a: movabs $0x1bce8d08,%rdx   ;   {metadata({method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddba24: and    $0x7ffff8,%esi
  0x0000000002ddba2a: cmp    $0x0,%esi
  0x0000000002ddba2d: je     0x0000000002ddc869
  0x0000000002ddba33: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002ddba3d: mov    0x60(%r15),%rax
  0x0000000002ddba41: lea    0x18(%rax),%rdi
  0x0000000002ddba45: cmp    0x70(%r15),%rdi
  0x0000000002ddba49: ja     0x0000000002ddc880
  0x0000000002ddba4f: mov    %rdi,0x60(%r15)
  0x0000000002ddba53: mov    0xa8(%rdx),%rcx
  0x0000000002ddba5a: mov    %rcx,(%rax)
  0x0000000002ddba5d: mov    %rdx,%rcx
  0x0000000002ddba60: shr    $0x3,%rcx
  0x0000000002ddba64: mov    %ecx,0x8(%rax)
  0x0000000002ddba67: xor    %rcx,%rcx
  0x0000000002ddba6a: mov    %ecx,0xc(%rax)
  0x0000000002ddba6d: xor    %rcx,%rcx
  0x0000000002ddba70: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x0000000002ddba74: mov    0x90(%rsp),%r8
  0x0000000002ddba7c: mov    0x10(%r8),%r9d
  0x0000000002ddba80: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x0000000002ddba84: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x0000000002ddba88: mov    %rax,%r8
  0x0000000002ddba8b: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddba95: addq   $0x1,0x108(%rdx)
  0x0000000002ddba9d: mov    %r9,%r8
  0x0000000002ddbaa0: mov    $0x0,%r9d
  0x0000000002ddbaa6: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x0000000002ddbaa9: mov    %rax,0xa8(%rsp)
  0x0000000002ddbab1: nop
  0x0000000002ddbab2: nop
  0x0000000002ddbab3: nop
  0x0000000002ddbab4: nop
  0x0000000002ddbab5: nop
  0x0000000002ddbab6: nop
  0x0000000002ddbab7: callq  0x0000000002cf61a0  ; OopMap{[160]=Oop [168]=Oop off=4124}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {optimized virtual_call}
  0x0000000002ddbabc: mov    0xa0(%rsp),%rax
  0x0000000002ddbac4: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddbace: addq   $0x1,0x6c8(%r8)
  0x0000000002ddbad6: mov    0xa8(%rsp),%r8
  0x0000000002ddbade: mov    0xa0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)

  0x0000000002ddbae6: nop
  0x0000000002ddbae7: callq  0x0000000002cf61a0  ; OopMap{[160]=Oop off=4172}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)
                                                ;   {optimized virtual_call}
  0x0000000002ddbaec: mov    0xa0(%rsp),%rax
  0x0000000002ddbaf4: jmpq   0x0000000002ddcade  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@488 (line 656)

  0x0000000002ddbaf9: mov    %esi,0x9c(%rsp)
  0x0000000002ddbb00: jmpq   0x0000000002ddc89c  ;   {no_reloc}
  0x0000000002ddbb05: add    %al,(%rax)
  0x0000000002ddbb07: add    %al,(%rax)
  0x0000000002ddbb09: add    %ch,%cl
  0x0000000002ddbb0b: xchg   %eax,%edi
  0x0000000002ddbb0c: or     $0xe9900000,%eax   ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {no_reloc}
  0x0000000002ddbb11: lods   %ds:(%rsi),%eax
  0x0000000002ddbb12: or     $0x0,%eax
  0x0000000002ddbb17: add    %al,(%rax)
  0x0000000002ddbb19: add    %cl,-0x77(%rax)
  0x0000000002ddbb1c: test   %ah,(%rax,%rdi,4)
  0x0000000002ddbb1f: add    %al,(%rax)
  0x0000000002ddbb21: add    %cl,-0x75(%rcx)
  0x0000000002ddbb24: rex.RXB (bad) 
  0x0000000002ddbb26: lea    0x18(%rax),%rdi
  0x0000000002ddbb2a: cmp    0x70(%r15),%rdi
  0x0000000002ddbb2e: ja     0x0000000002ddc8cc
  0x0000000002ddbb34: mov    %rdi,0x60(%r15)
  0x0000000002ddbb38: mov    0xa8(%rdx),%rcx
  0x0000000002ddbb3f: mov    %rcx,(%rax)
  0x0000000002ddbb42: mov    %rdx,%rcx
  0x0000000002ddbb45: shr    $0x3,%rcx
  0x0000000002ddbb49: mov    %ecx,0x8(%rax)
  0x0000000002ddbb4c: xor    %rcx,%rcx
  0x0000000002ddbb4f: mov    %ecx,0xc(%rax)
  0x0000000002ddbb52: xor    %rcx,%rcx
  0x0000000002ddbb55: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)

  0x0000000002ddbb59: mov    %rax,%rbx
  0x0000000002ddbb5c: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddbb66: addq   $0x1,0x560(%rdx)
  0x0000000002ddbb6e: movabs $0x1bea7de8,%rbx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbb78: mov    0xdc(%rbx),%edx
  0x0000000002ddbb7e: add    $0x8,%edx
  0x0000000002ddbb81: mov    %edx,0xdc(%rbx)
  0x0000000002ddbb87: movabs $0x1bce7640,%rbx   ;   {metadata({method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbb91: and    $0x7ffff8,%edx
  0x0000000002ddbb97: cmp    $0x0,%edx
  0x0000000002ddbb9a: je     0x0000000002ddc8d9
  0x0000000002ddbba0: mov    %rax,%rbx
  0x0000000002ddbba3: movabs $0x1bea7de8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbbad: addq   $0x1,0x108(%rdx)
  0x0000000002ddbbb5: movabs $0x1be9d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002ddbbbf: mov    0xdc(%rbx),%edx
  0x0000000002ddbbc5: add    $0x8,%edx
  0x0000000002ddbbc8: mov    %edx,0xdc(%rbx)
  0x0000000002ddbbce: movabs $0x1bce3970,%rbx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002ddbbd8: and    $0x7ffff8,%edx
  0x0000000002ddbbde: cmp    $0x0,%edx
  0x0000000002ddbbe1: je     0x0000000002ddc8f0
  0x0000000002ddbbe7: mov    %rax,%rbx
  0x0000000002ddbbea: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002ddbbf4: addq   $0x1,0x108(%rdx)
  0x0000000002ddbbfc: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002ddbc06: mov    0xdc(%rbx),%edx
  0x0000000002ddbc0c: add    $0x8,%edx
  0x0000000002ddbc0f: mov    %edx,0xdc(%rbx)
  0x0000000002ddbc15: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002ddbc1f: and    $0x7ffff8,%edx
  0x0000000002ddbc25: cmp    $0x0,%edx
  0x0000000002ddbc28: je     0x0000000002ddc907
  0x0000000002ddbc2e: mov    $0x10,%ebx
  0x0000000002ddbc33: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002ddbc3d: mov    %rax,%r14
  0x0000000002ddbc40: movslq %ebx,%rbx
  0x0000000002ddbc43: mov    %rbx,%rdi
  0x0000000002ddbc46: cmp    $0xffffff,%rbx
  0x0000000002ddbc4d: ja     0x0000000002ddc91e
  0x0000000002ddbc53: movabs $0x17,%rsi
  0x0000000002ddbc5d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002ddbc61: and    $0xfffffffffffffff8,%rsi
  0x0000000002ddbc65: mov    0x60(%r15),%rax
  0x0000000002ddbc69: lea    (%rax,%rsi,1),%rsi
  0x0000000002ddbc6d: cmp    0x70(%r15),%rsi
  0x0000000002ddbc71: ja     0x0000000002ddc91e
  0x0000000002ddbc77: mov    %rsi,0x60(%r15)
  0x0000000002ddbc7b: sub    %rax,%rsi
  0x0000000002ddbc7e: movq   $0x1,(%rax)
  0x0000000002ddbc85: mov    %rdx,%rcx
  0x0000000002ddbc88: shr    $0x3,%rcx
  0x0000000002ddbc8c: mov    %ecx,0x8(%rax)
  0x0000000002ddbc8f: mov    %ebx,0xc(%rax)
  0x0000000002ddbc92: sub    $0x10,%rsi
  0x0000000002ddbc96: je     0x0000000002ddbcad
  0x0000000002ddbc9c: xor    %rbx,%rbx
  0x0000000002ddbc9f: shr    $0x3,%rsi
  0x0000000002ddbca3: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002ddbca8: dec    %rsi
  0x0000000002ddbcab: jne    0x0000000002ddbca3  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x0000000002ddbcad: mov    %rax,%r10
  0x0000000002ddbcb0: shr    $0x3,%r10
  0x0000000002ddbcb4: mov    %r10d,0x10(%r14)
  0x0000000002ddbcb8: mov    %r14,%rax
  0x0000000002ddbcbb: shr    $0x9,%rax
  0x0000000002ddbcbf: movabs $0xea5d000,%r8
  0x0000000002ddbcc9: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x0000000002ddbcce: mov    %r14,%rax
  0x0000000002ddbcd1: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddbcdb: mov    0x8(%rax),%eax
  0x0000000002ddbcde: shl    $0x3,%rax
  0x0000000002ddbce2: cmp    0x578(%r8),%rax
  0x0000000002ddbce9: jne    0x0000000002ddbcf8
  0x0000000002ddbceb: addq   $0x1,0x580(%r8)
  0x0000000002ddbcf3: jmpq   0x0000000002ddbd5e
  0x0000000002ddbcf8: cmp    0x588(%r8),%rax
  0x0000000002ddbcff: jne    0x0000000002ddbd0e
  0x0000000002ddbd01: addq   $0x1,0x590(%r8)
  0x0000000002ddbd09: jmpq   0x0000000002ddbd5e
  0x0000000002ddbd0e: cmpq   $0x0,0x578(%r8)
  0x0000000002ddbd19: jne    0x0000000002ddbd32
  0x0000000002ddbd1b: mov    %rax,0x578(%r8)
  0x0000000002ddbd22: movq   $0x1,0x580(%r8)
  0x0000000002ddbd2d: jmpq   0x0000000002ddbd5e
  0x0000000002ddbd32: cmpq   $0x0,0x588(%r8)
  0x0000000002ddbd3d: jne    0x0000000002ddbd56
  0x0000000002ddbd3f: mov    %rax,0x588(%r8)
  0x0000000002ddbd46: movq   $0x1,0x590(%r8)
  0x0000000002ddbd51: jmpq   0x0000000002ddbd5e
  0x0000000002ddbd56: addq   $0x1,0x570(%r8)
  0x0000000002ddbd5e: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbd68: mov    0xdc(%r8),%edx
  0x0000000002ddbd6f: add    $0x8,%edx
  0x0000000002ddbd72: mov    %edx,0xdc(%r8)
  0x0000000002ddbd79: movabs $0x1bce7958,%r8    ;   {metadata({method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbd83: and    $0x7ffff8,%edx
  0x0000000002ddbd89: cmp    $0x0,%edx
  0x0000000002ddbd8c: je     0x0000000002ddc928
  0x0000000002ddbd92: mov    %r14,%rax
  0x0000000002ddbd95: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbd9f: addq   $0x1,0x108(%r8)
  0x0000000002ddbda7: movabs $0x76bf1f0d0,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x0000000002ddbdb1: mov    %r14,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)

  0x0000000002ddbdb4: mov    %r14,0xb0(%rsp)
  0x0000000002ddbdbc: nop
  0x0000000002ddbdbd: nop
  0x0000000002ddbdbe: nop
  0x0000000002ddbdbf: callq  0x0000000002cf61a0  ; OopMap{[176]=Oop [184]=Oop off=4900}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {optimized virtual_call}
  0x0000000002ddbdc4: mov    0xb0(%rsp),%rax
  0x0000000002ddbdcc: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddbdd6: mov    0x8(%rax),%eax
  0x0000000002ddbdd9: shl    $0x3,%rax
  0x0000000002ddbddd: cmp    0x5a8(%r8),%rax
  0x0000000002ddbde4: jne    0x0000000002ddbdf3
  0x0000000002ddbde6: addq   $0x1,0x5b0(%r8)
  0x0000000002ddbdee: jmpq   0x0000000002ddbe59
  0x0000000002ddbdf3: cmp    0x5b8(%r8),%rax
  0x0000000002ddbdfa: jne    0x0000000002ddbe09
  0x0000000002ddbdfc: addq   $0x1,0x5c0(%r8)
  0x0000000002ddbe04: jmpq   0x0000000002ddbe59
  0x0000000002ddbe09: cmpq   $0x0,0x5a8(%r8)
  0x0000000002ddbe14: jne    0x0000000002ddbe2d
  0x0000000002ddbe16: mov    %rax,0x5a8(%r8)
  0x0000000002ddbe1d: movq   $0x1,0x5b0(%r8)
  0x0000000002ddbe28: jmpq   0x0000000002ddbe59
  0x0000000002ddbe2d: cmpq   $0x0,0x5b8(%r8)
  0x0000000002ddbe38: jne    0x0000000002ddbe51
  0x0000000002ddbe3a: mov    %rax,0x5b8(%r8)
  0x0000000002ddbe41: movq   $0x1,0x5c0(%r8)
  0x0000000002ddbe4c: jmpq   0x0000000002ddbe59
  0x0000000002ddbe51: addq   $0x1,0x5a0(%r8)
  0x0000000002ddbe59: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbe63: mov    0xdc(%r8),%edx
  0x0000000002ddbe6a: add    $0x8,%edx
  0x0000000002ddbe6d: mov    %edx,0xdc(%r8)
  0x0000000002ddbe74: movabs $0x1bce7e18,%r8    ;   {metadata({method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbe7e: and    $0x7ffff8,%edx
  0x0000000002ddbe84: cmp    $0x0,%edx
  0x0000000002ddbe87: je     0x0000000002ddc93f
  0x0000000002ddbe8d: mov    0xb0(%rsp),%rax
  0x0000000002ddbe95: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbe9f: addq   $0x1,0x108(%r8)
  0x0000000002ddbea7: mov    0x74(%rsp),%r8d
  0x0000000002ddbeac: mov    0xb0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)

  0x0000000002ddbeb4: nop
  0x0000000002ddbeb5: nop
  0x0000000002ddbeb6: nop
  0x0000000002ddbeb7: callq  0x0000000002cf61a0  ; OopMap{[176]=Oop [184]=Oop off=5148}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {optimized virtual_call}
  0x0000000002ddbebc: mov    0xb0(%rsp),%rax
  0x0000000002ddbec4: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddbece: mov    0x8(%rax),%eax
  0x0000000002ddbed1: shl    $0x3,%rax
  0x0000000002ddbed5: cmp    0x5d8(%rdx),%rax
  0x0000000002ddbedc: jne    0x0000000002ddbeeb
  0x0000000002ddbede: addq   $0x1,0x5e0(%rdx)
  0x0000000002ddbee6: jmpq   0x0000000002ddbf51
  0x0000000002ddbeeb: cmp    0x5e8(%rdx),%rax
  0x0000000002ddbef2: jne    0x0000000002ddbf01
  0x0000000002ddbef4: addq   $0x1,0x5f0(%rdx)
  0x0000000002ddbefc: jmpq   0x0000000002ddbf51
  0x0000000002ddbf01: cmpq   $0x0,0x5d8(%rdx)
  0x0000000002ddbf0c: jne    0x0000000002ddbf25
  0x0000000002ddbf0e: mov    %rax,0x5d8(%rdx)
  0x0000000002ddbf15: movq   $0x1,0x5e0(%rdx)
  0x0000000002ddbf20: jmpq   0x0000000002ddbf51
  0x0000000002ddbf25: cmpq   $0x0,0x5e8(%rdx)
  0x0000000002ddbf30: jne    0x0000000002ddbf49
  0x0000000002ddbf32: mov    %rax,0x5e8(%rdx)
  0x0000000002ddbf39: movq   $0x1,0x5f0(%rdx)
  0x0000000002ddbf44: jmpq   0x0000000002ddbf51
  0x0000000002ddbf49: addq   $0x1,0x5d0(%rdx)
  0x0000000002ddbf51: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbf5b: mov    0xdc(%rdx),%esi
  0x0000000002ddbf61: add    $0x8,%esi
  0x0000000002ddbf64: mov    %esi,0xdc(%rdx)
  0x0000000002ddbf6a: movabs $0x1bce8d08,%rdx   ;   {metadata({method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbf74: and    $0x7ffff8,%esi
  0x0000000002ddbf7a: cmp    $0x0,%esi
  0x0000000002ddbf7d: je     0x0000000002ddc956
  0x0000000002ddbf83: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002ddbf8d: mov    0x60(%r15),%rax
  0x0000000002ddbf91: lea    0x18(%rax),%rdi
  0x0000000002ddbf95: cmp    0x70(%r15),%rdi
  0x0000000002ddbf99: ja     0x0000000002ddc96d
  0x0000000002ddbf9f: mov    %rdi,0x60(%r15)
  0x0000000002ddbfa3: mov    0xa8(%rdx),%rcx
  0x0000000002ddbfaa: mov    %rcx,(%rax)
  0x0000000002ddbfad: mov    %rdx,%rcx
  0x0000000002ddbfb0: shr    $0x3,%rcx
  0x0000000002ddbfb4: mov    %ecx,0x8(%rax)
  0x0000000002ddbfb7: xor    %rcx,%rcx
  0x0000000002ddbfba: mov    %ecx,0xc(%rax)
  0x0000000002ddbfbd: xor    %rcx,%rcx
  0x0000000002ddbfc0: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x0000000002ddbfc4: mov    0xb0(%rsp),%r8
  0x0000000002ddbfcc: mov    0x10(%r8),%r9d
  0x0000000002ddbfd0: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x0000000002ddbfd4: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x0000000002ddbfd8: mov    %rax,%r8
  0x0000000002ddbfdb: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddbfe5: addq   $0x1,0x108(%rdx)
  0x0000000002ddbfed: mov    %r9,%r8
  0x0000000002ddbff0: mov    $0x0,%r9d
  0x0000000002ddbff6: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x0000000002ddbff9: mov    %rax,0xc0(%rsp)
  0x0000000002ddc001: nop
  0x0000000002ddc002: nop
  0x0000000002ddc003: nop
  0x0000000002ddc004: nop
  0x0000000002ddc005: nop
  0x0000000002ddc006: nop
  0x0000000002ddc007: callq  0x0000000002cf61a0  ; OopMap{[184]=Oop [192]=Oop off=5484}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {optimized virtual_call}
  0x0000000002ddc00c: mov    0xb8(%rsp),%rax
  0x0000000002ddc014: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddc01e: addq   $0x1,0x600(%r8)
  0x0000000002ddc026: mov    0xc0(%rsp),%r8
  0x0000000002ddc02e: mov    0xb8(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)

  0x0000000002ddc036: nop
  0x0000000002ddc037: callq  0x0000000002cf61a0  ; OopMap{[184]=Oop off=5532}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)
                                                ;   {optimized virtual_call}
  0x0000000002ddc03c: mov    0xb8(%rsp),%rax
  0x0000000002ddc044: jmpq   0x0000000002ddcade  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@424 (line 648)

  0x0000000002ddc049: nopl   0x0(%rax)
  0x0000000002ddc050: jmpq   0x0000000002ddc989  ;   {no_reloc}
  0x0000000002ddc055: add    %al,(%rax)
  0x0000000002ddc057: add    %al,(%rax)
  0x0000000002ddc059: add    %ch,%cl
  0x0000000002ddc05b: xor    $0x9,%al
  0x0000000002ddc05d: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)

  0x0000000002ddc05f: mov    %rax,%r8
  0x0000000002ddc062: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddc06c: addq   $0x1,0x510(%rdx)
  0x0000000002ddc074: movabs $0x76bf1f050,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x0000000002ddc07e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)

  0x0000000002ddc081: mov    %rax,0xc8(%rsp)
  0x0000000002ddc089: nop
  0x0000000002ddc08a: nop
  0x0000000002ddc08b: nop
  0x0000000002ddc08c: nop
  0x0000000002ddc08d: nop
  0x0000000002ddc08e: nop
  0x0000000002ddc08f: callq  0x0000000002cf61a0  ; OopMap{[200]=Oop off=5620}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)
                                                ;   {optimized virtual_call}
  0x0000000002ddc094: mov    0xc8(%rsp),%rax
  0x0000000002ddc09c: jmpq   0x0000000002ddcade  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@354 (line 643)

  0x0000000002ddc0a1: mov    %esi,0xd8(%rsp)
  0x0000000002ddc0a8: jmpq   0x0000000002ddc9af  ;   {no_reloc}
  0x0000000002ddc0ad: add    %al,(%rax)
  0x0000000002ddc0af: add    %al,(%rax)
  0x0000000002ddc0b1: add    %ch,%cl
  0x0000000002ddc0b3: add    (%rcx),%cl
  0x0000000002ddc0b5: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)

  0x0000000002ddc0b7: nop
  0x0000000002ddc0b8: jmpq   0x0000000002ddc9d5  ;   {no_reloc}
  0x0000000002ddc0bd: add    %al,(%rax)
  0x0000000002ddc0bf: add    %al,(%rax)
  0x0000000002ddc0c1: add    %cl,-0x77(%rax)
  0x0000000002ddc0c4: test   %ah,(%rax,%riz,8)
  0x0000000002ddc0c7: add    %al,(%rax)
  0x0000000002ddc0c9: add    %cl,-0x75(%rcx)
  0x0000000002ddc0cc: rex.RXB (bad) 
  0x0000000002ddc0ce: lea    0x18(%rax),%rdi
  0x0000000002ddc0d2: cmp    0x70(%r15),%rdi
  0x0000000002ddc0d6: ja     0x0000000002ddc9df
  0x0000000002ddc0dc: mov    %rdi,0x60(%r15)
  0x0000000002ddc0e0: mov    0xa8(%rdx),%rcx
  0x0000000002ddc0e7: mov    %rcx,(%rax)
  0x0000000002ddc0ea: mov    %rdx,%rcx
  0x0000000002ddc0ed: shr    $0x3,%rcx
  0x0000000002ddc0f1: mov    %ecx,0x8(%rax)
  0x0000000002ddc0f4: xor    %rcx,%rcx
  0x0000000002ddc0f7: mov    %ecx,0xc(%rax)
  0x0000000002ddc0fa: xor    %rcx,%rcx
  0x0000000002ddc0fd: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)

  0x0000000002ddc101: mov    %rax,%rbx
  0x0000000002ddc104: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddc10e: addq   $0x1,0x428(%rdx)
  0x0000000002ddc116: movabs $0x1bea7de8,%rbx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc120: mov    0xdc(%rbx),%edx
  0x0000000002ddc126: add    $0x8,%edx
  0x0000000002ddc129: mov    %edx,0xdc(%rbx)
  0x0000000002ddc12f: movabs $0x1bce7640,%rbx   ;   {metadata({method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc139: and    $0x7ffff8,%edx
  0x0000000002ddc13f: cmp    $0x0,%edx
  0x0000000002ddc142: je     0x0000000002ddc9ec
  0x0000000002ddc148: mov    %rax,%rbx
  0x0000000002ddc14b: movabs $0x1bea7de8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc155: addq   $0x1,0x108(%rdx)
  0x0000000002ddc15d: movabs $0x1be9d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002ddc167: mov    0xdc(%rbx),%edx
  0x0000000002ddc16d: add    $0x8,%edx
  0x0000000002ddc170: mov    %edx,0xdc(%rbx)
  0x0000000002ddc176: movabs $0x1bce3970,%rbx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002ddc180: and    $0x7ffff8,%edx
  0x0000000002ddc186: cmp    $0x0,%edx
  0x0000000002ddc189: je     0x0000000002ddca03
  0x0000000002ddc18f: mov    %rax,%rbx
  0x0000000002ddc192: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002ddc19c: addq   $0x1,0x108(%rdx)
  0x0000000002ddc1a4: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002ddc1ae: mov    0xdc(%rbx),%edx
  0x0000000002ddc1b4: add    $0x8,%edx
  0x0000000002ddc1b7: mov    %edx,0xdc(%rbx)
  0x0000000002ddc1bd: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002ddc1c7: and    $0x7ffff8,%edx
  0x0000000002ddc1cd: cmp    $0x0,%edx
  0x0000000002ddc1d0: je     0x0000000002ddca1a
  0x0000000002ddc1d6: mov    $0x10,%ebx
  0x0000000002ddc1db: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002ddc1e5: mov    %rax,%r13
  0x0000000002ddc1e8: movslq %ebx,%rbx
  0x0000000002ddc1eb: mov    %rbx,%rdi
  0x0000000002ddc1ee: cmp    $0xffffff,%rbx
  0x0000000002ddc1f5: ja     0x0000000002ddca31
  0x0000000002ddc1fb: movabs $0x17,%rsi
  0x0000000002ddc205: lea    (%rsi,%rbx,2),%rsi
  0x0000000002ddc209: and    $0xfffffffffffffff8,%rsi
  0x0000000002ddc20d: mov    0x60(%r15),%rax
  0x0000000002ddc211: lea    (%rax,%rsi,1),%rsi
  0x0000000002ddc215: cmp    0x70(%r15),%rsi
  0x0000000002ddc219: ja     0x0000000002ddca31
  0x0000000002ddc21f: mov    %rsi,0x60(%r15)
  0x0000000002ddc223: sub    %rax,%rsi
  0x0000000002ddc226: movq   $0x1,(%rax)
  0x0000000002ddc22d: mov    %rdx,%rcx
  0x0000000002ddc230: shr    $0x3,%rcx
  0x0000000002ddc234: mov    %ecx,0x8(%rax)
  0x0000000002ddc237: mov    %ebx,0xc(%rax)
  0x0000000002ddc23a: sub    $0x10,%rsi
  0x0000000002ddc23e: je     0x0000000002ddc255
  0x0000000002ddc244: xor    %rbx,%rbx
  0x0000000002ddc247: shr    $0x3,%rsi
  0x0000000002ddc24b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002ddc250: dec    %rsi
  0x0000000002ddc253: jne    0x0000000002ddc24b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x0000000002ddc255: mov    %rax,%r10
  0x0000000002ddc258: shr    $0x3,%r10
  0x0000000002ddc25c: mov    %r10d,0x10(%r13)
  0x0000000002ddc260: mov    %r13,%rax
  0x0000000002ddc263: shr    $0x9,%rax
  0x0000000002ddc267: movabs $0xea5d000,%r8
  0x0000000002ddc271: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x0000000002ddc276: mov    %r13,%rax
  0x0000000002ddc279: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddc283: mov    0x8(%rax),%eax
  0x0000000002ddc286: shl    $0x3,%rax
  0x0000000002ddc28a: cmp    0x440(%r8),%rax
  0x0000000002ddc291: jne    0x0000000002ddc2a0
  0x0000000002ddc293: addq   $0x1,0x448(%r8)
  0x0000000002ddc29b: jmpq   0x0000000002ddc306
  0x0000000002ddc2a0: cmp    0x450(%r8),%rax
  0x0000000002ddc2a7: jne    0x0000000002ddc2b6
  0x0000000002ddc2a9: addq   $0x1,0x458(%r8)
  0x0000000002ddc2b1: jmpq   0x0000000002ddc306
  0x0000000002ddc2b6: cmpq   $0x0,0x440(%r8)
  0x0000000002ddc2c1: jne    0x0000000002ddc2da
  0x0000000002ddc2c3: mov    %rax,0x440(%r8)
  0x0000000002ddc2ca: movq   $0x1,0x448(%r8)
  0x0000000002ddc2d5: jmpq   0x0000000002ddc306
  0x0000000002ddc2da: cmpq   $0x0,0x450(%r8)
  0x0000000002ddc2e5: jne    0x0000000002ddc2fe
  0x0000000002ddc2e7: mov    %rax,0x450(%r8)
  0x0000000002ddc2ee: movq   $0x1,0x458(%r8)
  0x0000000002ddc2f9: jmpq   0x0000000002ddc306
  0x0000000002ddc2fe: addq   $0x1,0x438(%r8)
  0x0000000002ddc306: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc310: mov    0xdc(%r8),%edx
  0x0000000002ddc317: add    $0x8,%edx
  0x0000000002ddc31a: mov    %edx,0xdc(%r8)
  0x0000000002ddc321: movabs $0x1bce7958,%r8    ;   {metadata({method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc32b: and    $0x7ffff8,%edx
  0x0000000002ddc331: cmp    $0x0,%edx
  0x0000000002ddc334: je     0x0000000002ddca3b
  0x0000000002ddc33a: mov    %r13,%rax
  0x0000000002ddc33d: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc347: addq   $0x1,0x108(%r8)
  0x0000000002ddc34f: movabs $0x76bf1f0d0,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x0000000002ddc359: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)

  0x0000000002ddc35c: mov    %r13,0xd0(%rsp)
  0x0000000002ddc364: nop
  0x0000000002ddc365: nop
  0x0000000002ddc366: nop
  0x0000000002ddc367: callq  0x0000000002cf61a0  ; OopMap{[208]=Oop [224]=Oop off=6348}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {optimized virtual_call}
  0x0000000002ddc36c: mov    0xd0(%rsp),%rax
  0x0000000002ddc374: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddc37e: mov    0x8(%rax),%eax
  0x0000000002ddc381: shl    $0x3,%rax
  0x0000000002ddc385: cmp    0x470(%r8),%rax
  0x0000000002ddc38c: jne    0x0000000002ddc39b
  0x0000000002ddc38e: addq   $0x1,0x478(%r8)
  0x0000000002ddc396: jmpq   0x0000000002ddc401
  0x0000000002ddc39b: cmp    0x480(%r8),%rax
  0x0000000002ddc3a2: jne    0x0000000002ddc3b1
  0x0000000002ddc3a4: addq   $0x1,0x488(%r8)
  0x0000000002ddc3ac: jmpq   0x0000000002ddc401
  0x0000000002ddc3b1: cmpq   $0x0,0x470(%r8)
  0x0000000002ddc3bc: jne    0x0000000002ddc3d5
  0x0000000002ddc3be: mov    %rax,0x470(%r8)
  0x0000000002ddc3c5: movq   $0x1,0x478(%r8)
  0x0000000002ddc3d0: jmpq   0x0000000002ddc401
  0x0000000002ddc3d5: cmpq   $0x0,0x480(%r8)
  0x0000000002ddc3e0: jne    0x0000000002ddc3f9
  0x0000000002ddc3e2: mov    %rax,0x480(%r8)
  0x0000000002ddc3e9: movq   $0x1,0x488(%r8)
  0x0000000002ddc3f4: jmpq   0x0000000002ddc401
  0x0000000002ddc3f9: addq   $0x1,0x468(%r8)
  0x0000000002ddc401: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc40b: mov    0xdc(%r8),%edx
  0x0000000002ddc412: add    $0x8,%edx
  0x0000000002ddc415: mov    %edx,0xdc(%r8)
  0x0000000002ddc41c: movabs $0x1bce7e18,%r8    ;   {metadata({method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc426: and    $0x7ffff8,%edx
  0x0000000002ddc42c: cmp    $0x0,%edx
  0x0000000002ddc42f: je     0x0000000002ddca52
  0x0000000002ddc435: mov    0xd0(%rsp),%rax
  0x0000000002ddc43d: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc447: addq   $0x1,0x108(%r8)
  0x0000000002ddc44f: mov    0xd8(%rsp),%r8d
  0x0000000002ddc457: mov    0xd0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)

  0x0000000002ddc45f: callq  0x0000000002cf61a0  ; OopMap{[208]=Oop [224]=Oop off=6596}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {optimized virtual_call}
  0x0000000002ddc464: mov    0xd0(%rsp),%rax
  0x0000000002ddc46c: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddc476: mov    0x8(%rax),%eax
  0x0000000002ddc479: shl    $0x3,%rax
  0x0000000002ddc47d: cmp    0x4a0(%rdx),%rax
  0x0000000002ddc484: jne    0x0000000002ddc493
  0x0000000002ddc486: addq   $0x1,0x4a8(%rdx)
  0x0000000002ddc48e: jmpq   0x0000000002ddc4f9
  0x0000000002ddc493: cmp    0x4b0(%rdx),%rax
  0x0000000002ddc49a: jne    0x0000000002ddc4a9
  0x0000000002ddc49c: addq   $0x1,0x4b8(%rdx)
  0x0000000002ddc4a4: jmpq   0x0000000002ddc4f9
  0x0000000002ddc4a9: cmpq   $0x0,0x4a0(%rdx)
  0x0000000002ddc4b4: jne    0x0000000002ddc4cd
  0x0000000002ddc4b6: mov    %rax,0x4a0(%rdx)
  0x0000000002ddc4bd: movq   $0x1,0x4a8(%rdx)
  0x0000000002ddc4c8: jmpq   0x0000000002ddc4f9
  0x0000000002ddc4cd: cmpq   $0x0,0x4b0(%rdx)
  0x0000000002ddc4d8: jne    0x0000000002ddc4f1
  0x0000000002ddc4da: mov    %rax,0x4b0(%rdx)
  0x0000000002ddc4e1: movq   $0x1,0x4b8(%rdx)
  0x0000000002ddc4ec: jmpq   0x0000000002ddc4f9
  0x0000000002ddc4f1: addq   $0x1,0x498(%rdx)
  0x0000000002ddc4f9: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc503: mov    0xdc(%rdx),%esi
  0x0000000002ddc509: add    $0x8,%esi
  0x0000000002ddc50c: mov    %esi,0xdc(%rdx)
  0x0000000002ddc512: movabs $0x1bce8d08,%rdx   ;   {metadata({method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc51c: and    $0x7ffff8,%esi
  0x0000000002ddc522: cmp    $0x0,%esi
  0x0000000002ddc525: je     0x0000000002ddca69
  0x0000000002ddc52b: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002ddc535: mov    0x60(%r15),%rax
  0x0000000002ddc539: lea    0x18(%rax),%rdi
  0x0000000002ddc53d: cmp    0x70(%r15),%rdi
  0x0000000002ddc541: ja     0x0000000002ddca80
  0x0000000002ddc547: mov    %rdi,0x60(%r15)
  0x0000000002ddc54b: mov    0xa8(%rdx),%rcx
  0x0000000002ddc552: mov    %rcx,(%rax)
  0x0000000002ddc555: mov    %rdx,%rcx
  0x0000000002ddc558: shr    $0x3,%rcx
  0x0000000002ddc55c: mov    %ecx,0x8(%rax)
  0x0000000002ddc55f: xor    %rcx,%rcx
  0x0000000002ddc562: mov    %ecx,0xc(%rax)
  0x0000000002ddc565: xor    %rcx,%rcx
  0x0000000002ddc568: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000000002ddc56c: mov    0xd0(%rsp),%r8
  0x0000000002ddc574: mov    0x10(%r8),%r9d
  0x0000000002ddc578: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000000002ddc57c: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000000002ddc580: mov    %rax,%r8
  0x0000000002ddc583: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002ddc58d: addq   $0x1,0x108(%rdx)
  0x0000000002ddc595: mov    %r9,%r8
  0x0000000002ddc598: mov    $0x0,%r9d
  0x0000000002ddc59e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x0000000002ddc5a1: mov    %rax,0xe8(%rsp)
  0x0000000002ddc5a9: nop
  0x0000000002ddc5aa: nop
  0x0000000002ddc5ab: nop
  0x0000000002ddc5ac: nop
  0x0000000002ddc5ad: nop
  0x0000000002ddc5ae: nop
  0x0000000002ddc5af: callq  0x0000000002cf61a0  ; OopMap{[224]=Oop [232]=Oop off=6932}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {optimized virtual_call}
  0x0000000002ddc5b4: mov    0xe0(%rsp),%rax
  0x0000000002ddc5bc: movabs $0x1bfaa9d0,%r8    ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddc5c6: addq   $0x1,0x4c8(%r8)
  0x0000000002ddc5ce: mov    0xe8(%rsp),%r8
  0x0000000002ddc5d6: mov    0xe0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)

  0x0000000002ddc5de: nop
  0x0000000002ddc5df: callq  0x0000000002cf61a0  ; OopMap{[224]=Oop off=6980}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)
                                                ;   {optimized virtual_call}
  0x0000000002ddc5e4: mov    0xe0(%rsp),%rax
  0x0000000002ddc5ec: jmpq   0x0000000002ddcade  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@310 (line 634)

  0x0000000002ddc5f1: nopl   0x0(%rax)
  0x0000000002ddc5f8: jmpq   0x0000000002ddca9c  ;   {no_reloc}
  0x0000000002ddc5fd: add    %al,(%rax)
  0x0000000002ddc5ff: add    %al,(%rax)
  0x0000000002ddc601: add    %ch,%cl
  0x0000000002ddc603: lahf   
  0x0000000002ddc604: add    $0x0,%al
  0x0000000002ddc606: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.io.DataInputStream::readUTF@253 (line 630)

  0x0000000002ddc60a: movabs $0x1bfaa9d0,%rdx   ;   {metadata(method data for {method} {0x000000001bfaa198} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002ddc614: addq   $0x1,0x3f8(%rdx)
  0x0000000002ddc61c: movabs $0x76bf1f050,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x0000000002ddc626: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)

  0x0000000002ddc629: mov    %rax,0xf0(%rsp)
  0x0000000002ddc631: nop
  0x0000000002ddc632: nop
  0x0000000002ddc633: nop
  0x0000000002ddc634: nop
  0x0000000002ddc635: nop
  0x0000000002ddc636: nop
  0x0000000002ddc637: callq  0x0000000002cf61a0  ; OopMap{[240]=Oop off=7068}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)
                                                ;   {optimized virtual_call}
  0x0000000002ddc63c: mov    0xf0(%rsp),%rax
  0x0000000002ddc644: jmpq   0x0000000002ddcade
  0x0000000002ddc649: mov    %rsi,0x8(%rsp)
  0x0000000002ddc64e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc656: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=7099}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 589)
                                                ;   {runtime_call}
  0x0000000002ddc65b: jmpq   0x0000000002ddaae1
  0x0000000002ddc660: callq  0x0000000002dafac0  ; OopMap{rdx=Oop off=7109}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x0000000002ddc665: callq  0x0000000002dad680  ; OopMap{rdx=Oop off=7114}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x0000000002ddc66a: mov    %r11,(%rsp)
  0x0000000002ddc66e: callq  0x0000000002daf880  ; OopMap{r11=Oop off=7123}
                                                ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)
                                                ;   {runtime_call}
  0x0000000002ddc673: callq  0x0000000002dad680  ; OopMap{r11=Oop r8=Oop off=7128}
                                                ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)
                                                ;   {runtime_call}
  0x0000000002ddc678: callq  0x0000000002dad680  ; OopMap{r11=Oop r8=Oop off=7133}
                                                ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ;   {runtime_call}
  0x0000000002ddc67d: callq  0x0000000002dae700  ; OopMap{r11=Oop r8=Oop off=7138}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)
                                                ;   {runtime_call}
  0x0000000002ddc682: jmpq   0x0000000002ddae1c
  0x0000000002ddc687: callq  0x0000000002dae700  ; OopMap{r11=Oop r8=Oop off=7148}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)
                                                ;   {runtime_call}
  0x0000000002ddc68c: jmpq   0x0000000002ddaeb7
  0x0000000002ddc691: callq  0x0000000002dae700  ; OopMap{r11=Oop off=7158}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)
                                                ;   {runtime_call}
  0x0000000002ddc696: jmpq   0x0000000002ddaf70
  0x0000000002ddc69b: callq  0x0000000002dae700  ; OopMap{r11=Oop r8=Oop off=7168}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)
                                                ;   {runtime_call}
  0x0000000002ddc6a0: jmpq   0x0000000002ddafed
  0x0000000002ddc6a5: callq  0x0000000002dafac0  ; OopMap{r11=Oop rdx=Oop [128]=Oop off=7178}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {runtime_call}
  0x0000000002ddc6aa: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7183}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x0000000002ddc6af: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7188}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x0000000002ddc6b4: mov    %rsi,(%rsp)
  0x0000000002ddc6b8: callq  0x0000000002dac940  ; OopMap{rbx=Oop rdi=Oop off=7197}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x0000000002ddc6bd: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7202}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000000002ddc6c2: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7207}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000000002ddc6c7: mov    %rdx,(%rsp)
  0x0000000002ddc6cb: callq  0x0000000002dac940  ; OopMap{rbx=Oop rdi=Oop off=7216}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x0000000002ddc6d0: mov    %rdx,0x8(%rsp)
  0x0000000002ddc6d5: movq   $0x83,(%rsp)
  0x0000000002ddc6dd: callq  0x0000000002db1d60  ; OopMap{rbx=Oop rdi=Oop off=7234}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)
                                                ;   {runtime_call}
  0x0000000002ddc6e2: jmpq   0x0000000002ddb11c
  0x0000000002ddc6e7: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7244}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x0000000002ddc6ec: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7249}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x0000000002ddc6f1: mov    %rsi,(%rsp)
  0x0000000002ddc6f5: callq  0x0000000002dac940  ; OopMap{rbx=Oop rdi=Oop off=7258}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x0000000002ddc6fa: mov    %rcx,(%rsp)
  0x0000000002ddc6fe: callq  0x0000000002dac940  ; OopMap{rbx=Oop rdi=Oop off=7267}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)
                                                ;   {runtime_call}
  0x0000000002ddc703: mov    %rcx,(%rsp)
  0x0000000002ddc707: callq  0x0000000002dac940  ; OopMap{rbx=Oop rdi=Oop off=7276}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)
                                                ;   {runtime_call}
  0x0000000002ddc70c: mov    %r9,(%rsp)
  0x0000000002ddc710: callq  0x0000000002dac940  ; OopMap{rbx=Oop rdi=Oop off=7285}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)
                                                ;   {runtime_call}
  0x0000000002ddc715: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7290}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x0000000002ddc71a: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7295}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x0000000002ddc71f: mov    %r11,(%rsp)
  0x0000000002ddc723: callq  0x0000000002dac940  ; OopMap{rbx=Oop rdi=Oop off=7304}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x0000000002ddc728: mov    %rdx,0x8(%rsp)
  0x0000000002ddc72d: movq   $0x1ca,(%rsp)
  0x0000000002ddc735: callq  0x0000000002db1d60  ; OopMap{rbx=Oop rdi=Oop off=7322}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)
                                                ;   {runtime_call}
  0x0000000002ddc73a: jmpq   0x0000000002ddb40e
  0x0000000002ddc73f: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7332}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000000002ddc744: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7337}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000000002ddc749: mov    %r11,(%rsp)
  0x0000000002ddc74d: callq  0x0000000002dac940  ; OopMap{rbx=Oop rdi=Oop off=7346}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x0000000002ddc752: mov    %rdx,0x8(%rsp)
  0x0000000002ddc757: movq   $0x14d,(%rsp)
  0x0000000002ddc75f: callq  0x0000000002db1d60  ; OopMap{rbx=Oop rdi=Oop off=7364}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)
                                                ;   {runtime_call}
  0x0000000002ddc764: jmpq   0x0000000002ddb482
  0x0000000002ddc769: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7374}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x0000000002ddc76e: callq  0x0000000002dad680  ; OopMap{rbx=Oop rdi=Oop off=7379}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x0000000002ddc773: mov    %r11,(%rsp)
  0x0000000002ddc777: callq  0x0000000002dac940  ; OopMap{rbx=Oop rdi=Oop off=7388}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x0000000002ddc77c: mov    %rdx,0x8(%rsp)
  0x0000000002ddc781: movq   $0xf1,(%rsp)
  0x0000000002ddc789: callq  0x0000000002db1d60  ; OopMap{rbx=Oop rdi=Oop off=7406}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)
                                                ;   {runtime_call}
  0x0000000002ddc78e: jmpq   0x0000000002ddb4f1
  0x0000000002ddc793: mov    %rdx,%rdx
  0x0000000002ddc796: callq  0x0000000002dade00  ; OopMap{rbx=Oop off=7419}
                                                ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)
                                                ;   {runtime_call}
  0x0000000002ddc79b: jmpq   0x0000000002ddb55c
  0x0000000002ddc7a0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002ddc7aa: mov    $0xa050f00,%eax
  0x0000000002ddc7af: callq  0x0000000002db0ca0  ; OopMap{off=7444}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc7b4: jmpq   0x0000000002ddb5b0
  0x0000000002ddc7b9: mov    %rdx,%rdx
  0x0000000002ddc7bc: callq  0x0000000002dadb20  ; OopMap{off=7457}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc7c1: jmpq   0x0000000002ddb5bf
  0x0000000002ddc7c6: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002ddc7d0: mov    $0xa050f00,%eax
  0x0000000002ddc7d5: callq  0x0000000002db0ca0  ; OopMap{rax=Oop off=7482}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc7da: jmpq   0x0000000002ddb5c0
  0x0000000002ddc7df: mov    %rdx,%rdx
  0x0000000002ddc7e2: callq  0x0000000002dade00  ; OopMap{[160]=Oop off=7495}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc7e7: jmpq   0x0000000002ddb609
  0x0000000002ddc7ec: mov    %rbx,0x8(%rsp)
  0x0000000002ddc7f1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc7f9: callq  0x0000000002db1d60  ; OopMap{[160]=Oop rax=Oop off=7518}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc7fe: jmpq   0x0000000002ddb650
  0x0000000002ddc803: mov    %rbx,0x8(%rsp)
  0x0000000002ddc808: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc810: callq  0x0000000002db1d60  ; OopMap{[160]=Oop rax=Oop off=7541}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc815: jmpq   0x0000000002ddb697
  0x0000000002ddc81a: mov    %rbx,0x8(%rsp)
  0x0000000002ddc81f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc827: callq  0x0000000002db1d60  ; OopMap{[160]=Oop rax=Oop off=7564}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc82c: jmpq   0x0000000002ddb6de
  0x0000000002ddc831: callq  0x0000000002dae700  ; OopMap{[160]=Oop r13=Oop off=7574}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc836: jmpq   0x0000000002ddb75d
  0x0000000002ddc83b: mov    %r8,0x8(%rsp)
  0x0000000002ddc840: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc848: callq  0x0000000002db1d60  ; OopMap{[160]=Oop r13=Oop off=7597}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc84d: jmpq   0x0000000002ddb842
  0x0000000002ddc852: mov    %r8,0x8(%rsp)
  0x0000000002ddc857: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc85f: callq  0x0000000002db1d60  ; OopMap{[144]=Oop [160]=Oop off=7620}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc864: jmpq   0x0000000002ddb93d
  0x0000000002ddc869: mov    %rdx,0x8(%rsp)
  0x0000000002ddc86e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc876: callq  0x0000000002db1d60  ; OopMap{[144]=Oop [160]=Oop off=7643}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc87b: jmpq   0x0000000002ddba33
  0x0000000002ddc880: mov    %rdx,%rdx
  0x0000000002ddc883: callq  0x0000000002dade00  ; OopMap{[144]=Oop [160]=Oop off=7656}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x0000000002ddc888: jmpq   0x0000000002ddba74
  0x0000000002ddc88d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002ddc897: mov    $0xa050f00,%eax
  0x0000000002ddc89c: callq  0x0000000002db0ca0  ; OopMap{off=7681}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc8a1: jmpq   0x0000000002ddbb00
  0x0000000002ddc8a6: mov    %rdx,%rdx
  0x0000000002ddc8a9: callq  0x0000000002dadb20  ; OopMap{off=7694}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc8ae: jmpq   0x0000000002ddbb0f
  0x0000000002ddc8b3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002ddc8bd: mov    $0xa050f00,%eax
  0x0000000002ddc8c2: callq  0x0000000002db0ca0  ; OopMap{rax=Oop off=7719}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc8c7: jmpq   0x0000000002ddbb10
  0x0000000002ddc8cc: mov    %rdx,%rdx
  0x0000000002ddc8cf: callq  0x0000000002dade00  ; OopMap{[184]=Oop off=7732}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc8d4: jmpq   0x0000000002ddbb59
  0x0000000002ddc8d9: mov    %rbx,0x8(%rsp)
  0x0000000002ddc8de: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc8e6: callq  0x0000000002db1d60  ; OopMap{[184]=Oop rax=Oop off=7755}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc8eb: jmpq   0x0000000002ddbba0
  0x0000000002ddc8f0: mov    %rbx,0x8(%rsp)
  0x0000000002ddc8f5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc8fd: callq  0x0000000002db1d60  ; OopMap{[184]=Oop rax=Oop off=7778}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc902: jmpq   0x0000000002ddbbe7
  0x0000000002ddc907: mov    %rbx,0x8(%rsp)
  0x0000000002ddc90c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc914: callq  0x0000000002db1d60  ; OopMap{[184]=Oop rax=Oop off=7801}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc919: jmpq   0x0000000002ddbc2e
  0x0000000002ddc91e: callq  0x0000000002dae700  ; OopMap{[184]=Oop r14=Oop off=7811}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc923: jmpq   0x0000000002ddbcad
  0x0000000002ddc928: mov    %r8,0x8(%rsp)
  0x0000000002ddc92d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc935: callq  0x0000000002db1d60  ; OopMap{[184]=Oop r14=Oop off=7834}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc93a: jmpq   0x0000000002ddbd92
  0x0000000002ddc93f: mov    %r8,0x8(%rsp)
  0x0000000002ddc944: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc94c: callq  0x0000000002db1d60  ; OopMap{[176]=Oop [184]=Oop off=7857}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc951: jmpq   0x0000000002ddbe8d
  0x0000000002ddc956: mov    %rdx,0x8(%rsp)
  0x0000000002ddc95b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc963: callq  0x0000000002db1d60  ; OopMap{[176]=Oop [184]=Oop off=7880}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc968: jmpq   0x0000000002ddbf83
  0x0000000002ddc96d: mov    %rdx,%rdx
  0x0000000002ddc970: callq  0x0000000002dade00  ; OopMap{[176]=Oop [184]=Oop off=7893}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x0000000002ddc975: jmpq   0x0000000002ddbfc4
  0x0000000002ddc97a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002ddc984: mov    $0xa050f00,%eax
  0x0000000002ddc989: callq  0x0000000002db0ca0  ; OopMap{off=7918}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x0000000002ddc98e: jmpq   0x0000000002ddc050
  0x0000000002ddc993: mov    %rdx,%rdx
  0x0000000002ddc996: callq  0x0000000002dadb20  ; OopMap{off=7931}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x0000000002ddc99b: jmpq   0x0000000002ddc05f
  0x0000000002ddc9a0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002ddc9aa: mov    $0xa050f00,%eax
  0x0000000002ddc9af: callq  0x0000000002db0ca0  ; OopMap{off=7956}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddc9b4: jmpq   0x0000000002ddc0a8
  0x0000000002ddc9b9: mov    %rdx,%rdx
  0x0000000002ddc9bc: callq  0x0000000002dadb20  ; OopMap{off=7969}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddc9c1: jmpq   0x0000000002ddc0b7
  0x0000000002ddc9c6: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002ddc9d0: mov    $0xa050f00,%eax
  0x0000000002ddc9d5: callq  0x0000000002db0ca0  ; OopMap{rax=Oop off=7994}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddc9da: jmpq   0x0000000002ddc0b8
  0x0000000002ddc9df: mov    %rdx,%rdx
  0x0000000002ddc9e2: callq  0x0000000002dade00  ; OopMap{[224]=Oop off=8007}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddc9e7: jmpq   0x0000000002ddc101
  0x0000000002ddc9ec: mov    %rbx,0x8(%rsp)
  0x0000000002ddc9f1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddc9f9: callq  0x0000000002db1d60  ; OopMap{[224]=Oop rax=Oop off=8030}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddc9fe: jmpq   0x0000000002ddc148
  0x0000000002ddca03: mov    %rbx,0x8(%rsp)
  0x0000000002ddca08: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddca10: callq  0x0000000002db1d60  ; OopMap{[224]=Oop rax=Oop off=8053}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddca15: jmpq   0x0000000002ddc18f
  0x0000000002ddca1a: mov    %rbx,0x8(%rsp)
  0x0000000002ddca1f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddca27: callq  0x0000000002db1d60  ; OopMap{[224]=Oop rax=Oop off=8076}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddca2c: jmpq   0x0000000002ddc1d6
  0x0000000002ddca31: callq  0x0000000002dae700  ; OopMap{[224]=Oop r13=Oop off=8086}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddca36: jmpq   0x0000000002ddc255
  0x0000000002ddca3b: mov    %r8,0x8(%rsp)
  0x0000000002ddca40: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddca48: callq  0x0000000002db1d60  ; OopMap{[224]=Oop r13=Oop off=8109}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddca4d: jmpq   0x0000000002ddc33a
  0x0000000002ddca52: mov    %r8,0x8(%rsp)
  0x0000000002ddca57: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddca5f: callq  0x0000000002db1d60  ; OopMap{[208]=Oop [224]=Oop off=8132}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddca64: jmpq   0x0000000002ddc435
  0x0000000002ddca69: mov    %rdx,0x8(%rsp)
  0x0000000002ddca6e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002ddca76: callq  0x0000000002db1d60  ; OopMap{[208]=Oop [224]=Oop off=8155}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddca7b: jmpq   0x0000000002ddc52b
  0x0000000002ddca80: mov    %rdx,%rdx
  0x0000000002ddca83: callq  0x0000000002dade00  ; OopMap{[208]=Oop [224]=Oop off=8168}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x0000000002ddca88: jmpq   0x0000000002ddc56c
  0x0000000002ddca8d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002ddca97: mov    $0xa050f00,%eax
  0x0000000002ddca9c: callq  0x0000000002db0ca0  ; OopMap{off=8193}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x0000000002ddcaa1: jmpq   0x0000000002ddc5f8
  0x0000000002ddcaa6: mov    %rdx,%rdx
  0x0000000002ddcaa9: callq  0x0000000002dadb20  ; OopMap{off=8206}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x0000000002ddcaae: jmpq   0x0000000002ddc607
  0x0000000002ddcab3: nop
  0x0000000002ddcab4: nop
  0x0000000002ddcab5: mov    0x2a8(%r15),%rax
  0x0000000002ddcabc: movabs $0x0,%r10
  0x0000000002ddcac6: mov    %r10,0x2a8(%r15)
  0x0000000002ddcacd: movabs $0x0,%r10
  0x0000000002ddcad7: mov    %r10,0x2b0(%r15)
  0x0000000002ddcade: add    $0x100,%rsp
  0x0000000002ddcae5: pop    %rbp
  0x0000000002ddcae6: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002ddcaeb: hlt    
  0x0000000002ddcaec: hlt    
  0x0000000002ddcaed: hlt    
  0x0000000002ddcaee: hlt    
  0x0000000002ddcaef: hlt    
  0x0000000002ddcaf0: hlt    
  0x0000000002ddcaf1: hlt    
  0x0000000002ddcaf2: hlt    
  0x0000000002ddcaf3: hlt    
  0x0000000002ddcaf4: hlt    
  0x0000000002ddcaf5: hlt    
  0x0000000002ddcaf6: hlt    
  0x0000000002ddcaf7: hlt    
  0x0000000002ddcaf8: hlt    
  0x0000000002ddcaf9: hlt    
  0x0000000002ddcafa: hlt    
  0x0000000002ddcafb: hlt    
  0x0000000002ddcafc: hlt    
  0x0000000002ddcafd: hlt    
  0x0000000002ddcafe: hlt    
  0x0000000002ddcaff: hlt    
[Stub Code]
  0x0000000002ddcb00: nop                       ;   {no_reloc}
  0x0000000002ddcb01: nop
  0x0000000002ddcb02: nop
  0x0000000002ddcb03: nop
  0x0000000002ddcb04: nop
  0x0000000002ddcb05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb0f: jmpq   0x0000000002ddcb0f  ;   {runtime_call}
  0x0000000002ddcb14: nop
  0x0000000002ddcb15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb1f: jmpq   0x0000000002ddcb1f  ;   {runtime_call}
  0x0000000002ddcb24: nop
  0x0000000002ddcb25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb2f: jmpq   0x0000000002ddcb2f  ;   {runtime_call}
  0x0000000002ddcb34: nop
  0x0000000002ddcb35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb3f: jmpq   0x0000000002ddcb3f  ;   {runtime_call}
  0x0000000002ddcb44: nop
  0x0000000002ddcb45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb4f: jmpq   0x0000000002ddcb4f  ;   {runtime_call}
  0x0000000002ddcb54: nop
  0x0000000002ddcb55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb5f: jmpq   0x0000000002ddcb5f  ;   {runtime_call}
  0x0000000002ddcb64: nop
  0x0000000002ddcb65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb6f: jmpq   0x0000000002ddcb6f  ;   {runtime_call}
  0x0000000002ddcb74: nop
  0x0000000002ddcb75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb7f: jmpq   0x0000000002ddcb7f  ;   {runtime_call}
  0x0000000002ddcb84: nop
  0x0000000002ddcb85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb8f: jmpq   0x0000000002ddcb8f  ;   {runtime_call}
  0x0000000002ddcb94: nop
  0x0000000002ddcb95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcb9f: jmpq   0x0000000002ddcb9f  ;   {runtime_call}
  0x0000000002ddcba4: nop
  0x0000000002ddcba5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcbaf: jmpq   0x0000000002ddcbaf  ;   {runtime_call}
  0x0000000002ddcbb4: nop
  0x0000000002ddcbb5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcbbf: jmpq   0x0000000002ddcbbf  ;   {runtime_call}
  0x0000000002ddcbc4: nop
  0x0000000002ddcbc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcbcf: jmpq   0x0000000002ddcbcf  ;   {runtime_call}
  0x0000000002ddcbd4: nop
  0x0000000002ddcbd5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcbdf: jmpq   0x0000000002ddcbdf  ;   {runtime_call}
  0x0000000002ddcbe4: nop
  0x0000000002ddcbe5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcbef: jmpq   0x0000000002ddcbef  ;   {runtime_call}
  0x0000000002ddcbf4: nop
  0x0000000002ddcbf5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcbff: jmpq   0x0000000002ddcbff  ;   {runtime_call}
  0x0000000002ddcc04: nop
  0x0000000002ddcc05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002ddcc0f: jmpq   0x0000000002ddcc0f  ;   {runtime_call}
[Exception Handler]
  0x0000000002ddcc14: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002ddcc19: mov    %rsp,-0x28(%rsp)
  0x0000000002ddcc1e: sub    $0x80,%rsp
  0x0000000002ddcc25: mov    %rax,0x78(%rsp)
  0x0000000002ddcc2a: mov    %rcx,0x70(%rsp)
  0x0000000002ddcc2f: mov    %rdx,0x68(%rsp)
  0x0000000002ddcc34: mov    %rbx,0x60(%rsp)
  0x0000000002ddcc39: mov    %rbp,0x50(%rsp)
  0x0000000002ddcc3e: mov    %rsi,0x48(%rsp)
  0x0000000002ddcc43: mov    %rdi,0x40(%rsp)
  0x0000000002ddcc48: mov    %r8,0x38(%rsp)
  0x0000000002ddcc4d: mov    %r9,0x30(%rsp)
  0x0000000002ddcc52: mov    %r10,0x28(%rsp)
  0x0000000002ddcc57: mov    %r11,0x20(%rsp)
  0x0000000002ddcc5c: mov    %r12,0x18(%rsp)
  0x0000000002ddcc61: mov    %r13,0x10(%rsp)
  0x0000000002ddcc66: mov    %r14,0x8(%rsp)
  0x0000000002ddcc6b: mov    %r15,(%rsp)
  0x0000000002ddcc6f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002ddcc79: movabs $0x2ddcc19,%rdx    ;   {internal_word}
  0x0000000002ddcc83: mov    %rsp,%r8
  0x0000000002ddcc86: and    $0xfffffffffffffff0,%rsp
  0x0000000002ddcc8a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002ddcc8f: hlt    
[Deopt Handler Code]
  0x0000000002ddcc90: movabs $0x2ddcc90,%r10    ;   {section_word}
  0x0000000002ddcc9a: push   %r10
  0x0000000002ddcc9c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002ddcca1: hlt    
  0x0000000002ddcca2: hlt    
  0x0000000002ddcca3: hlt    
  0x0000000002ddcca4: hlt    
  0x0000000002ddcca5: hlt    
  0x0000000002ddcca6: hlt    
  0x0000000002ddcca7: hlt    
<nmethod compile_id='66' compiler='C1' level='3' entry='0x0000000002ddaaa0' size='15216' address='0x0000000002dda6d0' relocation_offset='288' insts_offset='976' stub_offset='9264' scopes_data_offset='9784' scopes_pcs_offset='12032' dependencies_offset='15072' nul_chk_table_offset='15088' oops_offset='9688' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='597' backedge_count='8539' iicount='597' stamp='1.458'/>
<writer thread='8664'/>
<task_queued compile_id='72' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='5508' iicount='5508' stamp='1.458' comment='tiered' hot_count='5508'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dd10d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002dd1200: mov    0x8(%rdx),%r10d
  0x0000000002dd1204: shl    $0x3,%r10
  0x0000000002dd1208: cmp    %r10,%rax
  0x0000000002dd120b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd1211: data16 xchg %ax,%ax
  0x0000000002dd1214: nopl   0x0(%rax,%rax,1)
  0x0000000002dd121c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd1220: mov    %eax,-0x6000(%rsp)
  0x0000000002dd1227: push   %rbp
  0x0000000002dd1228: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)

  0x0000000002dd122c: mov    0x20(%rdx),%r10d   ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x0000000002dd1230: test   %r10d,%r10d
  0x0000000002dd1233: je     0x0000000002dd1245  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x0000000002dd1235: lea    (%r12,%r10,8),%rax  ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x0000000002dd1239: add    $0x20,%rsp
  0x0000000002dd123d: pop    %rbp
  0x0000000002dd123e: test   %eax,-0x21d1244(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dd1244: retq   
  0x0000000002dd1245: mov    $0xffffff65,%edx
  0x0000000002dd124a: mov    %r10d,(%rsp)
  0x0000000002dd124e: nop
  0x0000000002dd124f: callq  0x0000000002cf57a0  ; OopMap{[0]=NarrowOop off=84}
                                                ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ;   {runtime_call}
  0x0000000002dd1254: int3                      ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x0000000002dd1255: hlt    
  0x0000000002dd1256: hlt    
  0x0000000002dd1257: hlt    
  0x0000000002dd1258: hlt    
  0x0000000002dd1259: hlt    
  0x0000000002dd125a: hlt    
  0x0000000002dd125b: hlt    
  0x0000000002dd125c: hlt    
  0x0000000002dd125d: hlt    
  0x0000000002dd125e: hlt    
  0x0000000002dd125f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dd1260: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dd1265: callq  0x0000000002dd126a
  0x0000000002dd126a: subq   $0x5,(%rsp)
  0x0000000002dd126f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd1274: hlt    
  0x0000000002dd1275: hlt    
  0x0000000002dd1276: hlt    
  0x0000000002dd1277: hlt    
<nmethod compile_id='72' compiler='C2' level='4' entry='0x0000000002dd1200' size='608' address='0x0000000002dd10d0' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='472' dependencies_offset='600' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='6364' iicount='6364' stamp='1.460'/>
<make_not_entrant thread='30136' compile_id='64' compiler='C1' level='3' stamp='1.460'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dd56d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;
  # this:     rdx:rdx   = &apos;java/io/DataInputStream&apos;
  # parm0:    r8:r8     = &apos;[B&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x80]  (sp of caller)
  0x0000000002dd5880: mov    0x8(%rdx),%r10d
  0x0000000002dd5884: shl    $0x3,%r10
  0x0000000002dd5888: cmp    %rax,%r10
  0x0000000002dd588b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd5891: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd589c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd58a0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd58a7: push   %rbp
  0x0000000002dd58a8: sub    $0x70,%rsp
  0x0000000002dd58ac: mov    %rdx,0x38(%rsp)
  0x0000000002dd58b1: mov    %r8,0x48(%rsp)
  0x0000000002dd58b6: mov    %r9d,0x40(%rsp)
  0x0000000002dd58bb: mov    %edi,0x34(%rsp)
  0x0000000002dd58bf: movabs $0x1bfabb10,%rsi   ;   {metadata(method data for {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd58c9: mov    0xdc(%rsi),%ebx
  0x0000000002dd58cf: add    $0x8,%ebx
  0x0000000002dd58d2: mov    %ebx,0xdc(%rsi)
  0x0000000002dd58d8: movabs $0x1bfa9460,%rsi   ;   {metadata({method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd58e2: and    $0x1ff8,%ebx
  0x0000000002dd58e8: cmp    $0x0,%ebx
  0x0000000002dd58eb: je     0x0000000002dd5b66  ;*iload_3
                                                ; - java.io.DataInputStream::readFully@0 (line 191)

  0x0000000002dd58f1: cmp    $0x0,%edi
  0x0000000002dd58f4: movabs $0x1bfabb10,%rsi   ;   {metadata(method data for {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd58fe: movabs $0x108,%rbx
  0x0000000002dd5908: jge    0x0000000002dd5918
  0x0000000002dd590e: movabs $0x118,%rbx
  0x0000000002dd5918: mov    (%rsi,%rbx,1),%rax
  0x0000000002dd591c: lea    0x1(%rax),%rax
  0x0000000002dd5920: mov    %rax,(%rsi,%rbx,1)
  0x0000000002dd5924: jl     0x0000000002dd5b26  ;*ifge
                                                ; - java.io.DataInputStream::readFully@1 (line 191)

  0x0000000002dd592a: mov    $0x0,%esi
  0x0000000002dd592f: jmpq   0x0000000002dd5a9f  ;*iload
                                                ; - java.io.DataInputStream::readFully@15 (line 194)

  0x0000000002dd5934: nopl   0x0(%rax)
  0x0000000002dd5938: mov    0xc(%rdx),%ebx
  0x0000000002dd593b: shl    $0x3,%rbx          ;*getfield in
                                                ; - java.io.DataInputStream::readFully@22 (line 195)

  0x0000000002dd593f: cmp    (%rbx),%rax        ; implicit exception: dispatches to 0x0000000002dd5b7d
  0x0000000002dd5942: mov    %rbx,%rax
  0x0000000002dd5945: movabs $0x1bfabb10,%rcx   ;   {metadata(method data for {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd594f: mov    0x8(%rax),%eax
  0x0000000002dd5952: shl    $0x3,%rax
  0x0000000002dd5956: cmp    0x160(%rcx),%rax
  0x0000000002dd595d: jne    0x0000000002dd596c
  0x0000000002dd595f: addq   $0x1,0x168(%rcx)
  0x0000000002dd5967: jmpq   0x0000000002dd59d2
  0x0000000002dd596c: cmp    0x170(%rcx),%rax
  0x0000000002dd5973: jne    0x0000000002dd5982
  0x0000000002dd5975: addq   $0x1,0x178(%rcx)
  0x0000000002dd597d: jmpq   0x0000000002dd59d2
  0x0000000002dd5982: cmpq   $0x0,0x160(%rcx)
  0x0000000002dd598d: jne    0x0000000002dd59a6
  0x0000000002dd598f: mov    %rax,0x160(%rcx)
  0x0000000002dd5996: movq   $0x1,0x168(%rcx)
  0x0000000002dd59a1: jmpq   0x0000000002dd59d2
  0x0000000002dd59a6: cmpq   $0x0,0x170(%rcx)
  0x0000000002dd59b1: jne    0x0000000002dd59ca
  0x0000000002dd59b3: mov    %rax,0x170(%rcx)
  0x0000000002dd59ba: movq   $0x1,0x178(%rcx)
  0x0000000002dd59c5: jmpq   0x0000000002dd59d2
  0x0000000002dd59ca: addq   $0x1,0x158(%rcx)
  0x0000000002dd59d2: mov    %rsi,%rax
  0x0000000002dd59d5: add    %r9d,%eax
  0x0000000002dd59d8: mov    %rdi,%rcx
  0x0000000002dd59db: sub    %esi,%ecx
  0x0000000002dd59dd: mov    %r8,%r11
  0x0000000002dd59e0: mov    %r11,%r8
  0x0000000002dd59e3: mov    %rax,%r9
  0x0000000002dd59e6: mov    %rcx,%rdi
  0x0000000002dd59e9: mov    %rbx,%rdx          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)

  0x0000000002dd59ec: mov    %esi,0x30(%rsp)
  0x0000000002dd59f0: nop
  0x0000000002dd59f1: nop
  0x0000000002dd59f2: nop
  0x0000000002dd59f3: nop
  0x0000000002dd59f4: nop
  0x0000000002dd59f5: movabs $0xffffffffffffffff,%rax
  0x0000000002dd59ff: callq  0x0000000002cf63e0  ; OopMap{[56]=Oop [72]=Oop off=388}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {virtual_call}
  0x0000000002dd5a04: cmp    $0x0,%eax
  0x0000000002dd5a07: movabs $0x1bfabb10,%rdx   ;   {metadata(method data for {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd5a11: movabs $0x188,%rsi
  0x0000000002dd5a1b: jge    0x0000000002dd5a2b
  0x0000000002dd5a21: movabs $0x198,%rsi
  0x0000000002dd5a2b: mov    (%rdx,%rsi,1),%rdi
  0x0000000002dd5a2f: lea    0x1(%rdi),%rdi
  0x0000000002dd5a33: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002dd5a37: jl     0x0000000002dd5ae3  ;*ifge
                                                ; - java.io.DataInputStream::readFully@41 (line 196)

  0x0000000002dd5a3d: add    0x30(%rsp),%eax
  0x0000000002dd5a41: movabs $0x1bfabb10,%rdx   ;   {metadata(method data for {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd5a4b: mov    0xe0(%rdx),%esi
  0x0000000002dd5a51: add    $0x8,%esi
  0x0000000002dd5a54: mov    %esi,0xe0(%rdx)
  0x0000000002dd5a5a: movabs $0x1bfa9460,%rdx   ;   {metadata({method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd5a64: and    $0xfff8,%esi
  0x0000000002dd5a6a: cmp    $0x0,%esi
  0x0000000002dd5a6d: je     0x0000000002dd5b82  ; OopMap{[56]=Oop [72]=Oop off=499}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x0000000002dd5a73: test   %eax,-0x21d5979(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dd5a79: movabs $0x1bfabb10,%rdx   ;   {metadata(method data for {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd5a83: incl   0x1b8(%rdx)
  0x0000000002dd5a89: mov    %rax,%rsi          ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)

  0x0000000002dd5a8c: mov    0x34(%rsp),%edi
  0x0000000002dd5a90: mov    0x40(%rsp),%r9d
  0x0000000002dd5a95: mov    0x48(%rsp),%r8
  0x0000000002dd5a9a: mov    0x38(%rsp),%rdx
  0x0000000002dd5a9f: cmp    %edi,%esi
  0x0000000002dd5aa1: movabs $0x1bfabb10,%rbx   ;   {metadata(method data for {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd5aab: movabs $0x138,%rax
  0x0000000002dd5ab5: jge    0x0000000002dd5ac5
  0x0000000002dd5abb: movabs $0x148,%rax
  0x0000000002dd5ac5: mov    (%rbx,%rax,1),%rcx
  0x0000000002dd5ac9: lea    0x1(%rcx),%rcx
  0x0000000002dd5acd: mov    %rcx,(%rbx,%rax,1)
  0x0000000002dd5ad1: jl     0x0000000002dd5938  ;*if_icmpge
                                                ; - java.io.DataInputStream::readFully@18 (line 194)

  0x0000000002dd5ad7: add    $0x70,%rsp
  0x0000000002dd5adb: pop    %rbp
  0x0000000002dd5adc: test   %eax,-0x21d59e2(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd5ae2: retq                      ;*return
                                                ; - java.io.DataInputStream::readFully@62 (line 200)

  0x0000000002dd5ae3: nopl   0x0(%rax,%rax,1)
  0x0000000002dd5ae8: jmpq   0x0000000002dd5ba8  ;   {no_reloc}
  0x0000000002dd5aed: add    %al,(%rax)
  0x0000000002dd5aef: add    %al,(%rax)
  0x0000000002dd5af1: add    %ch,%cl
  0x0000000002dd5af3: mov    $0x48000000,%ebx   ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)

  0x0000000002dd5af8: mov    %eax,%edx
  0x0000000002dd5afa: movabs $0x1bfabb10,%rsi   ;   {metadata(method data for {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd5b04: addq   $0x1,0x1a8(%rsi)
  0x0000000002dd5b0c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)

  0x0000000002dd5b0f: mov    %rax,0x50(%rsp)
  0x0000000002dd5b14: nop
  0x0000000002dd5b15: nop
  0x0000000002dd5b16: nop
  0x0000000002dd5b17: callq  0x0000000002cf61a0  ; OopMap{[80]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@48 (line 197)
                                                ;   {optimized virtual_call}
  0x0000000002dd5b1c: mov    0x50(%rsp),%rax
  0x0000000002dd5b21: jmpq   0x0000000002dd5c10  ;*athrow
                                                ; - java.io.DataInputStream::readFully@51 (line 197)

  0x0000000002dd5b26: xchg   %ax,%ax
  0x0000000002dd5b28: jmpq   0x0000000002dd5bce  ;   {no_reloc}
  0x0000000002dd5b2d: add    %al,(%rax)
  0x0000000002dd5b2f: add    %al,(%rax)
  0x0000000002dd5b31: add    %ch,%cl
  0x0000000002dd5b33: movabs 0xbe48d08b48000000,%eax  ;*new
                                                ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {metadata(method data for {method} {0x000000001bfa9468} &apos;readFully&apos; &apos;([BII)V&apos; in &apos;java/io/DataInputStream&apos;)}
  0x0000000002dd5b3c: adc    %bh,0x1bfa(%rbx)
  0x0000000002dd5b42: add    %al,(%rax)
  0x0000000002dd5b44: addq   $0x1,0x128(%rsi)
  0x0000000002dd5b4c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)

  0x0000000002dd5b4f: mov    %rax,0x58(%rsp)
  0x0000000002dd5b54: nop
  0x0000000002dd5b55: nop
  0x0000000002dd5b56: nop
  0x0000000002dd5b57: callq  0x0000000002cf61a0  ; OopMap{[88]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readFully@8 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000002dd5b5c: mov    0x58(%rsp),%rax
  0x0000000002dd5b61: jmpq   0x0000000002dd5c10
  0x0000000002dd5b66: mov    %rsi,0x8(%rsp)
  0x0000000002dd5b6b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd5b73: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop off=760}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readFully@-1 (line 191)
                                                ;   {runtime_call}
  0x0000000002dd5b78: jmpq   0x0000000002dd58f1
  0x0000000002dd5b7d: callq  0x0000000002dad680  ; OopMap{rdx=Oop [56]=Oop r8=Oop [72]=Oop rbx=Oop off=770}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readFully@34 (line 195)
                                                ;   {runtime_call}
  0x0000000002dd5b82: mov    %rdx,0x8(%rsp)
  0x0000000002dd5b87: movq   $0x3b,(%rsp)
  0x0000000002dd5b8f: callq  0x0000000002db1d60  ; OopMap{[56]=Oop [72]=Oop off=788}
                                                ;*goto
                                                ; - java.io.DataInputStream::readFully@59 (line 199)
                                                ;   {runtime_call}
  0x0000000002dd5b94: jmpq   0x0000000002dd5a73
  0x0000000002dd5b99: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd5ba3: mov    $0xa050f00,%eax
  0x0000000002dd5ba8: callq  0x0000000002db0ca0  ; OopMap{off=813}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x0000000002dd5bad: jmpq   0x0000000002dd5ae8
  0x0000000002dd5bb2: mov    %rdx,%rdx
  0x0000000002dd5bb5: callq  0x0000000002dadb20  ; OopMap{off=826}
                                                ;*new  ; - java.io.DataInputStream::readFully@44 (line 197)
                                                ;   {runtime_call}
  0x0000000002dd5bba: jmpq   0x0000000002dd5af7
  0x0000000002dd5bbf: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd5bc9: mov    $0xa050f00,%eax
  0x0000000002dd5bce: callq  0x0000000002db0ca0  ; OopMap{off=851}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x0000000002dd5bd3: jmpq   0x0000000002dd5b28
  0x0000000002dd5bd8: mov    %rdx,%rdx
  0x0000000002dd5bdb: callq  0x0000000002dadb20  ; OopMap{off=864}
                                                ;*new  ; - java.io.DataInputStream::readFully@4 (line 192)
                                                ;   {runtime_call}
  0x0000000002dd5be0: jmpq   0x0000000002dd5b37
  0x0000000002dd5be5: nop
  0x0000000002dd5be6: nop
  0x0000000002dd5be7: mov    0x2a8(%r15),%rax
  0x0000000002dd5bee: movabs $0x0,%r10
  0x0000000002dd5bf8: mov    %r10,0x2a8(%r15)
  0x0000000002dd5bff: movabs $0x0,%r10
  0x0000000002dd5c09: mov    %r10,0x2b0(%r15)
  0x0000000002dd5c10: add    $0x70,%rsp
  0x0000000002dd5c14: pop    %rbp
  0x0000000002dd5c15: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd5c1a: hlt    
  0x0000000002dd5c1b: hlt    
  0x0000000002dd5c1c: hlt    
  0x0000000002dd5c1d: hlt    
  0x0000000002dd5c1e: hlt    
  0x0000000002dd5c1f: hlt    
[Stub Code]
  0x0000000002dd5c20: nop                       ;   {no_reloc}
  0x0000000002dd5c21: nop
  0x0000000002dd5c22: nop
  0x0000000002dd5c23: nop
  0x0000000002dd5c24: nop
  0x0000000002dd5c25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd5c2f: jmpq   0x0000000002dd5c2f  ;   {runtime_call}
  0x0000000002dd5c34: nop
  0x0000000002dd5c35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd5c3f: jmpq   0x0000000002dd5c3f  ;   {runtime_call}
  0x0000000002dd5c44: nop
  0x0000000002dd5c45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd5c4f: jmpq   0x0000000002dd5c4f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dd5c54: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dd5c59: mov    %rsp,-0x28(%rsp)
  0x0000000002dd5c5e: sub    $0x80,%rsp
  0x0000000002dd5c65: mov    %rax,0x78(%rsp)
  0x0000000002dd5c6a: mov    %rcx,0x70(%rsp)
  0x0000000002dd5c6f: mov    %rdx,0x68(%rsp)
  0x0000000002dd5c74: mov    %rbx,0x60(%rsp)
  0x0000000002dd5c79: mov    %rbp,0x50(%rsp)
  0x0000000002dd5c7e: mov    %rsi,0x48(%rsp)
  0x0000000002dd5c83: mov    %rdi,0x40(%rsp)
  0x0000000002dd5c88: mov    %r8,0x38(%rsp)
  0x0000000002dd5c8d: mov    %r9,0x30(%rsp)
  0x0000000002dd5c92: mov    %r10,0x28(%rsp)
  0x0000000002dd5c97: mov    %r11,0x20(%rsp)
  0x0000000002dd5c9c: mov    %r12,0x18(%rsp)
  0x0000000002dd5ca1: mov    %r13,0x10(%rsp)
  0x0000000002dd5ca6: mov    %r14,0x8(%rsp)
  0x0000000002dd5cab: mov    %r15,(%rsp)
  0x0000000002dd5caf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd5cb9: movabs $0x2dd5c59,%rdx    ;   {internal_word}
  0x0000000002dd5cc3: mov    %rsp,%r8
  0x0000000002dd5cc6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd5cca: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd5ccf: hlt    
[Deopt Handler Code]
  0x0000000002dd5cd0: movabs $0x2dd5cd0,%r10    ;   {section_word}
  0x0000000002dd5cda: push   %r10
  0x0000000002dd5cdc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd5ce1: hlt    
  0x0000000002dd5ce2: hlt    
  0x0000000002dd5ce3: hlt    
  0x0000000002dd5ce4: hlt    
  0x0000000002dd5ce5: hlt    
  0x0000000002dd5ce6: hlt    
  0x0000000002dd5ce7: hlt    
<nmethod compile_id='70' compiler='C1' level='3' entry='0x0000000002dd5880' size='2232' address='0x0000000002dd56d0' relocation_offset='288' insts_offset='432' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1776' dependencies_offset='2208' nul_chk_table_offset='2216' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='978' backedge_count='978' iicount='978' stamp='1.468'/>
<writer thread='8664'/>
<task_queued compile_id='73' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1408' iicount='1408' level='3' stamp='1.468' comment='tiered' hot_count='1408'/>
<task_queued compile_id='74' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='896' iicount='896' level='3' stamp='1.468' comment='tiered' hot_count='896'/>
<task_queued compile_id='75' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='896' iicount='896' level='3' stamp='1.468' comment='tiered' hot_count='896'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dd4cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdc0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000000002dd4e60: mov    0x8(%rdx),%r10d
  0x0000000002dd4e64: shl    $0x3,%r10
  0x0000000002dd4e68: cmp    %rax,%r10
  0x0000000002dd4e6b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd4e71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd4e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd4e80: mov    %eax,-0x6000(%rsp)
  0x0000000002dd4e87: push   %rbp
  0x0000000002dd4e88: sub    $0x80,%rsp
  0x0000000002dd4e8f: mov    %rdx,0x50(%rsp)
  0x0000000002dd4e94: lea    0x60(%rsp),%rsi
  0x0000000002dd4e99: mov    %rdx,0x8(%rsi)
  0x0000000002dd4e9d: mov    (%rdx),%rax
  0x0000000002dd4ea0: mov    %rax,%rdi
  0x0000000002dd4ea3: and    $0x7,%rdi
  0x0000000002dd4ea7: cmp    $0x5,%rdi
  0x0000000002dd4eab: jne    0x0000000002dd4f32
  0x0000000002dd4eb1: mov    0x8(%rdx),%edi
  0x0000000002dd4eb4: shl    $0x3,%rdi
  0x0000000002dd4eb8: mov    0xa8(%rdi),%rdi
  0x0000000002dd4ebf: or     %r15,%rdi
  0x0000000002dd4ec2: xor    %rax,%rdi
  0x0000000002dd4ec5: and    $0xffffffffffffff87,%rdi
  0x0000000002dd4ec9: je     0x0000000002dd4f5a
  0x0000000002dd4ecf: test   $0x7,%rdi
  0x0000000002dd4ed6: jne    0x0000000002dd4f1f
  0x0000000002dd4ed8: test   $0x300,%rdi
  0x0000000002dd4edf: jne    0x0000000002dd4efe
  0x0000000002dd4ee1: and    $0x37f,%rax
  0x0000000002dd4ee8: mov    %rax,%rdi
  0x0000000002dd4eeb: or     %r15,%rdi
  0x0000000002dd4eee: lock cmpxchg %rdi,(%rdx)
  0x0000000002dd4ef3: jne    0x0000000002dd51e6
  0x0000000002dd4ef9: jmpq   0x0000000002dd4f5a
  0x0000000002dd4efe: mov    0x8(%rdx),%edi
  0x0000000002dd4f01: shl    $0x3,%rdi
  0x0000000002dd4f05: mov    0xa8(%rdi),%rdi
  0x0000000002dd4f0c: or     %r15,%rdi
  0x0000000002dd4f0f: lock cmpxchg %rdi,(%rdx)
  0x0000000002dd4f14: jne    0x0000000002dd51e6
  0x0000000002dd4f1a: jmpq   0x0000000002dd4f5a
  0x0000000002dd4f1f: mov    0x8(%rdx),%edi
  0x0000000002dd4f22: shl    $0x3,%rdi
  0x0000000002dd4f26: mov    0xa8(%rdi),%rdi
  0x0000000002dd4f2d: lock cmpxchg %rdi,(%rdx)
  0x0000000002dd4f32: mov    (%rdx),%rax
  0x0000000002dd4f35: or     $0x1,%rax
  0x0000000002dd4f39: mov    %rax,(%rsi)
  0x0000000002dd4f3c: lock cmpxchg %rsi,(%rdx)
  0x0000000002dd4f41: je     0x0000000002dd4f5a
  0x0000000002dd4f47: sub    %rsp,%rax
  0x0000000002dd4f4a: and    $0xfffffffffffff007,%rax
  0x0000000002dd4f51: mov    %rax,(%rsi)
  0x0000000002dd4f54: jne    0x0000000002dd51e6
  0x0000000002dd4f5a: movabs $0x1bfab0f8,%rsi   ;   {metadata(method data for {method} {0x000000001bdc0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4f64: mov    0xdc(%rsi),%edi
  0x0000000002dd4f6a: add    $0x8,%edi
  0x0000000002dd4f6d: mov    %edi,0xdc(%rsi)
  0x0000000002dd4f73: movabs $0x1bdc0278,%rsi   ;   {metadata({method} {0x000000001bdc0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4f7d: and    $0x1ff8,%edi
  0x0000000002dd4f83: cmp    $0x0,%edi
  0x0000000002dd4f86: je     0x0000000002dd51f9  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 264)

  0x0000000002dd4f8c: mov    0x14(%rdx),%esi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@1 (line 264)

  0x0000000002dd4f8f: mov    0x10(%rdx),%edi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@5 (line 264)

  0x0000000002dd4f92: cmp    %edi,%esi
  0x0000000002dd4f94: movabs $0x1bfab0f8,%rsi   ;   {metadata(method data for {method} {0x000000001bdc0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4f9e: movabs $0x108,%rdi
  0x0000000002dd4fa8: jl     0x0000000002dd4fb8
  0x0000000002dd4fae: movabs $0x118,%rdi
  0x0000000002dd4fb8: mov    (%rsi,%rdi,1),%rbx
  0x0000000002dd4fbc: lea    0x1(%rbx),%rbx
  0x0000000002dd4fc0: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002dd4fc4: jl     0x0000000002dd502f  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@8 (line 264)

  0x0000000002dd4fca: mov    %rdx,%rsi
  0x0000000002dd4fcd: movabs $0x1bfab0f8,%rdi   ;   {metadata(method data for {method} {0x000000001bdc0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4fd7: addq   $0x1,0x128(%rdi)
  0x0000000002dd4fdf: mov    %rdx,%rsi
  0x0000000002dd4fe2: mov    %rsi,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)

  0x0000000002dd4fe5: nop
  0x0000000002dd4fe6: nop
  0x0000000002dd4fe7: callq  0x0000000002cf61a0  ; OopMap{[80]=Oop [104]=Oop off=396}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {optimized virtual_call}
  0x0000000002dd4fec: mov    0x50(%rsp),%rdx
  0x0000000002dd4ff1: mov    0x14(%rdx),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@16 (line 266)

  0x0000000002dd4ff4: mov    0x10(%rdx),%esi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@20 (line 266)

  0x0000000002dd4ff7: cmp    %esi,%eax
  0x0000000002dd4ff9: movabs $0x1bfab0f8,%rax   ;   {metadata(method data for {method} {0x000000001bdc0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd5003: movabs $0x138,%rsi
  0x0000000002dd500d: jl     0x0000000002dd501d
  0x0000000002dd5013: movabs $0x148,%rsi
  0x0000000002dd501d: mov    (%rax,%rsi,1),%rdi
  0x0000000002dd5021: lea    0x1(%rdi),%rdi
  0x0000000002dd5025: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dd5029: jge    0x0000000002dd511c  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)

  0x0000000002dd502f: mov    %rdx,%rax
  0x0000000002dd5032: movabs $0x1bfab0f8,%rsi   ;   {metadata(method data for {method} {0x000000001bdc0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd503c: addq   $0x1,0x158(%rsi)
  0x0000000002dd5044: movabs $0x1bfaa748,%rax   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd504e: mov    0xdc(%rax),%esi
  0x0000000002dd5054: add    $0x8,%esi
  0x0000000002dd5057: mov    %esi,0xdc(%rax)
  0x0000000002dd505d: movabs $0x1bdbfec8,%rax   ;   {metadata({method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd5067: and    $0x7ffff8,%esi
  0x0000000002dd506d: cmp    $0x0,%esi
  0x0000000002dd5070: je     0x0000000002dd5210
  0x0000000002dd5076: mov    0x20(%rdx),%eax
  0x0000000002dd5079: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000000002dd507d: cmp    $0x0,%rax
  0x0000000002dd5081: movabs $0x1bfaa748,%rsi   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd508b: movabs $0x108,%rdi
  0x0000000002dd5095: jne    0x0000000002dd50a5
  0x0000000002dd509b: movabs $0x118,%rdi
  0x0000000002dd50a5: mov    (%rsi,%rdi,1),%rcx
  0x0000000002dd50a9: lea    0x1(%rcx),%rcx
  0x0000000002dd50ad: mov    %rcx,(%rsi,%rdi,1)
  0x0000000002dd50b1: je     0x0000000002dd5161  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000000002dd50b7: mov    0x14(%rdx),%esi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)

  0x0000000002dd50ba: mov    %rsi,%rdi
  0x0000000002dd50bd: inc    %edi
  0x0000000002dd50bf: mov    %edi,0x14(%rdx)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)

  0x0000000002dd50c2: movslq %esi,%rdx
  0x0000000002dd50c5: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002dd5227
  0x0000000002dd50c8: jae    0x0000000002dd5231
  0x0000000002dd50ce: movsbl 0x10(%rax,%rdx,1),%edx  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)

  0x0000000002dd50d3: lea    0x60(%rsp),%rax
  0x0000000002dd50d8: mov    0x8(%rax),%rdi
  0x0000000002dd50dc: mov    (%rdi),%rsi
  0x0000000002dd50df: and    $0x7,%rsi
  0x0000000002dd50e3: cmp    $0x5,%rsi
  0x0000000002dd50e7: je     0x0000000002dd5104
  0x0000000002dd50ed: mov    (%rax),%rsi
  0x0000000002dd50f0: test   %rsi,%rsi
  0x0000000002dd50f3: je     0x0000000002dd5104
  0x0000000002dd50f9: lock cmpxchg %rsi,(%rdi)
  0x0000000002dd50fe: jne    0x0000000002dd523a
  0x0000000002dd5104: and    $0xff,%edx
  0x0000000002dd510a: mov    %rdx,%rax
  0x0000000002dd510d: add    $0x80,%rsp
  0x0000000002dd5114: pop    %rbp
  0x0000000002dd5115: test   %eax,-0x21d501b(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd511b: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x0000000002dd511c: lea    0x60(%rsp),%rax
  0x0000000002dd5121: mov    0x8(%rax),%rsi
  0x0000000002dd5125: mov    (%rsi),%rdx
  0x0000000002dd5128: and    $0x7,%rdx
  0x0000000002dd512c: cmp    $0x5,%rdx
  0x0000000002dd5130: je     0x0000000002dd514d
  0x0000000002dd5136: mov    (%rax),%rdx
  0x0000000002dd5139: test   %rdx,%rdx
  0x0000000002dd513c: je     0x0000000002dd514d
  0x0000000002dd5142: lock cmpxchg %rdx,(%rsi)
  0x0000000002dd5147: jne    0x0000000002dd524d
  0x0000000002dd514d: mov    $0xffffffff,%eax
  0x0000000002dd5152: add    $0x80,%rsp
  0x0000000002dd5159: pop    %rbp
  0x0000000002dd515a: test   %eax,-0x21d5060(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd5160: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x0000000002dd5161: nopl   0x0(%rax)
  0x0000000002dd5168: jmpq   0x0000000002dd526f  ;   {no_reloc}
  0x0000000002dd516d: add    %al,(%rax)
  0x0000000002dd516f: add    %al,(%rax)
  0x0000000002dd5171: add    %cl,-0x75(%rcx)
  0x0000000002dd5174: rex.RXB (bad) 
  0x0000000002dd5176: lea    0x20(%rax),%rdi
  0x0000000002dd517a: cmp    0x70(%r15),%rdi
  0x0000000002dd517e: ja     0x0000000002dd5279
  0x0000000002dd5184: mov    %rdi,0x60(%r15)
  0x0000000002dd5188: mov    0xa8(%rdx),%rcx
  0x0000000002dd518f: mov    %rcx,(%rax)
  0x0000000002dd5192: mov    %rdx,%rcx
  0x0000000002dd5195: shr    $0x3,%rcx
  0x0000000002dd5199: mov    %ecx,0x8(%rax)
  0x0000000002dd519c: xor    %rcx,%rcx
  0x0000000002dd519f: mov    %ecx,0xc(%rax)
  0x0000000002dd51a2: xor    %rcx,%rcx
  0x0000000002dd51a5: mov    %rcx,0x10(%rax)
  0x0000000002dd51a9: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000000002dd51ad: mov    %rax,%r8
  0x0000000002dd51b0: movabs $0x1bfaa748,%rdx   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd51ba: addq   $0x1,0x128(%rdx)
  0x0000000002dd51c2: movabs $0x76bf1f008,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002dd51cc: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x0000000002dd51cf: mov    %rax,0x58(%rsp)
  0x0000000002dd51d4: nop
  0x0000000002dd51d5: nop
  0x0000000002dd51d6: nop
  0x0000000002dd51d7: callq  0x0000000002cf61a0  ; OopMap{[80]=Oop [88]=Oop [104]=Oop off=892}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {optimized virtual_call}
  0x0000000002dd51dc: mov    0x58(%rsp),%rax
  0x0000000002dd51e1: jmpq   0x0000000002dd52b1
  0x0000000002dd51e6: mov    %rdx,0x8(%rsp)
  0x0000000002dd51eb: mov    %rsi,(%rsp)
  0x0000000002dd51ef: callq  0x0000000002db0060  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=916}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x0000000002dd51f4: jmpq   0x0000000002dd4f5a
  0x0000000002dd51f9: mov    %rsi,0x8(%rsp)
  0x0000000002dd51fe: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd5206: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=939}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x0000000002dd520b: jmpq   0x0000000002dd4f8c
  0x0000000002dd5210: mov    %rax,0x8(%rsp)
  0x0000000002dd5215: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd521d: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=962}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x0000000002dd5222: jmpq   0x0000000002dd5076
  0x0000000002dd5227: callq  0x0000000002dad680  ; OopMap{rax=Oop [104]=Oop off=972}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x0000000002dd522c: callq  0x0000000002dad680  ; OopMap{rax=Oop [104]=Oop off=977}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x0000000002dd5231: mov    %rsi,(%rsp)
  0x0000000002dd5235: callq  0x0000000002dac940  ; OopMap{rax=Oop [104]=Oop off=986}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x0000000002dd523a: lea    0x60(%rsp),%rax
  0x0000000002dd523f: mov    %rax,(%rsp)
  0x0000000002dd5243: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dd5248: jmpq   0x0000000002dd5104
  0x0000000002dd524d: lea    0x60(%rsp),%rax
  0x0000000002dd5252: mov    %rax,(%rsp)
  0x0000000002dd5256: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dd525b: jmpq   0x0000000002dd514d
  0x0000000002dd5260: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd526a: mov    $0xa050f00,%eax
  0x0000000002dd526f: callq  0x0000000002db0ca0  ; OopMap{[80]=Oop [104]=Oop off=1044}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x0000000002dd5274: jmpq   0x0000000002dd5168
  0x0000000002dd5279: mov    %rdx,%rdx
  0x0000000002dd527c: callq  0x0000000002dade00  ; OopMap{[80]=Oop [104]=Oop off=1057}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x0000000002dd5281: jmpq   0x0000000002dd51ad
  0x0000000002dd5286: nop
  0x0000000002dd5287: nop
  0x0000000002dd5288: mov    0x2a8(%r15),%rax
  0x0000000002dd528f: movabs $0x0,%r10
  0x0000000002dd5299: mov    %r10,0x2a8(%r15)
  0x0000000002dd52a0: movabs $0x0,%r10
  0x0000000002dd52aa: mov    %r10,0x2b0(%r15)
  0x0000000002dd52b1: mov    %rax,%rbx
  0x0000000002dd52b4: lea    0x60(%rsp),%rax
  0x0000000002dd52b9: mov    0x8(%rax),%rsi
  0x0000000002dd52bd: mov    (%rsi),%rdi
  0x0000000002dd52c0: and    $0x7,%rdi
  0x0000000002dd52c4: cmp    $0x5,%rdi
  0x0000000002dd52c8: je     0x0000000002dd52e5
  0x0000000002dd52ce: mov    (%rax),%rdi
  0x0000000002dd52d1: test   %rdi,%rdi
  0x0000000002dd52d4: je     0x0000000002dd52e5
  0x0000000002dd52da: lock cmpxchg %rdi,(%rsi)
  0x0000000002dd52df: jne    0x0000000002dd52f5
  0x0000000002dd52e5: mov    %rbx,%rax
  0x0000000002dd52e8: add    $0x80,%rsp
  0x0000000002dd52ef: pop    %rbp
  0x0000000002dd52f0: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd52f5: lea    0x60(%rsp),%rax
  0x0000000002dd52fa: mov    %rax,(%rsp)
  0x0000000002dd52fe: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dd5303: jmp    0x0000000002dd52e5
  0x0000000002dd5305: hlt    
  0x0000000002dd5306: hlt    
  0x0000000002dd5307: hlt    
  0x0000000002dd5308: hlt    
  0x0000000002dd5309: hlt    
  0x0000000002dd530a: hlt    
  0x0000000002dd530b: hlt    
  0x0000000002dd530c: hlt    
  0x0000000002dd530d: hlt    
  0x0000000002dd530e: hlt    
  0x0000000002dd530f: hlt    
  0x0000000002dd5310: hlt    
  0x0000000002dd5311: hlt    
  0x0000000002dd5312: hlt    
  0x0000000002dd5313: hlt    
  0x0000000002dd5314: hlt    
  0x0000000002dd5315: hlt    
  0x0000000002dd5316: hlt    
  0x0000000002dd5317: hlt    
  0x0000000002dd5318: hlt    
  0x0000000002dd5319: hlt    
  0x0000000002dd531a: hlt    
  0x0000000002dd531b: hlt    
  0x0000000002dd531c: hlt    
  0x0000000002dd531d: hlt    
  0x0000000002dd531e: hlt    
  0x0000000002dd531f: hlt    
[Stub Code]
  0x0000000002dd5320: nop                       ;   {no_reloc}
  0x0000000002dd5321: nop
  0x0000000002dd5322: nop
  0x0000000002dd5323: nop
  0x0000000002dd5324: nop
  0x0000000002dd5325: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd532f: jmpq   0x0000000002dd532f  ;   {runtime_call}
  0x0000000002dd5334: nop
  0x0000000002dd5335: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd533f: jmpq   0x0000000002dd533f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dd5344: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dd5349: mov    %rsp,-0x28(%rsp)
  0x0000000002dd534e: sub    $0x80,%rsp
  0x0000000002dd5355: mov    %rax,0x78(%rsp)
  0x0000000002dd535a: mov    %rcx,0x70(%rsp)
  0x0000000002dd535f: mov    %rdx,0x68(%rsp)
  0x0000000002dd5364: mov    %rbx,0x60(%rsp)
  0x0000000002dd5369: mov    %rbp,0x50(%rsp)
  0x0000000002dd536e: mov    %rsi,0x48(%rsp)
  0x0000000002dd5373: mov    %rdi,0x40(%rsp)
  0x0000000002dd5378: mov    %r8,0x38(%rsp)
  0x0000000002dd537d: mov    %r9,0x30(%rsp)
  0x0000000002dd5382: mov    %r10,0x28(%rsp)
  0x0000000002dd5387: mov    %r11,0x20(%rsp)
  0x0000000002dd538c: mov    %r12,0x18(%rsp)
  0x0000000002dd5391: mov    %r13,0x10(%rsp)
  0x0000000002dd5396: mov    %r14,0x8(%rsp)
  0x0000000002dd539b: mov    %r15,(%rsp)
  0x0000000002dd539f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd53a9: movabs $0x2dd5349,%rdx    ;   {internal_word}
  0x0000000002dd53b3: mov    %rsp,%r8
  0x0000000002dd53b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd53ba: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd53bf: hlt    
[Deopt Handler Code]
  0x0000000002dd53c0: movabs $0x2dd53c0,%r10    ;   {section_word}
  0x0000000002dd53ca: push   %r10
  0x0000000002dd53cc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd53d1: hlt    
  0x0000000002dd53d2: hlt    
  0x0000000002dd53d3: hlt    
  0x0000000002dd53d4: hlt    
  0x0000000002dd53d5: hlt    
  0x0000000002dd53d6: hlt    
  0x0000000002dd53d7: hlt    
<nmethod compile_id='65' compiler='C1' level='3' entry='0x0000000002dd4e60' size='2512' address='0x0000000002dd4cd0' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1824' scopes_pcs_offset='2016' dependencies_offset='2480' nul_chk_table_offset='2488' method='java/io/BufferedInputStream read ()I' bytes='49' count='5163' iicount='5163' stamp='1.479'/>
<writer thread='8664'/>
<task_queued compile_id='76' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='256' iicount='256' level='1' stamp='1.480' comment='tiered' hot_count='256'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dd3d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;
  # this:     rdx:rdx   = &apos;java/io/BufferedInputStream&apos;
  # parm0:    r8:r8     = &apos;[B&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002dd3f20: mov    0x8(%rdx),%r10d
  0x0000000002dd3f24: shl    $0x3,%r10
  0x0000000002dd3f28: cmp    %rax,%r10
  0x0000000002dd3f2b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd3f31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd3f3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd3f40: mov    %eax,-0x6000(%rsp)
  0x0000000002dd3f47: push   %rbp
  0x0000000002dd3f48: sub    $0xa0,%rsp
  0x0000000002dd3f4f: mov    %rdx,0x58(%rsp)
  0x0000000002dd3f54: mov    %r8,0x68(%rsp)
  0x0000000002dd3f59: mov    %r9d,0x60(%rsp)
  0x0000000002dd3f5e: mov    %edi,0x54(%rsp)
  0x0000000002dd3f62: lea    0x80(%rsp),%rsi
  0x0000000002dd3f6a: mov    %rdx,0x8(%rsi)
  0x0000000002dd3f6e: mov    (%rdx),%rax
  0x0000000002dd3f71: mov    %rax,%rbx
  0x0000000002dd3f74: and    $0x7,%rbx
  0x0000000002dd3f78: cmp    $0x5,%rbx
  0x0000000002dd3f7c: jne    0x0000000002dd4003
  0x0000000002dd3f82: mov    0x8(%rdx),%ebx
  0x0000000002dd3f85: shl    $0x3,%rbx
  0x0000000002dd3f89: mov    0xa8(%rbx),%rbx
  0x0000000002dd3f90: or     %r15,%rbx
  0x0000000002dd3f93: xor    %rax,%rbx
  0x0000000002dd3f96: and    $0xffffffffffffff87,%rbx
  0x0000000002dd3f9a: je     0x0000000002dd402b
  0x0000000002dd3fa0: test   $0x7,%rbx
  0x0000000002dd3fa7: jne    0x0000000002dd3ff0
  0x0000000002dd3fa9: test   $0x300,%rbx
  0x0000000002dd3fb0: jne    0x0000000002dd3fcf
  0x0000000002dd3fb2: and    $0x37f,%rax
  0x0000000002dd3fb9: mov    %rax,%rbx
  0x0000000002dd3fbc: or     %r15,%rbx
  0x0000000002dd3fbf: lock cmpxchg %rbx,(%rdx)
  0x0000000002dd3fc4: jne    0x0000000002dd45ee
  0x0000000002dd3fca: jmpq   0x0000000002dd402b
  0x0000000002dd3fcf: mov    0x8(%rdx),%ebx
  0x0000000002dd3fd2: shl    $0x3,%rbx
  0x0000000002dd3fd6: mov    0xa8(%rbx),%rbx
  0x0000000002dd3fdd: or     %r15,%rbx
  0x0000000002dd3fe0: lock cmpxchg %rbx,(%rdx)
  0x0000000002dd3fe5: jne    0x0000000002dd45ee
  0x0000000002dd3feb: jmpq   0x0000000002dd402b
  0x0000000002dd3ff0: mov    0x8(%rdx),%ebx
  0x0000000002dd3ff3: shl    $0x3,%rbx
  0x0000000002dd3ff7: mov    0xa8(%rbx),%rbx
  0x0000000002dd3ffe: lock cmpxchg %rbx,(%rdx)
  0x0000000002dd4003: mov    (%rdx),%rax
  0x0000000002dd4006: or     $0x1,%rax
  0x0000000002dd400a: mov    %rax,(%rsi)
  0x0000000002dd400d: lock cmpxchg %rsi,(%rdx)
  0x0000000002dd4012: je     0x0000000002dd402b
  0x0000000002dd4018: sub    %rsp,%rax
  0x0000000002dd401b: and    $0xfffffffffffff007,%rax
  0x0000000002dd4022: mov    %rax,(%rsi)
  0x0000000002dd4025: jne    0x0000000002dd45ee
  0x0000000002dd402b: movabs $0x1bfab450,%rsi   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4035: mov    0xdc(%rsi),%ebx
  0x0000000002dd403b: add    $0x8,%ebx
  0x0000000002dd403e: mov    %ebx,0xdc(%rsi)
  0x0000000002dd4044: movabs $0x1bdc0498,%rsi   ;   {metadata({method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd404e: and    $0x1ff8,%ebx
  0x0000000002dd4054: cmp    $0x0,%ebx
  0x0000000002dd4057: je     0x0000000002dd4601  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 336)

  0x0000000002dd405d: mov    %rdx,%rsi
  0x0000000002dd4060: movabs $0x1bfab450,%rbx   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd406a: addq   $0x1,0x108(%rbx)
  0x0000000002dd4072: movabs $0x1bfaa748,%rsi   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd407c: mov    0xdc(%rsi),%ebx
  0x0000000002dd4082: add    $0x8,%ebx
  0x0000000002dd4085: mov    %ebx,0xdc(%rsi)
  0x0000000002dd408b: movabs $0x1bdbfec8,%rsi   ;   {metadata({method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4095: and    $0x7ffff8,%ebx
  0x0000000002dd409b: cmp    $0x0,%ebx
  0x0000000002dd409e: je     0x0000000002dd4618
  0x0000000002dd40a4: mov    0x20(%rdx),%esi
  0x0000000002dd40a7: shl    $0x3,%rsi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x0000000002dd40ab: cmp    $0x0,%rsi
  0x0000000002dd40af: movabs $0x1bfaa748,%rsi   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd40b9: movabs $0x108,%rbx
  0x0000000002dd40c3: jne    0x0000000002dd40d3
  0x0000000002dd40c9: movabs $0x118,%rbx
  0x0000000002dd40d3: mov    (%rsi,%rbx,1),%rax
  0x0000000002dd40d7: lea    0x1(%rax),%rax
  0x0000000002dd40db: mov    %rax,(%rsi,%rbx,1)
  0x0000000002dd40df: je     0x0000000002dd456e  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x0000000002dd40e5: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ; implicit exception: dispatches to 0x0000000002dd462f
  0x0000000002dd40e9: mov    %r9,%rbx
  0x0000000002dd40ec: or     %rdi,%rbx
  0x0000000002dd40ef: mov    %r9,%rax
  0x0000000002dd40f2: add    %edi,%eax
  0x0000000002dd40f4: or     %rax,%rbx
  0x0000000002dd40f7: sub    %eax,%esi
  0x0000000002dd40f9: or     %rsi,%rbx
  0x0000000002dd40fc: cmp    $0x0,%ebx
  0x0000000002dd40ff: movabs $0x1bfab450,%rsi   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4109: movabs $0x118,%rbx
  0x0000000002dd4113: jge    0x0000000002dd4123
  0x0000000002dd4119: movabs $0x128,%rbx
  0x0000000002dd4123: mov    (%rsi,%rbx,1),%rax
  0x0000000002dd4127: lea    0x1(%rax),%rax
  0x0000000002dd412b: mov    %rax,(%rsi,%rbx,1)
  0x0000000002dd412f: jl     0x0000000002dd452f  ;*ifge
                                                ; - java.io.BufferedInputStream::read@19 (line 337)

  0x0000000002dd4135: cmp    $0x0,%edi
  0x0000000002dd4138: movabs $0x1bfab450,%rsi   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4142: movabs $0x148,%rbx
  0x0000000002dd414c: jne    0x0000000002dd415c
  0x0000000002dd4152: movabs $0x158,%rbx
  0x0000000002dd415c: mov    (%rsi,%rbx,1),%rax
  0x0000000002dd4160: lea    0x1(%rax),%rax
  0x0000000002dd4164: mov    %rax,(%rsi,%rbx,1)
  0x0000000002dd4168: je     0x0000000002dd44e7  ;*ifne
                                                ; - java.io.BufferedInputStream::read@31 (line 339)

  0x0000000002dd416e: mov    $0x0,%esi          ;*aload_0
                                                ; - java.io.BufferedInputStream::read@39 (line 345)

  0x0000000002dd4173: nopl   0x0(%rax,%rax,1)
  0x0000000002dd4178: mov    %rdx,%rbx
  0x0000000002dd417b: movabs $0x1bfab450,%rax   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4185: addq   $0x1,0x168(%rax)
  0x0000000002dd418d: mov    %rsi,%rbx
  0x0000000002dd4190: add    %r9d,%ebx
  0x0000000002dd4193: mov    %rdi,%rax
  0x0000000002dd4196: sub    %esi,%eax
  0x0000000002dd4198: mov    %r8,%rcx
  0x0000000002dd419b: mov    %rcx,%r8
  0x0000000002dd419e: mov    %rbx,%r9
  0x0000000002dd41a1: mov    %rax,%rdi
  0x0000000002dd41a4: mov    %rdx,%rax
  0x0000000002dd41a7: mov    %rax,%rdx          ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)

  0x0000000002dd41aa: mov    %esi,0x50(%rsp)
  0x0000000002dd41ae: nop
  0x0000000002dd41af: callq  0x0000000002cf61a0  ; OopMap{[88]=Oop [104]=Oop [136]=Oop off=660}
                                                ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)
                                                ;   {optimized virtual_call}
  0x0000000002dd41b4: cmp    $0x0,%eax
  0x0000000002dd41b7: movabs $0x1bfab450,%rdx   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd41c1: movabs $0x178,%rsi
  0x0000000002dd41cb: jg     0x0000000002dd41db
  0x0000000002dd41d1: movabs $0x188,%rsi
  0x0000000002dd41db: mov    (%rdx,%rsi,1),%rdi
  0x0000000002dd41df: lea    0x1(%rdi),%rdi
  0x0000000002dd41e3: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002dd41e7: jle    0x0000000002dd43b9  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@56 (line 346)

  0x0000000002dd41ed: add    0x50(%rsp),%eax
  0x0000000002dd41f1: cmp    0x54(%rsp),%eax
  0x0000000002dd41f5: movabs $0x1bfab450,%rdx   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd41ff: movabs $0x1d0,%rsi
  0x0000000002dd4209: jl     0x0000000002dd4219
  0x0000000002dd420f: movabs $0x1e0,%rsi
  0x0000000002dd4219: mov    (%rdx,%rsi,1),%rdi
  0x0000000002dd421d: lea    0x1(%rdi),%rdi
  0x0000000002dd4221: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002dd4225: jge    0x0000000002dd449e  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@82 (line 349)

  0x0000000002dd422b: mov    0x58(%rsp),%rdx
  0x0000000002dd4230: mov    0xc(%rdx),%esi
  0x0000000002dd4233: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.BufferedInputStream::read@89 (line 352)

  0x0000000002dd4237: cmp    $0x0,%rsi
  0x0000000002dd423b: movabs $0x1bfab450,%rdi   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4245: movabs $0x1f0,%rbx
  0x0000000002dd424f: je     0x0000000002dd425f
  0x0000000002dd4255: movabs $0x200,%rbx
  0x0000000002dd425f: mov    (%rdi,%rbx,1),%rcx
  0x0000000002dd4263: lea    0x1(%rcx),%rcx
  0x0000000002dd4267: mov    %rcx,(%rdi,%rbx,1)
  0x0000000002dd426b: mov    %eax,0x64(%rsp)
  0x0000000002dd426f: je     0x0000000002dd4355  ;*ifnull
                                                ; - java.io.BufferedInputStream::read@96 (line 353)

  0x0000000002dd4275: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002dd4634
  0x0000000002dd4278: mov    %rsi,%rdi
  0x0000000002dd427b: movabs $0x1bfab450,%rbx   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4285: mov    0x8(%rdi),%edi
  0x0000000002dd4288: shl    $0x3,%rdi
  0x0000000002dd428c: cmp    0x218(%rbx),%rdi
  0x0000000002dd4293: jne    0x0000000002dd42a2
  0x0000000002dd4295: addq   $0x1,0x220(%rbx)
  0x0000000002dd429d: jmpq   0x0000000002dd4308
  0x0000000002dd42a2: cmp    0x228(%rbx),%rdi
  0x0000000002dd42a9: jne    0x0000000002dd42b8
  0x0000000002dd42ab: addq   $0x1,0x230(%rbx)
  0x0000000002dd42b3: jmpq   0x0000000002dd4308
  0x0000000002dd42b8: cmpq   $0x0,0x218(%rbx)
  0x0000000002dd42c3: jne    0x0000000002dd42dc
  0x0000000002dd42c5: mov    %rdi,0x218(%rbx)
  0x0000000002dd42cc: movq   $0x1,0x220(%rbx)
  0x0000000002dd42d7: jmpq   0x0000000002dd4308
  0x0000000002dd42dc: cmpq   $0x0,0x228(%rbx)
  0x0000000002dd42e7: jne    0x0000000002dd4300
  0x0000000002dd42e9: mov    %rdi,0x228(%rbx)
  0x0000000002dd42f0: movq   $0x1,0x230(%rbx)
  0x0000000002dd42fb: jmpq   0x0000000002dd4308
  0x0000000002dd4300: addq   $0x1,0x210(%rbx)
  0x0000000002dd4308: mov    %rsi,%rdx          ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)

  0x0000000002dd430b: nop
  0x0000000002dd430c: nop
  0x0000000002dd430d: movabs $0xffffffffffffffff,%rax
  0x0000000002dd4317: callq  0x0000000002cf63e0  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1020}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {virtual_call}
  0x0000000002dd431c: cmp    $0x0,%eax
  0x0000000002dd431f: movabs $0x1bfab450,%rax   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4329: movabs $0x240,%rdx
  0x0000000002dd4333: jg     0x0000000002dd4343
  0x0000000002dd4339: movabs $0x250,%rdx
  0x0000000002dd4343: mov    (%rax,%rdx,1),%rsi
  0x0000000002dd4347: lea    0x1(%rsi),%rsi
  0x0000000002dd434b: mov    %rsi,(%rax,%rdx,1)
  0x0000000002dd434f: jle    0x0000000002dd4457  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@104 (line 353)

  0x0000000002dd4355: movabs $0x1bfab450,%rax   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd435f: mov    0xe0(%rax),%edx
  0x0000000002dd4365: add    $0x8,%edx
  0x0000000002dd4368: mov    %edx,0xe0(%rax)
  0x0000000002dd436e: movabs $0x1bdc0498,%rax   ;   {metadata({method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4378: and    $0xfff8,%edx
  0x0000000002dd437e: cmp    $0x0,%edx
  0x0000000002dd4381: je     0x0000000002dd4639  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1127}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x0000000002dd4387: test   %eax,-0x21d428d(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dd438d: movabs $0x1bfab450,%rax   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4397: incl   0x260(%rax)
  0x0000000002dd439d: mov    0x64(%rsp),%esi
  0x0000000002dd43a1: mov    0x54(%rsp),%edi
  0x0000000002dd43a5: mov    0x60(%rsp),%r9d
  0x0000000002dd43aa: mov    0x68(%rsp),%r8
  0x0000000002dd43af: mov    0x58(%rsp),%rdx
  0x0000000002dd43b4: jmpq   0x0000000002dd4178  ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x0000000002dd43b9: mov    0x50(%rsp),%esi
  0x0000000002dd43bd: cmp    $0x0,%esi
  0x0000000002dd43c0: movabs $0x1bfab450,%rdx   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd43ca: movabs $0x198,%rdi
  0x0000000002dd43d4: jne    0x0000000002dd43e4
  0x0000000002dd43da: movabs $0x1a8,%rdi
  0x0000000002dd43e4: mov    (%rdx,%rdi,1),%rbx
  0x0000000002dd43e8: lea    0x1(%rbx),%rbx
  0x0000000002dd43ec: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002dd43f0: jne    0x0000000002dd440e  ;*ifne
                                                ; - java.io.BufferedInputStream::read@61 (line 347)

  0x0000000002dd43f6: movabs $0x1bfab450,%rdx   ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4400: incl   0x1b8(%rdx)
  0x0000000002dd4406: mov    %rax,%rdx
  0x0000000002dd4409: jmpq   0x0000000002dd4411  ;*goto
                                                ; - java.io.BufferedInputStream::read@66 (line 347)

  0x0000000002dd440e: mov    %rsi,%rdx
  0x0000000002dd4411: lea    0x80(%rsp),%rax
  0x0000000002dd4419: mov    0x8(%rax),%rdi
  0x0000000002dd441d: mov    (%rdi),%rsi
  0x0000000002dd4420: and    $0x7,%rsi
  0x0000000002dd4424: cmp    $0x5,%rsi
  0x0000000002dd4428: je     0x0000000002dd4445
  0x0000000002dd442e: mov    (%rax),%rsi
  0x0000000002dd4431: test   %rsi,%rsi
  0x0000000002dd4434: je     0x0000000002dd4445
  0x0000000002dd443a: lock cmpxchg %rsi,(%rdi)
  0x0000000002dd443f: jne    0x0000000002dd4650
  0x0000000002dd4445: mov    %rdx,%rax
  0x0000000002dd4448: add    $0xa0,%rsp
  0x0000000002dd444f: pop    %rbp
  0x0000000002dd4450: test   %eax,-0x21d4356(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd4456: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@71 (line 347)

  0x0000000002dd4457: lea    0x80(%rsp),%rax
  0x0000000002dd445f: mov    0x8(%rax),%rsi
  0x0000000002dd4463: mov    (%rsi),%rdx
  0x0000000002dd4466: and    $0x7,%rdx
  0x0000000002dd446a: cmp    $0x5,%rdx
  0x0000000002dd446e: je     0x0000000002dd448b
  0x0000000002dd4474: mov    (%rax),%rdx
  0x0000000002dd4477: test   %rdx,%rdx
  0x0000000002dd447a: je     0x0000000002dd448b
  0x0000000002dd4480: lock cmpxchg %rdx,(%rsi)
  0x0000000002dd4485: jne    0x0000000002dd4666
  0x0000000002dd448b: mov    0x64(%rsp),%eax
  0x0000000002dd448f: add    $0xa0,%rsp
  0x0000000002dd4496: pop    %rbp
  0x0000000002dd4497: test   %eax,-0x21d439d(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd449d: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@109 (line 354)

  0x0000000002dd449e: mov    %rax,%rdx
  0x0000000002dd44a1: lea    0x80(%rsp),%rax
  0x0000000002dd44a9: mov    0x8(%rax),%rdi
  0x0000000002dd44ad: mov    (%rdi),%rsi
  0x0000000002dd44b0: and    $0x7,%rsi
  0x0000000002dd44b4: cmp    $0x5,%rsi
  0x0000000002dd44b8: je     0x0000000002dd44d5
  0x0000000002dd44be: mov    (%rax),%rsi
  0x0000000002dd44c1: test   %rsi,%rsi
  0x0000000002dd44c4: je     0x0000000002dd44d5
  0x0000000002dd44ca: lock cmpxchg %rsi,(%rdi)
  0x0000000002dd44cf: jne    0x0000000002dd467c
  0x0000000002dd44d5: mov    %rdx,%rax
  0x0000000002dd44d8: add    $0xa0,%rsp
  0x0000000002dd44df: pop    %rbp
  0x0000000002dd44e0: test   %eax,-0x21d43e6(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd44e6: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@87 (line 350)

  0x0000000002dd44e7: lea    0x80(%rsp),%rax
  0x0000000002dd44ef: mov    0x8(%rax),%rsi
  0x0000000002dd44f3: mov    (%rsi),%rdx
  0x0000000002dd44f6: and    $0x7,%rdx
  0x0000000002dd44fa: cmp    $0x5,%rdx
  0x0000000002dd44fe: je     0x0000000002dd451b
  0x0000000002dd4504: mov    (%rax),%rdx
  0x0000000002dd4507: test   %rdx,%rdx
  0x0000000002dd450a: je     0x0000000002dd451b
  0x0000000002dd4510: lock cmpxchg %rdx,(%rsi)
  0x0000000002dd4515: jne    0x0000000002dd4692
  0x0000000002dd451b: mov    $0x0,%eax
  0x0000000002dd4520: add    $0xa0,%rsp
  0x0000000002dd4527: pop    %rbp
  0x0000000002dd4528: test   %eax,-0x21d442e(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd452e: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@35 (line 340)

  0x0000000002dd452f: nop
  0x0000000002dd4530: jmpq   0x0000000002dd46b7  ;   {no_reloc}
  0x0000000002dd4535: add    %al,(%rax)
  0x0000000002dd4537: add    %al,(%rax)
  0x0000000002dd4539: add    %ch,%cl
  0x0000000002dd453b: (bad)  
  0x0000000002dd453c: add    %eax,(%rax)
  0x0000000002dd453e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)

  0x0000000002dd4541: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001bdc04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd4544: push   %rax
  0x0000000002dd4545: mov    $0xfa,%ah
  0x0000000002dd4547: sbb    (%rax),%eax
  0x0000000002dd4549: add    %al,(%rax)
  0x0000000002dd454b: add    %cl,-0x7d(%rax)
  0x0000000002dd454e: xchg   %bh,(%rax)
  0x0000000002dd4550: add    %eax,(%rax)
  0x0000000002dd4552: add    %al,(%rcx)
  0x0000000002dd4554: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::read@26 (line 338)

  0x0000000002dd4557: mov    %rax,0x70(%rsp)
  0x0000000002dd455c: nop
  0x0000000002dd455d: nop
  0x0000000002dd455e: nop
  0x0000000002dd455f: callq  0x0000000002cf61a0  ; OopMap{[112]=Oop [136]=Oop off=1604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::read@26 (line 338)
                                                ;   {optimized virtual_call}
  0x0000000002dd4564: mov    0x70(%rsp),%rax
  0x0000000002dd4569: jmpq   0x0000000002dd471f  ;*athrow
                                                ; - java.io.BufferedInputStream::read@29 (line 338)

  0x0000000002dd456e: xchg   %ax,%ax
  0x0000000002dd4570: jmpq   0x0000000002dd46dd  ;   {no_reloc}
  0x0000000002dd4575: add    %al,(%rax)
  0x0000000002dd4577: add    %al,(%rax)
  0x0000000002dd4579: add    %cl,-0x75(%rcx)
  0x0000000002dd457c: rex.RXB (bad) 
  0x0000000002dd457e: lea    0x20(%rax),%rdi
  0x0000000002dd4582: cmp    0x70(%r15),%rdi
  0x0000000002dd4586: ja     0x0000000002dd46e7
  0x0000000002dd458c: mov    %rdi,0x60(%r15)
  0x0000000002dd4590: mov    0xa8(%rdx),%rcx
  0x0000000002dd4597: mov    %rcx,(%rax)
  0x0000000002dd459a: mov    %rdx,%rcx
  0x0000000002dd459d: shr    $0x3,%rcx
  0x0000000002dd45a1: mov    %ecx,0x8(%rax)
  0x0000000002dd45a4: xor    %rcx,%rcx
  0x0000000002dd45a7: mov    %ecx,0xc(%rax)
  0x0000000002dd45aa: xor    %rcx,%rcx
  0x0000000002dd45ad: mov    %rcx,0x10(%rax)
  0x0000000002dd45b1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x0000000002dd45b5: mov    %rax,%rdx
  0x0000000002dd45b8: movabs $0x1bfaa748,%rsi   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd45c2: addq   $0x1,0x128(%rsi)
  0x0000000002dd45ca: movabs $0x76bf1f008,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002dd45d4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x0000000002dd45d7: mov    %rax,0x78(%rsp)
  0x0000000002dd45dc: nop
  0x0000000002dd45dd: nop
  0x0000000002dd45de: nop
  0x0000000002dd45df: callq  0x0000000002cf61a0  ; OopMap{[104]=Oop [120]=Oop [88]=Oop [136]=Oop off=1732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {optimized virtual_call}
  0x0000000002dd45e4: mov    0x78(%rsp),%rax
  0x0000000002dd45e9: jmpq   0x0000000002dd471f
  0x0000000002dd45ee: mov    %rdx,0x8(%rsp)
  0x0000000002dd45f3: mov    %rsi,(%rsp)
  0x0000000002dd45f7: callq  0x0000000002db0060  ; OopMap{rdx=Oop [88]=Oop r8=Oop [104]=Oop [136]=Oop off=1756}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x0000000002dd45fc: jmpq   0x0000000002dd402b
  0x0000000002dd4601: mov    %rsi,0x8(%rsp)
  0x0000000002dd4606: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd460e: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [88]=Oop r8=Oop [104]=Oop [136]=Oop off=1779}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x0000000002dd4613: jmpq   0x0000000002dd405d
  0x0000000002dd4618: mov    %rsi,0x8(%rsp)
  0x0000000002dd461d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd4625: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [88]=Oop r8=Oop [104]=Oop [136]=Oop off=1802}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x0000000002dd462a: jmpq   0x0000000002dd40a4
  0x0000000002dd462f: callq  0x0000000002dad680  ; OopMap{rdx=Oop [88]=Oop r8=Oop [104]=Oop [136]=Oop off=1812}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ;   {runtime_call}
  0x0000000002dd4634: callq  0x0000000002dad680  ; OopMap{[104]=Oop [88]=Oop rsi=Oop [136]=Oop off=1817}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {runtime_call}
  0x0000000002dd4639: mov    %rax,0x8(%rsp)
  0x0000000002dd463e: movq   $0x6e,(%rsp)
  0x0000000002dd4646: callq  0x0000000002db1d60  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1835}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)
                                                ;   {runtime_call}
  0x0000000002dd464b: jmpq   0x0000000002dd4387
  0x0000000002dd4650: lea    0x80(%rsp),%rax
  0x0000000002dd4658: mov    %rax,(%rsp)
  0x0000000002dd465c: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dd4661: jmpq   0x0000000002dd4445
  0x0000000002dd4666: lea    0x80(%rsp),%rax
  0x0000000002dd466e: mov    %rax,(%rsp)
  0x0000000002dd4672: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dd4677: jmpq   0x0000000002dd448b
  0x0000000002dd467c: lea    0x80(%rsp),%rax
  0x0000000002dd4684: mov    %rax,(%rsp)
  0x0000000002dd4688: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dd468d: jmpq   0x0000000002dd44d5
  0x0000000002dd4692: lea    0x80(%rsp),%rax
  0x0000000002dd469a: mov    %rax,(%rsp)
  0x0000000002dd469e: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dd46a3: jmpq   0x0000000002dd451b
  0x0000000002dd46a8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd46b2: mov    $0xa050f00,%eax
  0x0000000002dd46b7: callq  0x0000000002db0ca0  ; OopMap{[136]=Oop off=1948}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x0000000002dd46bc: jmpq   0x0000000002dd4530
  0x0000000002dd46c1: mov    %rdx,%rdx
  0x0000000002dd46c4: callq  0x0000000002dadb20  ; OopMap{[136]=Oop off=1961}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x0000000002dd46c9: jmpq   0x0000000002dd453f
  0x0000000002dd46ce: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd46d8: mov    $0xa050f00,%eax
  0x0000000002dd46dd: callq  0x0000000002db0ca0  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1986}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x0000000002dd46e2: jmpq   0x0000000002dd4570
  0x0000000002dd46e7: mov    %rdx,%rdx
  0x0000000002dd46ea: callq  0x0000000002dade00  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1999}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x0000000002dd46ef: jmpq   0x0000000002dd45b5
  0x0000000002dd46f4: nop
  0x0000000002dd46f5: nop
  0x0000000002dd46f6: mov    0x2a8(%r15),%rax
  0x0000000002dd46fd: movabs $0x0,%r10
  0x0000000002dd4707: mov    %r10,0x2a8(%r15)
  0x0000000002dd470e: movabs $0x0,%r10
  0x0000000002dd4718: mov    %r10,0x2b0(%r15)
  0x0000000002dd471f: mov    %rax,%rbx
  0x0000000002dd4722: lea    0x80(%rsp),%rax
  0x0000000002dd472a: mov    0x8(%rax),%rsi
  0x0000000002dd472e: mov    (%rsi),%rdi
  0x0000000002dd4731: and    $0x7,%rdi
  0x0000000002dd4735: cmp    $0x5,%rdi
  0x0000000002dd4739: je     0x0000000002dd4756
  0x0000000002dd473f: mov    (%rax),%rdi
  0x0000000002dd4742: test   %rdi,%rdi
  0x0000000002dd4745: je     0x0000000002dd4756
  0x0000000002dd474b: lock cmpxchg %rdi,(%rsi)
  0x0000000002dd4750: jne    0x0000000002dd4766
  0x0000000002dd4756: mov    %rbx,%rax
  0x0000000002dd4759: add    $0xa0,%rsp
  0x0000000002dd4760: pop    %rbp
  0x0000000002dd4761: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd4766: lea    0x80(%rsp),%rax
  0x0000000002dd476e: mov    %rax,(%rsp)
  0x0000000002dd4772: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dd4777: jmp    0x0000000002dd4756
  0x0000000002dd4779: hlt    
  0x0000000002dd477a: hlt    
  0x0000000002dd477b: hlt    
  0x0000000002dd477c: hlt    
  0x0000000002dd477d: hlt    
  0x0000000002dd477e: hlt    
  0x0000000002dd477f: hlt    
[Stub Code]
  0x0000000002dd4780: nop                       ;   {no_reloc}
  0x0000000002dd4781: nop
  0x0000000002dd4782: nop
  0x0000000002dd4783: nop
  0x0000000002dd4784: nop
  0x0000000002dd4785: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd478f: jmpq   0x0000000002dd478f  ;   {runtime_call}
  0x0000000002dd4794: nop
  0x0000000002dd4795: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd479f: jmpq   0x0000000002dd479f  ;   {runtime_call}
  0x0000000002dd47a4: nop
  0x0000000002dd47a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd47af: jmpq   0x0000000002dd47af  ;   {runtime_call}
  0x0000000002dd47b4: nop
  0x0000000002dd47b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd47bf: jmpq   0x0000000002dd47bf  ;   {runtime_call}
[Exception Handler]
  0x0000000002dd47c4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dd47c9: mov    %rsp,-0x28(%rsp)
  0x0000000002dd47ce: sub    $0x80,%rsp
  0x0000000002dd47d5: mov    %rax,0x78(%rsp)
  0x0000000002dd47da: mov    %rcx,0x70(%rsp)
  0x0000000002dd47df: mov    %rdx,0x68(%rsp)
  0x0000000002dd47e4: mov    %rbx,0x60(%rsp)
  0x0000000002dd47e9: mov    %rbp,0x50(%rsp)
  0x0000000002dd47ee: mov    %rsi,0x48(%rsp)
  0x0000000002dd47f3: mov    %rdi,0x40(%rsp)
  0x0000000002dd47f8: mov    %r8,0x38(%rsp)
  0x0000000002dd47fd: mov    %r9,0x30(%rsp)
  0x0000000002dd4802: mov    %r10,0x28(%rsp)
  0x0000000002dd4807: mov    %r11,0x20(%rsp)
  0x0000000002dd480c: mov    %r12,0x18(%rsp)
  0x0000000002dd4811: mov    %r13,0x10(%rsp)
  0x0000000002dd4816: mov    %r14,0x8(%rsp)
  0x0000000002dd481b: mov    %r15,(%rsp)
  0x0000000002dd481f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd4829: movabs $0x2dd47c9,%rdx    ;   {internal_word}
  0x0000000002dd4833: mov    %rsp,%r8
  0x0000000002dd4836: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd483a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd483f: hlt    
[Deopt Handler Code]
  0x0000000002dd4840: movabs $0x2dd4840,%r10    ;   {section_word}
  0x0000000002dd484a: push   %r10
  0x0000000002dd484c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd4851: hlt    
  0x0000000002dd4852: hlt    
  0x0000000002dd4853: hlt    
  0x0000000002dd4854: hlt    
  0x0000000002dd4855: hlt    
  0x0000000002dd4856: hlt    
  0x0000000002dd4857: hlt    
<nmethod compile_id='67' compiler='C1' level='3' entry='0x0000000002dd3f20' size='3944' address='0x0000000002dd3d50' relocation_offset='288' insts_offset='464' stub_offset='2608' scopes_data_offset='2848' scopes_pcs_offset='3224' dependencies_offset='3912' nul_chk_table_offset='3920' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='985' backedge_count='11' iicount='985' stamp='1.540'/>
Decoding compiled method 0x0000000002dd9590:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;
  # this:     rdx:rdx   = &apos;java/io/BufferedInputStream&apos;
  # parm0:    r8:r8     = &apos;[B&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0xa0]  (sp of caller)
  0x0000000002dd97a0: mov    0x8(%rdx),%r10d
  0x0000000002dd97a4: shl    $0x3,%r10
  0x0000000002dd97a8: cmp    %rax,%r10
  0x0000000002dd97ab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd97b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd97bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd97c0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd97c7: push   %rbp
  0x0000000002dd97c8: sub    $0x90,%rsp
  0x0000000002dd97cf: mov    %rdx,0x50(%rsp)
  0x0000000002dd97d4: mov    %r8,0x60(%rsp)
  0x0000000002dd97d9: mov    %r9d,0x5c(%rsp)
  0x0000000002dd97de: mov    %edi,0x58(%rsp)
  0x0000000002dd97e2: movabs $0x1bfab720,%rsi   ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd97ec: mov    0xdc(%rsi),%ebx
  0x0000000002dd97f2: add    $0x8,%ebx
  0x0000000002dd97f5: mov    %ebx,0xdc(%rsi)
  0x0000000002dd97fb: movabs $0x1bdc0380,%rsi   ;   {metadata({method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9805: and    $0x1ff8,%ebx
  0x0000000002dd980b: cmp    $0x0,%ebx
  0x0000000002dd980e: je     0x0000000002dd9e71  ;*aload_0
                                                ; - java.io.BufferedInputStream::read1@0 (line 277)

  0x0000000002dd9814: mov    0x10(%rdx),%esi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@1 (line 277)

  0x0000000002dd9817: mov    0x14(%rdx),%ebx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@5 (line 277)

  0x0000000002dd981a: sub    %ebx,%esi
  0x0000000002dd981c: cmp    $0x0,%esi
  0x0000000002dd981f: movabs $0x1bfab720,%rbx   ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9829: movabs $0x108,%rax
  0x0000000002dd9833: jg     0x0000000002dd9843
  0x0000000002dd9839: movabs $0x118,%rax
  0x0000000002dd9843: mov    (%rbx,%rax,1),%rcx
  0x0000000002dd9847: lea    0x1(%rcx),%rcx
  0x0000000002dd984b: mov    %rcx,(%rbx,%rax,1)
  0x0000000002dd984f: jg     0x0000000002dd99c1  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@13 (line 278)

  0x0000000002dd9855: mov    %rdx,%rsi
  0x0000000002dd9858: movabs $0x1bfab720,%rbx   ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9862: addq   $0x1,0x128(%rbx)
  0x0000000002dd986a: movabs $0x1bfaa748,%rsi   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9874: mov    0xdc(%rsi),%ebx
  0x0000000002dd987a: add    $0x8,%ebx
  0x0000000002dd987d: mov    %ebx,0xdc(%rsi)
  0x0000000002dd9883: movabs $0x1bdbfec8,%rsi   ;   {metadata({method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd988d: and    $0x7ffff8,%ebx
  0x0000000002dd9893: cmp    $0x0,%ebx
  0x0000000002dd9896: je     0x0000000002dd9e88
  0x0000000002dd989c: mov    0x20(%rdx),%esi
  0x0000000002dd989f: shl    $0x3,%rsi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x0000000002dd98a3: cmp    $0x0,%rsi
  0x0000000002dd98a7: movabs $0x1bfaa748,%rbx   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd98b1: movabs $0x108,%rax
  0x0000000002dd98bb: jne    0x0000000002dd98cb
  0x0000000002dd98c1: movabs $0x118,%rax
  0x0000000002dd98cb: mov    (%rbx,%rax,1),%rcx
  0x0000000002dd98cf: lea    0x1(%rcx),%rcx
  0x0000000002dd98d3: mov    %rcx,(%rbx,%rax,1)
  0x0000000002dd98d7: je     0x0000000002dd9dee  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x0000000002dd98dd: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ; implicit exception: dispatches to 0x0000000002dd9e9f
  0x0000000002dd98e0: cmp    %esi,%edi
  0x0000000002dd98e2: movabs $0x1bfab720,%rsi   ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd98ec: movabs $0x138,%rbx
  0x0000000002dd98f6: jl     0x0000000002dd9906
  0x0000000002dd98fc: movabs $0x148,%rbx
  0x0000000002dd9906: mov    (%rsi,%rbx,1),%rax
  0x0000000002dd990a: lea    0x1(%rax),%rax
  0x0000000002dd990e: mov    %rax,(%rsi,%rbx,1)
  0x0000000002dd9912: jl     0x0000000002dd9954  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read1@22 (line 283)

  0x0000000002dd9918: mov    0x18(%rdx),%esi    ;*getfield markpos
                                                ; - java.io.BufferedInputStream::read1@26 (line 283)

  0x0000000002dd991b: cmp    $0x0,%esi
  0x0000000002dd991e: movabs $0x1bfab720,%rsi   ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9928: movabs $0x158,%rbx
  0x0000000002dd9932: jge    0x0000000002dd9942
  0x0000000002dd9938: movabs $0x168,%rbx
  0x0000000002dd9942: mov    (%rsi,%rbx,1),%rax
  0x0000000002dd9946: lea    0x1(%rax),%rax
  0x0000000002dd994a: mov    %rax,(%rsi,%rbx,1)
  0x0000000002dd994e: jl     0x0000000002dd9aa7  ;*ifge
                                                ; - java.io.BufferedInputStream::read1@29 (line 283)

  0x0000000002dd9954: mov    %rdx,%rsi
  0x0000000002dd9957: movabs $0x1bfab720,%rbx   ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9961: addq   $0x1,0x1b8(%rbx)
  0x0000000002dd9969: mov    %rdx,%rsi
  0x0000000002dd996c: mov    %rsi,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)

  0x0000000002dd996f: callq  0x0000000002cf61a0  ; OopMap{[80]=Oop [96]=Oop off=468}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)
                                                ;   {optimized virtual_call}
  0x0000000002dd9974: mov    0x50(%rsp),%rdx
  0x0000000002dd9979: mov    0x10(%rdx),%r8d    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@48 (line 287)

  0x0000000002dd997d: mov    0x14(%rdx),%r9d    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@52 (line 287)

  0x0000000002dd9981: sub    %r9d,%r8d
  0x0000000002dd9984: cmp    $0x0,%r8d
  0x0000000002dd9988: movabs $0x1bfab720,%r9    ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9992: movabs $0x1c8,%rdi
  0x0000000002dd999c: jg     0x0000000002dd99ac
  0x0000000002dd99a2: movabs $0x1d8,%rdi
  0x0000000002dd99ac: mov    (%r9,%rdi,1),%rsi
  0x0000000002dd99b0: lea    0x1(%rsi),%rsi
  0x0000000002dd99b4: mov    %rsi,(%r9,%rdi,1)
  0x0000000002dd99b8: jle    0x0000000002dd9cd3  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@60 (line 288)

  0x0000000002dd99be: mov    %r8,%rsi           ;*iload
                                                ; - java.io.BufferedInputStream::read1@65 (line 290)

  0x0000000002dd99c1: cmp    0x58(%rsp),%esi
  0x0000000002dd99c5: movabs $0x1bfab720,%r8    ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd99cf: movabs $0x1e8,%r9
  0x0000000002dd99d9: jge    0x0000000002dd99e9
  0x0000000002dd99df: movabs $0x1f8,%r9
  0x0000000002dd99e9: mov    (%r8,%r9,1),%rdi
  0x0000000002dd99ed: lea    0x1(%rdi),%rdi
  0x0000000002dd99f1: mov    %rdi,(%r8,%r9,1)
  0x0000000002dd99f5: jge    0x0000000002dd9a11  ;*if_icmpge
                                                ; - java.io.BufferedInputStream::read1@68 (line 290)

  0x0000000002dd99fb: movabs $0x1bfab720,%r8    ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9a05: incl   0x208(%r8)
  0x0000000002dd9a0c: jmpq   0x0000000002dd9a15  ;*goto
                                                ; - java.io.BufferedInputStream::read1@73 (line 290)

  0x0000000002dd9a11: mov    0x58(%rsp),%esi    ;*istore
                                                ; - java.io.BufferedInputStream::read1@77 (line 290)

  0x0000000002dd9a15: mov    %rdx,%r8
  0x0000000002dd9a18: movabs $0x1bfab720,%r9    ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9a22: addq   $0x1,0x220(%r9)
  0x0000000002dd9a2a: movabs $0x1bfaa748,%r8    ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9a34: mov    0xdc(%r8),%r9d
  0x0000000002dd9a3b: add    $0x8,%r9d
  0x0000000002dd9a3f: mov    %r9d,0xdc(%r8)
  0x0000000002dd9a46: movabs $0x1bdbfec8,%r8    ;   {metadata({method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9a50: and    $0x7ffff8,%r9d
  0x0000000002dd9a57: cmp    $0x0,%r9d
  0x0000000002dd9a5b: je     0x0000000002dd9ea4
  0x0000000002dd9a61: mov    0x20(%rdx),%edi
  0x0000000002dd9a64: shl    $0x3,%rdi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x0000000002dd9a68: cmp    $0x0,%rdi
  0x0000000002dd9a6c: movabs $0x1bfaa748,%r8    ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9a76: movabs $0x108,%r9
  0x0000000002dd9a80: jne    0x0000000002dd9a90
  0x0000000002dd9a86: movabs $0x118,%r9
  0x0000000002dd9a90: mov    (%r8,%r9,1),%rbx
  0x0000000002dd9a94: lea    0x1(%rbx),%rbx
  0x0000000002dd9a98: mov    %rbx,(%r8,%r9,1)
  0x0000000002dd9a9c: jne    0x0000000002dd9bfb
  0x0000000002dd9aa2: jmpq   0x0000000002dd9d66  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x0000000002dd9aa7: mov    %rdx,%r8
  0x0000000002dd9aaa: movabs $0x1bfab720,%r9    ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9ab4: addq   $0x1,0x178(%r9)
  0x0000000002dd9abc: movabs $0x1bfb5ef8,%r8    ;   {metadata(method data for {method} {0x000000001bdbfe20} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9ac6: mov    0xdc(%r8),%r9d
  0x0000000002dd9acd: add    $0x8,%r9d
  0x0000000002dd9ad1: mov    %r9d,0xdc(%r8)
  0x0000000002dd9ad8: movabs $0x1bdbfe18,%r8    ;   {metadata({method} {0x000000001bdbfe20} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9ae2: and    $0x7ffff8,%r9d
  0x0000000002dd9ae9: cmp    $0x0,%r9d
  0x0000000002dd9aed: je     0x0000000002dd9ebb
  0x0000000002dd9af3: mov    0xc(%rdx),%edx
  0x0000000002dd9af6: shl    $0x3,%rdx          ;*getfield in
                                                ; - java.io.BufferedInputStream::getInIfOpen@1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x0000000002dd9afa: cmp    $0x0,%rdx
  0x0000000002dd9afe: movabs $0x1bfb5ef8,%r8    ;   {metadata(method data for {method} {0x000000001bdbfe20} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9b08: movabs $0x108,%r9
  0x0000000002dd9b12: jne    0x0000000002dd9b22
  0x0000000002dd9b18: movabs $0x118,%r9
  0x0000000002dd9b22: mov    (%r8,%r9,1),%rdi
  0x0000000002dd9b26: lea    0x1(%rdi),%rdi
  0x0000000002dd9b2a: mov    %rdi,(%r8,%r9,1)
  0x0000000002dd9b2e: je     0x0000000002dd9ce7  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getInIfOpen@6 (line 158)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x0000000002dd9b34: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002dd9ed2
  0x0000000002dd9b37: mov    %rdx,%r8
  0x0000000002dd9b3a: movabs $0x1bfab720,%r9    ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9b44: mov    0x8(%r8),%r8d
  0x0000000002dd9b48: shl    $0x3,%r8
  0x0000000002dd9b4c: cmp    0x190(%r9),%r8
  0x0000000002dd9b53: jne    0x0000000002dd9b62
  0x0000000002dd9b55: addq   $0x1,0x198(%r9)
  0x0000000002dd9b5d: jmpq   0x0000000002dd9bc8
  0x0000000002dd9b62: cmp    0x1a0(%r9),%r8
  0x0000000002dd9b69: jne    0x0000000002dd9b78
  0x0000000002dd9b6b: addq   $0x1,0x1a8(%r9)
  0x0000000002dd9b73: jmpq   0x0000000002dd9bc8
  0x0000000002dd9b78: cmpq   $0x0,0x190(%r9)
  0x0000000002dd9b83: jne    0x0000000002dd9b9c
  0x0000000002dd9b85: mov    %r8,0x190(%r9)
  0x0000000002dd9b8c: movq   $0x1,0x198(%r9)
  0x0000000002dd9b97: jmpq   0x0000000002dd9bc8
  0x0000000002dd9b9c: cmpq   $0x0,0x1a0(%r9)
  0x0000000002dd9ba7: jne    0x0000000002dd9bc0
  0x0000000002dd9ba9: mov    %r8,0x1a0(%r9)
  0x0000000002dd9bb0: movq   $0x1,0x1a8(%r9)
  0x0000000002dd9bbb: jmpq   0x0000000002dd9bc8
  0x0000000002dd9bc0: addq   $0x1,0x188(%r9)
  0x0000000002dd9bc8: mov    0x60(%rsp),%r8
  0x0000000002dd9bcd: mov    0x5c(%rsp),%r9d
  0x0000000002dd9bd2: mov    0x58(%rsp),%edi    ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)

  0x0000000002dd9bd6: nop
  0x0000000002dd9bd7: nop
  0x0000000002dd9bd8: nop
  0x0000000002dd9bd9: nop
  0x0000000002dd9bda: nop
  0x0000000002dd9bdb: nop
  0x0000000002dd9bdc: nop
  0x0000000002dd9bdd: movabs $0xffffffffffffffff,%rax
  0x0000000002dd9be7: callq  0x0000000002cf63e0  ; OopMap{off=1100}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {virtual_call}
  0x0000000002dd9bec: add    $0x90,%rsp
  0x0000000002dd9bf3: pop    %rbp
  0x0000000002dd9bf4: test   %eax,-0x21d9afa(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd9bfa: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@42 (line 284)

  0x0000000002dd9bfb: mov    0x14(%rdx),%r8d    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@84 (line 291)

  0x0000000002dd9bff: movabs $0x1bfab720,%r9    ;   {metadata(method data for {method} {0x000000001bdc0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9c09: addq   $0x1,0x230(%r9)
  0x0000000002dd9c11: mov    %rdi,%rdx
  0x0000000002dd9c14: mov    0x60(%rsp),%r9
  0x0000000002dd9c19: mov    0x5c(%rsp),%edi
  0x0000000002dd9c1d: mov    %rsi,%rax
  0x0000000002dd9c20: mov    %rax,%rsi
  0x0000000002dd9c23: mov    %eax,0x68(%rsp)
  0x0000000002dd9c27: test   %rdx,%rdx
  0x0000000002dd9c2a: je     0x0000000002dd9ed7
  0x0000000002dd9c30: test   %r9,%r9
  0x0000000002dd9c33: je     0x0000000002dd9ed7
  0x0000000002dd9c39: test   %r8d,%r8d
  0x0000000002dd9c3c: jl     0x0000000002dd9ed7
  0x0000000002dd9c42: test   %edi,%edi
  0x0000000002dd9c44: jl     0x0000000002dd9ed7
  0x0000000002dd9c4a: lea    (%r8,%rsi,1),%rcx
  0x0000000002dd9c4e: cmp    0xc(%rdx),%ecx
  0x0000000002dd9c51: ja     0x0000000002dd9ed7
  0x0000000002dd9c57: lea    (%rdi,%rsi,1),%rcx
  0x0000000002dd9c5b: cmp    0xc(%r9),%ecx
  0x0000000002dd9c5f: ja     0x0000000002dd9ed7
  0x0000000002dd9c65: test   %esi,%esi
  0x0000000002dd9c67: jl     0x0000000002dd9ed7
  0x0000000002dd9c6d: je     0x0000000002dd9cb1
  0x0000000002dd9c73: movslq %r8d,%r8
  0x0000000002dd9c76: movslq %edi,%rdi
  0x0000000002dd9c79: lea    0x10(%rdx,%r8,1),%rcx
  0x0000000002dd9c7e: lea    0x10(%r9,%rdi,1),%rdx
  0x0000000002dd9c83: mov    %rsi,%r8
  0x0000000002dd9c86: sub    $0x20,%rsp
  0x0000000002dd9c8a: test   $0xf,%esp
  0x0000000002dd9c90: je     0x0000000002dd9ca8
  0x0000000002dd9c96: sub    $0x8,%rsp
  0x0000000002dd9c9a: callq  Stub::jbyte_arraycopy  ;   {runtime_call}
  0x0000000002dd9c9f: add    $0x8,%rsp
  0x0000000002dd9ca3: jmpq   0x0000000002dd9cad
  0x0000000002dd9ca8: callq  Stub::jbyte_arraycopy  ;   {runtime_call}
  0x0000000002dd9cad: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)

  0x0000000002dd9cb1: mov    0x50(%rsp),%rdx
  0x0000000002dd9cb6: mov    0x14(%rdx),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@96 (line 292)

  0x0000000002dd9cb9: add    0x68(%rsp),%eax
  0x0000000002dd9cbd: mov    %eax,0x14(%rdx)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read1@102 (line 292)

  0x0000000002dd9cc0: mov    0x68(%rsp),%eax
  0x0000000002dd9cc4: add    $0x90,%rsp
  0x0000000002dd9ccb: pop    %rbp
  0x0000000002dd9ccc: test   %eax,-0x21d9bd2(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd9cd2: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@107 (line 293)

  0x0000000002dd9cd3: mov    $0xffffffff,%eax
  0x0000000002dd9cd8: add    $0x90,%rsp
  0x0000000002dd9cdf: pop    %rbp
  0x0000000002dd9ce0: test   %eax,-0x21d9be6(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd9ce6: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@64 (line 288)

  0x0000000002dd9ce7: nop
  0x0000000002dd9ce8: jmpq   0x0000000002dd9ef0  ;   {no_reloc}
  0x0000000002dd9ced: add    %al,(%rax)
  0x0000000002dd9cef: add    %al,(%rax)
  0x0000000002dd9cf1: add    %cl,-0x75(%rcx)
  0x0000000002dd9cf4: rex.RXB (bad) 
  0x0000000002dd9cf6: lea    0x20(%rax),%rdi
  0x0000000002dd9cfa: cmp    0x70(%r15),%rdi
  0x0000000002dd9cfe: ja     0x0000000002dd9efa
  0x0000000002dd9d04: mov    %rdi,0x60(%r15)
  0x0000000002dd9d08: mov    0xa8(%rdx),%rcx
  0x0000000002dd9d0f: mov    %rcx,(%rax)
  0x0000000002dd9d12: mov    %rdx,%rcx
  0x0000000002dd9d15: shr    $0x3,%rcx
  0x0000000002dd9d19: mov    %ecx,0x8(%rax)
  0x0000000002dd9d1c: xor    %rcx,%rcx
  0x0000000002dd9d1f: mov    %ecx,0xc(%rax)
  0x0000000002dd9d22: xor    %rcx,%rcx
  0x0000000002dd9d25: mov    %rcx,0x10(%rax)
  0x0000000002dd9d29: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x0000000002dd9d2d: mov    %rax,%r8
  0x0000000002dd9d30: movabs $0x1bfb5ef8,%rdx   ;   {metadata(method data for {method} {0x000000001bdbfe20} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9d3a: addq   $0x1,0x128(%rdx)
  0x0000000002dd9d42: movabs $0x76bf1f008,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002dd9d4c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x0000000002dd9d4f: mov    %rax,0x70(%rsp)
  0x0000000002dd9d54: nop
  0x0000000002dd9d55: nop
  0x0000000002dd9d56: nop
  0x0000000002dd9d57: callq  0x0000000002cf61a0  ; OopMap{[96]=Oop [112]=Oop off=1468}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {optimized virtual_call}
  0x0000000002dd9d5c: mov    0x70(%rsp),%rax
  0x0000000002dd9d61: jmpq   0x0000000002dd9f7e  ;*athrow
                                                ; - java.io.BufferedInputStream::getInIfOpen@18 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x0000000002dd9d66: mov    %esi,0x68(%rsp)
  0x0000000002dd9d6a: nopw   0x0(%rax,%rax,1)
  0x0000000002dd9d70: jmpq   0x0000000002dd9f16  ;   {no_reloc}
  0x0000000002dd9d75: add    %al,(%rax)
  0x0000000002dd9d77: add    %al,(%rax)
  0x0000000002dd9d79: add    %cl,-0x75(%rcx)
  0x0000000002dd9d7c: rex.RXB (bad) 
  0x0000000002dd9d7e: lea    0x20(%rax),%rdi
  0x0000000002dd9d82: cmp    0x70(%r15),%rdi
  0x0000000002dd9d86: ja     0x0000000002dd9f20
  0x0000000002dd9d8c: mov    %rdi,0x60(%r15)
  0x0000000002dd9d90: mov    0xa8(%rdx),%rcx
  0x0000000002dd9d97: mov    %rcx,(%rax)
  0x0000000002dd9d9a: mov    %rdx,%rcx
  0x0000000002dd9d9d: shr    $0x3,%rcx
  0x0000000002dd9da1: mov    %ecx,0x8(%rax)
  0x0000000002dd9da4: xor    %rcx,%rcx
  0x0000000002dd9da7: mov    %ecx,0xc(%rax)
  0x0000000002dd9daa: xor    %rcx,%rcx
  0x0000000002dd9dad: mov    %rcx,0x10(%rax)
  0x0000000002dd9db1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x0000000002dd9db5: mov    %rax,%r8
  0x0000000002dd9db8: movabs $0x1bfaa748,%rdx   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9dc2: addq   $0x1,0x128(%rdx)
  0x0000000002dd9dca: movabs $0x76bf1f008,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002dd9dd4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x0000000002dd9dd7: mov    %rax,0x78(%rsp)
  0x0000000002dd9ddc: nop
  0x0000000002dd9ddd: nop
  0x0000000002dd9dde: nop
  0x0000000002dd9ddf: callq  0x0000000002cf61a0  ; OopMap{[96]=Oop [120]=Oop [80]=Oop off=1604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {optimized virtual_call}
  0x0000000002dd9de4: mov    0x78(%rsp),%rax
  0x0000000002dd9de9: jmpq   0x0000000002dd9f7e  ;*athrow
                                                ; - java.io.BufferedInputStream::getBufIfOpen@18 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x0000000002dd9dee: xchg   %ax,%ax
  0x0000000002dd9df0: jmpq   0x0000000002dd9f3c  ;   {no_reloc}
  0x0000000002dd9df5: add    %al,(%rax)
  0x0000000002dd9df7: add    %al,(%rax)
  0x0000000002dd9df9: add    %cl,-0x75(%rcx)
  0x0000000002dd9dfc: rex.RXB (bad) 
  0x0000000002dd9dfe: lea    0x20(%rax),%rdi
  0x0000000002dd9e02: cmp    0x70(%r15),%rdi
  0x0000000002dd9e06: ja     0x0000000002dd9f46
  0x0000000002dd9e0c: mov    %rdi,0x60(%r15)
  0x0000000002dd9e10: mov    0xa8(%rdx),%rcx
  0x0000000002dd9e17: mov    %rcx,(%rax)
  0x0000000002dd9e1a: mov    %rdx,%rcx
  0x0000000002dd9e1d: shr    $0x3,%rcx
  0x0000000002dd9e21: mov    %ecx,0x8(%rax)
  0x0000000002dd9e24: xor    %rcx,%rcx
  0x0000000002dd9e27: mov    %ecx,0xc(%rax)
  0x0000000002dd9e2a: xor    %rcx,%rcx
  0x0000000002dd9e2d: mov    %rcx,0x10(%rax)
  0x0000000002dd9e31: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x0000000002dd9e35: mov    %rax,%rdx
  0x0000000002dd9e38: movabs $0x1bfaa748,%rsi   ;   {metadata(method data for {method} {0x000000001bdbfed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x0000000002dd9e42: addq   $0x1,0x128(%rsi)
  0x0000000002dd9e4a: movabs $0x76bf1f008,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002dd9e54: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x0000000002dd9e57: mov    %rax,0x80(%rsp)
  0x0000000002dd9e5f: callq  0x0000000002cf61a0  ; OopMap{[96]=Oop [128]=Oop [80]=Oop off=1732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {optimized virtual_call}
  0x0000000002dd9e64: mov    0x80(%rsp),%rax
  0x0000000002dd9e6c: jmpq   0x0000000002dd9f7e
  0x0000000002dd9e71: mov    %rsi,0x8(%rsp)
  0x0000000002dd9e76: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd9e7e: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop off=1763}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read1@-1 (line 277)
                                                ;   {runtime_call}
  0x0000000002dd9e83: jmpq   0x0000000002dd9814
  0x0000000002dd9e88: mov    %rsi,0x8(%rsp)
  0x0000000002dd9e8d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd9e95: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop off=1786}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x0000000002dd9e9a: jmpq   0x0000000002dd989c
  0x0000000002dd9e9f: callq  0x0000000002dad680  ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop off=1796}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ;   {runtime_call}
  0x0000000002dd9ea4: mov    %r8,0x8(%rsp)
  0x0000000002dd9ea9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd9eb1: callq  0x0000000002db1d60  ; OopMap{[96]=Oop rdx=Oop [80]=Oop off=1814}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x0000000002dd9eb6: jmpq   0x0000000002dd9a61
  0x0000000002dd9ebb: mov    %r8,0x8(%rsp)
  0x0000000002dd9ec0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd9ec8: callq  0x0000000002db1d60  ; OopMap{[96]=Oop rdx=Oop [80]=Oop off=1837}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getInIfOpen@-1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x0000000002dd9ecd: jmpq   0x0000000002dd9af3
  0x0000000002dd9ed2: callq  0x0000000002dad680  ; OopMap{[96]=Oop rdx=Oop off=1847}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {runtime_call}
  0x0000000002dd9ed7: callq  0x0000000002cf6620  ; OopMap{[80]=Oop off=1852}
                                                ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)
                                                ;   {static_call}
  0x0000000002dd9edc: jmpq   0x0000000002dd9cb1
  0x0000000002dd9ee1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd9eeb: mov    $0xa050f00,%eax
  0x0000000002dd9ef0: callq  0x0000000002db0ca0  ; OopMap{[96]=Oop off=1877}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x0000000002dd9ef5: jmpq   0x0000000002dd9ce8
  0x0000000002dd9efa: mov    %rdx,%rdx
  0x0000000002dd9efd: callq  0x0000000002dade00  ; OopMap{[96]=Oop off=1890}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x0000000002dd9f02: jmpq   0x0000000002dd9d2d
  0x0000000002dd9f07: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd9f11: mov    $0xa050f00,%eax
  0x0000000002dd9f16: callq  0x0000000002db0ca0  ; OopMap{[96]=Oop [80]=Oop off=1915}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x0000000002dd9f1b: jmpq   0x0000000002dd9d70
  0x0000000002dd9f20: mov    %rdx,%rdx
  0x0000000002dd9f23: callq  0x0000000002dade00  ; OopMap{[96]=Oop [80]=Oop off=1928}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x0000000002dd9f28: jmpq   0x0000000002dd9db5
  0x0000000002dd9f2d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dd9f37: mov    $0xa050f00,%eax
  0x0000000002dd9f3c: callq  0x0000000002db0ca0  ; OopMap{[96]=Oop [80]=Oop off=1953}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x0000000002dd9f41: jmpq   0x0000000002dd9df0
  0x0000000002dd9f46: mov    %rdx,%rdx
  0x0000000002dd9f49: callq  0x0000000002dade00  ; OopMap{[96]=Oop [80]=Oop off=1966}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x0000000002dd9f4e: jmpq   0x0000000002dd9e35
  0x0000000002dd9f53: nop
  0x0000000002dd9f54: nop
  0x0000000002dd9f55: mov    0x2a8(%r15),%rax
  0x0000000002dd9f5c: movabs $0x0,%r10
  0x0000000002dd9f66: mov    %r10,0x2a8(%r15)
  0x0000000002dd9f6d: movabs $0x0,%r10
  0x0000000002dd9f77: mov    %r10,0x2b0(%r15)
  0x0000000002dd9f7e: add    $0x90,%rsp
  0x0000000002dd9f85: pop    %rbp
  0x0000000002dd9f86: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd9f8b: hlt    
  0x0000000002dd9f8c: hlt    
  0x0000000002dd9f8d: hlt    
  0x0000000002dd9f8e: hlt    
  0x0000000002dd9f8f: hlt    
  0x0000000002dd9f90: hlt    
  0x0000000002dd9f91: hlt    
  0x0000000002dd9f92: hlt    
  0x0000000002dd9f93: hlt    
  0x0000000002dd9f94: hlt    
  0x0000000002dd9f95: hlt    
  0x0000000002dd9f96: hlt    
  0x0000000002dd9f97: hlt    
  0x0000000002dd9f98: hlt    
  0x0000000002dd9f99: hlt    
  0x0000000002dd9f9a: hlt    
  0x0000000002dd9f9b: hlt    
  0x0000000002dd9f9c: hlt    
  0x0000000002dd9f9d: hlt    
  0x0000000002dd9f9e: hlt    
  0x0000000002dd9f9f: hlt    
[Stub Code]
  0x0000000002dd9fa0: nop                       ;   {no_reloc}
  0x0000000002dd9fa1: nop
  0x0000000002dd9fa2: nop
  0x0000000002dd9fa3: nop
  0x0000000002dd9fa4: nop
  0x0000000002dd9fa5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd9faf: jmpq   0x0000000002dd9faf  ;   {runtime_call}
  0x0000000002dd9fb4: nop
  0x0000000002dd9fb5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd9fbf: jmpq   0x0000000002dd9fbf  ;   {runtime_call}
  0x0000000002dd9fc4: nop
  0x0000000002dd9fc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd9fcf: jmpq   0x0000000002dd9fcf  ;   {runtime_call}
  0x0000000002dd9fd4: nop
  0x0000000002dd9fd5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd9fdf: jmpq   0x0000000002dd9fdf  ;   {runtime_call}
  0x0000000002dd9fe4: nop
  0x0000000002dd9fe5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd9fef: jmpq   0x0000000002dd9fef  ;   {runtime_call}
  0x0000000002dd9ff4: nop
  0x0000000002dd9ff5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd9fff: jmpq   0x0000000002dd9fff  ;   {runtime_call}
[Exception Handler]
  0x0000000002dda004: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dda009: mov    %rsp,-0x28(%rsp)
  0x0000000002dda00e: sub    $0x80,%rsp
  0x0000000002dda015: mov    %rax,0x78(%rsp)
  0x0000000002dda01a: mov    %rcx,0x70(%rsp)
  0x0000000002dda01f: mov    %rdx,0x68(%rsp)
  0x0000000002dda024: mov    %rbx,0x60(%rsp)
  0x0000000002dda029: mov    %rbp,0x50(%rsp)
  0x0000000002dda02e: mov    %rsi,0x48(%rsp)
  0x0000000002dda033: mov    %rdi,0x40(%rsp)
  0x0000000002dda038: mov    %r8,0x38(%rsp)
  0x0000000002dda03d: mov    %r9,0x30(%rsp)
  0x0000000002dda042: mov    %r10,0x28(%rsp)
  0x0000000002dda047: mov    %r11,0x20(%rsp)
  0x0000000002dda04c: mov    %r12,0x18(%rsp)
  0x0000000002dda051: mov    %r13,0x10(%rsp)
  0x0000000002dda056: mov    %r14,0x8(%rsp)
  0x0000000002dda05b: mov    %r15,(%rsp)
  0x0000000002dda05f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dda069: movabs $0x2dda009,%rdx    ;   {internal_word}
  0x0000000002dda073: mov    %rsp,%r8
  0x0000000002dda076: and    $0xfffffffffffffff0,%rsp
  0x0000000002dda07a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dda07f: hlt    
[Deopt Handler Code]
  0x0000000002dda080: movabs $0x2dda080,%r10    ;   {section_word}
  0x0000000002dda08a: push   %r10
  0x0000000002dda08c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dda091: hlt    
  0x0000000002dda092: hlt    
  0x0000000002dda093: hlt    
  0x0000000002dda094: hlt    
  0x0000000002dda095: hlt    
  0x0000000002dda096: hlt    
  0x0000000002dda097: hlt    
<nmethod compile_id='68' compiler='C1' level='3' entry='0x0000000002dd97a0' size='4352' address='0x0000000002dd9590' relocation_offset='288' insts_offset='528' stub_offset='2576' scopes_data_offset='2856' scopes_pcs_offset='3392' dependencies_offset='4320' nul_chk_table_offset='4328' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='996' iicount='996' stamp='1.558'/>
Decoding compiled method 0x0000000002dd3a50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001be698b8} &apos;getSnapshotTransformerList&apos; &apos;()[Lsun/instrument/TransformerManager$TransformerInfo;&apos; in &apos;sun/instrument/TransformerManager&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dd3ba0: mov    0x8(%rdx),%r10d
  0x0000000002dd3ba4: shl    $0x3,%r10
  0x0000000002dd3ba8: cmp    %rax,%r10
  0x0000000002dd3bab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd3bb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd3bbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd3bc0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd3bc7: push   %rbp
  0x0000000002dd3bc8: sub    $0x30,%rsp         ;*aload_0
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@0 (line 166)

  0x0000000002dd3bcc: mov    0x10(%rdx),%eax
  0x0000000002dd3bcf: shl    $0x3,%rax          ;*getfield mTransformerList
                                                ; - sun.instrument.TransformerManager::getSnapshotTransformerList@1 (line 166)

  0x0000000002dd3bd3: add    $0x30,%rsp
  0x0000000002dd3bd7: pop    %rbp
  0x0000000002dd3bd8: test   %eax,-0x21d3ade(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd3bde: retq   
  0x0000000002dd3bdf: nop
  0x0000000002dd3be0: nop
  0x0000000002dd3be1: mov    0x2a8(%r15),%rax
  0x0000000002dd3be8: movabs $0x0,%r10
  0x0000000002dd3bf2: mov    %r10,0x2a8(%r15)
  0x0000000002dd3bf9: movabs $0x0,%r10
  0x0000000002dd3c03: mov    %r10,0x2b0(%r15)
  0x0000000002dd3c0a: add    $0x30,%rsp
  0x0000000002dd3c0e: pop    %rbp
  0x0000000002dd3c0f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd3c14: hlt    
  0x0000000002dd3c15: hlt    
  0x0000000002dd3c16: hlt    
  0x0000000002dd3c17: hlt    
  0x0000000002dd3c18: hlt    
  0x0000000002dd3c19: hlt    
  0x0000000002dd3c1a: hlt    
  0x0000000002dd3c1b: hlt    
  0x0000000002dd3c1c: hlt    
  0x0000000002dd3c1d: hlt    
  0x0000000002dd3c1e: hlt    
  0x0000000002dd3c1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dd3c20: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dd3c25: mov    %rsp,-0x28(%rsp)
  0x0000000002dd3c2a: sub    $0x80,%rsp
  0x0000000002dd3c31: mov    %rax,0x78(%rsp)
  0x0000000002dd3c36: mov    %rcx,0x70(%rsp)
  0x0000000002dd3c3b: mov    %rdx,0x68(%rsp)
  0x0000000002dd3c40: mov    %rbx,0x60(%rsp)
  0x0000000002dd3c45: mov    %rbp,0x50(%rsp)
  0x0000000002dd3c4a: mov    %rsi,0x48(%rsp)
  0x0000000002dd3c4f: mov    %rdi,0x40(%rsp)
  0x0000000002dd3c54: mov    %r8,0x38(%rsp)
  0x0000000002dd3c59: mov    %r9,0x30(%rsp)
  0x0000000002dd3c5e: mov    %r10,0x28(%rsp)
  0x0000000002dd3c63: mov    %r11,0x20(%rsp)
  0x0000000002dd3c68: mov    %r12,0x18(%rsp)
  0x0000000002dd3c6d: mov    %r13,0x10(%rsp)
  0x0000000002dd3c72: mov    %r14,0x8(%rsp)
  0x0000000002dd3c77: mov    %r15,(%rsp)
  0x0000000002dd3c7b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd3c85: movabs $0x2dd3c25,%rdx    ;   {internal_word}
  0x0000000002dd3c8f: mov    %rsp,%r8
  0x0000000002dd3c92: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd3c96: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd3c9b: hlt    
[Deopt Handler Code]
  0x0000000002dd3c9c: movabs $0x2dd3c9c,%r10    ;   {section_word}
  0x0000000002dd3ca6: push   %r10
  0x0000000002dd3ca8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd3cad: hlt    
  0x0000000002dd3cae: hlt    
  0x0000000002dd3caf: hlt    
<nmethod compile_id='76' compiler='C1' level='1' entry='0x0000000002dd3ba0' size='704' address='0x0000000002dd3a50' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='273' iicount='273' stamp='1.560'/>
<writer thread='8664'/>
<task_queued compile_id='77' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='1152' iicount='1152' level='3' stamp='1.561' comment='tiered' hot_count='1152'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dd9050:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002dd91c0: mov    0x8(%rdx),%r10d
  0x0000000002dd91c4: shl    $0x3,%r10
  0x0000000002dd91c8: cmp    %rax,%r10
  0x0000000002dd91cb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd91d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd91dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd91e0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd91e7: push   %rbp
  0x0000000002dd91e8: sub    $0x40,%rsp
  0x0000000002dd91ec: mov    %rdx,%r8
  0x0000000002dd91ef: movabs $0x1bea7de8,%rbx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dd91f9: mov    0xdc(%rbx),%edx
  0x0000000002dd91ff: add    $0x8,%edx
  0x0000000002dd9202: mov    %edx,0xdc(%rbx)
  0x0000000002dd9208: movabs $0x1bce7640,%rbx   ;   {metadata({method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dd9212: and    $0x1ff8,%edx
  0x0000000002dd9218: cmp    $0x0,%edx
  0x0000000002dd921b: je     0x0000000002dd9355  ;*aload_0
                                                ; - java.lang.StringBuilder::&lt;init&gt;@0 (line 89)

  0x0000000002dd9221: mov    %r8,%rbx
  0x0000000002dd9224: movabs $0x1bea7de8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dd922e: addq   $0x1,0x108(%rdx)
  0x0000000002dd9236: movabs $0x1be9d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002dd9240: mov    0xdc(%rbx),%edx
  0x0000000002dd9246: add    $0x8,%edx
  0x0000000002dd9249: mov    %edx,0xdc(%rbx)
  0x0000000002dd924f: movabs $0x1bce3970,%rbx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002dd9259: and    $0x7ffff8,%edx
  0x0000000002dd925f: cmp    $0x0,%edx
  0x0000000002dd9262: je     0x0000000002dd936c
  0x0000000002dd9268: mov    %r8,%rbx
  0x0000000002dd926b: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002dd9275: addq   $0x1,0x108(%rdx)
  0x0000000002dd927d: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dd9287: mov    0xdc(%rbx),%edx
  0x0000000002dd928d: add    $0x8,%edx
  0x0000000002dd9290: mov    %edx,0xdc(%rbx)
  0x0000000002dd9296: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dd92a0: and    $0x7ffff8,%edx
  0x0000000002dd92a6: cmp    $0x0,%edx
  0x0000000002dd92a9: je     0x0000000002dd9383
  0x0000000002dd92af: mov    $0x10,%ebx
  0x0000000002dd92b4: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002dd92be: movslq %ebx,%rbx
  0x0000000002dd92c1: mov    %rbx,%rdi
  0x0000000002dd92c4: cmp    $0xffffff,%rbx
  0x0000000002dd92cb: ja     0x0000000002dd939a
  0x0000000002dd92d1: movabs $0x17,%rsi
  0x0000000002dd92db: lea    (%rsi,%rbx,2),%rsi
  0x0000000002dd92df: and    $0xfffffffffffffff8,%rsi
  0x0000000002dd92e3: mov    0x60(%r15),%rax
  0x0000000002dd92e7: lea    (%rax,%rsi,1),%rsi
  0x0000000002dd92eb: cmp    0x70(%r15),%rsi
  0x0000000002dd92ef: ja     0x0000000002dd939a
  0x0000000002dd92f5: mov    %rsi,0x60(%r15)
  0x0000000002dd92f9: sub    %rax,%rsi
  0x0000000002dd92fc: movq   $0x1,(%rax)
  0x0000000002dd9303: mov    %rdx,%rcx
  0x0000000002dd9306: shr    $0x3,%rcx
  0x0000000002dd930a: mov    %ecx,0x8(%rax)
  0x0000000002dd930d: mov    %ebx,0xc(%rax)
  0x0000000002dd9310: sub    $0x10,%rsi
  0x0000000002dd9314: je     0x0000000002dd932b
  0x0000000002dd931a: xor    %rbx,%rbx
  0x0000000002dd931d: shr    $0x3,%rsi
  0x0000000002dd9321: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002dd9326: dec    %rsi
  0x0000000002dd9329: jne    0x0000000002dd9321  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000002dd932b: mov    %rax,%r10
  0x0000000002dd932e: shr    $0x3,%r10
  0x0000000002dd9332: mov    %r10d,0x10(%r8)
  0x0000000002dd9336: shr    $0x9,%r8
  0x0000000002dd933a: movabs $0xea5d000,%rsi
  0x0000000002dd9344: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x0000000002dd9349: add    $0x40,%rsp
  0x0000000002dd934d: pop    %rbp
  0x0000000002dd934e: test   %eax,-0x21d9254(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd9354: retq   
  0x0000000002dd9355: mov    %rbx,0x8(%rsp)
  0x0000000002dd935a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd9362: callq  0x0000000002db1d60  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ;   {runtime_call}
  0x0000000002dd9367: jmpq   0x0000000002dd9221
  0x0000000002dd936c: mov    %rbx,0x8(%rsp)
  0x0000000002dd9371: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd9379: callq  0x0000000002db1d60  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000002dd937e: jmpq   0x0000000002dd9268
  0x0000000002dd9383: mov    %rbx,0x8(%rsp)
  0x0000000002dd9388: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd9390: callq  0x0000000002db1d60  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000002dd9395: jmpq   0x0000000002dd92af
  0x0000000002dd939a: callq  0x0000000002dae700  ; OopMap{r8=Oop off=479}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x0000000002dd939f: jmp    0x0000000002dd932b
  0x0000000002dd93a1: nop
  0x0000000002dd93a2: nop
  0x0000000002dd93a3: mov    0x2a8(%r15),%rax
  0x0000000002dd93aa: movabs $0x0,%r10
  0x0000000002dd93b4: mov    %r10,0x2a8(%r15)
  0x0000000002dd93bb: movabs $0x0,%r10
  0x0000000002dd93c5: mov    %r10,0x2b0(%r15)
  0x0000000002dd93cc: add    $0x40,%rsp
  0x0000000002dd93d0: pop    %rbp
  0x0000000002dd93d1: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd93d6: hlt    
  0x0000000002dd93d7: hlt    
  0x0000000002dd93d8: hlt    
  0x0000000002dd93d9: hlt    
  0x0000000002dd93da: hlt    
  0x0000000002dd93db: hlt    
  0x0000000002dd93dc: hlt    
  0x0000000002dd93dd: hlt    
  0x0000000002dd93de: hlt    
  0x0000000002dd93df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dd93e0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dd93e5: mov    %rsp,-0x28(%rsp)
  0x0000000002dd93ea: sub    $0x80,%rsp
  0x0000000002dd93f1: mov    %rax,0x78(%rsp)
  0x0000000002dd93f6: mov    %rcx,0x70(%rsp)
  0x0000000002dd93fb: mov    %rdx,0x68(%rsp)
  0x0000000002dd9400: mov    %rbx,0x60(%rsp)
  0x0000000002dd9405: mov    %rbp,0x50(%rsp)
  0x0000000002dd940a: mov    %rsi,0x48(%rsp)
  0x0000000002dd940f: mov    %rdi,0x40(%rsp)
  0x0000000002dd9414: mov    %r8,0x38(%rsp)
  0x0000000002dd9419: mov    %r9,0x30(%rsp)
  0x0000000002dd941e: mov    %r10,0x28(%rsp)
  0x0000000002dd9423: mov    %r11,0x20(%rsp)
  0x0000000002dd9428: mov    %r12,0x18(%rsp)
  0x0000000002dd942d: mov    %r13,0x10(%rsp)
  0x0000000002dd9432: mov    %r14,0x8(%rsp)
  0x0000000002dd9437: mov    %r15,(%rsp)
  0x0000000002dd943b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd9445: movabs $0x2dd93e5,%rdx    ;   {internal_word}
  0x0000000002dd944f: mov    %rsp,%r8
  0x0000000002dd9452: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd9456: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd945b: hlt    
[Deopt Handler Code]
  0x0000000002dd945c: movabs $0x2dd945c,%r10    ;   {section_word}
  0x0000000002dd9466: push   %r10
  0x0000000002dd9468: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd946d: hlt    
  0x0000000002dd946e: hlt    
  0x0000000002dd946f: hlt    
<nmethod compile_id='77' compiler='C1' level='3' entry='0x0000000002dd91c0' size='1312' address='0x0000000002dd9050' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1160' dependencies_offset='1304' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='1152' iicount='1152' stamp='1.566'/>
<writer thread='8664'/>
<task_queued compile_id='78' compile_kind='osr' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='737' backedge_count='54272' iicount='737' osr_bci='69' stamp='1.567' comment='tiered' hot_count='54272'/>
<task_queued compile_id='79' method='java/lang/Character toLowerCase (I)I' bytes='9' count='29696' iicount='29696' stamp='1.568' comment='tiered' hot_count='29696'/>
<task_queued compile_id='80' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='29696' iicount='29696' stamp='1.568' comment='tiered' hot_count='29696'/>
<task_queued compile_id='81' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='1280' iicount='1280' level='1' stamp='1.568' comment='tiered' hot_count='1280'/>
<task_queued compile_id='82' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1664' iicount='1664' level='3' stamp='1.568' comment='tiered' hot_count='1664'/>
<task_queued compile_id='83' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='559' backedge_count='17408' iicount='559' level='3' stamp='1.568' comment='tiered' hot_count='559'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dd8d50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcf4120} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/File&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dd8ea0: mov    0x8(%rdx),%r10d
  0x0000000002dd8ea4: shl    $0x3,%r10
  0x0000000002dd8ea8: cmp    %rax,%r10
  0x0000000002dd8eab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd8eb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd8ebc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd8ec0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd8ec7: push   %rbp
  0x0000000002dd8ec8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 512)

  0x0000000002dd8ecc: mov    0x10(%rdx),%eax
  0x0000000002dd8ecf: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 512)

  0x0000000002dd8ed3: add    $0x30,%rsp
  0x0000000002dd8ed7: pop    %rbp
  0x0000000002dd8ed8: test   %eax,-0x21d8dde(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd8ede: retq   
  0x0000000002dd8edf: nop
  0x0000000002dd8ee0: nop
  0x0000000002dd8ee1: mov    0x2a8(%r15),%rax
  0x0000000002dd8ee8: movabs $0x0,%r10
  0x0000000002dd8ef2: mov    %r10,0x2a8(%r15)
  0x0000000002dd8ef9: movabs $0x0,%r10
  0x0000000002dd8f03: mov    %r10,0x2b0(%r15)
  0x0000000002dd8f0a: add    $0x30,%rsp
  0x0000000002dd8f0e: pop    %rbp
  0x0000000002dd8f0f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd8f14: hlt    
  0x0000000002dd8f15: hlt    
  0x0000000002dd8f16: hlt    
  0x0000000002dd8f17: hlt    
  0x0000000002dd8f18: hlt    
  0x0000000002dd8f19: hlt    
  0x0000000002dd8f1a: hlt    
  0x0000000002dd8f1b: hlt    
  0x0000000002dd8f1c: hlt    
  0x0000000002dd8f1d: hlt    
  0x0000000002dd8f1e: hlt    
  0x0000000002dd8f1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dd8f20: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dd8f25: mov    %rsp,-0x28(%rsp)
  0x0000000002dd8f2a: sub    $0x80,%rsp
  0x0000000002dd8f31: mov    %rax,0x78(%rsp)
  0x0000000002dd8f36: mov    %rcx,0x70(%rsp)
  0x0000000002dd8f3b: mov    %rdx,0x68(%rsp)
  0x0000000002dd8f40: mov    %rbx,0x60(%rsp)
  0x0000000002dd8f45: mov    %rbp,0x50(%rsp)
  0x0000000002dd8f4a: mov    %rsi,0x48(%rsp)
  0x0000000002dd8f4f: mov    %rdi,0x40(%rsp)
  0x0000000002dd8f54: mov    %r8,0x38(%rsp)
  0x0000000002dd8f59: mov    %r9,0x30(%rsp)
  0x0000000002dd8f5e: mov    %r10,0x28(%rsp)
  0x0000000002dd8f63: mov    %r11,0x20(%rsp)
  0x0000000002dd8f68: mov    %r12,0x18(%rsp)
  0x0000000002dd8f6d: mov    %r13,0x10(%rsp)
  0x0000000002dd8f72: mov    %r14,0x8(%rsp)
  0x0000000002dd8f77: mov    %r15,(%rsp)
  0x0000000002dd8f7b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd8f85: movabs $0x2dd8f25,%rdx    ;   {internal_word}
  0x0000000002dd8f8f: mov    %rsp,%r8
  0x0000000002dd8f92: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd8f96: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd8f9b: hlt    
[Deopt Handler Code]
  0x0000000002dd8f9c: movabs $0x2dd8f9c,%r10    ;   {section_word}
  0x0000000002dd8fa6: push   %r10
  0x0000000002dd8fa8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd8fad: hlt    
  0x0000000002dd8fae: hlt    
  0x0000000002dd8faf: hlt    
<nmethod compile_id='81' compiler='C1' level='1' entry='0x0000000002dd8ea0' size='704' address='0x0000000002dd8d50' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='1287' iicount='1287' stamp='1.570'/>
<writer thread='8664'/>
<task_queued compile_id='84' method='java/io/File isInvalid ()Z' bytes='47' count='1792' iicount='1792' level='3' stamp='1.570' comment='tiered' hot_count='1792'/>
<task_queued compile_id='85' method='java/io/ExpiringCache entryFor (Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' bytes='57' count='1664' iicount='1664' level='3' stamp='1.571' comment='tiered' hot_count='1664'/>
<task_queued compile_id='86' method='java/util/LinkedHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='33' count='1664' iicount='1664' level='3' stamp='1.571' comment='tiered' hot_count='1664'/>
<task_queued compile_id='87' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='1536' iicount='1536' level='3' stamp='1.571' comment='tiered' hot_count='1536'/>
<task_queued compile_id='88' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='1637' backedge_count='29696' iicount='1637' stamp='1.572' comment='tiered' hot_count='1637'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002dd7410:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bd0a360} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002dd7540: mov    %eax,-0x6000(%rsp)
  0x0000000002dd7547: push   %rbp
  0x0000000002dd7548: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)

  0x0000000002dd754c: mov    %edx,%r11d
  0x0000000002dd754f: shr    $0x8,%r11d         ;*iushr
                                                ; - java.lang.CharacterData::of@3 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000002dd7553: test   %r11d,%r11d
  0x0000000002dd7556: jne    0x0000000002dd75b5  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000002dd7558: mov    %edx,%ebp
  0x0000000002dd755a: movzwl %bp,%ebp           ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002dd755d: cmp    $0x100,%ebp
  0x0000000002dd7563: jae    0x0000000002dd75a4
  0x0000000002dd7565: movabs $0x76b81ae28,%r10  ;   {oop([I)}
  0x0000000002dd756f: mov    0x10(%r10,%rbp,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002dd7574: test   $0x20000,%eax
  0x0000000002dd757a: jne    0x0000000002dd758a  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002dd757c: mov    %edx,%eax          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002dd757e: add    $0x20,%rsp
  0x0000000002dd7582: pop    %rbp
  0x0000000002dd7583: test   %eax,-0x21d7589(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dd7589: retq   
  0x0000000002dd758a: mov    %eax,%ebp
  0x0000000002dd758c: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002dd7592: cmp    $0x7fc0000,%ebp
  0x0000000002dd7598: je     0x0000000002dd75c9  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002dd759a: shl    $0x5,%eax
  0x0000000002dd759d: sar    $0x17,%eax
  0x0000000002dd75a0: add    %edx,%eax          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002dd75a2: jmp    0x0000000002dd757e
  0x0000000002dd75a4: mov    %edx,0x4(%rsp)
  0x0000000002dd75a8: mov    $0xffffffe4,%edx
  0x0000000002dd75ad: xchg   %ax,%ax
  0x0000000002dd75af: callq  0x0000000002cf57a0  ; OopMap{off=116}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x0000000002dd75b4: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002dd75b5: mov    %edx,(%rsp)
  0x0000000002dd75b8: mov    %r11d,0x4(%rsp)
  0x0000000002dd75bd: mov    $0xffffff65,%edx
  0x0000000002dd75c2: nop
  0x0000000002dd75c3: callq  0x0000000002cf57a0  ; OopMap{off=136}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ;   {runtime_call}
  0x0000000002dd75c8: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)

  0x0000000002dd75c9: mov    %edx,0x4(%rsp)
  0x0000000002dd75cd: mov    %eax,0x8(%rsp)
  0x0000000002dd75d1: mov    $0xffffff65,%edx
  0x0000000002dd75d6: nop
  0x0000000002dd75d7: callq  0x0000000002cf57a0  ; OopMap{off=156}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ;   {runtime_call}
  0x0000000002dd75dc: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)

  0x0000000002dd75dd: hlt    
  0x0000000002dd75de: hlt    
  0x0000000002dd75df: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dd75e0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dd75e5: callq  0x0000000002dd75ea
  0x0000000002dd75ea: subq   $0x5,(%rsp)
  0x0000000002dd75ef: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd75f4: hlt    
  0x0000000002dd75f5: hlt    
  0x0000000002dd75f6: hlt    
  0x0000000002dd75f7: hlt    
<nmethod compile_id='79' compiler='C2' level='4' entry='0x0000000002dd7540' size='1016' address='0x0000000002dd7410' relocation_offset='288' insts_offset='304' stub_offset='464' scopes_data_offset='544' scopes_pcs_offset='720' dependencies_offset='1008' oops_offset='488' method='java/lang/Character toLowerCase (I)I' bytes='9' count='30137' iicount='30137' stamp='1.575'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002df1c90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;
  # this:     rdx:rdx   = &apos;java/io/BufferedReader&apos;
  # parm0:    r8        = boolean
  #           [sp+0xf0]  (sp of caller)
  0x0000000002df1f20: mov    0x8(%rdx),%r10d
  0x0000000002df1f24: shl    $0x3,%r10
  0x0000000002df1f28: cmp    %rax,%r10
  0x0000000002df1f2b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df1f31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df1f3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df1f40: mov    %eax,-0x6000(%rsp)
  0x0000000002df1f47: push   %rbp
  0x0000000002df1f48: sub    $0xe0,%rsp
  0x0000000002df1f4f: mov    %rdx,0x70(%rsp)
  0x0000000002df1f54: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df1f5e: mov    0xdc(%rax),%esi
  0x0000000002df1f64: add    $0x8,%esi
  0x0000000002df1f67: mov    %esi,0xdc(%rax)
  0x0000000002df1f6d: movabs $0x1be142d0,%rax   ;   {metadata({method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df1f77: and    $0x1ff8,%esi
  0x0000000002df1f7d: cmp    $0x0,%esi
  0x0000000002df1f80: je     0x0000000002df32a2  ;*aconst_null
                                                ; - java.io.BufferedReader::readLine@0 (line 313)

  0x0000000002df1f86: mov    0xc(%rdx),%esi
  0x0000000002df1f89: shl    $0x3,%rsi          ;*getfield lock
                                                ; - java.io.BufferedReader::readLine@3 (line 316)

  0x0000000002df1f8d: mov    %rsi,0x88(%rsp)
  0x0000000002df1f95: lea    0xb0(%rsp),%rdi
  0x0000000002df1f9d: mov    %rsi,0x8(%rdi)
  0x0000000002df1fa1: mov    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002df32b9
  0x0000000002df1fa4: mov    %rax,%rbx
  0x0000000002df1fa7: and    $0x7,%rbx
  0x0000000002df1fab: cmp    $0x5,%rbx
  0x0000000002df1faf: jne    0x0000000002df2036
  0x0000000002df1fb5: mov    0x8(%rsi),%ebx
  0x0000000002df1fb8: shl    $0x3,%rbx
  0x0000000002df1fbc: mov    0xa8(%rbx),%rbx
  0x0000000002df1fc3: or     %r15,%rbx
  0x0000000002df1fc6: xor    %rax,%rbx
  0x0000000002df1fc9: and    $0xffffffffffffff87,%rbx
  0x0000000002df1fcd: je     0x0000000002df205e
  0x0000000002df1fd3: test   $0x7,%rbx
  0x0000000002df1fda: jne    0x0000000002df2023
  0x0000000002df1fdc: test   $0x300,%rbx
  0x0000000002df1fe3: jne    0x0000000002df2002
  0x0000000002df1fe5: and    $0x37f,%rax
  0x0000000002df1fec: mov    %rax,%rbx
  0x0000000002df1fef: or     %r15,%rbx
  0x0000000002df1ff2: lock cmpxchg %rbx,(%rsi)
  0x0000000002df1ff7: jne    0x0000000002df32be
  0x0000000002df1ffd: jmpq   0x0000000002df205e
  0x0000000002df2002: mov    0x8(%rsi),%ebx
  0x0000000002df2005: shl    $0x3,%rbx
  0x0000000002df2009: mov    0xa8(%rbx),%rbx
  0x0000000002df2010: or     %r15,%rbx
  0x0000000002df2013: lock cmpxchg %rbx,(%rsi)
  0x0000000002df2018: jne    0x0000000002df32be
  0x0000000002df201e: jmpq   0x0000000002df205e
  0x0000000002df2023: mov    0x8(%rsi),%ebx
  0x0000000002df2026: shl    $0x3,%rbx
  0x0000000002df202a: mov    0xa8(%rbx),%rbx
  0x0000000002df2031: lock cmpxchg %rbx,(%rsi)
  0x0000000002df2036: mov    (%rsi),%rax
  0x0000000002df2039: or     $0x1,%rax
  0x0000000002df203d: mov    %rax,(%rdi)
  0x0000000002df2040: lock cmpxchg %rdi,(%rsi)
  0x0000000002df2045: je     0x0000000002df205e
  0x0000000002df204b: sub    %rsp,%rax
  0x0000000002df204e: and    $0xfffffffffffff007,%rax
  0x0000000002df2055: mov    %rax,(%rdi)
  0x0000000002df2058: jne    0x0000000002df32be  ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)

  0x0000000002df205e: mov    %rdx,%rdi
  0x0000000002df2061: movabs $0x1beba210,%rbx   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df206b: addq   $0x1,0x108(%rbx)
  0x0000000002df2073: movabs $0x1bebd658,%rdi   ;   {metadata(method data for {method} {0x000000001be13bb0} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df207d: mov    0xdc(%rdi),%ebx
  0x0000000002df2083: add    $0x8,%ebx
  0x0000000002df2086: mov    %ebx,0xdc(%rdi)
  0x0000000002df208c: movabs $0x1be13ba8,%rdi   ;   {metadata({method} {0x000000001be13bb0} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2096: and    $0x7ffff8,%ebx
  0x0000000002df209c: cmp    $0x0,%ebx
  0x0000000002df209f: je     0x0000000002df32d1
  0x0000000002df20a5: mov    0x28(%rdx),%edi
  0x0000000002df20a8: shl    $0x3,%rdi          ;*getfield in
                                                ; - java.io.BufferedReader::ensureOpen@1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002df20ac: cmp    $0x0,%rdi
  0x0000000002df20b0: movabs $0x1bebd658,%rdi   ;   {metadata(method data for {method} {0x000000001be13bb0} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df20ba: movabs $0x108,%rbx
  0x0000000002df20c4: jne    0x0000000002df20d4
  0x0000000002df20ca: movabs $0x118,%rbx
  0x0000000002df20d4: mov    (%rdi,%rbx,1),%rax
  0x0000000002df20d8: lea    0x1(%rax),%rax
  0x0000000002df20dc: mov    %rax,(%rdi,%rbx,1)
  0x0000000002df20e0: je     0x0000000002df3073  ;*ifnonnull
                                                ; - java.io.BufferedReader::ensureOpen@4 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002df20e6: cmp    $0x0,%r8d
  0x0000000002df20ea: movabs $0x1beba210,%rdi   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df20f4: movabs $0x118,%rbx
  0x0000000002df20fe: jne    0x0000000002df210e
  0x0000000002df2104: movabs $0x128,%rbx
  0x0000000002df210e: mov    (%rdi,%rbx,1),%rax
  0x0000000002df2112: lea    0x1(%rax),%rax
  0x0000000002df2116: mov    %rax,(%rdi,%rbx,1)
  0x0000000002df211a: jne    0x0000000002df215d  ;*ifne
                                                ; - java.io.BufferedReader::readLine@15 (line 318)

  0x0000000002df2120: movsbl 0x24(%rdx),%edi    ;*getfield skipLF
                                                ; - java.io.BufferedReader::readLine@19 (line 318)

  0x0000000002df2124: cmp    $0x0,%edi
  0x0000000002df2127: movabs $0x1beba210,%rdi   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2131: movabs $0x138,%rbx
  0x0000000002df213b: je     0x0000000002df214b
  0x0000000002df2141: movabs $0x148,%rbx
  0x0000000002df214b: mov    (%rdi,%rbx,1),%rax
  0x0000000002df214f: lea    0x1(%rax),%rax
  0x0000000002df2153: mov    %rax,(%rdi,%rbx,1)
  0x0000000002df2157: je     0x0000000002df2177  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@22 (line 318)

  0x0000000002df215d: movabs $0x1beba210,%rdi   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2167: incl   0x158(%rdi)
  0x0000000002df216d: mov    $0x1,%edi
  0x0000000002df2172: jmpq   0x0000000002df217c  ;*goto
                                                ; - java.io.BufferedReader::readLine@26 (line 318)

  0x0000000002df2177: mov    $0x0,%edi          ;*istore
                                                ; - java.io.BufferedReader::readLine@30 (line 318)

  0x0000000002df217c: movabs $0x0,%rbx          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@32 (line 323)
                                                ;   {oop(NULL)}
  0x0000000002df2186: mov    %edi,0x78(%rsp)
  0x0000000002df218a: mov    %rbx,0x80(%rsp)
  0x0000000002df2192: nopw   0x0(%rax,%rax,1)
  0x0000000002df2198: mov    0x18(%rdx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@33 (line 323)

  0x0000000002df219b: mov    0x14(%rdx),%ecx    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@37 (line 323)

  0x0000000002df219e: cmp    %ecx,%eax
  0x0000000002df21a0: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df21aa: movabs $0x170,%rcx
  0x0000000002df21b4: jl     0x0000000002df21c4
  0x0000000002df21ba: movabs $0x180,%rcx
  0x0000000002df21c4: mov    (%rax,%rcx,1),%r8
  0x0000000002df21c8: lea    0x1(%r8),%r8
  0x0000000002df21cc: mov    %r8,(%rax,%rcx,1)
  0x0000000002df21d0: jl     0x0000000002df2201  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@40 (line 323)

  0x0000000002df21d6: mov    %rdx,%rax
  0x0000000002df21d9: movabs $0x1beba210,%rcx   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df21e3: addq   $0x1,0x190(%rcx)
  0x0000000002df21eb: mov    %rdx,%rax
  0x0000000002df21ee: mov    %rax,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)

  0x0000000002df21f1: nop
  0x0000000002df21f2: nop
  0x0000000002df21f3: nop
  0x0000000002df21f4: nop
  0x0000000002df21f5: nop
  0x0000000002df21f6: nop
  0x0000000002df21f7: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=732}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedReader::readLine@44 (line 324)
                                                ;   {optimized virtual_call}
  0x0000000002df21fc: mov    0x70(%rsp),%rdx
  0x0000000002df2201: mov    0x18(%rdx),%esi    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@48 (line 325)

  0x0000000002df2204: mov    0x14(%rdx),%edi    ;*getfield nChars
                                                ; - java.io.BufferedReader::readLine@52 (line 325)

  0x0000000002df2207: cmp    %edi,%esi
  0x0000000002df2209: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2213: movabs $0x1a0,%rcx
  0x0000000002df221d: jl     0x0000000002df222d
  0x0000000002df2223: movabs $0x1b0,%rcx
  0x0000000002df222d: mov    (%rax,%rcx,1),%rbx
  0x0000000002df2231: lea    0x1(%rbx),%rbx
  0x0000000002df2235: mov    %rbx,(%rax,%rcx,1)
  0x0000000002df2239: jge    0x0000000002df2cea  ;*if_icmplt
                                                ; - java.io.BufferedReader::readLine@55 (line 325)

  0x0000000002df223f: mov    0x78(%rsp),%ebx
  0x0000000002df2243: cmp    $0x0,%ebx
  0x0000000002df2246: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2250: movabs $0x260,%rcx
  0x0000000002df225a: je     0x0000000002df226a
  0x0000000002df2260: movabs $0x270,%rcx
  0x0000000002df226a: mov    (%rax,%rcx,1),%rbx
  0x0000000002df226e: lea    0x1(%rbx),%rbx
  0x0000000002df2272: mov    %rbx,(%rax,%rcx,1)
  0x0000000002df2276: je     0x0000000002df22d2  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@90 (line 336)

  0x0000000002df227c: mov    0x2c(%rdx),%eax
  0x0000000002df227f: shl    $0x3,%rax          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@94 (line 336)

  0x0000000002df2283: movslq %esi,%rcx
  0x0000000002df2286: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x0000000002df32e8
  0x0000000002df2289: jae    0x0000000002df32f2
  0x0000000002df228f: movzwl 0x10(%rax,%rcx,2),%eax  ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)

  0x0000000002df2294: cmp    $0xa,%eax
  0x0000000002df2297: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df22a1: movabs $0x280,%rcx
  0x0000000002df22ab: jne    0x0000000002df22bb
  0x0000000002df22b1: movabs $0x290,%rcx
  0x0000000002df22bb: mov    (%rax,%rcx,1),%rbx
  0x0000000002df22bf: lea    0x1(%rbx),%rbx
  0x0000000002df22c3: mov    %rbx,(%rax,%rcx,1)
  0x0000000002df22c7: jne    0x0000000002df22d2  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@104 (line 336)

  0x0000000002df22cd: inc    %esi
  0x0000000002df22cf: mov    %esi,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@114 (line 337)

  0x0000000002df22d2: movb   $0x0,0x24(%rdx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@119 (line 338)

  0x0000000002df22d6: mov    0x18(%rdx),%r9d    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@126 (line 342)

  0x0000000002df22da: mov    %r9,%r8
  0x0000000002df22dd: mov    $0x0,%esi
  0x0000000002df22e2: jmpq   0x0000000002df23be  ;*iload
                                                ; - java.io.BufferedReader::readLine@131 (line 342)

  0x0000000002df22e7: nop
  0x0000000002df22e8: mov    0x2c(%rdx),%esi
  0x0000000002df22eb: shl    $0x3,%rsi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@141 (line 343)

  0x0000000002df22ef: movslq %r8d,%rax
  0x0000000002df22f2: cmp    0xc(%rsi),%r8d     ; implicit exception: dispatches to 0x0000000002df32fb
  0x0000000002df22f6: jae    0x0000000002df3305
  0x0000000002df22fc: movzwl 0x10(%rsi,%rax,2),%esi  ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)

  0x0000000002df2301: cmp    $0xa,%esi
  0x0000000002df2304: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df230e: movabs $0x2c0,%rcx
  0x0000000002df2318: je     0x0000000002df2328
  0x0000000002df231e: movabs $0x2d0,%rcx
  0x0000000002df2328: mov    (%rax,%rcx,1),%rbx
  0x0000000002df232c: lea    0x1(%rbx),%rbx
  0x0000000002df2330: mov    %rbx,(%rax,%rcx,1)
  0x0000000002df2334: je     0x0000000002df2401  ;*if_icmpeq
                                                ; - java.io.BufferedReader::readLine@153 (line 344)

  0x0000000002df233a: cmp    $0xd,%esi
  0x0000000002df233d: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2347: movabs $0x2e0,%rcx
  0x0000000002df2351: jne    0x0000000002df2361
  0x0000000002df2357: movabs $0x2f0,%rcx
  0x0000000002df2361: mov    (%rax,%rcx,1),%rbx
  0x0000000002df2365: lea    0x1(%rbx),%rbx
  0x0000000002df2369: mov    %rbx,(%rax,%rcx,1)
  0x0000000002df236d: je     0x0000000002df2401  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@160 (line 344)

  0x0000000002df2373: inc    %r8d
  0x0000000002df2376: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2380: mov    0xe0(%rax),%ecx
  0x0000000002df2386: add    $0x8,%ecx
  0x0000000002df2389: mov    %ecx,0xe0(%rax)
  0x0000000002df238f: movabs $0x1be142d0,%rax   ;   {metadata({method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2399: and    $0xfff8,%ecx
  0x0000000002df239f: cmp    $0x0,%ecx
  0x0000000002df23a2: je     0x0000000002df330e  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop [184]=Oop off=1160}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x0000000002df23a8: test   %eax,-0x21f22ae(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002df23ae: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df23b8: incl   0x318(%rax)        ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)

  0x0000000002df23be: cmp    %edi,%r8d
  0x0000000002df23c1: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df23cb: movabs $0x2a0,%rcx
  0x0000000002df23d5: jge    0x0000000002df23e5
  0x0000000002df23db: movabs $0x2b0,%rcx
  0x0000000002df23e5: mov    (%rax,%rcx,1),%rbx
  0x0000000002df23e9: lea    0x1(%rbx),%rbx
  0x0000000002df23ed: mov    %rbx,(%rax,%rcx,1)
  0x0000000002df23f1: jl     0x0000000002df22e8  ;*if_icmpge
                                                ; - java.io.BufferedReader::readLine@137 (line 342)

  0x0000000002df23f7: mov    $0x0,%edi
  0x0000000002df23fc: jmpq   0x0000000002df2416  ;*aload_0
                                                ; - java.io.BufferedReader::readLine@175 (line 350)

  0x0000000002df2401: movabs $0x1beba210,%rdi   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df240b: incl   0x300(%rdi)
  0x0000000002df2411: mov    $0x1,%edi          ;*goto
                                                ; - java.io.BufferedReader::readLine@166 (line 346)

  0x0000000002df2416: mov    %r8d,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@183 (line 351)

  0x0000000002df241a: cmp    $0x0,%edi
  0x0000000002df241d: movabs $0x1beba210,%rdi   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2427: movabs $0x330,%rax
  0x0000000002df2431: je     0x0000000002df2441
  0x0000000002df2437: movabs $0x340,%rax
  0x0000000002df2441: mov    (%rdi,%rax,1),%rcx
  0x0000000002df2445: lea    0x1(%rcx),%rcx
  0x0000000002df2449: mov    %rcx,(%rdi,%rax,1)
  0x0000000002df244d: jne    0x0000000002df28e6  ;*ifeq
                                                ; - java.io.BufferedReader::readLine@188 (line 353)

  0x0000000002df2453: mov    0x80(%rsp),%rbx
  0x0000000002df245b: cmp    $0x0,%rbx
  0x0000000002df245f: movabs $0x1beba210,%rsi   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2469: movabs $0x418,%rdi
  0x0000000002df2473: jne    0x0000000002df2483
  0x0000000002df2479: movabs $0x428,%rdi
  0x0000000002df2483: mov    (%rsi,%rdi,1),%rax
  0x0000000002df2487: lea    0x1(%rax),%rax
  0x0000000002df248b: mov    %rax,(%rsi,%rdi,1)
  0x0000000002df248f: mov    %rdx,%r11
  0x0000000002df2492: jne    0x0000000002df2658  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@265 (line 368)

  0x0000000002df2498: movabs $0x7c000d608,%rdx  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x0000000002df24a2: mov    0x60(%r15),%rax
  0x0000000002df24a6: lea    0x18(%rax),%rdi
  0x0000000002df24aa: cmp    0x70(%r15),%rdi
  0x0000000002df24ae: ja     0x0000000002df3325
  0x0000000002df24b4: mov    %rdi,0x60(%r15)
  0x0000000002df24b8: mov    0xa8(%rdx),%rcx
  0x0000000002df24bf: mov    %rcx,(%rax)
  0x0000000002df24c2: mov    %rdx,%rcx
  0x0000000002df24c5: shr    $0x3,%rcx
  0x0000000002df24c9: mov    %ecx,0x8(%rax)
  0x0000000002df24cc: xor    %rcx,%rcx
  0x0000000002df24cf: mov    %ecx,0xc(%rax)
  0x0000000002df24d2: xor    %rcx,%rcx
  0x0000000002df24d5: mov    %rcx,0x10(%rax)
  0x0000000002df24d9: mov    %rax,%r13          ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)

  0x0000000002df24dc: movabs $0x76b80d428,%rbx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/io/BufferedReader&apos;)}
  0x0000000002df24e6: mov    0x74(%rbx),%ebx    ;*getstatic defaultExpectedLineLength
                                                ; - java.io.BufferedReader::readLine@272 (line 369)

  0x0000000002df24e9: mov    %r13,%rdx
  0x0000000002df24ec: movabs $0x1beba210,%rsi   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df24f6: addq   $0x1,0x438(%rsi)
  0x0000000002df24fe: movabs $0x1beb58b0,%rdx   ;   {metadata(method data for {method} {0x000000001bcdf060} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df2508: mov    0xdc(%rdx),%esi
  0x0000000002df250e: add    $0x8,%esi
  0x0000000002df2511: mov    %esi,0xdc(%rdx)
  0x0000000002df2517: movabs $0x1bcdf058,%rdx   ;   {metadata({method} {0x000000001bcdf060} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df2521: and    $0x7ffff8,%esi
  0x0000000002df2527: cmp    $0x0,%esi
  0x0000000002df252a: je     0x0000000002df3332
  0x0000000002df2530: mov    %r13,%rdx
  0x0000000002df2533: movabs $0x1beb58b0,%rsi   ;   {metadata(method data for {method} {0x000000001bcdf060} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df253d: addq   $0x1,0x108(%rsi)
  0x0000000002df2545: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002df254f: mov    0xdc(%rdx),%esi
  0x0000000002df2555: add    $0x8,%esi
  0x0000000002df2558: mov    %esi,0xdc(%rdx)
  0x0000000002df255e: movabs $0x1bce3970,%rdx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002df2568: and    $0x7ffff8,%esi
  0x0000000002df256e: cmp    $0x0,%esi
  0x0000000002df2571: je     0x0000000002df3349
  0x0000000002df2577: mov    %r13,%rdx
  0x0000000002df257a: movabs $0x1be9d0f8,%rsi   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002df2584: addq   $0x1,0x108(%rsi)
  0x0000000002df258c: movabs $0x1bda1c10,%rdx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df2596: mov    0xdc(%rdx),%esi
  0x0000000002df259c: add    $0x8,%esi
  0x0000000002df259f: mov    %esi,0xdc(%rdx)
  0x0000000002df25a5: movabs $0x1bc70480,%rdx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df25af: and    $0x7ffff8,%esi
  0x0000000002df25b5: cmp    $0x0,%esi
  0x0000000002df25b8: je     0x0000000002df3360
  0x0000000002df25be: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002df25c8: movslq %ebx,%rbx
  0x0000000002df25cb: mov    %rbx,%rdi
  0x0000000002df25ce: cmp    $0xffffff,%rbx
  0x0000000002df25d5: ja     0x0000000002df3377
  0x0000000002df25db: movabs $0x17,%rsi
  0x0000000002df25e5: lea    (%rsi,%rbx,2),%rsi
  0x0000000002df25e9: and    $0xfffffffffffffff8,%rsi
  0x0000000002df25ed: mov    0x60(%r15),%rax
  0x0000000002df25f1: lea    (%rax,%rsi,1),%rsi
  0x0000000002df25f5: cmp    0x70(%r15),%rsi
  0x0000000002df25f9: ja     0x0000000002df3377
  0x0000000002df25ff: mov    %rsi,0x60(%r15)
  0x0000000002df2603: sub    %rax,%rsi
  0x0000000002df2606: movq   $0x1,(%rax)
  0x0000000002df260d: mov    %rdx,%rcx
  0x0000000002df2610: shr    $0x3,%rcx
  0x0000000002df2614: mov    %ecx,0x8(%rax)
  0x0000000002df2617: mov    %ebx,0xc(%rax)
  0x0000000002df261a: sub    $0x10,%rsi
  0x0000000002df261e: je     0x0000000002df2635
  0x0000000002df2624: xor    %rbx,%rbx
  0x0000000002df2627: shr    $0x3,%rsi
  0x0000000002df262b: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002df2630: dec    %rsi
  0x0000000002df2633: jne    0x0000000002df262b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x0000000002df2635: mov    %rax,%r10
  0x0000000002df2638: shr    $0x3,%r10
  0x0000000002df263c: mov    %r10d,0x10(%r13)
  0x0000000002df2640: mov    %r13,%rax
  0x0000000002df2643: shr    $0x9,%rax
  0x0000000002df2647: movabs $0xea5d000,%rdi
  0x0000000002df2651: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)

  0x0000000002df2655: mov    %r13,%rbx          ;*aload_2
                                                ; - java.io.BufferedReader::readLine@279 (line 370)

  0x0000000002df2658: mov    0x2c(%r11),%edi
  0x0000000002df265c: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@281 (line 370)

  0x0000000002df2660: cmp    (%rbx),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ; implicit exception: dispatches to 0x0000000002df3381
  0x0000000002df2663: mov    %rbx,%rax
  0x0000000002df2666: movabs $0x1beba210,%rdx   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2670: mov    0x8(%rax),%eax
  0x0000000002df2673: shl    $0x3,%rax
  0x0000000002df2677: cmp    0x450(%rdx),%rax
  0x0000000002df267e: jne    0x0000000002df268d
  0x0000000002df2680: addq   $0x1,0x458(%rdx)
  0x0000000002df2688: jmpq   0x0000000002df26f3
  0x0000000002df268d: cmp    0x460(%rdx),%rax
  0x0000000002df2694: jne    0x0000000002df26a3
  0x0000000002df2696: addq   $0x1,0x468(%rdx)
  0x0000000002df269e: jmpq   0x0000000002df26f3
  0x0000000002df26a3: cmpq   $0x0,0x450(%rdx)
  0x0000000002df26ae: jne    0x0000000002df26c7
  0x0000000002df26b0: mov    %rax,0x450(%rdx)
  0x0000000002df26b7: movq   $0x1,0x458(%rdx)
  0x0000000002df26c2: jmpq   0x0000000002df26f3
  0x0000000002df26c7: cmpq   $0x0,0x460(%rdx)
  0x0000000002df26d2: jne    0x0000000002df26eb
  0x0000000002df26d4: mov    %rax,0x460(%rdx)
  0x0000000002df26db: movq   $0x1,0x468(%rdx)
  0x0000000002df26e6: jmpq   0x0000000002df26f3
  0x0000000002df26eb: addq   $0x1,0x448(%rdx)
  0x0000000002df26f3: mov    %r8,%rdx
  0x0000000002df26f6: sub    %r9d,%edx
  0x0000000002df26f9: lea    0xc0(%rsp),%r8
  0x0000000002df2701: mov    %rbx,0x8(%r8)
  0x0000000002df2705: mov    (%rbx),%rax
  0x0000000002df2708: mov    %rax,%rsi
  0x0000000002df270b: and    $0x7,%rsi
  0x0000000002df270f: cmp    $0x5,%rsi
  0x0000000002df2713: jne    0x0000000002df279a
  0x0000000002df2719: mov    0x8(%rbx),%esi
  0x0000000002df271c: shl    $0x3,%rsi
  0x0000000002df2720: mov    0xa8(%rsi),%rsi
  0x0000000002df2727: or     %r15,%rsi
  0x0000000002df272a: xor    %rax,%rsi
  0x0000000002df272d: and    $0xffffffffffffff87,%rsi
  0x0000000002df2731: je     0x0000000002df27c2
  0x0000000002df2737: test   $0x7,%rsi
  0x0000000002df273e: jne    0x0000000002df2787
  0x0000000002df2740: test   $0x300,%rsi
  0x0000000002df2747: jne    0x0000000002df2766
  0x0000000002df2749: and    $0x37f,%rax
  0x0000000002df2750: mov    %rax,%rsi
  0x0000000002df2753: or     %r15,%rsi
  0x0000000002df2756: lock cmpxchg %rsi,(%rbx)
  0x0000000002df275b: jne    0x0000000002df3386
  0x0000000002df2761: jmpq   0x0000000002df27c2
  0x0000000002df2766: mov    0x8(%rbx),%esi
  0x0000000002df2769: shl    $0x3,%rsi
  0x0000000002df276d: mov    0xa8(%rsi),%rsi
  0x0000000002df2774: or     %r15,%rsi
  0x0000000002df2777: lock cmpxchg %rsi,(%rbx)
  0x0000000002df277c: jne    0x0000000002df3386
  0x0000000002df2782: jmpq   0x0000000002df27c2
  0x0000000002df2787: mov    0x8(%rbx),%esi
  0x0000000002df278a: shl    $0x3,%rsi
  0x0000000002df278e: mov    0xa8(%rsi),%rsi
  0x0000000002df2795: lock cmpxchg %rsi,(%rbx)
  0x0000000002df279a: mov    (%rbx),%rax
  0x0000000002df279d: or     $0x1,%rax
  0x0000000002df27a1: mov    %rax,(%r8)
  0x0000000002df27a4: lock cmpxchg %r8,(%rbx)
  0x0000000002df27a9: je     0x0000000002df27c2
  0x0000000002df27af: sub    %rsp,%rax
  0x0000000002df27b2: and    $0xfffffffffffff007,%rax
  0x0000000002df27b9: mov    %rax,(%r8)
  0x0000000002df27bc: jne    0x0000000002df3386  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002df27c2: movabs $0x1bfcc860,%r8    ;   {metadata(method data for {method} {0x000000001bcdfe10} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df27cc: mov    0xdc(%r8),%esi
  0x0000000002df27d3: add    $0x8,%esi
  0x0000000002df27d6: mov    %esi,0xdc(%r8)
  0x0000000002df27dd: movabs $0x1bcdfe08,%r8    ;   {metadata({method} {0x000000001bcdfe10} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df27e7: and    $0x7ffff8,%esi
  0x0000000002df27ed: cmp    $0x0,%esi
  0x0000000002df27f0: je     0x0000000002df3399
  0x0000000002df27f6: movl   $0x0,0x14(%rbx)
  0x0000000002df27fd: mov    %rbx,%r8
  0x0000000002df2800: shr    $0x9,%r8
  0x0000000002df2804: movabs $0xea5d000,%rsi
  0x0000000002df280e: movb   $0x0,(%r8,%rsi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002df2813: mov    %rbx,%r8
  0x0000000002df2816: movabs $0x1bfcc860,%rsi   ;   {metadata(method data for {method} {0x000000001bcdfe10} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df2820: addq   $0x1,0x108(%rsi)
  0x0000000002df2828: mov    %rdi,%r8
  0x0000000002df282b: mov    %rdx,%rdi
  0x0000000002df282e: mov    %rbx,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002df2831: mov    %rbx,0x90(%rsp)
  0x0000000002df2839: nop
  0x0000000002df283a: nop
  0x0000000002df283b: nop
  0x0000000002df283c: nop
  0x0000000002df283d: nop
  0x0000000002df283e: nop
  0x0000000002df283f: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop [200]=Oop off=2340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {optimized virtual_call}
  0x0000000002df2844: lea    0xc0(%rsp),%rax
  0x0000000002df284c: mov    0x8(%rax),%rsi
  0x0000000002df2850: mov    (%rsi),%rdx
  0x0000000002df2853: and    $0x7,%rdx
  0x0000000002df2857: cmp    $0x5,%rdx
  0x0000000002df285b: je     0x0000000002df2878
  0x0000000002df2861: mov    (%rax),%rdx
  0x0000000002df2864: test   %rdx,%rdx
  0x0000000002df2867: je     0x0000000002df2878
  0x0000000002df286d: lock cmpxchg %rdx,(%rsi)
  0x0000000002df2872: jne    0x0000000002df33b0  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002df2878: movabs $0x1beba210,%rdx   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2882: mov    0xe0(%rdx),%esi
  0x0000000002df2888: add    $0x8,%esi
  0x0000000002df288b: mov    %esi,0xe0(%rdx)
  0x0000000002df2891: movabs $0x1be142d0,%rdx   ;   {metadata({method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df289b: and    $0xfff8,%esi
  0x0000000002df28a1: cmp    $0x0,%esi
  0x0000000002df28a4: je     0x0000000002df33c6  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop off=2442}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x0000000002df28aa: test   %eax,-0x21f27b0(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002df28b0: movabs $0x1beba210,%rdx   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df28ba: incl   0x478(%rdx)
  0x0000000002df28c0: mov    0x90(%rsp),%rbx
  0x0000000002df28c8: mov    %rbx,%rcx
  0x0000000002df28cb: mov    $0x0,%ebx
  0x0000000002df28d0: mov    %ebx,0x78(%rsp)
  0x0000000002df28d4: mov    %rcx,0x80(%rsp)
  0x0000000002df28dc: mov    0x70(%rsp),%rdx
  0x0000000002df28e1: jmpq   0x0000000002df2198  ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)

  0x0000000002df28e6: mov    0x80(%rsp),%rcx
  0x0000000002df28ee: cmp    $0x0,%rcx
  0x0000000002df28f2: movabs $0x1beba210,%rdx   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df28fc: movabs $0x350,%rdi
  0x0000000002df2906: jne    0x0000000002df2916
  0x0000000002df290c: movabs $0x360,%rdi
  0x0000000002df2916: mov    (%rdx,%rdi,1),%rax
  0x0000000002df291a: lea    0x1(%rax),%rax
  0x0000000002df291e: mov    %rax,(%rdx,%rdi,1)
  0x0000000002df2922: mov    %esi,0x7c(%rsp)
  0x0000000002df2926: mov    0x70(%rsp),%rdx
  0x0000000002df292b: jne    0x0000000002df29d1  ;*ifnonnull
                                                ; - java.io.BufferedReader::readLine@192 (line 355)

  0x0000000002df2931: mov    %rdx,%rbx
  0x0000000002df2934: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002df293e: mov    0x60(%r15),%rax
  0x0000000002df2942: lea    0x18(%rax),%rdi
  0x0000000002df2946: cmp    0x70(%r15),%rdi
  0x0000000002df294a: ja     0x0000000002df33dd
  0x0000000002df2950: mov    %rdi,0x60(%r15)
  0x0000000002df2954: mov    0xa8(%rdx),%rcx
  0x0000000002df295b: mov    %rcx,(%rax)
  0x0000000002df295e: mov    %rdx,%rcx
  0x0000000002df2961: shr    $0x3,%rcx
  0x0000000002df2965: mov    %ecx,0x8(%rax)
  0x0000000002df2968: xor    %rcx,%rcx
  0x0000000002df296b: mov    %ecx,0xc(%rax)
  0x0000000002df296e: xor    %rcx,%rcx
  0x0000000002df2971: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)

  0x0000000002df2975: mov    0x2c(%rbx),%edi
  0x0000000002df2978: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@200 (line 356)

  0x0000000002df297c: mov    %rax,%rdx
  0x0000000002df297f: movabs $0x1beba210,%rsi   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2989: addq   $0x1,0x370(%rsi)
  0x0000000002df2991: mov    %r8,%rdx
  0x0000000002df2994: sub    %r9d,%edx
  0x0000000002df2997: mov    %rdi,%r8
  0x0000000002df299a: mov    %rdx,%rdi
  0x0000000002df299d: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)

  0x0000000002df29a0: mov    %rax,0x98(%rsp)
  0x0000000002df29a8: nop
  0x0000000002df29a9: nop
  0x0000000002df29aa: nop
  0x0000000002df29ab: nop
  0x0000000002df29ac: nop
  0x0000000002df29ad: nop
  0x0000000002df29ae: nop
  0x0000000002df29af: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop [152]=Oop [112]=Oop [184]=Oop off=2708}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::readLine@208 (line 356)
                                                ;   {optimized virtual_call}
  0x0000000002df29b4: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df29be: incl   0x380(%rax)
  0x0000000002df29c4: mov    0x98(%rsp),%rsi
  0x0000000002df29cc: jmpq   0x0000000002df2c97  ;*goto
                                                ; - java.io.BufferedReader::readLine@213 (line 356)

  0x0000000002df29d1: mov    0x2c(%rdx),%edi
  0x0000000002df29d4: shl    $0x3,%rdi          ;*getfield cb
                                                ; - java.io.BufferedReader::readLine@218 (line 358)

  0x0000000002df29d8: cmp    (%rcx),%rax        ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ; implicit exception: dispatches to 0x0000000002df33ea
  0x0000000002df29db: mov    %rcx,%rbx
  0x0000000002df29de: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df29e8: mov    0x8(%rbx),%ebx
  0x0000000002df29eb: shl    $0x3,%rbx
  0x0000000002df29ef: cmp    0x3a0(%rax),%rbx
  0x0000000002df29f6: jne    0x0000000002df2a05
  0x0000000002df29f8: addq   $0x1,0x3a8(%rax)
  0x0000000002df2a00: jmpq   0x0000000002df2a6b
  0x0000000002df2a05: cmp    0x3b0(%rax),%rbx
  0x0000000002df2a0c: jne    0x0000000002df2a1b
  0x0000000002df2a0e: addq   $0x1,0x3b8(%rax)
  0x0000000002df2a16: jmpq   0x0000000002df2a6b
  0x0000000002df2a1b: cmpq   $0x0,0x3a0(%rax)
  0x0000000002df2a26: jne    0x0000000002df2a3f
  0x0000000002df2a28: mov    %rbx,0x3a0(%rax)
  0x0000000002df2a2f: movq   $0x1,0x3a8(%rax)
  0x0000000002df2a3a: jmpq   0x0000000002df2a6b
  0x0000000002df2a3f: cmpq   $0x0,0x3b0(%rax)
  0x0000000002df2a4a: jne    0x0000000002df2a63
  0x0000000002df2a4c: mov    %rbx,0x3b0(%rax)
  0x0000000002df2a53: movq   $0x1,0x3b8(%rax)
  0x0000000002df2a5e: jmpq   0x0000000002df2a6b
  0x0000000002df2a63: addq   $0x1,0x398(%rax)
  0x0000000002df2a6b: mov    %r8,%rsi
  0x0000000002df2a6e: sub    %r9d,%esi
  0x0000000002df2a71: lea    0xc0(%rsp),%r8
  0x0000000002df2a79: mov    %rcx,0x8(%r8)
  0x0000000002df2a7d: mov    (%rcx),%rax
  0x0000000002df2a80: mov    %rax,%rbx
  0x0000000002df2a83: and    $0x7,%rbx
  0x0000000002df2a87: cmp    $0x5,%rbx
  0x0000000002df2a8b: jne    0x0000000002df2b12
  0x0000000002df2a91: mov    0x8(%rcx),%ebx
  0x0000000002df2a94: shl    $0x3,%rbx
  0x0000000002df2a98: mov    0xa8(%rbx),%rbx
  0x0000000002df2a9f: or     %r15,%rbx
  0x0000000002df2aa2: xor    %rax,%rbx
  0x0000000002df2aa5: and    $0xffffffffffffff87,%rbx
  0x0000000002df2aa9: je     0x0000000002df2b3a
  0x0000000002df2aaf: test   $0x7,%rbx
  0x0000000002df2ab6: jne    0x0000000002df2aff
  0x0000000002df2ab8: test   $0x300,%rbx
  0x0000000002df2abf: jne    0x0000000002df2ade
  0x0000000002df2ac1: and    $0x37f,%rax
  0x0000000002df2ac8: mov    %rax,%rbx
  0x0000000002df2acb: or     %r15,%rbx
  0x0000000002df2ace: lock cmpxchg %rbx,(%rcx)
  0x0000000002df2ad3: jne    0x0000000002df33ef
  0x0000000002df2ad9: jmpq   0x0000000002df2b3a
  0x0000000002df2ade: mov    0x8(%rcx),%ebx
  0x0000000002df2ae1: shl    $0x3,%rbx
  0x0000000002df2ae5: mov    0xa8(%rbx),%rbx
  0x0000000002df2aec: or     %r15,%rbx
  0x0000000002df2aef: lock cmpxchg %rbx,(%rcx)
  0x0000000002df2af4: jne    0x0000000002df33ef
  0x0000000002df2afa: jmpq   0x0000000002df2b3a
  0x0000000002df2aff: mov    0x8(%rcx),%ebx
  0x0000000002df2b02: shl    $0x3,%rbx
  0x0000000002df2b06: mov    0xa8(%rbx),%rbx
  0x0000000002df2b0d: lock cmpxchg %rbx,(%rcx)
  0x0000000002df2b12: mov    (%rcx),%rax
  0x0000000002df2b15: or     $0x1,%rax
  0x0000000002df2b19: mov    %rax,(%r8)
  0x0000000002df2b1c: lock cmpxchg %r8,(%rcx)
  0x0000000002df2b21: je     0x0000000002df2b3a
  0x0000000002df2b27: sub    %rsp,%rax
  0x0000000002df2b2a: and    $0xfffffffffffff007,%rax
  0x0000000002df2b31: mov    %rax,(%r8)
  0x0000000002df2b34: jne    0x0000000002df33ef  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002df2b3a: movabs $0x1bfcc860,%r8    ;   {metadata(method data for {method} {0x000000001bcdfe10} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df2b44: mov    0xdc(%r8),%ebx
  0x0000000002df2b4b: add    $0x8,%ebx
  0x0000000002df2b4e: mov    %ebx,0xdc(%r8)
  0x0000000002df2b55: movabs $0x1bcdfe08,%r8    ;   {metadata({method} {0x000000001bcdfe10} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df2b5f: and    $0x7ffff8,%ebx
  0x0000000002df2b65: cmp    $0x0,%ebx
  0x0000000002df2b68: je     0x0000000002df3402
  0x0000000002df2b6e: movl   $0x0,0x14(%rcx)
  0x0000000002df2b75: mov    %rcx,%rbx
  0x0000000002df2b78: shr    $0x9,%rbx
  0x0000000002df2b7c: movabs $0xea5d000,%r8
  0x0000000002df2b86: movb   $0x0,(%rbx,%r8,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002df2b8b: mov    %rcx,%rbx
  0x0000000002df2b8e: movabs $0x1bfcc860,%r8    ;   {metadata(method data for {method} {0x000000001bcdfe10} &apos;append&apos; &apos;([CII)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df2b98: addq   $0x1,0x108(%r8)
  0x0000000002df2ba0: mov    %rdi,%r8
  0x0000000002df2ba3: mov    %rsi,%rdi
  0x0000000002df2ba6: mov    %rcx,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002df2ba9: mov    %rcx,0x80(%rsp)
  0x0000000002df2bb1: nop
  0x0000000002df2bb2: nop
  0x0000000002df2bb3: nop
  0x0000000002df2bb4: nop
  0x0000000002df2bb5: nop
  0x0000000002df2bb6: nop
  0x0000000002df2bb7: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop [200]=Oop off=3228}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@9 (line 367)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {optimized virtual_call}
  0x0000000002df2bbc: lea    0xc0(%rsp),%rax
  0x0000000002df2bc4: mov    0x8(%rax),%rsi
  0x0000000002df2bc8: mov    (%rsi),%rdx
  0x0000000002df2bcb: and    $0x7,%rdx
  0x0000000002df2bcf: cmp    $0x5,%rdx
  0x0000000002df2bd3: je     0x0000000002df2bf0
  0x0000000002df2bd9: mov    (%rax),%rdx
  0x0000000002df2bdc: test   %rdx,%rdx
  0x0000000002df2bdf: je     0x0000000002df2bf0
  0x0000000002df2be5: lock cmpxchg %rdx,(%rsi)
  0x0000000002df2bea: jne    0x0000000002df3419  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002df2bf0: mov    0x80(%rsp),%rbx
  0x0000000002df2bf8: movabs $0x1beba210,%rdx   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2c02: mov    0x8(%rbx),%ebx
  0x0000000002df2c05: shl    $0x3,%rbx
  0x0000000002df2c09: cmp    0x3d0(%rdx),%rbx
  0x0000000002df2c10: jne    0x0000000002df2c1f
  0x0000000002df2c12: addq   $0x1,0x3d8(%rdx)
  0x0000000002df2c1a: jmpq   0x0000000002df2c85
  0x0000000002df2c1f: cmp    0x3e0(%rdx),%rbx
  0x0000000002df2c26: jne    0x0000000002df2c35
  0x0000000002df2c28: addq   $0x1,0x3e8(%rdx)
  0x0000000002df2c30: jmpq   0x0000000002df2c85
  0x0000000002df2c35: cmpq   $0x0,0x3d0(%rdx)
  0x0000000002df2c40: jne    0x0000000002df2c59
  0x0000000002df2c42: mov    %rbx,0x3d0(%rdx)
  0x0000000002df2c49: movq   $0x1,0x3d8(%rdx)
  0x0000000002df2c54: jmpq   0x0000000002df2c85
  0x0000000002df2c59: cmpq   $0x0,0x3e0(%rdx)
  0x0000000002df2c64: jne    0x0000000002df2c7d
  0x0000000002df2c66: mov    %rbx,0x3e0(%rdx)
  0x0000000002df2c6d: movq   $0x1,0x3e8(%rdx)
  0x0000000002df2c78: jmpq   0x0000000002df2c85
  0x0000000002df2c7d: addq   $0x1,0x3c8(%rdx)
  0x0000000002df2c85: mov    0x80(%rsp),%rdx    ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)

  0x0000000002df2c8d: nop
  0x0000000002df2c8e: nop
  0x0000000002df2c8f: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop [128]=Oop [112]=Oop [184]=Oop off=3444}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@231 (line 359)
                                                ;   {optimized virtual_call}
  0x0000000002df2c94: mov    %rax,%rsi          ;*aload_0
                                                ; - java.io.BufferedReader::readLine@236 (line 361)

  0x0000000002df2c97: mov    0x7c(%rsp),%edi
  0x0000000002df2c9b: mov    0x70(%rsp),%rdx
  0x0000000002df2ca0: mov    0x18(%rdx),%eax    ;*getfield nextChar
                                                ; - java.io.BufferedReader::readLine@238 (line 361)

  0x0000000002df2ca3: inc    %eax
  0x0000000002df2ca5: mov    %eax,0x18(%rdx)    ;*putfield nextChar
                                                ; - java.io.BufferedReader::readLine@243 (line 361)

  0x0000000002df2ca8: cmp    $0xd,%edi
  0x0000000002df2cab: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2cb5: movabs $0x3f8,%rdi
  0x0000000002df2cbf: jne    0x0000000002df2ccf
  0x0000000002df2cc5: movabs $0x408,%rdi
  0x0000000002df2ccf: mov    (%rax,%rdi,1),%rbx
  0x0000000002df2cd3: lea    0x1(%rbx),%rbx
  0x0000000002df2cd7: mov    %rbx,(%rax,%rdi,1)
  0x0000000002df2cdb: jne    0x0000000002df302d  ;*if_icmpne
                                                ; - java.io.BufferedReader::readLine@250 (line 362)

  0x0000000002df2ce1: movb   $0x1,0x24(%rdx)    ;*putfield skipLF
                                                ; - java.io.BufferedReader::readLine@255 (line 363)

  0x0000000002df2ce5: jmpq   0x0000000002df302d  ;*aload
                                                ; - java.io.BufferedReader::readLine@258 (line 365)

  0x0000000002df2cea: mov    0x80(%rsp),%rbx
  0x0000000002df2cf2: cmp    $0x0,%rbx
  0x0000000002df2cf6: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2d00: movabs $0x1c0,%rdx
  0x0000000002df2d0a: je     0x0000000002df2d1a
  0x0000000002df2d10: movabs $0x1d0,%rdx
  0x0000000002df2d1a: mov    (%rax,%rdx,1),%rsi
  0x0000000002df2d1e: lea    0x1(%rsi),%rsi
  0x0000000002df2d22: mov    %rsi,(%rax,%rdx,1)
  0x0000000002df2d26: je     0x0000000002df2ef8  ;*ifnull
                                                ; - java.io.BufferedReader::readLine@59 (line 326)

  0x0000000002df2d2c: cmp    (%rbx),%rax        ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ; implicit exception: dispatches to 0x0000000002df342f
  0x0000000002df2d2f: mov    %rbx,%rax
  0x0000000002df2d32: movabs $0x1beba210,%rdx   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2d3c: mov    0x8(%rax),%eax
  0x0000000002df2d3f: shl    $0x3,%rax
  0x0000000002df2d43: cmp    0x1e8(%rdx),%rax
  0x0000000002df2d4a: jne    0x0000000002df2d59
  0x0000000002df2d4c: addq   $0x1,0x1f0(%rdx)
  0x0000000002df2d54: jmpq   0x0000000002df2dbf
  0x0000000002df2d59: cmp    0x1f8(%rdx),%rax
  0x0000000002df2d60: jne    0x0000000002df2d6f
  0x0000000002df2d62: addq   $0x1,0x200(%rdx)
  0x0000000002df2d6a: jmpq   0x0000000002df2dbf
  0x0000000002df2d6f: cmpq   $0x0,0x1e8(%rdx)
  0x0000000002df2d7a: jne    0x0000000002df2d93
  0x0000000002df2d7c: mov    %rax,0x1e8(%rdx)
  0x0000000002df2d83: movq   $0x1,0x1f0(%rdx)
  0x0000000002df2d8e: jmpq   0x0000000002df2dbf
  0x0000000002df2d93: cmpq   $0x0,0x1f8(%rdx)
  0x0000000002df2d9e: jne    0x0000000002df2db7
  0x0000000002df2da0: mov    %rax,0x1f8(%rdx)
  0x0000000002df2da7: movq   $0x1,0x200(%rdx)
  0x0000000002df2db2: jmpq   0x0000000002df2dbf
  0x0000000002df2db7: addq   $0x1,0x1e0(%rdx)
  0x0000000002df2dbf: lea    0xc0(%rsp),%rdx
  0x0000000002df2dc7: mov    %rbx,0x8(%rdx)
  0x0000000002df2dcb: mov    (%rbx),%rax
  0x0000000002df2dce: mov    %rax,%rsi
  0x0000000002df2dd1: and    $0x7,%rsi
  0x0000000002df2dd5: cmp    $0x5,%rsi
  0x0000000002df2dd9: jne    0x0000000002df2e60
  0x0000000002df2ddf: mov    0x8(%rbx),%esi
  0x0000000002df2de2: shl    $0x3,%rsi
  0x0000000002df2de6: mov    0xa8(%rsi),%rsi
  0x0000000002df2ded: or     %r15,%rsi
  0x0000000002df2df0: xor    %rax,%rsi
  0x0000000002df2df3: and    $0xffffffffffffff87,%rsi
  0x0000000002df2df7: je     0x0000000002df2e88
  0x0000000002df2dfd: test   $0x7,%rsi
  0x0000000002df2e04: jne    0x0000000002df2e4d
  0x0000000002df2e06: test   $0x300,%rsi
  0x0000000002df2e0d: jne    0x0000000002df2e2c
  0x0000000002df2e0f: and    $0x37f,%rax
  0x0000000002df2e16: mov    %rax,%rsi
  0x0000000002df2e19: or     %r15,%rsi
  0x0000000002df2e1c: lock cmpxchg %rsi,(%rbx)
  0x0000000002df2e21: jne    0x0000000002df3434
  0x0000000002df2e27: jmpq   0x0000000002df2e88
  0x0000000002df2e2c: mov    0x8(%rbx),%esi
  0x0000000002df2e2f: shl    $0x3,%rsi
  0x0000000002df2e33: mov    0xa8(%rsi),%rsi
  0x0000000002df2e3a: or     %r15,%rsi
  0x0000000002df2e3d: lock cmpxchg %rsi,(%rbx)
  0x0000000002df2e42: jne    0x0000000002df3434
  0x0000000002df2e48: jmpq   0x0000000002df2e88
  0x0000000002df2e4d: mov    0x8(%rbx),%esi
  0x0000000002df2e50: shl    $0x3,%rsi
  0x0000000002df2e54: mov    0xa8(%rsi),%rsi
  0x0000000002df2e5b: lock cmpxchg %rsi,(%rbx)
  0x0000000002df2e60: mov    (%rbx),%rax
  0x0000000002df2e63: or     $0x1,%rax
  0x0000000002df2e67: mov    %rax,(%rdx)
  0x0000000002df2e6a: lock cmpxchg %rdx,(%rbx)
  0x0000000002df2e6f: je     0x0000000002df2e88
  0x0000000002df2e75: sub    %rsp,%rax
  0x0000000002df2e78: and    $0xfffffffffffff007,%rax
  0x0000000002df2e7f: mov    %rax,(%rdx)
  0x0000000002df2e82: jne    0x0000000002df3434  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002df2e88: mov    0xc(%rbx),%edx     ;*getfield count
                                                ; - java.lang.StringBuffer::length@1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002df2e8b: lea    0xc0(%rsp),%rax
  0x0000000002df2e93: mov    0x8(%rax),%rdi
  0x0000000002df2e97: mov    (%rdi),%rsi
  0x0000000002df2e9a: and    $0x7,%rsi
  0x0000000002df2e9e: cmp    $0x5,%rsi
  0x0000000002df2ea2: je     0x0000000002df2ebf
  0x0000000002df2ea8: mov    (%rax),%rsi
  0x0000000002df2eab: test   %rsi,%rsi
  0x0000000002df2eae: je     0x0000000002df2ebf
  0x0000000002df2eb4: lock cmpxchg %rsi,(%rdi)
  0x0000000002df2eb9: jne    0x0000000002df3447  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002df2ebf: cmp    $0x0,%edx
  0x0000000002df2ec2: movabs $0x1beba210,%rax   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2ecc: movabs $0x210,%rdx
  0x0000000002df2ed6: jle    0x0000000002df2ee6
  0x0000000002df2edc: movabs $0x220,%rdx
  0x0000000002df2ee6: mov    (%rax,%rdx,1),%rsi
  0x0000000002df2eea: lea    0x1(%rsi),%rsi
  0x0000000002df2eee: mov    %rsi,(%rax,%rdx,1)
  0x0000000002df2ef2: jg     0x0000000002df2f45  ;*ifle
                                                ; - java.io.BufferedReader::readLine@66 (line 326)

  0x0000000002df2ef8: lea    0xb0(%rsp),%rax
  0x0000000002df2f00: mov    0x8(%rax),%rsi
  0x0000000002df2f04: mov    (%rsi),%rdx
  0x0000000002df2f07: and    $0x7,%rdx
  0x0000000002df2f0b: cmp    $0x5,%rdx
  0x0000000002df2f0f: je     0x0000000002df2f2c
  0x0000000002df2f15: mov    (%rax),%rdx
  0x0000000002df2f18: test   %rdx,%rdx
  0x0000000002df2f1b: je     0x0000000002df2f2c
  0x0000000002df2f21: lock cmpxchg %rdx,(%rsi)
  0x0000000002df2f26: jne    0x0000000002df345d  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@80 (line 329)

  0x0000000002df2f2c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002df2f36: add    $0xe0,%rsp
  0x0000000002df2f3d: pop    %rbp
  0x0000000002df2f3e: test   %eax,-0x21f2e44(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df2f44: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@81 (line 329)

  0x0000000002df2f45: mov    %rbx,%rdx
  0x0000000002df2f48: movabs $0x1beba210,%rsi   ;   {metadata(method data for {method} {0x000000001be142d8} &apos;readLine&apos; &apos;(Z)Ljava/lang/String;&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df2f52: mov    0x8(%rdx),%edx
  0x0000000002df2f55: shl    $0x3,%rdx
  0x0000000002df2f59: cmp    0x238(%rsi),%rdx
  0x0000000002df2f60: jne    0x0000000002df2f6f
  0x0000000002df2f62: addq   $0x1,0x240(%rsi)
  0x0000000002df2f6a: jmpq   0x0000000002df2fd5
  0x0000000002df2f6f: cmp    0x248(%rsi),%rdx
  0x0000000002df2f76: jne    0x0000000002df2f85
  0x0000000002df2f78: addq   $0x1,0x250(%rsi)
  0x0000000002df2f80: jmpq   0x0000000002df2fd5
  0x0000000002df2f85: cmpq   $0x0,0x238(%rsi)
  0x0000000002df2f90: jne    0x0000000002df2fa9
  0x0000000002df2f92: mov    %rdx,0x238(%rsi)
  0x0000000002df2f99: movq   $0x1,0x240(%rsi)
  0x0000000002df2fa4: jmpq   0x0000000002df2fd5
  0x0000000002df2fa9: cmpq   $0x0,0x248(%rsi)
  0x0000000002df2fb4: jne    0x0000000002df2fcd
  0x0000000002df2fb6: mov    %rdx,0x248(%rsi)
  0x0000000002df2fbd: movq   $0x1,0x250(%rsi)
  0x0000000002df2fc8: jmpq   0x0000000002df2fd5
  0x0000000002df2fcd: addq   $0x1,0x230(%rsi)
  0x0000000002df2fd5: mov    %rbx,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x0000000002df2fd8: nop
  0x0000000002df2fd9: nop
  0x0000000002df2fda: nop
  0x0000000002df2fdb: nop
  0x0000000002df2fdc: nop
  0x0000000002df2fdd: nop
  0x0000000002df2fde: nop
  0x0000000002df2fdf: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop [184]=Oop off=4292}
                                                ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)
                                                ;   {optimized virtual_call}
  0x0000000002df2fe4: mov    %rax,%rdx          ;*invokevirtual toString
                                                ; - java.io.BufferedReader::readLine@70 (line 327)

  0x0000000002df2fe7: lea    0xb0(%rsp),%rax
  0x0000000002df2fef: mov    0x8(%rax),%rdi
  0x0000000002df2ff3: mov    (%rdi),%rsi
  0x0000000002df2ff6: and    $0x7,%rsi
  0x0000000002df2ffa: cmp    $0x5,%rsi
  0x0000000002df2ffe: je     0x0000000002df301b
  0x0000000002df3004: mov    (%rax),%rsi
  0x0000000002df3007: test   %rsi,%rsi
  0x0000000002df300a: je     0x0000000002df301b
  0x0000000002df3010: lock cmpxchg %rsi,(%rdi)
  0x0000000002df3015: jne    0x0000000002df3473  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@75 (line 327)

  0x0000000002df301b: mov    %rdx,%rax
  0x0000000002df301e: add    $0xe0,%rsp
  0x0000000002df3025: pop    %rbp
  0x0000000002df3026: test   %eax,-0x21f2f2c(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df302c: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@76 (line 327)

  0x0000000002df302d: lea    0xb0(%rsp),%rax
  0x0000000002df3035: mov    0x8(%rax),%rdi
  0x0000000002df3039: mov    (%rdi),%rdx
  0x0000000002df303c: and    $0x7,%rdx
  0x0000000002df3040: cmp    $0x5,%rdx
  0x0000000002df3044: je     0x0000000002df3061
  0x0000000002df304a: mov    (%rax),%rdx
  0x0000000002df304d: test   %rdx,%rdx
  0x0000000002df3050: je     0x0000000002df3061
  0x0000000002df3056: lock cmpxchg %rdx,(%rdi)
  0x0000000002df305b: jne    0x0000000002df3489  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@262 (line 365)

  0x0000000002df3061: mov    %rsi,%rax
  0x0000000002df3064: add    $0xe0,%rsp
  0x0000000002df306b: pop    %rbp
  0x0000000002df306c: test   %eax,-0x21f2f72(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df3072: retq                      ;*areturn
                                                ; - java.io.BufferedReader::readLine@263 (line 365)

  0x0000000002df3073: mov    %r8d,0xa8(%rsp)
  0x0000000002df307b: nopl   0x0(%rax,%rax,1)
  0x0000000002df3080: jmpq   0x0000000002df34ae  ;   {no_reloc}
  0x0000000002df3085: add    %al,(%rax)
  0x0000000002df3087: add    %al,(%rax)
  0x0000000002df3089: add    %cl,-0x75(%rcx)
  0x0000000002df308c: rex.RXB (bad) 
  0x0000000002df308e: lea    0x20(%rax),%rdi
  0x0000000002df3092: cmp    0x70(%r15),%rdi
  0x0000000002df3096: ja     0x0000000002df34b8
  0x0000000002df309c: mov    %rdi,0x60(%r15)
  0x0000000002df30a0: mov    0xa8(%rdx),%rcx
  0x0000000002df30a7: mov    %rcx,(%rax)
  0x0000000002df30aa: mov    %rdx,%rcx
  0x0000000002df30ad: shr    $0x3,%rcx
  0x0000000002df30b1: mov    %ecx,0x8(%rax)
  0x0000000002df30b4: xor    %rcx,%rcx
  0x0000000002df30b7: mov    %ecx,0xc(%rax)
  0x0000000002df30ba: xor    %rcx,%rcx
  0x0000000002df30bd: mov    %rcx,0x10(%rax)
  0x0000000002df30c1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002df30c5: mov    %rax,%rdx
  0x0000000002df30c8: movabs $0x1bebd658,%rsi   ;   {metadata(method data for {method} {0x000000001be13bb0} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/io/BufferedReader&apos;)}
  0x0000000002df30d2: addq   $0x1,0x128(%rsi)
  0x0000000002df30da: movabs $0x76bf1f008,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x0000000002df30e4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002df30e7: mov    %rax,0xa0(%rsp)
  0x0000000002df30ef: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop [112]=Oop [160]=Oop [184]=Oop off=4564}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedReader::ensureOpen@13 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {optimized virtual_call}
  0x0000000002df30f4: mov    0xa0(%rsp),%rax    ; OopMap{[136]=Oop [112]=Oop [184]=Oop rax=Oop off=4572}
                                                ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002df30fc: movabs $0x2df30fc,%rdx    ;   {section_word}
  0x0000000002df3106: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002df310b: nop                       ;*athrow
                                                ; - java.io.BufferedReader::ensureOpen@16 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)

  0x0000000002df310c: mov    0x2a8(%r15),%rax
  0x0000000002df3113: xor    %r10,%r10
  0x0000000002df3116: mov    %r10,0x2a8(%r15)
  0x0000000002df311d: xor    %r10,%r10
  0x0000000002df3120: mov    %r10,0x2b0(%r15)
  0x0000000002df3127: mov    %rax,%rdx
  0x0000000002df312a: lea    0xc0(%rsp),%rax
  0x0000000002df3132: mov    0x8(%rax),%rdi
  0x0000000002df3136: mov    (%rdi),%rsi
  0x0000000002df3139: and    $0x7,%rsi
  0x0000000002df313d: cmp    $0x5,%rsi
  0x0000000002df3141: je     0x0000000002df315e
  0x0000000002df3147: mov    (%rax),%rsi
  0x0000000002df314a: test   %rsi,%rsi
  0x0000000002df314d: je     0x0000000002df315e
  0x0000000002df3153: lock cmpxchg %rsi,(%rdi)
  0x0000000002df3158: jne    0x0000000002df34c5  ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002df315e: mov    %rdx,%rax          ; OopMap{rbx=Oop [136]=Oop [184]=Oop rax=Oop off=4673}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002df3161: movabs $0x2df3161,%rdx    ;   {section_word}
  0x0000000002df316b: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002df3170: nop                       ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)

  0x0000000002df3171: mov    0x2a8(%r15),%rax
  0x0000000002df3178: xor    %r10,%r10
  0x0000000002df317b: mov    %r10,0x2a8(%r15)
  0x0000000002df3182: xor    %r10,%r10
  0x0000000002df3185: mov    %r10,0x2b0(%r15)
  0x0000000002df318c: mov    %rax,%rdx
  0x0000000002df318f: lea    0xc0(%rsp),%rax
  0x0000000002df3197: mov    0x8(%rax),%rcx
  0x0000000002df319b: mov    (%rcx),%rsi
  0x0000000002df319e: and    $0x7,%rsi
  0x0000000002df31a2: cmp    $0x5,%rsi
  0x0000000002df31a6: je     0x0000000002df31c3
  0x0000000002df31ac: mov    (%rax),%rsi
  0x0000000002df31af: test   %rsi,%rsi
  0x0000000002df31b2: je     0x0000000002df31c3
  0x0000000002df31b8: lock cmpxchg %rsi,(%rcx)
  0x0000000002df31bd: jne    0x0000000002df34db  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002df31c3: mov    %rdx,%rax          ; OopMap{[112]=Oop [136]=Oop rbx=Oop [184]=Oop rax=Oop off=4774}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002df31c6: movabs $0x2df31c6,%rdx    ;   {section_word}
  0x0000000002df31d0: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002df31d5: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)

  0x0000000002df31d6: mov    0x88(%rsp),%rdi
  0x0000000002df31de: mov    0x70(%rsp),%rsi
  0x0000000002df31e3: mov    0x2a8(%r15),%rax
  0x0000000002df31ea: xor    %r10,%r10
  0x0000000002df31ed: mov    %r10,0x2a8(%r15)
  0x0000000002df31f4: xor    %r10,%r10
  0x0000000002df31f7: mov    %r10,0x2b0(%r15)
  0x0000000002df31fe: mov    %rax,%rdx
  0x0000000002df3201: lea    0xc0(%rsp),%rax
  0x0000000002df3209: mov    0x8(%rax),%r8
  0x0000000002df320d: mov    (%r8),%rcx
  0x0000000002df3210: and    $0x7,%rcx
  0x0000000002df3214: cmp    $0x5,%rcx
  0x0000000002df3218: je     0x0000000002df3235
  0x0000000002df321e: mov    (%rax),%rcx
  0x0000000002df3221: test   %rcx,%rcx
  0x0000000002df3224: je     0x0000000002df3235
  0x0000000002df322a: lock cmpxchg %rcx,(%r8)
  0x0000000002df322f: jne    0x0000000002df34f1  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002df3235: mov    %rdx,%rax          ; OopMap{rbx=Oop rsi=Oop [112]=Oop rdi=Oop [136]=Oop [184]=Oop rax=Oop off=4888}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002df3238: movabs $0x2df3238,%rdx    ;   {section_word}
  0x0000000002df3242: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002df3247: nop                       ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)

  0x0000000002df3248: mov    0x2a8(%r15),%rax
  0x0000000002df324f: xor    %r10,%r10
  0x0000000002df3252: mov    %r10,0x2a8(%r15)
  0x0000000002df3259: xor    %r10,%r10
  0x0000000002df325c: mov    %r10,0x2b0(%r15)
  0x0000000002df3263: mov    %rax,%rsi
  0x0000000002df3266: lea    0xb0(%rsp),%rax
  0x0000000002df326e: mov    0x8(%rax),%rbx
  0x0000000002df3272: mov    (%rbx),%rdi
  0x0000000002df3275: and    $0x7,%rdi
  0x0000000002df3279: cmp    $0x5,%rdi
  0x0000000002df327d: je     0x0000000002df329a
  0x0000000002df3283: mov    (%rax),%rdi
  0x0000000002df3286: test   %rdi,%rdi
  0x0000000002df3289: je     0x0000000002df329a
  0x0000000002df328f: lock cmpxchg %rdi,(%rbx)
  0x0000000002df3294: jne    0x0000000002df3507  ;*monitorexit
                                                ; - java.io.BufferedReader::readLine@300 (line 372)

  0x0000000002df329a: mov    %rsi,%rax
  0x0000000002df329d: jmpq   0x0000000002df3566
  0x0000000002df32a2: mov    %rax,0x8(%rsp)
  0x0000000002df32a7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df32af: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [112]=Oop off=5012}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::readLine@-1 (line 313)
                                                ;   {runtime_call}
  0x0000000002df32b4: jmpq   0x0000000002df1f86
  0x0000000002df32b9: callq  0x0000000002dad680  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop off=5022}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x0000000002df32be: mov    %rsi,0x8(%rsp)
  0x0000000002df32c3: mov    %rdi,(%rsp)
  0x0000000002df32c7: callq  0x0000000002db0060  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop [184]=Oop off=5036}
                                                ;*monitorenter
                                                ; - java.io.BufferedReader::readLine@9 (line 316)
                                                ;   {runtime_call}
  0x0000000002df32cc: jmpq   0x0000000002df205e
  0x0000000002df32d1: mov    %rdi,0x8(%rsp)
  0x0000000002df32d6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df32de: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [112]=Oop rsi=Oop [136]=Oop [184]=Oop off=5059}
                                                ;*synchronization entry
                                                ; - java.io.BufferedReader::ensureOpen@-1 (line 121)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x0000000002df32e3: jmpq   0x0000000002df20a5
  0x0000000002df32e8: callq  0x0000000002dad680  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5069}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000002df32ed: callq  0x0000000002dad680  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5074}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000002df32f2: mov    %rsi,(%rsp)
  0x0000000002df32f6: callq  0x0000000002dac940  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rax=Oop [184]=Oop off=5083}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@101 (line 336)
                                                ;   {runtime_call}
  0x0000000002df32fb: callq  0x0000000002dad680  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5088}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000002df3300: callq  0x0000000002dad680  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5093}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000002df3305: mov    %r8,(%rsp)
  0x0000000002df3309: callq  0x0000000002dac940  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop rsi=Oop [184]=Oop off=5102}
                                                ;*caload
                                                ; - java.io.BufferedReader::readLine@146 (line 343)
                                                ;   {runtime_call}
  0x0000000002df330e: mov    %rax,0x8(%rsp)
  0x0000000002df3313: movq   $0xac,(%rsp)
  0x0000000002df331b: callq  0x0000000002db1d60  ; OopMap{[136]=Oop [128]=Oop rdx=Oop [112]=Oop [184]=Oop off=5120}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@172 (line 342)
                                                ;   {runtime_call}
  0x0000000002df3320: jmpq   0x0000000002df23a8
  0x0000000002df3325: mov    %rdx,%rdx
  0x0000000002df3328: callq  0x0000000002dade00  ; OopMap{[136]=Oop r11=Oop [112]=Oop [184]=Oop off=5133}
                                                ;*new  ; - java.io.BufferedReader::readLine@268 (line 369)
                                                ;   {runtime_call}
  0x0000000002df332d: jmpq   0x0000000002df24d9
  0x0000000002df3332: mov    %rdx,0x8(%rsp)
  0x0000000002df3337: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df333f: callq  0x0000000002db1d60  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5156}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::&lt;init&gt;@-1 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002df3344: jmpq   0x0000000002df2530
  0x0000000002df3349: mov    %rdx,0x8(%rsp)
  0x0000000002df334e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df3356: callq  0x0000000002db1d60  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5179}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002df335b: jmpq   0x0000000002df2577
  0x0000000002df3360: mov    %rdx,0x8(%rsp)
  0x0000000002df3365: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df336d: callq  0x0000000002db1d60  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5202}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002df3372: jmpq   0x0000000002df25be
  0x0000000002df3377: callq  0x0000000002dae700  ; OopMap{[136]=Oop r11=Oop [112]=Oop r13=Oop [184]=Oop off=5212}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.BufferedReader::readLine@275 (line 369)
                                                ;   {runtime_call}
  0x0000000002df337c: jmpq   0x0000000002df2635
  0x0000000002df3381: callq  0x0000000002dad680  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop off=5222}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x0000000002df3386: mov    %rbx,0x8(%rsp)
  0x0000000002df338b: mov    %r8,(%rsp)
  0x0000000002df338f: callq  0x0000000002db0060  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop [200]=Oop off=5236}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x0000000002df3394: jmpq   0x0000000002df27c2
  0x0000000002df3399: mov    %r8,0x8(%rsp)
  0x0000000002df339e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df33a6: callq  0x0000000002db1d60  ; OopMap{[136]=Oop r11=Oop [112]=Oop rbx=Oop rdi=Oop [184]=Oop [200]=Oop off=5259}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@289 (line 370)
                                                ;   {runtime_call}
  0x0000000002df33ab: jmpq   0x0000000002df27f6
  0x0000000002df33b0: lea    0xc0(%rsp),%rax
  0x0000000002df33b8: mov    %rax,(%rsp)
  0x0000000002df33bc: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df33c1: jmpq   0x0000000002df2878
  0x0000000002df33c6: mov    %rdx,0x8(%rsp)
  0x0000000002df33cb: movq   $0x125,(%rsp)
  0x0000000002df33d3: callq  0x0000000002db1d60  ; OopMap{[136]=Oop [144]=Oop [112]=Oop [184]=Oop off=5304}
                                                ;*goto
                                                ; - java.io.BufferedReader::readLine@293 (line 371)
                                                ;   {runtime_call}
  0x0000000002df33d8: jmpq   0x0000000002df28aa
  0x0000000002df33dd: mov    %rdx,%rdx
  0x0000000002df33e0: callq  0x0000000002dade00  ; OopMap{[136]=Oop rbx=Oop [112]=Oop [184]=Oop off=5317}
                                                ;*new  ; - java.io.BufferedReader::readLine@195 (line 356)
                                                ;   {runtime_call}
  0x0000000002df33e5: jmpq   0x0000000002df2975
  0x0000000002df33ea: callq  0x0000000002dad680  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop off=5327}
                                                ;*invokevirtual append
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000002df33ef: mov    %rcx,0x8(%rsp)
  0x0000000002df33f4: mov    %r8,(%rsp)
  0x0000000002df33f8: callq  0x0000000002db0060  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop [200]=Oop off=5341}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000002df33fd: jmpq   0x0000000002df2b3a
  0x0000000002df3402: mov    %r8,0x8(%rsp)
  0x0000000002df3407: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df340f: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [112]=Oop rcx=Oop [136]=Oop rdi=Oop [184]=Oop [200]=Oop off=5364}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 366)
                                                ; - java.io.BufferedReader::readLine@226 (line 358)
                                                ;   {runtime_call}
  0x0000000002df3414: jmpq   0x0000000002df2b6e
  0x0000000002df3419: lea    0xc0(%rsp),%rax
  0x0000000002df3421: mov    %rax,(%rsp)
  0x0000000002df3425: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df342a: jmpq   0x0000000002df2bf0
  0x0000000002df342f: callq  0x0000000002dad680  ; OopMap{[136]=Oop rbx=Oop [184]=Oop off=5396}
                                                ;*invokevirtual length
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x0000000002df3434: mov    %rbx,0x8(%rsp)
  0x0000000002df3439: mov    %rdx,(%rsp)
  0x0000000002df343d: callq  0x0000000002db0060  ; OopMap{[136]=Oop rbx=Oop [184]=Oop [200]=Oop off=5410}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::length@-1 (line 163)
                                                ; - java.io.BufferedReader::readLine@63 (line 326)
                                                ;   {runtime_call}
  0x0000000002df3442: jmpq   0x0000000002df2e88
  0x0000000002df3447: lea    0xc0(%rsp),%rax
  0x0000000002df344f: mov    %rax,(%rsp)
  0x0000000002df3453: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df3458: jmpq   0x0000000002df2ebf
  0x0000000002df345d: lea    0xb0(%rsp),%rax
  0x0000000002df3465: mov    %rax,(%rsp)
  0x0000000002df3469: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df346e: jmpq   0x0000000002df2f2c
  0x0000000002df3473: lea    0xb0(%rsp),%rax
  0x0000000002df347b: mov    %rax,(%rsp)
  0x0000000002df347f: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df3484: jmpq   0x0000000002df301b
  0x0000000002df3489: lea    0xb0(%rsp),%rax
  0x0000000002df3491: mov    %rax,(%rsp)
  0x0000000002df3495: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df349a: jmpq   0x0000000002df3061
  0x0000000002df349f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002df34a9: mov    $0xa050f00,%eax
  0x0000000002df34ae: callq  0x0000000002db0ca0  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5523}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x0000000002df34b3: jmpq   0x0000000002df3080
  0x0000000002df34b8: mov    %rdx,%rdx
  0x0000000002df34bb: callq  0x0000000002dade00  ; OopMap{[136]=Oop [112]=Oop [184]=Oop off=5536}
                                                ;*new  ; - java.io.BufferedReader::ensureOpen@7 (line 122)
                                                ; - java.io.BufferedReader::readLine@11 (line 317)
                                                ;   {runtime_call}
  0x0000000002df34c0: jmpq   0x0000000002df30c5
  0x0000000002df34c5: lea    0xc0(%rsp),%rax
  0x0000000002df34cd: mov    %rax,(%rsp)
  0x0000000002df34d1: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df34d6: jmpq   0x0000000002df315e
  0x0000000002df34db: lea    0xc0(%rsp),%rax
  0x0000000002df34e3: mov    %rax,(%rsp)
  0x0000000002df34e7: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df34ec: jmpq   0x0000000002df31c3
  0x0000000002df34f1: lea    0xc0(%rsp),%rax
  0x0000000002df34f9: mov    %rax,(%rsp)
  0x0000000002df34fd: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df3502: jmpq   0x0000000002df3235
  0x0000000002df3507: lea    0xb0(%rsp),%rax
  0x0000000002df350f: mov    %rax,(%rsp)
  0x0000000002df3513: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df3518: jmpq   0x0000000002df329a
  0x0000000002df351d: mov    0x90(%rsp),%rbx
  0x0000000002df3525: jmpq   0x0000000002df31d6
  0x0000000002df352a: mov    0x7c(%rsp),%edi
  0x0000000002df352e: mov    0x80(%rsp),%rbx
  0x0000000002df3536: jmpq   0x0000000002df3171
  0x0000000002df353b: nop
  0x0000000002df353c: nop
  0x0000000002df353d: mov    0x2a8(%r15),%rax
  0x0000000002df3544: movabs $0x0,%r10
  0x0000000002df354e: mov    %r10,0x2a8(%r15)
  0x0000000002df3555: movabs $0x0,%r10
  0x0000000002df355f: mov    %r10,0x2b0(%r15)
  0x0000000002df3566: add    $0xe0,%rsp
  0x0000000002df356d: pop    %rbp
  0x0000000002df356e: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df3573: hlt    
  0x0000000002df3574: hlt    
  0x0000000002df3575: hlt    
  0x0000000002df3576: hlt    
  0x0000000002df3577: hlt    
  0x0000000002df3578: hlt    
  0x0000000002df3579: hlt    
  0x0000000002df357a: hlt    
  0x0000000002df357b: hlt    
  0x0000000002df357c: hlt    
  0x0000000002df357d: hlt    
  0x0000000002df357e: hlt    
  0x0000000002df357f: hlt    
[Stub Code]
  0x0000000002df3580: nop                       ;   {no_reloc}
  0x0000000002df3581: nop
  0x0000000002df3582: nop
  0x0000000002df3583: nop
  0x0000000002df3584: nop
  0x0000000002df3585: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df358f: jmpq   0x0000000002df358f  ;   {runtime_call}
  0x0000000002df3594: nop
  0x0000000002df3595: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df359f: jmpq   0x0000000002df359f  ;   {runtime_call}
  0x0000000002df35a4: nop
  0x0000000002df35a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df35af: jmpq   0x0000000002df35af  ;   {runtime_call}
  0x0000000002df35b4: nop
  0x0000000002df35b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df35bf: jmpq   0x0000000002df35bf  ;   {runtime_call}
  0x0000000002df35c4: nop
  0x0000000002df35c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df35cf: jmpq   0x0000000002df35cf  ;   {runtime_call}
  0x0000000002df35d4: nop
  0x0000000002df35d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df35df: jmpq   0x0000000002df35df  ;   {runtime_call}
  0x0000000002df35e4: nop
  0x0000000002df35e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df35ef: jmpq   0x0000000002df35ef  ;   {runtime_call}
[Exception Handler]
  0x0000000002df35f4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002df35f9: mov    %rsp,-0x28(%rsp)
  0x0000000002df35fe: sub    $0x80,%rsp
  0x0000000002df3605: mov    %rax,0x78(%rsp)
  0x0000000002df360a: mov    %rcx,0x70(%rsp)
  0x0000000002df360f: mov    %rdx,0x68(%rsp)
  0x0000000002df3614: mov    %rbx,0x60(%rsp)
  0x0000000002df3619: mov    %rbp,0x50(%rsp)
  0x0000000002df361e: mov    %rsi,0x48(%rsp)
  0x0000000002df3623: mov    %rdi,0x40(%rsp)
  0x0000000002df3628: mov    %r8,0x38(%rsp)
  0x0000000002df362d: mov    %r9,0x30(%rsp)
  0x0000000002df3632: mov    %r10,0x28(%rsp)
  0x0000000002df3637: mov    %r11,0x20(%rsp)
  0x0000000002df363c: mov    %r12,0x18(%rsp)
  0x0000000002df3641: mov    %r13,0x10(%rsp)
  0x0000000002df3646: mov    %r14,0x8(%rsp)
  0x0000000002df364b: mov    %r15,(%rsp)
  0x0000000002df364f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df3659: movabs $0x2df35f9,%rdx    ;   {internal_word}
  0x0000000002df3663: mov    %rsp,%r8
  0x0000000002df3666: and    $0xfffffffffffffff0,%rsp
  0x0000000002df366a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df366f: hlt    
[Deopt Handler Code]
  0x0000000002df3670: movabs $0x2df3670,%r10    ;   {section_word}
  0x0000000002df367a: push   %r10
  0x0000000002df367c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df3681: hlt    
  0x0000000002df3682: hlt    
  0x0000000002df3683: hlt    
  0x0000000002df3684: hlt    
  0x0000000002df3685: hlt    
  0x0000000002df3686: hlt    
  0x0000000002df3687: hlt    
<nmethod compile_id='83' compiler='C1' level='3' entry='0x0000000002df1f20' size='11008' address='0x0000000002df1c90' relocation_offset='288' insts_offset='656' stub_offset='6384' scopes_data_offset='6712' scopes_pcs_offset='8184' dependencies_offset='10328' handler_table_offset='10336' nul_chk_table_offset='10936' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='624' backedge_count='18762' iicount='624' stamp='1.623'/>
<writer thread='8664'/>
<task_queued compile_id='89' method='sun/net/www/ParseUtil encodePath (Ljava/lang/String;Z)Ljava/lang/String;' bytes='336' count='316' backedge_count='24576' iicount='316' level='3' stamp='1.623' comment='tiered' hot_count='316'/>
<writer thread='19128'/>
Decoding compiled method 0x0000000002dd7050:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001be40b88} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x0000000002dd7180: mov    0x8(%rdx),%r10d
  0x0000000002dd7184: shl    $0x3,%r10
  0x0000000002dd7188: cmp    %r10,%rax
  0x0000000002dd718b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd7191: data16 xchg %ax,%ax
  0x0000000002dd7194: nopl   0x0(%rax,%rax,1)
  0x0000000002dd719c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd71a0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd71a7: push   %rbp
  0x0000000002dd71a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)

  0x0000000002dd71ac: mov    %r8d,%r10d
  0x0000000002dd71af: movzwl %r10w,%r10d        ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002dd71b3: cmp    $0x100,%r10d
  0x0000000002dd71ba: jae    0x0000000002dd71fd
  0x0000000002dd71bc: movabs $0x76b81ae28,%r11  ;   {oop([I)}
  0x0000000002dd71c6: mov    0x10(%r11,%r10,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002dd71cb: test   $0x20000,%eax
  0x0000000002dd71d1: jne    0x0000000002dd71e2  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x0000000002dd71d3: mov    %r8d,%eax          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x0000000002dd71d6: add    $0x20,%rsp
  0x0000000002dd71da: pop    %rbp
  0x0000000002dd71db: test   %eax,-0x21d71e1(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dd71e1: retq   
  0x0000000002dd71e2: mov    %eax,%ebp
  0x0000000002dd71e4: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)

  0x0000000002dd71ea: cmp    $0x7fc0000,%ebp
  0x0000000002dd71f0: je     0x0000000002dd7211  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000002dd71f2: shl    $0x5,%eax
  0x0000000002dd71f5: sar    $0x17,%eax
  0x0000000002dd71f8: add    %r8d,%eax          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)

  0x0000000002dd71fb: jmp    0x0000000002dd71d6
  0x0000000002dd71fd: mov    $0xffffffe4,%edx
  0x0000000002dd7202: mov    %r8d,(%rsp)
  0x0000000002dd7206: mov    %r10d,0x4(%rsp)
  0x0000000002dd720b: callq  0x0000000002cf57a0  ; OopMap{off=144}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x0000000002dd7210: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x0000000002dd7211: mov    $0xffffff65,%edx
  0x0000000002dd7216: mov    %r8d,0x4(%rsp)
  0x0000000002dd721b: mov    %eax,0x8(%rsp)
  0x0000000002dd721f: callq  0x0000000002cf57a0  ; OopMap{off=164}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ;   {runtime_call}
  0x0000000002dd7224: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000002dd7225: hlt    
  0x0000000002dd7226: hlt    
  0x0000000002dd7227: hlt    
  0x0000000002dd7228: hlt    
  0x0000000002dd7229: hlt    
  0x0000000002dd722a: hlt    
  0x0000000002dd722b: hlt    
  0x0000000002dd722c: hlt    
  0x0000000002dd722d: hlt    
  0x0000000002dd722e: hlt    
  0x0000000002dd722f: hlt    
  0x0000000002dd7230: hlt    
  0x0000000002dd7231: hlt    
  0x0000000002dd7232: hlt    
  0x0000000002dd7233: hlt    
  0x0000000002dd7234: hlt    
  0x0000000002dd7235: hlt    
  0x0000000002dd7236: hlt    
  0x0000000002dd7237: hlt    
  0x0000000002dd7238: hlt    
  0x0000000002dd7239: hlt    
  0x0000000002dd723a: hlt    
  0x0000000002dd723b: hlt    
  0x0000000002dd723c: hlt    
  0x0000000002dd723d: hlt    
  0x0000000002dd723e: hlt    
  0x0000000002dd723f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dd7240: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dd7245: callq  0x0000000002dd724a
  0x0000000002dd724a: subq   $0x5,(%rsp)
  0x0000000002dd724f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd7254: hlt    
  0x0000000002dd7255: hlt    
  0x0000000002dd7256: hlt    
  0x0000000002dd7257: hlt    
<nmethod compile_id='80' compiler='C2' level='4' entry='0x0000000002dd7180' size='896' address='0x0000000002dd7050' relocation_offset='288' insts_offset='304' stub_offset='496' scopes_data_offset='544' scopes_pcs_offset='664' dependencies_offset='888' oops_offset='520' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='30137' iicount='30137' stamp='1.625'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dd8050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  0x0000000002dd81a0: int3   
  0x0000000002dd81a1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd81ac: data16 data16 xchg %ax,%ax
  0x0000000002dd81b0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd81b7: push   %rbp
  0x0000000002dd81b8: sub    $0x70,%rsp
  0x0000000002dd81bc: mov    0x18(%rdx),%r13d
  0x0000000002dd81c0: mov    0x20(%rdx),%r14d
  0x0000000002dd81c4: mov    0x60(%rdx),%rbp
  0x0000000002dd81c8: mov    0x48(%rdx),%r10
  0x0000000002dd81cc: mov    %r10,0x20(%rsp)
  0x0000000002dd81d1: mov    0x28(%rdx),%ebx
  0x0000000002dd81d4: mov    0x58(%rdx),%r11d
  0x0000000002dd81d8: mov    %r11d,0x30(%rsp)
  0x0000000002dd81dd: mov    0x40(%rdx),%r10d
  0x0000000002dd81e1: mov    %r10d,0x38(%rsp)
  0x0000000002dd81e6: mov    0x38(%rdx),%r11d
  0x0000000002dd81ea: mov    %r11d,0x3c(%rsp)
  0x0000000002dd81ef: mov    %rdx,%rcx
  0x0000000002dd81f2: movabs $0x5590be80,%r10
  0x0000000002dd81fc: callq  *%r10
  0x0000000002dd81ff: test   %rbp,%rbp
  0x0000000002dd8202: je     0x0000000002dd840a
  0x0000000002dd8208: mov    0x8(%rbp),%r10d
  0x0000000002dd820c: cmp    $0xf8000041,%r10d  ;   {metadata({type array char})}
  0x0000000002dd8213: jne    0x0000000002dd85bd
  0x0000000002dd8219: mov    %rbp,%r11
  0x0000000002dd821c: mov    0x20(%rsp),%r8
  0x0000000002dd8221: test   %r8,%r8
  0x0000000002dd8224: je     0x0000000002dd8412
  0x0000000002dd822a: mov    0x8(%r8),%r9d
  0x0000000002dd822e: cmp    $0xf8000041,%r9d   ;   {metadata({type array char})}
  0x0000000002dd8235: jne    0x0000000002dd85c2  ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dd823b: mov    %r8,%rdx
  0x0000000002dd823e: add    $0xc,%rdx          ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000002dd8242: movslq 0x38(%rsp),%rsi
  0x0000000002dd8247: mov    0x38(%rsp),%edi
  0x0000000002dd824b: inc    %edi               ;*iadd
                                                ; - java.lang.String::indexOf@116 (line 1779)

  0x0000000002dd824d: jmpq   0x0000000002dd8310  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=178}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x0000000002dd8252: test   %eax,-0x21d8258(%rip)        # 0x0000000000c00000
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {poll}
  0x0000000002dd8258: mov    %eax,%ecx
  0x0000000002dd825a: mov    %ecx,%eax
  0x0000000002dd825c: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dd825e: cmp    %r14d,%eax
  0x0000000002dd8261: jg     0x0000000002dd827a  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000002dd8263: cmp    %r9d,%eax
  0x0000000002dd8266: jae    0x0000000002dd841f  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000002dd826c: movslq %ecx,%r10
  0x0000000002dd826f: movzwl 0x12(%r11,%r10,2),%r13d
  0x0000000002dd8275: cmp    %ebx,%r13d
  0x0000000002dd8278: jne    0x0000000002dd8252  ;*iload
                                                ; - java.lang.String::indexOf@91 (line 1776)

  0x0000000002dd827a: mov    %eax,%r13d
  0x0000000002dd827d: inc    %r13d              ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000002dd8280: movslq %eax,%r9           ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000002dd8283: cmp    %r14d,%eax
  0x0000000002dd8286: jg     0x0000000002dd82ea  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000002dd8288: vmovd  %edi,%xmm1
  0x0000000002dd828c: mov    %eax,%ecx
  0x0000000002dd828e: add    0x3c(%rsp),%ecx    ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000002dd8292: mov    %ecx,0x54(%rsp)
  0x0000000002dd8296: cmp    %ecx,%r13d
  0x0000000002dd8299: jge    0x0000000002dd82df  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000000002dd829b: mov    0xc(%r11),%ecx     ; implicit exception: dispatches to 0x0000000002dd86a9
  0x0000000002dd829f: cmp    %ecx,%r13d
  0x0000000002dd82a2: jae    0x0000000002dd84d5  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000002dd82a8: test   %r8,%r8
  0x0000000002dd82ab: je     0x0000000002dd8539  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000002dd82b1: vmovq  %r8,%xmm2
  0x0000000002dd82b6: movzwl 0x12(%r11,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000002dd82bc: vmovd  %r10d,%xmm0
  0x0000000002dd82c1: mov    (%rdx),%r10d
  0x0000000002dd82c4: cmp    %r10d,%edi
  0x0000000002dd82c7: jae    0x0000000002dd8549
  0x0000000002dd82cd: movzwl 0x12(%r8,%rsi,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000002dd82d3: vmovd  %xmm0,%ecx
  0x0000000002dd82d7: cmp    %ebp,%ecx
  0x0000000002dd82d9: je     0x0000000002dd8619  ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x0000000002dd82df: cmp    0x54(%rsp),%r13d
  0x0000000002dd82e4: je     0x0000000002dd83be  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=330}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000002dd82ea: test   %eax,-0x21d82f0(%rip)        # 0x0000000000c00000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x0000000002dd82f0: cmp    %r14d,%r13d
  0x0000000002dd82f3: jg     0x0000000002dd83fc  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000002dd82f9: mov    0xc(%r11),%r10d    ; implicit exception: dispatches to 0x0000000002dd8699
  0x0000000002dd82fd: cmp    %r10d,%r13d
  0x0000000002dd8300: jae    0x0000000002dd8479  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000002dd8306: movzwl 0x12(%r11,%r9,2),%ecx
  0x0000000002dd830c: cmp    %ebx,%ecx
  0x0000000002dd830e: je     0x0000000002dd8344
  0x0000000002dd8310: mov    %r13d,%ecx
  0x0000000002dd8313: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dd8315: cmp    %r14d,%ecx
  0x0000000002dd8318: jg     0x0000000002dd8403  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000002dd831e: mov    0xc(%r11),%r9d     ; implicit exception: dispatches to 0x0000000002dd8689
  0x0000000002dd8322: cmp    %r9d,%ecx
  0x0000000002dd8325: jae    0x0000000002dd8421  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000002dd832b: movslq %r13d,%r10
  0x0000000002dd832e: movzwl 0x12(%r11,%r10,2),%r10d
  0x0000000002dd8334: cmp    %ebx,%r10d
  0x0000000002dd8337: jne    0x0000000002dd825a  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000002dd833d: mov    %ecx,%eax
  0x0000000002dd833f: jmpq   0x0000000002dd827a
  0x0000000002dd8344: vmovd  %edi,%xmm1         ;*iload
                                                ; - java.lang.String::indexOf@91 (line 1776)

  0x0000000002dd8348: movslq %r13d,%rdi         ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000002dd834b: mov    %r13d,%ecx
  0x0000000002dd834e: inc    %ecx               ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000002dd8350: mov    %ecx,%eax
  0x0000000002dd8352: cmp    %r14d,%r13d
  0x0000000002dd8355: jg     0x0000000002dd83ce  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000002dd8357: mov    %r13d,%ecx
  0x0000000002dd835a: add    0x3c(%rsp),%ecx    ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000002dd835e: mov    %ecx,0x54(%rsp)
  0x0000000002dd8362: mov    %eax,%ecx
  0x0000000002dd8364: cmp    0x54(%rsp),%ecx
  0x0000000002dd8368: jge    0x0000000002dd83b3  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000000002dd836a: cmp    %r10d,%ecx
  0x0000000002dd836d: jae    0x0000000002dd8669  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000002dd8373: test   %r8,%r8
  0x0000000002dd8376: je     0x0000000002dd8539  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000002dd837c: vmovq  %r8,%xmm2
  0x0000000002dd8381: movzwl 0x12(%r11,%rdi,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000002dd8387: vmovd  %r8d,%xmm0
  0x0000000002dd838c: mov    (%rdx),%r9d
  0x0000000002dd838f: vmovd  %xmm1,%ecx
  0x0000000002dd8393: cmp    %r9d,%ecx
  0x0000000002dd8396: jae    0x0000000002dd8674
  0x0000000002dd839c: vmovq  %xmm2,%r8
  0x0000000002dd83a1: movzwl 0x12(%r8,%rsi,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000002dd83a7: vmovd  %xmm0,%ecx
  0x0000000002dd83ab: cmp    %ebp,%ecx
  0x0000000002dd83ad: je     0x0000000002dd867f  ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x0000000002dd83b3: mov    %eax,%ecx
  0x0000000002dd83b5: cmp    0x54(%rsp),%ecx
  0x0000000002dd83b9: jne    0x0000000002dd83ce  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x0000000002dd83bb: mov    %r13d,%eax
  0x0000000002dd83be: sub    0x30(%rsp),%eax    ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dd83c2: add    $0x70,%rsp
  0x0000000002dd83c6: pop    %rbp
  0x0000000002dd83c7: test   %eax,-0x21d83cd(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dd83cd: retq                      ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=558}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000002dd83ce: test   %eax,-0x21d83d4(%rip)        # 0x0000000000c00000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x0000000002dd83d4: mov    %eax,%r13d
  0x0000000002dd83d7: cmp    %r14d,%eax
  0x0000000002dd83da: jg     0x0000000002dd83fc  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000002dd83dc: cmp    %r10d,%eax
  0x0000000002dd83df: jae    0x0000000002dd8479  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000002dd83e5: movzwl 0x12(%r11,%rdi,2),%ecx
  0x0000000002dd83eb: cmp    %ebx,%ecx
  0x0000000002dd83ed: je     0x0000000002dd8348  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x0000000002dd83f3: vmovd  %xmm1,%edi
  0x0000000002dd83f7: jmpq   0x0000000002dd8310
  0x0000000002dd83fc: mov    $0xffffffff,%eax
  0x0000000002dd8401: jmp    0x0000000002dd83c2
  0x0000000002dd8403: mov    %ecx,%eax
  0x0000000002dd8405: jmpq   0x0000000002dd827a
  0x0000000002dd840a: xor    %r11d,%r11d
  0x0000000002dd840d: jmpq   0x0000000002dd821c
  0x0000000002dd8412: mov    $0xc,%edx
  0x0000000002dd8417: xor    %r8d,%r8d
  0x0000000002dd841a: jmpq   0x0000000002dd8242
  0x0000000002dd841f: mov    %eax,%ecx
  0x0000000002dd8421: mov    $0xffffffe4,%edx
  0x0000000002dd8426: mov    %rax,-0x8(%rsp)
  0x0000000002dd842b: mov    0x30(%rsp),%eax
  0x0000000002dd842f: mov    %eax,0x20(%rsp)
  0x0000000002dd8433: mov    -0x8(%rsp),%rax
  0x0000000002dd8438: mov    %r8,0x28(%rsp)
  0x0000000002dd843d: mov    %rax,-0x8(%rsp)
  0x0000000002dd8442: mov    0x38(%rsp),%eax
  0x0000000002dd8446: mov    %eax,0x24(%rsp)
  0x0000000002dd844a: mov    -0x8(%rsp),%rax
  0x0000000002dd844f: mov    %rax,-0x8(%rsp)
  0x0000000002dd8454: mov    0x3c(%rsp),%eax
  0x0000000002dd8458: mov    %eax,0x30(%rsp)
  0x0000000002dd845c: mov    -0x8(%rsp),%rax
  0x0000000002dd8461: mov    %ebx,0x34(%rsp)
  0x0000000002dd8465: mov    %r14d,0x38(%rsp)
  0x0000000002dd846a: mov    %r11,0x40(%rsp)
  0x0000000002dd846f: mov    %ecx,0x48(%rsp)
  0x0000000002dd8473: callq  0x0000000002cf57a0  ; OopMap{[40]=Oop [64]=Oop off=728}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x0000000002dd8478: int3   
  0x0000000002dd8479: mov    $0xffffffe4,%edx
  0x0000000002dd847e: mov    %rax,-0x8(%rsp)
  0x0000000002dd8483: mov    0x30(%rsp),%eax
  0x0000000002dd8487: mov    %eax,0x20(%rsp)
  0x0000000002dd848b: mov    -0x8(%rsp),%rax
  0x0000000002dd8490: mov    %r8,0x28(%rsp)
  0x0000000002dd8495: mov    %rax,-0x8(%rsp)
  0x0000000002dd849a: mov    0x38(%rsp),%eax
  0x0000000002dd849e: mov    %eax,0x24(%rsp)
  0x0000000002dd84a2: mov    -0x8(%rsp),%rax
  0x0000000002dd84a7: mov    %rax,-0x8(%rsp)
  0x0000000002dd84ac: mov    0x3c(%rsp),%eax
  0x0000000002dd84b0: mov    %eax,0x30(%rsp)
  0x0000000002dd84b4: mov    -0x8(%rsp),%rax
  0x0000000002dd84b9: mov    %ebx,0x34(%rsp)
  0x0000000002dd84bd: mov    %r14d,0x38(%rsp)
  0x0000000002dd84c2: mov    %r11,0x40(%rsp)
  0x0000000002dd84c7: mov    %r13d,0x48(%rsp)
  0x0000000002dd84cc: data16 xchg %ax,%ax
  0x0000000002dd84cf: callq  0x0000000002cf57a0  ; OopMap{[40]=Oop [64]=Oop off=820}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000002dd84d4: int3                      ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000002dd84d5: mov    %eax,%ebp
  0x0000000002dd84d7: mov    $0xffffffe4,%edx
  0x0000000002dd84dc: mov    %rax,-0x8(%rsp)
  0x0000000002dd84e1: mov    0x30(%rsp),%eax
  0x0000000002dd84e5: mov    %eax,0x28(%rsp)
  0x0000000002dd84e9: mov    -0x8(%rsp),%rax
  0x0000000002dd84ee: mov    %r8,0x30(%rsp)
  0x0000000002dd84f3: mov    %rax,-0x8(%rsp)
  0x0000000002dd84f8: mov    0x38(%rsp),%eax
  0x0000000002dd84fc: mov    %eax,0x2c(%rsp)
  0x0000000002dd8500: mov    -0x8(%rsp),%rax
  0x0000000002dd8505: mov    %rax,-0x8(%rsp)
  0x0000000002dd850a: mov    0x3c(%rsp),%eax
  0x0000000002dd850e: mov    %eax,0x38(%rsp)
  0x0000000002dd8512: mov    -0x8(%rsp),%rax
  0x0000000002dd8517: mov    %ebx,0x3c(%rsp)
  0x0000000002dd851b: mov    %r14d,0x40(%rsp)
  0x0000000002dd8520: mov    %r11,0x48(%rsp)
  0x0000000002dd8525: mov    %r13d,0x50(%rsp)
  0x0000000002dd852a: vmovss %xmm1,0x58(%rsp)
  0x0000000002dd8530: data16 xchg %ax,%ax
  0x0000000002dd8533: callq  0x0000000002cf57a0  ; OopMap{[48]=Oop [72]=Oop off=920}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000002dd8538: int3   
  0x0000000002dd8539: mov    $0xfffffff6,%edx
  0x0000000002dd853e: vmovd  %xmm1,%ebp
  0x0000000002dd8542: nop
  0x0000000002dd8543: callq  0x0000000002cf57a0  ; OopMap{off=936}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000002dd8548: int3   
  0x0000000002dd8549: mov    %eax,%ebp
  0x0000000002dd854b: mov    $0xffffffe4,%edx
  0x0000000002dd8550: mov    %r11,0x20(%rsp)
  0x0000000002dd8555: mov    %rax,-0x8(%rsp)
  0x0000000002dd855a: mov    0x30(%rsp),%eax
  0x0000000002dd855e: mov    %eax,0x28(%rsp)
  0x0000000002dd8562: mov    -0x8(%rsp),%rax
  0x0000000002dd8567: mov    %rax,-0x8(%rsp)
  0x0000000002dd856c: mov    0x38(%rsp),%eax
  0x0000000002dd8570: mov    %eax,0x2c(%rsp)
  0x0000000002dd8574: mov    -0x8(%rsp),%rax
  0x0000000002dd8579: mov    %rax,-0x8(%rsp)
  0x0000000002dd857e: mov    0x3c(%rsp),%eax
  0x0000000002dd8582: mov    %eax,0x38(%rsp)
  0x0000000002dd8586: mov    -0x8(%rsp),%rax
  0x0000000002dd858b: mov    %ebx,0x3c(%rsp)
  0x0000000002dd858f: mov    %r14d,0x40(%rsp)
  0x0000000002dd8594: mov    %r13d,0x44(%rsp)
  0x0000000002dd8599: vmovsd %xmm2,0x48(%rsp)
  0x0000000002dd859f: mov    0x54(%rsp),%r10d
  0x0000000002dd85a4: mov    %r10d,0x50(%rsp)
  0x0000000002dd85a9: vmovss %xmm0,0x58(%rsp)
  0x0000000002dd85af: vmovss %xmm1,0x5c(%rsp)
  0x0000000002dd85b5: xchg   %ax,%ax
  0x0000000002dd85b7: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [72]=Oop off=1052}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000002dd85bc: int3                      ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000002dd85bd: mov    0x20(%rsp),%r8
  0x0000000002dd85c2: mov    $0xffffff9d,%edx
  0x0000000002dd85c7: mov    %rax,-0x8(%rsp)
  0x0000000002dd85cc: mov    0x30(%rsp),%eax
  0x0000000002dd85d0: mov    %eax,0x20(%rsp)
  0x0000000002dd85d4: mov    -0x8(%rsp),%rax
  0x0000000002dd85d9: mov    %r8,0x28(%rsp)
  0x0000000002dd85de: mov    %rax,-0x8(%rsp)
  0x0000000002dd85e3: mov    0x38(%rsp),%eax
  0x0000000002dd85e7: mov    %eax,0x24(%rsp)
  0x0000000002dd85eb: mov    -0x8(%rsp),%rax
  0x0000000002dd85f0: mov    %rax,-0x8(%rsp)
  0x0000000002dd85f5: mov    0x3c(%rsp),%eax
  0x0000000002dd85f9: mov    %eax,0x30(%rsp)
  0x0000000002dd85fd: mov    -0x8(%rsp),%rax
  0x0000000002dd8602: mov    %ebx,0x34(%rsp)
  0x0000000002dd8606: mov    %r14d,0x38(%rsp)
  0x0000000002dd860b: mov    %r13d,0x3c(%rsp)
  0x0000000002dd8610: data16 xchg %ax,%ax
  0x0000000002dd8613: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [40]=Oop off=1144}
                                                ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)
                                                ;   {runtime_call}
  0x0000000002dd8618: int3                      ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dd8619: mov    %eax,0x20(%rsp)    ;*aload_0
                                                ; - java.lang.String::indexOf@126 (line 1779)

  0x0000000002dd861d: mov    $0xffffff65,%edx
  0x0000000002dd8622: mov    %r11,0x28(%rsp)
  0x0000000002dd8627: mov    %rax,-0x8(%rsp)
  0x0000000002dd862c: mov    0x30(%rsp),%eax
  0x0000000002dd8630: mov    %eax,0x24(%rsp)
  0x0000000002dd8634: mov    -0x8(%rsp),%rax
  0x0000000002dd8639: vmovsd %xmm2,0x30(%rsp)
  0x0000000002dd863f: mov    %ebx,0x40(%rsp)
  0x0000000002dd8643: mov    %r14d,0x44(%rsp)
  0x0000000002dd8648: mov    %r13d,0x48(%rsp)
  0x0000000002dd864d: mov    0x54(%rsp),%r10d
  0x0000000002dd8652: mov    %r10d,0x4c(%rsp)
  0x0000000002dd8657: vmovss %xmm1,0x50(%rsp)
  0x0000000002dd865d: vmovss %xmm0,0x54(%rsp)
  0x0000000002dd8663: callq  0x0000000002cf57a0  ; OopMap{[40]=Oop [48]=Oop off=1224}
                                                ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x0000000002dd8668: int3                      ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x0000000002dd8669: mov    %r13d,%ebp
  0x0000000002dd866c: mov    %ecx,%r13d
  0x0000000002dd866f: jmpq   0x0000000002dd84d7
  0x0000000002dd8674: mov    %r13d,%ebp
  0x0000000002dd8677: mov    %eax,%r13d
  0x0000000002dd867a: jmpq   0x0000000002dd854b
  0x0000000002dd867f: mov    %r13d,0x20(%rsp)
  0x0000000002dd8684: mov    %eax,%r13d
  0x0000000002dd8687: jmp    0x0000000002dd861d
  0x0000000002dd8689: mov    $0xfffffff6,%edx
  0x0000000002dd868e: mov    %ecx,%ebp
  0x0000000002dd8690: data16 xchg %ax,%ax
  0x0000000002dd8693: callq  0x0000000002cf57a0  ; OopMap{off=1272}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x0000000002dd8698: int3   
  0x0000000002dd8699: mov    $0xfffffff6,%edx
  0x0000000002dd869e: mov    %r13d,%ebp
  0x0000000002dd86a1: xchg   %ax,%ax
  0x0000000002dd86a3: callq  0x0000000002cf57a0  ; OopMap{off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000002dd86a8: int3   
  0x0000000002dd86a9: mov    $0xfffffff6,%edx
  0x0000000002dd86ae: mov    %r13d,%ebp
  0x0000000002dd86b1: xchg   %ax,%ax
  0x0000000002dd86b3: callq  0x0000000002cf57a0  ; OopMap{off=1304}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000002dd86b8: int3                      ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dd86b9: hlt    
  0x0000000002dd86ba: hlt    
  0x0000000002dd86bb: hlt    
  0x0000000002dd86bc: hlt    
  0x0000000002dd86bd: hlt    
  0x0000000002dd86be: hlt    
  0x0000000002dd86bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dd86c0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dd86c5: callq  0x0000000002dd86ca
  0x0000000002dd86ca: subq   $0x5,(%rsp)
  0x0000000002dd86cf: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd86d4: hlt    
  0x0000000002dd86d5: hlt    
  0x0000000002dd86d6: hlt    
  0x0000000002dd86d7: hlt    
<nmethod compile_id='78' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002dd81a0' size='3280' address='0x0000000002dd8050' relocation_offset='288' insts_offset='336' stub_offset='1648' scopes_data_offset='1688' scopes_pcs_offset='2232' dependencies_offset='3240' nul_chk_table_offset='3248' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='746' backedge_count='54622' iicount='746' stamp='1.638'/>
<writer thread='8664'/>
<task_queued compile_id='90' method='java/util/BitSet get (I)Z' bytes='69' count='2560' iicount='2560' level='3' stamp='1.638' comment='tiered' hot_count='2560'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002deffd0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    r8        = boolean
  #           [sp+0xc0]  (sp of caller)
  0x0000000002df0240: mov    %eax,-0x6000(%rsp)
  0x0000000002df0247: push   %rbp
  0x0000000002df0248: sub    $0xb0,%rsp
  0x0000000002df024f: mov    %r8d,0x78(%rsp)
  0x0000000002df0254: movabs $0x1be616e8,%rbx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df025e: mov    0xdc(%rbx),%esi
  0x0000000002df0264: add    $0x8,%esi
  0x0000000002df0267: mov    %esi,0xdc(%rbx)
  0x0000000002df026d: movabs $0x1be474b8,%rbx   ;   {metadata({method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0277: and    $0x1ff8,%esi
  0x0000000002df027d: cmp    $0x0,%esi
  0x0000000002df0280: je     0x0000000002df0fc3  ;*aload_0
                                                ; - sun.net.www.ParseUtil::encodePath@0 (line 105)

  0x0000000002df0286: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ; implicit exception: dispatches to 0x0000000002df0fda
  0x0000000002df0289: mov    %rdx,%rbx
  0x0000000002df028c: movabs $0x1be616e8,%rsi   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0296: mov    0x8(%rbx),%ebx
  0x0000000002df0299: shl    $0x3,%rbx
  0x0000000002df029d: cmp    0x110(%rsi),%rbx
  0x0000000002df02a4: jne    0x0000000002df02b3
  0x0000000002df02a6: addq   $0x1,0x118(%rsi)
  0x0000000002df02ae: jmpq   0x0000000002df0319
  0x0000000002df02b3: cmp    0x120(%rsi),%rbx
  0x0000000002df02ba: jne    0x0000000002df02c9
  0x0000000002df02bc: addq   $0x1,0x128(%rsi)
  0x0000000002df02c4: jmpq   0x0000000002df0319
  0x0000000002df02c9: cmpq   $0x0,0x110(%rsi)
  0x0000000002df02d4: jne    0x0000000002df02ed
  0x0000000002df02d6: mov    %rbx,0x110(%rsi)
  0x0000000002df02dd: movq   $0x1,0x118(%rsi)
  0x0000000002df02e8: jmpq   0x0000000002df0319
  0x0000000002df02ed: cmpq   $0x0,0x120(%rsi)
  0x0000000002df02f8: jne    0x0000000002df0311
  0x0000000002df02fa: mov    %rbx,0x120(%rsi)
  0x0000000002df0301: movq   $0x1,0x128(%rsi)
  0x0000000002df030c: jmpq   0x0000000002df0319
  0x0000000002df0311: addq   $0x1,0x108(%rsi)
  0x0000000002df0319: movabs $0x1bda0ed0,%rbx   ;   {metadata(method data for {method} {0x000000001bc73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df0323: mov    0xdc(%rbx),%esi
  0x0000000002df0329: add    $0x8,%esi
  0x0000000002df032c: mov    %esi,0xdc(%rbx)
  0x0000000002df0332: movabs $0x1bc73c18,%rbx   ;   {metadata({method} {0x000000001bc73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df033c: and    $0x7ffff8,%esi
  0x0000000002df0342: cmp    $0x0,%esi
  0x0000000002df0345: je     0x0000000002df0fdf
  0x0000000002df034b: mov    0xc(%rdx),%r9d
  0x0000000002df034f: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)

  0x0000000002df0353: mov    0xc(%r9),%r11d     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ; implicit exception: dispatches to 0x0000000002df0ff6
  0x0000000002df0357: mov    %r11,%rbx
  0x0000000002df035a: shl    %ebx
  0x0000000002df035c: add    $0x10,%ebx
  0x0000000002df035f: mov    %rdx,%r13
  0x0000000002df0362: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002df036c: movslq %ebx,%rbx
  0x0000000002df036f: mov    %rbx,%rdi
  0x0000000002df0372: cmp    $0xffffff,%rbx
  0x0000000002df0379: ja     0x0000000002df0ffb
  0x0000000002df037f: movabs $0x17,%rsi
  0x0000000002df0389: lea    (%rsi,%rbx,2),%rsi
  0x0000000002df038d: and    $0xfffffffffffffff8,%rsi
  0x0000000002df0391: mov    0x60(%r15),%rax
  0x0000000002df0395: lea    (%rax,%rsi,1),%rsi
  0x0000000002df0399: cmp    0x70(%r15),%rsi
  0x0000000002df039d: ja     0x0000000002df0ffb
  0x0000000002df03a3: mov    %rsi,0x60(%r15)
  0x0000000002df03a7: sub    %rax,%rsi
  0x0000000002df03aa: movq   $0x1,(%rax)
  0x0000000002df03b1: mov    %rdx,%rcx
  0x0000000002df03b4: shr    $0x3,%rcx
  0x0000000002df03b8: mov    %ecx,0x8(%rax)
  0x0000000002df03bb: mov    %ebx,0xc(%rax)
  0x0000000002df03be: sub    $0x10,%rsi
  0x0000000002df03c2: je     0x0000000002df03d9
  0x0000000002df03c8: xor    %rbx,%rbx
  0x0000000002df03cb: shr    $0x3,%rsi
  0x0000000002df03cf: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002df03d4: dec    %rsi
  0x0000000002df03d7: jne    0x0000000002df03cf  ;*newarray
                                                ; - sun.net.www.ParseUtil::encodePath@9 (line 105)

  0x0000000002df03d9: mov    %r13,%rdx
  0x0000000002df03dc: movabs $0x1be616e8,%rbx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df03e6: mov    0x8(%rdx),%edx
  0x0000000002df03e9: shl    $0x3,%rdx
  0x0000000002df03ed: cmp    0x140(%rbx),%rdx
  0x0000000002df03f4: jne    0x0000000002df0403
  0x0000000002df03f6: addq   $0x1,0x148(%rbx)
  0x0000000002df03fe: jmpq   0x0000000002df0469
  0x0000000002df0403: cmp    0x150(%rbx),%rdx
  0x0000000002df040a: jne    0x0000000002df0419
  0x0000000002df040c: addq   $0x1,0x158(%rbx)
  0x0000000002df0414: jmpq   0x0000000002df0469
  0x0000000002df0419: cmpq   $0x0,0x140(%rbx)
  0x0000000002df0424: jne    0x0000000002df043d
  0x0000000002df0426: mov    %rdx,0x140(%rbx)
  0x0000000002df042d: movq   $0x1,0x148(%rbx)
  0x0000000002df0438: jmpq   0x0000000002df0469
  0x0000000002df043d: cmpq   $0x0,0x150(%rbx)
  0x0000000002df0448: jne    0x0000000002df0461
  0x0000000002df044a: mov    %rdx,0x150(%rbx)
  0x0000000002df0451: movq   $0x1,0x158(%rbx)
  0x0000000002df045c: jmpq   0x0000000002df0469
  0x0000000002df0461: addq   $0x1,0x138(%rbx)
  0x0000000002df0469: movabs $0x1be62910,%rbx   ;   {metadata(method data for {method} {0x000000001bc76ea8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df0473: mov    0xdc(%rbx),%edx
  0x0000000002df0479: add    $0x8,%edx
  0x0000000002df047c: mov    %edx,0xdc(%rbx)
  0x0000000002df0482: movabs $0x1bc76ea0,%rbx   ;   {metadata({method} {0x000000001bc76ea8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df048c: and    $0x7ffff8,%edx
  0x0000000002df0492: cmp    $0x0,%edx
  0x0000000002df0495: je     0x0000000002df1005
  0x0000000002df049b: mov    %r11,%rbx
  0x0000000002df049e: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002df04a8: mov    %rax,0x68(%rsp)
  0x0000000002df04ad: movslq %ebx,%rbx
  0x0000000002df04b0: mov    %rbx,%rdi
  0x0000000002df04b3: cmp    $0xffffff,%rbx
  0x0000000002df04ba: ja     0x0000000002df101c
  0x0000000002df04c0: movabs $0x17,%rsi
  0x0000000002df04ca: lea    (%rsi,%rbx,2),%rsi
  0x0000000002df04ce: and    $0xfffffffffffffff8,%rsi
  0x0000000002df04d2: mov    0x60(%r15),%rax
  0x0000000002df04d6: lea    (%rax,%rsi,1),%rsi
  0x0000000002df04da: cmp    0x70(%r15),%rsi
  0x0000000002df04de: ja     0x0000000002df101c
  0x0000000002df04e4: mov    %rsi,0x60(%r15)
  0x0000000002df04e8: sub    %rax,%rsi
  0x0000000002df04eb: movq   $0x1,(%rax)
  0x0000000002df04f2: mov    %rdx,%rcx
  0x0000000002df04f5: shr    $0x3,%rcx
  0x0000000002df04f9: mov    %ecx,0x8(%rax)
  0x0000000002df04fc: mov    %ebx,0xc(%rax)
  0x0000000002df04ff: sub    $0x10,%rsi
  0x0000000002df0503: je     0x0000000002df051a
  0x0000000002df0509: xor    %rbx,%rbx
  0x0000000002df050c: shr    $0x3,%rsi
  0x0000000002df0510: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002df0515: dec    %rsi
  0x0000000002df0518: jne    0x0000000002df0510  ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)

  0x0000000002df051a: mov    %rax,0x70(%rsp)
  0x0000000002df051f: movabs $0x1be62910,%rdx   ;   {metadata(method data for {method} {0x000000001bc76ea8} &apos;toCharArray&apos; &apos;()[C&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df0529: addq   $0x1,0x108(%rdx)
  0x0000000002df0531: mov    %r9,%rdx
  0x0000000002df0534: mov    $0x0,%r8d
  0x0000000002df053a: mov    %rax,%r9
  0x0000000002df053d: mov    $0x0,%edi
  0x0000000002df0542: mov    %r11,%rsi
  0x0000000002df0545: mov    %r13,0x60(%rsp)
  0x0000000002df054a: lea    (%rdi,%rsi,1),%rcx
  0x0000000002df054e: cmp    0xc(%r9),%ecx
  0x0000000002df0552: ja     0x0000000002df1026
  0x0000000002df0558: movslq %r8d,%r8
  0x0000000002df055b: movslq %edi,%rdi
  0x0000000002df055e: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002df0563: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002df0568: mov    %rsi,%r8
  0x0000000002df056b: sub    $0x20,%rsp
  0x0000000002df056f: test   $0xf,%esp
  0x0000000002df0575: je     0x0000000002df058d
  0x0000000002df057b: sub    $0x8,%rsp
  0x0000000002df057f: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002df0584: add    $0x8,%rsp
  0x0000000002df0588: jmpq   0x0000000002df0592
  0x0000000002df058d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002df0592: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)

  0x0000000002df0596: mov    0x60(%rsp),%rdx
  0x0000000002df059b: movabs $0x1be616e8,%r8    ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df05a5: mov    0x8(%rdx),%edx
  0x0000000002df05a8: shl    $0x3,%rdx
  0x0000000002df05ac: cmp    0x170(%r8),%rdx
  0x0000000002df05b3: jne    0x0000000002df05c2
  0x0000000002df05b5: addq   $0x1,0x178(%r8)
  0x0000000002df05bd: jmpq   0x0000000002df0628
  0x0000000002df05c2: cmp    0x180(%r8),%rdx
  0x0000000002df05c9: jne    0x0000000002df05d8
  0x0000000002df05cb: addq   $0x1,0x188(%r8)
  0x0000000002df05d3: jmpq   0x0000000002df0628
  0x0000000002df05d8: cmpq   $0x0,0x170(%r8)
  0x0000000002df05e3: jne    0x0000000002df05fc
  0x0000000002df05e5: mov    %rdx,0x170(%r8)
  0x0000000002df05ec: movq   $0x1,0x178(%r8)
  0x0000000002df05f7: jmpq   0x0000000002df0628
  0x0000000002df05fc: cmpq   $0x0,0x180(%r8)
  0x0000000002df0607: jne    0x0000000002df0620
  0x0000000002df0609: mov    %rdx,0x180(%r8)
  0x0000000002df0610: movq   $0x1,0x188(%r8)
  0x0000000002df061b: jmpq   0x0000000002df0628
  0x0000000002df0620: addq   $0x1,0x168(%r8)
  0x0000000002df0628: movabs $0x1bda0ed0,%r8    ;   {metadata(method data for {method} {0x000000001bc73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df0632: mov    0xdc(%r8),%edx
  0x0000000002df0639: add    $0x8,%edx
  0x0000000002df063c: mov    %edx,0xdc(%r8)
  0x0000000002df0643: movabs $0x1bc73c18,%r8    ;   {metadata({method} {0x000000001bc73c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df064d: and    $0x7ffff8,%edx
  0x0000000002df0653: cmp    $0x0,%edx
  0x0000000002df0656: je     0x0000000002df1031
  0x0000000002df065c: mov    0x60(%rsp),%rdx
  0x0000000002df0661: mov    0xc(%rdx),%r8d
  0x0000000002df0665: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)

  0x0000000002df0669: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)
                                                ; implicit exception: dispatches to 0x0000000002df1048
  0x0000000002df066d: mov    %esi,0x90(%rsp)
  0x0000000002df0674: mov    0x68(%rsp),%rax
  0x0000000002df0679: mov    $0x0,%edi
  0x0000000002df067e: mov    $0x0,%ebx          ;*iload
                                                ; - sun.net.www.ParseUtil::encodePath@29 (line 110)

  0x0000000002df0683: mov    %ebx,0x88(%rsp)
  0x0000000002df068a: mov    %rax,0x80(%rsp)
  0x0000000002df0692: nopw   0x0(%rax,%rax,1)
  0x0000000002df0698: mov    0x70(%rsp),%rax
  0x0000000002df069d: mov    0x78(%rsp),%r8d
  0x0000000002df06a2: cmp    %esi,%edi
  0x0000000002df06a4: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df06ae: movabs $0x198,%r9
  0x0000000002df06b8: jge    0x0000000002df06c8
  0x0000000002df06be: movabs $0x1a8,%r9
  0x0000000002df06c8: mov    (%rdx,%r9,1),%r11
  0x0000000002df06cc: lea    0x1(%r11),%r11
  0x0000000002df06d0: mov    %r11,(%rdx,%r9,1)
  0x0000000002df06d4: jge    0x0000000002df0f2a  ;*if_icmpge
                                                ; - sun.net.www.ParseUtil::encodePath@33 (line 110)

  0x0000000002df06da: movslq %edi,%rdx
  0x0000000002df06dd: cmp    0xc(%rax),%edi
  0x0000000002df06e0: jae    0x0000000002df104d
  0x0000000002df06e6: movzwl 0x10(%rax,%rdx,2),%r9d  ;*caload
                                                ; - sun.net.www.ParseUtil::encodePath@40 (line 111)

  0x0000000002df06ec: mov    %r9d,0x7c(%rsp)
  0x0000000002df06f1: cmp    $0x0,%r8d
  0x0000000002df06f5: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df06ff: movabs $0x1b8,%r11
  0x0000000002df0709: jne    0x0000000002df0719
  0x0000000002df070f: movabs $0x1c8,%r11
  0x0000000002df0719: mov    (%rdx,%r11,1),%r13
  0x0000000002df071d: lea    0x1(%r13),%r13
  0x0000000002df0721: mov    %r13,(%rdx,%r11,1)
  0x0000000002df0725: jne    0x0000000002df0765  ;*ifne
                                                ; - sun.net.www.ParseUtil::encodePath@44 (line 112)

  0x0000000002df072b: cmp    $0x2f,%r9d
  0x0000000002df072f: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0739: movabs $0x1d8,%r11
  0x0000000002df0743: je     0x0000000002df0753
  0x0000000002df0749: movabs $0x1e8,%r11
  0x0000000002df0753: mov    (%rdx,%r11,1),%r13
  0x0000000002df0757: lea    0x1(%r13),%r13
  0x0000000002df075b: mov    %r13,(%rdx,%r11,1)
  0x0000000002df075f: je     0x0000000002df0c89  ;*if_icmpeq
                                                ; - sun.net.www.ParseUtil::encodePath@51 (line 112)

  0x0000000002df0765: cmp    $0x0,%r8d
  0x0000000002df0769: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0773: movabs $0x1f8,%r11
  0x0000000002df077d: je     0x0000000002df078d
  0x0000000002df0783: movabs $0x208,%r11
  0x0000000002df078d: mov    (%rdx,%r11,1),%r13
  0x0000000002df0791: lea    0x1(%r13),%r13
  0x0000000002df0795: mov    %r13,(%rdx,%r11,1)
  0x0000000002df0799: je     0x0000000002df07d9  ;*ifeq
                                                ; - sun.net.www.ParseUtil::encodePath@55 (line 112)

  0x0000000002df079f: cmp    $0x5c,%r9d
  0x0000000002df07a3: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df07ad: movabs $0x218,%r11
  0x0000000002df07b7: jne    0x0000000002df07c7
  0x0000000002df07bd: movabs $0x228,%r11
  0x0000000002df07c7: mov    (%rdx,%r11,1),%r13
  0x0000000002df07cb: lea    0x1(%r13),%r13
  0x0000000002df07cf: mov    %r13,(%rdx,%r11,1)
  0x0000000002df07d3: je     0x0000000002df0c89  ;*if_icmpne
                                                ; - sun.net.www.ParseUtil::encodePath@63 (line 112)

  0x0000000002df07d9: cmp    $0x7f,%r9d
  0x0000000002df07dd: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df07e7: movabs $0x250,%r11
  0x0000000002df07f1: jg     0x0000000002df0801
  0x0000000002df07f7: movabs $0x260,%r11
  0x0000000002df0801: mov    (%rdx,%r11,1),%r13
  0x0000000002df0805: lea    0x1(%r13),%r13
  0x0000000002df0809: mov    %r13,(%rdx,%r11,1)
  0x0000000002df080d: jg     0x0000000002df0ac4  ;*if_icmpgt
                                                ; - sun.net.www.ParseUtil::encodePath@81 (line 115)

  0x0000000002df0813: cmp    $0x61,%r9d
  0x0000000002df0817: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0821: movabs $0x270,%r11
  0x0000000002df082b: jl     0x0000000002df083b
  0x0000000002df0831: movabs $0x280,%r11
  0x0000000002df083b: mov    (%rdx,%r11,1),%r13
  0x0000000002df083f: lea    0x1(%r13),%r13
  0x0000000002df0843: mov    %r13,(%rdx,%r11,1)
  0x0000000002df0847: jl     0x0000000002df0887  ;*if_icmplt
                                                ; - sun.net.www.ParseUtil::encodePath@88 (line 116)

  0x0000000002df084d: cmp    $0x7a,%r9d
  0x0000000002df0851: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df085b: movabs $0x290,%r11
  0x0000000002df0865: jle    0x0000000002df0875
  0x0000000002df086b: movabs $0x2a0,%r11
  0x0000000002df0875: mov    (%rdx,%r11,1),%r13
  0x0000000002df0879: lea    0x1(%r13),%r13
  0x0000000002df087d: mov    %r13,(%rdx,%r11,1)
  0x0000000002df0881: jle    0x0000000002df0a7b  ;*if_icmple
                                                ; - sun.net.www.ParseUtil::encodePath@95 (line 116)

  0x0000000002df0887: cmp    $0x41,%r9d
  0x0000000002df088b: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0895: movabs $0x2b0,%r11
  0x0000000002df089f: jl     0x0000000002df08af
  0x0000000002df08a5: movabs $0x2c0,%r11
  0x0000000002df08af: mov    (%rdx,%r11,1),%r13
  0x0000000002df08b3: lea    0x1(%r13),%r13
  0x0000000002df08b7: mov    %r13,(%rdx,%r11,1)
  0x0000000002df08bb: jl     0x0000000002df08fb  ;*if_icmplt
                                                ; - sun.net.www.ParseUtil::encodePath@102 (line 116)

  0x0000000002df08c1: cmp    $0x5a,%r9d
  0x0000000002df08c5: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df08cf: movabs $0x2d0,%r11
  0x0000000002df08d9: jle    0x0000000002df08e9
  0x0000000002df08df: movabs $0x2e0,%r11
  0x0000000002df08e9: mov    (%rdx,%r11,1),%r13
  0x0000000002df08ed: lea    0x1(%r13),%r13
  0x0000000002df08f1: mov    %r13,(%rdx,%r11,1)
  0x0000000002df08f5: jle    0x0000000002df0a7b  ;*if_icmple
                                                ; - sun.net.www.ParseUtil::encodePath@109 (line 116)

  0x0000000002df08fb: cmp    $0x30,%r9d
  0x0000000002df08ff: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0909: movabs $0x2f0,%r11
  0x0000000002df0913: jl     0x0000000002df0923
  0x0000000002df0919: movabs $0x300,%r11
  0x0000000002df0923: mov    (%rdx,%r11,1),%r13
  0x0000000002df0927: lea    0x1(%r13),%r13
  0x0000000002df092b: mov    %r13,(%rdx,%r11,1)
  0x0000000002df092f: jl     0x0000000002df096f  ;*if_icmplt
                                                ; - sun.net.www.ParseUtil::encodePath@116 (line 116)

  0x0000000002df0935: cmp    $0x39,%r9d
  0x0000000002df0939: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0943: movabs $0x310,%r11
  0x0000000002df094d: jg     0x0000000002df095d
  0x0000000002df0953: movabs $0x320,%r11
  0x0000000002df095d: mov    (%rdx,%r11,1),%r13
  0x0000000002df0961: lea    0x1(%r13),%r13
  0x0000000002df0965: mov    %r13,(%rdx,%r11,1)
  0x0000000002df0969: jle    0x0000000002df0a7b  ;*if_icmpgt
                                                ; - sun.net.www.ParseUtil::encodePath@123 (line 116)

  0x0000000002df096f: mov    %edi,0x8c(%rsp)
  0x0000000002df0976: movabs $0x76b81fda0,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0980: mov    0x68(%rdx),%edx
  0x0000000002df0983: shl    $0x3,%rdx          ;*getstatic encodedInPath
                                                ; - sun.net.www.ParseUtil::encodePath@137 (line 121)

  0x0000000002df0987: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x0000000002df1056
  0x0000000002df098a: mov    %rdx,%r11
  0x0000000002df098d: movabs $0x1be616e8,%r13   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0997: addq   $0x1,0x358(%r13)
  0x0000000002df099f: mov    %r9,%r8            ;*invokevirtual get
                                                ; - sun.net.www.ParseUtil::encodePath@142 (line 121)

  0x0000000002df09a2: nop
  0x0000000002df09a3: nop
  0x0000000002df09a4: nop
  0x0000000002df09a5: nop
  0x0000000002df09a6: nop
  0x0000000002df09a7: callq  0x0000000002cf61a0  ; OopMap{[112]=Oop [128]=Oop off=1900}
                                                ;*invokevirtual get
                                                ; - sun.net.www.ParseUtil::encodePath@142 (line 121)
                                                ;   {optimized virtual_call}
  0x0000000002df09ac: cmp    $0x0,%eax
  0x0000000002df09af: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df09b9: movabs $0x378,%r8
  0x0000000002df09c3: je     0x0000000002df09d3
  0x0000000002df09c9: movabs $0x388,%r8
  0x0000000002df09d3: mov    (%rdx,%r8,1),%r9
  0x0000000002df09d7: lea    0x1(%r9),%r9
  0x0000000002df09db: mov    %r9,(%rdx,%r8,1)
  0x0000000002df09df: je     0x0000000002df0a31  ;*ifeq
                                                ; - sun.net.www.ParseUtil::encodePath@145 (line 121)

  0x0000000002df09e5: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df09ef: addq   $0x1,0x398(%rdx)
  0x0000000002df09f7: mov    0x80(%rsp),%rdx
  0x0000000002df09ff: mov    0x7c(%rsp),%r8d
  0x0000000002df0a04: mov    0x88(%rsp),%r9d    ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@152 (line 122)

  0x0000000002df0a0c: nop
  0x0000000002df0a0d: nop
  0x0000000002df0a0e: nop
  0x0000000002df0a0f: callq  0x0000000002cf6620  ; OopMap{[112]=Oop [128]=Oop off=2004}
                                                ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@152 (line 122)
                                                ;   {static_call}
  0x0000000002df0a14: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0a1e: incl   0x3a8(%rdx)
  0x0000000002df0a24: mov    0x80(%rsp),%r8
  0x0000000002df0a2c: jmpq   0x0000000002df0ccf  ;*goto
                                                ; - sun.net.www.ParseUtil::encodePath@156 (line 122)

  0x0000000002df0a31: mov    0x7c(%rsp),%r9d
  0x0000000002df0a36: mov    0x88(%rsp),%ebx
  0x0000000002df0a3d: mov    0x80(%rsp),%rax
  0x0000000002df0a45: mov    %rbx,%rdx
  0x0000000002df0a48: inc    %edx
  0x0000000002df0a4a: movslq %ebx,%r8
  0x0000000002df0a4d: cmp    0xc(%rax),%ebx     ; implicit exception: dispatches to 0x0000000002df105b
  0x0000000002df0a50: jae    0x0000000002df1065
  0x0000000002df0a56: mov    %r9w,0x10(%rax,%r8,2)  ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)

  0x0000000002df0a5c: movabs $0x1be616e8,%r8    ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0a66: incl   0x3c0(%r8)
  0x0000000002df0a6d: mov    %rax,%rsi
  0x0000000002df0a70: mov    %rdx,%rax
  0x0000000002df0a73: mov    %rsi,%r8
  0x0000000002df0a76: jmpq   0x0000000002df0ccf  ;*goto
                                                ; - sun.net.www.ParseUtil::encodePath@167 (line 124)

  0x0000000002df0a7b: mov    %edi,0x8c(%rsp)
  0x0000000002df0a82: mov    0x88(%rsp),%ebx
  0x0000000002df0a89: mov    0x80(%rsp),%rsi
  0x0000000002df0a91: mov    %rbx,%rdx
  0x0000000002df0a94: inc    %edx
  0x0000000002df0a96: movslq %ebx,%r8
  0x0000000002df0a99: cmp    0xc(%rsi),%ebx     ; implicit exception: dispatches to 0x0000000002df106e
  0x0000000002df0a9c: jae    0x0000000002df1078
  0x0000000002df0aa2: mov    %r9w,0x10(%rsi,%r8,2)  ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)

  0x0000000002df0aa8: movabs $0x1be616e8,%r8    ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0ab2: incl   0x330(%r8)
  0x0000000002df0ab9: mov    %rdx,%rax
  0x0000000002df0abc: mov    %rsi,%r8
  0x0000000002df0abf: jmpq   0x0000000002df0ccf  ;*goto
                                                ; - sun.net.www.ParseUtil::encodePath@134 (line 119)

  0x0000000002df0ac4: mov    %edi,0x8c(%rsp)
  0x0000000002df0acb: mov    0x88(%rsp),%ebx
  0x0000000002df0ad2: mov    0x80(%rsp),%rsi
  0x0000000002df0ada: cmp    $0x7ff,%r9d
  0x0000000002df0ae1: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0aeb: movabs $0x3d8,%r8
  0x0000000002df0af5: jle    0x0000000002df0b05
  0x0000000002df0afb: movabs $0x3e8,%r8
  0x0000000002df0b05: mov    (%rdx,%r8,1),%rdi
  0x0000000002df0b09: lea    0x1(%rdi),%rdi
  0x0000000002df0b0d: mov    %rdi,(%rdx,%r8,1)
  0x0000000002df0b11: jle    0x0000000002df0bf9  ;*if_icmple
                                                ; - sun.net.www.ParseUtil::encodePath@175 (line 125)

  0x0000000002df0b17: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0b21: addq   $0x1,0x3f8(%rdx)
  0x0000000002df0b29: mov    %r9,%rdx
  0x0000000002df0b2c: sar    $0xc,%edx
  0x0000000002df0b2f: and    $0xf,%edx
  0x0000000002df0b32: or     $0xe0,%edx
  0x0000000002df0b38: mov    %rdx,%r8
  0x0000000002df0b3b: and    $0xffff,%r8d
  0x0000000002df0b42: mov    %rsi,%rdx
  0x0000000002df0b45: mov    %rbx,%r9           ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@193 (line 126)

  0x0000000002df0b48: mov    %rsi,0x80(%rsp)
  0x0000000002df0b50: nop
  0x0000000002df0b51: nop
  0x0000000002df0b52: nop
  0x0000000002df0b53: nop
  0x0000000002df0b54: nop
  0x0000000002df0b55: nop
  0x0000000002df0b56: nop
  0x0000000002df0b57: callq  0x0000000002cf6620  ; OopMap{[112]=Oop [128]=Oop off=2332}
                                                ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@193 (line 126)
                                                ;   {static_call}
  0x0000000002df0b5c: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0b66: addq   $0x1,0x408(%rdx)
  0x0000000002df0b6e: mov    0x7c(%rsp),%r9d
  0x0000000002df0b73: sar    $0x6,%r9d
  0x0000000002df0b77: and    $0x3f,%r9d
  0x0000000002df0b7b: or     $0x80,%r9d
  0x0000000002df0b82: and    $0xffff,%r9d
  0x0000000002df0b89: mov    0x80(%rsp),%rdx
  0x0000000002df0b91: mov    %r9,%r8
  0x0000000002df0b94: mov    %rax,%r9           ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@212 (line 127)

  0x0000000002df0b97: callq  0x0000000002cf6620  ; OopMap{[112]=Oop [128]=Oop off=2396}
                                                ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@212 (line 127)
                                                ;   {static_call}
  0x0000000002df0b9c: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0ba6: addq   $0x1,0x418(%rdx)
  0x0000000002df0bae: mov    0x7c(%rsp),%r9d
  0x0000000002df0bb3: and    $0x3f,%r9d
  0x0000000002df0bb7: or     $0x80,%r9d
  0x0000000002df0bbe: and    $0xffff,%r9d
  0x0000000002df0bc5: mov    0x80(%rsp),%rdx
  0x0000000002df0bcd: mov    %r9,%r8
  0x0000000002df0bd0: mov    %rax,%r9           ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@230 (line 128)

  0x0000000002df0bd3: nop
  0x0000000002df0bd4: nop
  0x0000000002df0bd5: nop
  0x0000000002df0bd6: nop
  0x0000000002df0bd7: callq  0x0000000002cf6620  ; OopMap{[112]=Oop [128]=Oop off=2460}
                                                ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@230 (line 128)
                                                ;   {static_call}
  0x0000000002df0bdc: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0be6: incl   0x428(%rdx)
  0x0000000002df0bec: mov    0x80(%rsp),%r8
  0x0000000002df0bf4: jmpq   0x0000000002df0ccf  ;*goto
                                                ; - sun.net.www.ParseUtil::encodePath@234 (line 128)

  0x0000000002df0bf9: mov    %rsi,0x80(%rsp)
  0x0000000002df0c01: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0c0b: addq   $0x1,0x440(%rdx)
  0x0000000002df0c13: mov    %r9,%rdx
  0x0000000002df0c16: sar    $0x6,%edx
  0x0000000002df0c19: and    $0x1f,%edx
  0x0000000002df0c1c: or     $0xc0,%edx
  0x0000000002df0c22: mov    %rdx,%r8
  0x0000000002df0c25: and    $0xffff,%r8d
  0x0000000002df0c2c: mov    0x80(%rsp),%rdx
  0x0000000002df0c34: mov    %rbx,%r9           ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@252 (line 130)

  0x0000000002df0c37: callq  0x0000000002cf6620  ; OopMap{[112]=Oop [128]=Oop off=2556}
                                                ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@252 (line 130)
                                                ;   {static_call}
  0x0000000002df0c3c: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0c46: addq   $0x1,0x450(%rdx)
  0x0000000002df0c4e: mov    0x7c(%rsp),%r9d
  0x0000000002df0c53: and    $0x3f,%r9d
  0x0000000002df0c57: or     $0x80,%r9d
  0x0000000002df0c5e: and    $0xffff,%r9d
  0x0000000002df0c65: mov    0x80(%rsp),%rdx
  0x0000000002df0c6d: mov    %r9,%r8
  0x0000000002df0c70: mov    %rax,%r9           ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@270 (line 131)

  0x0000000002df0c73: nop
  0x0000000002df0c74: nop
  0x0000000002df0c75: nop
  0x0000000002df0c76: nop
  0x0000000002df0c77: callq  0x0000000002cf6620  ; OopMap{[112]=Oop [128]=Oop off=2620}
                                                ;*invokestatic escape
                                                ; - sun.net.www.ParseUtil::encodePath@270 (line 131)
                                                ;   {static_call}
  0x0000000002df0c7c: mov    0x80(%rsp),%r8
  0x0000000002df0c84: jmpq   0x0000000002df0ccf  ;*iload_3
                                                ; - sun.net.www.ParseUtil::encodePath@274 (line 136)

  0x0000000002df0c89: mov    %edi,0x8c(%rsp)
  0x0000000002df0c90: mov    0x88(%rsp),%ebx
  0x0000000002df0c97: mov    0x80(%rsp),%r8
  0x0000000002df0c9f: mov    %rbx,%rdx
  0x0000000002df0ca2: inc    %edx
  0x0000000002df0ca4: mov    $0x2f,%esi
  0x0000000002df0ca9: movslq %ebx,%rdi
  0x0000000002df0cac: cmp    0xc(%r8),%ebx      ; implicit exception: dispatches to 0x0000000002df1081
  0x0000000002df0cb0: jae    0x0000000002df108b
  0x0000000002df0cb6: mov    %si,0x10(%r8,%rdi,2)  ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)

  0x0000000002df0cbc: movabs $0x1be616e8,%rbx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0cc6: incl   0x238(%rbx)
  0x0000000002df0ccc: mov    %rdx,%rax          ;*goto
                                                ; - sun.net.www.ParseUtil::encodePath@74 (line 113)

  0x0000000002df0ccf: mov    0xc(%r8),%ebx      ;*arraylength
                                                ; - sun.net.www.ParseUtil::encodePath@279 (line 136)
                                                ; implicit exception: dispatches to 0x0000000002df1094
  0x0000000002df0cd3: mov    %rax,%rdx
  0x0000000002df0cd6: add    $0x9,%edx
  0x0000000002df0cd9: cmp    %ebx,%edx
  0x0000000002df0cdb: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0ce5: movabs $0x460,%rsi
  0x0000000002df0cef: jle    0x0000000002df0cff
  0x0000000002df0cf5: movabs $0x470,%rsi
  0x0000000002df0cff: mov    (%rdx,%rsi,1),%rdi
  0x0000000002df0d03: lea    0x1(%rdi),%rdi
  0x0000000002df0d07: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002df0d0b: jg     0x0000000002df0d19  ;*if_icmple
                                                ; - sun.net.www.ParseUtil::encodePath@280 (line 136)

  0x0000000002df0d11: mov    %r8,%rsi
  0x0000000002df0d14: jmpq   0x0000000002df0eb8  ;*iinc
                                                ; - sun.net.www.ParseUtil::encodePath@319 (line 110)

  0x0000000002df0d19: shl    %ebx
  0x0000000002df0d1b: add    $0x10,%ebx
  0x0000000002df0d1e: cmp    $0x0,%ebx
  0x0000000002df0d21: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0d2b: movabs $0x480,%rsi
  0x0000000002df0d35: jge    0x0000000002df0d45
  0x0000000002df0d3b: movabs $0x490,%rsi
  0x0000000002df0d45: mov    (%rdx,%rsi,1),%rdi
  0x0000000002df0d49: lea    0x1(%rdi),%rdi
  0x0000000002df0d4d: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002df0d51: jge    0x0000000002df0d5c  ;*ifge
                                                ; - sun.net.www.ParseUtil::encodePath@294 (line 138)

  0x0000000002df0d57: mov    $0x7fffffff,%ebx   ;*iload
                                                ; - sun.net.www.ParseUtil::encodePath@301 (line 141)

  0x0000000002df0d5c: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002df0d66: mov    %rax,%r11
  0x0000000002df0d69: movslq %ebx,%rbx
  0x0000000002df0d6c: mov    %rbx,%rdi
  0x0000000002df0d6f: cmp    $0xffffff,%rbx
  0x0000000002df0d76: ja     0x0000000002df1099
  0x0000000002df0d7c: movabs $0x17,%rsi
  0x0000000002df0d86: lea    (%rsi,%rbx,2),%rsi
  0x0000000002df0d8a: and    $0xfffffffffffffff8,%rsi
  0x0000000002df0d8e: mov    0x60(%r15),%rax
  0x0000000002df0d92: lea    (%rax,%rsi,1),%rsi
  0x0000000002df0d96: cmp    0x70(%r15),%rsi
  0x0000000002df0d9a: ja     0x0000000002df1099
  0x0000000002df0da0: mov    %rsi,0x60(%r15)
  0x0000000002df0da4: sub    %rax,%rsi
  0x0000000002df0da7: movq   $0x1,(%rax)
  0x0000000002df0dae: mov    %rdx,%rcx
  0x0000000002df0db1: shr    $0x3,%rcx
  0x0000000002df0db5: mov    %ecx,0x8(%rax)
  0x0000000002df0db8: mov    %ebx,0xc(%rax)
  0x0000000002df0dbb: sub    $0x10,%rsi
  0x0000000002df0dbf: je     0x0000000002df0dd6
  0x0000000002df0dc5: xor    %rbx,%rbx
  0x0000000002df0dc8: shr    $0x3,%rsi
  0x0000000002df0dcc: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002df0dd1: dec    %rsi
  0x0000000002df0dd4: jne    0x0000000002df0dcc  ;*newarray
                                                ; - sun.net.www.ParseUtil::encodePath@303 (line 141)

  0x0000000002df0dd6: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0de0: addq   $0x1,0x4a0(%rdx)
  0x0000000002df0de8: mov    %r8,%rdx
  0x0000000002df0deb: mov    $0x0,%r8d
  0x0000000002df0df1: mov    %rax,%r9
  0x0000000002df0df4: mov    $0x0,%edi
  0x0000000002df0df9: mov    %r11,%rsi
  0x0000000002df0dfc: mov    %r11d,0x94(%rsp)
  0x0000000002df0e04: mov    %rax,0x98(%rsp)
  0x0000000002df0e0c: mov    0x8(%r9),%ecx
  0x0000000002df0e10: shl    $0x3,%rcx
  0x0000000002df0e14: cmpl   $0x0,0x8(%rcx)
  0x0000000002df0e1b: jge    0x0000000002df10a3
  0x0000000002df0e21: mov    0x8(%rdx),%ecx
  0x0000000002df0e24: shl    $0x3,%rcx
  0x0000000002df0e28: cmpl   $0x0,0x8(%rcx)
  0x0000000002df0e2f: jge    0x0000000002df10a3
  0x0000000002df0e35: lea    (%r8,%rsi,1),%rcx
  0x0000000002df0e39: cmp    0xc(%rdx),%ecx
  0x0000000002df0e3c: ja     0x0000000002df10a3
  0x0000000002df0e42: lea    (%rdi,%rsi,1),%rcx
  0x0000000002df0e46: cmp    0xc(%r9),%ecx
  0x0000000002df0e4a: ja     0x0000000002df10a3
  0x0000000002df0e50: test   %esi,%esi
  0x0000000002df0e52: jl     0x0000000002df10a3
  0x0000000002df0e58: je     0x0000000002df0ea9
  0x0000000002df0e5e: movslq %r8d,%r8
  0x0000000002df0e61: movslq %edi,%rdi
  0x0000000002df0e64: mov    0x8(%rdx),%ecx
  0x0000000002df0e67: cmp    0x8(%r9),%ecx
  0x0000000002df0e6b: jne    0x0000000002df10a3
  0x0000000002df0e71: lea    0x10(%rdx,%r8,2),%rcx
  0x0000000002df0e76: lea    0x10(%r9,%rdi,2),%rdx
  0x0000000002df0e7b: mov    %rsi,%r8
  0x0000000002df0e7e: sub    $0x20,%rsp
  0x0000000002df0e82: test   $0xf,%esp
  0x0000000002df0e88: je     0x0000000002df0ea0
  0x0000000002df0e8e: sub    $0x8,%rsp
  0x0000000002df0e92: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002df0e97: add    $0x8,%rsp
  0x0000000002df0e9b: jmpq   0x0000000002df0ea5
  0x0000000002df0ea0: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002df0ea5: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - sun.net.www.ParseUtil::encodePath@313 (line 142)

  0x0000000002df0ea9: mov    0x98(%rsp),%rsi    ;*iinc
                                                ; - sun.net.www.ParseUtil::encodePath@319 (line 110)

  0x0000000002df0eb1: mov    0x94(%rsp),%eax
  0x0000000002df0eb8: mov    0x8c(%rsp),%edi
  0x0000000002df0ebf: inc    %edi
  0x0000000002df0ec1: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0ecb: mov    0xe0(%rdx),%ecx
  0x0000000002df0ed1: add    $0x8,%ecx
  0x0000000002df0ed4: mov    %ecx,0xe0(%rdx)
  0x0000000002df0eda: movabs $0x1be474b8,%rdx   ;   {metadata({method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0ee4: and    $0xfff8,%ecx
  0x0000000002df0eea: cmp    $0x0,%ecx
  0x0000000002df0eed: je     0x0000000002df10b1  ; OopMap{[112]=Oop rsi=Oop off=3251}
                                                ;*goto
                                                ; - sun.net.www.ParseUtil::encodePath@322 (line 110)

  0x0000000002df0ef3: test   %eax,-0x21f0df9(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002df0ef9: movabs $0x1be616e8,%rdx   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0f03: incl   0x4b0(%rdx)
  0x0000000002df0f09: mov    %rax,%rbx
  0x0000000002df0f0c: mov    %rsi,%r8
  0x0000000002df0f0f: mov    %ebx,0x88(%rsp)
  0x0000000002df0f16: mov    %r8,0x80(%rsp)
  0x0000000002df0f1e: mov    0x90(%rsp),%esi
  0x0000000002df0f25: jmpq   0x0000000002df0698  ;*goto
                                                ; - sun.net.www.ParseUtil::encodePath@322 (line 110)

  0x0000000002df0f2a: mov    0x88(%rsp),%ebx
  0x0000000002df0f31: mov    0x80(%rsp),%r8
  0x0000000002df0f39: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002df0f43: mov    0x60(%r15),%rax
  0x0000000002df0f47: lea    0x18(%rax),%rdi
  0x0000000002df0f4b: cmp    0x70(%r15),%rdi
  0x0000000002df0f4f: ja     0x0000000002df10c8
  0x0000000002df0f55: mov    %rdi,0x60(%r15)
  0x0000000002df0f59: mov    0xa8(%rdx),%rcx
  0x0000000002df0f60: mov    %rcx,(%rax)
  0x0000000002df0f63: mov    %rdx,%rcx
  0x0000000002df0f66: shr    $0x3,%rcx
  0x0000000002df0f6a: mov    %ecx,0x8(%rax)
  0x0000000002df0f6d: xor    %rcx,%rcx
  0x0000000002df0f70: mov    %ecx,0xc(%rax)
  0x0000000002df0f73: xor    %rcx,%rcx
  0x0000000002df0f76: mov    %rcx,0x10(%rax)    ;*new  ; - sun.net.www.ParseUtil::encodePath@325 (line 146)

  0x0000000002df0f7a: mov    %rax,%r9
  0x0000000002df0f7d: movabs $0x1be616e8,%rdi   ;   {metadata(method data for {method} {0x000000001be474c0} &apos;encodePath&apos; &apos;(Ljava/lang/String;Z)Ljava/lang/String;&apos; in &apos;sun/net/www/ParseUtil&apos;)}
  0x0000000002df0f87: addq   $0x1,0x4c8(%rdi)
  0x0000000002df0f8f: mov    $0x0,%r9d
  0x0000000002df0f95: mov    %rbx,%rdi
  0x0000000002df0f98: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - sun.net.www.ParseUtil::encodePath@332 (line 146)

  0x0000000002df0f9b: mov    %rax,0xa0(%rsp)
  0x0000000002df0fa3: nop
  0x0000000002df0fa4: nop
  0x0000000002df0fa5: nop
  0x0000000002df0fa6: nop
  0x0000000002df0fa7: callq  0x0000000002cf61a0  ; OopMap{[160]=Oop off=3436}
                                                ;*invokespecial &lt;init&gt;
                                                ; - sun.net.www.ParseUtil::encodePath@332 (line 146)
                                                ;   {optimized virtual_call}
  0x0000000002df0fac: mov    0xa0(%rsp),%rax
  0x0000000002df0fb4: add    $0xb0,%rsp
  0x0000000002df0fbb: pop    %rbp
  0x0000000002df0fbc: test   %eax,-0x21f0ec2(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df0fc2: retq   
  0x0000000002df0fc3: mov    %rbx,0x8(%rsp)
  0x0000000002df0fc8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df0fd0: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=3477}
                                                ;*synchronization entry
                                                ; - sun.net.www.ParseUtil::encodePath@-1 (line 105)
                                                ;   {runtime_call}
  0x0000000002df0fd5: jmpq   0x0000000002df0286
  0x0000000002df0fda: callq  0x0000000002dad680  ; OopMap{rdx=Oop off=3487}
                                                ;*invokevirtual length
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ;   {runtime_call}
  0x0000000002df0fdf: mov    %rbx,0x8(%rsp)
  0x0000000002df0fe4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df0fec: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=3505}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ;   {runtime_call}
  0x0000000002df0ff1: jmpq   0x0000000002df034b
  0x0000000002df0ff6: callq  0x0000000002dad680  ; OopMap{rdx=Oop r9=Oop off=3515}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@1 (line 105)
                                                ;   {runtime_call}
  0x0000000002df0ffb: callq  0x0000000002dae700  ; OopMap{r9=Oop r13=Oop off=3520}
                                                ;*newarray
                                                ; - sun.net.www.ParseUtil::encodePath@9 (line 105)
                                                ;   {runtime_call}
  0x0000000002df1000: jmpq   0x0000000002df03d9
  0x0000000002df1005: mov    %rbx,0x8(%rsp)
  0x0000000002df100a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df1012: callq  0x0000000002db1d60  ; OopMap{r9=Oop r13=Oop rax=Oop off=3543}
                                                ;*synchronization entry
                                                ; - java.lang.String::toCharArray@-1 (line 2899)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {runtime_call}
  0x0000000002df1017: jmpq   0x0000000002df049b
  0x0000000002df101c: callq  0x0000000002dae700  ; OopMap{r9=Oop r13=Oop [104]=Oop off=3553}
                                                ;*newarray
                                                ; - java.lang.String::toCharArray@5 (line 2899)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {runtime_call}
  0x0000000002df1021: jmpq   0x0000000002df051a
  0x0000000002df1026: nop
  0x0000000002df1027: callq  0x0000000002cf6620  ; OopMap{[96]=Oop [112]=Oop [104]=Oop off=3564}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toCharArray@20 (line 2900)
                                                ; - sun.net.www.ParseUtil::encodePath@15 (line 107)
                                                ;   {static_call}
  0x0000000002df102c: jmpq   0x0000000002df0596
  0x0000000002df1031: mov    %r8,0x8(%rsp)
  0x0000000002df1036: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df103e: callq  0x0000000002db1d60  ; OopMap{[96]=Oop [112]=Oop [104]=Oop off=3587}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)
                                                ;   {runtime_call}
  0x0000000002df1043: jmpq   0x0000000002df065c
  0x0000000002df1048: callq  0x0000000002dad680  ; OopMap{[112]=Oop [104]=Oop off=3597}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - sun.net.www.ParseUtil::encodePath@21 (line 109)
                                                ;   {runtime_call}
  0x0000000002df104d: mov    %rdi,(%rsp)
  0x0000000002df1051: callq  0x0000000002dac940  ; OopMap{[128]=Oop rax=Oop [112]=Oop off=3606}
                                                ;*caload
                                                ; - sun.net.www.ParseUtil::encodePath@40 (line 111)
                                                ;   {runtime_call}
  0x0000000002df1056: callq  0x0000000002dad680  ; OopMap{[128]=Oop [112]=Oop rdx=Oop off=3611}
                                                ;*invokevirtual get
                                                ; - sun.net.www.ParseUtil::encodePath@142 (line 121)
                                                ;   {runtime_call}
  0x0000000002df105b: callq  0x0000000002dad680  ; OopMap{[112]=Oop rax=Oop off=3616}
                                                ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)
                                                ;   {runtime_call}
  0x0000000002df1060: callq  0x0000000002dad680  ; OopMap{[112]=Oop rax=Oop off=3621}
                                                ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)
                                                ;   {runtime_call}
  0x0000000002df1065: mov    %rbx,(%rsp)
  0x0000000002df1069: callq  0x0000000002dac940  ; OopMap{[112]=Oop rax=Oop off=3630}
                                                ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@166 (line 124)
                                                ;   {runtime_call}
  0x0000000002df106e: callq  0x0000000002dad680  ; OopMap{[112]=Oop rsi=Oop off=3635}
                                                ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)
                                                ;   {runtime_call}
  0x0000000002df1073: callq  0x0000000002dad680  ; OopMap{[112]=Oop rsi=Oop off=3640}
                                                ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)
                                                ;   {runtime_call}
  0x0000000002df1078: mov    %rbx,(%rsp)
  0x0000000002df107c: callq  0x0000000002dac940  ; OopMap{[112]=Oop rsi=Oop off=3649}
                                                ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@133 (line 119)
                                                ;   {runtime_call}
  0x0000000002df1081: callq  0x0000000002dad680  ; OopMap{[112]=Oop r8=Oop off=3654}
                                                ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)
                                                ;   {runtime_call}
  0x0000000002df1086: callq  0x0000000002dad680  ; OopMap{[112]=Oop r8=Oop off=3659}
                                                ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)
                                                ;   {runtime_call}
  0x0000000002df108b: mov    %rbx,(%rsp)
  0x0000000002df108f: callq  0x0000000002dac940  ; OopMap{[112]=Oop r8=Oop off=3668}
                                                ;*castore
                                                ; - sun.net.www.ParseUtil::encodePath@73 (line 113)
                                                ;   {runtime_call}
  0x0000000002df1094: callq  0x0000000002dad680  ; OopMap{[112]=Oop r8=Oop off=3673}
                                                ;*arraylength
                                                ; - sun.net.www.ParseUtil::encodePath@279 (line 136)
                                                ;   {runtime_call}
  0x0000000002df1099: callq  0x0000000002dae700  ; OopMap{[112]=Oop r8=Oop off=3678}
                                                ;*newarray
                                                ; - sun.net.www.ParseUtil::encodePath@303 (line 141)
                                                ;   {runtime_call}
  0x0000000002df109e: jmpq   0x0000000002df0dd6
  0x0000000002df10a3: nop
  0x0000000002df10a4: nop
  0x0000000002df10a5: nop
  0x0000000002df10a6: nop
  0x0000000002df10a7: callq  0x0000000002cf6620  ; OopMap{[112]=Oop [152]=Oop off=3692}
                                                ;*invokestatic arraycopy
                                                ; - sun.net.www.ParseUtil::encodePath@313 (line 142)
                                                ;   {static_call}
  0x0000000002df10ac: jmpq   0x0000000002df0ea9
  0x0000000002df10b1: mov    %rdx,0x8(%rsp)
  0x0000000002df10b6: movq   $0x142,(%rsp)
  0x0000000002df10be: callq  0x0000000002db1d60  ; OopMap{[112]=Oop rsi=Oop off=3715}
                                                ;*goto
                                                ; - sun.net.www.ParseUtil::encodePath@322 (line 110)
                                                ;   {runtime_call}
  0x0000000002df10c3: jmpq   0x0000000002df0ef3
  0x0000000002df10c8: mov    %rdx,%rdx
  0x0000000002df10cb: callq  0x0000000002dade00  ; OopMap{r8=Oop off=3728}
                                                ;*new  ; - sun.net.www.ParseUtil::encodePath@325 (line 146)
                                                ;   {runtime_call}
  0x0000000002df10d0: jmpq   0x0000000002df0f7a
  0x0000000002df10d5: nop
  0x0000000002df10d6: nop
  0x0000000002df10d7: mov    0x2a8(%r15),%rax
  0x0000000002df10de: movabs $0x0,%r10
  0x0000000002df10e8: mov    %r10,0x2a8(%r15)
  0x0000000002df10ef: movabs $0x0,%r10
  0x0000000002df10f9: mov    %r10,0x2b0(%r15)
  0x0000000002df1100: add    $0xb0,%rsp
  0x0000000002df1107: pop    %rbp
  0x0000000002df1108: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df110d: hlt    
  0x0000000002df110e: hlt    
  0x0000000002df110f: hlt    
  0x0000000002df1110: hlt    
  0x0000000002df1111: hlt    
  0x0000000002df1112: hlt    
  0x0000000002df1113: hlt    
  0x0000000002df1114: hlt    
  0x0000000002df1115: hlt    
  0x0000000002df1116: hlt    
  0x0000000002df1117: hlt    
  0x0000000002df1118: hlt    
  0x0000000002df1119: hlt    
  0x0000000002df111a: hlt    
  0x0000000002df111b: hlt    
  0x0000000002df111c: hlt    
  0x0000000002df111d: hlt    
  0x0000000002df111e: hlt    
  0x0000000002df111f: hlt    
[Stub Code]
  0x0000000002df1120: nop                       ;   {no_reloc}
  0x0000000002df1121: nop
  0x0000000002df1122: nop
  0x0000000002df1123: nop
  0x0000000002df1124: nop
  0x0000000002df1125: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df112f: jmpq   0x0000000002df112f  ;   {runtime_call}
  0x0000000002df1134: nop
  0x0000000002df1135: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df113f: jmpq   0x0000000002df113f  ;   {runtime_call}
  0x0000000002df1144: nop
  0x0000000002df1145: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df114f: jmpq   0x0000000002df114f  ;   {runtime_call}
  0x0000000002df1154: nop
  0x0000000002df1155: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df115f: jmpq   0x0000000002df115f  ;   {runtime_call}
  0x0000000002df1164: nop
  0x0000000002df1165: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df116f: jmpq   0x0000000002df116f  ;   {runtime_call}
  0x0000000002df1174: nop
  0x0000000002df1175: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df117f: jmpq   0x0000000002df117f  ;   {runtime_call}
  0x0000000002df1184: nop
  0x0000000002df1185: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df118f: jmpq   0x0000000002df118f  ;   {runtime_call}
  0x0000000002df1194: nop
  0x0000000002df1195: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df119f: jmpq   0x0000000002df119f  ;   {runtime_call}
  0x0000000002df11a4: nop
  0x0000000002df11a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df11af: jmpq   0x0000000002df11af  ;   {runtime_call}
  0x0000000002df11b4: nop
  0x0000000002df11b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df11bf: jmpq   0x0000000002df11bf  ;   {runtime_call}
[Exception Handler]
  0x0000000002df11c4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002df11c9: mov    %rsp,-0x28(%rsp)
  0x0000000002df11ce: sub    $0x80,%rsp
  0x0000000002df11d5: mov    %rax,0x78(%rsp)
  0x0000000002df11da: mov    %rcx,0x70(%rsp)
  0x0000000002df11df: mov    %rdx,0x68(%rsp)
  0x0000000002df11e4: mov    %rbx,0x60(%rsp)
  0x0000000002df11e9: mov    %rbp,0x50(%rsp)
  0x0000000002df11ee: mov    %rsi,0x48(%rsp)
  0x0000000002df11f3: mov    %rdi,0x40(%rsp)
  0x0000000002df11f8: mov    %r8,0x38(%rsp)
  0x0000000002df11fd: mov    %r9,0x30(%rsp)
  0x0000000002df1202: mov    %r10,0x28(%rsp)
  0x0000000002df1207: mov    %r11,0x20(%rsp)
  0x0000000002df120c: mov    %r12,0x18(%rsp)
  0x0000000002df1211: mov    %r13,0x10(%rsp)
  0x0000000002df1216: mov    %r14,0x8(%rsp)
  0x0000000002df121b: mov    %r15,(%rsp)
  0x0000000002df121f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df1229: movabs $0x2df11c9,%rdx    ;   {internal_word}
  0x0000000002df1233: mov    %rsp,%r8
  0x0000000002df1236: and    $0xfffffffffffffff0,%rsp
  0x0000000002df123a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df123f: hlt    
[Deopt Handler Code]
  0x0000000002df1240: movabs $0x2df1240,%r10    ;   {section_word}
  0x0000000002df124a: push   %r10
  0x0000000002df124c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df1251: hlt    
  0x0000000002df1252: hlt    
  0x0000000002df1253: hlt    
  0x0000000002df1254: hlt    
  0x0000000002df1255: hlt    
  0x0000000002df1256: hlt    
  0x0000000002df1257: hlt    
<nmethod compile_id='89' compiler='C1' level='3' entry='0x0000000002df0240' size='7304' address='0x0000000002deffd0' relocation_offset='288' insts_offset='624' stub_offset='4432' scopes_data_offset='4776' scopes_pcs_offset='5760' dependencies_offset='7200' nul_chk_table_offset='7208' method='sun/net/www/ParseUtil encodePath (Ljava/lang/String;Z)Ljava/lang/String;' bytes='336' count='318' backedge_count='24673' iicount='318' stamp='1.688'/>
<sweeper state='finished' traversals='1'  total_blobs='330' nmethods='64' adapters='179' free_code_cache='250352832' stamp='1.689'/>
<writer thread='8664'/>
<task_queued compile_id='91' method='java/lang/Character toLowerCase (C)C' bytes='6' count='3968' iicount='3968' level='3' stamp='1.689' comment='tiered' hot_count='3968'/>
<task_queued compile_id='92' method='java/net/URL getPort ()I' bytes='5' count='384' iicount='384' level='1' stamp='1.689' comment='tiered' hot_count='384'/>
<task_queued compile_id='93' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='1664' iicount='1664' level='3' stamp='1.689' comment='tiered' hot_count='1664'/>
<task_queued compile_id='94' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='32' count='1408' iicount='1408' throwouts='18' level='3' stamp='1.689' comment='tiered' hot_count='1408'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002df5350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;
  # this:     rdx:rdx   = &apos;java/util/BitSet&apos;
  # parm0:    r8        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002df5540: mov    0x8(%rdx),%r10d
  0x0000000002df5544: shl    $0x3,%r10
  0x0000000002df5548: cmp    %rax,%r10
  0x0000000002df554b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df5551: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df555c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df5560: mov    %eax,-0x6000(%rsp)
  0x0000000002df5567: push   %rbp
  0x0000000002df5568: sub    $0xa0,%rsp
  0x0000000002df556f: mov    %r8d,0x68(%rsp)
  0x0000000002df5574: movabs $0x1be5d640,%rsi   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df557e: mov    0xdc(%rsi),%edi
  0x0000000002df5584: add    $0x8,%edi
  0x0000000002df5587: mov    %edi,0xdc(%rsi)
  0x0000000002df558d: movabs $0x1be4c218,%rsi   ;   {metadata({method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df5597: and    $0x1ff8,%edi
  0x0000000002df559d: cmp    $0x0,%edi
  0x0000000002df55a0: je     0x0000000002df5c71  ;*iload_1
                                                ; - java.util.BitSet::get@0 (line 622)

  0x0000000002df55a6: cmp    $0x0,%r8d
  0x0000000002df55aa: movabs $0x1be5d640,%rsi   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df55b4: movabs $0x108,%rdi
  0x0000000002df55be: jge    0x0000000002df55ce
  0x0000000002df55c4: movabs $0x118,%rdi
  0x0000000002df55ce: mov    (%rsi,%rdi,1),%rbx
  0x0000000002df55d2: lea    0x1(%rbx),%rbx
  0x0000000002df55d6: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002df55da: jl     0x0000000002df573b  ;*ifge
                                                ; - java.util.BitSet::get@1 (line 622)

  0x0000000002df55e0: mov    %rdx,%rsi
  0x0000000002df55e3: movabs $0x1be5d640,%rdi   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df55ed: addq   $0x1,0x1d8(%rdi)
  0x0000000002df55f5: mov    %rdx,%rsi
  0x0000000002df55f8: mov    %rsi,%rdx          ;*invokespecial checkInvariants
                                                ; - java.util.BitSet::get@32 (line 625)

  0x0000000002df55fb: mov    %rsi,0x70(%rsp)
  0x0000000002df5600: nop
  0x0000000002df5601: nop
  0x0000000002df5602: nop
  0x0000000002df5603: nop
  0x0000000002df5604: nop
  0x0000000002df5605: nop
  0x0000000002df5606: nop
  0x0000000002df5607: callq  0x0000000002cf61a0  ; OopMap{[112]=Oop off=204}
                                                ;*invokespecial checkInvariants
                                                ; - java.util.BitSet::get@32 (line 625)
                                                ;   {optimized virtual_call}
  0x0000000002df560c: movabs $0x1be5d640,%rcx   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df5616: addq   $0x1,0x1e8(%rcx)
  0x0000000002df561e: movabs $0x1be5d2a8,%rcx   ;   {metadata(method data for {method} {0x000000001be4ad28} &apos;wordIndex&apos; &apos;(I)I&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df5628: mov    0xdc(%rcx),%eax
  0x0000000002df562e: add    $0x8,%eax
  0x0000000002df5631: mov    %eax,0xdc(%rcx)
  0x0000000002df5637: movabs $0x1be4ad20,%rcx   ;   {metadata({method} {0x000000001be4ad28} &apos;wordIndex&apos; &apos;(I)I&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df5641: and    $0x7ffff8,%eax
  0x0000000002df5647: cmp    $0x0,%eax
  0x0000000002df564a: je     0x0000000002df5c88
  0x0000000002df5650: mov    0x68(%rsp),%r8d
  0x0000000002df5655: sar    $0x6,%r8d
  0x0000000002df5659: mov    0x70(%rsp),%rdx
  0x0000000002df565e: mov    0xc(%rdx),%ecx     ;*getfield wordsInUse
                                                ; - java.util.BitSet::get@42 (line 628)

  0x0000000002df5661: cmp    %ecx,%r8d
  0x0000000002df5664: movabs $0x1be5d640,%rcx   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df566e: movabs $0x1f8,%rax
  0x0000000002df5678: jge    0x0000000002df5688
  0x0000000002df567e: movabs $0x208,%rax
  0x0000000002df5688: mov    (%rcx,%rax,1),%rsi
  0x0000000002df568c: lea    0x1(%rsi),%rsi
  0x0000000002df5690: mov    %rsi,(%rcx,%rax,1)
  0x0000000002df5694: jge    0x0000000002df570a  ;*if_icmpge
                                                ; - java.util.BitSet::get@45 (line 628)

  0x0000000002df569a: mov    0x14(%rdx),%ecx
  0x0000000002df569d: shl    $0x3,%rcx          ;*getfield words
                                                ; - java.util.BitSet::get@49 (line 628)

  0x0000000002df56a1: movslq %r8d,%rax
  0x0000000002df56a4: cmp    0xc(%rcx),%r8d     ; implicit exception: dispatches to 0x0000000002df5c9f
  0x0000000002df56a8: jae    0x0000000002df5ca9
  0x0000000002df56ae: mov    0x10(%rcx,%rax,8),%rdx  ;*laload
                                                ; - java.util.BitSet::get@53 (line 628)

  0x0000000002df56b3: mov    0x68(%rsp),%ecx
  0x0000000002df56b7: movabs $0x1,%rax
  0x0000000002df56c1: shl    %cl,%rax
  0x0000000002df56c4: and    %rax,%rdx
  0x0000000002df56c7: movabs $0x0,%rax
  0x0000000002df56d1: cmp    %rax,%rdx
  0x0000000002df56d4: movabs $0x1be5d640,%rax   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df56de: movabs $0x228,%rdx
  0x0000000002df56e8: jne    0x0000000002df56f8
  0x0000000002df56ee: movabs $0x218,%rdx
  0x0000000002df56f8: mov    (%rax,%rdx,1),%rsi
  0x0000000002df56fc: lea    0x1(%rsi),%rsi
  0x0000000002df5700: mov    %rsi,(%rax,%rdx,1)
  0x0000000002df5704: jne    0x0000000002df5714  ;*lcmp
                                                ; - java.util.BitSet::get@59 (line 628)

  0x0000000002df570a: mov    $0x0,%eax
  0x0000000002df570f: jmpq   0x0000000002df5729  ;*ireturn
                                                ; - java.util.BitSet::get@68 (line 628)

  0x0000000002df5714: movabs $0x1be5d640,%rax   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df571e: incl   0x238(%rax)
  0x0000000002df5724: mov    $0x1,%eax          ;*goto
                                                ; - java.util.BitSet::get@64 (line 628)

  0x0000000002df5729: and    $0x1,%eax
  0x0000000002df572c: add    $0xa0,%rsp
  0x0000000002df5733: pop    %rbp
  0x0000000002df5734: test   %eax,-0x21f563a(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df573a: retq                      ;*ireturn
                                                ; - java.util.BitSet::get@68 (line 628)

  0x0000000002df573b: nopl   0x0(%rax,%rax,1)
  0x0000000002df5740: jmpq   0x0000000002df5cc1  ;   {no_reloc}
  0x0000000002df5745: add    %al,(%rax)
  0x0000000002df5747: add    %al,(%rax)
  0x0000000002df5749: add    %ch,%cl
  0x0000000002df574b: jl     0x0000000002df5752
  0x0000000002df574d: add    %al,(%rax)         ;*new  ; - java.util.BitSet::get@4 (line 623)

  0x0000000002df574f: nop
  0x0000000002df5750: jmpq   0x0000000002df5ce7  ;   {no_reloc}
  0x0000000002df5755: add    %al,(%rax)
  0x0000000002df5757: add    %al,(%rax)
  0x0000000002df5759: add    %cl,-0x77(%rax)
  0x0000000002df575c: test   %ah,(%rax,%rax,4)
  0x0000000002df575f: add    %al,(%rax)
  0x0000000002df5761: add    %cl,-0x75(%rcx)
  0x0000000002df5764: rex.RXB (bad) 
  0x0000000002df5766: lea    0x18(%rax),%rdi
  0x0000000002df576a: cmp    0x70(%r15),%rdi
  0x0000000002df576e: ja     0x0000000002df5cf1
  0x0000000002df5774: mov    %rdi,0x60(%r15)
  0x0000000002df5778: mov    0xa8(%rdx),%rcx
  0x0000000002df577f: mov    %rcx,(%rax)
  0x0000000002df5782: mov    %rdx,%rcx
  0x0000000002df5785: shr    $0x3,%rcx
  0x0000000002df5789: mov    %ecx,0x8(%rax)
  0x0000000002df578c: xor    %rcx,%rcx
  0x0000000002df578f: mov    %ecx,0xc(%rax)
  0x0000000002df5792: xor    %rcx,%rcx
  0x0000000002df5795: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.BitSet::get@8 (line 623)

  0x0000000002df5799: mov    %rax,%rbx
  0x0000000002df579c: movabs $0x1be5d640,%rdx   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df57a6: addq   $0x1,0x128(%rdx)
  0x0000000002df57ae: movabs $0x1bea7de8,%rbx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df57b8: mov    0xdc(%rbx),%edx
  0x0000000002df57be: add    $0x8,%edx
  0x0000000002df57c1: mov    %edx,0xdc(%rbx)
  0x0000000002df57c7: movabs $0x1bce7640,%rbx   ;   {metadata({method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df57d1: and    $0x7ffff8,%edx
  0x0000000002df57d7: cmp    $0x0,%edx
  0x0000000002df57da: je     0x0000000002df5cfe
  0x0000000002df57e0: mov    %rax,%rbx
  0x0000000002df57e3: movabs $0x1bea7de8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df57ed: addq   $0x1,0x108(%rdx)
  0x0000000002df57f5: movabs $0x1be9d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002df57ff: mov    0xdc(%rbx),%edx
  0x0000000002df5805: add    $0x8,%edx
  0x0000000002df5808: mov    %edx,0xdc(%rbx)
  0x0000000002df580e: movabs $0x1bce3970,%rbx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002df5818: and    $0x7ffff8,%edx
  0x0000000002df581e: cmp    $0x0,%edx
  0x0000000002df5821: je     0x0000000002df5d15
  0x0000000002df5827: mov    %rax,%rbx
  0x0000000002df582a: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002df5834: addq   $0x1,0x108(%rdx)
  0x0000000002df583c: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df5846: mov    0xdc(%rbx),%edx
  0x0000000002df584c: add    $0x8,%edx
  0x0000000002df584f: mov    %edx,0xdc(%rbx)
  0x0000000002df5855: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df585f: and    $0x7ffff8,%edx
  0x0000000002df5865: cmp    $0x0,%edx
  0x0000000002df5868: je     0x0000000002df5d2c
  0x0000000002df586e: mov    $0x10,%ebx
  0x0000000002df5873: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002df587d: mov    %rax,%r11
  0x0000000002df5880: movslq %ebx,%rbx
  0x0000000002df5883: mov    %rbx,%rdi
  0x0000000002df5886: cmp    $0xffffff,%rbx
  0x0000000002df588d: ja     0x0000000002df5d43
  0x0000000002df5893: movabs $0x17,%rsi
  0x0000000002df589d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002df58a1: and    $0xfffffffffffffff8,%rsi
  0x0000000002df58a5: mov    0x60(%r15),%rax
  0x0000000002df58a9: lea    (%rax,%rsi,1),%rsi
  0x0000000002df58ad: cmp    0x70(%r15),%rsi
  0x0000000002df58b1: ja     0x0000000002df5d43
  0x0000000002df58b7: mov    %rsi,0x60(%r15)
  0x0000000002df58bb: sub    %rax,%rsi
  0x0000000002df58be: movq   $0x1,(%rax)
  0x0000000002df58c5: mov    %rdx,%rcx
  0x0000000002df58c8: shr    $0x3,%rcx
  0x0000000002df58cc: mov    %ecx,0x8(%rax)
  0x0000000002df58cf: mov    %ebx,0xc(%rax)
  0x0000000002df58d2: sub    $0x10,%rsi
  0x0000000002df58d6: je     0x0000000002df58ed
  0x0000000002df58dc: xor    %rbx,%rbx
  0x0000000002df58df: shr    $0x3,%rsi
  0x0000000002df58e3: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002df58e8: dec    %rsi
  0x0000000002df58eb: jne    0x0000000002df58e3  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)

  0x0000000002df58ed: mov    %rax,%r10
  0x0000000002df58f0: shr    $0x3,%r10
  0x0000000002df58f4: mov    %r10d,0x10(%r11)
  0x0000000002df58f8: mov    %r11,%rax
  0x0000000002df58fb: shr    $0x9,%rax
  0x0000000002df58ff: movabs $0xea5d000,%rdx
  0x0000000002df5909: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)

  0x0000000002df590d: mov    %r11,%rax
  0x0000000002df5910: movabs $0x1be5d640,%rdx   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df591a: mov    0x8(%rax),%eax
  0x0000000002df591d: shl    $0x3,%rax
  0x0000000002df5921: cmp    0x140(%rdx),%rax
  0x0000000002df5928: jne    0x0000000002df5937
  0x0000000002df592a: addq   $0x1,0x148(%rdx)
  0x0000000002df5932: jmpq   0x0000000002df599d
  0x0000000002df5937: cmp    0x150(%rdx),%rax
  0x0000000002df593e: jne    0x0000000002df594d
  0x0000000002df5940: addq   $0x1,0x158(%rdx)
  0x0000000002df5948: jmpq   0x0000000002df599d
  0x0000000002df594d: cmpq   $0x0,0x140(%rdx)
  0x0000000002df5958: jne    0x0000000002df5971
  0x0000000002df595a: mov    %rax,0x140(%rdx)
  0x0000000002df5961: movq   $0x1,0x148(%rdx)
  0x0000000002df596c: jmpq   0x0000000002df599d
  0x0000000002df5971: cmpq   $0x0,0x150(%rdx)
  0x0000000002df597c: jne    0x0000000002df5995
  0x0000000002df597e: mov    %rax,0x150(%rdx)
  0x0000000002df5985: movq   $0x1,0x158(%rdx)
  0x0000000002df5990: jmpq   0x0000000002df599d
  0x0000000002df5995: addq   $0x1,0x138(%rdx)
  0x0000000002df599d: movabs $0x1be611d0,%rdx   ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df59a7: mov    0xdc(%rdx),%esi
  0x0000000002df59ad: add    $0x8,%esi
  0x0000000002df59b0: mov    %esi,0xdc(%rdx)
  0x0000000002df59b6: movabs $0x1bce7958,%rdx   ;   {metadata({method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df59c0: and    $0x7ffff8,%esi
  0x0000000002df59c6: cmp    $0x0,%esi
  0x0000000002df59c9: je     0x0000000002df5d4d
  0x0000000002df59cf: mov    %r11,%rax
  0x0000000002df59d2: movabs $0x1be611d0,%rdx   ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df59dc: addq   $0x1,0x108(%rdx)
  0x0000000002df59e4: movabs $0x76bf1f130,%r8   ;   {oop(&quot;bitIndex &lt; 0: &quot;)}
  0x0000000002df59ee: mov    %r11,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.BitSet::get@17 (line 623)

  0x0000000002df59f1: mov    %r11,0x78(%rsp)
  0x0000000002df59f6: nop
  0x0000000002df59f7: callq  0x0000000002cf61a0  ; OopMap{[128]=Oop [120]=Oop off=1212}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.BitSet::get@17 (line 623)
                                                ;   {optimized virtual_call}
  0x0000000002df59fc: mov    0x78(%rsp),%rax
  0x0000000002df5a01: movabs $0x1be5d640,%r8    ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df5a0b: mov    0x8(%rax),%eax
  0x0000000002df5a0e: shl    $0x3,%rax
  0x0000000002df5a12: cmp    0x170(%r8),%rax
  0x0000000002df5a19: jne    0x0000000002df5a28
  0x0000000002df5a1b: addq   $0x1,0x178(%r8)
  0x0000000002df5a23: jmpq   0x0000000002df5a8e
  0x0000000002df5a28: cmp    0x180(%r8),%rax
  0x0000000002df5a2f: jne    0x0000000002df5a3e
  0x0000000002df5a31: addq   $0x1,0x188(%r8)
  0x0000000002df5a39: jmpq   0x0000000002df5a8e
  0x0000000002df5a3e: cmpq   $0x0,0x170(%r8)
  0x0000000002df5a49: jne    0x0000000002df5a62
  0x0000000002df5a4b: mov    %rax,0x170(%r8)
  0x0000000002df5a52: movq   $0x1,0x178(%r8)
  0x0000000002df5a5d: jmpq   0x0000000002df5a8e
  0x0000000002df5a62: cmpq   $0x0,0x180(%r8)
  0x0000000002df5a6d: jne    0x0000000002df5a86
  0x0000000002df5a6f: mov    %rax,0x180(%r8)
  0x0000000002df5a76: movq   $0x1,0x188(%r8)
  0x0000000002df5a81: jmpq   0x0000000002df5a8e
  0x0000000002df5a86: addq   $0x1,0x168(%r8)
  0x0000000002df5a8e: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df5a98: mov    0xdc(%r8),%edx
  0x0000000002df5a9f: add    $0x8,%edx
  0x0000000002df5aa2: mov    %edx,0xdc(%r8)
  0x0000000002df5aa9: movabs $0x1bce7e18,%r8    ;   {metadata({method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df5ab3: and    $0x7ffff8,%edx
  0x0000000002df5ab9: cmp    $0x0,%edx
  0x0000000002df5abc: je     0x0000000002df5d64
  0x0000000002df5ac2: mov    0x78(%rsp),%rax
  0x0000000002df5ac7: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df5ad1: addq   $0x1,0x108(%r8)
  0x0000000002df5ad9: mov    0x68(%rsp),%r8d
  0x0000000002df5ade: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.BitSet::get@21 (line 623)

  0x0000000002df5ae3: nop
  0x0000000002df5ae4: nop
  0x0000000002df5ae5: nop
  0x0000000002df5ae6: nop
  0x0000000002df5ae7: callq  0x0000000002cf61a0  ; OopMap{[128]=Oop [120]=Oop off=1452}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.BitSet::get@21 (line 623)
                                                ;   {optimized virtual_call}
  0x0000000002df5aec: mov    0x78(%rsp),%rax
  0x0000000002df5af1: movabs $0x1be5d640,%rdx   ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df5afb: mov    0x8(%rax),%eax
  0x0000000002df5afe: shl    $0x3,%rax
  0x0000000002df5b02: cmp    0x1a0(%rdx),%rax
  0x0000000002df5b09: jne    0x0000000002df5b18
  0x0000000002df5b0b: addq   $0x1,0x1a8(%rdx)
  0x0000000002df5b13: jmpq   0x0000000002df5b7e
  0x0000000002df5b18: cmp    0x1b0(%rdx),%rax
  0x0000000002df5b1f: jne    0x0000000002df5b2e
  0x0000000002df5b21: addq   $0x1,0x1b8(%rdx)
  0x0000000002df5b29: jmpq   0x0000000002df5b7e
  0x0000000002df5b2e: cmpq   $0x0,0x1a0(%rdx)
  0x0000000002df5b39: jne    0x0000000002df5b52
  0x0000000002df5b3b: mov    %rax,0x1a0(%rdx)
  0x0000000002df5b42: movq   $0x1,0x1a8(%rdx)
  0x0000000002df5b4d: jmpq   0x0000000002df5b7e
  0x0000000002df5b52: cmpq   $0x0,0x1b0(%rdx)
  0x0000000002df5b5d: jne    0x0000000002df5b76
  0x0000000002df5b5f: mov    %rax,0x1b0(%rdx)
  0x0000000002df5b66: movq   $0x1,0x1b8(%rdx)
  0x0000000002df5b71: jmpq   0x0000000002df5b7e
  0x0000000002df5b76: addq   $0x1,0x198(%rdx)
  0x0000000002df5b7e: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df5b88: mov    0xdc(%rdx),%esi
  0x0000000002df5b8e: add    $0x8,%esi
  0x0000000002df5b91: mov    %esi,0xdc(%rdx)
  0x0000000002df5b97: movabs $0x1bce8d08,%rdx   ;   {metadata({method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df5ba1: and    $0x7ffff8,%esi
  0x0000000002df5ba7: cmp    $0x0,%esi
  0x0000000002df5baa: je     0x0000000002df5d7b
  0x0000000002df5bb0: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002df5bba: mov    0x60(%r15),%rax
  0x0000000002df5bbe: lea    0x18(%rax),%rdi
  0x0000000002df5bc2: cmp    0x70(%r15),%rdi
  0x0000000002df5bc6: ja     0x0000000002df5d92
  0x0000000002df5bcc: mov    %rdi,0x60(%r15)
  0x0000000002df5bd0: mov    0xa8(%rdx),%rcx
  0x0000000002df5bd7: mov    %rcx,(%rax)
  0x0000000002df5bda: mov    %rdx,%rcx
  0x0000000002df5bdd: shr    $0x3,%rcx
  0x0000000002df5be1: mov    %ecx,0x8(%rax)
  0x0000000002df5be4: xor    %rcx,%rcx
  0x0000000002df5be7: mov    %ecx,0xc(%rax)
  0x0000000002df5bea: xor    %rcx,%rcx
  0x0000000002df5bed: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)

  0x0000000002df5bf1: mov    0x78(%rsp),%r8
  0x0000000002df5bf6: mov    0x10(%r8),%r9d
  0x0000000002df5bfa: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)

  0x0000000002df5bfe: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)

  0x0000000002df5c02: mov    %rax,%r8
  0x0000000002df5c05: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002df5c0f: addq   $0x1,0x108(%rdx)
  0x0000000002df5c17: mov    %r9,%r8
  0x0000000002df5c1a: mov    $0x0,%r9d
  0x0000000002df5c20: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)

  0x0000000002df5c23: mov    %rax,0x88(%rsp)
  0x0000000002df5c2b: nop
  0x0000000002df5c2c: nop
  0x0000000002df5c2d: nop
  0x0000000002df5c2e: nop
  0x0000000002df5c2f: callq  0x0000000002cf61a0  ; OopMap{[128]=Oop [136]=Oop off=1780}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)
                                                ;   {optimized virtual_call}
  0x0000000002df5c34: mov    0x80(%rsp),%rax
  0x0000000002df5c3c: movabs $0x1be5d640,%r8    ;   {metadata(method data for {method} {0x000000001be4c220} &apos;get&apos; &apos;(I)Z&apos; in &apos;java/util/BitSet&apos;)}
  0x0000000002df5c46: addq   $0x1,0x1c8(%r8)
  0x0000000002df5c4e: mov    0x88(%rsp),%r8
  0x0000000002df5c56: mov    0x80(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.BitSet::get@27 (line 623)

  0x0000000002df5c5e: nop
  0x0000000002df5c5f: callq  0x0000000002cf61a0  ; OopMap{[128]=Oop off=1828}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.BitSet::get@27 (line 623)
                                                ;   {optimized virtual_call}
  0x0000000002df5c64: mov    0x80(%rsp),%rax
  0x0000000002df5c6c: jmpq   0x0000000002df5dca
  0x0000000002df5c71: mov    %rsi,0x8(%rsp)
  0x0000000002df5c76: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df5c7e: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=1859}
                                                ;*synchronization entry
                                                ; - java.util.BitSet::get@-1 (line 622)
                                                ;   {runtime_call}
  0x0000000002df5c83: jmpq   0x0000000002df55a6
  0x0000000002df5c88: mov    %rcx,0x8(%rsp)
  0x0000000002df5c8d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df5c95: callq  0x0000000002db1d60  ; OopMap{[112]=Oop off=1882}
                                                ;*synchronization entry
                                                ; - java.util.BitSet::wordIndex@-1 (line 112)
                                                ; - java.util.BitSet::get@36 (line 627)
                                                ;   {runtime_call}
  0x0000000002df5c9a: jmpq   0x0000000002df5650
  0x0000000002df5c9f: callq  0x0000000002dad680  ; OopMap{rcx=Oop off=1892}
                                                ;*laload
                                                ; - java.util.BitSet::get@53 (line 628)
                                                ;   {runtime_call}
  0x0000000002df5ca4: callq  0x0000000002dad680  ; OopMap{rcx=Oop off=1897}
                                                ;*laload
                                                ; - java.util.BitSet::get@53 (line 628)
                                                ;   {runtime_call}
  0x0000000002df5ca9: mov    %r8,(%rsp)
  0x0000000002df5cad: callq  0x0000000002dac940  ; OopMap{rcx=Oop off=1906}
                                                ;*laload
                                                ; - java.util.BitSet::get@53 (line 628)
                                                ;   {runtime_call}
  0x0000000002df5cb2: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002df5cbc: mov    $0xa050f00,%eax
  0x0000000002df5cc1: callq  0x0000000002db0ca0  ; OopMap{off=1926}
                                                ;*new  ; - java.util.BitSet::get@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5cc6: jmpq   0x0000000002df5740
  0x0000000002df5ccb: mov    %rdx,%rdx
  0x0000000002df5cce: callq  0x0000000002dadb20  ; OopMap{off=1939}
                                                ;*new  ; - java.util.BitSet::get@4 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5cd3: jmpq   0x0000000002df574f
  0x0000000002df5cd8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002df5ce2: mov    $0xa050f00,%eax
  0x0000000002df5ce7: callq  0x0000000002db0ca0  ; OopMap{rax=Oop off=1964}
                                                ;*new  ; - java.util.BitSet::get@8 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5cec: jmpq   0x0000000002df5750
  0x0000000002df5cf1: mov    %rdx,%rdx
  0x0000000002df5cf4: callq  0x0000000002dade00  ; OopMap{[128]=Oop off=1977}
                                                ;*new  ; - java.util.BitSet::get@8 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5cf9: jmpq   0x0000000002df5799
  0x0000000002df5cfe: mov    %rbx,0x8(%rsp)
  0x0000000002df5d03: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df5d0b: callq  0x0000000002db1d60  ; OopMap{[128]=Oop rax=Oop off=2000}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5d10: jmpq   0x0000000002df57e0
  0x0000000002df5d15: mov    %rbx,0x8(%rsp)
  0x0000000002df5d1a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df5d22: callq  0x0000000002db1d60  ; OopMap{[128]=Oop rax=Oop off=2023}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5d27: jmpq   0x0000000002df5827
  0x0000000002df5d2c: mov    %rbx,0x8(%rsp)
  0x0000000002df5d31: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df5d39: callq  0x0000000002db1d60  ; OopMap{[128]=Oop rax=Oop off=2046}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5d3e: jmpq   0x0000000002df586e
  0x0000000002df5d43: callq  0x0000000002dae700  ; OopMap{[128]=Oop r11=Oop off=2056}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.BitSet::get@12 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5d48: jmpq   0x0000000002df58ed
  0x0000000002df5d4d: mov    %rdx,0x8(%rsp)
  0x0000000002df5d52: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df5d5a: callq  0x0000000002db1d60  ; OopMap{[128]=Oop r11=Oop off=2079}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.BitSet::get@17 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5d5f: jmpq   0x0000000002df59cf
  0x0000000002df5d64: mov    %r8,0x8(%rsp)
  0x0000000002df5d69: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df5d71: callq  0x0000000002db1d60  ; OopMap{[128]=Oop [120]=Oop off=2102}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.BitSet::get@21 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5d76: jmpq   0x0000000002df5ac2
  0x0000000002df5d7b: mov    %rdx,0x8(%rsp)
  0x0000000002df5d80: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df5d88: callq  0x0000000002db1d60  ; OopMap{[128]=Oop [120]=Oop off=2125}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5d8d: jmpq   0x0000000002df5bb0
  0x0000000002df5d92: mov    %rdx,%rdx
  0x0000000002df5d95: callq  0x0000000002dade00  ; OopMap{[128]=Oop [120]=Oop off=2138}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.BitSet::get@24 (line 623)
                                                ;   {runtime_call}
  0x0000000002df5d9a: jmpq   0x0000000002df5bf1
  0x0000000002df5d9f: nop
  0x0000000002df5da0: nop
  0x0000000002df5da1: mov    0x2a8(%r15),%rax
  0x0000000002df5da8: movabs $0x0,%r10
  0x0000000002df5db2: mov    %r10,0x2a8(%r15)
  0x0000000002df5db9: movabs $0x0,%r10
  0x0000000002df5dc3: mov    %r10,0x2b0(%r15)
  0x0000000002df5dca: add    $0xa0,%rsp
  0x0000000002df5dd1: pop    %rbp
  0x0000000002df5dd2: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df5dd7: hlt    
  0x0000000002df5dd8: hlt    
  0x0000000002df5dd9: hlt    
  0x0000000002df5dda: hlt    
  0x0000000002df5ddb: hlt    
  0x0000000002df5ddc: hlt    
  0x0000000002df5ddd: hlt    
  0x0000000002df5dde: hlt    
  0x0000000002df5ddf: hlt    
[Stub Code]
  0x0000000002df5de0: nop                       ;   {no_reloc}
  0x0000000002df5de1: nop
  0x0000000002df5de2: nop
  0x0000000002df5de3: nop
  0x0000000002df5de4: nop
  0x0000000002df5de5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df5def: jmpq   0x0000000002df5def  ;   {runtime_call}
  0x0000000002df5df4: nop
  0x0000000002df5df5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df5dff: jmpq   0x0000000002df5dff  ;   {runtime_call}
  0x0000000002df5e04: nop
  0x0000000002df5e05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df5e0f: jmpq   0x0000000002df5e0f  ;   {runtime_call}
  0x0000000002df5e14: nop
  0x0000000002df5e15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df5e1f: jmpq   0x0000000002df5e1f  ;   {runtime_call}
  0x0000000002df5e24: nop
  0x0000000002df5e25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df5e2f: jmpq   0x0000000002df5e2f  ;   {runtime_call}
[Exception Handler]
  0x0000000002df5e34: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002df5e39: mov    %rsp,-0x28(%rsp)
  0x0000000002df5e3e: sub    $0x80,%rsp
  0x0000000002df5e45: mov    %rax,0x78(%rsp)
  0x0000000002df5e4a: mov    %rcx,0x70(%rsp)
  0x0000000002df5e4f: mov    %rdx,0x68(%rsp)
  0x0000000002df5e54: mov    %rbx,0x60(%rsp)
  0x0000000002df5e59: mov    %rbp,0x50(%rsp)
  0x0000000002df5e5e: mov    %rsi,0x48(%rsp)
  0x0000000002df5e63: mov    %rdi,0x40(%rsp)
  0x0000000002df5e68: mov    %r8,0x38(%rsp)
  0x0000000002df5e6d: mov    %r9,0x30(%rsp)
  0x0000000002df5e72: mov    %r10,0x28(%rsp)
  0x0000000002df5e77: mov    %r11,0x20(%rsp)
  0x0000000002df5e7c: mov    %r12,0x18(%rsp)
  0x0000000002df5e81: mov    %r13,0x10(%rsp)
  0x0000000002df5e86: mov    %r14,0x8(%rsp)
  0x0000000002df5e8b: mov    %r15,(%rsp)
  0x0000000002df5e8f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df5e99: movabs $0x2df5e39,%rdx    ;   {internal_word}
  0x0000000002df5ea3: mov    %rsp,%r8
  0x0000000002df5ea6: and    $0xfffffffffffffff0,%rsp
  0x0000000002df5eaa: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df5eaf: hlt    
[Deopt Handler Code]
  0x0000000002df5eb0: movabs $0x2df5eb0,%r10    ;   {section_word}
  0x0000000002df5eba: push   %r10
  0x0000000002df5ebc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df5ec1: hlt    
  0x0000000002df5ec2: hlt    
  0x0000000002df5ec3: hlt    
  0x0000000002df5ec4: hlt    
  0x0000000002df5ec5: hlt    
  0x0000000002df5ec6: hlt    
  0x0000000002df5ec7: hlt    
<nmethod compile_id='90' compiler='C1' level='3' entry='0x0000000002df5540' size='4264' address='0x0000000002df5350' relocation_offset='288' insts_offset='496' stub_offset='2704' scopes_data_offset='3016' scopes_pcs_offset='3496' dependencies_offset='4232' nul_chk_table_offset='4240' oops_offset='2936' method='java/util/BitSet get (I)Z' bytes='69' count='2563' iicount='2563' stamp='1.704'/>
Decoding compiled method 0x0000000002dd7b10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bd0a2c8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;
  # parm0:    rdx       = char
  #           [sp+0x50]  (sp of caller)
  0x0000000002dd7c80: mov    %eax,-0x6000(%rsp)
  0x0000000002dd7c87: push   %rbp
  0x0000000002dd7c88: sub    $0x40,%rsp
  0x0000000002dd7c8c: movabs $0x1be5e328,%rsi   ;   {metadata(method data for {method} {0x000000001bd0a2c8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002dd7c96: mov    0xdc(%rsi),%edi
  0x0000000002dd7c9c: add    $0x8,%edi
  0x0000000002dd7c9f: mov    %edi,0xdc(%rsi)
  0x0000000002dd7ca5: movabs $0x1bd0a2c0,%rsi   ;   {metadata({method} {0x000000001bd0a2c8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002dd7caf: and    $0x1ff8,%edi
  0x0000000002dd7cb5: cmp    $0x0,%edi
  0x0000000002dd7cb8: je     0x0000000002dd7dec  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x0000000002dd7cbe: movabs $0x1be5e328,%rsi   ;   {metadata(method data for {method} {0x000000001bd0a2c8} &apos;toLowerCase&apos; &apos;(C)C&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002dd7cc8: addq   $0x1,0x108(%rsi)
  0x0000000002dd7cd0: movabs $0x1be43590,%rsi   ;   {metadata(method data for {method} {0x000000001bd0a360} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002dd7cda: mov    0xdc(%rsi),%edi
  0x0000000002dd7ce0: add    $0x8,%edi
  0x0000000002dd7ce3: mov    %edi,0xdc(%rsi)
  0x0000000002dd7ce9: movabs $0x1bd0a358,%rsi   ;   {metadata({method} {0x000000001bd0a360} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002dd7cf3: and    $0x7ffff8,%edi
  0x0000000002dd7cf9: cmp    $0x0,%edi
  0x0000000002dd7cfc: je     0x0000000002dd7e03
  0x0000000002dd7d02: movabs $0x1be43590,%rsi   ;   {metadata(method data for {method} {0x000000001bd0a360} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002dd7d0c: addq   $0x1,0x108(%rsi)
  0x0000000002dd7d14: mov    %rdx,%rsi
  0x0000000002dd7d17: mov    %rsi,%rdx          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x0000000002dd7d1a: mov    %esi,0x28(%rsp)
  0x0000000002dd7d1e: nop
  0x0000000002dd7d1f: callq  0x0000000002cf6620  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {static_call}
  0x0000000002dd7d24: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x0000000002dd7e1a
  0x0000000002dd7d27: mov    %rax,%r8
  0x0000000002dd7d2a: movabs $0x1be43590,%rdx   ;   {metadata(method data for {method} {0x000000001bd0a360} &apos;toLowerCase&apos; &apos;(I)I&apos; in &apos;java/lang/Character&apos;)}
  0x0000000002dd7d34: mov    0x8(%r8),%r8d
  0x0000000002dd7d38: shl    $0x3,%r8
  0x0000000002dd7d3c: cmp    0x120(%rdx),%r8
  0x0000000002dd7d43: jne    0x0000000002dd7d52
  0x0000000002dd7d45: addq   $0x1,0x128(%rdx)
  0x0000000002dd7d4d: jmpq   0x0000000002dd7db8
  0x0000000002dd7d52: cmp    0x130(%rdx),%r8
  0x0000000002dd7d59: jne    0x0000000002dd7d68
  0x0000000002dd7d5b: addq   $0x1,0x138(%rdx)
  0x0000000002dd7d63: jmpq   0x0000000002dd7db8
  0x0000000002dd7d68: cmpq   $0x0,0x120(%rdx)
  0x0000000002dd7d73: jne    0x0000000002dd7d8c
  0x0000000002dd7d75: mov    %r8,0x120(%rdx)
  0x0000000002dd7d7c: movq   $0x1,0x128(%rdx)
  0x0000000002dd7d87: jmpq   0x0000000002dd7db8
  0x0000000002dd7d8c: cmpq   $0x0,0x130(%rdx)
  0x0000000002dd7d97: jne    0x0000000002dd7db0
  0x0000000002dd7d99: mov    %r8,0x130(%rdx)
  0x0000000002dd7da0: movq   $0x1,0x138(%rdx)
  0x0000000002dd7dab: jmpq   0x0000000002dd7db8
  0x0000000002dd7db0: addq   $0x1,0x118(%rdx)
  0x0000000002dd7db8: mov    0x28(%rsp),%r8d
  0x0000000002dd7dbd: mov    %rax,%rdx          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x0000000002dd7dc0: nop
  0x0000000002dd7dc1: nop
  0x0000000002dd7dc2: nop
  0x0000000002dd7dc3: nop
  0x0000000002dd7dc4: nop
  0x0000000002dd7dc5: movabs $0xffffffffffffffff,%rax
  0x0000000002dd7dcf: callq  0x0000000002cf63e0  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x0000000002dd7dd4: and    $0xffff,%eax
  0x0000000002dd7dda: and    $0xffff,%eax
  0x0000000002dd7de0: add    $0x40,%rsp
  0x0000000002dd7de4: pop    %rbp
  0x0000000002dd7de5: test   %eax,-0x21d7ceb(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd7deb: retq   
  0x0000000002dd7dec: mov    %rsi,0x8(%rsp)
  0x0000000002dd7df1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd7df9: callq  0x0000000002db1d60  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x0000000002dd7dfe: jmpq   0x0000000002dd7cbe
  0x0000000002dd7e03: mov    %rsi,0x8(%rsp)
  0x0000000002dd7e08: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd7e10: callq  0x0000000002db1d60  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x0000000002dd7e15: jmpq   0x0000000002dd7d02
  0x0000000002dd7e1a: callq  0x0000000002dad680  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x0000000002dd7e1f: nop
  0x0000000002dd7e20: nop
  0x0000000002dd7e21: mov    0x2a8(%r15),%rax
  0x0000000002dd7e28: movabs $0x0,%r10
  0x0000000002dd7e32: mov    %r10,0x2a8(%r15)
  0x0000000002dd7e39: movabs $0x0,%r10
  0x0000000002dd7e43: mov    %r10,0x2b0(%r15)
  0x0000000002dd7e4a: add    $0x40,%rsp
  0x0000000002dd7e4e: pop    %rbp
  0x0000000002dd7e4f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd7e54: hlt    
  0x0000000002dd7e55: hlt    
  0x0000000002dd7e56: hlt    
  0x0000000002dd7e57: hlt    
  0x0000000002dd7e58: hlt    
  0x0000000002dd7e59: hlt    
  0x0000000002dd7e5a: hlt    
  0x0000000002dd7e5b: hlt    
  0x0000000002dd7e5c: hlt    
  0x0000000002dd7e5d: hlt    
  0x0000000002dd7e5e: hlt    
  0x0000000002dd7e5f: hlt    
[Stub Code]
  0x0000000002dd7e60: nop                       ;   {no_reloc}
  0x0000000002dd7e61: nop
  0x0000000002dd7e62: nop
  0x0000000002dd7e63: nop
  0x0000000002dd7e64: nop
  0x0000000002dd7e65: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd7e6f: jmpq   0x0000000002dd7e6f  ;   {runtime_call}
  0x0000000002dd7e74: nop
  0x0000000002dd7e75: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd7e7f: jmpq   0x0000000002dd7e7f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dd7e84: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dd7e89: mov    %rsp,-0x28(%rsp)
  0x0000000002dd7e8e: sub    $0x80,%rsp
  0x0000000002dd7e95: mov    %rax,0x78(%rsp)
  0x0000000002dd7e9a: mov    %rcx,0x70(%rsp)
  0x0000000002dd7e9f: mov    %rdx,0x68(%rsp)
  0x0000000002dd7ea4: mov    %rbx,0x60(%rsp)
  0x0000000002dd7ea9: mov    %rbp,0x50(%rsp)
  0x0000000002dd7eae: mov    %rsi,0x48(%rsp)
  0x0000000002dd7eb3: mov    %rdi,0x40(%rsp)
  0x0000000002dd7eb8: mov    %r8,0x38(%rsp)
  0x0000000002dd7ebd: mov    %r9,0x30(%rsp)
  0x0000000002dd7ec2: mov    %r10,0x28(%rsp)
  0x0000000002dd7ec7: mov    %r11,0x20(%rsp)
  0x0000000002dd7ecc: mov    %r12,0x18(%rsp)
  0x0000000002dd7ed1: mov    %r13,0x10(%rsp)
  0x0000000002dd7ed6: mov    %r14,0x8(%rsp)
  0x0000000002dd7edb: mov    %r15,(%rsp)
  0x0000000002dd7edf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd7ee9: movabs $0x2dd7e89,%rdx    ;   {internal_word}
  0x0000000002dd7ef3: mov    %rsp,%r8
  0x0000000002dd7ef6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd7efa: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd7eff: hlt    
[Deopt Handler Code]
  0x0000000002dd7f00: movabs $0x2dd7f00,%r10    ;   {section_word}
  0x0000000002dd7f0a: push   %r10
  0x0000000002dd7f0c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd7f11: hlt    
  0x0000000002dd7f12: hlt    
  0x0000000002dd7f13: hlt    
  0x0000000002dd7f14: hlt    
  0x0000000002dd7f15: hlt    
  0x0000000002dd7f16: hlt    
  0x0000000002dd7f17: hlt    
<nmethod compile_id='91' compiler='C1' level='3' entry='0x0000000002dd7c80' size='1304' address='0x0000000002dd7b10' relocation_offset='288' insts_offset='368' stub_offset='848' scopes_data_offset='1048' scopes_pcs_offset='1120' dependencies_offset='1280' nul_chk_table_offset='1288' method='java/lang/Character toLowerCase (C)C' bytes='6' count='4027' iicount='4027' stamp='1.712'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002df6410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc768d8} &apos;toLowerCase&apos; &apos;(Ljava/util/Locale;)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/util/Locale&apos;
  #           [sp+0x80]  (sp of caller)
  0x0000000002df65a0: mov    0x8(%rdx),%r10d
  0x0000000002df65a4: shl    $0x3,%r10
  0x0000000002df65a8: cmp    %r10,%rax
  0x0000000002df65ab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df65b1: data16 xchg %ax,%ax
  0x0000000002df65b4: nopl   0x0(%rax,%rax,1)
  0x0000000002df65bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df65c0: mov    %eax,-0x6000(%rsp)
  0x0000000002df65c7: push   %rbp
  0x0000000002df65c8: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.String::toLowerCase@-1 (line 2562)

  0x0000000002df65cc: mov    %rdx,%r10
  0x0000000002df65cf: mov    %r8,0x50(%rsp)
  0x0000000002df65d4: test   %r8,%r8
  0x0000000002df65d7: je     0x0000000002df6b71  ;*ifnonnull
                                                ; - java.lang.String::toLowerCase@1 (line 2562)

  0x0000000002df65dd: mov    %rdx,%r14
  0x0000000002df65e0: mov    0xc(%rdx),%r9d     ;*getfield value
                                                ; - java.lang.String::toLowerCase@13 (line 2567)

  0x0000000002df65e4: mov    0xc(%r12,%r9,8),%r10d  ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)
                                                ; implicit exception: dispatches to 0x0000000002df6ce9
  0x0000000002df65e9: test   %r10d,%r10d
  0x0000000002df65ec: jle    0x0000000002df665b  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@22 (line 2571)

  0x0000000002df65ee: test   %r10d,%r10d
  0x0000000002df65f1: jbe    0x0000000002df6acd
  0x0000000002df65f7: mov    %r10d,%ebx
  0x0000000002df65fa: dec    %ebx
  0x0000000002df65fc: cmp    %r10d,%ebx
  0x0000000002df65ff: jae    0x0000000002df6acd  ;*aload_0
                                                ; - java.lang.String::toLowerCase@25 (line 2572)

  0x0000000002df6605: lea    (%r12,%r9,8),%rdx  ;*getfield value
                                                ; - java.lang.String::toLowerCase@13 (line 2567)

  0x0000000002df6609: xor    %r13d,%r13d
  0x0000000002df660c: nopl   0x0(%rax)          ;*aload_0
                                                ; - java.lang.String::toLowerCase@25 (line 2572)

  0x0000000002df6610: movzwl 0x10(%rdx,%r13,2),%ecx  ;*caload
                                                ; - java.lang.String::toLowerCase@30 (line 2572)

  0x0000000002df6616: cmp    $0xd800,%ecx
  0x0000000002df661c: jge    0x0000000002df6ab1  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@37 (line 2573)

  0x0000000002df6622: mov    %ecx,%ebp
  0x0000000002df6624: shr    $0x8,%ebp          ;*iushr
                                                ; - java.lang.CharacterData::of@3 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002df6627: test   %ebp,%ebp
  0x0000000002df6629: jne    0x0000000002df6a8d  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002df662f: cmp    $0x100,%ecx
  0x0000000002df6635: jae    0x0000000002df6985
  0x0000000002df663b: movabs $0x76b81ae28,%r11  ;   {oop([I)}
  0x0000000002df6645: mov    0x10(%r11,%rcx,4),%r8d  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002df664a: test   $0x20000,%r8d
  0x0000000002df6651: jne    0x0000000002df666d  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@85 (line 2581)

  0x0000000002df6653: inc    %r13d              ;*iinc
                                                ; - java.lang.String::toLowerCase@91 (line 2584)

  0x0000000002df6656: cmp    %r10d,%r13d
  0x0000000002df6659: jl     0x0000000002df6610  ;*aload_0
                                                ; - java.lang.String::toLowerCase@97 (line 2587)

  0x0000000002df665b: mov    %r14,%rbp          ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)

  0x0000000002df665e: mov    %rbp,%rax
  0x0000000002df6661: add    $0x70,%rsp
  0x0000000002df6665: pop    %rbp
  0x0000000002df6666: test   %eax,-0x21f666c(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002df666c: retq   
  0x0000000002df666d: mov    %r8d,%ebp
  0x0000000002df6670: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002df6676: cmp    $0x7fc0000,%ebp
  0x0000000002df667c: je     0x0000000002df6b85  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002df6682: shl    $0x5,%r8d
  0x0000000002df6686: sar    $0x17,%r8d
  0x0000000002df668a: add    %ecx,%r8d
  0x0000000002df668d: movzwl %r8w,%r8d
  0x0000000002df6691: cmp    %r8d,%ecx
  0x0000000002df6694: je     0x0000000002df6653  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@85 (line 2581)

  0x0000000002df6696: movslq %r10d,%rcx
  0x0000000002df6699: shl    %rcx
  0x0000000002df669c: add    $0x17,%rcx
  0x0000000002df66a0: mov    %rcx,%r11
  0x0000000002df66a3: and    $0xfffffffffffffff8,%r11
  0x0000000002df66a7: mov    %r11,0x38(%rsp)
  0x0000000002df66ac: cmp    $0x80000,%r10d
  0x0000000002df66b3: ja     0x0000000002df69a5
  0x0000000002df66b9: mov    0x60(%r15),%r11
  0x0000000002df66bd: mov    %r11,%r8
  0x0000000002df66c0: mov    0x38(%rsp),%rdi
  0x0000000002df66c5: add    %rdi,%r8
  0x0000000002df66c8: cmp    0x70(%r15),%r8
  0x0000000002df66cc: jae    0x0000000002df69a5
  0x0000000002df66d2: mov    %r8,0x60(%r15)
  0x0000000002df66d6: prefetchw 0xc0(%r8)
  0x0000000002df66de: movq   $0x1,(%r11)
  0x0000000002df66e5: prefetchw 0x100(%r8)
  0x0000000002df66ed: movl   $0xf8000041,0x8(%r11)  ;   {metadata({type array char})}
  0x0000000002df66f5: mov    %r10d,0xc(%r11)
  0x0000000002df66f9: prefetchw 0x140(%r8)
  0x0000000002df6701: mov    %r11,%rdi
  0x0000000002df6704: add    $0x10,%rdi
  0x0000000002df6708: prefetchw 0x180(%r8)
  0x0000000002df6710: shr    $0x3,%rcx
  0x0000000002df6714: add    $0xfffffffffffffffe,%rcx
  0x0000000002df6718: xor    %rax,%rax
  0x0000000002df671b: shl    $0x3,%rcx
  0x0000000002df671f: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)

  0x0000000002df6722: mov    %r11,%r8
  0x0000000002df6725: add    $0x10,%r8
  0x0000000002df6729: mov    %r8,0x40(%rsp)
  0x0000000002df672e: cmp    %r13d,%r10d
  0x0000000002df6731: jb     0x0000000002df6c22
  0x0000000002df6737: test   %r13d,%r13d
  0x0000000002df673a: jle    0x0000000002df6c19
  0x0000000002df6740: mov    %r11,0x20(%rsp)
  0x0000000002df6745: mov    %r10d,%ebp
  0x0000000002df6748: lea    0x10(%r12,%r9,8),%rcx
  0x0000000002df674d: movslq %r13d,%r8
  0x0000000002df6750: mov    0x40(%rsp),%rdx
  0x0000000002df6755: movabs $0x2d02980,%r10
  0x0000000002df675f: callq  *%r10
  0x0000000002df6762: mov    %ebp,%r10d
  0x0000000002df6765: mov    0x20(%rsp),%r11    ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)

  0x0000000002df676a: mov    0x50(%rsp),%r8
  0x0000000002df676f: mov    0x10(%r8),%r8d     ;*getfield baseLocale
                                                ; - java.util.Locale::getLanguage@1 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)

  0x0000000002df6773: mov    0x10(%r12,%r8,8),%ebp  ;*getfield language
                                                ; - sun.util.locale.BaseLocale::getLanguage@1 (line 92)
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ; implicit exception: dispatches to 0x0000000002df6cf5
  0x0000000002df6778: cmp    $0xed703760,%ebp   ;   {oop(&quot;tr&quot;)}
  0x0000000002df677e: je     0x0000000002df6c89  ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@129 (line 2598)

  0x0000000002df6784: cmp    $0xed703766,%ebp   ;   {oop(&quot;az&quot;)}
  0x0000000002df678a: je     0x0000000002df6ca9  ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@136 (line 2598)

  0x0000000002df6790: cmp    $0xed70376c,%ebp   ;   {oop(&quot;lt&quot;)}
  0x0000000002df6796: je     0x0000000002df6cc9  ;*if_acmpne
                                                ; - java.lang.String::toLowerCase@143 (line 2598)

  0x0000000002df679c: cmp    %r10d,%r13d
  0x0000000002df679f: jge    0x0000000002df6891  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@159 (line 2604)

  0x0000000002df67a5: mov    0xc(%r14),%r9d     ;*getfield value
                                                ; - java.lang.String::toLowerCase@163 (line 2605)

  0x0000000002df67a9: mov    0xc(%r12,%r9,8),%r8d  ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)
                                                ; implicit exception: dispatches to 0x0000000002df6bf9
  0x0000000002df67ae: cmp    %r8d,%r13d
  0x0000000002df67b1: jae    0x0000000002df6bf9
  0x0000000002df67b7: cmp    %r8d,%ebx
  0x0000000002df67ba: jae    0x0000000002df6bf9
  0x0000000002df67c0: cmp    %r10d,%r13d
  0x0000000002df67c3: jae    0x0000000002df6bf9  ;*aload_0
                                                ; - java.lang.String::toLowerCase@162 (line 2605)

  0x0000000002df67c9: lea    (%r12,%r9,8),%rdi
  0x0000000002df67cd: jmp    0x0000000002df67e3
  0x0000000002df67cf: mov    %ecx,%ebx          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df67d1: mov    %bx,0x10(%r11,%r13,2)  ;*castore
                                                ; - java.lang.String::toLowerCase@413 (line 2644)

  0x0000000002df67d7: inc    %r13d              ;*iadd
                                                ; - java.lang.String::toLowerCase@418 (line 2604)

  0x0000000002df67da: cmp    %r10d,%r13d
  0x0000000002df67dd: jge    0x0000000002df6891  ;*aload_0
                                                ; - java.lang.String::toLowerCase@162 (line 2605)

  0x0000000002df67e3: movzwl 0x10(%rdi,%r13,2),%ebx  ;*caload
                                                ; - java.lang.String::toLowerCase@168 (line 2605)

  0x0000000002df67e9: cmp    $0xd800,%ebx
  0x0000000002df67ef: jge    0x0000000002df6b05  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@176 (line 2606)

  0x0000000002df67f5: cmp    $0x3a3,%ebx
  0x0000000002df67fb: je     0x0000000002df6b29  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@218 (line 2613)

  0x0000000002df6801: cmp    $0x130,%ebx
  0x0000000002df6807: je     0x0000000002df6b4d  ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@226 (line 2613)

  0x0000000002df680d: mov    %ebx,%ebp
  0x0000000002df680f: shr    $0x8,%ebp          ;*iushr
                                                ; - java.lang.CharacterData::of@3 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df6812: test   %ebp,%ebp
  0x0000000002df6814: jne    0x0000000002df6ae1  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df681a: cmp    $0x100,%ebx
  0x0000000002df6820: jae    0x0000000002df6a65
  0x0000000002df6826: movabs $0x76b81ae28,%r8   ;   {oop([I)}
  0x0000000002df6830: mov    0x10(%r8,%rbx,4),%ecx  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df6835: test   $0x20000,%ecx
  0x0000000002df683b: je     0x0000000002df67d1  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df683d: mov    %ecx,%ebp
  0x0000000002df683f: and    $0x7fc0000,%ebp    ;*iand
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@18 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df6845: cmp    $0x7fc0000,%ebp
  0x0000000002df684b: je     0x0000000002df6bad  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df6851: shl    $0x5,%ecx
  0x0000000002df6854: sar    $0x17,%ecx
  0x0000000002df6857: add    %ebx,%ecx          ;*iadd
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@35 (line 139)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df6859: cmp    $0xffffffff,%ecx
  0x0000000002df685c: je     0x0000000002df6bd5  ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@251 (line 2620)

  0x0000000002df6862: cmp    $0x10000,%ecx
  0x0000000002df6868: jl     0x0000000002df67cf  ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@258 (line 2620)

  0x0000000002df686e: mov    $0xffffff65,%edx
  0x0000000002df6873: mov    %r13d,%ebp
  0x0000000002df6876: mov    %r14,0x20(%rsp)
  0x0000000002df687b: mov    %r10d,0x30(%rsp)
  0x0000000002df6880: mov    %r11,0x38(%rsp)
  0x0000000002df6885: mov    %ecx,0x40(%rsp)
  0x0000000002df6889: xchg   %ax,%ax
  0x0000000002df688b: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop off=752}
                                                ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@258 (line 2620)
                                                ;   {runtime_call}
  0x0000000002df6890: int3                      ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@159 (line 2604)

  0x0000000002df6891: mov    0x60(%r15),%rbp
  0x0000000002df6895: mov    %rbp,%r8
  0x0000000002df6898: add    $0x18,%r8
  0x0000000002df689c: cmp    0x70(%r15),%r8
  0x0000000002df68a0: jae    0x0000000002df6a16
  0x0000000002df68a6: mov    %r8,0x60(%r15)
  0x0000000002df68aa: prefetchw 0xc0(%r8)
  0x0000000002df68b2: mov    $0xf80002da,%r9d   ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002df68b8: movabs $0x0,%r8
  0x0000000002df68c2: lea    (%r8,%r9,8),%r8
  0x0000000002df68c6: mov    0xa8(%r8),%r8
  0x0000000002df68cd: mov    %r8,0x0(%rbp)
  0x0000000002df68d1: movl   $0xf80002da,0x8(%rbp)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002df68d8: mov    %r12d,0xc(%rbp)
  0x0000000002df68dc: mov    %r12,0x10(%rbp)    ;*new  ; - java.lang.String::toLowerCase@424 (line 2647)

  0x0000000002df68e0: cmp    $0x80000,%r10d
  0x0000000002df68e7: ja     0x0000000002df6a42
  0x0000000002df68ed: mov    0x60(%r15),%rax
  0x0000000002df68f1: mov    %rax,%r8
  0x0000000002df68f4: mov    0x38(%rsp),%r9
  0x0000000002df68f9: add    %r9,%r8
  0x0000000002df68fc: cmp    0x70(%r15),%r8
  0x0000000002df6900: jae    0x0000000002df6a42
  0x0000000002df6906: mov    %r8,0x60(%r15)
  0x0000000002df690a: prefetchw 0xc0(%r8)
  0x0000000002df6912: movq   $0x1,(%rax)
  0x0000000002df6919: prefetchw 0x100(%r8)
  0x0000000002df6921: movl   $0xf8000041,0x8(%rax)  ;   {metadata({type array char})}
  0x0000000002df6928: mov    %r10d,0xc(%rax)
  0x0000000002df692c: prefetchw 0x140(%r8)
  0x0000000002df6934: prefetchw 0x180(%r8)
  0x0000000002df693c: mov    %rax,%rdx
  0x0000000002df693f: add    $0x10,%rdx
  0x0000000002df6943: mov    0x38(%rsp),%r10
  0x0000000002df6948: add    $0xfffffffffffffff0,%r10
  0x0000000002df694c: mov    %rax,%rbx
  0x0000000002df694f: shr    $0x3,%rbx
  0x0000000002df6953: shr    $0x3,%r10
  0x0000000002df6957: mov    0x40(%rsp),%rcx
  0x0000000002df695c: mov    %r10,%r8
  0x0000000002df695f: movabs $0x2d02ca0,%r10
  0x0000000002df6969: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.String::toLowerCase@435 (line 2647)

  0x0000000002df696c: mov    %ebx,0xc(%rbp)
  0x0000000002df696f: mov    %rbp,%r10
  0x0000000002df6972: shr    $0x9,%r10
  0x0000000002df6976: mov    $0xea5d000,%r11d
  0x0000000002df697c: mov    %r12b,(%r11,%r10,1)  ;*synchronization entry
                                                ; - java.lang.String::toLowerCase@-1 (line 2562)

  0x0000000002df6980: jmpq   0x0000000002df665e
  0x0000000002df6985: mov    $0xffffffe4,%edx
  0x0000000002df698a: mov    %r13d,%ebp
  0x0000000002df698d: mov    %ecx,0x24(%rsp)
  0x0000000002df6991: mov    %ecx,0x28(%rsp)
  0x0000000002df6995: mov    %r14,0x30(%rsp)
  0x0000000002df699a: mov    %r10d,0x40(%rsp)
  0x0000000002df699f: callq  0x0000000002cf57a0  ; OopMap{[48]=Oop [80]=Oop off=1028}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x0000000002df69a4: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002df69a5: rex.W pushq 0x38(%rsp)
  0x0000000002df69aa: rex.W popq 0x40(%rsp)
  0x0000000002df69af: mov    %r13d,0x34(%rsp)
  0x0000000002df69b4: mov    %rdx,0x38(%rsp)
  0x0000000002df69b9: mov    %ebx,0x30(%rsp)
  0x0000000002df69bd: mov    %r10d,0x2c(%rsp)
  0x0000000002df69c2: mov    %r9d,0x28(%rsp)
  0x0000000002df69c7: mov    %r14,0x20(%rsp)
  0x0000000002df69cc: mov    0x50(%rsp),%rbp
  0x0000000002df69d1: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002df69db: mov    %r10d,%r8d
  0x0000000002df69de: nop
  0x0000000002df69df: callq  0x0000000002db4fe0  ; OopMap{rbp=Oop [32]=Oop [40]=NarrowOop [56]=Oop [80]=Oop off=1092}
                                                ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)
                                                ;   {runtime_call}
  0x0000000002df69e4: mov    0x20(%rsp),%r14
  0x0000000002df69e9: mov    0x28(%rsp),%r9d
  0x0000000002df69ee: mov    0x2c(%rsp),%r11d
  0x0000000002df69f3: mov    0x30(%rsp),%ebx
  0x0000000002df69f7: mov    0x38(%rsp),%rdx
  0x0000000002df69fc: mov    0x34(%rsp),%r13d
  0x0000000002df6a01: rex.W pushq 0x40(%rsp)
  0x0000000002df6a06: rex.W popq 0x38(%rsp)
  0x0000000002df6a0b: mov    %r11d,%r10d
  0x0000000002df6a0e: mov    %rax,%r11
  0x0000000002df6a11: jmpq   0x0000000002df6722  ;*if_icmpge
                                                ; - java.lang.String::toLowerCase@159 (line 2604)

  0x0000000002df6a16: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002df6a20: mov    %r10d,0x28(%rsp)
  0x0000000002df6a25: mov    %r11,0x30(%rsp)
  0x0000000002df6a2a: nop
  0x0000000002df6a2b: callq  0x0000000002db4ee0  ; OopMap{[48]=Oop [64]=Derived_oop_[48] off=1168}
                                                ;*new  ; - java.lang.String::toLowerCase@424 (line 2647)
                                                ;   {runtime_call}
  0x0000000002df6a30: mov    %rax,%rbp
  0x0000000002df6a33: mov    0x28(%rsp),%r10d
  0x0000000002df6a38: mov    0x30(%rsp),%r11
  0x0000000002df6a3d: jmpq   0x0000000002df68e0  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.String::toLowerCase@435 (line 2647)

  0x0000000002df6a42: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002df6a4c: mov    %r10d,%r8d
  0x0000000002df6a4f: mov    %r11,0x48(%rsp)
  0x0000000002df6a54: mov    %r10d,0x30(%rsp)
  0x0000000002df6a59: xchg   %ax,%ax
  0x0000000002df6a5b: callq  0x0000000002db36e0  ; OopMap{rbp=Oop [64]=Derived_oop_[72] [72]=Oop off=1216}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.String::toLowerCase@435 (line 2647)
                                                ;   {runtime_call}
  0x0000000002df6a60: jmpq   0x0000000002df693c
  0x0000000002df6a65: mov    $0xffffffe4,%edx
  0x0000000002df6a6a: mov    %r13d,%ebp
  0x0000000002df6a6d: mov    %r14,0x20(%rsp)
  0x0000000002df6a72: mov    %r10d,0x30(%rsp)
  0x0000000002df6a77: mov    %r11,0x38(%rsp)
  0x0000000002df6a7c: mov    %ebx,0x40(%rsp)
  0x0000000002df6a80: mov    %ebx,0x44(%rsp)
  0x0000000002df6a84: data16 xchg %ax,%ax
  0x0000000002df6a87: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop off=1260}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {runtime_call}
  0x0000000002df6a8c: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df6a8d: mov    $0xffffff65,%edx
  0x0000000002df6a92: mov    %r13d,0x20(%rsp)
  0x0000000002df6a97: mov    %ecx,0x28(%rsp)
  0x0000000002df6a9b: mov    %ecx,0x2c(%rsp)
  0x0000000002df6a9f: mov    %r14,0x30(%rsp)
  0x0000000002df6aa4: mov    %r10d,0x40(%rsp)
  0x0000000002df6aa9: xchg   %ax,%ax
  0x0000000002df6aab: callq  0x0000000002cf57a0  ; OopMap{[48]=Oop [80]=Oop off=1296}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x0000000002df6ab0: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002df6ab1: mov    $0xffffff65,%edx
  0x0000000002df6ab6: mov    %r13d,%ebp
  0x0000000002df6ab9: mov    %ecx,0x24(%rsp)
  0x0000000002df6abd: mov    %r14,0x28(%rsp)
  0x0000000002df6ac2: mov    %r10d,0x38(%rsp)
  0x0000000002df6ac7: callq  0x0000000002cf57a0  ; OopMap{[40]=Oop [80]=Oop off=1324}
                                                ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@37 (line 2573)
                                                ;   {runtime_call}
  0x0000000002df6acc: int3                      ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@37 (line 2573)

  0x0000000002df6acd: mov    $0xffffff86,%edx
  0x0000000002df6ad2: mov    %r14,%rbp
  0x0000000002df6ad5: mov    %r10d,0x28(%rsp)
  0x0000000002df6ada: nop
  0x0000000002df6adb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [80]=Oop off=1344}
                                                ;*aload_0
                                                ; - java.lang.String::toLowerCase@25 (line 2572)
                                                ;   {runtime_call}
  0x0000000002df6ae0: int3                      ;*aload_0
                                                ; - java.lang.String::toLowerCase@25 (line 2572)

  0x0000000002df6ae1: mov    $0xffffff65,%edx
  0x0000000002df6ae6: mov    %r13d,0x20(%rsp)
  0x0000000002df6aeb: mov    %r14,0x28(%rsp)
  0x0000000002df6af0: mov    %r10d,0x24(%rsp)
  0x0000000002df6af5: mov    %r11,0x38(%rsp)
  0x0000000002df6afa: mov    %ebx,0x44(%rsp)
  0x0000000002df6afe: nop
  0x0000000002df6aff: callq  0x0000000002cf57a0  ; OopMap{[40]=Oop [56]=Oop [80]=Oop off=1380}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {runtime_call}
  0x0000000002df6b04: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df6b05: mov    $0xffffff65,%edx
  0x0000000002df6b0a: mov    %r13d,%ebp
  0x0000000002df6b0d: mov    %r14,0x20(%rsp)
  0x0000000002df6b12: mov    %r10d,0x30(%rsp)
  0x0000000002df6b17: mov    %r11,0x38(%rsp)
  0x0000000002df6b1c: mov    %ebx,0x40(%rsp)
  0x0000000002df6b20: data16 xchg %ax,%ax
  0x0000000002df6b23: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop off=1416}
                                                ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@176 (line 2606)
                                                ;   {runtime_call}
  0x0000000002df6b28: int3                      ;*if_icmplt
                                                ; - java.lang.String::toLowerCase@176 (line 2606)

  0x0000000002df6b29: mov    $0xffffff65,%edx
  0x0000000002df6b2e: mov    %r13d,%ebp
  0x0000000002df6b31: mov    %r14,0x20(%rsp)
  0x0000000002df6b36: mov    %r10d,0x30(%rsp)
  0x0000000002df6b3b: mov    %r11,0x38(%rsp)
  0x0000000002df6b40: mov    %ebx,0x40(%rsp)
  0x0000000002df6b44: data16 xchg %ax,%ax
  0x0000000002df6b47: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop off=1452}
                                                ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@218 (line 2613)
                                                ;   {runtime_call}
  0x0000000002df6b4c: int3                      ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@218 (line 2613)

  0x0000000002df6b4d: mov    $0xffffff65,%edx
  0x0000000002df6b52: mov    %r13d,%ebp
  0x0000000002df6b55: mov    %r14,0x20(%rsp)
  0x0000000002df6b5a: mov    %r10d,0x30(%rsp)
  0x0000000002df6b5f: mov    %r11,0x38(%rsp)
  0x0000000002df6b64: mov    %ebx,0x40(%rsp)
  0x0000000002df6b68: data16 xchg %ax,%ax
  0x0000000002df6b6b: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop off=1488}
                                                ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@226 (line 2613)
                                                ;   {runtime_call}
  0x0000000002df6b70: int3                      ;*if_icmpne
                                                ; - java.lang.String::toLowerCase@226 (line 2613)

  0x0000000002df6b71: mov    $0xffffff65,%edx
  0x0000000002df6b76: mov    %r10,%rbp
  0x0000000002df6b79: mov    %r8,0x28(%rsp)
  0x0000000002df6b7e: nop
  0x0000000002df6b7f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [40]=Oop [80]=Oop off=1508}
                                                ;*ifnonnull
                                                ; - java.lang.String::toLowerCase@1 (line 2562)
                                                ;   {runtime_call}
  0x0000000002df6b84: int3                      ;*ifnonnull
                                                ; - java.lang.String::toLowerCase@1 (line 2562)

  0x0000000002df6b85: mov    $0xffffff65,%edx
  0x0000000002df6b8a: mov    %r13d,0x20(%rsp)
  0x0000000002df6b8f: mov    %ecx,0x28(%rsp)
  0x0000000002df6b93: mov    %ecx,0x2c(%rsp)
  0x0000000002df6b97: mov    %r14,0x30(%rsp)
  0x0000000002df6b9c: mov    %r10d,0x40(%rsp)
  0x0000000002df6ba1: mov    %r8d,0x44(%rsp)
  0x0000000002df6ba6: nop
  0x0000000002df6ba7: callq  0x0000000002cf57a0  ; OopMap{[48]=Oop [80]=Oop off=1548}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)
                                                ;   {runtime_call}
  0x0000000002df6bac: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ; - java.lang.String::toLowerCase@82 (line 2581)

  0x0000000002df6bad: mov    $0xffffff65,%edx
  0x0000000002df6bb2: mov    %r13d,0x20(%rsp)
  0x0000000002df6bb7: mov    %r14,0x28(%rsp)
  0x0000000002df6bbc: mov    %r10d,0x24(%rsp)
  0x0000000002df6bc1: mov    %r11,0x38(%rsp)
  0x0000000002df6bc6: mov    %ebx,0x44(%rsp)
  0x0000000002df6bca: mov    %ecx,0x48(%rsp)
  0x0000000002df6bce: nop
  0x0000000002df6bcf: callq  0x0000000002cf57a0  ; OopMap{[40]=Oop [56]=Oop [80]=Oop off=1588}
                                                ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)
                                                ;   {runtime_call}
  0x0000000002df6bd4: int3                      ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.String::toLowerCase@243 (line 2618)

  0x0000000002df6bd5: mov    $0xffffff65,%edx
  0x0000000002df6bda: mov    %r13d,%ebp
  0x0000000002df6bdd: mov    %r14,0x20(%rsp)
  0x0000000002df6be2: mov    %r10d,0x30(%rsp)
  0x0000000002df6be7: mov    %r11,0x38(%rsp)
  0x0000000002df6bec: mov    %ecx,0x40(%rsp)
  0x0000000002df6bf0: data16 xchg %ax,%ax
  0x0000000002df6bf3: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop off=1624}
                                                ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@251 (line 2620)
                                                ;   {runtime_call}
  0x0000000002df6bf8: int3                      ;*if_icmpeq
                                                ; - java.lang.String::toLowerCase@251 (line 2620)

  0x0000000002df6bf9: mov    $0xffffff86,%edx
  0x0000000002df6bfe: mov    %r13d,%ebp
  0x0000000002df6c01: mov    %r14,0x20(%rsp)
  0x0000000002df6c06: mov    %r10d,0x30(%rsp)
  0x0000000002df6c0b: mov    %r11,0x38(%rsp)
  0x0000000002df6c10: data16 xchg %ax,%ax
  0x0000000002df6c13: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop off=1656}
                                                ;*aload_0
                                                ; - java.lang.String::toLowerCase@162 (line 2605)
                                                ;   {runtime_call}
  0x0000000002df6c18: int3                      ;*aload_0
                                                ; - java.lang.String::toLowerCase@162 (line 2605)

  0x0000000002df6c19: test   %r13d,%r13d
  0x0000000002df6c1c: jge    0x0000000002df676a
  0x0000000002df6c22: rex.W pushq 0x40(%rsp)
  0x0000000002df6c27: rex.W popq 0x48(%rsp)
  0x0000000002df6c2c: mov    %r11,0x40(%rsp)
  0x0000000002df6c31: mov    %r13d,0x30(%rsp)
  0x0000000002df6c36: mov    %ebx,0x2c(%rsp)
  0x0000000002df6c3a: mov    %r10d,0x28(%rsp)
  0x0000000002df6c3f: mov    %r14,0x20(%rsp)
  0x0000000002df6c44: mov    0x50(%rsp),%rbp
  0x0000000002df6c49: xor    %r8d,%r8d
  0x0000000002df6c4c: mov    0x40(%rsp),%r9
  0x0000000002df6c51: xor    %edi,%edi
  0x0000000002df6c53: mov    %r13d,%esi
  0x0000000002df6c56: nop
  0x0000000002df6c57: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [32]=Oop [64]=Oop [72]=Derived_oop_[64] [80]=Oop off=1724}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)
                                                ;   {runtime_call}
  0x0000000002df6c5c: mov    0x20(%rsp),%r14
  0x0000000002df6c61: mov    0x28(%rsp),%r11d
  0x0000000002df6c66: mov    0x2c(%rsp),%ebx
  0x0000000002df6c6a: mov    0x30(%rsp),%r13d
  0x0000000002df6c6f: mov    0x40(%rsp),%r8
  0x0000000002df6c74: rex.W pushq 0x48(%rsp)
  0x0000000002df6c79: rex.W popq 0x40(%rsp)
  0x0000000002df6c7e: mov    %r11d,%r10d
  0x0000000002df6c81: mov    %r8,%r11
  0x0000000002df6c84: jmpq   0x0000000002df676a
  0x0000000002df6c89: mov    $0xffffff65,%edx
  0x0000000002df6c8e: mov    %r13d,0x20(%rsp)
  0x0000000002df6c93: mov    %r14,0x28(%rsp)
  0x0000000002df6c98: mov    %r10d,0x24(%rsp)
  0x0000000002df6c9d: mov    %r11,0x38(%rsp)
  0x0000000002df6ca2: nop
  0x0000000002df6ca3: callq  0x0000000002cf57a0  ; OopMap{rbp=NarrowOop [40]=Oop [56]=Oop [80]=Oop off=1800}
                                                ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@129 (line 2598)
                                                ;   {runtime_call}
  0x0000000002df6ca8: int3                      ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@129 (line 2598)

  0x0000000002df6ca9: mov    $0xffffff65,%edx
  0x0000000002df6cae: mov    %r13d,0x20(%rsp)
  0x0000000002df6cb3: mov    %r14,0x28(%rsp)
  0x0000000002df6cb8: mov    %r10d,0x24(%rsp)
  0x0000000002df6cbd: mov    %r11,0x38(%rsp)
  0x0000000002df6cc2: nop
  0x0000000002df6cc3: callq  0x0000000002cf57a0  ; OopMap{rbp=NarrowOop [40]=Oop [56]=Oop [80]=Oop off=1832}
                                                ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@136 (line 2598)
                                                ;   {runtime_call}
  0x0000000002df6cc8: int3                      ;*if_acmpeq
                                                ; - java.lang.String::toLowerCase@136 (line 2598)

  0x0000000002df6cc9: mov    $0xffffff65,%edx
  0x0000000002df6cce: mov    %r13d,0x20(%rsp)
  0x0000000002df6cd3: mov    %r14,0x28(%rsp)
  0x0000000002df6cd8: mov    %r10d,0x24(%rsp)
  0x0000000002df6cdd: mov    %r11,0x38(%rsp)
  0x0000000002df6ce2: nop
  0x0000000002df6ce3: callq  0x0000000002cf57a0  ; OopMap{rbp=NarrowOop [40]=Oop [56]=Oop [80]=Oop off=1864}
                                                ;*if_acmpne
                                                ; - java.lang.String::toLowerCase@143 (line 2598)
                                                ;   {runtime_call}
  0x0000000002df6ce8: int3                      ;*if_acmpne
                                                ; - java.lang.String::toLowerCase@143 (line 2598)

  0x0000000002df6ce9: mov    $0xfffffff6,%edx
  0x0000000002df6cee: nop
  0x0000000002df6cef: callq  0x0000000002cf57a0  ; OopMap{off=1876}
                                                ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)
                                                ;   {runtime_call}
  0x0000000002df6cf4: int3                      ;*arraylength
                                                ; - java.lang.String::toLowerCase@16 (line 2567)

  0x0000000002df6cf5: mov    $0xfffffff6,%edx
  0x0000000002df6cfa: nop
  0x0000000002df6cfb: callq  0x0000000002cf57a0  ; OopMap{off=1888}
                                                ;*invokevirtual getLanguage
                                                ; - java.util.Locale::getLanguage@4 (line 1076)
                                                ; - java.lang.String::toLowerCase@120 (line 2597)
                                                ;   {runtime_call}
  0x0000000002df6d00: int3                      ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)

  0x0000000002df6d01: mov    %rax,%rdx
  0x0000000002df6d04: jmp    0x0000000002df6d13  ;*newarray
                                                ; - java.lang.String::toLowerCase@100 (line 2590)

  0x0000000002df6d06: mov    %rax,%rdx
  0x0000000002df6d09: jmp    0x0000000002df6d13  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ; - java.lang.String::toLowerCase@435 (line 2647)

  0x0000000002df6d0b: mov    %rax,%rdx
  0x0000000002df6d0e: jmp    0x0000000002df6d13  ;*new
                                                ; - java.lang.String::toLowerCase@424 (line 2647)

  0x0000000002df6d10: mov    %rax,%rdx          ;*invokestatic arraycopy
                                                ; - java.lang.String::toLowerCase@116 (line 2595)

  0x0000000002df6d13: add    $0x70,%rsp
  0x0000000002df6d17: pop    %rbp
  0x0000000002df6d18: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002df6d1d: hlt    
  0x0000000002df6d1e: hlt    
  0x0000000002df6d1f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002df6d20: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002df6d25: callq  0x0000000002df6d2a
  0x0000000002df6d2a: subq   $0x5,(%rsp)
  0x0000000002df6d2f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df6d34: hlt    
  0x0000000002df6d35: hlt    
  0x0000000002df6d36: hlt    
  0x0000000002df6d37: hlt    
<nmethod compile_id='88' compiler='C2' level='4' entry='0x0000000002df65a0' size='5976' address='0x0000000002df6410' relocation_offset='288' insts_offset='400' stub_offset='2320' scopes_data_offset='2488' scopes_pcs_offset='4192' dependencies_offset='5840' handler_table_offset='5848' nul_chk_table_offset='5944' oops_offset='2344' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='1674' backedge_count='30082' iicount='1674' stamp='1.738'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002df4b90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcf37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002df4d00: mov    0x8(%rdx),%r10d
  0x0000000002df4d04: shl    $0x3,%r10
  0x0000000002df4d08: cmp    %rax,%r10
  0x0000000002df4d0b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df4d11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df4d1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df4d20: mov    %eax,-0x6000(%rsp)
  0x0000000002df4d27: push   %rbp
  0x0000000002df4d28: sub    $0x50,%rsp
  0x0000000002df4d2c: movabs $0x1be5ed08,%r8    ;   {metadata(method data for {method} {0x000000001bcf37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002df4d36: mov    0xdc(%r8),%r9d
  0x0000000002df4d3d: add    $0x8,%r9d
  0x0000000002df4d41: mov    %r9d,0xdc(%r8)
  0x0000000002df4d48: movabs $0x1bcf37a8,%r8    ;   {metadata({method} {0x000000001bcf37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002df4d52: and    $0x1ff8,%r9d
  0x0000000002df4d59: cmp    $0x0,%r9d
  0x0000000002df4d5d: je     0x0000000002df5023  ;*aload_0
                                                ; - java.io.File::isInvalid@0 (line 186)

  0x0000000002df4d63: mov    0x14(%rdx),%r8d
  0x0000000002df4d67: shl    $0x3,%r8           ;*getfield status
                                                ; - java.io.File::isInvalid@1 (line 186)

  0x0000000002df4d6b: cmp    $0x0,%r8
  0x0000000002df4d6f: movabs $0x1be5ed08,%r8    ;   {metadata(method data for {method} {0x000000001bcf37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002df4d79: movabs $0x108,%r9
  0x0000000002df4d83: jne    0x0000000002df4d93
  0x0000000002df4d89: movabs $0x118,%r9
  0x0000000002df4d93: mov    (%r8,%r9,1),%rsi
  0x0000000002df4d97: lea    0x1(%rsi),%rsi
  0x0000000002df4d9b: mov    %rsi,(%r8,%r9,1)
  0x0000000002df4d9f: jne    0x0000000002df4fab  ;*ifnonnull
                                                ; - java.io.File::isInvalid@4 (line 186)

  0x0000000002df4da5: mov    0x10(%rdx),%esi
  0x0000000002df4da8: shl    $0x3,%rsi          ;*getfield path
                                                ; - java.io.File::isInvalid@9 (line 187)

  0x0000000002df4dac: cmp    (%rsi),%rax        ;*invokevirtual indexOf
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ; implicit exception: dispatches to 0x0000000002df503a
  0x0000000002df4daf: mov    %rsi,%r8
  0x0000000002df4db2: movabs $0x1be5ed08,%r9    ;   {metadata(method data for {method} {0x000000001bcf37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002df4dbc: mov    0x8(%r8),%r8d
  0x0000000002df4dc0: shl    $0x3,%r8
  0x0000000002df4dc4: cmp    0x130(%r9),%r8
  0x0000000002df4dcb: jne    0x0000000002df4dda
  0x0000000002df4dcd: addq   $0x1,0x138(%r9)
  0x0000000002df4dd5: jmpq   0x0000000002df4e40
  0x0000000002df4dda: cmp    0x140(%r9),%r8
  0x0000000002df4de1: jne    0x0000000002df4df0
  0x0000000002df4de3: addq   $0x1,0x148(%r9)
  0x0000000002df4deb: jmpq   0x0000000002df4e40
  0x0000000002df4df0: cmpq   $0x0,0x130(%r9)
  0x0000000002df4dfb: jne    0x0000000002df4e14
  0x0000000002df4dfd: mov    %r8,0x130(%r9)
  0x0000000002df4e04: movq   $0x1,0x138(%r9)
  0x0000000002df4e0f: jmpq   0x0000000002df4e40
  0x0000000002df4e14: cmpq   $0x0,0x140(%r9)
  0x0000000002df4e1f: jne    0x0000000002df4e38
  0x0000000002df4e21: mov    %r8,0x140(%r9)
  0x0000000002df4e28: movq   $0x1,0x148(%r9)
  0x0000000002df4e33: jmpq   0x0000000002df4e40
  0x0000000002df4e38: addq   $0x1,0x128(%r9)
  0x0000000002df4e40: movabs $0x1be5da88,%r8    ;   {metadata(method data for {method} {0x000000001bc75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df4e4a: mov    0xdc(%r8),%r9d
  0x0000000002df4e51: add    $0x8,%r9d
  0x0000000002df4e55: mov    %r9d,0xdc(%r8)
  0x0000000002df4e5c: movabs $0x1bc75050,%r8    ;   {metadata({method} {0x000000001bc75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df4e66: and    $0x7ffff8,%r9d
  0x0000000002df4e6d: cmp    $0x0,%r9d
  0x0000000002df4e71: je     0x0000000002df503f
  0x0000000002df4e77: mov    %rsi,%r8
  0x0000000002df4e7a: movabs $0x1be5da88,%r9    ;   {metadata(method data for {method} {0x000000001bc75058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df4e84: mov    0x8(%r8),%r8d
  0x0000000002df4e88: shl    $0x3,%r8
  0x0000000002df4e8c: cmp    0x110(%r9),%r8
  0x0000000002df4e93: jne    0x0000000002df4ea2
  0x0000000002df4e95: addq   $0x1,0x118(%r9)
  0x0000000002df4e9d: jmpq   0x0000000002df4f08
  0x0000000002df4ea2: cmp    0x120(%r9),%r8
  0x0000000002df4ea9: jne    0x0000000002df4eb8
  0x0000000002df4eab: addq   $0x1,0x128(%r9)
  0x0000000002df4eb3: jmpq   0x0000000002df4f08
  0x0000000002df4eb8: cmpq   $0x0,0x110(%r9)
  0x0000000002df4ec3: jne    0x0000000002df4edc
  0x0000000002df4ec5: mov    %r8,0x110(%r9)
  0x0000000002df4ecc: movq   $0x1,0x118(%r9)
  0x0000000002df4ed7: jmpq   0x0000000002df4f08
  0x0000000002df4edc: cmpq   $0x0,0x120(%r9)
  0x0000000002df4ee7: jne    0x0000000002df4f00
  0x0000000002df4ee9: mov    %r8,0x120(%r9)
  0x0000000002df4ef0: movq   $0x1,0x128(%r9)
  0x0000000002df4efb: jmpq   0x0000000002df4f08
  0x0000000002df4f00: addq   $0x1,0x108(%r9)
  0x0000000002df4f08: mov    $0x0,%r8d
  0x0000000002df4f0e: mov    $0x0,%r9d
  0x0000000002df4f14: mov    %rdx,0x40(%rsp)
  0x0000000002df4f19: mov    %rsi,%rdx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.io.File::isInvalid@13 (line 187)

  0x0000000002df4f1c: nop
  0x0000000002df4f1d: nop
  0x0000000002df4f1e: nop
  0x0000000002df4f1f: callq  0x0000000002cf61a0  ; OopMap{[64]=Oop off=548}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ;   {optimized virtual_call}
  0x0000000002df4f24: cmp    $0x0,%eax
  0x0000000002df4f27: movabs $0x1be5ed08,%rax   ;   {metadata(method data for {method} {0x000000001bcf37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002df4f31: movabs $0x158,%rsi
  0x0000000002df4f3b: jge    0x0000000002df4f4b
  0x0000000002df4f41: movabs $0x168,%rsi
  0x0000000002df4f4b: mov    (%rax,%rsi,1),%rdi
  0x0000000002df4f4f: lea    0x1(%rdi),%rdi
  0x0000000002df4f53: mov    %rdi,(%rax,%rsi,1)
  0x0000000002df4f57: jge    0x0000000002df4f7c  ;*ifge
                                                ; - java.io.File::isInvalid@16 (line 187)

  0x0000000002df4f5d: movabs $0x1be5ed08,%rax   ;   {metadata(method data for {method} {0x000000001bcf37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002df4f67: incl   0x178(%rax)
  0x0000000002df4f6d: movabs $0x76b809a28,%rax  ;   {oop(a &apos;java/io/File$PathStatus&apos;)}
  0x0000000002df4f77: jmpq   0x0000000002df4f86  ;*goto
                                                ; - java.io.File::isInvalid@22 (line 187)

  0x0000000002df4f7c: movabs $0x76b8099d8,%rax  ;   {oop(a &apos;java/io/File$PathStatus&apos;)}
  0x0000000002df4f86: mov    0x40(%rsp),%rdx
  0x0000000002df4f8b: mov    %rax,%r10
  0x0000000002df4f8e: shr    $0x3,%r10
  0x0000000002df4f92: mov    %r10d,0x14(%rdx)
  0x0000000002df4f96: mov    %rdx,%rax
  0x0000000002df4f99: shr    $0x9,%rax
  0x0000000002df4f9d: movabs $0xea5d000,%rsi
  0x0000000002df4fa7: movb   $0x0,(%rax,%rsi,1)  ;*putfield status
                                                ; - java.io.File::isInvalid@28 (line 187)

  0x0000000002df4fab: mov    0x14(%rdx),%eax
  0x0000000002df4fae: shl    $0x3,%rax          ;*getfield status
                                                ; - java.io.File::isInvalid@32 (line 190)

  0x0000000002df4fb2: movabs $0x76b8099d8,%r10  ;   {oop(a &apos;java/io/File$PathStatus&apos;)}
  0x0000000002df4fbc: cmp    %r10,%rax
  0x0000000002df4fbf: movabs $0x1be5ed08,%rax   ;   {metadata(method data for {method} {0x000000001bcf37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002df4fc9: movabs $0x190,%rsi
  0x0000000002df4fd3: jne    0x0000000002df4fe3
  0x0000000002df4fd9: movabs $0x1a0,%rsi
  0x0000000002df4fe3: mov    (%rax,%rsi,1),%rdi
  0x0000000002df4fe7: lea    0x1(%rdi),%rdi
  0x0000000002df4feb: mov    %rdi,(%rax,%rsi,1)
  0x0000000002df4fef: jne    0x0000000002df500f  ;*if_acmpne
                                                ; - java.io.File::isInvalid@38 (line 190)

  0x0000000002df4ff5: movabs $0x1be5ed08,%rax   ;   {metadata(method data for {method} {0x000000001bcf37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x0000000002df4fff: incl   0x1b0(%rax)
  0x0000000002df5005: mov    $0x1,%eax
  0x0000000002df500a: jmpq   0x0000000002df5014  ;*goto
                                                ; - java.io.File::isInvalid@42 (line 190)

  0x0000000002df500f: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.File::isInvalid@46 (line 190)

  0x0000000002df5014: and    $0x1,%eax
  0x0000000002df5017: add    $0x50,%rsp
  0x0000000002df501b: pop    %rbp
  0x0000000002df501c: test   %eax,-0x21f4f22(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df5022: retq   
  0x0000000002df5023: mov    %r8,0x8(%rsp)
  0x0000000002df5028: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df5030: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=821}
                                                ;*synchronization entry
                                                ; - java.io.File::isInvalid@-1 (line 186)
                                                ;   {runtime_call}
  0x0000000002df5035: jmpq   0x0000000002df4d63
  0x0000000002df503a: callq  0x0000000002dad680  ; OopMap{rdx=Oop rsi=Oop off=831}
                                                ;*invokevirtual indexOf
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ;   {runtime_call}
  0x0000000002df503f: mov    %r8,0x8(%rsp)
  0x0000000002df5044: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df504c: callq  0x0000000002db1d60  ; OopMap{rdx=Oop rsi=Oop off=849}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ;   {runtime_call}
  0x0000000002df5051: jmpq   0x0000000002df4e77
  0x0000000002df5056: nop
  0x0000000002df5057: nop
  0x0000000002df5058: mov    0x2a8(%r15),%rax
  0x0000000002df505f: movabs $0x0,%r10
  0x0000000002df5069: mov    %r10,0x2a8(%r15)
  0x0000000002df5070: movabs $0x0,%r10
  0x0000000002df507a: mov    %r10,0x2b0(%r15)
  0x0000000002df5081: add    $0x50,%rsp
  0x0000000002df5085: pop    %rbp
  0x0000000002df5086: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df508b: hlt    
  0x0000000002df508c: hlt    
  0x0000000002df508d: hlt    
  0x0000000002df508e: hlt    
  0x0000000002df508f: hlt    
  0x0000000002df5090: hlt    
  0x0000000002df5091: hlt    
  0x0000000002df5092: hlt    
  0x0000000002df5093: hlt    
  0x0000000002df5094: hlt    
  0x0000000002df5095: hlt    
  0x0000000002df5096: hlt    
  0x0000000002df5097: hlt    
  0x0000000002df5098: hlt    
  0x0000000002df5099: hlt    
  0x0000000002df509a: hlt    
  0x0000000002df509b: hlt    
  0x0000000002df509c: hlt    
  0x0000000002df509d: hlt    
  0x0000000002df509e: hlt    
  0x0000000002df509f: hlt    
[Stub Code]
  0x0000000002df50a0: nop                       ;   {no_reloc}
  0x0000000002df50a1: nop
  0x0000000002df50a2: nop
  0x0000000002df50a3: nop
  0x0000000002df50a4: nop
  0x0000000002df50a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df50af: jmpq   0x0000000002df50af  ;   {runtime_call}
[Exception Handler]
  0x0000000002df50b4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002df50b9: mov    %rsp,-0x28(%rsp)
  0x0000000002df50be: sub    $0x80,%rsp
  0x0000000002df50c5: mov    %rax,0x78(%rsp)
  0x0000000002df50ca: mov    %rcx,0x70(%rsp)
  0x0000000002df50cf: mov    %rdx,0x68(%rsp)
  0x0000000002df50d4: mov    %rbx,0x60(%rsp)
  0x0000000002df50d9: mov    %rbp,0x50(%rsp)
  0x0000000002df50de: mov    %rsi,0x48(%rsp)
  0x0000000002df50e3: mov    %rdi,0x40(%rsp)
  0x0000000002df50e8: mov    %r8,0x38(%rsp)
  0x0000000002df50ed: mov    %r9,0x30(%rsp)
  0x0000000002df50f2: mov    %r10,0x28(%rsp)
  0x0000000002df50f7: mov    %r11,0x20(%rsp)
  0x0000000002df50fc: mov    %r12,0x18(%rsp)
  0x0000000002df5101: mov    %r13,0x10(%rsp)
  0x0000000002df5106: mov    %r14,0x8(%rsp)
  0x0000000002df510b: mov    %r15,(%rsp)
  0x0000000002df510f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df5119: movabs $0x2df50b9,%rdx    ;   {internal_word}
  0x0000000002df5123: mov    %rsp,%r8
  0x0000000002df5126: and    $0xfffffffffffffff0,%rsp
  0x0000000002df512a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df512f: hlt    
[Deopt Handler Code]
  0x0000000002df5130: movabs $0x2df5130,%r10    ;   {section_word}
  0x0000000002df513a: push   %r10
  0x0000000002df513c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df5141: hlt    
  0x0000000002df5142: hlt    
  0x0000000002df5143: hlt    
  0x0000000002df5144: hlt    
  0x0000000002df5145: hlt    
  0x0000000002df5146: hlt    
  0x0000000002df5147: hlt    
<nmethod compile_id='84' compiler='C1' level='3' entry='0x0000000002df4d00' size='1944' address='0x0000000002df4b90' relocation_offset='288' insts_offset='368' stub_offset='1296' scopes_data_offset='1480' scopes_pcs_offset='1616' dependencies_offset='1920' nul_chk_table_offset='1928' method='java/io/File isInvalid ()Z' bytes='47' count='1823' iicount='1823' stamp='1.745'/>
Decoding compiled method 0x0000000002dd6b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc74ef0} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dd6cc0: mov    0x8(%rdx),%r10d
  0x0000000002dd6cc4: shl    $0x3,%r10
  0x0000000002dd6cc8: cmp    %rax,%r10
  0x0000000002dd6ccb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd6cd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd6cdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd6ce0: mov    %eax,-0x6000(%rsp)
  0x0000000002dd6ce7: push   %rbp
  0x0000000002dd6ce8: sub    $0x30,%rsp
  0x0000000002dd6cec: movabs $0x1bea7c68,%r9    ;   {metadata(method data for {method} {0x000000001bc74ef0} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd6cf6: mov    0xdc(%r9),%esi
  0x0000000002dd6cfd: add    $0x8,%esi
  0x0000000002dd6d00: mov    %esi,0xdc(%r9)
  0x0000000002dd6d07: movabs $0x1bc74ee8,%r9    ;   {metadata({method} {0x000000001bc74ef0} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd6d11: and    $0x1ff8,%esi
  0x0000000002dd6d17: cmp    $0x0,%esi
  0x0000000002dd6d1a: je     0x0000000002dd6de3  ;*aload_0
                                                ; - java.lang.String::endsWith@0 (line 1449)

  0x0000000002dd6d20: mov    0xc(%rdx),%r9d
  0x0000000002dd6d24: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.String::endsWith@3 (line 1449)

  0x0000000002dd6d28: mov    0xc(%r9),%r9d      ;*arraylength
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ; implicit exception: dispatches to 0x0000000002dd6dfa
  0x0000000002dd6d2c: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x0000000002dd6dff
  0x0000000002dd6d30: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::endsWith@8 (line 1449)

  0x0000000002dd6d34: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ; implicit exception: dispatches to 0x0000000002dd6e04
  0x0000000002dd6d37: mov    %rdx,%rdi
  0x0000000002dd6d3a: movabs $0x1bea7c68,%rbx   ;   {metadata(method data for {method} {0x000000001bc74ef0} &apos;endsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x0000000002dd6d44: mov    0x8(%rdi),%edi
  0x0000000002dd6d47: shl    $0x3,%rdi
  0x0000000002dd6d4b: cmp    0x110(%rbx),%rdi
  0x0000000002dd6d52: jne    0x0000000002dd6d61
  0x0000000002dd6d54: addq   $0x1,0x118(%rbx)
  0x0000000002dd6d5c: jmpq   0x0000000002dd6dc7
  0x0000000002dd6d61: cmp    0x120(%rbx),%rdi
  0x0000000002dd6d68: jne    0x0000000002dd6d77
  0x0000000002dd6d6a: addq   $0x1,0x128(%rbx)
  0x0000000002dd6d72: jmpq   0x0000000002dd6dc7
  0x0000000002dd6d77: cmpq   $0x0,0x110(%rbx)
  0x0000000002dd6d82: jne    0x0000000002dd6d9b
  0x0000000002dd6d84: mov    %rdi,0x110(%rbx)
  0x0000000002dd6d8b: movq   $0x1,0x118(%rbx)
  0x0000000002dd6d96: jmpq   0x0000000002dd6dc7
  0x0000000002dd6d9b: cmpq   $0x0,0x120(%rbx)
  0x0000000002dd6da6: jne    0x0000000002dd6dbf
  0x0000000002dd6da8: mov    %rdi,0x120(%rbx)
  0x0000000002dd6daf: movq   $0x1,0x128(%rbx)
  0x0000000002dd6dba: jmpq   0x0000000002dd6dc7
  0x0000000002dd6dbf: addq   $0x1,0x108(%rbx)
  0x0000000002dd6dc7: sub    %esi,%r9d
  0x0000000002dd6dca: nop
  0x0000000002dd6dcb: nop
  0x0000000002dd6dcc: nop
  0x0000000002dd6dcd: nop
  0x0000000002dd6dce: nop
  0x0000000002dd6dcf: callq  0x0000000002cf61a0  ; OopMap{off=276}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::endsWith@13 (line 1449)
                                                ;   {optimized virtual_call}
  0x0000000002dd6dd4: and    $0x1,%eax
  0x0000000002dd6dd7: add    $0x30,%rsp
  0x0000000002dd6ddb: pop    %rbp
  0x0000000002dd6ddc: test   %eax,-0x21d6ce2(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd6de2: retq   
  0x0000000002dd6de3: mov    %r9,0x8(%rsp)
  0x0000000002dd6de8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd6df0: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=309}
                                                ;*synchronization entry
                                                ; - java.lang.String::endsWith@-1 (line 1449)
                                                ;   {runtime_call}
  0x0000000002dd6df5: jmpq   0x0000000002dd6d20
  0x0000000002dd6dfa: callq  0x0000000002dad680  ; OopMap{rdx=Oop r8=Oop off=319}
                                                ;*arraylength
                                                ; - java.lang.String::endsWith@6 (line 1449)
                                                ;   {runtime_call}
  0x0000000002dd6dff: callq  0x0000000002dad680  ; OopMap{rdx=Oop r8=Oop off=324}
                                                ;*getfield value
                                                ; - java.lang.String::endsWith@8 (line 1449)
                                                ;   {runtime_call}
  0x0000000002dd6e04: callq  0x0000000002dad680  ; OopMap{rdx=Oop r8=Oop off=329}
                                                ;*arraylength
                                                ; - java.lang.String::endsWith@11 (line 1449)
                                                ;   {runtime_call}
  0x0000000002dd6e09: nop
  0x0000000002dd6e0a: nop
  0x0000000002dd6e0b: mov    0x2a8(%r15),%rax
  0x0000000002dd6e12: movabs $0x0,%r10
  0x0000000002dd6e1c: mov    %r10,0x2a8(%r15)
  0x0000000002dd6e23: movabs $0x0,%r10
  0x0000000002dd6e2d: mov    %r10,0x2b0(%r15)
  0x0000000002dd6e34: add    $0x30,%rsp
  0x0000000002dd6e38: pop    %rbp
  0x0000000002dd6e39: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd6e3e: hlt    
  0x0000000002dd6e3f: hlt    
[Stub Code]
  0x0000000002dd6e40: nop                       ;   {no_reloc}
  0x0000000002dd6e41: nop
  0x0000000002dd6e42: nop
  0x0000000002dd6e43: nop
  0x0000000002dd6e44: nop
  0x0000000002dd6e45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dd6e4f: jmpq   0x0000000002dd6e4f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dd6e54: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dd6e59: mov    %rsp,-0x28(%rsp)
  0x0000000002dd6e5e: sub    $0x80,%rsp
  0x0000000002dd6e65: mov    %rax,0x78(%rsp)
  0x0000000002dd6e6a: mov    %rcx,0x70(%rsp)
  0x0000000002dd6e6f: mov    %rdx,0x68(%rsp)
  0x0000000002dd6e74: mov    %rbx,0x60(%rsp)
  0x0000000002dd6e79: mov    %rbp,0x50(%rsp)
  0x0000000002dd6e7e: mov    %rsi,0x48(%rsp)
  0x0000000002dd6e83: mov    %rdi,0x40(%rsp)
  0x0000000002dd6e88: mov    %r8,0x38(%rsp)
  0x0000000002dd6e8d: mov    %r9,0x30(%rsp)
  0x0000000002dd6e92: mov    %r10,0x28(%rsp)
  0x0000000002dd6e97: mov    %r11,0x20(%rsp)
  0x0000000002dd6e9c: mov    %r12,0x18(%rsp)
  0x0000000002dd6ea1: mov    %r13,0x10(%rsp)
  0x0000000002dd6ea6: mov    %r14,0x8(%rsp)
  0x0000000002dd6eab: mov    %r15,(%rsp)
  0x0000000002dd6eaf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd6eb9: movabs $0x2dd6e59,%rdx    ;   {internal_word}
  0x0000000002dd6ec3: mov    %rsp,%r8
  0x0000000002dd6ec6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd6eca: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd6ecf: hlt    
[Deopt Handler Code]
  0x0000000002dd6ed0: movabs $0x2dd6ed0,%r10    ;   {section_word}
  0x0000000002dd6eda: push   %r10
  0x0000000002dd6edc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd6ee1: hlt    
  0x0000000002dd6ee2: hlt    
  0x0000000002dd6ee3: hlt    
  0x0000000002dd6ee4: hlt    
  0x0000000002dd6ee5: hlt    
  0x0000000002dd6ee6: hlt    
  0x0000000002dd6ee7: hlt    
<nmethod compile_id='93' compiler='C1' level='3' entry='0x0000000002dd6cc0' size='1232' address='0x0000000002dd6b50' relocation_offset='288' insts_offset='368' stub_offset='752' scopes_data_offset='928' scopes_pcs_offset='1000' dependencies_offset='1192' nul_chk_table_offset='1200' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='1668' iicount='1668' stamp='1.749'/>
Decoding compiled method 0x0000000002dd66d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap$Node&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dd6820: mov    0x8(%rdx),%r10d
  0x0000000002dd6824: shl    $0x3,%r10
  0x0000000002dd6828: cmp    %rax,%r10
  0x0000000002dd682b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dd6831: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dd683c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dd6840: mov    %eax,-0x6000(%rsp)
  0x0000000002dd6847: push   %rbp
  0x0000000002dd6848: sub    $0x30,%rsp
  0x0000000002dd684c: movabs $0x1be63640,%rbx   ;   {metadata(method data for {method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002dd6856: mov    0xdc(%rbx),%eax
  0x0000000002dd685c: add    $0x8,%eax
  0x0000000002dd685f: mov    %eax,0xdc(%rbx)
  0x0000000002dd6865: movabs $0x1bd5b170,%rbx   ;   {metadata({method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002dd686f: and    $0x1ff8,%eax
  0x0000000002dd6875: cmp    $0x0,%eax
  0x0000000002dd6878: je     0x0000000002dd691e  ;*aload_0
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0 (line 284)

  0x0000000002dd687e: mov    %rdx,%rbx
  0x0000000002dd6881: movabs $0x1be63640,%rax   ;   {metadata(method data for {method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002dd688b: addq   $0x1,0x108(%rax)
  0x0000000002dd6893: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dd689d: mov    0xdc(%rbx),%eax
  0x0000000002dd68a3: add    $0x8,%eax
  0x0000000002dd68a6: mov    %eax,0xdc(%rbx)
  0x0000000002dd68ac: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dd68b6: and    $0x7ffff8,%eax
  0x0000000002dd68bc: cmp    $0x0,%eax
  0x0000000002dd68bf: je     0x0000000002dd6935
  0x0000000002dd68c5: mov    %r8d,0xc(%rdx)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)

  0x0000000002dd68c9: mov    %r9,%r10
  0x0000000002dd68cc: shr    $0x3,%r10
  0x0000000002dd68d0: mov    %r10d,0x10(%rdx)
  0x0000000002dd68d4: mov    %rdx,%rbx
  0x0000000002dd68d7: shr    $0x9,%rbx
  0x0000000002dd68db: movabs $0xea5d000,%rax
  0x0000000002dd68e5: movb   $0x0,(%rbx,%rax,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)

  0x0000000002dd68e9: mov    %rdi,%r10
  0x0000000002dd68ec: shr    $0x3,%r10
  0x0000000002dd68f0: mov    %r10d,0x14(%rdx)
  0x0000000002dd68f4: mov    %rdx,%rdi
  0x0000000002dd68f7: shr    $0x9,%rdi
  0x0000000002dd68fb: movb   $0x0,(%rdi,%rax,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)

  0x0000000002dd68ff: mov    %rsi,%r10
  0x0000000002dd6902: shr    $0x3,%r10
  0x0000000002dd6906: mov    %r10d,0x18(%rdx)
  0x0000000002dd690a: shr    $0x9,%rdx
  0x0000000002dd690e: movb   $0x0,(%rdx,%rax,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)

  0x0000000002dd6912: add    $0x30,%rsp
  0x0000000002dd6916: pop    %rbp
  0x0000000002dd6917: test   %eax,-0x21d681d(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dd691d: retq   
  0x0000000002dd691e: mov    %rbx,0x8(%rsp)
  0x0000000002dd6923: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd692b: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=272}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ;   {runtime_call}
  0x0000000002dd6930: jmpq   0x0000000002dd687e
  0x0000000002dd6935: mov    %rbx,0x8(%rsp)
  0x0000000002dd693a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dd6942: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=295}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ;   {runtime_call}
  0x0000000002dd6947: jmpq   0x0000000002dd68c5
  0x0000000002dd694c: nop
  0x0000000002dd694d: nop
  0x0000000002dd694e: mov    0x2a8(%r15),%rax
  0x0000000002dd6955: movabs $0x0,%r10
  0x0000000002dd695f: mov    %r10,0x2a8(%r15)
  0x0000000002dd6966: movabs $0x0,%r10
  0x0000000002dd6970: mov    %r10,0x2b0(%r15)
  0x0000000002dd6977: add    $0x30,%rsp
  0x0000000002dd697b: pop    %rbp
  0x0000000002dd697c: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dd6981: hlt    
  0x0000000002dd6982: hlt    
  0x0000000002dd6983: hlt    
  0x0000000002dd6984: hlt    
  0x0000000002dd6985: hlt    
  0x0000000002dd6986: hlt    
  0x0000000002dd6987: hlt    
  0x0000000002dd6988: hlt    
  0x0000000002dd6989: hlt    
  0x0000000002dd698a: hlt    
  0x0000000002dd698b: hlt    
  0x0000000002dd698c: hlt    
  0x0000000002dd698d: hlt    
  0x0000000002dd698e: hlt    
  0x0000000002dd698f: hlt    
  0x0000000002dd6990: hlt    
  0x0000000002dd6991: hlt    
  0x0000000002dd6992: hlt    
  0x0000000002dd6993: hlt    
  0x0000000002dd6994: hlt    
  0x0000000002dd6995: hlt    
  0x0000000002dd6996: hlt    
  0x0000000002dd6997: hlt    
  0x0000000002dd6998: hlt    
  0x0000000002dd6999: hlt    
  0x0000000002dd699a: hlt    
  0x0000000002dd699b: hlt    
  0x0000000002dd699c: hlt    
  0x0000000002dd699d: hlt    
  0x0000000002dd699e: hlt    
  0x0000000002dd699f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dd69a0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dd69a5: mov    %rsp,-0x28(%rsp)
  0x0000000002dd69aa: sub    $0x80,%rsp
  0x0000000002dd69b1: mov    %rax,0x78(%rsp)
  0x0000000002dd69b6: mov    %rcx,0x70(%rsp)
  0x0000000002dd69bb: mov    %rdx,0x68(%rsp)
  0x0000000002dd69c0: mov    %rbx,0x60(%rsp)
  0x0000000002dd69c5: mov    %rbp,0x50(%rsp)
  0x0000000002dd69ca: mov    %rsi,0x48(%rsp)
  0x0000000002dd69cf: mov    %rdi,0x40(%rsp)
  0x0000000002dd69d4: mov    %r8,0x38(%rsp)
  0x0000000002dd69d9: mov    %r9,0x30(%rsp)
  0x0000000002dd69de: mov    %r10,0x28(%rsp)
  0x0000000002dd69e3: mov    %r11,0x20(%rsp)
  0x0000000002dd69e8: mov    %r12,0x18(%rsp)
  0x0000000002dd69ed: mov    %r13,0x10(%rsp)
  0x0000000002dd69f2: mov    %r14,0x8(%rsp)
  0x0000000002dd69f7: mov    %r15,(%rsp)
  0x0000000002dd69fb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dd6a05: movabs $0x2dd69a5,%rdx    ;   {internal_word}
  0x0000000002dd6a0f: mov    %rsp,%r8
  0x0000000002dd6a12: and    $0xfffffffffffffff0,%rsp
  0x0000000002dd6a16: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dd6a1b: hlt    
[Deopt Handler Code]
  0x0000000002dd6a1c: movabs $0x2dd6a1c,%r10    ;   {section_word}
  0x0000000002dd6a26: push   %r10
  0x0000000002dd6a28: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dd6a2d: hlt    
  0x0000000002dd6a2e: hlt    
  0x0000000002dd6a2f: hlt    
<nmethod compile_id='82' compiler='C1' level='3' entry='0x0000000002dd6820' size='1112' address='0x0000000002dd66d0' relocation_offset='288' insts_offset='336' stub_offset='720' scopes_data_offset='888' scopes_pcs_offset='960' dependencies_offset='1104' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1682' iicount='1682' stamp='1.753'/>
<writer thread='8664'/>
<task_queued compile_id='95' method='java/util/ArrayList size ()I' bytes='5' count='1664' iicount='1664' level='1' stamp='1.753' comment='tiered' hot_count='1664'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002def7d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bce3cb8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002def960: mov    0x8(%rdx),%r10d
  0x0000000002def964: shl    $0x3,%r10
  0x0000000002def968: cmp    %rax,%r10
  0x0000000002def96b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002def971: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002def97c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002def980: mov    %eax,-0x6000(%rsp)
  0x0000000002def987: push   %rbp
  0x0000000002def988: sub    $0x40,%rsp
  0x0000000002def98c: movabs $0x1be9d230,%rax   ;   {metadata(method data for {method} {0x000000001bce3cb8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002def996: mov    0xdc(%rax),%esi
  0x0000000002def99c: add    $0x8,%esi
  0x0000000002def99f: mov    %esi,0xdc(%rax)
  0x0000000002def9a5: movabs $0x1bce3cb0,%rax   ;   {metadata({method} {0x000000001bce3cb8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002def9af: and    $0x1ff8,%esi
  0x0000000002def9b5: cmp    $0x0,%esi
  0x0000000002def9b8: je     0x0000000002defc06  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::newCapacity@0 (line 150)

  0x0000000002def9be: mov    0x10(%rdx),%eax
  0x0000000002def9c1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)

  0x0000000002def9c5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; implicit exception: dispatches to 0x0000000002defc1d
  0x0000000002def9c8: shl    %eax
  0x0000000002def9ca: add    $0x2,%eax
  0x0000000002def9cd: mov    %rax,%rsi
  0x0000000002def9d0: sub    %r8d,%esi
  0x0000000002def9d3: cmp    $0x0,%esi
  0x0000000002def9d6: movabs $0x1be9d230,%rsi   ;   {metadata(method data for {method} {0x000000001bce3cb8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002def9e0: movabs $0x108,%rdi
  0x0000000002def9ea: jge    0x0000000002def9fa
  0x0000000002def9f0: movabs $0x118,%rdi
  0x0000000002def9fa: mov    (%rsi,%rdi,1),%rcx
  0x0000000002def9fe: lea    0x1(%rcx),%rcx
  0x0000000002defa02: mov    %rcx,(%rsi,%rdi,1)
  0x0000000002defa06: jge    0x0000000002defa0f  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)

  0x0000000002defa0c: mov    %r8,%rax           ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)

  0x0000000002defa0f: cmp    $0x0,%eax
  0x0000000002defa12: movabs $0x1be9d230,%rsi   ;   {metadata(method data for {method} {0x000000001bce3cb8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defa1c: movabs $0x128,%rdi
  0x0000000002defa26: jle    0x0000000002defa36
  0x0000000002defa2c: movabs $0x138,%rdi
  0x0000000002defa36: mov    (%rsi,%rdi,1),%rcx
  0x0000000002defa3a: lea    0x1(%rcx),%rcx
  0x0000000002defa3e: mov    %rcx,(%rsi,%rdi,1)
  0x0000000002defa42: jle    0x0000000002defa88  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)

  0x0000000002defa48: mov    $0x7ffffff7,%esi
  0x0000000002defa4d: sub    %eax,%esi
  0x0000000002defa4f: cmp    $0x0,%esi
  0x0000000002defa52: movabs $0x1be9d230,%rsi   ;   {metadata(method data for {method} {0x000000001bce3cb8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defa5c: movabs $0x148,%rdi
  0x0000000002defa66: jge    0x0000000002defa76
  0x0000000002defa6c: movabs $0x158,%rdi
  0x0000000002defa76: mov    (%rsi,%rdi,1),%rcx
  0x0000000002defa7a: lea    0x1(%rcx),%rcx
  0x0000000002defa7e: mov    %rcx,(%rsi,%rdi,1)
  0x0000000002defa82: jge    0x0000000002defb7a  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)

  0x0000000002defa88: movabs $0x1be9d230,%rax   ;   {metadata(method data for {method} {0x000000001bce3cb8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defa92: addq   $0x1,0x168(%rax)
  0x0000000002defa9a: movabs $0x1bfdedd0,%rax   ;   {metadata(method data for {method} {0x000000001bce3d68} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defaa4: mov    0xdc(%rax),%edx
  0x0000000002defaaa: add    $0x8,%edx
  0x0000000002defaad: mov    %edx,0xdc(%rax)
  0x0000000002defab3: movabs $0x1bce3d60,%rax   ;   {metadata({method} {0x000000001bce3d68} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defabd: and    $0x7ffff8,%edx
  0x0000000002defac3: cmp    $0x0,%edx
  0x0000000002defac6: je     0x0000000002defc22
  0x0000000002defacc: mov    $0x7fffffff,%eax
  0x0000000002defad1: sub    %r8d,%eax
  0x0000000002defad4: cmp    $0x0,%eax
  0x0000000002defad7: movabs $0x1bfdedd0,%rax   ;   {metadata(method data for {method} {0x000000001bce3d68} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defae1: movabs $0x108,%rdx
  0x0000000002defaeb: jge    0x0000000002defafb
  0x0000000002defaf1: movabs $0x118,%rdx
  0x0000000002defafb: mov    (%rax,%rdx,1),%rsi
  0x0000000002defaff: lea    0x1(%rsi),%rsi
  0x0000000002defb03: mov    %rsi,(%rax,%rdx,1)
  0x0000000002defb07: jl     0x0000000002defb8c  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@4 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x0000000002defb0d: cmp    $0x7ffffff7,%r8d
  0x0000000002defb14: movabs $0x1bfdedd0,%rax   ;   {metadata(method data for {method} {0x000000001bce3d68} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defb1e: movabs $0x138,%rdx
  0x0000000002defb28: jle    0x0000000002defb38
  0x0000000002defb2e: movabs $0x148,%rdx
  0x0000000002defb38: mov    (%rax,%rdx,1),%rsi
  0x0000000002defb3c: lea    0x1(%rsi),%rsi
  0x0000000002defb40: mov    %rsi,(%rax,%rdx,1)
  0x0000000002defb44: jle    0x0000000002defb5f  ;*if_icmple
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@18 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x0000000002defb4a: movabs $0x1bfdedd0,%rax   ;   {metadata(method data for {method} {0x000000001bce3d68} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defb54: incl   0x158(%rax)
  0x0000000002defb5a: jmpq   0x0000000002defb65  ;*goto
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@22 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x0000000002defb5f: mov    $0x7ffffff7,%r8d   ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@27 (line 163)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x0000000002defb65: movabs $0x1be9d230,%rax   ;   {metadata(method data for {method} {0x000000001bce3cb8} &apos;newCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defb6f: incl   0x178(%rax)
  0x0000000002defb75: jmpq   0x0000000002defb7d  ;*goto
                                                ; - java.lang.AbstractStringBuilder::newCapacity@34 (line 155)

  0x0000000002defb7a: mov    %rax,%r8
  0x0000000002defb7d: mov    %r8,%rax
  0x0000000002defb80: add    $0x40,%rsp
  0x0000000002defb84: pop    %rbp
  0x0000000002defb85: test   %eax,-0x21efa8b(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002defb8b: retq                      ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)

  0x0000000002defb8c: nopl   0x0(%rax)
  0x0000000002defb90: jmpq   0x0000000002defc48  ;   {no_reloc}
  0x0000000002defb95: add    %al,(%rax)
  0x0000000002defb97: add    %al,(%rax)
  0x0000000002defb99: add    %cl,-0x75(%rcx)
  0x0000000002defb9c: rex.RXB (bad) 
  0x0000000002defb9e: lea    0x20(%rax),%rdi
  0x0000000002defba2: cmp    0x70(%r15),%rdi
  0x0000000002defba6: ja     0x0000000002defc52
  0x0000000002defbac: mov    %rdi,0x60(%r15)
  0x0000000002defbb0: mov    0xa8(%rdx),%rcx
  0x0000000002defbb7: mov    %rcx,(%rax)
  0x0000000002defbba: mov    %rdx,%rcx
  0x0000000002defbbd: shr    $0x3,%rcx
  0x0000000002defbc1: mov    %ecx,0x8(%rax)
  0x0000000002defbc4: xor    %rcx,%rcx
  0x0000000002defbc7: mov    %ecx,0xc(%rax)
  0x0000000002defbca: xor    %rcx,%rcx
  0x0000000002defbcd: mov    %rcx,0x10(%rax)
  0x0000000002defbd1: mov    %rcx,0x18(%rax)    ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x0000000002defbd5: mov    %rax,%rdx
  0x0000000002defbd8: movabs $0x1bfdedd0,%rsi   ;   {metadata(method data for {method} {0x000000001bce3d68} &apos;hugeCapacity&apos; &apos;(I)I&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002defbe2: addq   $0x1,0x128(%rsi)
  0x0000000002defbea: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)

  0x0000000002defbed: mov    %rax,0x30(%rsp)
  0x0000000002defbf2: nop
  0x0000000002defbf3: nop
  0x0000000002defbf4: nop
  0x0000000002defbf5: nop
  0x0000000002defbf6: nop
  0x0000000002defbf7: callq  0x0000000002cf61a0  ; OopMap{[48]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@11 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {optimized virtual_call}
  0x0000000002defbfc: mov    0x30(%rsp),%rax
  0x0000000002defc01: jmpq   0x0000000002defc8a
  0x0000000002defc06: mov    %rax,0x8(%rsp)
  0x0000000002defc0b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002defc13: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=696}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::newCapacity@-1 (line 150)
                                                ;   {runtime_call}
  0x0000000002defc18: jmpq   0x0000000002def9be
  0x0000000002defc1d: callq  0x0000000002dad680  ; OopMap{rdx=Oop off=706}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ;   {runtime_call}
  0x0000000002defc22: mov    %rax,0x8(%rsp)
  0x0000000002defc27: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002defc2f: callq  0x0000000002db1d60  ; OopMap{off=724}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::hugeCapacity@-1 (line 160)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x0000000002defc34: jmpq   0x0000000002defacc
  0x0000000002defc39: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002defc43: mov    $0xa050f00,%eax
  0x0000000002defc48: callq  0x0000000002db0ca0  ; OopMap{off=749}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x0000000002defc4d: jmpq   0x0000000002defb90
  0x0000000002defc52: mov    %rdx,%rdx
  0x0000000002defc55: callq  0x0000000002dade00  ; OopMap{off=762}
                                                ;*new  ; - java.lang.AbstractStringBuilder::hugeCapacity@7 (line 161)
                                                ; - java.lang.AbstractStringBuilder::newCapacity@31 (line 155)
                                                ;   {runtime_call}
  0x0000000002defc5a: jmpq   0x0000000002defbd5
  0x0000000002defc5f: nop
  0x0000000002defc60: nop
  0x0000000002defc61: mov    0x2a8(%r15),%rax
  0x0000000002defc68: movabs $0x0,%r10
  0x0000000002defc72: mov    %r10,0x2a8(%r15)
  0x0000000002defc79: movabs $0x0,%r10
  0x0000000002defc83: mov    %r10,0x2b0(%r15)
  0x0000000002defc8a: add    $0x40,%rsp
  0x0000000002defc8e: pop    %rbp
  0x0000000002defc8f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002defc94: hlt    
  0x0000000002defc95: hlt    
  0x0000000002defc96: hlt    
  0x0000000002defc97: hlt    
  0x0000000002defc98: hlt    
  0x0000000002defc99: hlt    
  0x0000000002defc9a: hlt    
  0x0000000002defc9b: hlt    
  0x0000000002defc9c: hlt    
  0x0000000002defc9d: hlt    
  0x0000000002defc9e: hlt    
  0x0000000002defc9f: hlt    
[Stub Code]
  0x0000000002defca0: nop                       ;   {no_reloc}
  0x0000000002defca1: nop
  0x0000000002defca2: nop
  0x0000000002defca3: nop
  0x0000000002defca4: nop
  0x0000000002defca5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002defcaf: jmpq   0x0000000002defcaf  ;   {runtime_call}
[Exception Handler]
  0x0000000002defcb4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002defcb9: mov    %rsp,-0x28(%rsp)
  0x0000000002defcbe: sub    $0x80,%rsp
  0x0000000002defcc5: mov    %rax,0x78(%rsp)
  0x0000000002defcca: mov    %rcx,0x70(%rsp)
  0x0000000002defccf: mov    %rdx,0x68(%rsp)
  0x0000000002defcd4: mov    %rbx,0x60(%rsp)
  0x0000000002defcd9: mov    %rbp,0x50(%rsp)
  0x0000000002defcde: mov    %rsi,0x48(%rsp)
  0x0000000002defce3: mov    %rdi,0x40(%rsp)
  0x0000000002defce8: mov    %r8,0x38(%rsp)
  0x0000000002defced: mov    %r9,0x30(%rsp)
  0x0000000002defcf2: mov    %r10,0x28(%rsp)
  0x0000000002defcf7: mov    %r11,0x20(%rsp)
  0x0000000002defcfc: mov    %r12,0x18(%rsp)
  0x0000000002defd01: mov    %r13,0x10(%rsp)
  0x0000000002defd06: mov    %r14,0x8(%rsp)
  0x0000000002defd0b: mov    %r15,(%rsp)
  0x0000000002defd0f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002defd19: movabs $0x2defcb9,%rdx    ;   {internal_word}
  0x0000000002defd23: mov    %rsp,%r8
  0x0000000002defd26: and    $0xfffffffffffffff0,%rsp
  0x0000000002defd2a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002defd2f: hlt    
[Deopt Handler Code]
  0x0000000002defd30: movabs $0x2defd30,%r10    ;   {section_word}
  0x0000000002defd3a: push   %r10
  0x0000000002defd3c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002defd41: hlt    
  0x0000000002defd42: hlt    
  0x0000000002defd43: hlt    
  0x0000000002defd44: hlt    
  0x0000000002defd45: hlt    
  0x0000000002defd46: hlt    
  0x0000000002defd47: hlt    
<nmethod compile_id='87' compiler='C1' level='3' entry='0x0000000002def960' size='1976' address='0x0000000002def7d0' relocation_offset='288' insts_offset='400' stub_offset='1232' scopes_data_offset='1416' scopes_pcs_offset='1584' dependencies_offset='1952' nul_chk_table_offset='1960' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='1598' iicount='1598' stamp='1.760'/>
Decoding compiled method 0x0000000002df47d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd3d3a8} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002df4920: mov    0x8(%rdx),%r10d
  0x0000000002df4924: shl    $0x3,%r10
  0x0000000002df4928: cmp    %rax,%r10
  0x0000000002df492b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df4931: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df493c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df4940: mov    %eax,-0x6000(%rsp)
  0x0000000002df4947: push   %rbp
  0x0000000002df4948: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x0000000002df494c: mov    0x10(%rdx),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x0000000002df494f: add    $0x30,%rsp
  0x0000000002df4953: pop    %rbp
  0x0000000002df4954: test   %eax,-0x21f485a(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df495a: retq   
  0x0000000002df495b: nop
  0x0000000002df495c: nop
  0x0000000002df495d: mov    0x2a8(%r15),%rax
  0x0000000002df4964: movabs $0x0,%r10
  0x0000000002df496e: mov    %r10,0x2a8(%r15)
  0x0000000002df4975: movabs $0x0,%r10
  0x0000000002df497f: mov    %r10,0x2b0(%r15)
  0x0000000002df4986: add    $0x30,%rsp
  0x0000000002df498a: pop    %rbp
  0x0000000002df498b: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df4990: hlt    
  0x0000000002df4991: hlt    
  0x0000000002df4992: hlt    
  0x0000000002df4993: hlt    
  0x0000000002df4994: hlt    
  0x0000000002df4995: hlt    
  0x0000000002df4996: hlt    
  0x0000000002df4997: hlt    
  0x0000000002df4998: hlt    
  0x0000000002df4999: hlt    
  0x0000000002df499a: hlt    
  0x0000000002df499b: hlt    
  0x0000000002df499c: hlt    
  0x0000000002df499d: hlt    
  0x0000000002df499e: hlt    
  0x0000000002df499f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002df49a0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002df49a5: mov    %rsp,-0x28(%rsp)
  0x0000000002df49aa: sub    $0x80,%rsp
  0x0000000002df49b1: mov    %rax,0x78(%rsp)
  0x0000000002df49b6: mov    %rcx,0x70(%rsp)
  0x0000000002df49bb: mov    %rdx,0x68(%rsp)
  0x0000000002df49c0: mov    %rbx,0x60(%rsp)
  0x0000000002df49c5: mov    %rbp,0x50(%rsp)
  0x0000000002df49ca: mov    %rsi,0x48(%rsp)
  0x0000000002df49cf: mov    %rdi,0x40(%rsp)
  0x0000000002df49d4: mov    %r8,0x38(%rsp)
  0x0000000002df49d9: mov    %r9,0x30(%rsp)
  0x0000000002df49de: mov    %r10,0x28(%rsp)
  0x0000000002df49e3: mov    %r11,0x20(%rsp)
  0x0000000002df49e8: mov    %r12,0x18(%rsp)
  0x0000000002df49ed: mov    %r13,0x10(%rsp)
  0x0000000002df49f2: mov    %r14,0x8(%rsp)
  0x0000000002df49f7: mov    %r15,(%rsp)
  0x0000000002df49fb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df4a05: movabs $0x2df49a5,%rdx    ;   {internal_word}
  0x0000000002df4a0f: mov    %rsp,%r8
  0x0000000002df4a12: and    $0xfffffffffffffff0,%rsp
  0x0000000002df4a16: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df4a1b: hlt    
[Deopt Handler Code]
  0x0000000002df4a1c: movabs $0x2df4a1c,%r10    ;   {section_word}
  0x0000000002df4a26: push   %r10
  0x0000000002df4a28: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df4a2d: hlt    
  0x0000000002df4a2e: hlt    
  0x0000000002df4a2f: hlt    
<nmethod compile_id='95' compiler='C1' level='1' entry='0x0000000002df4920' size='704' address='0x0000000002df47d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/ArrayList size ()I' bytes='5' count='1674' iicount='1674' stamp='1.762'/>
Decoding compiled method 0x0000000002def4d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcfb628} &apos;getPort&apos; &apos;()I&apos; in &apos;java/net/URL&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002def620: mov    0x8(%rdx),%r10d
  0x0000000002def624: shl    $0x3,%r10
  0x0000000002def628: cmp    %rax,%r10
  0x0000000002def62b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002def631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002def63c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002def640: mov    %eax,-0x6000(%rsp)
  0x0000000002def647: push   %rbp
  0x0000000002def648: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getPort@0 (line 777)

  0x0000000002def64c: mov    0xc(%rdx),%eax     ;*getfield port
                                                ; - java.net.URL::getPort@1 (line 777)

  0x0000000002def64f: add    $0x30,%rsp
  0x0000000002def653: pop    %rbp
  0x0000000002def654: test   %eax,-0x21ef55a(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002def65a: retq   
  0x0000000002def65b: nop
  0x0000000002def65c: nop
  0x0000000002def65d: mov    0x2a8(%r15),%rax
  0x0000000002def664: movabs $0x0,%r10
  0x0000000002def66e: mov    %r10,0x2a8(%r15)
  0x0000000002def675: movabs $0x0,%r10
  0x0000000002def67f: mov    %r10,0x2b0(%r15)
  0x0000000002def686: add    $0x30,%rsp
  0x0000000002def68a: pop    %rbp
  0x0000000002def68b: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002def690: hlt    
  0x0000000002def691: hlt    
  0x0000000002def692: hlt    
  0x0000000002def693: hlt    
  0x0000000002def694: hlt    
  0x0000000002def695: hlt    
  0x0000000002def696: hlt    
  0x0000000002def697: hlt    
  0x0000000002def698: hlt    
  0x0000000002def699: hlt    
  0x0000000002def69a: hlt    
  0x0000000002def69b: hlt    
  0x0000000002def69c: hlt    
  0x0000000002def69d: hlt    
  0x0000000002def69e: hlt    
  0x0000000002def69f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002def6a0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002def6a5: mov    %rsp,-0x28(%rsp)
  0x0000000002def6aa: sub    $0x80,%rsp
  0x0000000002def6b1: mov    %rax,0x78(%rsp)
  0x0000000002def6b6: mov    %rcx,0x70(%rsp)
  0x0000000002def6bb: mov    %rdx,0x68(%rsp)
  0x0000000002def6c0: mov    %rbx,0x60(%rsp)
  0x0000000002def6c5: mov    %rbp,0x50(%rsp)
  0x0000000002def6ca: mov    %rsi,0x48(%rsp)
  0x0000000002def6cf: mov    %rdi,0x40(%rsp)
  0x0000000002def6d4: mov    %r8,0x38(%rsp)
  0x0000000002def6d9: mov    %r9,0x30(%rsp)
  0x0000000002def6de: mov    %r10,0x28(%rsp)
  0x0000000002def6e3: mov    %r11,0x20(%rsp)
  0x0000000002def6e8: mov    %r12,0x18(%rsp)
  0x0000000002def6ed: mov    %r13,0x10(%rsp)
  0x0000000002def6f2: mov    %r14,0x8(%rsp)
  0x0000000002def6f7: mov    %r15,(%rsp)
  0x0000000002def6fb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002def705: movabs $0x2def6a5,%rdx    ;   {internal_word}
  0x0000000002def70f: mov    %rsp,%r8
  0x0000000002def712: and    $0xfffffffffffffff0,%rsp
  0x0000000002def716: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002def71b: hlt    
[Deopt Handler Code]
  0x0000000002def71c: movabs $0x2def71c,%r10    ;   {section_word}
  0x0000000002def726: push   %r10
  0x0000000002def728: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002def72d: hlt    
  0x0000000002def72e: hlt    
  0x0000000002def72f: hlt    
<nmethod compile_id='92' compiler='C1' level='1' entry='0x0000000002def620' size='704' address='0x0000000002def4d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/net/URL getPort ()I' bytes='5' count='387' iicount='387' stamp='1.764'/>
<writer thread='8664'/>
<task_queued compile_id='96' method='sun/util/locale/LocaleUtils isUpper (C)Z' bytes='18' count='256' iicount='256' level='3' stamp='1.764' comment='tiered' hot_count='256'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002def0d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001be3e0f0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;
  # parm0:    rdx       = char
  #           [sp+0x40]  (sp of caller)
  0x0000000002def220: mov    %eax,-0x6000(%rsp)
  0x0000000002def227: push   %rbp
  0x0000000002def228: sub    $0x30,%rsp
  0x0000000002def22c: movabs $0x1bfe6be8,%rax   ;   {metadata(method data for {method} {0x000000001be3e0f0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002def236: mov    0xdc(%rax),%esi
  0x0000000002def23c: add    $0x8,%esi
  0x0000000002def23f: mov    %esi,0xdc(%rax)
  0x0000000002def245: movabs $0x1be3e0e8,%rax   ;   {metadata({method} {0x000000001be3e0f0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002def24f: and    $0x1ff8,%esi
  0x0000000002def255: cmp    $0x0,%esi
  0x0000000002def258: je     0x0000000002def2fe  ;*iload_0
                                                ; - sun.util.locale.LocaleUtils::isUpper@0 (line 160)

  0x0000000002def25e: cmp    $0x41,%edx
  0x0000000002def261: movabs $0x1bfe6be8,%rax   ;   {metadata(method data for {method} {0x000000001be3e0f0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002def26b: movabs $0x108,%rsi
  0x0000000002def275: jl     0x0000000002def285
  0x0000000002def27b: movabs $0x118,%rsi
  0x0000000002def285: mov    (%rax,%rsi,1),%rdi
  0x0000000002def289: lea    0x1(%rdi),%rdi
  0x0000000002def28d: mov    %rdi,(%rax,%rsi,1)
  0x0000000002def291: jl     0x0000000002def2d0  ;*if_icmplt
                                                ; - sun.util.locale.LocaleUtils::isUpper@3 (line 160)

  0x0000000002def297: cmp    $0x5a,%edx
  0x0000000002def29a: movabs $0x1bfe6be8,%rax   ;   {metadata(method data for {method} {0x000000001be3e0f0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002def2a4: movabs $0x128,%rsi
  0x0000000002def2ae: jg     0x0000000002def2be
  0x0000000002def2b4: movabs $0x138,%rsi
  0x0000000002def2be: mov    (%rax,%rsi,1),%rdi
  0x0000000002def2c2: lea    0x1(%rdi),%rdi
  0x0000000002def2c6: mov    %rdi,(%rax,%rsi,1)
  0x0000000002def2ca: jle    0x0000000002def2da  ;*if_icmpgt
                                                ; - sun.util.locale.LocaleUtils::isUpper@9 (line 160)

  0x0000000002def2d0: mov    $0x0,%eax
  0x0000000002def2d5: jmpq   0x0000000002def2ef  ;*ireturn
                                                ; - sun.util.locale.LocaleUtils::isUpper@17 (line 160)

  0x0000000002def2da: movabs $0x1bfe6be8,%rax   ;   {metadata(method data for {method} {0x000000001be3e0f0} &apos;isUpper&apos; &apos;(C)Z&apos; in &apos;sun/util/locale/LocaleUtils&apos;)}
  0x0000000002def2e4: incl   0x148(%rax)
  0x0000000002def2ea: mov    $0x1,%eax          ;*goto
                                                ; - sun.util.locale.LocaleUtils::isUpper@13 (line 160)

  0x0000000002def2ef: and    $0x1,%eax
  0x0000000002def2f2: add    $0x30,%rsp
  0x0000000002def2f6: pop    %rbp
  0x0000000002def2f7: test   %eax,-0x21ef1fd(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002def2fd: retq   
  0x0000000002def2fe: mov    %rax,0x8(%rsp)
  0x0000000002def303: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002def30b: callq  0x0000000002db1d60  ; OopMap{off=240}
                                                ;*synchronization entry
                                                ; - sun.util.locale.LocaleUtils::isUpper@-1 (line 160)
                                                ;   {runtime_call}
  0x0000000002def310: jmpq   0x0000000002def25e
  0x0000000002def315: nop
  0x0000000002def316: nop
  0x0000000002def317: mov    0x2a8(%r15),%rax
  0x0000000002def31e: movabs $0x0,%r10
  0x0000000002def328: mov    %r10,0x2a8(%r15)
  0x0000000002def32f: movabs $0x0,%r10
  0x0000000002def339: mov    %r10,0x2b0(%r15)
  0x0000000002def340: add    $0x30,%rsp
  0x0000000002def344: pop    %rbp
  0x0000000002def345: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002def34a: hlt    
  0x0000000002def34b: hlt    
  0x0000000002def34c: hlt    
  0x0000000002def34d: hlt    
  0x0000000002def34e: hlt    
  0x0000000002def34f: hlt    
  0x0000000002def350: hlt    
  0x0000000002def351: hlt    
  0x0000000002def352: hlt    
  0x0000000002def353: hlt    
  0x0000000002def354: hlt    
  0x0000000002def355: hlt    
  0x0000000002def356: hlt    
  0x0000000002def357: hlt    
  0x0000000002def358: hlt    
  0x0000000002def359: hlt    
  0x0000000002def35a: hlt    
  0x0000000002def35b: hlt    
  0x0000000002def35c: hlt    
  0x0000000002def35d: hlt    
  0x0000000002def35e: hlt    
  0x0000000002def35f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002def360: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002def365: mov    %rsp,-0x28(%rsp)
  0x0000000002def36a: sub    $0x80,%rsp
  0x0000000002def371: mov    %rax,0x78(%rsp)
  0x0000000002def376: mov    %rcx,0x70(%rsp)
  0x0000000002def37b: mov    %rdx,0x68(%rsp)
  0x0000000002def380: mov    %rbx,0x60(%rsp)
  0x0000000002def385: mov    %rbp,0x50(%rsp)
  0x0000000002def38a: mov    %rsi,0x48(%rsp)
  0x0000000002def38f: mov    %rdi,0x40(%rsp)
  0x0000000002def394: mov    %r8,0x38(%rsp)
  0x0000000002def399: mov    %r9,0x30(%rsp)
  0x0000000002def39e: mov    %r10,0x28(%rsp)
  0x0000000002def3a3: mov    %r11,0x20(%rsp)
  0x0000000002def3a8: mov    %r12,0x18(%rsp)
  0x0000000002def3ad: mov    %r13,0x10(%rsp)
  0x0000000002def3b2: mov    %r14,0x8(%rsp)
  0x0000000002def3b7: mov    %r15,(%rsp)
  0x0000000002def3bb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002def3c5: movabs $0x2def365,%rdx    ;   {internal_word}
  0x0000000002def3cf: mov    %rsp,%r8
  0x0000000002def3d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002def3d6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002def3db: hlt    
[Deopt Handler Code]
  0x0000000002def3dc: movabs $0x2def3dc,%r10    ;   {section_word}
  0x0000000002def3e6: push   %r10
  0x0000000002def3e8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002def3ed: hlt    
  0x0000000002def3ee: hlt    
  0x0000000002def3ef: hlt    
<nmethod compile_id='96' compiler='C1' level='3' entry='0x0000000002def220' size='984' address='0x0000000002def0d0' relocation_offset='288' insts_offset='336' stub_offset='656' scopes_data_offset='808' scopes_pcs_offset='848' dependencies_offset='976' method='sun/util/locale/LocaleUtils isUpper (C)Z' bytes='18' count='260' iicount='260' stamp='1.767'/>
<writer thread='8664'/>
<task_queued compile_id='97' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='5632' iicount='5632' stamp='1.768' comment='tiered' hot_count='5632'/>
<task_queued compile_id='98' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='2432' iicount='2432' level='3' stamp='1.769' comment='tiered' hot_count='2432'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002deec10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002deed80: mov    0x8(%rdx),%r10d
  0x0000000002deed84: shl    $0x3,%r10
  0x0000000002deed88: cmp    %rax,%r10
  0x0000000002deed8b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002deed91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002deed9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002deeda0: mov    %eax,-0x6000(%rsp)
  0x0000000002deeda7: push   %rbp
  0x0000000002deeda8: sub    $0x30,%rsp
  0x0000000002deedac: mov    %rdx,%r9
  0x0000000002deedaf: movabs $0x1be9d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002deedb9: mov    0xdc(%rbx),%edx
  0x0000000002deedbf: add    $0x8,%edx
  0x0000000002deedc2: mov    %edx,0xdc(%rbx)
  0x0000000002deedc8: movabs $0x1bce3970,%rbx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002deedd2: and    $0x1ff8,%edx
  0x0000000002deedd8: cmp    $0x0,%edx
  0x0000000002deeddb: je     0x0000000002deeecc  ;*aload_0
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@0 (line 67)

  0x0000000002deede1: mov    %r9,%rbx
  0x0000000002deede4: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002deedee: addq   $0x1,0x108(%rdx)
  0x0000000002deedf6: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002deee00: mov    0xdc(%rbx),%edx
  0x0000000002deee06: add    $0x8,%edx
  0x0000000002deee09: mov    %edx,0xdc(%rbx)
  0x0000000002deee0f: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002deee19: and    $0x7ffff8,%edx
  0x0000000002deee1f: cmp    $0x0,%edx
  0x0000000002deee22: je     0x0000000002deeee3
  0x0000000002deee28: mov    %r8,%rbx
  0x0000000002deee2b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002deee35: movslq %ebx,%rbx
  0x0000000002deee38: mov    %rbx,%rdi
  0x0000000002deee3b: cmp    $0xffffff,%rbx
  0x0000000002deee42: ja     0x0000000002deeefa
  0x0000000002deee48: movabs $0x17,%rsi
  0x0000000002deee52: lea    (%rsi,%rbx,2),%rsi
  0x0000000002deee56: and    $0xfffffffffffffff8,%rsi
  0x0000000002deee5a: mov    0x60(%r15),%rax
  0x0000000002deee5e: lea    (%rax,%rsi,1),%rsi
  0x0000000002deee62: cmp    0x70(%r15),%rsi
  0x0000000002deee66: ja     0x0000000002deeefa
  0x0000000002deee6c: mov    %rsi,0x60(%r15)
  0x0000000002deee70: sub    %rax,%rsi
  0x0000000002deee73: movq   $0x1,(%rax)
  0x0000000002deee7a: mov    %rdx,%rcx
  0x0000000002deee7d: shr    $0x3,%rcx
  0x0000000002deee81: mov    %ecx,0x8(%rax)
  0x0000000002deee84: mov    %ebx,0xc(%rax)
  0x0000000002deee87: sub    $0x10,%rsi
  0x0000000002deee8b: je     0x0000000002deeea2
  0x0000000002deee91: xor    %rbx,%rbx
  0x0000000002deee94: shr    $0x3,%rsi
  0x0000000002deee98: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002deee9d: dec    %rsi
  0x0000000002deeea0: jne    0x0000000002deee98  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)

  0x0000000002deeea2: mov    %rax,%r10
  0x0000000002deeea5: shr    $0x3,%r10
  0x0000000002deeea9: mov    %r10d,0x10(%r9)
  0x0000000002deeead: shr    $0x9,%r9
  0x0000000002deeeb1: movabs $0xea5d000,%rsi
  0x0000000002deeebb: movb   $0x0,(%r9,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)

  0x0000000002deeec0: add    $0x30,%rsp
  0x0000000002deeec4: pop    %rbp
  0x0000000002deeec5: test   %eax,-0x21eedcb(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002deeecb: retq   
  0x0000000002deeecc: mov    %rbx,0x8(%rsp)
  0x0000000002deeed1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002deeed9: callq  0x0000000002db1d60  ; OopMap{r9=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ;   {runtime_call}
  0x0000000002deeede: jmpq   0x0000000002deede1
  0x0000000002deeee3: mov    %rbx,0x8(%rsp)
  0x0000000002deeee8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002deeef0: callq  0x0000000002db1d60  ; OopMap{r9=Oop off=373}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ;   {runtime_call}
  0x0000000002deeef5: jmpq   0x0000000002deee28
  0x0000000002deeefa: callq  0x0000000002dae700  ; OopMap{r9=Oop off=383}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ;   {runtime_call}
  0x0000000002deeeff: jmp    0x0000000002deeea2
  0x0000000002deef01: nop
  0x0000000002deef02: nop
  0x0000000002deef03: mov    0x2a8(%r15),%rax
  0x0000000002deef0a: movabs $0x0,%r10
  0x0000000002deef14: mov    %r10,0x2a8(%r15)
  0x0000000002deef1b: movabs $0x0,%r10
  0x0000000002deef25: mov    %r10,0x2b0(%r15)
  0x0000000002deef2c: add    $0x30,%rsp
  0x0000000002deef30: pop    %rbp
  0x0000000002deef31: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002deef36: hlt    
  0x0000000002deef37: hlt    
  0x0000000002deef38: hlt    
  0x0000000002deef39: hlt    
  0x0000000002deef3a: hlt    
  0x0000000002deef3b: hlt    
  0x0000000002deef3c: hlt    
  0x0000000002deef3d: hlt    
  0x0000000002deef3e: hlt    
  0x0000000002deef3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002deef40: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002deef45: mov    %rsp,-0x28(%rsp)
  0x0000000002deef4a: sub    $0x80,%rsp
  0x0000000002deef51: mov    %rax,0x78(%rsp)
  0x0000000002deef56: mov    %rcx,0x70(%rsp)
  0x0000000002deef5b: mov    %rdx,0x68(%rsp)
  0x0000000002deef60: mov    %rbx,0x60(%rsp)
  0x0000000002deef65: mov    %rbp,0x50(%rsp)
  0x0000000002deef6a: mov    %rsi,0x48(%rsp)
  0x0000000002deef6f: mov    %rdi,0x40(%rsp)
  0x0000000002deef74: mov    %r8,0x38(%rsp)
  0x0000000002deef79: mov    %r9,0x30(%rsp)
  0x0000000002deef7e: mov    %r10,0x28(%rsp)
  0x0000000002deef83: mov    %r11,0x20(%rsp)
  0x0000000002deef88: mov    %r12,0x18(%rsp)
  0x0000000002deef8d: mov    %r13,0x10(%rsp)
  0x0000000002deef92: mov    %r14,0x8(%rsp)
  0x0000000002deef97: mov    %r15,(%rsp)
  0x0000000002deef9b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002deefa5: movabs $0x2deef45,%rdx    ;   {internal_word}
  0x0000000002deefaf: mov    %rsp,%r8
  0x0000000002deefb2: and    $0xfffffffffffffff0,%rsp
  0x0000000002deefb6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002deefbb: hlt    
[Deopt Handler Code]
  0x0000000002deefbc: movabs $0x2deefbc,%r10    ;   {section_word}
  0x0000000002deefc6: push   %r10
  0x0000000002deefc8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002deefcd: hlt    
  0x0000000002deefce: hlt    
  0x0000000002deefcf: hlt    
<nmethod compile_id='98' compiler='C1' level='3' entry='0x0000000002deed80' size='1184' address='0x0000000002deec10' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1048' dependencies_offset='1176' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='2432' iicount='2432' stamp='1.773'/>
<writer thread='8664'/>
<task_queued compile_id='99' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='640' iicount='640' level='3' stamp='1.773' comment='tiered' hot_count='640'/>
<task_queued compile_id='100' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='640' iicount='640' level='3' stamp='1.773' comment='tiered' hot_count='640'/>
<task_queued compile_id='101' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='640' iicount='640' level='3' stamp='1.773' comment='tiered' hot_count='640'/>
<task_queued compile_id='102' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='640' iicount='640' level='3' stamp='1.773' comment='tiered' hot_count='640'/>
<task_queued compile_id='103' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='128' iicount='128' level='1' stamp='1.773' comment='tiered' hot_count='128'/>
<writer thread='19128'/>
Decoding compiled method 0x0000000002ded150:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bd87828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000002ded2a0: mov    %eax,-0x6000(%rsp)
  0x0000000002ded2a7: push   %rbp
  0x0000000002ded2a8: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)

  0x0000000002ded2ac: mov    %rdx,0x20(%rsp)
  0x0000000002ded2b1: mov    %r8d,0x28(%rsp)
  0x0000000002ded2b6: mov    %r9d,%ebp
  0x0000000002ded2b9: sub    %r8d,%ebp          ;*isub
                                                ; - java.util.Arrays::copyOfRange@2 (line 3661)

  0x0000000002ded2bc: test   %ebp,%ebp
  0x0000000002ded2be: jl     0x0000000002ded45b  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000002ded2c4: cmp    $0x80000,%ebp
  0x0000000002ded2ca: ja     0x0000000002ded414
  0x0000000002ded2d0: movslq %ebp,%r10
  0x0000000002ded2d3: shl    %r10
  0x0000000002ded2d6: add    $0x17,%r10
  0x0000000002ded2da: mov    %r10,0x38(%rsp)
  0x0000000002ded2df: cmp    $0x80000,%ebp
  0x0000000002ded2e5: ja     0x0000000002ded3f8
  0x0000000002ded2eb: and    $0xfffffffffffffff8,%r10
  0x0000000002ded2ef: mov    0x60(%r15),%r8
  0x0000000002ded2f3: mov    %r8,%r11
  0x0000000002ded2f6: add    %r10,%r11
  0x0000000002ded2f9: cmp    0x70(%r15),%r11
  0x0000000002ded2fd: jae    0x0000000002ded3f8
  0x0000000002ded303: mov    %r11,0x60(%r15)
  0x0000000002ded307: prefetchw 0xc0(%r11)
  0x0000000002ded30f: movq   $0x1,(%r8)
  0x0000000002ded316: prefetchw 0x100(%r11)
  0x0000000002ded31e: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x0000000002ded326: mov    %ebp,0xc(%r8)
  0x0000000002ded32a: prefetchw 0x140(%r11)
  0x0000000002ded332: prefetchw 0x180(%r11)     ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002ded33a: mov    %r8,0x30(%rsp)
  0x0000000002ded33f: mov    0x20(%rsp),%r10
  0x0000000002ded344: mov    0xc(%r10),%r8d     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000002ded46d
  0x0000000002ded348: mov    %r8d,%r11d
  0x0000000002ded34b: sub    0x28(%rsp),%r11d   ;*isub
                                                ; - java.util.Arrays::copyOfRange@52 (line 3665)

  0x0000000002ded350: mov    0x30(%rsp),%rdx
  0x0000000002ded355: add    $0x10,%rdx         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002ded359: cmp    %ebp,%r11d
  0x0000000002ded35c: mov    %ebp,%esi
  0x0000000002ded35e: cmovl  %r11d,%esi         ;*invokestatic min
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x0000000002ded362: mov    0x38(%rsp),%rbx
  0x0000000002ded367: shr    $0x3,%rbx
  0x0000000002ded36b: mov    %rbx,%rcx
  0x0000000002ded36e: add    $0xfffffffffffffffe,%rcx
  0x0000000002ded372: mov    0x28(%rsp),%r11d
  0x0000000002ded377: test   %r11d,%r11d
  0x0000000002ded37a: jl     0x0000000002ded41c
  0x0000000002ded380: mov    %r11d,%r9d
  0x0000000002ded383: add    %esi,%r9d
  0x0000000002ded386: cmp    %r9d,%r8d
  0x0000000002ded389: jb     0x0000000002ded41c
  0x0000000002ded38f: cmp    %esi,%ebp
  0x0000000002ded391: jb     0x0000000002ded41c
  0x0000000002ded397: test   %esi,%esi
  0x0000000002ded399: jle    0x0000000002ded445
  0x0000000002ded39f: movslq %esi,%r8
  0x0000000002ded3a2: cmp    %ebp,%esi
  0x0000000002ded3a4: jl     0x0000000002ded3c9
  0x0000000002ded3a6: lea    0x10(%r10,%r11,2),%rcx
  0x0000000002ded3ab: movabs $0x2d02a40,%r10
  0x0000000002ded3b5: callq  *%r10
  0x0000000002ded3b8: mov    0x30(%rsp),%rax
  0x0000000002ded3bd: add    $0x50,%rsp
  0x0000000002ded3c1: pop    %rbp
  0x0000000002ded3c2: test   %eax,-0x21ed3c8(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002ded3c8: retq   
  0x0000000002ded3c9: mov    %r8,%r9
  0x0000000002ded3cc: shl    %r9
  0x0000000002ded3cf: add    $0x10,%r9
  0x0000000002ded3d3: mov    %r9,%rcx
  0x0000000002ded3d6: and    $0xfffffffffffffff9,%rcx
  0x0000000002ded3da: mov    0x30(%rsp),%rdi
  0x0000000002ded3df: add    %rcx,%rdi
  0x0000000002ded3e2: shr    $0x3,%r9
  0x0000000002ded3e6: mov    %rbx,%rcx
  0x0000000002ded3e9: sub    %r9,%rcx
  0x0000000002ded3ec: xor    %rax,%rax
  0x0000000002ded3ef: shl    $0x3,%rcx
  0x0000000002ded3f3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002ded3f6: jmp    0x0000000002ded3a6
  0x0000000002ded3f8: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002ded402: mov    %ebp,%r8d
  0x0000000002ded405: xchg   %ax,%ax
  0x0000000002ded407: callq  0x0000000002db36e0  ; OopMap{[32]=Oop off=364}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000002ded40c: mov    %rax,%r8
  0x0000000002ded40f: jmpq   0x0000000002ded33a
  0x0000000002ded414: movslq %ebp,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002ded417: jmpq   0x0000000002ded2d3
  0x0000000002ded41c: mov    %rdx,%rdi
  0x0000000002ded41f: xor    %rax,%rax
  0x0000000002ded422: shl    $0x3,%rcx
  0x0000000002ded426: rep rex.W stos %al,%es:(%rdi)
  0x0000000002ded429: xor    %edi,%edi
  0x0000000002ded42b: mov    %r10,%rdx
  0x0000000002ded42e: mov    %r11d,%r8d
  0x0000000002ded431: mov    0x30(%rsp),%r9
  0x0000000002ded436: mov    %r9,%rbp
  0x0000000002ded439: xchg   %ax,%ax
  0x0000000002ded43b: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [48]=Oop off=416}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x0000000002ded440: jmpq   0x0000000002ded3b8
  0x0000000002ded445: test   %esi,%esi
  0x0000000002ded447: jl     0x0000000002ded41c
  0x0000000002ded449: mov    %rdx,%rdi
  0x0000000002ded44c: xor    %rax,%rax
  0x0000000002ded44f: shl    $0x3,%rcx
  0x0000000002ded453: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002ded456: jmpq   0x0000000002ded3b8
  0x0000000002ded45b: mov    $0xffffff65,%edx
  0x0000000002ded460: mov    %r9d,0x2c(%rsp)
  0x0000000002ded465: xchg   %ax,%ax
  0x0000000002ded467: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop off=460}
                                                ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)
                                                ;   {runtime_call}
  0x0000000002ded46c: int3   
  0x0000000002ded46d: mov    $0xfffffff6,%edx
  0x0000000002ded472: nop
  0x0000000002ded473: callq  0x0000000002cf57a0  ; OopMap{off=472}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000002ded478: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002ded479: mov    %rax,%rdx
  0x0000000002ded47c: jmp    0x0000000002ded481  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000002ded47e: mov    %rax,%rdx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x0000000002ded481: add    $0x50,%rsp
  0x0000000002ded485: pop    %rbp
  0x0000000002ded486: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002ded48b: hlt    
  0x0000000002ded48c: hlt    
  0x0000000002ded48d: hlt    
  0x0000000002ded48e: hlt    
  0x0000000002ded48f: hlt    
  0x0000000002ded490: hlt    
  0x0000000002ded491: hlt    
  0x0000000002ded492: hlt    
  0x0000000002ded493: hlt    
  0x0000000002ded494: hlt    
  0x0000000002ded495: hlt    
  0x0000000002ded496: hlt    
  0x0000000002ded497: hlt    
  0x0000000002ded498: hlt    
  0x0000000002ded499: hlt    
  0x0000000002ded49a: hlt    
  0x0000000002ded49b: hlt    
  0x0000000002ded49c: hlt    
  0x0000000002ded49d: hlt    
  0x0000000002ded49e: hlt    
  0x0000000002ded49f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002ded4a0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002ded4a5: callq  0x0000000002ded4aa
  0x0000000002ded4aa: subq   $0x5,(%rsp)
  0x0000000002ded4af: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002ded4b4: hlt    
  0x0000000002ded4b5: hlt    
  0x0000000002ded4b6: hlt    
  0x0000000002ded4b7: hlt    
<nmethod compile_id='97' compiler='C2' level='4' entry='0x0000000002ded2a0' size='1424' address='0x0000000002ded150' relocation_offset='288' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='1032' dependencies_offset='1352' handler_table_offset='1360' nul_chk_table_offset='1408' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='5638' iicount='5638' stamp='1.784'/>
<make_not_entrant thread='19128' compile_id='38' compiler='C1' level='3' stamp='1.784'/>
<writer thread='8664'/>
Decoding compiled method 0x0000000002decdd0:
Code:
[Entry Point]
  # {method} {0x000000001bc70648} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002decf40: mov    0x8(%rdx),%r10d
  0x0000000002decf44: shl    $0x3,%r10
  0x0000000002decf48: cmp    %r10,%rax
  0x0000000002decf4b: je     0x0000000002decf58
  0x0000000002decf51: jmpq   0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002decf56: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002decf58: mov    %eax,-0x6000(%rsp)
  0x0000000002decf5f: push   %rbp
  0x0000000002decf60: mov    %rsp,%rbp
  0x0000000002decf63: sub    $0x60,%rsp
  0x0000000002decf67: mov    %rdx,0x20(%rsp)
  0x0000000002decf6c: cmp    $0x0,%rdx
  0x0000000002decf70: lea    0x20(%rsp),%rdx
  0x0000000002decf75: cmove  0x20(%rsp),%rdx    ; OopMap{[32]=Oop off=59}
  0x0000000002decf7b: movabs $0x2decf7b,%r10    ;   {section_word}
  0x0000000002decf85: mov    %r10,0x1e0(%r15)
  0x0000000002decf8c: mov    %rsp,0x1d8(%r15)
  0x0000000002decf93: cmpb   $0x0,0x530fe7e7(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002decf9a: je     0x0000000002decfda
  0x0000000002decfa0: push   %rdx
  0x0000000002decfa1: movabs $0x1bc70640,%rdx   ;   {metadata({method} {0x000000001bc70648} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002decfab: mov    %r15,%rcx
  0x0000000002decfae: sub    $0x20,%rsp
  0x0000000002decfb2: test   $0xf,%esp
  0x0000000002decfb8: je     0x0000000002decfd0
  0x0000000002decfbe: sub    $0x8,%rsp
  0x0000000002decfc2: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002decfc7: add    $0x8,%rsp
  0x0000000002decfcb: jmpq   0x0000000002decfd5
  0x0000000002decfd0: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002decfd5: add    $0x20,%rsp
  0x0000000002decfd9: pop    %rdx
  0x0000000002decfda: lea    0x1f8(%r15),%rcx
  0x0000000002decfe1: movl   $0x4,0x270(%r15)
  0x0000000002decfec: callq  0x00000000556c08f0  ;   {runtime_call}
  0x0000000002decff1: vzeroupper 
  0x0000000002decff4: movl   $0x5,0x270(%r15)
  0x0000000002decfff: mov    %r15d,%ecx
  0x0000000002ded002: shr    $0x4,%ecx
  0x0000000002ded005: and    $0xffc,%ecx
  0x0000000002ded00b: movabs $0xc10000,%r10     ;   {external_word}
  0x0000000002ded015: mov    %ecx,(%r10,%rcx,1)
  0x0000000002ded019: cmpl   $0x0,0x530ff32d(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x0000000002ded023: jne    0x0000000002ded037
  0x0000000002ded029: cmpl   $0x0,0x30(%r15)
  0x0000000002ded031: je     0x0000000002ded058
  0x0000000002ded037: mov    %rax,-0x8(%rbp)
  0x0000000002ded03b: mov    %r15,%rcx
  0x0000000002ded03e: mov    %rsp,%r12
  0x0000000002ded041: sub    $0x20,%rsp
  0x0000000002ded045: and    $0xfffffffffffffff0,%rsp
  0x0000000002ded049: callq  0x00000000559236e0  ;   {runtime_call}
  0x0000000002ded04e: mov    %r12,%rsp
  0x0000000002ded051: xor    %r12,%r12
  0x0000000002ded054: mov    -0x8(%rbp),%rax
  0x0000000002ded058: movl   $0x8,0x270(%r15)
  0x0000000002ded063: cmpl   $0x1,0x29c(%r15)
  0x0000000002ded06e: je     0x0000000002ded106
  0x0000000002ded074: cmpb   $0x0,0x530fe706(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002ded07b: je     0x0000000002ded0c1
  0x0000000002ded081: mov    %rax,-0x8(%rbp)
  0x0000000002ded085: movabs $0x1bc70640,%rdx   ;   {metadata({method} {0x000000001bc70648} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002ded08f: mov    %r15,%rcx
  0x0000000002ded092: sub    $0x20,%rsp
  0x0000000002ded096: test   $0xf,%esp
  0x0000000002ded09c: je     0x0000000002ded0b4
  0x0000000002ded0a2: sub    $0x8,%rsp
  0x0000000002ded0a6: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002ded0ab: add    $0x8,%rsp
  0x0000000002ded0af: jmpq   0x0000000002ded0b9
  0x0000000002ded0b4: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002ded0b9: add    $0x20,%rsp
  0x0000000002ded0bd: mov    -0x8(%rbp),%rax
  0x0000000002ded0c1: movabs $0x0,%r10
  0x0000000002ded0cb: mov    %r10,0x1d8(%r15)
  0x0000000002ded0d2: movabs $0x0,%r10
  0x0000000002ded0dc: mov    %r10,0x1e0(%r15)
  0x0000000002ded0e3: mov    0x38(%r15),%rcx
  0x0000000002ded0e7: movl   $0x0,0x100(%rcx)
  0x0000000002ded0f1: leaveq 
  0x0000000002ded0f2: cmpq   $0x0,0x8(%r15)
  0x0000000002ded0fa: jne    0x0000000002ded101
  0x0000000002ded100: retq   
  0x0000000002ded101: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002ded106: mov    %rax,-0x8(%rbp)
  0x0000000002ded10a: mov    %rsp,%r12
  0x0000000002ded10d: sub    $0x20,%rsp
  0x0000000002ded111: and    $0xfffffffffffffff0,%rsp
  0x0000000002ded115: callq  0x000000005590c5a0  ;   {runtime_call}
  0x0000000002ded11a: mov    %r12,%rsp
  0x0000000002ded11d: xor    %r12,%r12
  0x0000000002ded120: mov    -0x8(%rbp),%rax
  0x0000000002ded124: jmpq   0x0000000002ded074
  0x0000000002ded129: hlt    
  0x0000000002ded12a: hlt    
  0x0000000002ded12b: hlt    
  0x0000000002ded12c: hlt    
  0x0000000002ded12d: hlt    
  0x0000000002ded12e: hlt    
  0x0000000002ded12f: hlt    
<nmethod compile_id='104' compile_kind='c2n' level='0' entry='0x0000000002decf40' size='864' address='0x0000000002decdd0' relocation_offset='288' consts_offset='864' insts_offset='368' method='java/lang/Object hashCode ()I' bytes='0' count='896' iicount='896' stamp='1.787'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dec550:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdefd60} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0xa0]  (sp of caller)
  0x0000000002dec6e0: mov    0x8(%rdx),%r10d
  0x0000000002dec6e4: shl    $0x3,%r10
  0x0000000002dec6e8: cmp    %rax,%r10
  0x0000000002dec6eb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dec6f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dec6fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dec700: mov    %eax,-0x6000(%rsp)
  0x0000000002dec707: push   %rbp
  0x0000000002dec708: sub    $0x90,%rsp
  0x0000000002dec70f: mov    %rdx,%rbx
  0x0000000002dec712: mov    %rdi,%r11
  0x0000000002dec715: mov    %rsi,%r13
  0x0000000002dec718: movabs $0x1be63dc8,%rdx   ;   {metadata(method data for {method} {0x000000001bdefd60} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dec722: mov    0xdc(%rdx),%esi
  0x0000000002dec728: add    $0x8,%esi
  0x0000000002dec72b: mov    %esi,0xdc(%rdx)
  0x0000000002dec731: movabs $0x1bdefd58,%rdx   ;   {metadata({method} {0x000000001bdefd60} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dec73b: and    $0x1ff8,%esi
  0x0000000002dec741: cmp    $0x0,%esi
  0x0000000002dec744: je     0x0000000002dec9d4
  0x0000000002dec74a: movabs $0x7c0030050,%rdx  ;   {metadata(&apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002dec754: mov    0x60(%r15),%rax
  0x0000000002dec758: lea    0x28(%rax),%rdi
  0x0000000002dec75c: cmp    0x70(%r15),%rdi
  0x0000000002dec760: ja     0x0000000002dec9eb
  0x0000000002dec766: mov    %rdi,0x60(%r15)
  0x0000000002dec76a: mov    0xa8(%rdx),%rcx
  0x0000000002dec771: mov    %rcx,(%rax)
  0x0000000002dec774: mov    %rdx,%rcx
  0x0000000002dec777: shr    $0x3,%rcx
  0x0000000002dec77b: mov    %ecx,0x8(%rax)
  0x0000000002dec77e: xor    %rcx,%rcx
  0x0000000002dec781: mov    %ecx,0xc(%rax)
  0x0000000002dec784: xor    %rcx,%rcx
  0x0000000002dec787: mov    %rcx,0x10(%rax)
  0x0000000002dec78b: mov    %rcx,0x18(%rax)
  0x0000000002dec78f: mov    %rcx,0x20(%rax)    ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)

  0x0000000002dec793: mov    %rax,%rsi
  0x0000000002dec796: movabs $0x1be63dc8,%rdi   ;   {metadata(method data for {method} {0x000000001bdefd60} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dec7a0: addq   $0x1,0x108(%rdi)
  0x0000000002dec7a8: movabs $0x1be63f28,%rsi   ;   {metadata(method data for {method} {0x000000001bdff1b8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002dec7b2: mov    0xdc(%rsi),%edi
  0x0000000002dec7b8: add    $0x8,%edi
  0x0000000002dec7bb: mov    %edi,0xdc(%rsi)
  0x0000000002dec7c1: movabs $0x1bdff1b0,%rsi   ;   {metadata({method} {0x000000001bdff1b8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002dec7cb: and    $0x7ffff8,%edi
  0x0000000002dec7d1: cmp    $0x0,%edi
  0x0000000002dec7d4: je     0x0000000002dec9f8
  0x0000000002dec7da: mov    %rax,%rsi
  0x0000000002dec7dd: movabs $0x1be63f28,%rdi   ;   {metadata(method data for {method} {0x000000001bdff1b8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002dec7e7: addq   $0x1,0x108(%rdi)
  0x0000000002dec7ef: movabs $0x1be63640,%rsi   ;   {metadata(method data for {method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002dec7f9: mov    0xdc(%rsi),%edi
  0x0000000002dec7ff: add    $0x8,%edi
  0x0000000002dec802: mov    %edi,0xdc(%rsi)
  0x0000000002dec808: movabs $0x1bd5b170,%rsi   ;   {metadata({method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002dec812: and    $0x7ffff8,%edi
  0x0000000002dec818: cmp    $0x0,%edi
  0x0000000002dec81b: je     0x0000000002deca0f
  0x0000000002dec821: mov    %rax,%rsi
  0x0000000002dec824: movabs $0x1be63640,%rdi   ;   {metadata(method data for {method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002dec82e: addq   $0x1,0x108(%rdi)
  0x0000000002dec836: movabs $0x1bda1c10,%rsi   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dec840: mov    0xdc(%rsi),%edi
  0x0000000002dec846: add    $0x8,%edi
  0x0000000002dec849: mov    %edi,0xdc(%rsi)
  0x0000000002dec84f: movabs $0x1bc70480,%rsi   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dec859: and    $0x7ffff8,%edi
  0x0000000002dec85f: cmp    $0x0,%edi
  0x0000000002dec862: je     0x0000000002deca26
  0x0000000002dec868: mov    %r8d,0xc(%rax)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x0000000002dec86c: mov    %r9,%r10
  0x0000000002dec86f: shr    $0x3,%r10
  0x0000000002dec873: mov    %r10d,0x10(%rax)
  0x0000000002dec877: mov    %rax,%rsi
  0x0000000002dec87a: shr    $0x9,%rsi
  0x0000000002dec87e: movabs $0xea5d000,%rdi
  0x0000000002dec888: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x0000000002dec88c: mov    %r11,%r10
  0x0000000002dec88f: shr    $0x3,%r10
  0x0000000002dec893: mov    %r10d,0x14(%rax)
  0x0000000002dec897: mov    %rax,%rsi
  0x0000000002dec89a: shr    $0x9,%rsi
  0x0000000002dec89e: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x0000000002dec8a2: mov    %r13,%r10
  0x0000000002dec8a5: shr    $0x3,%r10
  0x0000000002dec8a9: mov    %r10d,0x18(%rax)
  0x0000000002dec8ad: mov    %rax,%rsi
  0x0000000002dec8b0: shr    $0x9,%rsi
  0x0000000002dec8b4: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)

  0x0000000002dec8b8: mov    %rbx,%rsi
  0x0000000002dec8bb: movabs $0x1be63dc8,%rdx   ;   {metadata(method data for {method} {0x000000001bdefd60} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dec8c5: addq   $0x1,0x118(%rdx)
  0x0000000002dec8cd: movabs $0x1be64078,%rsi   ;   {metadata(method data for {method} {0x000000001bdefb40} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dec8d7: mov    0xdc(%rsi),%edx
  0x0000000002dec8dd: add    $0x8,%edx
  0x0000000002dec8e0: mov    %edx,0xdc(%rsi)
  0x0000000002dec8e6: movabs $0x1bdefb38,%rsi   ;   {metadata({method} {0x000000001bdefb40} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dec8f0: and    $0x7ffff8,%edx
  0x0000000002dec8f6: cmp    $0x0,%edx
  0x0000000002dec8f9: je     0x0000000002deca3d
  0x0000000002dec8ff: mov    0x34(%rbx),%esi
  0x0000000002dec902: shl    $0x3,%rsi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002dec906: mov    %rax,%r10
  0x0000000002dec909: shr    $0x3,%r10
  0x0000000002dec90d: mov    %r10d,0x34(%rbx)
  0x0000000002dec911: mov    %rbx,%rdx
  0x0000000002dec914: shr    $0x9,%rdx
  0x0000000002dec918: movb   $0x0,(%rdx,%rdi,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002dec91c: cmp    $0x0,%rsi
  0x0000000002dec920: movabs $0x1be64078,%rdi   ;   {metadata(method data for {method} {0x000000001bdefb40} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dec92a: movabs $0x108,%rdx
  0x0000000002dec934: jne    0x0000000002dec944
  0x0000000002dec93a: movabs $0x118,%rdx
  0x0000000002dec944: mov    (%rdi,%rdx,1),%rcx
  0x0000000002dec948: lea    0x1(%rcx),%rcx
  0x0000000002dec94c: mov    %rcx,(%rdi,%rdx,1)
  0x0000000002dec950: jne    0x0000000002dec992  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002dec956: mov    %rax,%r10
  0x0000000002dec959: shr    $0x3,%r10
  0x0000000002dec95d: mov    %r10d,0x30(%rbx)
  0x0000000002dec961: shr    $0x9,%rbx
  0x0000000002dec965: movabs $0xea5d000,%rsi
  0x0000000002dec96f: movb   $0x0,(%rbx,%rsi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002dec973: movabs $0x1be64078,%rsi   ;   {metadata(method data for {method} {0x000000001bdefb40} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dec97d: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002dec983: add    $0x90,%rsp
  0x0000000002dec98a: pop    %rbp
  0x0000000002dec98b: test   %eax,-0x21ec891(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dec991: retq   
  0x0000000002dec992: mov    %rsi,%r10
  0x0000000002dec995: shr    $0x3,%r10
  0x0000000002dec999: mov    %r10d,0x1c(%rax)
  0x0000000002dec99d: mov    %rax,%rdi
  0x0000000002dec9a0: shr    $0x9,%rdi
  0x0000000002dec9a4: movabs $0xea5d000,%rbx
  0x0000000002dec9ae: movb   $0x0,(%rdi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002dec9b2: mov    %rax,%r10
  0x0000000002dec9b5: shr    $0x3,%r10
  0x0000000002dec9b9: mov    %r10d,0x20(%rsi)   ; implicit exception: dispatches to 0x0000000002deca54
  0x0000000002dec9bd: shr    $0x9,%rsi
  0x0000000002dec9c1: movb   $0x0,(%rsi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)

  0x0000000002dec9c5: add    $0x90,%rsp
  0x0000000002dec9cc: pop    %rbp
  0x0000000002dec9cd: test   %eax,-0x21ec8d3(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dec9d3: retq   
  0x0000000002dec9d4: mov    %rdx,0x8(%rsp)
  0x0000000002dec9d9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dec9e1: callq  0x0000000002db1d60  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop off=774}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::newNode@-1 (line 256)
                                                ;   {runtime_call}
  0x0000000002dec9e6: jmpq   0x0000000002dec74a
  0x0000000002dec9eb: mov    %rdx,%rdx
  0x0000000002dec9ee: callq  0x0000000002dade00  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop off=787}
                                                ;*new  ; - java.util.LinkedHashMap::newNode@0 (line 256)
                                                ;   {runtime_call}
  0x0000000002dec9f3: jmpq   0x0000000002dec793
  0x0000000002dec9f8: mov    %rsi,0x8(%rsp)
  0x0000000002dec9fd: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002deca05: callq  0x0000000002db1d60  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=810}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@-1 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x0000000002deca0a: jmpq   0x0000000002dec7da
  0x0000000002deca0f: mov    %rsi,0x8(%rsp)
  0x0000000002deca14: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002deca1c: callq  0x0000000002db1d60  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=833}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x0000000002deca21: jmpq   0x0000000002dec821
  0x0000000002deca26: mov    %rsi,0x8(%rsp)
  0x0000000002deca2b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002deca33: callq  0x0000000002db1d60  ; OopMap{rbx=Oop r9=Oop r11=Oop r13=Oop rax=Oop off=856}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ; - java.util.LinkedHashMap::newNode@9 (line 256)
                                                ;   {runtime_call}
  0x0000000002deca38: jmpq   0x0000000002dec868
  0x0000000002deca3d: mov    %rsi,0x8(%rsp)
  0x0000000002deca42: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002deca4a: callq  0x0000000002db1d60  ; OopMap{rbx=Oop rax=Oop off=879}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x0000000002deca4f: jmpq   0x0000000002dec8ff
  0x0000000002deca54: callq  0x0000000002dad680  ; OopMap{rax=Oop rsi=Oop off=889}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ; - java.util.LinkedHashMap::newNode@17 (line 258)
                                                ;   {runtime_call}
  0x0000000002deca59: nop
  0x0000000002deca5a: nop
  0x0000000002deca5b: mov    0x2a8(%r15),%rax
  0x0000000002deca62: movabs $0x0,%r10
  0x0000000002deca6c: mov    %r10,0x2a8(%r15)
  0x0000000002deca73: movabs $0x0,%r10
  0x0000000002deca7d: mov    %r10,0x2b0(%r15)
  0x0000000002deca84: add    $0x90,%rsp
  0x0000000002deca8b: pop    %rbp
  0x0000000002deca8c: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002deca91: hlt    
  0x0000000002deca92: hlt    
  0x0000000002deca93: hlt    
  0x0000000002deca94: hlt    
  0x0000000002deca95: hlt    
  0x0000000002deca96: hlt    
  0x0000000002deca97: hlt    
  0x0000000002deca98: hlt    
  0x0000000002deca99: hlt    
  0x0000000002deca9a: hlt    
  0x0000000002deca9b: hlt    
  0x0000000002deca9c: hlt    
  0x0000000002deca9d: hlt    
  0x0000000002deca9e: hlt    
  0x0000000002deca9f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002decaa0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002decaa5: mov    %rsp,-0x28(%rsp)
  0x0000000002decaaa: sub    $0x80,%rsp
  0x0000000002decab1: mov    %rax,0x78(%rsp)
  0x0000000002decab6: mov    %rcx,0x70(%rsp)
  0x0000000002decabb: mov    %rdx,0x68(%rsp)
  0x0000000002decac0: mov    %rbx,0x60(%rsp)
  0x0000000002decac5: mov    %rbp,0x50(%rsp)
  0x0000000002decaca: mov    %rsi,0x48(%rsp)
  0x0000000002decacf: mov    %rdi,0x40(%rsp)
  0x0000000002decad4: mov    %r8,0x38(%rsp)
  0x0000000002decad9: mov    %r9,0x30(%rsp)
  0x0000000002decade: mov    %r10,0x28(%rsp)
  0x0000000002decae3: mov    %r11,0x20(%rsp)
  0x0000000002decae8: mov    %r12,0x18(%rsp)
  0x0000000002decaed: mov    %r13,0x10(%rsp)
  0x0000000002decaf2: mov    %r14,0x8(%rsp)
  0x0000000002decaf7: mov    %r15,(%rsp)
  0x0000000002decafb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002decb05: movabs $0x2decaa5,%rdx    ;   {internal_word}
  0x0000000002decb0f: mov    %rsp,%r8
  0x0000000002decb12: and    $0xfffffffffffffff0,%rsp
  0x0000000002decb16: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002decb1b: hlt    
[Deopt Handler Code]
  0x0000000002decb1c: movabs $0x2decb1c,%r10    ;   {section_word}
  0x0000000002decb26: push   %r10
  0x0000000002decb28: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002decb2d: hlt    
  0x0000000002decb2e: hlt    
  0x0000000002decb2f: hlt    
<nmethod compile_id='99' compiler='C1' level='3' entry='0x0000000002dec6e0' size='2160' address='0x0000000002dec550' relocation_offset='288' insts_offset='400' stub_offset='1360' scopes_data_offset='1544' scopes_pcs_offset='1800' dependencies_offset='2136' nul_chk_table_offset='2144' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='1164' iicount='1164' stamp='1.795'/>
Decoding compiled method 0x0000000002dee710:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdff1b8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap$Entry&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002dee880: mov    0x8(%rdx),%r10d
  0x0000000002dee884: shl    $0x3,%r10
  0x0000000002dee888: cmp    %rax,%r10
  0x0000000002dee88b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dee891: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dee89c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dee8a0: mov    %eax,-0x6000(%rsp)
  0x0000000002dee8a7: push   %rbp
  0x0000000002dee8a8: sub    $0x60,%rsp
  0x0000000002dee8ac: movabs $0x1be63f28,%rbx   ;   {metadata(method data for {method} {0x000000001bdff1b8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002dee8b6: mov    0xdc(%rbx),%eax
  0x0000000002dee8bc: add    $0x8,%eax
  0x0000000002dee8bf: mov    %eax,0xdc(%rbx)
  0x0000000002dee8c5: movabs $0x1bdff1b0,%rbx   ;   {metadata({method} {0x000000001bdff1b8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002dee8cf: and    $0x1ff8,%eax
  0x0000000002dee8d5: cmp    $0x0,%eax
  0x0000000002dee8d8: je     0x0000000002dee9c5  ;*aload_0
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@0 (line 195)

  0x0000000002dee8de: mov    %rdx,%rbx
  0x0000000002dee8e1: movabs $0x1be63f28,%rax   ;   {metadata(method data for {method} {0x000000001bdff1b8} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/LinkedHashMap$Entry&apos;)}
  0x0000000002dee8eb: addq   $0x1,0x108(%rax)
  0x0000000002dee8f3: movabs $0x1be63640,%rbx   ;   {metadata(method data for {method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002dee8fd: mov    0xdc(%rbx),%eax
  0x0000000002dee903: add    $0x8,%eax
  0x0000000002dee906: mov    %eax,0xdc(%rbx)
  0x0000000002dee90c: movabs $0x1bd5b170,%rbx   ;   {metadata({method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002dee916: and    $0x7ffff8,%eax
  0x0000000002dee91c: cmp    $0x0,%eax
  0x0000000002dee91f: je     0x0000000002dee9dc
  0x0000000002dee925: mov    %rdx,%rbx
  0x0000000002dee928: movabs $0x1be63640,%rax   ;   {metadata(method data for {method} {0x000000001bd5b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x0000000002dee932: addq   $0x1,0x108(%rax)
  0x0000000002dee93a: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dee944: mov    0xdc(%rbx),%eax
  0x0000000002dee94a: add    $0x8,%eax
  0x0000000002dee94d: mov    %eax,0xdc(%rbx)
  0x0000000002dee953: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dee95d: and    $0x7ffff8,%eax
  0x0000000002dee963: cmp    $0x0,%eax
  0x0000000002dee966: je     0x0000000002dee9f3
  0x0000000002dee96c: mov    %r8d,0xc(%rdx)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x0000000002dee970: mov    %r9,%r10
  0x0000000002dee973: shr    $0x3,%r10
  0x0000000002dee977: mov    %r10d,0x10(%rdx)
  0x0000000002dee97b: mov    %rdx,%rbx
  0x0000000002dee97e: shr    $0x9,%rbx
  0x0000000002dee982: movabs $0xea5d000,%rax
  0x0000000002dee98c: movb   $0x0,(%rbx,%rax,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x0000000002dee990: mov    %rdi,%r10
  0x0000000002dee993: shr    $0x3,%r10
  0x0000000002dee997: mov    %r10d,0x14(%rdx)
  0x0000000002dee99b: mov    %rdx,%rdi
  0x0000000002dee99e: shr    $0x9,%rdi
  0x0000000002dee9a2: movb   $0x0,(%rdi,%rax,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x0000000002dee9a6: mov    %rsi,%r10
  0x0000000002dee9a9: shr    $0x3,%r10
  0x0000000002dee9ad: mov    %r10d,0x18(%rdx)
  0x0000000002dee9b1: shr    $0x9,%rdx
  0x0000000002dee9b5: movb   $0x0,(%rdx,%rax,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)

  0x0000000002dee9b9: add    $0x60,%rsp
  0x0000000002dee9bd: pop    %rbp
  0x0000000002dee9be: test   %eax,-0x21ee8c4(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dee9c4: retq   
  0x0000000002dee9c5: mov    %rbx,0x8(%rsp)
  0x0000000002dee9ca: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dee9d2: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=343}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@-1 (line 195)
                                                ;   {runtime_call}
  0x0000000002dee9d7: jmpq   0x0000000002dee8de
  0x0000000002dee9dc: mov    %rbx,0x8(%rsp)
  0x0000000002dee9e1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dee9e9: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=366}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ;   {runtime_call}
  0x0000000002dee9ee: jmpq   0x0000000002dee925
  0x0000000002dee9f3: mov    %rbx,0x8(%rsp)
  0x0000000002dee9f8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002deea00: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=389}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ; - java.util.LinkedHashMap$Entry::&lt;init&gt;@6 (line 195)
                                                ;   {runtime_call}
  0x0000000002deea05: jmpq   0x0000000002dee96c
  0x0000000002deea0a: nop
  0x0000000002deea0b: nop
  0x0000000002deea0c: mov    0x2a8(%r15),%rax
  0x0000000002deea13: movabs $0x0,%r10
  0x0000000002deea1d: mov    %r10,0x2a8(%r15)
  0x0000000002deea24: movabs $0x0,%r10
  0x0000000002deea2e: mov    %r10,0x2b0(%r15)
  0x0000000002deea35: add    $0x60,%rsp
  0x0000000002deea39: pop    %rbp
  0x0000000002deea3a: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002deea3f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002deea40: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002deea45: mov    %rsp,-0x28(%rsp)
  0x0000000002deea4a: sub    $0x80,%rsp
  0x0000000002deea51: mov    %rax,0x78(%rsp)
  0x0000000002deea56: mov    %rcx,0x70(%rsp)
  0x0000000002deea5b: mov    %rdx,0x68(%rsp)
  0x0000000002deea60: mov    %rbx,0x60(%rsp)
  0x0000000002deea65: mov    %rbp,0x50(%rsp)
  0x0000000002deea6a: mov    %rsi,0x48(%rsp)
  0x0000000002deea6f: mov    %rdi,0x40(%rsp)
  0x0000000002deea74: mov    %r8,0x38(%rsp)
  0x0000000002deea79: mov    %r9,0x30(%rsp)
  0x0000000002deea7e: mov    %r10,0x28(%rsp)
  0x0000000002deea83: mov    %r11,0x20(%rsp)
  0x0000000002deea88: mov    %r12,0x18(%rsp)
  0x0000000002deea8d: mov    %r13,0x10(%rsp)
  0x0000000002deea92: mov    %r14,0x8(%rsp)
  0x0000000002deea97: mov    %r15,(%rsp)
  0x0000000002deea9b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002deeaa5: movabs $0x2deea45,%rdx    ;   {internal_word}
  0x0000000002deeaaf: mov    %rsp,%r8
  0x0000000002deeab2: and    $0xfffffffffffffff0,%rsp
  0x0000000002deeab6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002deeabb: hlt    
[Deopt Handler Code]
  0x0000000002deeabc: movabs $0x2deeabc,%r10    ;   {section_word}
  0x0000000002deeac6: push   %r10
  0x0000000002deeac8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002deeacd: hlt    
  0x0000000002deeace: hlt    
  0x0000000002deeacf: hlt    
<nmethod compile_id='100' compiler='C1' level='3' entry='0x0000000002dee880' size='1256' address='0x0000000002dee710' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1088' dependencies_offset='1248' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='1164' iicount='1164' stamp='1.801'/>
Decoding compiled method 0x0000000002dee210:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdefb40} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8:r8     = &apos;java/util/LinkedHashMap$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002dee380: mov    0x8(%rdx),%r10d
  0x0000000002dee384: shl    $0x3,%r10
  0x0000000002dee388: cmp    %rax,%r10
  0x0000000002dee38b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dee391: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dee39c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dee3a0: mov    %eax,-0x6000(%rsp)
  0x0000000002dee3a7: push   %rbp
  0x0000000002dee3a8: sub    $0x30,%rsp
  0x0000000002dee3ac: movabs $0x1be64078,%rsi   ;   {metadata(method data for {method} {0x000000001bdefb40} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dee3b6: mov    0xdc(%rsi),%edi
  0x0000000002dee3bc: add    $0x8,%edi
  0x0000000002dee3bf: mov    %edi,0xdc(%rsi)
  0x0000000002dee3c5: movabs $0x1bdefb38,%rsi   ;   {metadata({method} {0x000000001bdefb40} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dee3cf: and    $0x1ff8,%edi
  0x0000000002dee3d5: cmp    $0x0,%edi
  0x0000000002dee3d8: je     0x0000000002dee4b7  ;*aload_0
                                                ; - java.util.LinkedHashMap::linkNodeLast@0 (line 223)

  0x0000000002dee3de: mov    0x34(%rdx),%esi
  0x0000000002dee3e1: shl    $0x3,%rsi          ;*getfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@1 (line 223)

  0x0000000002dee3e5: mov    %r8,%r10
  0x0000000002dee3e8: shr    $0x3,%r10
  0x0000000002dee3ec: mov    %r10d,0x34(%rdx)
  0x0000000002dee3f0: mov    %rdx,%rdi
  0x0000000002dee3f3: shr    $0x9,%rdi
  0x0000000002dee3f7: movabs $0xea5d000,%rbx
  0x0000000002dee401: movb   $0x0,(%rdi,%rbx,1)  ;*putfield tail
                                                ; - java.util.LinkedHashMap::linkNodeLast@7 (line 224)

  0x0000000002dee405: cmp    $0x0,%rsi
  0x0000000002dee409: movabs $0x1be64078,%rdi   ;   {metadata(method data for {method} {0x000000001bdefb40} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dee413: movabs $0x108,%rbx
  0x0000000002dee41d: jne    0x0000000002dee42d
  0x0000000002dee423: movabs $0x118,%rbx
  0x0000000002dee42d: mov    (%rdi,%rbx,1),%rax
  0x0000000002dee431: lea    0x1(%rax),%rax
  0x0000000002dee435: mov    %rax,(%rdi,%rbx,1)
  0x0000000002dee439: jne    0x0000000002dee478  ;*ifnonnull
                                                ; - java.util.LinkedHashMap::linkNodeLast@11 (line 225)

  0x0000000002dee43f: mov    %r8,%r10
  0x0000000002dee442: shr    $0x3,%r10
  0x0000000002dee446: mov    %r10d,0x30(%rdx)
  0x0000000002dee44a: shr    $0x9,%rdx
  0x0000000002dee44e: movabs $0xea5d000,%rsi
  0x0000000002dee458: movb   $0x0,(%rdx,%rsi,1)  ;*putfield head
                                                ; - java.util.LinkedHashMap::linkNodeLast@16 (line 226)

  0x0000000002dee45c: movabs $0x1be64078,%rsi   ;   {metadata(method data for {method} {0x000000001bdefb40} &apos;linkNodeLast&apos; &apos;(Ljava/util/LinkedHashMap$Entry;)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dee466: incl   0x128(%rsi)        ;*goto
                                                ; - java.util.LinkedHashMap::linkNodeLast@19 (line 226)

  0x0000000002dee46c: add    $0x30,%rsp
  0x0000000002dee470: pop    %rbp
  0x0000000002dee471: test   %eax,-0x21ee377(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dee477: retq   
  0x0000000002dee478: mov    %rsi,%r10
  0x0000000002dee47b: shr    $0x3,%r10
  0x0000000002dee47f: mov    %r10d,0x1c(%r8)    ; implicit exception: dispatches to 0x0000000002dee4ce
  0x0000000002dee483: mov    %r8,%rdi
  0x0000000002dee486: shr    $0x9,%rdi
  0x0000000002dee48a: movabs $0xea5d000,%rbx
  0x0000000002dee494: movb   $0x0,(%rdi,%rbx,1)  ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)

  0x0000000002dee498: mov    %r8,%r10
  0x0000000002dee49b: shr    $0x3,%r10
  0x0000000002dee49f: mov    %r10d,0x20(%rsi)   ; implicit exception: dispatches to 0x0000000002dee4d3
  0x0000000002dee4a3: shr    $0x9,%rsi
  0x0000000002dee4a7: movb   $0x0,(%rsi,%rbx,1)  ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)

  0x0000000002dee4ab: add    $0x30,%rsp
  0x0000000002dee4af: pop    %rbp
  0x0000000002dee4b0: test   %eax,-0x21ee3b6(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dee4b6: retq   
  0x0000000002dee4b7: mov    %rsi,0x8(%rsp)
  0x0000000002dee4bc: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dee4c4: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=329}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::linkNodeLast@-1 (line 223)
                                                ;   {runtime_call}
  0x0000000002dee4c9: jmpq   0x0000000002dee3de
  0x0000000002dee4ce: callq  0x0000000002dad680  ; OopMap{rsi=Oop r8=Oop off=339}
                                                ;*putfield before
                                                ; - java.util.LinkedHashMap::linkNodeLast@24 (line 228)
                                                ;   {runtime_call}
  0x0000000002dee4d3: callq  0x0000000002dad680  ; OopMap{rsi=Oop off=344}
                                                ;*putfield after
                                                ; - java.util.LinkedHashMap::linkNodeLast@29 (line 229)
                                                ;   {runtime_call}
  0x0000000002dee4d8: nop
  0x0000000002dee4d9: nop
  0x0000000002dee4da: mov    0x2a8(%r15),%rax
  0x0000000002dee4e1: movabs $0x0,%r10
  0x0000000002dee4eb: mov    %r10,0x2a8(%r15)
  0x0000000002dee4f2: movabs $0x0,%r10
  0x0000000002dee4fc: mov    %r10,0x2b0(%r15)
  0x0000000002dee503: add    $0x30,%rsp
  0x0000000002dee507: pop    %rbp
  0x0000000002dee508: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dee50d: hlt    
  0x0000000002dee50e: hlt    
  0x0000000002dee50f: hlt    
  0x0000000002dee510: hlt    
  0x0000000002dee511: hlt    
  0x0000000002dee512: hlt    
  0x0000000002dee513: hlt    
  0x0000000002dee514: hlt    
  0x0000000002dee515: hlt    
  0x0000000002dee516: hlt    
  0x0000000002dee517: hlt    
  0x0000000002dee518: hlt    
  0x0000000002dee519: hlt    
  0x0000000002dee51a: hlt    
  0x0000000002dee51b: hlt    
  0x0000000002dee51c: hlt    
  0x0000000002dee51d: hlt    
  0x0000000002dee51e: hlt    
  0x0000000002dee51f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dee520: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dee525: mov    %rsp,-0x28(%rsp)
  0x0000000002dee52a: sub    $0x80,%rsp
  0x0000000002dee531: mov    %rax,0x78(%rsp)
  0x0000000002dee536: mov    %rcx,0x70(%rsp)
  0x0000000002dee53b: mov    %rdx,0x68(%rsp)
  0x0000000002dee540: mov    %rbx,0x60(%rsp)
  0x0000000002dee545: mov    %rbp,0x50(%rsp)
  0x0000000002dee54a: mov    %rsi,0x48(%rsp)
  0x0000000002dee54f: mov    %rdi,0x40(%rsp)
  0x0000000002dee554: mov    %r8,0x38(%rsp)
  0x0000000002dee559: mov    %r9,0x30(%rsp)
  0x0000000002dee55e: mov    %r10,0x28(%rsp)
  0x0000000002dee563: mov    %r11,0x20(%rsp)
  0x0000000002dee568: mov    %r12,0x18(%rsp)
  0x0000000002dee56d: mov    %r13,0x10(%rsp)
  0x0000000002dee572: mov    %r14,0x8(%rsp)
  0x0000000002dee577: mov    %r15,(%rsp)
  0x0000000002dee57b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dee585: movabs $0x2dee525,%rdx    ;   {internal_word}
  0x0000000002dee58f: mov    %rsp,%r8
  0x0000000002dee592: and    $0xfffffffffffffff0,%rsp
  0x0000000002dee596: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dee59b: hlt    
[Deopt Handler Code]
  0x0000000002dee59c: movabs $0x2dee59c,%r10    ;   {section_word}
  0x0000000002dee5a6: push   %r10
  0x0000000002dee5a8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dee5ad: hlt    
  0x0000000002dee5ae: hlt    
  0x0000000002dee5af: hlt    
<nmethod compile_id='101' compiler='C1' level='3' entry='0x0000000002dee380' size='1264' address='0x0000000002dee210' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='936' scopes_pcs_offset='1024' dependencies_offset='1232' nul_chk_table_offset='1240' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='1164' iicount='1164' stamp='1.806'/>
Decoding compiled method 0x0000000002ded8d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdf0110} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8        = boolean
  #           [sp+0x90]  (sp of caller)
  0x0000000002deda60: mov    0x8(%rdx),%r10d
  0x0000000002deda64: shl    $0x3,%r10
  0x0000000002deda68: cmp    %rax,%r10
  0x0000000002deda6b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002deda71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002deda7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002deda80: mov    %eax,-0x6000(%rsp)
  0x0000000002deda87: push   %rbp
  0x0000000002deda88: sub    $0x80,%rsp
  0x0000000002deda8f: movabs $0x1be641d8,%rsi   ;   {metadata(method data for {method} {0x000000001bdf0110} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002deda99: mov    0xdc(%rsi),%edi
  0x0000000002deda9f: add    $0x8,%edi
  0x0000000002dedaa2: mov    %edi,0xdc(%rsi)
  0x0000000002dedaa8: movabs $0x1bdf0108,%rsi   ;   {metadata({method} {0x000000001bdf0110} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dedab2: and    $0x1ff8,%edi
  0x0000000002dedab8: cmp    $0x0,%edi
  0x0000000002dedabb: je     0x0000000002dede5b  ;*iload_1
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@0 (line 299)

  0x0000000002dedac1: cmp    $0x0,%r8d
  0x0000000002dedac5: movabs $0x1be641d8,%r8    ;   {metadata(method data for {method} {0x000000001bdf0110} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dedacf: movabs $0x108,%rsi
  0x0000000002dedad9: je     0x0000000002dedae9
  0x0000000002dedadf: movabs $0x118,%rsi
  0x0000000002dedae9: mov    (%r8,%rsi,1),%rdi
  0x0000000002dedaed: lea    0x1(%rdi),%rdi
  0x0000000002dedaf1: mov    %rdi,(%r8,%rsi,1)
  0x0000000002dedaf5: je     0x0000000002dede4c  ;*ifeq
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@1 (line 299)

  0x0000000002dedafb: mov    0x30(%rdx),%esi
  0x0000000002dedafe: shl    $0x3,%rsi          ;*getfield head
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@5 (line 299)

  0x0000000002dedb02: cmp    $0x0,%rsi
  0x0000000002dedb06: movabs $0x1be641d8,%r8    ;   {metadata(method data for {method} {0x000000001bdf0110} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dedb10: movabs $0x128,%rdi
  0x0000000002dedb1a: je     0x0000000002dedb2a
  0x0000000002dedb20: movabs $0x138,%rdi
  0x0000000002dedb2a: mov    (%r8,%rdi,1),%rbx
  0x0000000002dedb2e: lea    0x1(%rbx),%rbx
  0x0000000002dedb32: mov    %rbx,(%r8,%rdi,1)
  0x0000000002dedb36: je     0x0000000002dede4c  ;*ifnull
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@10 (line 299)

  0x0000000002dedb3c: mov    %rdx,%r8
  0x0000000002dedb3f: movabs $0x1be641d8,%rdi   ;   {metadata(method data for {method} {0x000000001bdf0110} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dedb49: mov    0x8(%r8),%r8d
  0x0000000002dedb4d: shl    $0x3,%r8
  0x0000000002dedb51: cmp    0x150(%rdi),%r8
  0x0000000002dedb58: jne    0x0000000002dedb67
  0x0000000002dedb5a: addq   $0x1,0x158(%rdi)
  0x0000000002dedb62: jmpq   0x0000000002dedbcd
  0x0000000002dedb67: cmp    0x160(%rdi),%r8
  0x0000000002dedb6e: jne    0x0000000002dedb7d
  0x0000000002dedb70: addq   $0x1,0x168(%rdi)
  0x0000000002dedb78: jmpq   0x0000000002dedbcd
  0x0000000002dedb7d: cmpq   $0x0,0x150(%rdi)
  0x0000000002dedb88: jne    0x0000000002dedba1
  0x0000000002dedb8a: mov    %r8,0x150(%rdi)
  0x0000000002dedb91: movq   $0x1,0x158(%rdi)
  0x0000000002dedb9c: jmpq   0x0000000002dedbcd
  0x0000000002dedba1: cmpq   $0x0,0x160(%rdi)
  0x0000000002dedbac: jne    0x0000000002dedbc5
  0x0000000002dedbae: mov    %r8,0x160(%rdi)
  0x0000000002dedbb5: movq   $0x1,0x168(%rdi)
  0x0000000002dedbc0: jmpq   0x0000000002dedbcd
  0x0000000002dedbc5: addq   $0x1,0x148(%rdi)
  0x0000000002dedbcd: mov    %rsi,%r8
  0x0000000002dedbd0: mov    %rdx,%rdi
  0x0000000002dedbd3: mov    %rdi,%rdx          ;*invokevirtual removeEldestEntry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@15 (line 299)

  0x0000000002dedbd6: mov    %rdi,0x60(%rsp)
  0x0000000002dedbdb: mov    %rsi,0x58(%rsp)
  0x0000000002dedbe0: nop
  0x0000000002dedbe1: nop
  0x0000000002dedbe2: nop
  0x0000000002dedbe3: nop
  0x0000000002dedbe4: nop
  0x0000000002dedbe5: movabs $0xffffffffffffffff,%rax
  0x0000000002dedbef: callq  0x0000000002cf63e0  ; OopMap{[88]=Oop [96]=Oop off=404}
                                                ;*invokevirtual removeEldestEntry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@15 (line 299)
                                                ;   {virtual_call}
  0x0000000002dedbf4: cmp    $0x0,%eax
  0x0000000002dedbf7: movabs $0x1be641d8,%rdx   ;   {metadata(method data for {method} {0x000000001bdf0110} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dedc01: movabs $0x178,%rsi
  0x0000000002dedc0b: je     0x0000000002dedc1b
  0x0000000002dedc11: movabs $0x188,%rsi
  0x0000000002dedc1b: mov    (%rdx,%rsi,1),%rdi
  0x0000000002dedc1f: lea    0x1(%rdi),%rdi
  0x0000000002dedc23: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002dedc27: je     0x0000000002dede4c  ;*ifeq
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@18 (line 299)

  0x0000000002dedc2d: mov    0x58(%rsp),%rsi
  0x0000000002dedc32: mov    0x10(%rsi),%esi    ; implicit exception: dispatches to 0x0000000002dede72
  0x0000000002dedc35: shl    $0x3,%rsi          ;*getfield key
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@22 (line 300)

  0x0000000002dedc39: movabs $0x1be641d8,%rdx   ;   {metadata(method data for {method} {0x000000001bdf0110} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dedc43: addq   $0x1,0x198(%rdx)
  0x0000000002dedc4b: movabs $0x1be5d8d8,%rdx   ;   {metadata(method data for {method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dedc55: mov    0xdc(%rdx),%edi
  0x0000000002dedc5b: add    $0x8,%edi
  0x0000000002dedc5e: mov    %edi,0xdc(%rdx)
  0x0000000002dedc64: movabs $0x1bd562b8,%rdx   ;   {metadata({method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dedc6e: and    $0x7ffff8,%edi
  0x0000000002dedc74: cmp    $0x0,%edi
  0x0000000002dedc77: je     0x0000000002dede77
  0x0000000002dedc7d: cmp    $0x0,%rsi
  0x0000000002dedc81: movabs $0x1be5d8d8,%rdx   ;   {metadata(method data for {method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dedc8b: movabs $0x108,%rdi
  0x0000000002dedc95: jne    0x0000000002dedca5
  0x0000000002dedc9b: movabs $0x118,%rdi
  0x0000000002dedca5: mov    (%rdx,%rdi,1),%rbx
  0x0000000002dedca9: lea    0x1(%rbx),%rbx
  0x0000000002dedcad: mov    %rbx,(%rdx,%rdi,1)
  0x0000000002dedcb1: jne    0x0000000002dedcd6  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x0000000002dedcb7: movabs $0x1be5d8d8,%rdx   ;   {metadata(method data for {method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dedcc1: incl   0x128(%rdx)
  0x0000000002dedcc7: mov    $0x0,%edi
  0x0000000002dedccc: mov    %rsi,0x68(%rsp)
  0x0000000002dedcd1: jmpq   0x0000000002dedd91  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x0000000002dedcd6: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002dede8e
  0x0000000002dedcd9: mov    %rsi,%rdx
  0x0000000002dedcdc: movabs $0x1be5d8d8,%rdi   ;   {metadata(method data for {method} {0x000000001bd562c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x0000000002dedce6: mov    0x8(%rdx),%edx
  0x0000000002dedce9: shl    $0x3,%rdx
  0x0000000002dedced: cmp    0x148(%rdi),%rdx
  0x0000000002dedcf4: jne    0x0000000002dedd03
  0x0000000002dedcf6: addq   $0x1,0x150(%rdi)
  0x0000000002dedcfe: jmpq   0x0000000002dedd69
  0x0000000002dedd03: cmp    0x158(%rdi),%rdx
  0x0000000002dedd0a: jne    0x0000000002dedd19
  0x0000000002dedd0c: addq   $0x1,0x160(%rdi)
  0x0000000002dedd14: jmpq   0x0000000002dedd69
  0x0000000002dedd19: cmpq   $0x0,0x148(%rdi)
  0x0000000002dedd24: jne    0x0000000002dedd3d
  0x0000000002dedd26: mov    %rdx,0x148(%rdi)
  0x0000000002dedd2d: movq   $0x1,0x150(%rdi)
  0x0000000002dedd38: jmpq   0x0000000002dedd69
  0x0000000002dedd3d: cmpq   $0x0,0x158(%rdi)
  0x0000000002dedd48: jne    0x0000000002dedd61
  0x0000000002dedd4a: mov    %rdx,0x158(%rdi)
  0x0000000002dedd51: movq   $0x1,0x160(%rdi)
  0x0000000002dedd5c: jmpq   0x0000000002dedd69
  0x0000000002dedd61: addq   $0x1,0x140(%rdi)
  0x0000000002dedd69: mov    %rsi,%rdx          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x0000000002dedd6c: mov    %rsi,0x68(%rsp)
  0x0000000002dedd71: nop
  0x0000000002dedd72: nop
  0x0000000002dedd73: nop
  0x0000000002dedd74: nop
  0x0000000002dedd75: movabs $0xffffffffffffffff,%rax
  0x0000000002dedd7f: callq  0x0000000002cf63e0  ; OopMap{[96]=Oop [104]=Oop off=804}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {virtual_call}
  0x0000000002dedd84: mov    %rax,%r8
  0x0000000002dedd87: shr    $0x10,%r8d
  0x0000000002dedd8b: xor    %rax,%r8
  0x0000000002dedd8e: mov    %r8,%rdi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)

  0x0000000002dedd91: mov    0x68(%rsp),%rsi
  0x0000000002dedd96: mov    0x60(%rsp),%rdx
  0x0000000002dedd9b: mov    %rdx,%r8
  0x0000000002dedd9e: movabs $0x1be641d8,%r9    ;   {metadata(method data for {method} {0x000000001bdf0110} &apos;afterNodeInsertion&apos; &apos;(Z)V&apos; in &apos;java/util/LinkedHashMap&apos;)}
  0x0000000002dedda8: mov    0x8(%r8),%r8d
  0x0000000002deddac: shl    $0x3,%r8
  0x0000000002deddb0: cmp    0x1b0(%r9),%r8
  0x0000000002deddb7: jne    0x0000000002deddc6
  0x0000000002deddb9: addq   $0x1,0x1b8(%r9)
  0x0000000002deddc1: jmpq   0x0000000002dede2c
  0x0000000002deddc6: cmp    0x1c0(%r9),%r8
  0x0000000002deddcd: jne    0x0000000002dedddc
  0x0000000002deddcf: addq   $0x1,0x1c8(%r9)
  0x0000000002deddd7: jmpq   0x0000000002dede2c
  0x0000000002dedddc: cmpq   $0x0,0x1b0(%r9)
  0x0000000002dedde7: jne    0x0000000002dede00
  0x0000000002dedde9: mov    %r8,0x1b0(%r9)
  0x0000000002deddf0: movq   $0x1,0x1b8(%r9)
  0x0000000002deddfb: jmpq   0x0000000002dede2c
  0x0000000002dede00: cmpq   $0x0,0x1c0(%r9)
  0x0000000002dede0b: jne    0x0000000002dede24
  0x0000000002dede0d: mov    %r8,0x1c0(%r9)
  0x0000000002dede14: movq   $0x1,0x1c8(%r9)
  0x0000000002dede1f: jmpq   0x0000000002dede2c
  0x0000000002dede24: addq   $0x1,0x1a8(%r9)
  0x0000000002dede2c: mov    %rdi,%r8
  0x0000000002dede2f: mov    %rsi,%r9
  0x0000000002dede32: movabs $0x0,%rdi          ;   {oop(NULL)}
  0x0000000002dede3c: mov    $0x0,%esi
  0x0000000002dede41: mov    $0x1,%ecx          ;*invokevirtual removeNode
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@35 (line 301)

  0x0000000002dede46: nop
  0x0000000002dede47: callq  0x0000000002cf61a0  ; OopMap{off=1004}
                                                ;*invokevirtual removeNode
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@35 (line 301)
                                                ;   {optimized virtual_call}
  0x0000000002dede4c: add    $0x80,%rsp
  0x0000000002dede53: pop    %rbp
  0x0000000002dede54: test   %eax,-0x21edd5a(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dede5a: retq   
  0x0000000002dede5b: mov    %rsi,0x8(%rsp)
  0x0000000002dede60: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dede68: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=1037}
                                                ;*synchronization entry
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@-1 (line 299)
                                                ;   {runtime_call}
  0x0000000002dede6d: jmpq   0x0000000002dedac1
  0x0000000002dede72: callq  0x0000000002dad680  ; OopMap{[96]=Oop off=1047}
                                                ;*getfield key
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@22 (line 300)
                                                ;   {runtime_call}
  0x0000000002dede77: mov    %rdx,0x8(%rsp)
  0x0000000002dede7c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dede84: callq  0x0000000002db1d60  ; OopMap{[96]=Oop rsi=Oop off=1065}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {runtime_call}
  0x0000000002dede89: jmpq   0x0000000002dedc7d
  0x0000000002dede8e: callq  0x0000000002dad680  ; OopMap{[96]=Oop rsi=Oop off=1075}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.LinkedHashMap::afterNodeInsertion@28 (line 301)
                                                ;   {runtime_call}
  0x0000000002dede93: nop
  0x0000000002dede94: nop
  0x0000000002dede95: mov    0x2a8(%r15),%rax
  0x0000000002dede9c: movabs $0x0,%r10
  0x0000000002dedea6: mov    %r10,0x2a8(%r15)
  0x0000000002dedead: movabs $0x0,%r10
  0x0000000002dedeb7: mov    %r10,0x2b0(%r15)
  0x0000000002dedebe: add    $0x80,%rsp
  0x0000000002dedec5: pop    %rbp
  0x0000000002dedec6: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dedecb: hlt    
  0x0000000002dedecc: hlt    
  0x0000000002dedecd: hlt    
  0x0000000002dedece: hlt    
  0x0000000002dedecf: hlt    
  0x0000000002deded0: hlt    
  0x0000000002deded1: hlt    
  0x0000000002deded2: hlt    
  0x0000000002deded3: hlt    
  0x0000000002deded4: hlt    
  0x0000000002deded5: hlt    
  0x0000000002deded6: hlt    
  0x0000000002deded7: hlt    
  0x0000000002deded8: hlt    
  0x0000000002deded9: hlt    
  0x0000000002dededa: hlt    
  0x0000000002dededb: hlt    
  0x0000000002dededc: hlt    
  0x0000000002dededd: hlt    
  0x0000000002dedede: hlt    
  0x0000000002dededf: hlt    
[Stub Code]
  0x0000000002dedee0: nop                       ;   {no_reloc}
  0x0000000002dedee1: nop
  0x0000000002dedee2: nop
  0x0000000002dedee3: nop
  0x0000000002dedee4: nop
  0x0000000002dedee5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dedeef: jmpq   0x0000000002dedeef  ;   {runtime_call}
  0x0000000002dedef4: nop
  0x0000000002dedef5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dedeff: jmpq   0x0000000002dedeff  ;   {runtime_call}
  0x0000000002dedf04: nop
  0x0000000002dedf05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dedf0f: jmpq   0x0000000002dedf0f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dedf14: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dedf19: mov    %rsp,-0x28(%rsp)
  0x0000000002dedf1e: sub    $0x80,%rsp
  0x0000000002dedf25: mov    %rax,0x78(%rsp)
  0x0000000002dedf2a: mov    %rcx,0x70(%rsp)
  0x0000000002dedf2f: mov    %rdx,0x68(%rsp)
  0x0000000002dedf34: mov    %rbx,0x60(%rsp)
  0x0000000002dedf39: mov    %rbp,0x50(%rsp)
  0x0000000002dedf3e: mov    %rsi,0x48(%rsp)
  0x0000000002dedf43: mov    %rdi,0x40(%rsp)
  0x0000000002dedf48: mov    %r8,0x38(%rsp)
  0x0000000002dedf4d: mov    %r9,0x30(%rsp)
  0x0000000002dedf52: mov    %r10,0x28(%rsp)
  0x0000000002dedf57: mov    %r11,0x20(%rsp)
  0x0000000002dedf5c: mov    %r12,0x18(%rsp)
  0x0000000002dedf61: mov    %r13,0x10(%rsp)
  0x0000000002dedf66: mov    %r14,0x8(%rsp)
  0x0000000002dedf6b: mov    %r15,(%rsp)
  0x0000000002dedf6f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dedf79: movabs $0x2dedf19,%rdx    ;   {internal_word}
  0x0000000002dedf83: mov    %rsp,%r8
  0x0000000002dedf86: and    $0xfffffffffffffff0,%rsp
  0x0000000002dedf8a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dedf8f: hlt    
[Deopt Handler Code]
  0x0000000002dedf90: movabs $0x2dedf90,%r10    ;   {section_word}
  0x0000000002dedf9a: push   %r10
  0x0000000002dedf9c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dedfa1: hlt    
  0x0000000002dedfa2: hlt    
  0x0000000002dedfa3: hlt    
  0x0000000002dedfa4: hlt    
  0x0000000002dedfa5: hlt    
  0x0000000002dedfa6: hlt    
  0x0000000002dedfa7: hlt    
<nmethod compile_id='102' compiler='C1' level='3' entry='0x0000000002deda60' size='2336' address='0x0000000002ded8d0' relocation_offset='288' insts_offset='400' stub_offset='1552' scopes_data_offset='1768' scopes_pcs_offset='1968' dependencies_offset='2304' nul_chk_table_offset='2312' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='1164' iicount='1164' stamp='1.815'/>
Decoding compiled method 0x0000000002df91d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdf0978} &apos;removeEldestEntry&apos; &apos;(Ljava/util/Map$Entry;)Z&apos; in &apos;java/util/LinkedHashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/LinkedHashMap&apos;
  # parm0:    r8:r8     = &apos;java/util/Map$Entry&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002df9320: mov    0x8(%rdx),%r10d
  0x0000000002df9324: shl    $0x3,%r10
  0x0000000002df9328: cmp    %rax,%r10
  0x0000000002df932b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df9331: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df933c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df9340: mov    %eax,-0x6000(%rsp)
  0x0000000002df9347: push   %rbp
  0x0000000002df9348: sub    $0x30,%rsp         ;*iconst_0
                                                ; - java.util.LinkedHashMap::removeEldestEntry@0 (line 509)

  0x0000000002df934c: mov    $0x0,%eax
  0x0000000002df9351: add    $0x30,%rsp
  0x0000000002df9355: pop    %rbp
  0x0000000002df9356: test   %eax,-0x21f925c(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df935c: retq   
  0x0000000002df935d: nop
  0x0000000002df935e: nop
  0x0000000002df935f: mov    0x2a8(%r15),%rax
  0x0000000002df9366: movabs $0x0,%r10
  0x0000000002df9370: mov    %r10,0x2a8(%r15)
  0x0000000002df9377: movabs $0x0,%r10
  0x0000000002df9381: mov    %r10,0x2b0(%r15)
  0x0000000002df9388: add    $0x30,%rsp
  0x0000000002df938c: pop    %rbp
  0x0000000002df938d: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df9392: hlt    
  0x0000000002df9393: hlt    
  0x0000000002df9394: hlt    
  0x0000000002df9395: hlt    
  0x0000000002df9396: hlt    
  0x0000000002df9397: hlt    
  0x0000000002df9398: hlt    
  0x0000000002df9399: hlt    
  0x0000000002df939a: hlt    
  0x0000000002df939b: hlt    
  0x0000000002df939c: hlt    
  0x0000000002df939d: hlt    
  0x0000000002df939e: hlt    
  0x0000000002df939f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002df93a0: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002df93a5: mov    %rsp,-0x28(%rsp)
  0x0000000002df93aa: sub    $0x80,%rsp
  0x0000000002df93b1: mov    %rax,0x78(%rsp)
  0x0000000002df93b6: mov    %rcx,0x70(%rsp)
  0x0000000002df93bb: mov    %rdx,0x68(%rsp)
  0x0000000002df93c0: mov    %rbx,0x60(%rsp)
  0x0000000002df93c5: mov    %rbp,0x50(%rsp)
  0x0000000002df93ca: mov    %rsi,0x48(%rsp)
  0x0000000002df93cf: mov    %rdi,0x40(%rsp)
  0x0000000002df93d4: mov    %r8,0x38(%rsp)
  0x0000000002df93d9: mov    %r9,0x30(%rsp)
  0x0000000002df93de: mov    %r10,0x28(%rsp)
  0x0000000002df93e3: mov    %r11,0x20(%rsp)
  0x0000000002df93e8: mov    %r12,0x18(%rsp)
  0x0000000002df93ed: mov    %r13,0x10(%rsp)
  0x0000000002df93f2: mov    %r14,0x8(%rsp)
  0x0000000002df93f7: mov    %r15,(%rsp)
  0x0000000002df93fb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df9405: movabs $0x2df93a5,%rdx    ;   {internal_word}
  0x0000000002df940f: mov    %rsp,%r8
  0x0000000002df9412: and    $0xfffffffffffffff0,%rsp
  0x0000000002df9416: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df941b: hlt    
[Deopt Handler Code]
  0x0000000002df941c: movabs $0x2df941c,%r10    ;   {section_word}
  0x0000000002df9426: push   %r10
  0x0000000002df9428: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df942d: hlt    
  0x0000000002df942e: hlt    
  0x0000000002df942f: hlt    
<nmethod compile_id='103' compiler='C1' level='1' entry='0x0000000002df9320' size='680' address='0x0000000002df91d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='587' iicount='587' stamp='1.817'/>
<writer thread='8664'/>
<task_queued compile_id='105' method='java/util/Hashtable put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='104' count='256' backedge_count='104' iicount='256' level='3' stamp='1.966' comment='tiered' hot_count='256'/>
<task_queued compile_id='106' method='java/util/Hashtable addEntry (ILjava/lang/Object;Ljava/lang/Object;I)V' bytes='87' count='256' iicount='256' level='3' stamp='1.966' comment='tiered' hot_count='256'/>
<task_queued compile_id='107' method='java/lang/StringBuffer &lt;init&gt; (I)V' bytes='6' count='1280' iicount='1280' level='3' stamp='1.967' comment='tiered' hot_count='1280'/>
<task_queued compile_id='108' method='java/lang/StringBuffer toString ()Ljava/lang/String;' bytes='36' count='1280' iicount='1280' level='3' stamp='1.967' comment='tiered' hot_count='1280'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002df8410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;
  # this:     rdx:rdx   = &apos;java/util/Hashtable&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x0000000002df85e0: mov    0x8(%rdx),%r10d
  0x0000000002df85e4: shl    $0x3,%r10
  0x0000000002df85e8: cmp    %rax,%r10
  0x0000000002df85eb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df85f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df85fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df8600: mov    %eax,-0x6000(%rsp)
  0x0000000002df8607: push   %rbp
  0x0000000002df8608: sub    $0x80,%rsp
  0x0000000002df860f: mov    %r8,0x38(%rsp)
  0x0000000002df8614: lea    0x68(%rsp),%rsi
  0x0000000002df8619: mov    %rdx,0x8(%rsi)
  0x0000000002df861d: mov    (%rdx),%rax
  0x0000000002df8620: mov    %rax,%rdi
  0x0000000002df8623: and    $0x7,%rdi
  0x0000000002df8627: cmp    $0x5,%rdi
  0x0000000002df862b: jne    0x0000000002df86b2
  0x0000000002df8631: mov    0x8(%rdx),%edi
  0x0000000002df8634: shl    $0x3,%rdi
  0x0000000002df8638: mov    0xa8(%rdi),%rdi
  0x0000000002df863f: or     %r15,%rdi
  0x0000000002df8642: xor    %rax,%rdi
  0x0000000002df8645: and    $0xffffffffffffff87,%rdi
  0x0000000002df8649: je     0x0000000002df86da
  0x0000000002df864f: test   $0x7,%rdi
  0x0000000002df8656: jne    0x0000000002df869f
  0x0000000002df8658: test   $0x300,%rdi
  0x0000000002df865f: jne    0x0000000002df867e
  0x0000000002df8661: and    $0x37f,%rax
  0x0000000002df8668: mov    %rax,%rdi
  0x0000000002df866b: or     %r15,%rdi
  0x0000000002df866e: lock cmpxchg %rdi,(%rdx)
  0x0000000002df8673: jne    0x0000000002df8b86
  0x0000000002df8679: jmpq   0x0000000002df86da
  0x0000000002df867e: mov    0x8(%rdx),%edi
  0x0000000002df8681: shl    $0x3,%rdi
  0x0000000002df8685: mov    0xa8(%rdi),%rdi
  0x0000000002df868c: or     %r15,%rdi
  0x0000000002df868f: lock cmpxchg %rdi,(%rdx)
  0x0000000002df8694: jne    0x0000000002df8b86
  0x0000000002df869a: jmpq   0x0000000002df86da
  0x0000000002df869f: mov    0x8(%rdx),%edi
  0x0000000002df86a2: shl    $0x3,%rdi
  0x0000000002df86a6: mov    0xa8(%rdi),%rdi
  0x0000000002df86ad: lock cmpxchg %rdi,(%rdx)
  0x0000000002df86b2: mov    (%rdx),%rax
  0x0000000002df86b5: or     $0x1,%rax
  0x0000000002df86b9: mov    %rax,(%rsi)
  0x0000000002df86bc: lock cmpxchg %rsi,(%rdx)
  0x0000000002df86c1: je     0x0000000002df86da
  0x0000000002df86c7: sub    %rsp,%rax
  0x0000000002df86ca: and    $0xfffffffffffff007,%rax
  0x0000000002df86d1: mov    %rax,(%rsi)
  0x0000000002df86d4: jne    0x0000000002df8b86
  0x0000000002df86da: movabs $0x1bff4ed0,%rsi   ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df86e4: mov    0xdc(%rsi),%edi
  0x0000000002df86ea: add    $0x8,%edi
  0x0000000002df86ed: mov    %edi,0xdc(%rsi)
  0x0000000002df86f3: movabs $0x1bca7fb0,%rsi   ;   {metadata({method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df86fd: and    $0x1ff8,%edi
  0x0000000002df8703: cmp    $0x0,%edi
  0x0000000002df8706: je     0x0000000002df8b99  ;*aload_2
                                                ; - java.util.Hashtable::put@0 (line 458)

  0x0000000002df870c: cmp    $0x0,%r9
  0x0000000002df8710: movabs $0x1bff4ed0,%rsi   ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df871a: movabs $0x108,%rdi
  0x0000000002df8724: jne    0x0000000002df8734
  0x0000000002df872a: movabs $0x118,%rdi
  0x0000000002df8734: mov    (%rsi,%rdi,1),%rbx
  0x0000000002df8738: lea    0x1(%rbx),%rbx
  0x0000000002df873c: mov    %rbx,(%rsi,%rdi,1)
  0x0000000002df8740: je     0x0000000002df8b0e  ;*ifnonnull
                                                ; - java.util.Hashtable::put@1 (line 458)

  0x0000000002df8746: mov    %r9,0x40(%rsp)
  0x0000000002df874b: mov    0x1c(%rdx),%esi
  0x0000000002df874e: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.Hashtable::put@13 (line 463)

  0x0000000002df8752: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x0000000002df8bb0
  0x0000000002df8755: mov    %r8,%rdi
  0x0000000002df8758: movabs $0x1bff4ed0,%rbx   ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df8762: mov    0x8(%rdi),%edi
  0x0000000002df8765: shl    $0x3,%rdi
  0x0000000002df8769: cmp    0x140(%rbx),%rdi
  0x0000000002df8770: jne    0x0000000002df877f
  0x0000000002df8772: addq   $0x1,0x148(%rbx)
  0x0000000002df877a: jmpq   0x0000000002df87e5
  0x0000000002df877f: cmp    0x150(%rbx),%rdi
  0x0000000002df8786: jne    0x0000000002df8795
  0x0000000002df8788: addq   $0x1,0x158(%rbx)
  0x0000000002df8790: jmpq   0x0000000002df87e5
  0x0000000002df8795: cmpq   $0x0,0x140(%rbx)
  0x0000000002df87a0: jne    0x0000000002df87b9
  0x0000000002df87a2: mov    %rdi,0x140(%rbx)
  0x0000000002df87a9: movq   $0x1,0x148(%rbx)
  0x0000000002df87b4: jmpq   0x0000000002df87e5
  0x0000000002df87b9: cmpq   $0x0,0x150(%rbx)
  0x0000000002df87c4: jne    0x0000000002df87dd
  0x0000000002df87c6: mov    %rdi,0x150(%rbx)
  0x0000000002df87cd: movq   $0x1,0x158(%rbx)
  0x0000000002df87d8: jmpq   0x0000000002df87e5
  0x0000000002df87dd: addq   $0x1,0x138(%rbx)
  0x0000000002df87e5: mov    %rdx,0x48(%rsp)
  0x0000000002df87ea: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::put@18 (line 464)

  0x0000000002df87ed: mov    %rsi,0x30(%rsp)
  0x0000000002df87f2: nop
  0x0000000002df87f3: nop
  0x0000000002df87f4: nop
  0x0000000002df87f5: movabs $0xffffffffffffffff,%rax
  0x0000000002df87ff: callq  0x0000000002cf63e0  ; OopMap{[72]=Oop [48]=Oop [64]=Oop [56]=Oop [112]=Oop off=548}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::put@18 (line 464)
                                                ;   {virtual_call}
  0x0000000002df8804: mov    %eax,0x58(%rsp)
  0x0000000002df8808: mov    0x30(%rsp),%rsi
  0x0000000002df880d: mov    0xc(%rsi),%r8d     ;*arraylength
                                                ; - java.util.Hashtable::put@29 (line 465)
                                                ; implicit exception: dispatches to 0x0000000002df8bb5
  0x0000000002df8811: mov    %rax,%rdx
  0x0000000002df8814: and    $0x7fffffff,%edx
  0x0000000002df881a: mov    %rax,%rdi
  0x0000000002df881d: mov    %rdx,%rax
  0x0000000002df8820: cmp    $0x80000000,%eax
  0x0000000002df8826: jne    0x0000000002df8838
  0x0000000002df882c: xor    %edx,%edx
  0x0000000002df882e: cmp    $0xffffffff,%r8d
  0x0000000002df8832: je     0x0000000002df883c
  0x0000000002df8838: cltd   
  0x0000000002df8839: idiv   %r8d               ;*irem
                                                ; - java.util.Hashtable::put@30 (line 465)
                                                ; implicit exception: dispatches to 0x0000000002df8bba
  0x0000000002df883c: mov    %edx,0x5c(%rsp)
  0x0000000002df8840: movslq %edx,%r8
  0x0000000002df8843: mov    0x10(%rsi,%r8,4),%r8d
  0x0000000002df8848: shl    $0x3,%r8           ;*aaload
                                                ; - java.util.Hashtable::put@36 (line 467)

  0x0000000002df884c: nopl   0x0(%rax)
  0x0000000002df8850: mov    0x38(%rsp),%rsi
  0x0000000002df8855: cmp    $0x0,%r8
  0x0000000002df8859: movabs $0x1bff4ed0,%rbx   ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df8863: movabs $0x168,%rax
  0x0000000002df886d: je     0x0000000002df887d
  0x0000000002df8873: movabs $0x178,%rax
  0x0000000002df887d: mov    (%rbx,%rax,1),%rcx
  0x0000000002df8881: lea    0x1(%rcx),%rcx
  0x0000000002df8885: mov    %rcx,(%rbx,%rax,1)
  0x0000000002df8889: je     0x0000000002df8a92  ;*ifnull
                                                ; - java.util.Hashtable::put@41 (line 468)

  0x0000000002df888f: mov    0xc(%r8),%ebx      ;*getfield hash
                                                ; - java.util.Hashtable::put@46 (line 469)
                                                ; implicit exception: dispatches to 0x0000000002df8bbf
  0x0000000002df8893: cmp    %edi,%ebx
  0x0000000002df8895: movabs $0x1bff4ed0,%rbx   ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df889f: movabs $0x188,%rax
  0x0000000002df88a9: jne    0x0000000002df88b9
  0x0000000002df88af: movabs $0x198,%rax
  0x0000000002df88b9: mov    (%rbx,%rax,1),%rcx
  0x0000000002df88bd: lea    0x1(%rcx),%rcx
  0x0000000002df88c1: mov    %rcx,(%rbx,%rax,1)
  0x0000000002df88c5: jne    0x0000000002df89c2  ;*if_icmpne
                                                ; - java.util.Hashtable::put@51 (line 469)

  0x0000000002df88cb: mov    0x10(%r8),%edi
  0x0000000002df88cf: shl    $0x3,%rdi          ;*getfield key
                                                ; - java.util.Hashtable::put@56 (line 469)

  0x0000000002df88d3: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x0000000002df8bc4
  0x0000000002df88d6: mov    %rdi,%rbx
  0x0000000002df88d9: movabs $0x1bff4ed0,%rcx   ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df88e3: mov    0x8(%rbx),%ebx
  0x0000000002df88e6: shl    $0x3,%rbx
  0x0000000002df88ea: cmp    0x1b0(%rcx),%rbx
  0x0000000002df88f1: jne    0x0000000002df8900
  0x0000000002df88f3: addq   $0x1,0x1b8(%rcx)
  0x0000000002df88fb: jmpq   0x0000000002df8966
  0x0000000002df8900: cmp    0x1c0(%rcx),%rbx
  0x0000000002df8907: jne    0x0000000002df8916
  0x0000000002df8909: addq   $0x1,0x1c8(%rcx)
  0x0000000002df8911: jmpq   0x0000000002df8966
  0x0000000002df8916: cmpq   $0x0,0x1b0(%rcx)
  0x0000000002df8921: jne    0x0000000002df893a
  0x0000000002df8923: mov    %rbx,0x1b0(%rcx)
  0x0000000002df892a: movq   $0x1,0x1b8(%rcx)
  0x0000000002df8935: jmpq   0x0000000002df8966
  0x0000000002df893a: cmpq   $0x0,0x1c0(%rcx)
  0x0000000002df8945: jne    0x0000000002df895e
  0x0000000002df8947: mov    %rbx,0x1c0(%rcx)
  0x0000000002df894e: movq   $0x1,0x1c8(%rcx)
  0x0000000002df8959: jmpq   0x0000000002df8966
  0x0000000002df895e: addq   $0x1,0x1a8(%rcx)
  0x0000000002df8966: mov    %r8,0x50(%rsp)
  0x0000000002df896b: mov    %rsi,%r8
  0x0000000002df896e: mov    %rdi,%rdx          ;*invokevirtual equals
                                                ; - java.util.Hashtable::put@60 (line 469)

  0x0000000002df8971: nop
  0x0000000002df8972: nop
  0x0000000002df8973: nop
  0x0000000002df8974: nop
  0x0000000002df8975: movabs $0xffffffffffffffff,%rax
  0x0000000002df897f: callq  0x0000000002cf63e0  ; OopMap{[72]=Oop [64]=Oop [56]=Oop [80]=Oop [112]=Oop off=932}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::put@60 (line 469)
                                                ;   {virtual_call}
  0x0000000002df8984: cmp    $0x0,%eax
  0x0000000002df8987: movabs $0x1bff4ed0,%rax   ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df8991: movabs $0x1d8,%r8
  0x0000000002df899b: je     0x0000000002df89ab
  0x0000000002df89a1: movabs $0x1e8,%r8
  0x0000000002df89ab: mov    (%rax,%r8,1),%r9
  0x0000000002df89af: lea    0x1(%r9),%r9
  0x0000000002df89b3: mov    %r9,(%rax,%r8,1)
  0x0000000002df89b7: mov    0x50(%rsp),%r8
  0x0000000002df89bc: jne    0x0000000002df8a24  ;*ifeq
                                                ; - java.util.Hashtable::put@63 (line 469)

  0x0000000002df89c2: mov    0x18(%r8),%eax
  0x0000000002df89c6: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.Hashtable::put@84 (line 468)

  0x0000000002df89ca: movabs $0x1bff4ed0,%r8    ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df89d4: mov    0xe0(%r8),%r9d
  0x0000000002df89db: add    $0x8,%r9d
  0x0000000002df89df: mov    %r9d,0xe0(%r8)
  0x0000000002df89e6: movabs $0x1bca7fb0,%r8    ;   {metadata({method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df89f0: and    $0xfff8,%r9d
  0x0000000002df89f7: cmp    $0x0,%r9d
  0x0000000002df89fb: je     0x0000000002df8bc9  ; OopMap{[72]=Oop [64]=Oop [56]=Oop rax=Oop [112]=Oop off=1057}
                                                ;*goto
                                                ; - java.util.Hashtable::put@89 (line 468)

  0x0000000002df8a01: test   %eax,-0x21f8907(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002df8a07: movabs $0x1bff4ed0,%r8    ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df8a11: incl   0x1f8(%r8)
  0x0000000002df8a18: mov    %rax,%r8
  0x0000000002df8a1b: mov    0x58(%rsp),%edi
  0x0000000002df8a1f: jmpq   0x0000000002df8850  ;*goto
                                                ; - java.util.Hashtable::put@89 (line 468)

  0x0000000002df8a24: mov    0x40(%rsp),%rdi
  0x0000000002df8a29: mov    0x14(%r8),%r9d
  0x0000000002df8a2d: shl    $0x3,%r9           ;*getfield value
                                                ; - java.util.Hashtable::put@68 (line 470)

  0x0000000002df8a31: mov    %rdi,%r10
  0x0000000002df8a34: shr    $0x3,%r10
  0x0000000002df8a38: mov    %r10d,0x14(%r8)
  0x0000000002df8a3c: shr    $0x9,%r8
  0x0000000002df8a40: movabs $0xea5d000,%rax
  0x0000000002df8a4a: movb   $0x0,(%r8,%rax,1)  ;*putfield value
                                                ; - java.util.Hashtable::put@76 (line 471)

  0x0000000002df8a4f: lea    0x68(%rsp),%rax
  0x0000000002df8a54: mov    0x8(%rax),%rdi
  0x0000000002df8a58: mov    (%rdi),%r8
  0x0000000002df8a5b: and    $0x7,%r8
  0x0000000002df8a5f: cmp    $0x5,%r8
  0x0000000002df8a63: je     0x0000000002df8a80
  0x0000000002df8a69: mov    (%rax),%r8
  0x0000000002df8a6c: test   %r8,%r8
  0x0000000002df8a6f: je     0x0000000002df8a80
  0x0000000002df8a75: lock cmpxchg %r8,(%rdi)
  0x0000000002df8a7a: jne    0x0000000002df8be0
  0x0000000002df8a80: mov    %r9,%rax
  0x0000000002df8a83: add    $0x80,%rsp
  0x0000000002df8a8a: pop    %rbp
  0x0000000002df8a8b: test   %eax,-0x21f8991(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df8a91: retq                      ;*areturn
                                                ; - java.util.Hashtable::put@81 (line 472)

  0x0000000002df8a92: mov    %rdi,%rax
  0x0000000002df8a95: mov    0x40(%rsp),%rdi
  0x0000000002df8a9a: mov    %rsi,%r9
  0x0000000002df8a9d: mov    0x48(%rsp),%rdx
  0x0000000002df8aa2: mov    0x5c(%rsp),%esi
  0x0000000002df8aa6: mov    %rdx,%r8
  0x0000000002df8aa9: movabs $0x1bff4ed0,%rbx   ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df8ab3: addq   $0x1,0x210(%rbx)
  0x0000000002df8abb: mov    %rax,%r8           ;*invokespecial addEntry
                                                ; - java.util.Hashtable::put@99 (line 476)

  0x0000000002df8abe: nop
  0x0000000002df8abf: callq  0x0000000002cf61a0  ; OopMap{[112]=Oop off=1252}
                                                ;*invokespecial addEntry
                                                ; - java.util.Hashtable::put@99 (line 476)
                                                ;   {optimized virtual_call}
  0x0000000002df8ac4: lea    0x68(%rsp),%rax
  0x0000000002df8ac9: mov    0x8(%rax),%rsi
  0x0000000002df8acd: mov    (%rsi),%rdx
  0x0000000002df8ad0: and    $0x7,%rdx
  0x0000000002df8ad4: cmp    $0x5,%rdx
  0x0000000002df8ad8: je     0x0000000002df8af5
  0x0000000002df8ade: mov    (%rax),%rdx
  0x0000000002df8ae1: test   %rdx,%rdx
  0x0000000002df8ae4: je     0x0000000002df8af5
  0x0000000002df8aea: lock cmpxchg %rdx,(%rsi)
  0x0000000002df8aef: jne    0x0000000002df8bf3
  0x0000000002df8af5: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002df8aff: add    $0x80,%rsp
  0x0000000002df8b06: pop    %rbp
  0x0000000002df8b07: test   %eax,-0x21f8a0d(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df8b0d: retq                      ;*areturn
                                                ; - java.util.Hashtable::put@103 (line 477)

  0x0000000002df8b0e: xchg   %ax,%ax
  0x0000000002df8b10: jmpq   0x0000000002df8c15  ;   {no_reloc}
  0x0000000002df8b15: add    %al,(%rax)
  0x0000000002df8b17: add    %al,(%rax)
  0x0000000002df8b19: add    %cl,-0x75(%rcx)
  0x0000000002df8b1c: rex.RXB (bad) 
  0x0000000002df8b1e: lea    0x20(%rax),%rdi
  0x0000000002df8b22: cmp    0x70(%r15),%rdi
  0x0000000002df8b26: ja     0x0000000002df8c1f
  0x0000000002df8b2c: mov    %rdi,0x60(%r15)
  0x0000000002df8b30: mov    0xa8(%rdx),%rcx
  0x0000000002df8b37: mov    %rcx,(%rax)
  0x0000000002df8b3a: mov    %rdx,%rcx
  0x0000000002df8b3d: shr    $0x3,%rcx
  0x0000000002df8b41: mov    %ecx,0x8(%rax)
  0x0000000002df8b44: xor    %rcx,%rcx
  0x0000000002df8b47: mov    %ecx,0xc(%rax)
  0x0000000002df8b4a: xor    %rcx,%rcx
  0x0000000002df8b4d: mov    %rcx,0x10(%rax)
  0x0000000002df8b51: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Hashtable::put@4 (line 459)

  0x0000000002df8b55: mov    %rax,%rdx
  0x0000000002df8b58: movabs $0x1bff4ed0,%rsi   ;   {metadata(method data for {method} {0x000000001bca7fb8} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002df8b62: addq   $0x1,0x128(%rsi)
  0x0000000002df8b6a: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.util.Hashtable::put@8 (line 459)

  0x0000000002df8b6d: mov    %rax,0x60(%rsp)
  0x0000000002df8b72: nop
  0x0000000002df8b73: nop
  0x0000000002df8b74: nop
  0x0000000002df8b75: nop
  0x0000000002df8b76: nop
  0x0000000002df8b77: callq  0x0000000002cf61a0  ; OopMap{[96]=Oop [112]=Oop off=1436}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Hashtable::put@8 (line 459)
                                                ;   {optimized virtual_call}
  0x0000000002df8b7c: mov    0x60(%rsp),%rax
  0x0000000002df8b81: jmpq   0x0000000002df8c57
  0x0000000002df8b86: mov    %rdx,0x8(%rsp)
  0x0000000002df8b8b: mov    %rsi,(%rsp)
  0x0000000002df8b8f: callq  0x0000000002db0060  ; OopMap{rdx=Oop r8=Oop [56]=Oop r9=Oop [112]=Oop off=1460}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::put@-1 (line 458)
                                                ;   {runtime_call}
  0x0000000002df8b94: jmpq   0x0000000002df86da
  0x0000000002df8b99: mov    %rsi,0x8(%rsp)
  0x0000000002df8b9e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df8ba6: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop [56]=Oop r9=Oop [112]=Oop off=1483}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::put@-1 (line 458)
                                                ;   {runtime_call}
  0x0000000002df8bab: jmpq   0x0000000002df870c
  0x0000000002df8bb0: callq  0x0000000002dad680  ; OopMap{rdx=Oop r8=Oop [56]=Oop [64]=Oop rsi=Oop [112]=Oop off=1493}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::put@18 (line 464)
                                                ;   {runtime_call}
  0x0000000002df8bb5: callq  0x0000000002dad680  ; OopMap{[72]=Oop [64]=Oop [56]=Oop rsi=Oop [112]=Oop off=1498}
                                                ;*arraylength
                                                ; - java.util.Hashtable::put@29 (line 465)
                                                ;   {runtime_call}
  0x0000000002df8bba: callq  0x0000000002dad440  ; OopMap{[72]=Oop [64]=Oop [56]=Oop rsi=Oop [112]=Oop off=1503}
                                                ;*irem
                                                ; - java.util.Hashtable::put@30 (line 465)
                                                ;   {runtime_call}
  0x0000000002df8bbf: callq  0x0000000002dad680  ; OopMap{[72]=Oop [64]=Oop r8=Oop rsi=Oop [56]=Oop [112]=Oop off=1508}
                                                ;*getfield hash
                                                ; - java.util.Hashtable::put@46 (line 469)
                                                ;   {runtime_call}
  0x0000000002df8bc4: callq  0x0000000002dad680  ; OopMap{[72]=Oop [64]=Oop r8=Oop rsi=Oop [56]=Oop rdi=Oop [112]=Oop off=1513}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::put@60 (line 469)
                                                ;   {runtime_call}
  0x0000000002df8bc9: mov    %r8,0x8(%rsp)
  0x0000000002df8bce: movq   $0x59,(%rsp)
  0x0000000002df8bd6: callq  0x0000000002db1d60  ; OopMap{[72]=Oop [64]=Oop [56]=Oop rax=Oop [112]=Oop off=1531}
                                                ;*goto
                                                ; - java.util.Hashtable::put@89 (line 468)
                                                ;   {runtime_call}
  0x0000000002df8bdb: jmpq   0x0000000002df8a01
  0x0000000002df8be0: lea    0x68(%rsp),%rax
  0x0000000002df8be5: mov    %rax,(%rsp)
  0x0000000002df8be9: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df8bee: jmpq   0x0000000002df8a80
  0x0000000002df8bf3: lea    0x68(%rsp),%rax
  0x0000000002df8bf8: mov    %rax,(%rsp)
  0x0000000002df8bfc: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df8c01: jmpq   0x0000000002df8af5
  0x0000000002df8c06: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002df8c10: mov    $0xa050f00,%eax
  0x0000000002df8c15: callq  0x0000000002db0ca0  ; OopMap{[112]=Oop off=1594}
                                                ;*new  ; - java.util.Hashtable::put@4 (line 459)
                                                ;   {runtime_call}
  0x0000000002df8c1a: jmpq   0x0000000002df8b10
  0x0000000002df8c1f: mov    %rdx,%rdx
  0x0000000002df8c22: callq  0x0000000002dade00  ; OopMap{[112]=Oop off=1607}
                                                ;*new  ; - java.util.Hashtable::put@4 (line 459)
                                                ;   {runtime_call}
  0x0000000002df8c27: jmpq   0x0000000002df8b55
  0x0000000002df8c2c: nop
  0x0000000002df8c2d: nop
  0x0000000002df8c2e: mov    0x2a8(%r15),%rax
  0x0000000002df8c35: movabs $0x0,%r10
  0x0000000002df8c3f: mov    %r10,0x2a8(%r15)
  0x0000000002df8c46: movabs $0x0,%r10
  0x0000000002df8c50: mov    %r10,0x2b0(%r15)
  0x0000000002df8c57: mov    %rax,%rbx
  0x0000000002df8c5a: lea    0x68(%rsp),%rax
  0x0000000002df8c5f: mov    0x8(%rax),%rsi
  0x0000000002df8c63: mov    (%rsi),%rdi
  0x0000000002df8c66: and    $0x7,%rdi
  0x0000000002df8c6a: cmp    $0x5,%rdi
  0x0000000002df8c6e: je     0x0000000002df8c8b
  0x0000000002df8c74: mov    (%rax),%rdi
  0x0000000002df8c77: test   %rdi,%rdi
  0x0000000002df8c7a: je     0x0000000002df8c8b
  0x0000000002df8c80: lock cmpxchg %rdi,(%rsi)
  0x0000000002df8c85: jne    0x0000000002df8c9b
  0x0000000002df8c8b: mov    %rbx,%rax
  0x0000000002df8c8e: add    $0x80,%rsp
  0x0000000002df8c95: pop    %rbp
  0x0000000002df8c96: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df8c9b: lea    0x68(%rsp),%rax
  0x0000000002df8ca0: mov    %rax,(%rsp)
  0x0000000002df8ca4: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df8ca9: jmp    0x0000000002df8c8b
  0x0000000002df8cab: hlt    
  0x0000000002df8cac: hlt    
  0x0000000002df8cad: hlt    
  0x0000000002df8cae: hlt    
  0x0000000002df8caf: hlt    
  0x0000000002df8cb0: hlt    
  0x0000000002df8cb1: hlt    
  0x0000000002df8cb2: hlt    
  0x0000000002df8cb3: hlt    
  0x0000000002df8cb4: hlt    
  0x0000000002df8cb5: hlt    
  0x0000000002df8cb6: hlt    
  0x0000000002df8cb7: hlt    
  0x0000000002df8cb8: hlt    
  0x0000000002df8cb9: hlt    
  0x0000000002df8cba: hlt    
  0x0000000002df8cbb: hlt    
  0x0000000002df8cbc: hlt    
  0x0000000002df8cbd: hlt    
  0x0000000002df8cbe: hlt    
  0x0000000002df8cbf: hlt    
[Stub Code]
  0x0000000002df8cc0: nop                       ;   {no_reloc}
  0x0000000002df8cc1: nop
  0x0000000002df8cc2: nop
  0x0000000002df8cc3: nop
  0x0000000002df8cc4: nop
  0x0000000002df8cc5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df8ccf: jmpq   0x0000000002df8ccf  ;   {runtime_call}
  0x0000000002df8cd4: nop
  0x0000000002df8cd5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df8cdf: jmpq   0x0000000002df8cdf  ;   {runtime_call}
  0x0000000002df8ce4: nop
  0x0000000002df8ce5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df8cef: jmpq   0x0000000002df8cef  ;   {runtime_call}
  0x0000000002df8cf4: nop
  0x0000000002df8cf5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df8cff: jmpq   0x0000000002df8cff  ;   {runtime_call}
[Exception Handler]
  0x0000000002df8d04: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002df8d09: mov    %rsp,-0x28(%rsp)
  0x0000000002df8d0e: sub    $0x80,%rsp
  0x0000000002df8d15: mov    %rax,0x78(%rsp)
  0x0000000002df8d1a: mov    %rcx,0x70(%rsp)
  0x0000000002df8d1f: mov    %rdx,0x68(%rsp)
  0x0000000002df8d24: mov    %rbx,0x60(%rsp)
  0x0000000002df8d29: mov    %rbp,0x50(%rsp)
  0x0000000002df8d2e: mov    %rsi,0x48(%rsp)
  0x0000000002df8d33: mov    %rdi,0x40(%rsp)
  0x0000000002df8d38: mov    %r8,0x38(%rsp)
  0x0000000002df8d3d: mov    %r9,0x30(%rsp)
  0x0000000002df8d42: mov    %r10,0x28(%rsp)
  0x0000000002df8d47: mov    %r11,0x20(%rsp)
  0x0000000002df8d4c: mov    %r12,0x18(%rsp)
  0x0000000002df8d51: mov    %r13,0x10(%rsp)
  0x0000000002df8d56: mov    %r14,0x8(%rsp)
  0x0000000002df8d5b: mov    %r15,(%rsp)
  0x0000000002df8d5f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df8d69: movabs $0x2df8d09,%rdx    ;   {internal_word}
  0x0000000002df8d73: mov    %rsp,%r8
  0x0000000002df8d76: and    $0xfffffffffffffff0,%rsp
  0x0000000002df8d7a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df8d7f: hlt    
[Deopt Handler Code]
  0x0000000002df8d80: movabs $0x2df8d80,%r10    ;   {section_word}
  0x0000000002df8d8a: push   %r10
  0x0000000002df8d8c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df8d91: hlt    
  0x0000000002df8d92: hlt    
  0x0000000002df8d93: hlt    
  0x0000000002df8d94: hlt    
  0x0000000002df8d95: hlt    
  0x0000000002df8d96: hlt    
  0x0000000002df8d97: hlt    
<nmethod compile_id='105' compiler='C1' level='3' entry='0x0000000002df85e0' size='3456' address='0x0000000002df8410' relocation_offset='288' insts_offset='464' stub_offset='2224' scopes_data_offset='2448' scopes_pcs_offset='2776' dependencies_offset='3400' nul_chk_table_offset='3408' method='java/util/Hashtable put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='104' count='280' backedge_count='111' iicount='280' stamp='1.980'/>
<writer thread='8664'/>
<task_queued compile_id='109' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='1664' iicount='1664' level='3' stamp='1.980' comment='tiered' hot_count='1664'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002df7ed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bcdf060} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = int
  #           [sp+0x50]  (sp of caller)
  0x0000000002df8040: mov    0x8(%rdx),%r10d
  0x0000000002df8044: shl    $0x3,%r10
  0x0000000002df8048: cmp    %rax,%r10
  0x0000000002df804b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df8051: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df805c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df8060: mov    %eax,-0x6000(%rsp)
  0x0000000002df8067: push   %rbp
  0x0000000002df8068: sub    $0x40,%rsp
  0x0000000002df806c: mov    %rdx,%r9
  0x0000000002df806f: movabs $0x1beb58b0,%rbx   ;   {metadata(method data for {method} {0x000000001bcdf060} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df8079: mov    0xdc(%rbx),%edx
  0x0000000002df807f: add    $0x8,%edx
  0x0000000002df8082: mov    %edx,0xdc(%rbx)
  0x0000000002df8088: movabs $0x1bcdf058,%rbx   ;   {metadata({method} {0x000000001bcdf060} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df8092: and    $0x1ff8,%edx
  0x0000000002df8098: cmp    $0x0,%edx
  0x0000000002df809b: je     0x0000000002df81d3  ;*aload_0
                                                ; - java.lang.StringBuffer::&lt;init&gt;@0 (line 128)

  0x0000000002df80a1: mov    %r9,%rbx
  0x0000000002df80a4: movabs $0x1beb58b0,%rdx   ;   {metadata(method data for {method} {0x000000001bcdf060} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df80ae: addq   $0x1,0x108(%rdx)
  0x0000000002df80b6: movabs $0x1be9d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002df80c0: mov    0xdc(%rbx),%edx
  0x0000000002df80c6: add    $0x8,%edx
  0x0000000002df80c9: mov    %edx,0xdc(%rbx)
  0x0000000002df80cf: movabs $0x1bce3970,%rbx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002df80d9: and    $0x7ffff8,%edx
  0x0000000002df80df: cmp    $0x0,%edx
  0x0000000002df80e2: je     0x0000000002df81ea
  0x0000000002df80e8: mov    %r9,%rbx
  0x0000000002df80eb: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002df80f5: addq   $0x1,0x108(%rdx)
  0x0000000002df80fd: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df8107: mov    0xdc(%rbx),%edx
  0x0000000002df810d: add    $0x8,%edx
  0x0000000002df8110: mov    %edx,0xdc(%rbx)
  0x0000000002df8116: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df8120: and    $0x7ffff8,%edx
  0x0000000002df8126: cmp    $0x0,%edx
  0x0000000002df8129: je     0x0000000002df8201
  0x0000000002df812f: mov    %r8,%rbx
  0x0000000002df8132: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002df813c: movslq %ebx,%rbx
  0x0000000002df813f: mov    %rbx,%rdi
  0x0000000002df8142: cmp    $0xffffff,%rbx
  0x0000000002df8149: ja     0x0000000002df8218
  0x0000000002df814f: movabs $0x17,%rsi
  0x0000000002df8159: lea    (%rsi,%rbx,2),%rsi
  0x0000000002df815d: and    $0xfffffffffffffff8,%rsi
  0x0000000002df8161: mov    0x60(%r15),%rax
  0x0000000002df8165: lea    (%rax,%rsi,1),%rsi
  0x0000000002df8169: cmp    0x70(%r15),%rsi
  0x0000000002df816d: ja     0x0000000002df8218
  0x0000000002df8173: mov    %rsi,0x60(%r15)
  0x0000000002df8177: sub    %rax,%rsi
  0x0000000002df817a: movq   $0x1,(%rax)
  0x0000000002df8181: mov    %rdx,%rcx
  0x0000000002df8184: shr    $0x3,%rcx
  0x0000000002df8188: mov    %ecx,0x8(%rax)
  0x0000000002df818b: mov    %ebx,0xc(%rax)
  0x0000000002df818e: sub    $0x10,%rsi
  0x0000000002df8192: je     0x0000000002df81a9
  0x0000000002df8198: xor    %rbx,%rbx
  0x0000000002df819b: shr    $0x3,%rsi
  0x0000000002df819f: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002df81a4: dec    %rsi
  0x0000000002df81a7: jne    0x0000000002df819f  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)

  0x0000000002df81a9: mov    %rax,%r10
  0x0000000002df81ac: shr    $0x3,%r10
  0x0000000002df81b0: mov    %r10d,0x10(%r9)
  0x0000000002df81b4: shr    $0x9,%r9
  0x0000000002df81b8: movabs $0xea5d000,%rsi
  0x0000000002df81c2: movb   $0x0,(%r9,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)

  0x0000000002df81c7: add    $0x40,%rsp
  0x0000000002df81cb: pop    %rbp
  0x0000000002df81cc: test   %eax,-0x21f80d2(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df81d2: retq   
  0x0000000002df81d3: mov    %rbx,0x8(%rsp)
  0x0000000002df81d8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df81e0: callq  0x0000000002db1d60  ; OopMap{r9=Oop off=421}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::&lt;init&gt;@-1 (line 128)
                                                ;   {runtime_call}
  0x0000000002df81e5: jmpq   0x0000000002df80a1
  0x0000000002df81ea: mov    %rbx,0x8(%rsp)
  0x0000000002df81ef: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df81f7: callq  0x0000000002db1d60  ; OopMap{r9=Oop off=444}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ;   {runtime_call}
  0x0000000002df81fc: jmpq   0x0000000002df80e8
  0x0000000002df8201: mov    %rbx,0x8(%rsp)
  0x0000000002df8206: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df820e: callq  0x0000000002db1d60  ; OopMap{r9=Oop off=467}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ;   {runtime_call}
  0x0000000002df8213: jmpq   0x0000000002df812f
  0x0000000002df8218: callq  0x0000000002dae700  ; OopMap{r9=Oop off=477}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ;   {runtime_call}
  0x0000000002df821d: jmp    0x0000000002df81a9
  0x0000000002df821f: nop
  0x0000000002df8220: nop
  0x0000000002df8221: mov    0x2a8(%r15),%rax
  0x0000000002df8228: movabs $0x0,%r10
  0x0000000002df8232: mov    %r10,0x2a8(%r15)
  0x0000000002df8239: movabs $0x0,%r10
  0x0000000002df8243: mov    %r10,0x2b0(%r15)
  0x0000000002df824a: add    $0x40,%rsp
  0x0000000002df824e: pop    %rbp
  0x0000000002df824f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df8254: hlt    
  0x0000000002df8255: hlt    
  0x0000000002df8256: hlt    
  0x0000000002df8257: hlt    
  0x0000000002df8258: hlt    
  0x0000000002df8259: hlt    
  0x0000000002df825a: hlt    
  0x0000000002df825b: hlt    
  0x0000000002df825c: hlt    
  0x0000000002df825d: hlt    
  0x0000000002df825e: hlt    
  0x0000000002df825f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002df8260: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002df8265: mov    %rsp,-0x28(%rsp)
  0x0000000002df826a: sub    $0x80,%rsp
  0x0000000002df8271: mov    %rax,0x78(%rsp)
  0x0000000002df8276: mov    %rcx,0x70(%rsp)
  0x0000000002df827b: mov    %rdx,0x68(%rsp)
  0x0000000002df8280: mov    %rbx,0x60(%rsp)
  0x0000000002df8285: mov    %rbp,0x50(%rsp)
  0x0000000002df828a: mov    %rsi,0x48(%rsp)
  0x0000000002df828f: mov    %rdi,0x40(%rsp)
  0x0000000002df8294: mov    %r8,0x38(%rsp)
  0x0000000002df8299: mov    %r9,0x30(%rsp)
  0x0000000002df829e: mov    %r10,0x28(%rsp)
  0x0000000002df82a3: mov    %r11,0x20(%rsp)
  0x0000000002df82a8: mov    %r12,0x18(%rsp)
  0x0000000002df82ad: mov    %r13,0x10(%rsp)
  0x0000000002df82b2: mov    %r14,0x8(%rsp)
  0x0000000002df82b7: mov    %r15,(%rsp)
  0x0000000002df82bb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df82c5: movabs $0x2df8265,%rdx    ;   {internal_word}
  0x0000000002df82cf: mov    %rsp,%r8
  0x0000000002df82d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002df82d6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df82db: hlt    
[Deopt Handler Code]
  0x0000000002df82dc: movabs $0x2df82dc,%r10    ;   {section_word}
  0x0000000002df82e6: push   %r10
  0x0000000002df82e8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df82ed: hlt    
  0x0000000002df82ee: hlt    
  0x0000000002df82ef: hlt    
<nmethod compile_id='107' compiler='C1' level='3' entry='0x0000000002df8040' size='1312' address='0x0000000002df7ed0' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1160' dependencies_offset='1304' method='java/lang/StringBuffer &lt;init&gt; (I)V' bytes='6' count='1341' iicount='1341' stamp='1.985'/>
Decoding compiled method 0x0000000002df9490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bce1120} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;
  #           [sp+0x80]  (sp of caller)
  0x0000000002df9620: mov    0x8(%rdx),%r10d
  0x0000000002df9624: shl    $0x3,%r10
  0x0000000002df9628: cmp    %rax,%r10
  0x0000000002df962b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df9631: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df963c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df9640: mov    %eax,-0x6000(%rsp)
  0x0000000002df9647: push   %rbp
  0x0000000002df9648: sub    $0x70,%rsp
  0x0000000002df964c: lea    0x50(%rsp),%r8
  0x0000000002df9651: mov    %rdx,0x8(%r8)
  0x0000000002df9655: mov    (%rdx),%rax
  0x0000000002df9658: mov    %rax,%r9
  0x0000000002df965b: and    $0x7,%r9
  0x0000000002df965f: cmp    $0x5,%r9
  0x0000000002df9663: jne    0x0000000002df96ed
  0x0000000002df9669: mov    0x8(%rdx),%r9d
  0x0000000002df966d: shl    $0x3,%r9
  0x0000000002df9671: mov    0xa8(%r9),%r9
  0x0000000002df9678: or     %r15,%r9
  0x0000000002df967b: xor    %rax,%r9
  0x0000000002df967e: and    $0xffffffffffffff87,%r9
  0x0000000002df9682: je     0x0000000002df9715
  0x0000000002df9688: test   $0x7,%r9
  0x0000000002df968f: jne    0x0000000002df96d9
  0x0000000002df9691: test   $0x300,%r9
  0x0000000002df9698: jne    0x0000000002df96b7
  0x0000000002df969a: and    $0x37f,%rax
  0x0000000002df96a1: mov    %rax,%r9
  0x0000000002df96a4: or     %r15,%r9
  0x0000000002df96a7: lock cmpxchg %r9,(%rdx)
  0x0000000002df96ac: jne    0x0000000002df992a
  0x0000000002df96b2: jmpq   0x0000000002df9715
  0x0000000002df96b7: mov    0x8(%rdx),%r9d
  0x0000000002df96bb: shl    $0x3,%r9
  0x0000000002df96bf: mov    0xa8(%r9),%r9
  0x0000000002df96c6: or     %r15,%r9
  0x0000000002df96c9: lock cmpxchg %r9,(%rdx)
  0x0000000002df96ce: jne    0x0000000002df992a
  0x0000000002df96d4: jmpq   0x0000000002df9715
  0x0000000002df96d9: mov    0x8(%rdx),%r9d
  0x0000000002df96dd: shl    $0x3,%r9
  0x0000000002df96e1: mov    0xa8(%r9),%r9
  0x0000000002df96e8: lock cmpxchg %r9,(%rdx)
  0x0000000002df96ed: mov    (%rdx),%rax
  0x0000000002df96f0: or     $0x1,%rax
  0x0000000002df96f4: mov    %rax,(%r8)
  0x0000000002df96f7: lock cmpxchg %r8,(%rdx)
  0x0000000002df96fc: je     0x0000000002df9715
  0x0000000002df9702: sub    %rsp,%rax
  0x0000000002df9705: and    $0xfffffffffffff007,%rax
  0x0000000002df970c: mov    %rax,(%r8)
  0x0000000002df970f: jne    0x0000000002df992a
  0x0000000002df9715: movabs $0x1beb59e8,%r8    ;   {metadata(method data for {method} {0x000000001bce1120} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df971f: mov    0xdc(%r8),%r9d
  0x0000000002df9726: add    $0x8,%r9d
  0x0000000002df972a: mov    %r9d,0xdc(%r8)
  0x0000000002df9731: movabs $0x1bce1118,%r8    ;   {metadata({method} {0x000000001bce1120} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df973b: and    $0x1ff8,%r9d
  0x0000000002df9742: cmp    $0x0,%r9d
  0x0000000002df9746: je     0x0000000002df993d  ;*aload_0
                                                ; - java.lang.StringBuffer::toString@0 (line 668)

  0x0000000002df974c: mov    0x14(%rdx),%r8d
  0x0000000002df9750: shl    $0x3,%r8           ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@1 (line 668)

  0x0000000002df9754: cmp    $0x0,%r8
  0x0000000002df9758: movabs $0x1beb59e8,%r8    ;   {metadata(method data for {method} {0x000000001bce1120} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df9762: movabs $0x108,%r9
  0x0000000002df976c: jne    0x0000000002df977c
  0x0000000002df9772: movabs $0x118,%r9
  0x0000000002df977c: mov    (%r8,%r9,1),%rsi
  0x0000000002df9780: lea    0x1(%rsi),%rsi
  0x0000000002df9784: mov    %rsi,(%r8,%r9,1)
  0x0000000002df9788: je     0x0000000002df9796  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)

  0x0000000002df978e: mov    %rdx,%rbx
  0x0000000002df9791: jmpq   0x0000000002df97f1  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)

  0x0000000002df9796: mov    0x10(%rdx),%r8d
  0x0000000002df979a: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.StringBuffer::toString@9 (line 669)

  0x0000000002df979e: mov    0xc(%rdx),%r9d     ;*getfield count
                                                ; - java.lang.StringBuffer::toString@14 (line 669)

  0x0000000002df97a2: movabs $0x1beb59e8,%rsi   ;   {metadata(method data for {method} {0x000000001bce1120} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df97ac: addq   $0x1,0x128(%rsi)
  0x0000000002df97b4: mov    %rdx,0x48(%rsp)
  0x0000000002df97b9: mov    %r8,%rdx
  0x0000000002df97bc: mov    $0x0,%r8d          ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)

  0x0000000002df97c2: nop
  0x0000000002df97c3: nop
  0x0000000002df97c4: nop
  0x0000000002df97c5: nop
  0x0000000002df97c6: nop
  0x0000000002df97c7: callq  0x0000000002cf6620  ; OopMap{[72]=Oop [88]=Oop off=428}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ;   {static_call}
  0x0000000002df97cc: mov    0x48(%rsp),%rbx
  0x0000000002df97d1: mov    %rax,%r10
  0x0000000002df97d4: shr    $0x3,%r10
  0x0000000002df97d8: mov    %r10d,0x14(%rbx)
  0x0000000002df97dc: mov    %rbx,%rdx
  0x0000000002df97df: shr    $0x9,%rdx
  0x0000000002df97e3: movabs $0xea5d000,%rsi
  0x0000000002df97ed: movb   $0x0,(%rdx,%rsi,1)  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::toString@20 (line 669)

  0x0000000002df97f1: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002df97fb: mov    0x60(%r15),%rax
  0x0000000002df97ff: lea    0x18(%rax),%rdi
  0x0000000002df9803: cmp    0x70(%r15),%rdi
  0x0000000002df9807: ja     0x0000000002df9954
  0x0000000002df980d: mov    %rdi,0x60(%r15)
  0x0000000002df9811: mov    0xa8(%rdx),%rcx
  0x0000000002df9818: mov    %rcx,(%rax)
  0x0000000002df981b: mov    %rdx,%rcx
  0x0000000002df981e: shr    $0x3,%rcx
  0x0000000002df9822: mov    %ecx,0x8(%rax)
  0x0000000002df9825: xor    %rcx,%rcx
  0x0000000002df9828: mov    %ecx,0xc(%rax)
  0x0000000002df982b: xor    %rcx,%rcx
  0x0000000002df982e: mov    %rcx,0x10(%rax)
  0x0000000002df9832: mov    %rax,%rsi          ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)

  0x0000000002df9835: mov    0x14(%rbx),%eax
  0x0000000002df9838: shl    $0x3,%rax          ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@28 (line 671)

  0x0000000002df983c: mov    %rsi,%rdi
  0x0000000002df983f: movabs $0x1beb59e8,%rbx   ;   {metadata(method data for {method} {0x000000001bce1120} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuffer&apos;)}
  0x0000000002df9849: addq   $0x1,0x138(%rbx)
  0x0000000002df9851: movabs $0x1beb5650,%rdi   ;   {metadata(method data for {method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df985b: mov    0xdc(%rdi),%ebx
  0x0000000002df9861: add    $0x8,%ebx
  0x0000000002df9864: mov    %ebx,0xdc(%rdi)
  0x0000000002df986a: movabs $0x1bc73b80,%rdi   ;   {metadata({method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df9874: and    $0x7ffff8,%ebx
  0x0000000002df987a: cmp    $0x0,%ebx
  0x0000000002df987d: je     0x0000000002df9961
  0x0000000002df9883: mov    %rsi,%rdi
  0x0000000002df9886: movabs $0x1beb5650,%rbx   ;   {metadata(method data for {method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df9890: addq   $0x1,0x108(%rbx)
  0x0000000002df9898: movabs $0x1bda1c10,%rdi   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df98a2: mov    0xdc(%rdi),%ebx
  0x0000000002df98a8: add    $0x8,%ebx
  0x0000000002df98ab: mov    %ebx,0xdc(%rdi)
  0x0000000002df98b1: movabs $0x1bc70480,%rdi   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df98bb: and    $0x7ffff8,%ebx
  0x0000000002df98c1: cmp    $0x0,%ebx
  0x0000000002df98c4: je     0x0000000002df9978
  0x0000000002df98ca: mov    %rax,%r10
  0x0000000002df98cd: shr    $0x3,%r10
  0x0000000002df98d1: mov    %r10d,0xc(%rsi)
  0x0000000002df98d5: mov    %rsi,%rax
  0x0000000002df98d8: shr    $0x9,%rax
  0x0000000002df98dc: movabs $0xea5d000,%rdi
  0x0000000002df98e6: movb   $0x0,(%rax,%rdi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)

  0x0000000002df98ea: lea    0x50(%rsp),%rax
  0x0000000002df98ef: mov    0x8(%rax),%rbx
  0x0000000002df98f3: mov    (%rbx),%rdi
  0x0000000002df98f6: and    $0x7,%rdi
  0x0000000002df98fa: cmp    $0x5,%rdi
  0x0000000002df98fe: je     0x0000000002df991b
  0x0000000002df9904: mov    (%rax),%rdi
  0x0000000002df9907: test   %rdi,%rdi
  0x0000000002df990a: je     0x0000000002df991b
  0x0000000002df9910: lock cmpxchg %rdi,(%rbx)
  0x0000000002df9915: jne    0x0000000002df998f  ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)

  0x0000000002df991b: mov    %rsi,%rax
  0x0000000002df991e: add    $0x70,%rsp
  0x0000000002df9922: pop    %rbp
  0x0000000002df9923: test   %eax,-0x21f9829(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df9929: retq   
  0x0000000002df992a: mov    %rdx,0x8(%rsp)
  0x0000000002df992f: mov    %r8,(%rsp)
  0x0000000002df9933: callq  0x0000000002db0060  ; OopMap{rdx=Oop [88]=Oop off=792}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ;   {runtime_call}
  0x0000000002df9938: jmpq   0x0000000002df9715
  0x0000000002df993d: mov    %r8,0x8(%rsp)
  0x0000000002df9942: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df994a: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [88]=Oop off=815}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ;   {runtime_call}
  0x0000000002df994f: jmpq   0x0000000002df974c
  0x0000000002df9954: mov    %rdx,%rdx
  0x0000000002df9957: callq  0x0000000002dade00  ; OopMap{rbx=Oop [88]=Oop off=828}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ;   {runtime_call}
  0x0000000002df995c: jmpq   0x0000000002df9832
  0x0000000002df9961: mov    %rdi,0x8(%rsp)
  0x0000000002df9966: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df996e: callq  0x0000000002db1d60  ; OopMap{rsi=Oop rax=Oop [88]=Oop off=851}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ;   {runtime_call}
  0x0000000002df9973: jmpq   0x0000000002df9883
  0x0000000002df9978: mov    %rdi,0x8(%rsp)
  0x0000000002df997d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df9985: callq  0x0000000002db1d60  ; OopMap{rsi=Oop rax=Oop [88]=Oop off=874}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ;   {runtime_call}
  0x0000000002df998a: jmpq   0x0000000002df98ca
  0x0000000002df998f: lea    0x50(%rsp),%rax
  0x0000000002df9994: mov    %rax,(%rsp)
  0x0000000002df9998: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df999d: jmpq   0x0000000002df991b
  0x0000000002df99a2: nop
  0x0000000002df99a3: nop
  0x0000000002df99a4: mov    0x2a8(%r15),%rax
  0x0000000002df99ab: movabs $0x0,%r10
  0x0000000002df99b5: mov    %r10,0x2a8(%r15)
  0x0000000002df99bc: movabs $0x0,%r10
  0x0000000002df99c6: mov    %r10,0x2b0(%r15)
  0x0000000002df99cd: mov    %rax,%rbx
  0x0000000002df99d0: lea    0x50(%rsp),%rax
  0x0000000002df99d5: mov    0x8(%rax),%rsi
  0x0000000002df99d9: mov    (%rsi),%rdi
  0x0000000002df99dc: and    $0x7,%rdi
  0x0000000002df99e0: cmp    $0x5,%rdi
  0x0000000002df99e4: je     0x0000000002df9a01
  0x0000000002df99ea: mov    (%rax),%rdi
  0x0000000002df99ed: test   %rdi,%rdi
  0x0000000002df99f0: je     0x0000000002df9a01
  0x0000000002df99f6: lock cmpxchg %rdi,(%rsi)
  0x0000000002df99fb: jne    0x0000000002df9a0e
  0x0000000002df9a01: mov    %rbx,%rax
  0x0000000002df9a04: add    $0x70,%rsp
  0x0000000002df9a08: pop    %rbp
  0x0000000002df9a09: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df9a0e: lea    0x50(%rsp),%rax
  0x0000000002df9a13: mov    %rax,(%rsp)
  0x0000000002df9a17: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002df9a1c: jmp    0x0000000002df9a01
  0x0000000002df9a1e: hlt    
  0x0000000002df9a1f: hlt    
[Stub Code]
  0x0000000002df9a20: nop                       ;   {no_reloc}
  0x0000000002df9a21: nop
  0x0000000002df9a22: nop
  0x0000000002df9a23: nop
  0x0000000002df9a24: nop
  0x0000000002df9a25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002df9a2f: jmpq   0x0000000002df9a2f  ;   {runtime_call}
[Exception Handler]
  0x0000000002df9a34: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002df9a39: mov    %rsp,-0x28(%rsp)
  0x0000000002df9a3e: sub    $0x80,%rsp
  0x0000000002df9a45: mov    %rax,0x78(%rsp)
  0x0000000002df9a4a: mov    %rcx,0x70(%rsp)
  0x0000000002df9a4f: mov    %rdx,0x68(%rsp)
  0x0000000002df9a54: mov    %rbx,0x60(%rsp)
  0x0000000002df9a59: mov    %rbp,0x50(%rsp)
  0x0000000002df9a5e: mov    %rsi,0x48(%rsp)
  0x0000000002df9a63: mov    %rdi,0x40(%rsp)
  0x0000000002df9a68: mov    %r8,0x38(%rsp)
  0x0000000002df9a6d: mov    %r9,0x30(%rsp)
  0x0000000002df9a72: mov    %r10,0x28(%rsp)
  0x0000000002df9a77: mov    %r11,0x20(%rsp)
  0x0000000002df9a7c: mov    %r12,0x18(%rsp)
  0x0000000002df9a81: mov    %r13,0x10(%rsp)
  0x0000000002df9a86: mov    %r14,0x8(%rsp)
  0x0000000002df9a8b: mov    %r15,(%rsp)
  0x0000000002df9a8f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df9a99: movabs $0x2df9a39,%rdx    ;   {internal_word}
  0x0000000002df9aa3: mov    %rsp,%r8
  0x0000000002df9aa6: and    $0xfffffffffffffff0,%rsp
  0x0000000002df9aaa: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df9aaf: hlt    
[Deopt Handler Code]
  0x0000000002df9ab0: movabs $0x2df9ab0,%r10    ;   {section_word}
  0x0000000002df9aba: push   %r10
  0x0000000002df9abc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df9ac1: hlt    
  0x0000000002df9ac2: hlt    
  0x0000000002df9ac3: hlt    
  0x0000000002df9ac4: hlt    
  0x0000000002df9ac5: hlt    
  0x0000000002df9ac6: hlt    
  0x0000000002df9ac7: hlt    
<nmethod compile_id='108' compiler='C1' level='3' entry='0x0000000002df9620' size='2096' address='0x0000000002df9490' relocation_offset='288' insts_offset='400' stub_offset='1424' scopes_data_offset='1616' scopes_pcs_offset='1768' dependencies_offset='2088' method='java/lang/StringBuffer toString ()Ljava/lang/String;' bytes='36' count='1337' iicount='1337' stamp='1.993'/>
Decoding compiled method 0x0000000002df9cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = boolean
  #           [sp+0x40]  (sp of caller)
  0x0000000002df9e20: mov    0x8(%rdx),%r10d
  0x0000000002df9e24: shl    $0x3,%r10
  0x0000000002df9e28: cmp    %rax,%r10
  0x0000000002df9e2b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df9e31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df9e3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df9e40: mov    %eax,-0x6000(%rsp)
  0x0000000002df9e47: push   %rbp
  0x0000000002df9e48: sub    $0x30,%rsp
  0x0000000002df9e4c: movabs $0x1beb5650,%rsi   ;   {metadata(method data for {method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df9e56: mov    0xdc(%rsi),%edi
  0x0000000002df9e5c: add    $0x8,%edi
  0x0000000002df9e5f: mov    %edi,0xdc(%rsi)
  0x0000000002df9e65: movabs $0x1bc73b80,%rsi   ;   {metadata({method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df9e6f: and    $0x1ff8,%edi
  0x0000000002df9e75: cmp    $0x0,%edi
  0x0000000002df9e78: je     0x0000000002df9eee  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 609)

  0x0000000002df9e7e: mov    %rdx,%rsi
  0x0000000002df9e81: movabs $0x1beb5650,%rdi   ;   {metadata(method data for {method} {0x000000001bc73b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000002df9e8b: addq   $0x1,0x108(%rdi)
  0x0000000002df9e93: movabs $0x1bda1c10,%rsi   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df9e9d: mov    0xdc(%rsi),%edi
  0x0000000002df9ea3: add    $0x8,%edi
  0x0000000002df9ea6: mov    %edi,0xdc(%rsi)
  0x0000000002df9eac: movabs $0x1bc70480,%rsi   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002df9eb6: and    $0x7ffff8,%edi
  0x0000000002df9ebc: cmp    $0x0,%edi
  0x0000000002df9ebf: je     0x0000000002df9f05
  0x0000000002df9ec5: mov    %r8,%r10
  0x0000000002df9ec8: shr    $0x3,%r10
  0x0000000002df9ecc: mov    %r10d,0xc(%rdx)
  0x0000000002df9ed0: shr    $0x9,%rdx
  0x0000000002df9ed4: movabs $0xea5d000,%rsi
  0x0000000002df9ede: movb   $0x0,(%rdx,%rsi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)

  0x0000000002df9ee2: add    $0x30,%rsp
  0x0000000002df9ee6: pop    %rbp
  0x0000000002df9ee7: test   %eax,-0x21f9ded(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df9eed: retq   
  0x0000000002df9eee: mov    %rsi,0x8(%rsp)
  0x0000000002df9ef3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df9efb: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=224}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ;   {runtime_call}
  0x0000000002df9f00: jmpq   0x0000000002df9e7e
  0x0000000002df9f05: mov    %rsi,0x8(%rsp)
  0x0000000002df9f0a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002df9f12: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop off=247}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ;   {runtime_call}
  0x0000000002df9f17: jmp    0x0000000002df9ec5
  0x0000000002df9f19: nop
  0x0000000002df9f1a: nop
  0x0000000002df9f1b: mov    0x2a8(%r15),%rax
  0x0000000002df9f22: movabs $0x0,%r10
  0x0000000002df9f2c: mov    %r10,0x2a8(%r15)
  0x0000000002df9f33: movabs $0x0,%r10
  0x0000000002df9f3d: mov    %r10,0x2b0(%r15)
  0x0000000002df9f44: add    $0x30,%rsp
  0x0000000002df9f48: pop    %rbp
  0x0000000002df9f49: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df9f4e: hlt    
  0x0000000002df9f4f: hlt    
  0x0000000002df9f50: hlt    
  0x0000000002df9f51: hlt    
  0x0000000002df9f52: hlt    
  0x0000000002df9f53: hlt    
  0x0000000002df9f54: hlt    
  0x0000000002df9f55: hlt    
  0x0000000002df9f56: hlt    
  0x0000000002df9f57: hlt    
  0x0000000002df9f58: hlt    
  0x0000000002df9f59: hlt    
  0x0000000002df9f5a: hlt    
  0x0000000002df9f5b: hlt    
  0x0000000002df9f5c: hlt    
  0x0000000002df9f5d: hlt    
  0x0000000002df9f5e: hlt    
  0x0000000002df9f5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002df9f60: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002df9f65: mov    %rsp,-0x28(%rsp)
  0x0000000002df9f6a: sub    $0x80,%rsp
  0x0000000002df9f71: mov    %rax,0x78(%rsp)
  0x0000000002df9f76: mov    %rcx,0x70(%rsp)
  0x0000000002df9f7b: mov    %rdx,0x68(%rsp)
  0x0000000002df9f80: mov    %rbx,0x60(%rsp)
  0x0000000002df9f85: mov    %rbp,0x50(%rsp)
  0x0000000002df9f8a: mov    %rsi,0x48(%rsp)
  0x0000000002df9f8f: mov    %rdi,0x40(%rsp)
  0x0000000002df9f94: mov    %r8,0x38(%rsp)
  0x0000000002df9f99: mov    %r9,0x30(%rsp)
  0x0000000002df9f9e: mov    %r10,0x28(%rsp)
  0x0000000002df9fa3: mov    %r11,0x20(%rsp)
  0x0000000002df9fa8: mov    %r12,0x18(%rsp)
  0x0000000002df9fad: mov    %r13,0x10(%rsp)
  0x0000000002df9fb2: mov    %r14,0x8(%rsp)
  0x0000000002df9fb7: mov    %r15,(%rsp)
  0x0000000002df9fbb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df9fc5: movabs $0x2df9f65,%rdx    ;   {internal_word}
  0x0000000002df9fcf: mov    %rsp,%r8
  0x0000000002df9fd2: and    $0xfffffffffffffff0,%rsp
  0x0000000002df9fd6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df9fdb: hlt    
[Deopt Handler Code]
  0x0000000002df9fdc: movabs $0x2df9fdc,%r10    ;   {section_word}
  0x0000000002df9fe6: push   %r10
  0x0000000002df9fe8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df9fed: hlt    
  0x0000000002df9fee: hlt    
  0x0000000002df9fef: hlt    
<nmethod compile_id='109' compiler='C1' level='3' entry='0x0000000002df9e20' size='976' address='0x0000000002df9cd0' relocation_offset='288' insts_offset='336' stub_offset='656' scopes_data_offset='816' scopes_pcs_offset='872' dependencies_offset='968' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='1698' iicount='1698' stamp='1.997'/>
Decoding compiled method 0x0000000002dfa0d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;
  # this:     rdx:rdx   = &apos;java/util/Hashtable&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi       = int
  #           [sp+0xa0]  (sp of caller)
  0x0000000002dfa280: mov    0x8(%rdx),%r10d
  0x0000000002dfa284: shl    $0x3,%r10
  0x0000000002dfa288: cmp    %rax,%r10
  0x0000000002dfa28b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dfa291: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dfa29c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dfa2a0: mov    %eax,-0x6000(%rsp)
  0x0000000002dfa2a7: push   %rbp
  0x0000000002dfa2a8: sub    $0x90,%rsp
  0x0000000002dfa2af: mov    %rdx,0x68(%rsp)
  0x0000000002dfa2b4: mov    %r9,0x70(%rsp)
  0x0000000002dfa2b9: movabs $0x1bff5270,%rbx   ;   {metadata(method data for {method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002dfa2c3: mov    0xdc(%rbx),%eax
  0x0000000002dfa2c9: add    $0x8,%eax
  0x0000000002dfa2cc: mov    %eax,0xdc(%rbx)
  0x0000000002dfa2d2: movabs $0x1bca7ea8,%rbx   ;   {metadata({method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002dfa2dc: and    $0x1ff8,%eax
  0x0000000002dfa2e2: cmp    $0x0,%eax
  0x0000000002dfa2e5: je     0x0000000002dfa75c  ;*aload_0
                                                ; - java.util.Hashtable::addEntry@0 (line 420)

  0x0000000002dfa2eb: mov    0x18(%rdx),%ebx    ;*getfield modCount
                                                ; - java.util.Hashtable::addEntry@2 (line 420)

  0x0000000002dfa2ee: inc    %ebx
  0x0000000002dfa2f0: mov    %ebx,0x18(%rdx)    ;*putfield modCount
                                                ; - java.util.Hashtable::addEntry@7 (line 420)

  0x0000000002dfa2f3: mov    0x1c(%rdx),%ebx
  0x0000000002dfa2f6: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.Hashtable::addEntry@11 (line 422)

  0x0000000002dfa2fa: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.util.Hashtable::addEntry@17 (line 423)

  0x0000000002dfa2fd: mov    0x10(%rdx),%ecx    ;*getfield threshold
                                                ; - java.util.Hashtable::addEntry@21 (line 423)

  0x0000000002dfa300: cmp    %ecx,%eax
  0x0000000002dfa302: movabs $0x1bff5270,%rax   ;   {metadata(method data for {method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002dfa30c: movabs $0x108,%rcx
  0x0000000002dfa316: jl     0x0000000002dfa326
  0x0000000002dfa31c: movabs $0x118,%rcx
  0x0000000002dfa326: mov    (%rax,%rcx,1),%r11
  0x0000000002dfa32a: lea    0x1(%r11),%r11
  0x0000000002dfa32e: mov    %r11,(%rax,%rcx,1)
  0x0000000002dfa332: jge    0x0000000002dfa343  ;*if_icmplt
                                                ; - java.util.Hashtable::addEntry@24 (line 423)

  0x0000000002dfa338: mov    %rsi,%r11
  0x0000000002dfa33b: mov    %rdi,%r13
  0x0000000002dfa33e: jmpq   0x0000000002dfa4e8  ;*aload
                                                ; - java.util.Hashtable::addEntry@52 (line 434)

  0x0000000002dfa343: mov    %rdi,0x78(%rsp)
  0x0000000002dfa348: mov    %rdx,%rsi
  0x0000000002dfa34b: movabs $0x1bff5270,%rbx   ;   {metadata(method data for {method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002dfa355: mov    0x8(%rsi),%esi
  0x0000000002dfa358: shl    $0x3,%rsi
  0x0000000002dfa35c: cmp    0x130(%rbx),%rsi
  0x0000000002dfa363: jne    0x0000000002dfa372
  0x0000000002dfa365: addq   $0x1,0x138(%rbx)
  0x0000000002dfa36d: jmpq   0x0000000002dfa3d8
  0x0000000002dfa372: cmp    0x140(%rbx),%rsi
  0x0000000002dfa379: jne    0x0000000002dfa388
  0x0000000002dfa37b: addq   $0x1,0x148(%rbx)
  0x0000000002dfa383: jmpq   0x0000000002dfa3d8
  0x0000000002dfa388: cmpq   $0x0,0x130(%rbx)
  0x0000000002dfa393: jne    0x0000000002dfa3ac
  0x0000000002dfa395: mov    %rsi,0x130(%rbx)
  0x0000000002dfa39c: movq   $0x1,0x138(%rbx)
  0x0000000002dfa3a7: jmpq   0x0000000002dfa3d8
  0x0000000002dfa3ac: cmpq   $0x0,0x140(%rbx)
  0x0000000002dfa3b7: jne    0x0000000002dfa3d0
  0x0000000002dfa3b9: mov    %rsi,0x140(%rbx)
  0x0000000002dfa3c0: movq   $0x1,0x148(%rbx)
  0x0000000002dfa3cb: jmpq   0x0000000002dfa3d8
  0x0000000002dfa3d0: addq   $0x1,0x128(%rbx)
  0x0000000002dfa3d8: mov    %rdx,%rsi
  0x0000000002dfa3db: mov    %rsi,%rdx          ;*invokevirtual rehash
                                                ; - java.util.Hashtable::addEntry@28 (line 425)

  0x0000000002dfa3de: nop
  0x0000000002dfa3df: callq  0x0000000002cf61a0  ; OopMap{[112]=Oop [104]=Oop [120]=Oop off=356}
                                                ;*invokevirtual rehash
                                                ; - java.util.Hashtable::addEntry@28 (line 425)
                                                ;   {optimized virtual_call}
  0x0000000002dfa3e4: mov    0x68(%rsp),%rdx
  0x0000000002dfa3e9: mov    0x1c(%rdx),%esi
  0x0000000002dfa3ec: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.Hashtable::addEntry@32 (line 427)

  0x0000000002dfa3f0: mov    0x70(%rsp),%r9
  0x0000000002dfa3f5: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x0000000002dfa773
  0x0000000002dfa3f8: mov    %r9,%rdi
  0x0000000002dfa3fb: movabs $0x1bff5270,%rbx   ;   {metadata(method data for {method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002dfa405: mov    0x8(%rdi),%edi
  0x0000000002dfa408: shl    $0x3,%rdi
  0x0000000002dfa40c: cmp    0x160(%rbx),%rdi
  0x0000000002dfa413: jne    0x0000000002dfa422
  0x0000000002dfa415: addq   $0x1,0x168(%rbx)
  0x0000000002dfa41d: jmpq   0x0000000002dfa488
  0x0000000002dfa422: cmp    0x170(%rbx),%rdi
  0x0000000002dfa429: jne    0x0000000002dfa438
  0x0000000002dfa42b: addq   $0x1,0x178(%rbx)
  0x0000000002dfa433: jmpq   0x0000000002dfa488
  0x0000000002dfa438: cmpq   $0x0,0x160(%rbx)
  0x0000000002dfa443: jne    0x0000000002dfa45c
  0x0000000002dfa445: mov    %rdi,0x160(%rbx)
  0x0000000002dfa44c: movq   $0x1,0x168(%rbx)
  0x0000000002dfa457: jmpq   0x0000000002dfa488
  0x0000000002dfa45c: cmpq   $0x0,0x170(%rbx)
  0x0000000002dfa467: jne    0x0000000002dfa480
  0x0000000002dfa469: mov    %rdi,0x170(%rbx)
  0x0000000002dfa470: movq   $0x1,0x178(%rbx)
  0x0000000002dfa47b: jmpq   0x0000000002dfa488
  0x0000000002dfa480: addq   $0x1,0x158(%rbx)
  0x0000000002dfa488: mov    %r9,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::addEntry@38 (line 428)

  0x0000000002dfa48b: mov    %rsi,0x80(%rsp)
  0x0000000002dfa493: nop
  0x0000000002dfa494: nop
  0x0000000002dfa495: movabs $0xffffffffffffffff,%rax
  0x0000000002dfa49f: callq  0x0000000002cf63e0  ; OopMap{[120]=Oop [104]=Oop [112]=Oop [128]=Oop off=548}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::addEntry@38 (line 428)
                                                ;   {virtual_call}
  0x0000000002dfa4a4: mov    %rax,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::addEntry@38 (line 428)

  0x0000000002dfa4a7: mov    0x80(%rsp),%rdi
  0x0000000002dfa4af: mov    0xc(%rdi),%ecx     ;*arraylength
                                                ; - java.util.Hashtable::addEntry@48 (line 429)
                                                ; implicit exception: dispatches to 0x0000000002dfa778
  0x0000000002dfa4b2: mov    %rsi,%rax
  0x0000000002dfa4b5: and    $0x7fffffff,%eax
  0x0000000002dfa4bb: cmp    $0x80000000,%eax
  0x0000000002dfa4c1: jne    0x0000000002dfa4d2
  0x0000000002dfa4c7: xor    %edx,%edx
  0x0000000002dfa4c9: cmp    $0xffffffff,%ecx
  0x0000000002dfa4cc: je     0x0000000002dfa4d5
  0x0000000002dfa4d2: cltd   
  0x0000000002dfa4d3: idiv   %ecx               ;*irem
                                                ; - java.util.Hashtable::addEntry@49 (line 429)
                                                ; implicit exception: dispatches to 0x0000000002dfa77d
  0x0000000002dfa4d5: mov    %rdi,%rbx
  0x0000000002dfa4d8: mov    %rdx,%r11
  0x0000000002dfa4db: mov    %rsi,%r8           ;*aload
                                                ; - java.util.Hashtable::addEntry@52 (line 434)

  0x0000000002dfa4de: mov    0x78(%rsp),%r13
  0x0000000002dfa4e3: mov    0x70(%rsp),%r9
  0x0000000002dfa4e8: movslq %r11d,%rdx
  0x0000000002dfa4eb: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002dfa782
  0x0000000002dfa4ef: jae    0x0000000002dfa78c
  0x0000000002dfa4f5: mov    0x10(%rbx,%rdx,4),%esi
  0x0000000002dfa4f9: shl    $0x3,%rsi          ;*aaload
                                                ; - java.util.Hashtable::addEntry@56 (line 434)

  0x0000000002dfa4fd: movabs $0x7c001cac0,%rdx  ;   {metadata(&apos;java/util/Hashtable$Entry&apos;)}
  0x0000000002dfa507: mov    %rsi,%r14
  0x0000000002dfa50a: mov    0x60(%r15),%rax
  0x0000000002dfa50e: lea    0x20(%rax),%rdi
  0x0000000002dfa512: cmp    0x70(%r15),%rdi
  0x0000000002dfa516: ja     0x0000000002dfa795
  0x0000000002dfa51c: mov    %rdi,0x60(%r15)
  0x0000000002dfa520: mov    0xa8(%rdx),%rcx
  0x0000000002dfa527: mov    %rcx,(%rax)
  0x0000000002dfa52a: mov    %rdx,%rcx
  0x0000000002dfa52d: shr    $0x3,%rcx
  0x0000000002dfa531: mov    %ecx,0x8(%rax)
  0x0000000002dfa534: xor    %rcx,%rcx
  0x0000000002dfa537: mov    %ecx,0xc(%rax)
  0x0000000002dfa53a: xor    %rcx,%rcx
  0x0000000002dfa53d: mov    %rcx,0x10(%rax)
  0x0000000002dfa541: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Hashtable::addEntry@63 (line 435)

  0x0000000002dfa545: mov    %rax,%rsi
  0x0000000002dfa548: movabs $0x1bff5270,%rdi   ;   {metadata(method data for {method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002dfa552: addq   $0x1,0x188(%rdi)
  0x0000000002dfa55a: movabs $0x1bff56f0,%rsi   ;   {metadata(method data for {method} {0x000000001bd5f970} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/Hashtable$Entry;)V&apos; in &apos;java/util/Hashtable$Entry&apos;)}
  0x0000000002dfa564: mov    0xdc(%rsi),%edi
  0x0000000002dfa56a: add    $0x8,%edi
  0x0000000002dfa56d: mov    %edi,0xdc(%rsi)
  0x0000000002dfa573: movabs $0x1bd5f968,%rsi   ;   {metadata({method} {0x000000001bd5f970} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/Hashtable$Entry;)V&apos; in &apos;java/util/Hashtable$Entry&apos;)}
  0x0000000002dfa57d: and    $0x7ffff8,%edi
  0x0000000002dfa583: cmp    $0x0,%edi
  0x0000000002dfa586: je     0x0000000002dfa7a2
  0x0000000002dfa58c: mov    %rax,%rsi
  0x0000000002dfa58f: movabs $0x1bff56f0,%rdi   ;   {metadata(method data for {method} {0x000000001bd5f970} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/Hashtable$Entry;)V&apos; in &apos;java/util/Hashtable$Entry&apos;)}
  0x0000000002dfa599: addq   $0x1,0x108(%rdi)
  0x0000000002dfa5a1: movabs $0x1bda1c10,%rsi   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dfa5ab: mov    0xdc(%rsi),%edi
  0x0000000002dfa5b1: add    $0x8,%edi
  0x0000000002dfa5b4: mov    %edi,0xdc(%rsi)
  0x0000000002dfa5ba: movabs $0x1bc70480,%rsi   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dfa5c4: and    $0x7ffff8,%edi
  0x0000000002dfa5ca: cmp    $0x0,%edi
  0x0000000002dfa5cd: je     0x0000000002dfa7b9
  0x0000000002dfa5d3: mov    %r8d,0xc(%rax)     ;*putfield hash
                                                ; - java.util.Hashtable$Entry::&lt;init&gt;@6 (line 1253)
                                                ; - java.util.Hashtable::addEntry@72 (line 435)

  0x0000000002dfa5d7: mov    %r9,%r10
  0x0000000002dfa5da: shr    $0x3,%r10
  0x0000000002dfa5de: mov    %r10d,0x10(%rax)
  0x0000000002dfa5e2: mov    %rax,%rsi
  0x0000000002dfa5e5: shr    $0x9,%rsi
  0x0000000002dfa5e9: movabs $0xea5d000,%rdi
  0x0000000002dfa5f3: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.Hashtable$Entry::&lt;init&gt;@11 (line 1254)
                                                ; - java.util.Hashtable::addEntry@72 (line 435)

  0x0000000002dfa5f7: mov    %r13,%r10
  0x0000000002dfa5fa: shr    $0x3,%r10
  0x0000000002dfa5fe: mov    %r10d,0x14(%rax)
  0x0000000002dfa602: mov    %rax,%rsi
  0x0000000002dfa605: shr    $0x9,%rsi
  0x0000000002dfa609: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.Hashtable$Entry::&lt;init&gt;@16 (line 1255)
                                                ; - java.util.Hashtable::addEntry@72 (line 435)

  0x0000000002dfa60d: mov    %r14,%r10
  0x0000000002dfa610: shr    $0x3,%r10
  0x0000000002dfa614: mov    %r10d,0x18(%rax)
  0x0000000002dfa618: mov    %rax,%rsi
  0x0000000002dfa61b: shr    $0x9,%rsi
  0x0000000002dfa61f: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.Hashtable$Entry::&lt;init&gt;@22 (line 1256)
                                                ; - java.util.Hashtable::addEntry@72 (line 435)

  0x0000000002dfa623: movslq %r11d,%r11
  0x0000000002dfa626: lea    0x10(%rbx,%r11,4),%rsi
  0x0000000002dfa62b: cmp    $0x0,%rax
  0x0000000002dfa62f: jne    0x0000000002dfa64a
  0x0000000002dfa631: movabs $0x1bff5270,%rdx   ;   {metadata(method data for {method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002dfa63b: orl    $0x100,0x190(%rdx)
  0x0000000002dfa645: jmpq   0x0000000002dfa72e
  0x0000000002dfa64a: mov    0x8(%rbx),%ebx     ; implicit exception: dispatches to 0x0000000002dfa7d0
  0x0000000002dfa64d: shl    $0x3,%rbx
  0x0000000002dfa651: mov    0x8(%rax),%edx
  0x0000000002dfa654: shl    $0x3,%rdx
  0x0000000002dfa658: mov    0xf0(%rbx),%rbx
  0x0000000002dfa65f: cmp    %rbx,%rdx
  0x0000000002dfa662: je     0x0000000002dfa690
  0x0000000002dfa668: mov    0xc(%rbx),%ecx
  0x0000000002dfa66b: cmp    (%rdx,%rcx,1),%rbx
  0x0000000002dfa66f: je     0x0000000002dfa690
  0x0000000002dfa675: cmp    $0x18,%ecx
  0x0000000002dfa678: jne    0x0000000002dfa717
  0x0000000002dfa67e: push   %rdx
  0x0000000002dfa67f: push   %rbx
  0x0000000002dfa680: callq  0x0000000002dafce0  ;   {runtime_call}
  0x0000000002dfa685: pop    %rdx
  0x0000000002dfa686: pop    %rbx
  0x0000000002dfa687: cmp    $0x0,%ebx
  0x0000000002dfa68a: je     0x0000000002dfa717
  0x0000000002dfa690: movabs $0x1bff5270,%rdx   ;   {metadata(method data for {method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002dfa69a: mov    0x8(%rax),%ebx
  0x0000000002dfa69d: shl    $0x3,%rbx
  0x0000000002dfa6a1: cmp    0x1a0(%rdx),%rbx
  0x0000000002dfa6a8: jne    0x0000000002dfa6b7
  0x0000000002dfa6aa: addq   $0x1,0x1a8(%rdx)
  0x0000000002dfa6b2: jmpq   0x0000000002dfa72e
  0x0000000002dfa6b7: cmp    0x1b0(%rdx),%rbx
  0x0000000002dfa6be: jne    0x0000000002dfa6cd
  0x0000000002dfa6c0: addq   $0x1,0x1b8(%rdx)
  0x0000000002dfa6c8: jmpq   0x0000000002dfa72e
  0x0000000002dfa6cd: cmpq   $0x0,0x1a0(%rdx)
  0x0000000002dfa6d8: jne    0x0000000002dfa6f1
  0x0000000002dfa6da: mov    %rbx,0x1a0(%rdx)
  0x0000000002dfa6e1: movq   $0x1,0x1a8(%rdx)
  0x0000000002dfa6ec: jmpq   0x0000000002dfa72e
  0x0000000002dfa6f1: cmpq   $0x0,0x1b0(%rdx)
  0x0000000002dfa6fc: jne    0x0000000002dfa715
  0x0000000002dfa6fe: mov    %rbx,0x1b0(%rdx)
  0x0000000002dfa705: movq   $0x1,0x1b8(%rdx)
  0x0000000002dfa710: jmpq   0x0000000002dfa72e
  0x0000000002dfa715: jmp    0x0000000002dfa72e
  0x0000000002dfa717: movabs $0x1bff5270,%rdx   ;   {metadata(method data for {method} {0x000000001bca7eb0} &apos;addEntry&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;I)V&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000002dfa721: subq   $0x1,0x198(%rdx)
  0x0000000002dfa729: jmpq   0x0000000002dfa7d5
  0x0000000002dfa72e: mov    %rax,%r10
  0x0000000002dfa731: shr    $0x3,%r10
  0x0000000002dfa735: mov    %r10d,(%rsi)
  0x0000000002dfa738: shr    $0x9,%rsi
  0x0000000002dfa73c: movb   $0x0,(%rsi,%rdi,1)  ;*aastore
                                                ; - java.util.Hashtable::addEntry@75 (line 435)

  0x0000000002dfa740: mov    0x68(%rsp),%rdx
  0x0000000002dfa745: mov    0xc(%rdx),%esi     ;*getfield count
                                                ; - java.util.Hashtable::addEntry@78 (line 436)

  0x0000000002dfa748: inc    %esi
  0x0000000002dfa74a: mov    %esi,0xc(%rdx)     ;*putfield count
                                                ; - java.util.Hashtable::addEntry@83 (line 436)

  0x0000000002dfa74d: add    $0x90,%rsp
  0x0000000002dfa754: pop    %rbp
  0x0000000002dfa755: test   %eax,-0x21fa65b(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dfa75b: retq   
  0x0000000002dfa75c: mov    %rbx,0x8(%rsp)
  0x0000000002dfa761: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfa769: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [104]=Oop r9=Oop [112]=Oop rdi=Oop off=1262}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::addEntry@-1 (line 420)
                                                ;   {runtime_call}
  0x0000000002dfa76e: jmpq   0x0000000002dfa2eb
  0x0000000002dfa773: callq  0x0000000002dad680  ; OopMap{[120]=Oop rdx=Oop [104]=Oop rsi=Oop r9=Oop [112]=Oop off=1272}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::addEntry@38 (line 428)
                                                ;   {runtime_call}
  0x0000000002dfa778: callq  0x0000000002dad680  ; OopMap{[120]=Oop [104]=Oop [112]=Oop rdi=Oop off=1277}
                                                ;*arraylength
                                                ; - java.util.Hashtable::addEntry@48 (line 429)
                                                ;   {runtime_call}
  0x0000000002dfa77d: callq  0x0000000002dad440  ; OopMap{[120]=Oop [104]=Oop [112]=Oop rdi=Oop off=1282}
                                                ;*irem
                                                ; - java.util.Hashtable::addEntry@49 (line 429)
                                                ;   {runtime_call}
  0x0000000002dfa782: callq  0x0000000002dad680  ; OopMap{rbx=Oop [104]=Oop r9=Oop [112]=Oop r13=Oop off=1287}
                                                ;*aaload
                                                ; - java.util.Hashtable::addEntry@56 (line 434)
                                                ;   {runtime_call}
  0x0000000002dfa787: callq  0x0000000002dad680  ; OopMap{rbx=Oop [104]=Oop r9=Oop [112]=Oop r13=Oop off=1292}
                                                ;*aaload
                                                ; - java.util.Hashtable::addEntry@56 (line 434)
                                                ;   {runtime_call}
  0x0000000002dfa78c: mov    %r11,(%rsp)
  0x0000000002dfa790: callq  0x0000000002dac940  ; OopMap{rbx=Oop [104]=Oop r9=Oop [112]=Oop r13=Oop off=1301}
                                                ;*aaload
                                                ; - java.util.Hashtable::addEntry@56 (line 434)
                                                ;   {runtime_call}
  0x0000000002dfa795: mov    %rdx,%rdx
  0x0000000002dfa798: callq  0x0000000002dade00  ; OopMap{rbx=Oop [104]=Oop r9=Oop [112]=Oop r13=Oop r14=Oop off=1309}
                                                ;*new  ; - java.util.Hashtable::addEntry@63 (line 435)
                                                ;   {runtime_call}
  0x0000000002dfa79d: jmpq   0x0000000002dfa545
  0x0000000002dfa7a2: mov    %rsi,0x8(%rsp)
  0x0000000002dfa7a7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfa7af: callq  0x0000000002db1d60  ; OopMap{rbx=Oop [104]=Oop r9=Oop [112]=Oop r13=Oop r14=Oop rax=Oop off=1332}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable$Entry::&lt;init&gt;@-1 (line 1252)
                                                ; - java.util.Hashtable::addEntry@72 (line 435)
                                                ;   {runtime_call}
  0x0000000002dfa7b4: jmpq   0x0000000002dfa58c
  0x0000000002dfa7b9: mov    %rsi,0x8(%rsp)
  0x0000000002dfa7be: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfa7c6: callq  0x0000000002db1d60  ; OopMap{rbx=Oop [104]=Oop r9=Oop [112]=Oop r13=Oop r14=Oop rax=Oop off=1355}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.Hashtable$Entry::&lt;init&gt;@1 (line 1252)
                                                ; - java.util.Hashtable::addEntry@72 (line 435)
                                                ;   {runtime_call}
  0x0000000002dfa7cb: jmpq   0x0000000002dfa5d3
  0x0000000002dfa7d0: callq  0x0000000002dad680  ; OopMap{[104]=Oop rax=Oop off=1365}
                                                ;*aastore
                                                ; - java.util.Hashtable::addEntry@75 (line 435)
                                                ;   {runtime_call}
  0x0000000002dfa7d5: mov    %rax,(%rsp)
  0x0000000002dfa7d9: callq  0x0000000002daf640  ; OopMap{[104]=Oop rax=Oop off=1374}
                                                ;*aastore
                                                ; - java.util.Hashtable::addEntry@75 (line 435)
                                                ;   {runtime_call}
  0x0000000002dfa7de: nop
  0x0000000002dfa7df: nop
  0x0000000002dfa7e0: mov    0x2a8(%r15),%rax
  0x0000000002dfa7e7: movabs $0x0,%r10
  0x0000000002dfa7f1: mov    %r10,0x2a8(%r15)
  0x0000000002dfa7f8: movabs $0x0,%r10
  0x0000000002dfa802: mov    %r10,0x2b0(%r15)
  0x0000000002dfa809: add    $0x90,%rsp
  0x0000000002dfa810: pop    %rbp
  0x0000000002dfa811: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dfa816: hlt    
  0x0000000002dfa817: hlt    
  0x0000000002dfa818: hlt    
  0x0000000002dfa819: hlt    
  0x0000000002dfa81a: hlt    
  0x0000000002dfa81b: hlt    
  0x0000000002dfa81c: hlt    
  0x0000000002dfa81d: hlt    
  0x0000000002dfa81e: hlt    
  0x0000000002dfa81f: hlt    
[Stub Code]
  0x0000000002dfa820: nop                       ;   {no_reloc}
  0x0000000002dfa821: nop
  0x0000000002dfa822: nop
  0x0000000002dfa823: nop
  0x0000000002dfa824: nop
  0x0000000002dfa825: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dfa82f: jmpq   0x0000000002dfa82f  ;   {runtime_call}
  0x0000000002dfa834: nop
  0x0000000002dfa835: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dfa83f: jmpq   0x0000000002dfa83f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dfa844: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dfa849: mov    %rsp,-0x28(%rsp)
  0x0000000002dfa84e: sub    $0x80,%rsp
  0x0000000002dfa855: mov    %rax,0x78(%rsp)
  0x0000000002dfa85a: mov    %rcx,0x70(%rsp)
  0x0000000002dfa85f: mov    %rdx,0x68(%rsp)
  0x0000000002dfa864: mov    %rbx,0x60(%rsp)
  0x0000000002dfa869: mov    %rbp,0x50(%rsp)
  0x0000000002dfa86e: mov    %rsi,0x48(%rsp)
  0x0000000002dfa873: mov    %rdi,0x40(%rsp)
  0x0000000002dfa878: mov    %r8,0x38(%rsp)
  0x0000000002dfa87d: mov    %r9,0x30(%rsp)
  0x0000000002dfa882: mov    %r10,0x28(%rsp)
  0x0000000002dfa887: mov    %r11,0x20(%rsp)
  0x0000000002dfa88c: mov    %r12,0x18(%rsp)
  0x0000000002dfa891: mov    %r13,0x10(%rsp)
  0x0000000002dfa896: mov    %r14,0x8(%rsp)
  0x0000000002dfa89b: mov    %r15,(%rsp)
  0x0000000002dfa89f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dfa8a9: movabs $0x2dfa849,%rdx    ;   {internal_word}
  0x0000000002dfa8b3: mov    %rsp,%r8
  0x0000000002dfa8b6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dfa8ba: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dfa8bf: hlt    
[Deopt Handler Code]
  0x0000000002dfa8c0: movabs $0x2dfa8c0,%r10    ;   {section_word}
  0x0000000002dfa8ca: push   %r10
  0x0000000002dfa8cc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dfa8d1: hlt    
  0x0000000002dfa8d2: hlt    
  0x0000000002dfa8d3: hlt    
  0x0000000002dfa8d4: hlt    
  0x0000000002dfa8d5: hlt    
  0x0000000002dfa8d6: hlt    
  0x0000000002dfa8d7: hlt    
<nmethod compile_id='106' compiler='C1' level='3' entry='0x0000000002dfa280' size='3168' address='0x0000000002dfa0d0' relocation_offset='288' insts_offset='432' stub_offset='1872' scopes_data_offset='2088' scopes_pcs_offset='2464' dependencies_offset='3104' nul_chk_table_offset='3112' method='java/util/Hashtable addEntry (ILjava/lang/Object;Ljava/lang/Object;I)V' bytes='87' count='273' iicount='273' stamp='2.009'/>
<writer thread='22236'/>
<task_queued compile_id='110' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='1280' iicount='1280' level='3' stamp='3.311' comment='tiered' hot_count='1280'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dfad50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002dfaec0: mov    0x8(%rdx),%r10d
  0x0000000002dfaec4: shl    $0x3,%r10
  0x0000000002dfaec8: cmp    %rax,%r10
  0x0000000002dfaecb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dfaed1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dfaedc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dfaee0: mov    %eax,-0x6000(%rsp)
  0x0000000002dfaee7: push   %rbp
  0x0000000002dfaee8: sub    $0x40,%rsp
  0x0000000002dfaeec: mov    %rdx,%r8
  0x0000000002dfaeef: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dfaef9: mov    0xdc(%rdx),%esi
  0x0000000002dfaeff: add    $0x8,%esi
  0x0000000002dfaf02: mov    %esi,0xdc(%rdx)
  0x0000000002dfaf08: movabs $0x1bce8d08,%rdx   ;   {metadata({method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dfaf12: and    $0x1ff8,%esi
  0x0000000002dfaf18: cmp    $0x0,%esi
  0x0000000002dfaf1b: je     0x0000000002dfafad
  0x0000000002dfaf21: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002dfaf2b: mov    0x60(%r15),%rax
  0x0000000002dfaf2f: lea    0x18(%rax),%rdi
  0x0000000002dfaf33: cmp    0x70(%r15),%rdi
  0x0000000002dfaf37: ja     0x0000000002dfafc4
  0x0000000002dfaf3d: mov    %rdi,0x60(%r15)
  0x0000000002dfaf41: mov    0xa8(%rdx),%rcx
  0x0000000002dfaf48: mov    %rcx,(%rax)
  0x0000000002dfaf4b: mov    %rdx,%rcx
  0x0000000002dfaf4e: shr    $0x3,%rcx
  0x0000000002dfaf52: mov    %ecx,0x8(%rax)
  0x0000000002dfaf55: xor    %rcx,%rcx
  0x0000000002dfaf58: mov    %ecx,0xc(%rax)
  0x0000000002dfaf5b: xor    %rcx,%rcx
  0x0000000002dfaf5e: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)

  0x0000000002dfaf62: mov    0x10(%r8),%r9d
  0x0000000002dfaf66: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)

  0x0000000002dfaf6a: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)

  0x0000000002dfaf6e: mov    %rax,%r8
  0x0000000002dfaf71: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002dfaf7b: addq   $0x1,0x108(%rdx)
  0x0000000002dfaf83: mov    %r9,%r8
  0x0000000002dfaf86: mov    $0x0,%r9d
  0x0000000002dfaf8c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)

  0x0000000002dfaf8f: mov    %rax,0x30(%rsp)
  0x0000000002dfaf94: nop
  0x0000000002dfaf95: nop
  0x0000000002dfaf96: nop
  0x0000000002dfaf97: callq  0x0000000002cf61a0  ; OopMap{[48]=Oop off=220}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ;   {optimized virtual_call}
  0x0000000002dfaf9c: mov    0x30(%rsp),%rax
  0x0000000002dfafa1: add    $0x40,%rsp
  0x0000000002dfafa5: pop    %rbp
  0x0000000002dfafa6: test   %eax,-0x21faeac(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dfafac: retq   
  0x0000000002dfafad: mov    %rdx,0x8(%rsp)
  0x0000000002dfafb2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfafba: callq  0x0000000002db1d60  ; OopMap{r8=Oop off=255}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ;   {runtime_call}
  0x0000000002dfafbf: jmpq   0x0000000002dfaf21
  0x0000000002dfafc4: mov    %rdx,%rdx
  0x0000000002dfafc7: callq  0x0000000002dade00  ; OopMap{r8=Oop off=268}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ;   {runtime_call}
  0x0000000002dfafcc: jmp    0x0000000002dfaf62
  0x0000000002dfafce: nop
  0x0000000002dfafcf: nop
  0x0000000002dfafd0: mov    0x2a8(%r15),%rax
  0x0000000002dfafd7: movabs $0x0,%r10
  0x0000000002dfafe1: mov    %r10,0x2a8(%r15)
  0x0000000002dfafe8: movabs $0x0,%r10
  0x0000000002dfaff2: mov    %r10,0x2b0(%r15)
  0x0000000002dfaff9: add    $0x40,%rsp
  0x0000000002dfaffd: pop    %rbp
  0x0000000002dfaffe: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dfb003: hlt    
  0x0000000002dfb004: hlt    
  0x0000000002dfb005: hlt    
  0x0000000002dfb006: hlt    
  0x0000000002dfb007: hlt    
  0x0000000002dfb008: hlt    
  0x0000000002dfb009: hlt    
  0x0000000002dfb00a: hlt    
  0x0000000002dfb00b: hlt    
  0x0000000002dfb00c: hlt    
  0x0000000002dfb00d: hlt    
  0x0000000002dfb00e: hlt    
  0x0000000002dfb00f: hlt    
  0x0000000002dfb010: hlt    
  0x0000000002dfb011: hlt    
  0x0000000002dfb012: hlt    
  0x0000000002dfb013: hlt    
  0x0000000002dfb014: hlt    
  0x0000000002dfb015: hlt    
  0x0000000002dfb016: hlt    
  0x0000000002dfb017: hlt    
  0x0000000002dfb018: hlt    
  0x0000000002dfb019: hlt    
  0x0000000002dfb01a: hlt    
  0x0000000002dfb01b: hlt    
  0x0000000002dfb01c: hlt    
  0x0000000002dfb01d: hlt    
  0x0000000002dfb01e: hlt    
  0x0000000002dfb01f: hlt    
[Stub Code]
  0x0000000002dfb020: nop                       ;   {no_reloc}
  0x0000000002dfb021: nop
  0x0000000002dfb022: nop
  0x0000000002dfb023: nop
  0x0000000002dfb024: nop
  0x0000000002dfb025: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dfb02f: jmpq   0x0000000002dfb02f  ;   {runtime_call}
[Exception Handler]
  0x0000000002dfb034: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dfb039: mov    %rsp,-0x28(%rsp)
  0x0000000002dfb03e: sub    $0x80,%rsp
  0x0000000002dfb045: mov    %rax,0x78(%rsp)
  0x0000000002dfb04a: mov    %rcx,0x70(%rsp)
  0x0000000002dfb04f: mov    %rdx,0x68(%rsp)
  0x0000000002dfb054: mov    %rbx,0x60(%rsp)
  0x0000000002dfb059: mov    %rbp,0x50(%rsp)
  0x0000000002dfb05e: mov    %rsi,0x48(%rsp)
  0x0000000002dfb063: mov    %rdi,0x40(%rsp)
  0x0000000002dfb068: mov    %r8,0x38(%rsp)
  0x0000000002dfb06d: mov    %r9,0x30(%rsp)
  0x0000000002dfb072: mov    %r10,0x28(%rsp)
  0x0000000002dfb077: mov    %r11,0x20(%rsp)
  0x0000000002dfb07c: mov    %r12,0x18(%rsp)
  0x0000000002dfb081: mov    %r13,0x10(%rsp)
  0x0000000002dfb086: mov    %r14,0x8(%rsp)
  0x0000000002dfb08b: mov    %r15,(%rsp)
  0x0000000002dfb08f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dfb099: movabs $0x2dfb039,%rdx    ;   {internal_word}
  0x0000000002dfb0a3: mov    %rsp,%r8
  0x0000000002dfb0a6: and    $0xfffffffffffffff0,%rsp
  0x0000000002dfb0aa: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dfb0af: hlt    
[Deopt Handler Code]
  0x0000000002dfb0b0: movabs $0x2dfb0b0,%r10    ;   {section_word}
  0x0000000002dfb0ba: push   %r10
  0x0000000002dfb0bc: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dfb0c1: hlt    
  0x0000000002dfb0c2: hlt    
  0x0000000002dfb0c3: hlt    
  0x0000000002dfb0c4: hlt    
  0x0000000002dfb0c5: hlt    
  0x0000000002dfb0c6: hlt    
  0x0000000002dfb0c7: hlt    
<nmethod compile_id='110' compiler='C1' level='3' entry='0x0000000002dfaec0' size='1104' address='0x0000000002dfad50' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='952' dependencies_offset='1096' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='1281' iicount='1281' stamp='3.315'/>
<writer thread='22236'/>
<task_queued compile_id='111' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='76800' iicount='76800' stamp='8.030' comment='tiered' hot_count='76800'/>
<task_queued compile_id='112' method='java/nio/Buffer position ()I' bytes='5' count='384' iicount='384' level='1' stamp='8.030' comment='tiered' hot_count='384'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002df7b90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd03f88} &apos;position&apos; &apos;()I&apos; in &apos;java/nio/Buffer&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002df7ce0: mov    0x8(%rdx),%r10d
  0x0000000002df7ce4: shl    $0x3,%r10
  0x0000000002df7ce8: cmp    %rax,%r10
  0x0000000002df7ceb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002df7cf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002df7cfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002df7d00: mov    %eax,-0x6000(%rsp)
  0x0000000002df7d07: push   %rbp
  0x0000000002df7d08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.nio.Buffer::position@0 (line 226)

  0x0000000002df7d0c: mov    0x18(%rdx),%eax    ;*getfield position
                                                ; - java.nio.Buffer::position@1 (line 226)

  0x0000000002df7d0f: add    $0x30,%rsp
  0x0000000002df7d13: pop    %rbp
  0x0000000002df7d14: test   %eax,-0x21f7c1a(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002df7d1a: retq   
  0x0000000002df7d1b: nop
  0x0000000002df7d1c: nop
  0x0000000002df7d1d: mov    0x2a8(%r15),%rax
  0x0000000002df7d24: movabs $0x0,%r10
  0x0000000002df7d2e: mov    %r10,0x2a8(%r15)
  0x0000000002df7d35: movabs $0x0,%r10
  0x0000000002df7d3f: mov    %r10,0x2b0(%r15)
  0x0000000002df7d46: add    $0x30,%rsp
  0x0000000002df7d4a: pop    %rbp
  0x0000000002df7d4b: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002df7d50: hlt    
  0x0000000002df7d51: hlt    
  0x0000000002df7d52: hlt    
  0x0000000002df7d53: hlt    
  0x0000000002df7d54: hlt    
  0x0000000002df7d55: hlt    
  0x0000000002df7d56: hlt    
  0x0000000002df7d57: hlt    
  0x0000000002df7d58: hlt    
  0x0000000002df7d59: hlt    
  0x0000000002df7d5a: hlt    
  0x0000000002df7d5b: hlt    
  0x0000000002df7d5c: hlt    
  0x0000000002df7d5d: hlt    
  0x0000000002df7d5e: hlt    
  0x0000000002df7d5f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002df7d60: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002df7d65: mov    %rsp,-0x28(%rsp)
  0x0000000002df7d6a: sub    $0x80,%rsp
  0x0000000002df7d71: mov    %rax,0x78(%rsp)
  0x0000000002df7d76: mov    %rcx,0x70(%rsp)
  0x0000000002df7d7b: mov    %rdx,0x68(%rsp)
  0x0000000002df7d80: mov    %rbx,0x60(%rsp)
  0x0000000002df7d85: mov    %rbp,0x50(%rsp)
  0x0000000002df7d8a: mov    %rsi,0x48(%rsp)
  0x0000000002df7d8f: mov    %rdi,0x40(%rsp)
  0x0000000002df7d94: mov    %r8,0x38(%rsp)
  0x0000000002df7d99: mov    %r9,0x30(%rsp)
  0x0000000002df7d9e: mov    %r10,0x28(%rsp)
  0x0000000002df7da3: mov    %r11,0x20(%rsp)
  0x0000000002df7da8: mov    %r12,0x18(%rsp)
  0x0000000002df7dad: mov    %r13,0x10(%rsp)
  0x0000000002df7db2: mov    %r14,0x8(%rsp)
  0x0000000002df7db7: mov    %r15,(%rsp)
  0x0000000002df7dbb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002df7dc5: movabs $0x2df7d65,%rdx    ;   {internal_word}
  0x0000000002df7dcf: mov    %rsp,%r8
  0x0000000002df7dd2: and    $0xfffffffffffffff0,%rsp
  0x0000000002df7dd6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002df7ddb: hlt    
[Deopt Handler Code]
  0x0000000002df7ddc: movabs $0x2df7ddc,%r10    ;   {section_word}
  0x0000000002df7de6: push   %r10
  0x0000000002df7de8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002df7ded: hlt    
  0x0000000002df7dee: hlt    
  0x0000000002df7def: hlt    
<nmethod compile_id='112' compiler='C1' level='1' entry='0x0000000002df7ce0' size='704' address='0x0000000002df7b90' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/nio/Buffer position ()I' bytes='5' count='384' iicount='384' stamp='8.032'/>
<writer thread='22236'/>
Decoding compiled method 0x0000000002dfb1d0:
Code:
[Entry Point]
  # {method} {0x000000001bc89628} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002dfb340: mov    0x8(%rdx),%r10d
  0x0000000002dfb344: shl    $0x3,%r10
  0x0000000002dfb348: cmp    %r10,%rax
  0x0000000002dfb34b: je     0x0000000002dfb358
  0x0000000002dfb351: jmpq   0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dfb356: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002dfb358: mov    %eax,-0x6000(%rsp)
  0x0000000002dfb35f: push   %rbp
  0x0000000002dfb360: mov    %rsp,%rbp
  0x0000000002dfb363: sub    $0x60,%rsp
  0x0000000002dfb367: movabs $0x76b780c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000002dfb371: mov    %r14,0x50(%rsp)
  0x0000000002dfb376: lea    0x50(%rsp),%r14
  0x0000000002dfb37b: mov    %r14,%rdx          ; OopMap{[80]=Oop off=62}
  0x0000000002dfb37e: movabs $0x2dfb37e,%r10    ;   {section_word}
  0x0000000002dfb388: mov    %r10,0x1e0(%r15)
  0x0000000002dfb38f: mov    %rsp,0x1d8(%r15)
  0x0000000002dfb396: cmpb   $0x0,0x530f03e4(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002dfb39d: je     0x0000000002dfb3dd
  0x0000000002dfb3a3: push   %rdx
  0x0000000002dfb3a4: movabs $0x1bc89620,%rdx   ;   {metadata({method} {0x000000001bc89628} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;)}
  0x0000000002dfb3ae: mov    %r15,%rcx
  0x0000000002dfb3b1: sub    $0x20,%rsp
  0x0000000002dfb3b5: test   $0xf,%esp
  0x0000000002dfb3bb: je     0x0000000002dfb3d3
  0x0000000002dfb3c1: sub    $0x8,%rsp
  0x0000000002dfb3c5: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dfb3ca: add    $0x8,%rsp
  0x0000000002dfb3ce: jmpq   0x0000000002dfb3d8
  0x0000000002dfb3d3: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dfb3d8: add    $0x20,%rsp
  0x0000000002dfb3dc: pop    %rdx
  0x0000000002dfb3dd: lea    0x1f8(%r15),%rcx
  0x0000000002dfb3e4: movl   $0x4,0x270(%r15)
  0x0000000002dfb3ef: callq  0x00000000556c0980  ;   {runtime_call}
  0x0000000002dfb3f4: vzeroupper 
  0x0000000002dfb3f7: movl   $0x5,0x270(%r15)
  0x0000000002dfb402: mov    %r15d,%ecx
  0x0000000002dfb405: shr    $0x4,%ecx
  0x0000000002dfb408: and    $0xffc,%ecx
  0x0000000002dfb40e: movabs $0xc10000,%r10     ;   {external_word}
  0x0000000002dfb418: mov    %ecx,(%r10,%rcx,1)
  0x0000000002dfb41c: cmpl   $0x0,0x530f0f2a(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x0000000002dfb426: jne    0x0000000002dfb43a
  0x0000000002dfb42c: cmpl   $0x0,0x30(%r15)
  0x0000000002dfb434: je     0x0000000002dfb45b
  0x0000000002dfb43a: mov    %rax,-0x8(%rbp)
  0x0000000002dfb43e: mov    %r15,%rcx
  0x0000000002dfb441: mov    %rsp,%r12
  0x0000000002dfb444: sub    $0x20,%rsp
  0x0000000002dfb448: and    $0xfffffffffffffff0,%rsp
  0x0000000002dfb44c: callq  0x00000000559236e0  ;   {runtime_call}
  0x0000000002dfb451: mov    %r12,%rsp
  0x0000000002dfb454: xor    %r12,%r12
  0x0000000002dfb457: mov    -0x8(%rbp),%rax
  0x0000000002dfb45b: movl   $0x8,0x270(%r15)
  0x0000000002dfb466: cmpl   $0x1,0x29c(%r15)
  0x0000000002dfb471: je     0x0000000002dfb509
  0x0000000002dfb477: cmpb   $0x0,0x530f0303(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002dfb47e: je     0x0000000002dfb4c4
  0x0000000002dfb484: mov    %rax,-0x8(%rbp)
  0x0000000002dfb488: movabs $0x1bc89620,%rdx   ;   {metadata({method} {0x000000001bc89628} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;)}
  0x0000000002dfb492: mov    %r15,%rcx
  0x0000000002dfb495: sub    $0x20,%rsp
  0x0000000002dfb499: test   $0xf,%esp
  0x0000000002dfb49f: je     0x0000000002dfb4b7
  0x0000000002dfb4a5: sub    $0x8,%rsp
  0x0000000002dfb4a9: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dfb4ae: add    $0x8,%rsp
  0x0000000002dfb4b2: jmpq   0x0000000002dfb4bc
  0x0000000002dfb4b7: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002dfb4bc: add    $0x20,%rsp
  0x0000000002dfb4c0: mov    -0x8(%rbp),%rax
  0x0000000002dfb4c4: movabs $0x0,%r10
  0x0000000002dfb4ce: mov    %r10,0x1d8(%r15)
  0x0000000002dfb4d5: movabs $0x0,%r10
  0x0000000002dfb4df: mov    %r10,0x1e0(%r15)
  0x0000000002dfb4e6: mov    0x38(%r15),%rcx
  0x0000000002dfb4ea: movl   $0x0,0x100(%rcx)
  0x0000000002dfb4f4: leaveq 
  0x0000000002dfb4f5: cmpq   $0x0,0x8(%r15)
  0x0000000002dfb4fd: jne    0x0000000002dfb504
  0x0000000002dfb503: retq   
  0x0000000002dfb504: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002dfb509: mov    %rax,-0x8(%rbp)
  0x0000000002dfb50d: mov    %rsp,%r12
  0x0000000002dfb510: sub    $0x20,%rsp
  0x0000000002dfb514: and    $0xfffffffffffffff0,%rsp
  0x0000000002dfb518: callq  0x000000005590c5a0  ;   {runtime_call}
  0x0000000002dfb51d: mov    %r12,%rsp
  0x0000000002dfb520: xor    %r12,%r12
  0x0000000002dfb523: mov    -0x8(%rbp),%rax
  0x0000000002dfb527: jmpq   0x0000000002dfb477
  0x0000000002dfb52c: hlt    
  0x0000000002dfb52d: hlt    
  0x0000000002dfb52e: hlt    
  0x0000000002dfb52f: hlt    
<nmethod compile_id='113' compile_kind='c2n' level='0' entry='0x0000000002dfb340' size='864' address='0x0000000002dfb1d0' relocation_offset='288' consts_offset='864' insts_offset='368' method='java/lang/System nanoTime ()J' bytes='0' count='640' iicount='640' stamp='8.036'/>
<task_queued compile_id='114' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='1024' iicount='1024' level='3' stamp='8.036' comment='tiered' hot_count='1024'/>
<task_queued compile_id='115' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='197' count='1024' backedge_count='326' iicount='1024' level='3' stamp='8.036' comment='tiered' hot_count='1024'/>
<task_queued compile_id='116' method='java/util/ArrayList rangeCheck (I)V' bytes='22' count='1024' iicount='1024' level='3' stamp='8.036' comment='tiered' hot_count='1024'/>
<task_queued compile_id='117' method='java/util/ArrayList elementData (I)Ljava/lang/Object;' bytes='7' count='1024' iicount='1024' level='3' stamp='8.036' comment='tiered' hot_count='1024'/>
<task_queued compile_id='118' method='java/util/ArrayList get (I)Ljava/lang/Object;' bytes='11' count='1024' iicount='1024' level='3' stamp='8.036' comment='tiered' hot_count='1024'/>
<task_queued compile_id='119' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='1024' iicount='1024' level='3' stamp='8.036' comment='tiered' hot_count='1024'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002dfe410:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bce3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002dfe560: mov    0x8(%rdx),%r10d
  0x0000000002dfe564: shl    $0x3,%r10
  0x0000000002dfe568: cmp    %r10,%rax
  0x0000000002dfe56b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dfe571: data16 xchg %ax,%ax
  0x0000000002dfe574: nopl   0x0(%rax,%rax,1)
  0x0000000002dfe57c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dfe580: mov    %eax,-0x6000(%rsp)
  0x0000000002dfe587: push   %rbp
  0x0000000002dfe588: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002dfe58c: mov    %rdx,0x48(%rsp)
  0x0000000002dfe591: mov    0x10(%rdx),%r11d   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002dfe595: mov    0xc(%r12,%r11,8),%ebx  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x0000000002dfe7f9
  0x0000000002dfe59a: mov    %r8d,%r10d
  0x0000000002dfe59d: sub    %ebx,%r10d
  0x0000000002dfe5a0: test   %r10d,%r10d
  0x0000000002dfe5a3: jg     0x0000000002dfe5b1  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002dfe5a5: add    $0x60,%rsp
  0x0000000002dfe5a9: pop    %rbp
  0x0000000002dfe5aa: test   %eax,-0x21fe5b0(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dfe5b0: retq   
  0x0000000002dfe5b1: mov    %ebx,%r9d
  0x0000000002dfe5b4: shl    %r9d               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002dfe5b7: mov    %r9d,%r10d
  0x0000000002dfe5ba: sub    %r8d,%r10d
  0x0000000002dfe5bd: add    $0x2,%r10d
  0x0000000002dfe5c1: test   %r10d,%r10d
  0x0000000002dfe5c4: jl     0x0000000002dfe5cc  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002dfe5c6: add    $0x2,%r9d          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002dfe5ca: jmp    0x0000000002dfe5cf
  0x0000000002dfe5cc: mov    %r8d,%r9d          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002dfe5cf: test   %r9d,%r9d
  0x0000000002dfe5d2: jle    0x0000000002dfe7b3  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002dfe5d8: mov    $0x7ffffff7,%ebp
  0x0000000002dfe5dd: sub    %r9d,%ebp          ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002dfe5e0: test   %ebp,%ebp
  0x0000000002dfe5e2: jl     0x0000000002dfe7d5  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002dfe5e8: cmp    $0x80000,%r9d
  0x0000000002dfe5ef: ja     0x0000000002dfe775
  0x0000000002dfe5f5: movslq %r9d,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002dfe5f8: shl    %r10
  0x0000000002dfe5fb: lea    (%r12,%r11,8),%r8  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x0000000002dfe5ff: add    $0x17,%r10
  0x0000000002dfe603: mov    %r10,%rdi
  0x0000000002dfe606: and    $0xfffffffffffffff8,%rdi
  0x0000000002dfe60a: cmp    $0x80000,%r9d
  0x0000000002dfe611: ja     0x0000000002dfe71d
  0x0000000002dfe617: mov    0x60(%r15),%rbp
  0x0000000002dfe61b: mov    %rbp,%rcx
  0x0000000002dfe61e: add    %rdi,%rcx
  0x0000000002dfe621: cmp    0x70(%r15),%rcx
  0x0000000002dfe625: jae    0x0000000002dfe71d
  0x0000000002dfe62b: mov    %rcx,0x60(%r15)
  0x0000000002dfe62f: prefetchw 0xc0(%rcx)
  0x0000000002dfe636: movq   $0x1,0x0(%rbp)
  0x0000000002dfe63e: prefetchw 0x100(%rcx)
  0x0000000002dfe645: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x0000000002dfe64c: mov    %r9d,0xc(%rbp)
  0x0000000002dfe650: prefetchw 0x140(%rcx)
  0x0000000002dfe657: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002dfe65e: cmp    %r9d,%ebx
  0x0000000002dfe661: mov    %r9d,%esi
  0x0000000002dfe664: cmovl  %ebx,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002dfe667: mov    %rbp,%rdx
  0x0000000002dfe66a: add    $0x10,%rdx
  0x0000000002dfe66e: shr    $0x3,%r10
  0x0000000002dfe672: mov    %r10,%rcx
  0x0000000002dfe675: add    $0xfffffffffffffffe,%rcx
  0x0000000002dfe679: cmp    %esi,%ebx
  0x0000000002dfe67b: jb     0x0000000002dfe77d
  0x0000000002dfe681: cmp    %esi,%r9d
  0x0000000002dfe684: jb     0x0000000002dfe77d
  0x0000000002dfe68a: test   %esi,%esi
  0x0000000002dfe68c: jle    0x0000000002dfe7a1
  0x0000000002dfe692: lea    0x10(%r12,%r11,8),%rbx
  0x0000000002dfe697: cmp    %r9d,%esi
  0x0000000002dfe69a: jl     0x0000000002dfe6dd
  0x0000000002dfe69c: add    $0xfffffffffffffff0,%rdi
  0x0000000002dfe6a0: shr    $0x3,%rdi
  0x0000000002dfe6a4: mov    %rbx,%rcx
  0x0000000002dfe6a7: mov    %rdi,%r8
  0x0000000002dfe6aa: movabs $0x2d02ca0,%r10
  0x0000000002dfe6b4: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002dfe6b7: mov    %rbp,%r10
  0x0000000002dfe6ba: shr    $0x3,%r10
  0x0000000002dfe6be: mov    0x48(%rsp),%r11
  0x0000000002dfe6c3: mov    %r10d,0x10(%r11)
  0x0000000002dfe6c7: mov    %r11,%r10
  0x0000000002dfe6ca: shr    $0x9,%r10
  0x0000000002dfe6ce: mov    $0xea5d000,%r11d
  0x0000000002dfe6d4: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x0000000002dfe6d8: jmpq   0x0000000002dfe5a5
  0x0000000002dfe6dd: movslq %esi,%r8
  0x0000000002dfe6e0: mov    %r8,%r11
  0x0000000002dfe6e3: shl    %r11
  0x0000000002dfe6e6: add    $0x10,%r11
  0x0000000002dfe6ea: mov    %r11,%r9
  0x0000000002dfe6ed: and    $0xfffffffffffffff9,%r9
  0x0000000002dfe6f1: mov    %rbp,%rdi
  0x0000000002dfe6f4: add    %r9,%rdi
  0x0000000002dfe6f7: shr    $0x3,%r11
  0x0000000002dfe6fb: sub    %r11,%r10
  0x0000000002dfe6fe: mov    %r10,%rcx
  0x0000000002dfe701: xor    %rax,%rax
  0x0000000002dfe704: shl    $0x3,%rcx
  0x0000000002dfe708: rep rex.W stos %al,%es:(%rdi)
  0x0000000002dfe70b: mov    %rbx,%rcx
  0x0000000002dfe70e: movabs $0x2d02980,%r10
  0x0000000002dfe718: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002dfe71b: jmp    0x0000000002dfe6b7
  0x0000000002dfe71d: mov    %ebx,0x40(%rsp)
  0x0000000002dfe721: mov    %r11d,0x24(%rsp)
  0x0000000002dfe726: mov    %rdi,0x38(%rsp)
  0x0000000002dfe72b: mov    %r8,0x30(%rsp)
  0x0000000002dfe730: mov    %r10,0x28(%rsp)
  0x0000000002dfe735: mov    %r9d,0x20(%rsp)
  0x0000000002dfe73a: mov    %rdx,%rbp
  0x0000000002dfe73d: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002dfe747: mov    %r9d,%r8d
  0x0000000002dfe74a: nop
  0x0000000002dfe74b: callq  0x0000000002db36e0  ; OopMap{rbp=Oop [36]=NarrowOop [48]=Oop [72]=Oop off=496}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002dfe750: mov    0x20(%rsp),%r9d
  0x0000000002dfe755: mov    0x28(%rsp),%r10
  0x0000000002dfe75a: mov    0x30(%rsp),%r8
  0x0000000002dfe75f: mov    0x38(%rsp),%rdi
  0x0000000002dfe764: mov    %rax,%rbp
  0x0000000002dfe767: mov    0x24(%rsp),%r11d
  0x0000000002dfe76c: mov    0x40(%rsp),%ebx
  0x0000000002dfe770: jmpq   0x0000000002dfe65e
  0x0000000002dfe775: movslq %r9d,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002dfe778: jmpq   0x0000000002dfe5f8
  0x0000000002dfe77d: mov    %rdx,%rdi
  0x0000000002dfe780: xor    %rax,%rax
  0x0000000002dfe783: shl    $0x3,%rcx
  0x0000000002dfe787: rep rex.W stos %al,%es:(%rdi)
  0x0000000002dfe78a: mov    %r8,%rdx
  0x0000000002dfe78d: xor    %r8d,%r8d
  0x0000000002dfe790: mov    %rbp,%r9
  0x0000000002dfe793: xor    %edi,%edi
  0x0000000002dfe795: xchg   %ax,%ax
  0x0000000002dfe797: callq  0x0000000002db3b60  ; OopMap{rbp=Oop [72]=Oop off=572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x0000000002dfe79c: jmpq   0x0000000002dfe6b7
  0x0000000002dfe7a1: mov    %rdx,%rdi
  0x0000000002dfe7a4: xor    %rax,%rax
  0x0000000002dfe7a7: shl    $0x3,%rcx
  0x0000000002dfe7ab: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002dfe7ae: jmpq   0x0000000002dfe6b7
  0x0000000002dfe7b3: mov    $0xffffff65,%edx
  0x0000000002dfe7b8: mov    0x48(%rsp),%rbp
  0x0000000002dfe7bd: mov    %r11d,0x20(%rsp)
  0x0000000002dfe7c2: mov    %r8d,0x24(%rsp)
  0x0000000002dfe7c7: mov    %r9d,0x34(%rsp)
  0x0000000002dfe7cc: data16 xchg %ax,%ax
  0x0000000002dfe7cf: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [32]=NarrowOop off=628}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {runtime_call}
  0x0000000002dfe7d4: int3                      ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002dfe7d5: mov    $0xffffff65,%edx
  0x0000000002dfe7da: rex.W pushq 0x48(%rsp)
  0x0000000002dfe7df: rex.W popq 0x20(%rsp)
  0x0000000002dfe7e4: mov    %r11d,0x28(%rsp)
  0x0000000002dfe7e9: mov    %r8d,0x2c(%rsp)
  0x0000000002dfe7ee: mov    %r9d,0x38(%rsp)
  0x0000000002dfe7f3: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop [40]=NarrowOop off=664}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {runtime_call}
  0x0000000002dfe7f8: int3                      ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x0000000002dfe7f9: mov    $0xfffffff6,%edx
  0x0000000002dfe7fe: nop
  0x0000000002dfe7ff: callq  0x0000000002cf57a0  ; OopMap{off=676}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x0000000002dfe804: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002dfe805: mov    %rax,%rdx
  0x0000000002dfe808: jmp    0x0000000002dfe80d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x0000000002dfe80a: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x0000000002dfe80d: add    $0x60,%rsp
  0x0000000002dfe811: pop    %rbp
  0x0000000002dfe812: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002dfe817: hlt    
  0x0000000002dfe818: hlt    
  0x0000000002dfe819: hlt    
  0x0000000002dfe81a: hlt    
  0x0000000002dfe81b: hlt    
  0x0000000002dfe81c: hlt    
  0x0000000002dfe81d: hlt    
  0x0000000002dfe81e: hlt    
  0x0000000002dfe81f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dfe820: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dfe825: callq  0x0000000002dfe82a
  0x0000000002dfe82a: subq   $0x5,(%rsp)
  0x0000000002dfe82f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dfe834: hlt    
  0x0000000002dfe835: hlt    
  0x0000000002dfe836: hlt    
  0x0000000002dfe837: hlt    
<nmethod compile_id='111' compiler='C2' level='4' entry='0x0000000002dfe560' size='1912' address='0x0000000002dfe410' relocation_offset='288' insts_offset='336' stub_offset='1040' scopes_data_offset='1096' scopes_pcs_offset='1328' dependencies_offset='1840' handler_table_offset='1848' nul_chk_table_offset='1896' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='76800' iicount='76800' stamp='8.041'/>
<writer thread='22236'/>
<task_queued compile_id='120' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='2688' iicount='2688' level='3' stamp='8.041' comment='tiered' hot_count='2688'/>
<task_queued compile_id='121' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='1152' iicount='1152' level='3' stamp='8.042' comment='tiered' hot_count='1152'/>
<task_queued compile_id='122' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='1152' iicount='1152' level='3' stamp='8.042' comment='tiered' hot_count='1152'/>
<task_queued compile_id='123' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='1408' iicount='1408' level='3' stamp='8.043' comment='tiered' hot_count='1408'/>
<task_queued compile_id='124' method='java/util/jar/JarFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='22' count='1408' iicount='1408' level='3' stamp='8.043' comment='tiered' hot_count='1408'/>
<task_queued compile_id='125' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='1408' iicount='1408' level='3' stamp='8.043' comment='tiered' hot_count='1408'/>
<task_queued compile_id='126' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='757' backedge_count='55296' iicount='757' stamp='8.043' comment='tiered' hot_count='757'/>
<writer thread='19188'/>
<task_queued compile_id='127' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger getAndIncrement ()I' bytes='40' count='698' backedge_count='341' iicount='707' level='3' stamp='8.044' comment='tiered' hot_count='660'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dfebd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rdx:rdx   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    r8        = int
  #           [sp+0x150]  (sp of caller)
  0x0000000002dfef80: mov    0x8(%rdx),%r10d
  0x0000000002dfef84: shl    $0x3,%r10
  0x0000000002dfef88: cmp    %rax,%r10
  0x0000000002dfef8b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dfef91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dfef9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dfefa0: mov    %eax,-0x6000(%rsp)
  0x0000000002dfefa7: push   %rbp
  0x0000000002dfefa8: sub    $0x140,%rsp
  0x0000000002dfefaf: mov    %rdx,0x98(%rsp)
  0x0000000002dfefb7: mov    %r8d,0x94(%rsp)
  0x0000000002dfefbf: lea    0xe8(%rsp),%rsi
  0x0000000002dfefc7: mov    %rdx,0x8(%rsi)
  0x0000000002dfefcb: mov    (%rdx),%rax
  0x0000000002dfefce: mov    %rax,%rdi
  0x0000000002dfefd1: and    $0x7,%rdi
  0x0000000002dfefd5: cmp    $0x5,%rdi
  0x0000000002dfefd9: jne    0x0000000002dff060
  0x0000000002dfefdf: mov    0x8(%rdx),%edi
  0x0000000002dfefe2: shl    $0x3,%rdi
  0x0000000002dfefe6: mov    0xa8(%rdi),%rdi
  0x0000000002dfefed: or     %r15,%rdi
  0x0000000002dfeff0: xor    %rax,%rdi
  0x0000000002dfeff3: and    $0xffffffffffffff87,%rdi
  0x0000000002dfeff7: je     0x0000000002dff088
  0x0000000002dfeffd: test   $0x7,%rdi
  0x0000000002dff004: jne    0x0000000002dff04d
  0x0000000002dff006: test   $0x300,%rdi
  0x0000000002dff00d: jne    0x0000000002dff02c
  0x0000000002dff00f: and    $0x37f,%rax
  0x0000000002dff016: mov    %rax,%rdi
  0x0000000002dff019: or     %r15,%rdi
  0x0000000002dff01c: lock cmpxchg %rdi,(%rdx)
  0x0000000002dff021: jne    0x0000000002e00fa7
  0x0000000002dff027: jmpq   0x0000000002dff088
  0x0000000002dff02c: mov    0x8(%rdx),%edi
  0x0000000002dff02f: shl    $0x3,%rdi
  0x0000000002dff033: mov    0xa8(%rdi),%rdi
  0x0000000002dff03a: or     %r15,%rdi
  0x0000000002dff03d: lock cmpxchg %rdi,(%rdx)
  0x0000000002dff042: jne    0x0000000002e00fa7
  0x0000000002dff048: jmpq   0x0000000002dff088
  0x0000000002dff04d: mov    0x8(%rdx),%edi
  0x0000000002dff050: shl    $0x3,%rdi
  0x0000000002dff054: mov    0xa8(%rdi),%rdi
  0x0000000002dff05b: lock cmpxchg %rdi,(%rdx)
  0x0000000002dff060: mov    (%rdx),%rax
  0x0000000002dff063: or     $0x1,%rax
  0x0000000002dff067: mov    %rax,(%rsi)
  0x0000000002dff06a: lock cmpxchg %rsi,(%rdx)
  0x0000000002dff06f: je     0x0000000002dff088
  0x0000000002dff075: sub    %rsp,%rax
  0x0000000002dff078: and    $0xfffffffffffff007,%rax
  0x0000000002dff07f: mov    %rax,(%rsi)
  0x0000000002dff082: jne    0x0000000002e00fa7
  0x0000000002dff088: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dff092: mov    0xdc(%rax),%esi
  0x0000000002dff098: add    $0x8,%esi
  0x0000000002dff09b: mov    %esi,0xdc(%rax)
  0x0000000002dff0a1: movabs $0x1be58e08,%rax   ;   {metadata({method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dff0ab: and    $0x1ff8,%esi
  0x0000000002dff0b1: cmp    $0x0,%esi
  0x0000000002dff0b4: je     0x0000000002e00fba  ;*aload_0
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 467)

  0x0000000002dff0ba: movsbl 0xc(%rdx),%eax     ;*getfield closed
                                                ; - sun.misc.URLClassPath::getLoader@1 (line 467)

  0x0000000002dff0be: cmp    $0x0,%eax
  0x0000000002dff0c1: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dff0cb: movabs $0x108,%rsi
  0x0000000002dff0d5: je     0x0000000002dff0e5
  0x0000000002dff0db: movabs $0x118,%rsi
  0x0000000002dff0e5: mov    (%rax,%rsi,1),%rdi
  0x0000000002dff0e9: lea    0x1(%rdi),%rdi
  0x0000000002dff0ed: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dff0f1: jne    0x0000000002e00c0c  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@4 (line 467)

  0x0000000002dff0f7: nop
  0x0000000002dff0f8: mov    0x18(%rdx),%esi
  0x0000000002dff0fb: shl    $0x3,%rsi          ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@10 (line 472)

  0x0000000002dff0ff: cmp    (%rsi),%rax        ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 472)
                                                ; implicit exception: dispatches to 0x0000000002e00fd1
  0x0000000002dff102: mov    %rsi,%rax
  0x0000000002dff105: movabs $0x1bf0de68,%rdi   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dff10f: addq   $0x1,0x138(%rdi)
  0x0000000002dff117: mov    0x10(%rsi),%edi    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 472)

  0x0000000002dff11a: mov    %r8,%rax
  0x0000000002dff11d: inc    %eax
  0x0000000002dff11f: cmp    %eax,%edi
  0x0000000002dff121: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dff12b: movabs $0x158,%rbx
  0x0000000002dff135: jge    0x0000000002dff145
  0x0000000002dff13b: movabs $0x168,%rbx
  0x0000000002dff145: mov    (%rax,%rbx,1),%rcx
  0x0000000002dff149: lea    0x1(%rcx),%rcx
  0x0000000002dff14d: mov    %rcx,(%rax,%rbx,1)
  0x0000000002dff151: jge    0x0000000002e0091e  ;*if_icmpge
                                                ; - sun.misc.URLClassPath::getLoader@19 (line 472)

  0x0000000002dff157: mov    0x14(%rdx),%esi
  0x0000000002dff15a: shl    $0x3,%rsi          ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@23 (line 475)

  0x0000000002dff15e: lea    0xf8(%rsp),%rdi
  0x0000000002dff166: mov    %rsi,0x8(%rdi)
  0x0000000002dff16a: mov    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002e00fd6
  0x0000000002dff16d: mov    %rax,%rbx
  0x0000000002dff170: and    $0x7,%rbx
  0x0000000002dff174: cmp    $0x5,%rbx
  0x0000000002dff178: jne    0x0000000002dff1ff
  0x0000000002dff17e: mov    0x8(%rsi),%ebx
  0x0000000002dff181: shl    $0x3,%rbx
  0x0000000002dff185: mov    0xa8(%rbx),%rbx
  0x0000000002dff18c: or     %r15,%rbx
  0x0000000002dff18f: xor    %rax,%rbx
  0x0000000002dff192: and    $0xffffffffffffff87,%rbx
  0x0000000002dff196: je     0x0000000002dff227
  0x0000000002dff19c: test   $0x7,%rbx
  0x0000000002dff1a3: jne    0x0000000002dff1ec
  0x0000000002dff1a5: test   $0x300,%rbx
  0x0000000002dff1ac: jne    0x0000000002dff1cb
  0x0000000002dff1ae: and    $0x37f,%rax
  0x0000000002dff1b5: mov    %rax,%rbx
  0x0000000002dff1b8: or     %r15,%rbx
  0x0000000002dff1bb: lock cmpxchg %rbx,(%rsi)
  0x0000000002dff1c0: jne    0x0000000002e00fdb
  0x0000000002dff1c6: jmpq   0x0000000002dff227
  0x0000000002dff1cb: mov    0x8(%rsi),%ebx
  0x0000000002dff1ce: shl    $0x3,%rbx
  0x0000000002dff1d2: mov    0xa8(%rbx),%rbx
  0x0000000002dff1d9: or     %r15,%rbx
  0x0000000002dff1dc: lock cmpxchg %rbx,(%rsi)
  0x0000000002dff1e1: jne    0x0000000002e00fdb
  0x0000000002dff1e7: jmpq   0x0000000002dff227
  0x0000000002dff1ec: mov    0x8(%rsi),%ebx
  0x0000000002dff1ef: shl    $0x3,%rbx
  0x0000000002dff1f3: mov    0xa8(%rbx),%rbx
  0x0000000002dff1fa: lock cmpxchg %rbx,(%rsi)
  0x0000000002dff1ff: mov    (%rsi),%rax
  0x0000000002dff202: or     $0x1,%rax
  0x0000000002dff206: mov    %rax,(%rdi)
  0x0000000002dff209: lock cmpxchg %rdi,(%rsi)
  0x0000000002dff20e: je     0x0000000002dff227
  0x0000000002dff214: sub    %rsp,%rax
  0x0000000002dff217: and    $0xfffffffffffff007,%rax
  0x0000000002dff21e: mov    %rax,(%rdi)
  0x0000000002dff221: jne    0x0000000002e00fdb  ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 475)

  0x0000000002dff227: mov    0x14(%rdx),%edi
  0x0000000002dff22a: shl    $0x3,%rdi          ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@30 (line 476)

  0x0000000002dff22e: cmp    (%rdi),%rax        ;*invokevirtual empty
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ; implicit exception: dispatches to 0x0000000002e00fee
  0x0000000002dff231: mov    %rdi,%rax
  0x0000000002dff234: movabs $0x1bf0de68,%rbx   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dff23e: addq   $0x1,0x188(%rbx)
  0x0000000002dff246: movabs $0x1bff5be0,%rax   ;   {metadata(method data for {method} {0x000000001bd38860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff250: mov    0xdc(%rax),%ebx
  0x0000000002dff256: add    $0x8,%ebx
  0x0000000002dff259: mov    %ebx,0xdc(%rax)
  0x0000000002dff25f: movabs $0x1bd38858,%rax   ;   {metadata({method} {0x000000001bd38860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff269: and    $0x7ffff8,%ebx
  0x0000000002dff26f: cmp    $0x0,%ebx
  0x0000000002dff272: je     0x0000000002e00ff3
  0x0000000002dff278: mov    %rdi,%rax
  0x0000000002dff27b: movabs $0x1bff5be0,%rbx   ;   {metadata(method data for {method} {0x000000001bd38860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff285: mov    0x8(%rax),%eax
  0x0000000002dff288: shl    $0x3,%rax
  0x0000000002dff28c: cmp    0x110(%rbx),%rax
  0x0000000002dff293: jne    0x0000000002dff2a2
  0x0000000002dff295: addq   $0x1,0x118(%rbx)
  0x0000000002dff29d: jmpq   0x0000000002dff308
  0x0000000002dff2a2: cmp    0x120(%rbx),%rax
  0x0000000002dff2a9: jne    0x0000000002dff2b8
  0x0000000002dff2ab: addq   $0x1,0x128(%rbx)
  0x0000000002dff2b3: jmpq   0x0000000002dff308
  0x0000000002dff2b8: cmpq   $0x0,0x110(%rbx)
  0x0000000002dff2c3: jne    0x0000000002dff2dc
  0x0000000002dff2c5: mov    %rax,0x110(%rbx)
  0x0000000002dff2cc: movq   $0x1,0x118(%rbx)
  0x0000000002dff2d7: jmpq   0x0000000002dff308
  0x0000000002dff2dc: cmpq   $0x0,0x120(%rbx)
  0x0000000002dff2e7: jne    0x0000000002dff300
  0x0000000002dff2e9: mov    %rax,0x120(%rbx)
  0x0000000002dff2f0: movq   $0x1,0x128(%rbx)
  0x0000000002dff2fb: jmpq   0x0000000002dff308
  0x0000000002dff300: addq   $0x1,0x108(%rbx)
  0x0000000002dff308: lea    0x108(%rsp),%rbx
  0x0000000002dff310: mov    %rdi,0x8(%rbx)
  0x0000000002dff314: mov    (%rdi),%rax
  0x0000000002dff317: mov    %rax,%rcx
  0x0000000002dff31a: and    $0x7,%rcx
  0x0000000002dff31e: cmp    $0x5,%rcx
  0x0000000002dff322: jne    0x0000000002dff3a9
  0x0000000002dff328: mov    0x8(%rdi),%ecx
  0x0000000002dff32b: shl    $0x3,%rcx
  0x0000000002dff32f: mov    0xa8(%rcx),%rcx
  0x0000000002dff336: or     %r15,%rcx
  0x0000000002dff339: xor    %rax,%rcx
  0x0000000002dff33c: and    $0xffffffffffffff87,%rcx
  0x0000000002dff340: je     0x0000000002dff3d1
  0x0000000002dff346: test   $0x7,%rcx
  0x0000000002dff34d: jne    0x0000000002dff396
  0x0000000002dff34f: test   $0x300,%rcx
  0x0000000002dff356: jne    0x0000000002dff375
  0x0000000002dff358: and    $0x37f,%rax
  0x0000000002dff35f: mov    %rax,%rcx
  0x0000000002dff362: or     %r15,%rcx
  0x0000000002dff365: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff36a: jne    0x0000000002e0100a
  0x0000000002dff370: jmpq   0x0000000002dff3d1
  0x0000000002dff375: mov    0x8(%rdi),%ecx
  0x0000000002dff378: shl    $0x3,%rcx
  0x0000000002dff37c: mov    0xa8(%rcx),%rcx
  0x0000000002dff383: or     %r15,%rcx
  0x0000000002dff386: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff38b: jne    0x0000000002e0100a
  0x0000000002dff391: jmpq   0x0000000002dff3d1
  0x0000000002dff396: mov    0x8(%rdi),%ecx
  0x0000000002dff399: shl    $0x3,%rcx
  0x0000000002dff39d: mov    0xa8(%rcx),%rcx
  0x0000000002dff3a4: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff3a9: mov    (%rdi),%rax
  0x0000000002dff3ac: or     $0x1,%rax
  0x0000000002dff3b0: mov    %rax,(%rbx)
  0x0000000002dff3b3: lock cmpxchg %rbx,(%rdi)
  0x0000000002dff3b8: je     0x0000000002dff3d1
  0x0000000002dff3be: sub    %rsp,%rax
  0x0000000002dff3c1: and    $0xfffffffffffff007,%rax
  0x0000000002dff3c8: mov    %rax,(%rbx)
  0x0000000002dff3cb: jne    0x0000000002e0100a  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x0000000002dff3d1: mov    0x10(%rdi),%edi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x0000000002dff3d4: lea    0x108(%rsp),%rax
  0x0000000002dff3dc: mov    0x8(%rax),%rcx
  0x0000000002dff3e0: mov    (%rcx),%rbx
  0x0000000002dff3e3: and    $0x7,%rbx
  0x0000000002dff3e7: cmp    $0x5,%rbx
  0x0000000002dff3eb: je     0x0000000002dff408
  0x0000000002dff3f1: mov    (%rax),%rbx
  0x0000000002dff3f4: test   %rbx,%rbx
  0x0000000002dff3f7: je     0x0000000002dff408
  0x0000000002dff3fd: lock cmpxchg %rbx,(%rcx)
  0x0000000002dff402: jne    0x0000000002e0101d  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x0000000002dff408: cmp    $0x0,%edi
  0x0000000002dff40b: movabs $0x1bff5be0,%rax   ;   {metadata(method data for {method} {0x000000001bd38860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff415: movabs $0x138,%rdi
  0x0000000002dff41f: jne    0x0000000002dff42f
  0x0000000002dff425: movabs $0x148,%rdi
  0x0000000002dff42f: mov    (%rax,%rdi,1),%rbx
  0x0000000002dff433: lea    0x1(%rbx),%rbx
  0x0000000002dff437: mov    %rbx,(%rax,%rdi,1)
  0x0000000002dff43b: jne    0x0000000002dff45b  ;*ifne
                                                ; - java.util.Stack::empty@4 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x0000000002dff441: movabs $0x1bff5be0,%rax   ;   {metadata(method data for {method} {0x000000001bd38860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff44b: incl   0x158(%rax)
  0x0000000002dff451: mov    $0x1,%eax
  0x0000000002dff456: jmpq   0x0000000002dff460  ;*goto
                                                ; - java.util.Stack::empty@8 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x0000000002dff45b: mov    $0x0,%eax          ;*ireturn
                                                ; - java.util.Stack::empty@12 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x0000000002dff460: and    $0x1,%eax
  0x0000000002dff463: cmp    $0x0,%eax
  0x0000000002dff466: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dff470: movabs $0x1a8,%rdi
  0x0000000002dff47a: je     0x0000000002dff48a
  0x0000000002dff480: movabs $0x1b8,%rdi
  0x0000000002dff48a: mov    (%rax,%rdi,1),%rbx
  0x0000000002dff48e: lea    0x1(%rbx),%rbx
  0x0000000002dff492: mov    %rbx,(%rax,%rdi,1)
  0x0000000002dff496: jne    0x0000000002e00b8b  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@36 (line 476)

  0x0000000002dff49c: mov    0x14(%rdx),%edi
  0x0000000002dff49f: shl    $0x3,%rdi          ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@44 (line 479)

  0x0000000002dff4a3: cmp    (%rdi),%rax        ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ; implicit exception: dispatches to 0x0000000002e01033
  0x0000000002dff4a6: mov    %rdi,%rax
  0x0000000002dff4a9: movabs $0x1bf0de68,%rbx   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dff4b3: addq   $0x1,0x1d8(%rbx)
  0x0000000002dff4bb: lea    0x108(%rsp),%rbx
  0x0000000002dff4c3: mov    %rdi,0x8(%rbx)
  0x0000000002dff4c7: mov    (%rdi),%rax
  0x0000000002dff4ca: mov    %rax,%rcx
  0x0000000002dff4cd: and    $0x7,%rcx
  0x0000000002dff4d1: cmp    $0x5,%rcx
  0x0000000002dff4d5: jne    0x0000000002dff55c
  0x0000000002dff4db: mov    0x8(%rdi),%ecx
  0x0000000002dff4de: shl    $0x3,%rcx
  0x0000000002dff4e2: mov    0xa8(%rcx),%rcx
  0x0000000002dff4e9: or     %r15,%rcx
  0x0000000002dff4ec: xor    %rax,%rcx
  0x0000000002dff4ef: and    $0xffffffffffffff87,%rcx
  0x0000000002dff4f3: je     0x0000000002dff584
  0x0000000002dff4f9: test   $0x7,%rcx
  0x0000000002dff500: jne    0x0000000002dff549
  0x0000000002dff502: test   $0x300,%rcx
  0x0000000002dff509: jne    0x0000000002dff528
  0x0000000002dff50b: and    $0x37f,%rax
  0x0000000002dff512: mov    %rax,%rcx
  0x0000000002dff515: or     %r15,%rcx
  0x0000000002dff518: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff51d: jne    0x0000000002e01038
  0x0000000002dff523: jmpq   0x0000000002dff584
  0x0000000002dff528: mov    0x8(%rdi),%ecx
  0x0000000002dff52b: shl    $0x3,%rcx
  0x0000000002dff52f: mov    0xa8(%rcx),%rcx
  0x0000000002dff536: or     %r15,%rcx
  0x0000000002dff539: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff53e: jne    0x0000000002e01038
  0x0000000002dff544: jmpq   0x0000000002dff584
  0x0000000002dff549: mov    0x8(%rdi),%ecx
  0x0000000002dff54c: shl    $0x3,%rcx
  0x0000000002dff550: mov    0xa8(%rcx),%rcx
  0x0000000002dff557: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff55c: mov    (%rdi),%rax
  0x0000000002dff55f: or     $0x1,%rax
  0x0000000002dff563: mov    %rax,(%rbx)
  0x0000000002dff566: lock cmpxchg %rbx,(%rdi)
  0x0000000002dff56b: je     0x0000000002dff584
  0x0000000002dff571: sub    %rsp,%rax
  0x0000000002dff574: and    $0xfffffffffffff007,%rax
  0x0000000002dff57b: mov    %rax,(%rbx)
  0x0000000002dff57e: jne    0x0000000002e01038  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dff584: movabs $0x1bff5d90,%rax   ;   {metadata(method data for {method} {0x000000001bd38710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff58e: mov    0xdc(%rax),%ebx
  0x0000000002dff594: add    $0x8,%ebx
  0x0000000002dff597: mov    %ebx,0xdc(%rax)
  0x0000000002dff59d: movabs $0x1bd38708,%rax   ;   {metadata({method} {0x000000001bd38710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff5a7: and    $0x7ffff8,%ebx
  0x0000000002dff5ad: cmp    $0x0,%ebx
  0x0000000002dff5b0: je     0x0000000002e0104b
  0x0000000002dff5b6: mov    %rdi,%rax
  0x0000000002dff5b9: movabs $0x1bff5d90,%rbx   ;   {metadata(method data for {method} {0x000000001bd38710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff5c3: mov    0x8(%rax),%eax
  0x0000000002dff5c6: shl    $0x3,%rax
  0x0000000002dff5ca: cmp    0x110(%rbx),%rax
  0x0000000002dff5d1: jne    0x0000000002dff5e0
  0x0000000002dff5d3: addq   $0x1,0x118(%rbx)
  0x0000000002dff5db: jmpq   0x0000000002dff646
  0x0000000002dff5e0: cmp    0x120(%rbx),%rax
  0x0000000002dff5e7: jne    0x0000000002dff5f6
  0x0000000002dff5e9: addq   $0x1,0x128(%rbx)
  0x0000000002dff5f1: jmpq   0x0000000002dff646
  0x0000000002dff5f6: cmpq   $0x0,0x110(%rbx)
  0x0000000002dff601: jne    0x0000000002dff61a
  0x0000000002dff603: mov    %rax,0x110(%rbx)
  0x0000000002dff60a: movq   $0x1,0x118(%rbx)
  0x0000000002dff615: jmpq   0x0000000002dff646
  0x0000000002dff61a: cmpq   $0x0,0x120(%rbx)
  0x0000000002dff625: jne    0x0000000002dff63e
  0x0000000002dff627: mov    %rax,0x120(%rbx)
  0x0000000002dff62e: movq   $0x1,0x128(%rbx)
  0x0000000002dff639: jmpq   0x0000000002dff646
  0x0000000002dff63e: addq   $0x1,0x108(%rbx)
  0x0000000002dff646: lea    0x118(%rsp),%rbx
  0x0000000002dff64e: mov    %rdi,0x8(%rbx)
  0x0000000002dff652: mov    (%rdi),%rax
  0x0000000002dff655: mov    %rax,%rcx
  0x0000000002dff658: and    $0x7,%rcx
  0x0000000002dff65c: cmp    $0x5,%rcx
  0x0000000002dff660: jne    0x0000000002dff6e7
  0x0000000002dff666: mov    0x8(%rdi),%ecx
  0x0000000002dff669: shl    $0x3,%rcx
  0x0000000002dff66d: mov    0xa8(%rcx),%rcx
  0x0000000002dff674: or     %r15,%rcx
  0x0000000002dff677: xor    %rax,%rcx
  0x0000000002dff67a: and    $0xffffffffffffff87,%rcx
  0x0000000002dff67e: je     0x0000000002dff70f
  0x0000000002dff684: test   $0x7,%rcx
  0x0000000002dff68b: jne    0x0000000002dff6d4
  0x0000000002dff68d: test   $0x300,%rcx
  0x0000000002dff694: jne    0x0000000002dff6b3
  0x0000000002dff696: and    $0x37f,%rax
  0x0000000002dff69d: mov    %rax,%rcx
  0x0000000002dff6a0: or     %r15,%rcx
  0x0000000002dff6a3: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff6a8: jne    0x0000000002e01062
  0x0000000002dff6ae: jmpq   0x0000000002dff70f
  0x0000000002dff6b3: mov    0x8(%rdi),%ecx
  0x0000000002dff6b6: shl    $0x3,%rcx
  0x0000000002dff6ba: mov    0xa8(%rcx),%rcx
  0x0000000002dff6c1: or     %r15,%rcx
  0x0000000002dff6c4: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff6c9: jne    0x0000000002e01062
  0x0000000002dff6cf: jmpq   0x0000000002dff70f
  0x0000000002dff6d4: mov    0x8(%rdi),%ecx
  0x0000000002dff6d7: shl    $0x3,%rcx
  0x0000000002dff6db: mov    0xa8(%rcx),%rcx
  0x0000000002dff6e2: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff6e7: mov    (%rdi),%rax
  0x0000000002dff6ea: or     $0x1,%rax
  0x0000000002dff6ee: mov    %rax,(%rbx)
  0x0000000002dff6f1: lock cmpxchg %rbx,(%rdi)
  0x0000000002dff6f6: je     0x0000000002dff70f
  0x0000000002dff6fc: sub    %rsp,%rax
  0x0000000002dff6ff: and    $0xfffffffffffff007,%rax
  0x0000000002dff706: mov    %rax,(%rbx)
  0x0000000002dff709: jne    0x0000000002e01062  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dff70f: mov    0x10(%rdi),%ebx    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dff712: lea    0x118(%rsp),%rax
  0x0000000002dff71a: mov    0x8(%rax),%r9
  0x0000000002dff71e: mov    (%r9),%rcx
  0x0000000002dff721: and    $0x7,%rcx
  0x0000000002dff725: cmp    $0x5,%rcx
  0x0000000002dff729: je     0x0000000002dff746
  0x0000000002dff72f: mov    (%rax),%rcx
  0x0000000002dff732: test   %rcx,%rcx
  0x0000000002dff735: je     0x0000000002dff746
  0x0000000002dff73b: lock cmpxchg %rcx,(%r9)
  0x0000000002dff740: jne    0x0000000002e01075  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dff746: mov    %rdi,%rax
  0x0000000002dff749: movabs $0x1bff5d90,%rcx   ;   {metadata(method data for {method} {0x000000001bd38710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff753: movabs $0x7c00169b0,%r10  ;   {metadata(&apos;java/util/Stack&apos;)}
  0x0000000002dff75d: mov    %r10,0x140(%rcx)
  0x0000000002dff764: addq   $0x1,0x148(%rcx)
  0x0000000002dff76c: lea    0x118(%rsp),%rcx
  0x0000000002dff774: mov    %rdi,0x8(%rcx)
  0x0000000002dff778: mov    (%rdi),%rax
  0x0000000002dff77b: mov    %rax,%r9
  0x0000000002dff77e: and    $0x7,%r9
  0x0000000002dff782: cmp    $0x5,%r9
  0x0000000002dff786: jne    0x0000000002dff810
  0x0000000002dff78c: mov    0x8(%rdi),%r9d
  0x0000000002dff790: shl    $0x3,%r9
  0x0000000002dff794: mov    0xa8(%r9),%r9
  0x0000000002dff79b: or     %r15,%r9
  0x0000000002dff79e: xor    %rax,%r9
  0x0000000002dff7a1: and    $0xffffffffffffff87,%r9
  0x0000000002dff7a5: je     0x0000000002dff838
  0x0000000002dff7ab: test   $0x7,%r9
  0x0000000002dff7b2: jne    0x0000000002dff7fc
  0x0000000002dff7b4: test   $0x300,%r9
  0x0000000002dff7bb: jne    0x0000000002dff7da
  0x0000000002dff7bd: and    $0x37f,%rax
  0x0000000002dff7c4: mov    %rax,%r9
  0x0000000002dff7c7: or     %r15,%r9
  0x0000000002dff7ca: lock cmpxchg %r9,(%rdi)
  0x0000000002dff7cf: jne    0x0000000002e0108b
  0x0000000002dff7d5: jmpq   0x0000000002dff838
  0x0000000002dff7da: mov    0x8(%rdi),%r9d
  0x0000000002dff7de: shl    $0x3,%r9
  0x0000000002dff7e2: mov    0xa8(%r9),%r9
  0x0000000002dff7e9: or     %r15,%r9
  0x0000000002dff7ec: lock cmpxchg %r9,(%rdi)
  0x0000000002dff7f1: jne    0x0000000002e0108b
  0x0000000002dff7f7: jmpq   0x0000000002dff838
  0x0000000002dff7fc: mov    0x8(%rdi),%r9d
  0x0000000002dff800: shl    $0x3,%r9
  0x0000000002dff804: mov    0xa8(%r9),%r9
  0x0000000002dff80b: lock cmpxchg %r9,(%rdi)
  0x0000000002dff810: mov    (%rdi),%rax
  0x0000000002dff813: or     $0x1,%rax
  0x0000000002dff817: mov    %rax,(%rcx)
  0x0000000002dff81a: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff81f: je     0x0000000002dff838
  0x0000000002dff825: sub    %rsp,%rax
  0x0000000002dff828: and    $0xfffffffffffff007,%rax
  0x0000000002dff82f: mov    %rax,(%rcx)
  0x0000000002dff832: jne    0x0000000002e0108b  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dff838: movabs $0x1bff5f68,%rax   ;   {metadata(method data for {method} {0x000000001bd387c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff842: mov    0xdc(%rax),%ecx
  0x0000000002dff848: add    $0x8,%ecx
  0x0000000002dff84b: mov    %ecx,0xdc(%rax)
  0x0000000002dff851: movabs $0x1bd387b8,%rax   ;   {metadata({method} {0x000000001bd387c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff85b: and    $0x7ffff8,%ecx
  0x0000000002dff861: cmp    $0x0,%ecx
  0x0000000002dff864: je     0x0000000002e0109e
  0x0000000002dff86a: mov    %rdi,%rax
  0x0000000002dff86d: movabs $0x1bff5f68,%rcx   ;   {metadata(method data for {method} {0x000000001bd387c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dff877: mov    0x8(%rax),%eax
  0x0000000002dff87a: shl    $0x3,%rax
  0x0000000002dff87e: cmp    0x110(%rcx),%rax
  0x0000000002dff885: jne    0x0000000002dff894
  0x0000000002dff887: addq   $0x1,0x118(%rcx)
  0x0000000002dff88f: jmpq   0x0000000002dff8fa
  0x0000000002dff894: cmp    0x120(%rcx),%rax
  0x0000000002dff89b: jne    0x0000000002dff8aa
  0x0000000002dff89d: addq   $0x1,0x128(%rcx)
  0x0000000002dff8a5: jmpq   0x0000000002dff8fa
  0x0000000002dff8aa: cmpq   $0x0,0x110(%rcx)
  0x0000000002dff8b5: jne    0x0000000002dff8ce
  0x0000000002dff8b7: mov    %rax,0x110(%rcx)
  0x0000000002dff8be: movq   $0x1,0x118(%rcx)
  0x0000000002dff8c9: jmpq   0x0000000002dff8fa
  0x0000000002dff8ce: cmpq   $0x0,0x120(%rcx)
  0x0000000002dff8d9: jne    0x0000000002dff8f2
  0x0000000002dff8db: mov    %rax,0x120(%rcx)
  0x0000000002dff8e2: movq   $0x1,0x128(%rcx)
  0x0000000002dff8ed: jmpq   0x0000000002dff8fa
  0x0000000002dff8f2: addq   $0x1,0x108(%rcx)
  0x0000000002dff8fa: lea    0x128(%rsp),%rcx
  0x0000000002dff902: mov    %rdi,0x8(%rcx)
  0x0000000002dff906: mov    (%rdi),%rax
  0x0000000002dff909: mov    %rax,%r9
  0x0000000002dff90c: and    $0x7,%r9
  0x0000000002dff910: cmp    $0x5,%r9
  0x0000000002dff914: jne    0x0000000002dff99e
  0x0000000002dff91a: mov    0x8(%rdi),%r9d
  0x0000000002dff91e: shl    $0x3,%r9
  0x0000000002dff922: mov    0xa8(%r9),%r9
  0x0000000002dff929: or     %r15,%r9
  0x0000000002dff92c: xor    %rax,%r9
  0x0000000002dff92f: and    $0xffffffffffffff87,%r9
  0x0000000002dff933: je     0x0000000002dff9c6
  0x0000000002dff939: test   $0x7,%r9
  0x0000000002dff940: jne    0x0000000002dff98a
  0x0000000002dff942: test   $0x300,%r9
  0x0000000002dff949: jne    0x0000000002dff968
  0x0000000002dff94b: and    $0x37f,%rax
  0x0000000002dff952: mov    %rax,%r9
  0x0000000002dff955: or     %r15,%r9
  0x0000000002dff958: lock cmpxchg %r9,(%rdi)
  0x0000000002dff95d: jne    0x0000000002e010b5
  0x0000000002dff963: jmpq   0x0000000002dff9c6
  0x0000000002dff968: mov    0x8(%rdi),%r9d
  0x0000000002dff96c: shl    $0x3,%r9
  0x0000000002dff970: mov    0xa8(%r9),%r9
  0x0000000002dff977: or     %r15,%r9
  0x0000000002dff97a: lock cmpxchg %r9,(%rdi)
  0x0000000002dff97f: jne    0x0000000002e010b5
  0x0000000002dff985: jmpq   0x0000000002dff9c6
  0x0000000002dff98a: mov    0x8(%rdi),%r9d
  0x0000000002dff98e: shl    $0x3,%r9
  0x0000000002dff992: mov    0xa8(%r9),%r9
  0x0000000002dff999: lock cmpxchg %r9,(%rdi)
  0x0000000002dff99e: mov    (%rdi),%rax
  0x0000000002dff9a1: or     $0x1,%rax
  0x0000000002dff9a5: mov    %rax,(%rcx)
  0x0000000002dff9a8: lock cmpxchg %rcx,(%rdi)
  0x0000000002dff9ad: je     0x0000000002dff9c6
  0x0000000002dff9b3: sub    %rsp,%rax
  0x0000000002dff9b6: and    $0xfffffffffffff007,%rax
  0x0000000002dff9bd: mov    %rax,(%rcx)
  0x0000000002dff9c0: jne    0x0000000002e010b5  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dff9c6: mov    0x10(%rdi),%ecx    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dff9c9: lea    0x128(%rsp),%rax
  0x0000000002dff9d1: mov    0x8(%rax),%r11
  0x0000000002dff9d5: mov    (%r11),%r9
  0x0000000002dff9d8: and    $0x7,%r9
  0x0000000002dff9dc: cmp    $0x5,%r9
  0x0000000002dff9e0: je     0x0000000002dff9fd
  0x0000000002dff9e6: mov    (%rax),%r9
  0x0000000002dff9e9: test   %r9,%r9
  0x0000000002dff9ec: je     0x0000000002dff9fd
  0x0000000002dff9f2: lock cmpxchg %r9,(%r11)
  0x0000000002dff9f7: jne    0x0000000002e010c8  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dff9fd: cmp    $0x0,%ecx
  0x0000000002dffa00: movabs $0x1bff5f68,%rax   ;   {metadata(method data for {method} {0x000000001bd387c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dffa0a: movabs $0x138,%r9
  0x0000000002dffa14: jne    0x0000000002dffa24
  0x0000000002dffa1a: movabs $0x148,%r9
  0x0000000002dffa24: mov    (%rax,%r9,1),%r11
  0x0000000002dffa28: lea    0x1(%r11),%r11
  0x0000000002dffa2c: mov    %r11,(%rax,%r9,1)
  0x0000000002dffa30: mov    %ebx,0x90(%rsp)
  0x0000000002dffa37: je     0x0000000002e00ce1  ;*ifne
                                                ; - java.util.Stack::peek@6 (line 101)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dffa3d: mov    %rsi,0xa0(%rsp)
  0x0000000002dffa45: mov    %rdi,%rax
  0x0000000002dffa48: movabs $0x1bff5f68,%r9    ;   {metadata(method data for {method} {0x000000001bd387c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dffa52: mov    0x8(%rax),%eax
  0x0000000002dffa55: shl    $0x3,%rax
  0x0000000002dffa59: cmp    0x170(%r9),%rax
  0x0000000002dffa60: jne    0x0000000002dffa6f
  0x0000000002dffa62: addq   $0x1,0x178(%r9)
  0x0000000002dffa6a: jmpq   0x0000000002dffad5
  0x0000000002dffa6f: cmp    0x180(%r9),%rax
  0x0000000002dffa76: jne    0x0000000002dffa85
  0x0000000002dffa78: addq   $0x1,0x188(%r9)
  0x0000000002dffa80: jmpq   0x0000000002dffad5
  0x0000000002dffa85: cmpq   $0x0,0x170(%r9)
  0x0000000002dffa90: jne    0x0000000002dffaa9
  0x0000000002dffa92: mov    %rax,0x170(%r9)
  0x0000000002dffa99: movq   $0x1,0x178(%r9)
  0x0000000002dffaa4: jmpq   0x0000000002dffad5
  0x0000000002dffaa9: cmpq   $0x0,0x180(%r9)
  0x0000000002dffab4: jne    0x0000000002dffacd
  0x0000000002dffab6: mov    %rax,0x180(%r9)
  0x0000000002dffabd: movq   $0x1,0x188(%r9)
  0x0000000002dffac8: jmpq   0x0000000002dffad5
  0x0000000002dffacd: addq   $0x1,0x168(%r9)
  0x0000000002dffad5: dec    %ecx
  0x0000000002dffad7: mov    %rcx,%r8
  0x0000000002dffada: mov    %rdi,%rdx          ;*invokevirtual elementAt
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dffadd: mov    %rdi,0x88(%rsp)
  0x0000000002dffae5: nop
  0x0000000002dffae6: nop
  0x0000000002dffae7: callq  0x0000000002cf61a0  ; OopMap{[160]=Oop [152]=Oop [136]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=2924}
                                                ;*invokevirtual elementAt
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {optimized virtual_call}
  0x0000000002dffaec: mov    %rax,0xa8(%rsp)
  0x0000000002dffaf4: lea    0x118(%rsp),%rax
  0x0000000002dffafc: mov    0x8(%rax),%rdx
  0x0000000002dffb00: mov    (%rdx),%r8
  0x0000000002dffb03: and    $0x7,%r8
  0x0000000002dffb07: cmp    $0x5,%r8
  0x0000000002dffb0b: je     0x0000000002dffb28
  0x0000000002dffb11: mov    (%rax),%r8
  0x0000000002dffb14: test   %r8,%r8
  0x0000000002dffb17: je     0x0000000002dffb28
  0x0000000002dffb1d: lock cmpxchg %r8,(%rdx)
  0x0000000002dffb22: jne    0x0000000002e010de  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dffb28: mov    0x88(%rsp),%rdi
  0x0000000002dffb30: movabs $0x1bff5d90,%r8    ;   {metadata(method data for {method} {0x000000001bd38710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002dffb3a: mov    0x8(%rdi),%edi
  0x0000000002dffb3d: shl    $0x3,%rdi
  0x0000000002dffb41: cmp    0x170(%r8),%rdi
  0x0000000002dffb48: jne    0x0000000002dffb57
  0x0000000002dffb4a: addq   $0x1,0x178(%r8)
  0x0000000002dffb52: jmpq   0x0000000002dffbbd
  0x0000000002dffb57: cmp    0x180(%r8),%rdi
  0x0000000002dffb5e: jne    0x0000000002dffb6d
  0x0000000002dffb60: addq   $0x1,0x188(%r8)
  0x0000000002dffb68: jmpq   0x0000000002dffbbd
  0x0000000002dffb6d: cmpq   $0x0,0x170(%r8)
  0x0000000002dffb78: jne    0x0000000002dffb91
  0x0000000002dffb7a: mov    %rdi,0x170(%r8)
  0x0000000002dffb81: movq   $0x1,0x178(%r8)
  0x0000000002dffb8c: jmpq   0x0000000002dffbbd
  0x0000000002dffb91: cmpq   $0x0,0x180(%r8)
  0x0000000002dffb9c: jne    0x0000000002dffbb5
  0x0000000002dffb9e: mov    %rdi,0x180(%r8)
  0x0000000002dffba5: movq   $0x1,0x188(%r8)
  0x0000000002dffbb0: jmpq   0x0000000002dffbbd
  0x0000000002dffbb5: addq   $0x1,0x168(%r8)
  0x0000000002dffbbd: mov    0x90(%rsp),%ebx
  0x0000000002dffbc4: dec    %ebx
  0x0000000002dffbc6: mov    %rbx,%r8
  0x0000000002dffbc9: mov    0x88(%rsp),%rdx    ;*invokevirtual removeElementAt
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dffbd1: nop
  0x0000000002dffbd2: nop
  0x0000000002dffbd3: nop
  0x0000000002dffbd4: nop
  0x0000000002dffbd5: nop
  0x0000000002dffbd6: nop
  0x0000000002dffbd7: callq  0x0000000002cf61a0  ; OopMap{[160]=Oop [152]=Oop [168]=Oop [240]=Oop [256]=Oop [272]=Oop off=3164}
                                                ;*invokevirtual removeElementAt
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {optimized virtual_call}
  0x0000000002dffbdc: lea    0x108(%rsp),%rax
  0x0000000002dffbe4: mov    0x8(%rax),%rsi
  0x0000000002dffbe8: mov    (%rsi),%rdx
  0x0000000002dffbeb: and    $0x7,%rdx
  0x0000000002dffbef: cmp    $0x5,%rdx
  0x0000000002dffbf3: je     0x0000000002dffc10
  0x0000000002dffbf9: mov    (%rax),%rdx
  0x0000000002dffbfc: test   %rdx,%rdx
  0x0000000002dffbff: je     0x0000000002dffc10
  0x0000000002dffc05: lock cmpxchg %rdx,(%rsi)
  0x0000000002dffc0a: jne    0x0000000002e010f4  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002dffc10: mov    0xa8(%rsp),%rax
  0x0000000002dffc18: cmp    $0x0,%rax
  0x0000000002dffc1c: jne    0x0000000002dffc37
  0x0000000002dffc1e: movabs $0x1bf0de68,%rdx   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffc28: orl    $0x100,0x1f0(%rdx)
  0x0000000002dffc32: jmpq   0x0000000002dffcf7
  0x0000000002dffc37: movabs $0x7c000f070,%rdi  ;   {metadata(&apos;java/net/URL&apos;)}
  0x0000000002dffc41: mov    0x8(%rax),%esi
  0x0000000002dffc44: shl    $0x3,%rsi
  0x0000000002dffc48: cmp    %rsi,%rdi
  0x0000000002dffc4b: jne    0x0000000002dffcdb
  0x0000000002dffc51: movabs $0x1bf0de68,%rdx   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffc5b: mov    0x8(%rax),%edi
  0x0000000002dffc5e: shl    $0x3,%rdi
  0x0000000002dffc62: cmp    0x200(%rdx),%rdi
  0x0000000002dffc69: jne    0x0000000002dffc78
  0x0000000002dffc6b: addq   $0x1,0x208(%rdx)
  0x0000000002dffc73: jmpq   0x0000000002dffcf7
  0x0000000002dffc78: cmp    0x210(%rdx),%rdi
  0x0000000002dffc7f: jne    0x0000000002dffc8e
  0x0000000002dffc81: addq   $0x1,0x218(%rdx)
  0x0000000002dffc89: jmpq   0x0000000002dffcf7
  0x0000000002dffc8e: cmpq   $0x0,0x200(%rdx)
  0x0000000002dffc99: jne    0x0000000002dffcb2
  0x0000000002dffc9b: mov    %rdi,0x200(%rdx)
  0x0000000002dffca2: movq   $0x1,0x208(%rdx)
  0x0000000002dffcad: jmpq   0x0000000002dffcf7
  0x0000000002dffcb2: cmpq   $0x0,0x210(%rdx)
  0x0000000002dffcbd: jne    0x0000000002dffcd6
  0x0000000002dffcbf: mov    %rdi,0x210(%rdx)
  0x0000000002dffcc6: movq   $0x1,0x218(%rdx)
  0x0000000002dffcd1: jmpq   0x0000000002dffcf7
  0x0000000002dffcd6: jmpq   0x0000000002dffcf7
  0x0000000002dffcdb: movabs $0x1bf0de68,%rdx   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffce5: subq   $0x1,0x1f8(%rdx)
  0x0000000002dffced: jmpq   0x0000000002e0110a
  0x0000000002dffcf2: jmpq   0x0000000002dffcf7
  0x0000000002dffcf7: mov    %rax,%rsi          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 479)

  0x0000000002dffcfa: lea    0xf8(%rsp),%rax
  0x0000000002dffd02: mov    0x8(%rax),%rdi
  0x0000000002dffd06: mov    (%rdi),%rdx
  0x0000000002dffd09: and    $0x7,%rdx
  0x0000000002dffd0d: cmp    $0x5,%rdx
  0x0000000002dffd11: je     0x0000000002dffd2e
  0x0000000002dffd17: mov    (%rax),%rdx
  0x0000000002dffd1a: test   %rdx,%rdx
  0x0000000002dffd1d: je     0x0000000002dffd2e
  0x0000000002dffd23: lock cmpxchg %rdx,(%rdi)
  0x0000000002dffd28: jne    0x0000000002e01113  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@55 (line 481)

  0x0000000002dffd2e: movabs $0x1bf0de68,%rdx   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffd38: incl   0x228(%rdx)        ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@56 (line 481)

  0x0000000002dffd3e: movabs $0x1bf0de68,%rdi   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffd48: addq   $0x1,0x240(%rdi)
  0x0000000002dffd50: mov    %rsi,%rdx          ;*invokestatic urlNoFragString
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 485)

  0x0000000002dffd53: mov    %rsi,0xb0(%rsp)
  0x0000000002dffd5b: nop
  0x0000000002dffd5c: nop
  0x0000000002dffd5d: nop
  0x0000000002dffd5e: nop
  0x0000000002dffd5f: callq  0x0000000002cf6620  ; OopMap{[152]=Oop [176]=Oop [240]=Oop off=3556}
                                                ;*invokestatic urlNoFragString
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 485)
                                                ;   {static_call}
  0x0000000002dffd64: mov    0x98(%rsp),%rdx
  0x0000000002dffd6c: mov    0x1c(%rdx),%esi
  0x0000000002dffd6f: shl    $0x3,%rsi          ;*getfield lmap
                                                ; - sun.misc.URLClassPath::getLoader@72 (line 486)

  0x0000000002dffd73: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002e01129
  0x0000000002dffd76: mov    %rsi,%r8
  0x0000000002dffd79: movabs $0x1bf0de68,%rdi   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffd83: mov    0x8(%r8),%r8d
  0x0000000002dffd87: shl    $0x3,%r8
  0x0000000002dffd8b: cmp    0x258(%rdi),%r8
  0x0000000002dffd92: jne    0x0000000002dffda1
  0x0000000002dffd94: addq   $0x1,0x260(%rdi)
  0x0000000002dffd9c: jmpq   0x0000000002dffe07
  0x0000000002dffda1: cmp    0x268(%rdi),%r8
  0x0000000002dffda8: jne    0x0000000002dffdb7
  0x0000000002dffdaa: addq   $0x1,0x270(%rdi)
  0x0000000002dffdb2: jmpq   0x0000000002dffe07
  0x0000000002dffdb7: cmpq   $0x0,0x258(%rdi)
  0x0000000002dffdc2: jne    0x0000000002dffddb
  0x0000000002dffdc4: mov    %r8,0x258(%rdi)
  0x0000000002dffdcb: movq   $0x1,0x260(%rdi)
  0x0000000002dffdd6: jmpq   0x0000000002dffe07
  0x0000000002dffddb: cmpq   $0x0,0x268(%rdi)
  0x0000000002dffde6: jne    0x0000000002dffdff
  0x0000000002dffde8: mov    %r8,0x268(%rdi)
  0x0000000002dffdef: movq   $0x1,0x270(%rdi)
  0x0000000002dffdfa: jmpq   0x0000000002dffe07
  0x0000000002dffdff: addq   $0x1,0x250(%rdi)
  0x0000000002dffe07: mov    %rax,%r8
  0x0000000002dffe0a: mov    %rsi,%rdx          ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x0000000002dffe0d: mov    %rax,0xb8(%rsp)
  0x0000000002dffe15: movabs $0xffffffffffffffff,%rax
  0x0000000002dffe1f: callq  0x0000000002cf63e0  ; OopMap{[176]=Oop [184]=Oop [152]=Oop [240]=Oop off=3748}
                                                ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {virtual_call}
  0x0000000002dffe24: cmp    $0x0,%eax
  0x0000000002dffe27: movabs $0x1bf0de68,%rdx   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffe31: movabs $0x280,%rsi
  0x0000000002dffe3b: je     0x0000000002dffe4b
  0x0000000002dffe41: movabs $0x290,%rsi
  0x0000000002dffe4b: mov    (%rdx,%rsi,1),%rdi
  0x0000000002dffe4f: lea    0x1(%rdi),%rdi
  0x0000000002dffe53: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002dffe57: jne    0x0000000002e00849  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@79 (line 486)

  0x0000000002dffe5d: mov    0xb0(%rsp),%rbx
  0x0000000002dffe65: mov    0x98(%rsp),%rdx
  0x0000000002dffe6d: mov    %rdx,%rsi
  0x0000000002dffe70: movabs $0x1bf0de68,%rdi   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffe7a: addq   $0x1,0x2b8(%rdi)
  0x0000000002dffe82: movabs $0x1bff6b38,%rsi   ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffe8c: mov    0xdc(%rsi),%edi
  0x0000000002dffe92: add    $0x8,%edi
  0x0000000002dffe95: mov    %edi,0xdc(%rsi)
  0x0000000002dffe9b: movabs $0x1be58ec0,%rsi   ;   {metadata({method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dffea5: and    $0x7ffff8,%edi
  0x0000000002dffeab: cmp    $0x0,%edi
  0x0000000002dffeae: je     0x0000000002e0112e
  0x0000000002dffeb4: mov    %rdx,%r8
  0x0000000002dffeb7: movabs $0x7c003de80,%rdx  ;   {metadata(&apos;sun/misc/URLClassPath$3&apos;)}
  0x0000000002dffec1: mov    0x60(%r15),%rax
  0x0000000002dffec5: lea    0x18(%rax),%rdi
  0x0000000002dffec9: cmp    0x70(%r15),%rdi
  0x0000000002dffecd: ja     0x0000000002e01145
  0x0000000002dffed3: mov    %rdi,0x60(%r15)
  0x0000000002dffed7: mov    0xa8(%rdx),%rcx
  0x0000000002dffede: mov    %rcx,(%rax)
  0x0000000002dffee1: mov    %rdx,%rcx
  0x0000000002dffee4: shr    $0x3,%rcx
  0x0000000002dffee8: mov    %ecx,0x8(%rax)
  0x0000000002dffeeb: xor    %rcx,%rcx
  0x0000000002dffeee: mov    %ecx,0xc(%rax)
  0x0000000002dffef1: xor    %rcx,%rcx
  0x0000000002dffef4: mov    %rcx,0x10(%rax)    ;*new  ; - sun.misc.URLClassPath::getLoader@0 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x0000000002dffef8: mov    %rax,%rdx
  0x0000000002dffefb: movabs $0x1bff6b38,%rsi   ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfff05: addq   $0x1,0x108(%rsi)
  0x0000000002dfff0d: movabs $0x1bff6d38,%rdx   ;   {metadata(method data for {method} {0x000000001be6bc00} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x0000000002dfff17: mov    0xdc(%rdx),%esi
  0x0000000002dfff1d: add    $0x8,%esi
  0x0000000002dfff20: mov    %esi,0xdc(%rdx)
  0x0000000002dfff26: movabs $0x1be6bbf8,%rdx   ;   {metadata({method} {0x000000001be6bc00} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x0000000002dfff30: and    $0x7ffff8,%esi
  0x0000000002dfff36: cmp    $0x0,%esi
  0x0000000002dfff39: je     0x0000000002e01152
  0x0000000002dfff3f: mov    %r8,%r10
  0x0000000002dfff42: shr    $0x3,%r10
  0x0000000002dfff46: mov    %r10d,0x10(%rax)
  0x0000000002dfff4a: mov    %rax,%rdx
  0x0000000002dfff4d: shr    $0x9,%rdx
  0x0000000002dfff51: movabs $0xea5d000,%rsi
  0x0000000002dfff5b: movb   $0x0,(%rdx,%rsi,1)  ;*putfield this$0
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@2 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x0000000002dfff5f: mov    %rbx,%r10
  0x0000000002dfff62: shr    $0x3,%r10
  0x0000000002dfff66: mov    %r10d,0xc(%rax)
  0x0000000002dfff6a: mov    %rax,%rdx
  0x0000000002dfff6d: shr    $0x9,%rdx
  0x0000000002dfff71: movb   $0x0,(%rdx,%rsi,1)  ;*putfield val$url
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@7 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x0000000002dfff75: mov    %rax,%rdx
  0x0000000002dfff78: movabs $0x1bff6d38,%rsi   ;   {metadata(method data for {method} {0x000000001be6bc00} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x0000000002dfff82: addq   $0x1,0x108(%rsi)
  0x0000000002dfff8a: movabs $0x1bda1c10,%rdx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dfff94: mov    0xdc(%rdx),%esi
  0x0000000002dfff9a: add    $0x8,%esi
  0x0000000002dfff9d: mov    %esi,0xdc(%rdx)
  0x0000000002dfffa3: movabs $0x1bc70480,%rdx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002dfffad: and    $0x7ffff8,%esi
  0x0000000002dfffb3: cmp    $0x0,%esi
  0x0000000002dfffb6: je     0x0000000002e01169
  0x0000000002dfffbc: movabs $0x1bff6b38,%rdx   ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfffc6: addq   $0x1,0x118(%rdx)
  0x0000000002dfffce: mov    %rax,%rdx          ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath::getLoader@9 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x0000000002dfffd1: nop
  0x0000000002dfffd2: nop
  0x0000000002dfffd3: nop
  0x0000000002dfffd4: nop
  0x0000000002dfffd5: nop
  0x0000000002dfffd6: nop
  0x0000000002dfffd7: callq  0x0000000002cf6620  ; OopMap{[184]=Oop [152]=Oop [240]=Oop off=4188}
                                                ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath::getLoader@9 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {static_call}
  0x0000000002dfffdc: cmp    $0x0,%rax
  0x0000000002dfffe0: jne    0x0000000002dffffb
  0x0000000002dfffe2: movabs $0x1bff6b38,%rdi   ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfffec: orl    $0x100,0x120(%rdi)
  0x0000000002dffff6: jmpq   0x0000000002e000bc
  0x0000000002dffffb: movabs $0x7c003e0a0,%rbx  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x0000000002e00005: mov    0x8(%rax),%edi
  0x0000000002e00008: shl    $0x3,%rdi
  0x0000000002e0000c: cmp    0x30(%rdi),%rbx
  0x0000000002e00010: jne    0x0000000002e000a0
  0x0000000002e00016: movabs $0x1bff6b38,%rdi   ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00020: mov    0x8(%rax),%ebx
  0x0000000002e00023: shl    $0x3,%rbx
  0x0000000002e00027: cmp    0x130(%rdi),%rbx
  0x0000000002e0002e: jne    0x0000000002e0003d
  0x0000000002e00030: addq   $0x1,0x138(%rdi)
  0x0000000002e00038: jmpq   0x0000000002e000bc
  0x0000000002e0003d: cmp    0x140(%rdi),%rbx
  0x0000000002e00044: jne    0x0000000002e00053
  0x0000000002e00046: addq   $0x1,0x148(%rdi)
  0x0000000002e0004e: jmpq   0x0000000002e000bc
  0x0000000002e00053: cmpq   $0x0,0x130(%rdi)
  0x0000000002e0005e: jne    0x0000000002e00077
  0x0000000002e00060: mov    %rbx,0x130(%rdi)
  0x0000000002e00067: movq   $0x1,0x138(%rdi)
  0x0000000002e00072: jmpq   0x0000000002e000bc
  0x0000000002e00077: cmpq   $0x0,0x140(%rdi)
  0x0000000002e00082: jne    0x0000000002e0009b
  0x0000000002e00084: mov    %rbx,0x140(%rdi)
  0x0000000002e0008b: movq   $0x1,0x148(%rdi)
  0x0000000002e00096: jmpq   0x0000000002e000bc
  0x0000000002e0009b: jmpq   0x0000000002e000bc
  0x0000000002e000a0: movabs $0x1bff6b38,%rdi   ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e000aa: subq   $0x1,0x128(%rdi)
  0x0000000002e000b2: jmpq   0x0000000002e01180
  0x0000000002e000b7: jmpq   0x0000000002e000bc
  0x0000000002e000bc: mov    %rax,%rsi          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@12 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x0000000002e000bf: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002e01189
  0x0000000002e000c2: mov    %rsi,%rdx
  0x0000000002e000c5: movabs $0x1bf0de68,%rdi   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e000cf: mov    0x8(%rdx),%edx
  0x0000000002e000d2: shl    $0x3,%rdx
  0x0000000002e000d6: cmp    0x2d0(%rdi),%rdx
  0x0000000002e000dd: jne    0x0000000002e000ec
  0x0000000002e000df: addq   $0x1,0x2d8(%rdi)
  0x0000000002e000e7: jmpq   0x0000000002e00152
  0x0000000002e000ec: cmp    0x2e0(%rdi),%rdx
  0x0000000002e000f3: jne    0x0000000002e00102
  0x0000000002e000f5: addq   $0x1,0x2e8(%rdi)
  0x0000000002e000fd: jmpq   0x0000000002e00152
  0x0000000002e00102: cmpq   $0x0,0x2d0(%rdi)
  0x0000000002e0010d: jne    0x0000000002e00126
  0x0000000002e0010f: mov    %rdx,0x2d0(%rdi)
  0x0000000002e00116: movq   $0x1,0x2d8(%rdi)
  0x0000000002e00121: jmpq   0x0000000002e00152
  0x0000000002e00126: cmpq   $0x0,0x2e0(%rdi)
  0x0000000002e00131: jne    0x0000000002e0014a
  0x0000000002e00133: mov    %rdx,0x2e0(%rdi)
  0x0000000002e0013a: movq   $0x1,0x2e8(%rdi)
  0x0000000002e00145: jmpq   0x0000000002e00152
  0x0000000002e0014a: addq   $0x1,0x2c8(%rdi)
  0x0000000002e00152: mov    %rsi,%rdx          ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 495)

  0x0000000002e00155: mov    %rsi,0xc0(%rsp)
  0x0000000002e0015d: movabs $0xffffffffffffffff,%rax
  0x0000000002e00167: callq  0x0000000002cf63e0  ; OopMap{[184]=Oop [152]=Oop [192]=Oop [240]=Oop off=4588}
                                                ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 495)
                                                ;   {virtual_call}
  0x0000000002e0016c: cmp    $0x0,%rax
  0x0000000002e00170: movabs $0x1bf0de68,%r8    ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e0017a: movabs $0x2f8,%rdx
  0x0000000002e00184: je     0x0000000002e00194
  0x0000000002e0018a: movabs $0x308,%rdx
  0x0000000002e00194: mov    (%r8,%rdx,1),%rsi
  0x0000000002e00198: lea    0x1(%rsi),%rsi
  0x0000000002e0019c: mov    %rsi,(%r8,%rdx,1)
  0x0000000002e001a0: je     0x0000000002e001d4  ;*ifnull
                                                ; - sun.misc.URLClassPath::getLoader@101 (line 496)

  0x0000000002e001a6: mov    0x98(%rsp),%rdx
  0x0000000002e001ae: movabs $0x1bf0de68,%r8    ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e001b8: addq   $0x1,0x318(%r8)
  0x0000000002e001c0: mov    %rax,%r8
  0x0000000002e001c3: mov    0x98(%rsp),%rdx    ;*invokespecial push
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 497)

  0x0000000002e001cb: nop
  0x0000000002e001cc: nop
  0x0000000002e001cd: nop
  0x0000000002e001ce: nop
  0x0000000002e001cf: callq  0x0000000002cf61a0  ; OopMap{[184]=Oop [152]=Oop [192]=Oop [240]=Oop off=4692}
                                                ;*invokespecial push
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 497)
                                                ;   {optimized virtual_call}
  0x0000000002e001d4: movabs $0x1bf0de68,%r8    ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e001de: incl   0x328(%r8)         ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@110 (line 502)

  0x0000000002e001e5: mov    0x98(%rsp),%rdx
  0x0000000002e001ed: mov    0x18(%rdx),%r8d
  0x0000000002e001f1: shl    $0x3,%r8           ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@120 (line 504)

  0x0000000002e001f5: cmp    (%r8),%rax         ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 504)
                                                ; implicit exception: dispatches to 0x0000000002e0118e
  0x0000000002e001f8: mov    %r8,%r9
  0x0000000002e001fb: movabs $0x1bf0de68,%rsi   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00205: addq   $0x1,0x368(%rsi)
  0x0000000002e0020d: mov    0x10(%r8),%r8d     ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 504)

  0x0000000002e00211: mov    %rdx,%r9
  0x0000000002e00214: movabs $0x1bf0de68,%rsi   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e0021e: addq   $0x1,0x388(%rsi)
  0x0000000002e00226: mov    0xb8(%rsp),%r9
  0x0000000002e0022e: mov    %rdx,%rsi
  0x0000000002e00231: mov    %rsi,%rdx          ;*invokespecial validateLookupCache
                                                ; - sun.misc.URLClassPath::getLoader@127 (line 504)

  0x0000000002e00234: nop
  0x0000000002e00235: nop
  0x0000000002e00236: nop
  0x0000000002e00237: callq  0x0000000002cf61a0  ; OopMap{[184]=Oop [192]=Oop [152]=Oop [240]=Oop off=4796}
                                                ;*invokespecial validateLookupCache
                                                ; - sun.misc.URLClassPath::getLoader@127 (line 504)
                                                ;   {optimized virtual_call}
  0x0000000002e0023c: mov    0x98(%rsp),%rdx
  0x0000000002e00244: mov    0x18(%rdx),%esi
  0x0000000002e00247: shl    $0x3,%rsi          ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@131 (line 505)

  0x0000000002e0024b: cmp    (%rsi),%rax        ;*invokevirtual add
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ; implicit exception: dispatches to 0x0000000002e01193
  0x0000000002e0024e: mov    %rsi,%r8
  0x0000000002e00251: movabs $0x1bf0de68,%rdi   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e0025b: addq   $0x1,0x3a8(%rdi)
  0x0000000002e00263: movabs $0x1beb6e80,%r8    ;   {metadata(method data for {method} {0x000000001bd3db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e0026d: mov    0xdc(%r8),%edi
  0x0000000002e00274: add    $0x8,%edi
  0x0000000002e00277: mov    %edi,0xdc(%r8)
  0x0000000002e0027e: movabs $0x1bd3db68,%r8    ;   {metadata({method} {0x000000001bd3db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00288: and    $0x7ffff8,%edi
  0x0000000002e0028e: cmp    $0x0,%edi
  0x0000000002e00291: je     0x0000000002e01198
  0x0000000002e00297: mov    0x10(%rsi),%r8d    ;*getfield size
                                                ; - java.util.ArrayList::add@2 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e0029b: inc    %r8d
  0x0000000002e0029e: mov    %rsi,%rdi
  0x0000000002e002a1: movabs $0x1beb6e80,%rbx   ;   {metadata(method data for {method} {0x000000001bd3db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e002ab: addq   $0x1,0x108(%rbx)
  0x0000000002e002b3: movabs $0x1beb7010,%rdi   ;   {metadata(method data for {method} {0x000000001bd3d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e002bd: mov    0xdc(%rdi),%ebx
  0x0000000002e002c3: add    $0x8,%ebx
  0x0000000002e002c6: mov    %ebx,0xdc(%rdi)
  0x0000000002e002cc: movabs $0x1bd3d0e0,%rdi   ;   {metadata({method} {0x000000001bd3d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e002d6: and    $0x7ffff8,%ebx
  0x0000000002e002dc: cmp    $0x0,%ebx
  0x0000000002e002df: je     0x0000000002e011af
  0x0000000002e002e5: mov    0x14(%rsi),%edi
  0x0000000002e002e8: shl    $0x3,%rdi          ;*getfield elementData
                                                ; - java.util.ArrayList::ensureCapacityInternal@1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e002ec: movabs $0x76b786d90,%r10  ;   {oop(a &apos;java/lang/Object&apos;[0] )}
  0x0000000002e002f6: cmp    %r10,%rdi
  0x0000000002e002f9: movabs $0x1beb7010,%rbx   ;   {metadata(method data for {method} {0x000000001bd3d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00303: movabs $0x108,%rax
  0x0000000002e0030d: jne    0x0000000002e0031d
  0x0000000002e00313: movabs $0x118,%rax
  0x0000000002e0031d: mov    (%rbx,%rax,1),%rcx
  0x0000000002e00321: lea    0x1(%rcx),%rcx
  0x0000000002e00325: mov    %rcx,(%rbx,%rax,1)
  0x0000000002e00329: jne    0x0000000002e003c4  ;*if_acmpne
                                                ; - java.util.ArrayList::ensureCapacityInternal@7 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e0032f: movabs $0x1beb7010,%rbx   ;   {metadata(method data for {method} {0x000000001bd3d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00339: addq   $0x1,0x128(%rbx)
  0x0000000002e00341: movabs $0x1bea7b08,%rbx   ;   {metadata(method data for {method} {0x000000001bd62850} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e0034b: mov    0xdc(%rbx),%eax
  0x0000000002e00351: add    $0x8,%eax
  0x0000000002e00354: mov    %eax,0xdc(%rbx)
  0x0000000002e0035a: movabs $0x1bd62848,%rbx   ;   {metadata({method} {0x000000001bd62850} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e00364: and    $0x7ffff8,%eax
  0x0000000002e0036a: cmp    $0x0,%eax
  0x0000000002e0036d: je     0x0000000002e011c6
  0x0000000002e00373: cmp    $0xa,%r8d
  0x0000000002e00377: movabs $0x1bea7b08,%rbx   ;   {metadata(method data for {method} {0x000000001bd62850} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e00381: movabs $0x108,%rax
  0x0000000002e0038b: jg     0x0000000002e0039b
  0x0000000002e00391: movabs $0x118,%rax
  0x0000000002e0039b: mov    (%rbx,%rax,1),%rcx
  0x0000000002e0039f: lea    0x1(%rcx),%rcx
  0x0000000002e003a3: mov    %rcx,(%rbx,%rax,1)
  0x0000000002e003a7: jg     0x0000000002e003c4  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e003ad: movabs $0x1bea7b08,%r8    ;   {metadata(method data for {method} {0x000000001bd62850} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002e003b7: incl   0x128(%r8)
  0x0000000002e003be: mov    $0xa,%r8d          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e003c4: mov    %rsi,%rbx
  0x0000000002e003c7: movabs $0x1beb7010,%rax   ;   {metadata(method data for {method} {0x000000001bd3d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e003d1: addq   $0x1,0x138(%rax)
  0x0000000002e003d9: movabs $0x1beb71a0,%rbx   ;   {metadata(method data for {method} {0x000000001bd3d198} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e003e3: mov    0xdc(%rbx),%eax
  0x0000000002e003e9: add    $0x8,%eax
  0x0000000002e003ec: mov    %eax,0xdc(%rbx)
  0x0000000002e003f2: movabs $0x1bd3d190,%rbx   ;   {metadata({method} {0x000000001bd3d198} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e003fc: and    $0x7ffff8,%eax
  0x0000000002e00402: cmp    $0x0,%eax
  0x0000000002e00405: je     0x0000000002e011dd
  0x0000000002e0040b: mov    0xc(%rsi),%ebx     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e0040e: inc    %ebx
  0x0000000002e00410: mov    %ebx,0xc(%rsi)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e00413: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ; implicit exception: dispatches to 0x0000000002e011f4
  0x0000000002e00416: mov    %r8,%rbx
  0x0000000002e00419: sub    %edi,%ebx
  0x0000000002e0041b: cmp    $0x0,%ebx
  0x0000000002e0041e: movabs $0x1beb71a0,%rdi   ;   {metadata(method data for {method} {0x000000001bd3d198} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00428: movabs $0x108,%rbx
  0x0000000002e00432: jle    0x0000000002e00442
  0x0000000002e00438: movabs $0x118,%rbx
  0x0000000002e00442: mov    (%rdi,%rbx,1),%rax
  0x0000000002e00446: lea    0x1(%rax),%rax
  0x0000000002e0044a: mov    %rax,(%rdi,%rbx,1)
  0x0000000002e0044e: jg     0x0000000002e00461  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e00454: mov    %rsi,0xc8(%rsp)
  0x0000000002e0045c: jmpq   0x0000000002e0048c  ;*return
                                                ; - java.util.ArrayList::ensureExplicitCapacity@25 (line 236)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e00461: mov    %rsi,%rdi
  0x0000000002e00464: movabs $0x1beb71a0,%rbx   ;   {metadata(method data for {method} {0x000000001bd3d198} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e0046e: addq   $0x1,0x128(%rbx)
  0x0000000002e00476: mov    %rsi,%rdx          ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e00479: mov    %rsi,0xc8(%rsp)
  0x0000000002e00481: nop
  0x0000000002e00482: nop
  0x0000000002e00483: nop
  0x0000000002e00484: nop
  0x0000000002e00485: nop
  0x0000000002e00486: nop
  0x0000000002e00487: callq  0x0000000002cf61a0  ; OopMap{[184]=Oop [192]=Oop [152]=Oop [200]=Oop [240]=Oop off=5388}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {optimized virtual_call}
  0x0000000002e0048c: mov    0xc8(%rsp),%rsi
  0x0000000002e00494: mov    0xc0(%rsp),%r9
  0x0000000002e0049c: mov    0x14(%rsi),%eax
  0x0000000002e0049f: shl    $0x3,%rax          ;*getfield elementData
                                                ; - java.util.ArrayList::add@11 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e004a3: mov    0x10(%rsi),%edx    ;*getfield size
                                                ; - java.util.ArrayList::add@16 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e004a6: mov    %rdx,%r8
  0x0000000002e004a9: inc    %r8d
  0x0000000002e004ac: mov    %r8d,0x10(%rsi)    ;*putfield size
                                                ; - java.util.ArrayList::add@22 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e004b0: movslq %edx,%r8
  0x0000000002e004b3: lea    0x10(%rax,%r8,4),%r8
  0x0000000002e004b8: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x0000000002e011f9
  0x0000000002e004bb: jae    0x0000000002e01203
  0x0000000002e004c1: cmp    $0x0,%r9
  0x0000000002e004c5: jne    0x0000000002e004e0
  0x0000000002e004c7: movabs $0x1beb6e80,%rdx   ;   {metadata(method data for {method} {0x000000001bd3db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e004d1: orl    $0x100,0x110(%rdx)
  0x0000000002e004db: jmpq   0x0000000002e005c6
  0x0000000002e004e0: mov    0x8(%rax),%eax     ; implicit exception: dispatches to 0x0000000002e0120c
  0x0000000002e004e3: shl    $0x3,%rax
  0x0000000002e004e7: mov    0x8(%r9),%edx
  0x0000000002e004eb: shl    $0x3,%rdx
  0x0000000002e004ef: mov    0xf0(%rax),%rax
  0x0000000002e004f6: cmp    %rax,%rdx
  0x0000000002e004f9: je     0x0000000002e00527
  0x0000000002e004ff: mov    0xc(%rax),%esi
  0x0000000002e00502: cmp    (%rdx,%rsi,1),%rax
  0x0000000002e00506: je     0x0000000002e00527
  0x0000000002e0050c: cmp    $0x18,%esi
  0x0000000002e0050f: jne    0x0000000002e005af
  0x0000000002e00515: push   %rdx
  0x0000000002e00516: push   %rax
  0x0000000002e00517: callq  0x0000000002dafce0  ;   {runtime_call}
  0x0000000002e0051c: pop    %rdx
  0x0000000002e0051d: pop    %rax
  0x0000000002e0051e: cmp    $0x0,%eax
  0x0000000002e00521: je     0x0000000002e005af
  0x0000000002e00527: movabs $0x1beb6e80,%rdx   ;   {metadata(method data for {method} {0x000000001bd3db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00531: mov    0x8(%r9),%eax
  0x0000000002e00535: shl    $0x3,%rax
  0x0000000002e00539: cmp    0x120(%rdx),%rax
  0x0000000002e00540: jne    0x0000000002e0054f
  0x0000000002e00542: addq   $0x1,0x128(%rdx)
  0x0000000002e0054a: jmpq   0x0000000002e005c6
  0x0000000002e0054f: cmp    0x130(%rdx),%rax
  0x0000000002e00556: jne    0x0000000002e00565
  0x0000000002e00558: addq   $0x1,0x138(%rdx)
  0x0000000002e00560: jmpq   0x0000000002e005c6
  0x0000000002e00565: cmpq   $0x0,0x120(%rdx)
  0x0000000002e00570: jne    0x0000000002e00589
  0x0000000002e00572: mov    %rax,0x120(%rdx)
  0x0000000002e00579: movq   $0x1,0x128(%rdx)
  0x0000000002e00584: jmpq   0x0000000002e005c6
  0x0000000002e00589: cmpq   $0x0,0x130(%rdx)
  0x0000000002e00594: jne    0x0000000002e005ad
  0x0000000002e00596: mov    %rax,0x130(%rdx)
  0x0000000002e0059d: movq   $0x1,0x138(%rdx)
  0x0000000002e005a8: jmpq   0x0000000002e005c6
  0x0000000002e005ad: jmp    0x0000000002e005c6
  0x0000000002e005af: movabs $0x1beb6e80,%rdx   ;   {metadata(method data for {method} {0x000000001bd3db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e005b9: subq   $0x1,0x118(%rdx)
  0x0000000002e005c1: jmpq   0x0000000002e01211
  0x0000000002e005c6: mov    %r9,%r10
  0x0000000002e005c9: shr    $0x3,%r10
  0x0000000002e005cd: mov    %r10d,(%r8)
  0x0000000002e005d0: shr    $0x9,%r8
  0x0000000002e005d4: movabs $0xea5d000,%rax
  0x0000000002e005de: movb   $0x0,(%r8,%rax,1)  ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x0000000002e005e3: mov    0xb8(%rsp),%rax
  0x0000000002e005eb: mov    0x98(%rsp),%rdx
  0x0000000002e005f3: jmpq   0x0000000002e00736  ;*pop
                                                ; - sun.misc.URLClassPath::getLoader@139 (line 505)

  0x0000000002e005f8: mov    0x2a8(%r15),%rax
  0x0000000002e005ff: xor    %r10,%r10
  0x0000000002e00602: mov    %r10,0x2a8(%r15)
  0x0000000002e00609: xor    %r10,%r10
  0x0000000002e0060c: mov    %r10,0x2b0(%r15)
  0x0000000002e00613: mov    %rax,%rdx
  0x0000000002e00616: movabs $0x1bff6b38,%r8    ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00620: movabs $0x7c0047040,%r10  ;   {metadata(&apos;java/security/PrivilegedActionException&apos;)}
  0x0000000002e0062a: mov    %r10,0x160(%r8)
  0x0000000002e00631: addq   $0x1,0x168(%r8)
  0x0000000002e00639: mov    0x20(%rax),%eax
  0x0000000002e0063c: shl    $0x3,%rax          ;*getfield exception
                                                ; - java.security.PrivilegedActionException::getException@1 (line 86)
                                                ; - sun.misc.URLClassPath::getLoader@18 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x0000000002e00640: cmp    $0x0,%rax
  0x0000000002e00644: jne    0x0000000002e00660
  0x0000000002e00646: movabs $0x1bff6b38,%r8    ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00650: orl    $0x100,0x180(%r8)
  0x0000000002e0065b: jmpq   0x0000000002e00723
  0x0000000002e00660: movabs $0x7c0046b30,%r9   ;   {metadata(&apos;java/io/IOException&apos;)}
  0x0000000002e0066a: mov    0x8(%rax),%r8d
  0x0000000002e0066e: shl    $0x3,%r8
  0x0000000002e00672: cmp    0x40(%r8),%r9
  0x0000000002e00676: jne    0x0000000002e00707
  0x0000000002e0067c: movabs $0x1bff6b38,%r8    ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00686: mov    0x8(%rax),%r9d
  0x0000000002e0068a: shl    $0x3,%r9
  0x0000000002e0068e: cmp    0x190(%r8),%r9
  0x0000000002e00695: jne    0x0000000002e006a4
  0x0000000002e00697: addq   $0x1,0x198(%r8)
  0x0000000002e0069f: jmpq   0x0000000002e00723
  0x0000000002e006a4: cmp    0x1a0(%r8),%r9
  0x0000000002e006ab: jne    0x0000000002e006ba
  0x0000000002e006ad: addq   $0x1,0x1a8(%r8)
  0x0000000002e006b5: jmpq   0x0000000002e00723
  0x0000000002e006ba: cmpq   $0x0,0x190(%r8)
  0x0000000002e006c5: jne    0x0000000002e006de
  0x0000000002e006c7: mov    %r9,0x190(%r8)
  0x0000000002e006ce: movq   $0x1,0x198(%r8)
  0x0000000002e006d9: jmpq   0x0000000002e00723
  0x0000000002e006de: cmpq   $0x0,0x1a0(%r8)
  0x0000000002e006e9: jne    0x0000000002e00702
  0x0000000002e006eb: mov    %r9,0x1a0(%r8)
  0x0000000002e006f2: movq   $0x1,0x1a8(%r8)
  0x0000000002e006fd: jmpq   0x0000000002e00723
  0x0000000002e00702: jmpq   0x0000000002e00723
  0x0000000002e00707: movabs $0x1bff6b38,%r8    ;   {metadata(method data for {method} {0x000000001be58ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00711: subq   $0x1,0x188(%r8)
  0x0000000002e00719: jmpq   0x0000000002e0121a
  0x0000000002e0071e: jmpq   0x0000000002e00723  ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@21 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x0000000002e00723: cmp    (%rax),%rax        ; OopMap{[184]=Oop [152]=Oop [240]=Oop rax=Oop off=6054}
                                                ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@24 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ; implicit exception: dispatches to 0x0000000002e01223
  0x0000000002e00726: movabs $0x2e00726,%rdx    ;   {section_word}
  0x0000000002e00730: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002e00735: nop                       ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@24 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x0000000002e00736: mov    0x1c(%rdx),%esi
  0x0000000002e00739: shl    $0x3,%rsi          ;*getfield lmap
                                                ; - sun.misc.URLClassPath::getLoader@141 (line 506)

  0x0000000002e0073d: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000002e01228
  0x0000000002e00740: mov    %rsi,%r8
  0x0000000002e00743: movabs $0x1bf0de68,%rdi   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e0074d: mov    0x8(%r8),%r8d
  0x0000000002e00751: shl    $0x3,%r8
  0x0000000002e00755: cmp    0x3d0(%rdi),%r8
  0x0000000002e0075c: jne    0x0000000002e0076b
  0x0000000002e0075e: addq   $0x1,0x3d8(%rdi)
  0x0000000002e00766: jmpq   0x0000000002e007d1
  0x0000000002e0076b: cmp    0x3e0(%rdi),%r8
  0x0000000002e00772: jne    0x0000000002e00781
  0x0000000002e00774: addq   $0x1,0x3e8(%rdi)
  0x0000000002e0077c: jmpq   0x0000000002e007d1
  0x0000000002e00781: cmpq   $0x0,0x3d0(%rdi)
  0x0000000002e0078c: jne    0x0000000002e007a5
  0x0000000002e0078e: mov    %r8,0x3d0(%rdi)
  0x0000000002e00795: movq   $0x1,0x3d8(%rdi)
  0x0000000002e007a0: jmpq   0x0000000002e007d1
  0x0000000002e007a5: cmpq   $0x0,0x3e0(%rdi)
  0x0000000002e007b0: jne    0x0000000002e007c9
  0x0000000002e007b2: mov    %r8,0x3e0(%rdi)
  0x0000000002e007b9: movq   $0x1,0x3e8(%rdi)
  0x0000000002e007c4: jmpq   0x0000000002e007d1
  0x0000000002e007c9: addq   $0x1,0x3c8(%rdi)
  0x0000000002e007d1: mov    %rax,%r8
  0x0000000002e007d4: mov    %rsi,%rdx          ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)

  0x0000000002e007d7: nop
  0x0000000002e007d8: nop
  0x0000000002e007d9: nop
  0x0000000002e007da: nop
  0x0000000002e007db: nop
  0x0000000002e007dc: nop
  0x0000000002e007dd: movabs $0xffffffffffffffff,%rax
  0x0000000002e007e7: callq  0x0000000002cf63e0  ; OopMap{[152]=Oop [240]=Oop off=6252}
                                                ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {virtual_call}
  0x0000000002e007ec: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e007f6: mov    0xe0(%rax),%edx
  0x0000000002e007fc: add    $0x8,%edx
  0x0000000002e007ff: mov    %edx,0xe0(%rax)
  0x0000000002e00805: movabs $0x1be58e08,%rax   ;   {metadata({method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e0080f: and    $0xfff8,%edx
  0x0000000002e00815: cmp    $0x0,%edx
  0x0000000002e00818: je     0x0000000002e0122d  ; OopMap{[152]=Oop [240]=Oop off=6302}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@151 (line 507)

  0x0000000002e0081e: test   %eax,-0x2200724(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002e00824: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e0082e: incl   0x3f8(%rax)
  0x0000000002e00834: mov    0x94(%rsp),%r8d
  0x0000000002e0083c: mov    0x98(%rsp),%rdx
  0x0000000002e00844: jmpq   0x0000000002dff0f8  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@151 (line 507)

  0x0000000002e00849: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00853: mov    0xe0(%rax),%edx
  0x0000000002e00859: add    $0x8,%edx
  0x0000000002e0085c: mov    %edx,0xe0(%rax)
  0x0000000002e00862: movabs $0x1be58e08,%rax   ;   {metadata({method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e0086c: and    $0xfff8,%edx
  0x0000000002e00872: cmp    $0x0,%edx
  0x0000000002e00875: je     0x0000000002e01244  ; OopMap{[152]=Oop [240]=Oop off=6395}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 487)

  0x0000000002e0087b: test   %eax,-0x2200781(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002e00881: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e0088b: incl   0x2a0(%rax)
  0x0000000002e00891: mov    0x94(%rsp),%r8d
  0x0000000002e00899: mov    0x98(%rsp),%rdx
  0x0000000002e008a1: jmpq   0x0000000002dff0f8  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 487)

  0x0000000002e008a6: mov    0x2a8(%r15),%rax
  0x0000000002e008ad: xor    %r10,%r10
  0x0000000002e008b0: mov    %r10,0x2a8(%r15)
  0x0000000002e008b7: xor    %r10,%r10
  0x0000000002e008ba: mov    %r10,0x2b0(%r15)
  0x0000000002e008c1: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e008cb: mov    0xe0(%rax),%edx
  0x0000000002e008d1: add    $0x8,%edx
  0x0000000002e008d4: mov    %edx,0xe0(%rax)
  0x0000000002e008da: movabs $0x1be58e08,%rax   ;   {metadata({method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e008e4: and    $0xfff8,%edx
  0x0000000002e008ea: cmp    $0x0,%edx
  0x0000000002e008ed: je     0x0000000002e0125b  ; OopMap{[152]=Oop [240]=Oop off=6515}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 501)

  0x0000000002e008f3: test   %eax,-0x22007f9(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002e008f9: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00903: incl   0x340(%rax)
  0x0000000002e00909: mov    0x94(%rsp),%r8d
  0x0000000002e00911: mov    0x98(%rsp),%rdx
  0x0000000002e00919: jmpq   0x0000000002dff0f8  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 501)

  0x0000000002e0091e: movabs $0x1bf0de68,%rax   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00928: incl   0x410(%rax)        ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@157 (line 508)

  0x0000000002e0092e: mov    0x94(%rsp),%r8d
  0x0000000002e00936: mov    %rsi,%rax
  0x0000000002e00939: movabs $0x1bf0de68,%rdx   ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00943: addq   $0x1,0x510(%rdx)
  0x0000000002e0094b: movabs $0x1bf0e410,%rax   ;   {metadata(method data for {method} {0x000000001bd3da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00955: mov    0xdc(%rax),%edx
  0x0000000002e0095b: add    $0x8,%edx
  0x0000000002e0095e: mov    %edx,0xdc(%rax)
  0x0000000002e00964: movabs $0x1bd3da10,%rax   ;   {metadata({method} {0x000000001bd3da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e0096e: and    $0x7ffff8,%edx
  0x0000000002e00974: cmp    $0x0,%edx
  0x0000000002e00977: je     0x0000000002e01272
  0x0000000002e0097d: mov    %rsi,%rax
  0x0000000002e00980: movabs $0x1bf0e410,%rdx   ;   {metadata(method data for {method} {0x000000001bd3da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e0098a: addq   $0x1,0x108(%rdx)
  0x0000000002e00992: movabs $0x1bf0e5a0,%rax   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e0099c: mov    0xdc(%rax),%edx
  0x0000000002e009a2: add    $0x8,%edx
  0x0000000002e009a5: mov    %edx,0xdc(%rax)
  0x0000000002e009ab: movabs $0x1bd3e2f0,%rax   ;   {metadata({method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e009b5: and    $0x7ffff8,%edx
  0x0000000002e009bb: cmp    $0x0,%edx
  0x0000000002e009be: je     0x0000000002e01289
  0x0000000002e009c4: cmp    %edi,%r8d
  0x0000000002e009c7: movabs $0x1bf0e5a0,%rax   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e009d1: movabs $0x108,%rdx
  0x0000000002e009db: jl     0x0000000002e009eb
  0x0000000002e009e1: movabs $0x118,%rdx
  0x0000000002e009eb: mov    (%rax,%rdx,1),%rdi
  0x0000000002e009ef: lea    0x1(%rdi),%rdi
  0x0000000002e009f3: mov    %rdi,(%rax,%rdx,1)
  0x0000000002e009f7: jge    0x0000000002e00c59  ;*if_icmplt
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x0000000002e009fd: mov    %rsi,%rax
  0x0000000002e00a00: movabs $0x1bf0e410,%rdx   ;   {metadata(method data for {method} {0x000000001bd3da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00a0a: addq   $0x1,0x128(%rdx)
  0x0000000002e00a12: movabs $0x1bf0e708,%rax   ;   {metadata(method data for {method} {0x000000001bd3d978} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00a1c: mov    0xdc(%rax),%edx
  0x0000000002e00a22: add    $0x8,%edx
  0x0000000002e00a25: mov    %edx,0xdc(%rax)
  0x0000000002e00a2b: movabs $0x1bd3d970,%rax   ;   {metadata({method} {0x000000001bd3d978} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00a35: and    $0x7ffff8,%edx
  0x0000000002e00a3b: cmp    $0x0,%edx
  0x0000000002e00a3e: je     0x0000000002e012a0
  0x0000000002e00a44: mov    0x14(%rsi),%eax
  0x0000000002e00a47: shl    $0x3,%rax          ;*getfield elementData
                                                ; - java.util.ArrayList::elementData@1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x0000000002e00a4b: movslq %r8d,%rdx
  0x0000000002e00a4e: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x0000000002e012b7
  0x0000000002e00a52: jae    0x0000000002e012c1
  0x0000000002e00a58: mov    0x10(%rax,%rdx,4),%eax
  0x0000000002e00a5c: shl    $0x3,%rax          ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x0000000002e00a60: cmp    $0x0,%rax
  0x0000000002e00a64: jne    0x0000000002e00a80
  0x0000000002e00a66: movabs $0x1bf0de68,%r8    ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00a70: orl    $0x100,0x528(%r8)
  0x0000000002e00a7b: jmpq   0x0000000002e00b42
  0x0000000002e00a80: movabs $0x7c003e0a0,%rsi  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x0000000002e00a8a: mov    0x8(%rax),%r8d
  0x0000000002e00a8e: shl    $0x3,%r8
  0x0000000002e00a92: cmp    0x30(%r8),%rsi
  0x0000000002e00a96: jne    0x0000000002e00b26
  0x0000000002e00a9c: movabs $0x1bf0de68,%r8    ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00aa6: mov    0x8(%rax),%esi
  0x0000000002e00aa9: shl    $0x3,%rsi
  0x0000000002e00aad: cmp    0x538(%r8),%rsi
  0x0000000002e00ab4: jne    0x0000000002e00ac3
  0x0000000002e00ab6: addq   $0x1,0x540(%r8)
  0x0000000002e00abe: jmpq   0x0000000002e00b42
  0x0000000002e00ac3: cmp    0x548(%r8),%rsi
  0x0000000002e00aca: jne    0x0000000002e00ad9
  0x0000000002e00acc: addq   $0x1,0x550(%r8)
  0x0000000002e00ad4: jmpq   0x0000000002e00b42
  0x0000000002e00ad9: cmpq   $0x0,0x538(%r8)
  0x0000000002e00ae4: jne    0x0000000002e00afd
  0x0000000002e00ae6: mov    %rsi,0x538(%r8)
  0x0000000002e00aed: movq   $0x1,0x540(%r8)
  0x0000000002e00af8: jmpq   0x0000000002e00b42
  0x0000000002e00afd: cmpq   $0x0,0x548(%r8)
  0x0000000002e00b08: jne    0x0000000002e00b21
  0x0000000002e00b0a: mov    %rsi,0x548(%r8)
  0x0000000002e00b11: movq   $0x1,0x550(%r8)
  0x0000000002e00b1c: jmpq   0x0000000002e00b42
  0x0000000002e00b21: jmpq   0x0000000002e00b42
  0x0000000002e00b26: movabs $0x1bf0de68,%r8    ;   {metadata(method data for {method} {0x000000001be58e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002e00b30: subq   $0x1,0x530(%r8)
  0x0000000002e00b38: jmpq   0x0000000002e012ca
  0x0000000002e00b3d: jmpq   0x0000000002e00b42
  0x0000000002e00b42: mov    %rax,%rdx          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 511)

  0x0000000002e00b45: lea    0xe8(%rsp),%rax
  0x0000000002e00b4d: mov    0x8(%rax),%rsi
  0x0000000002e00b51: mov    (%rsi),%r8
  0x0000000002e00b54: and    $0x7,%r8
  0x0000000002e00b58: cmp    $0x5,%r8
  0x0000000002e00b5c: je     0x0000000002e00b79
  0x0000000002e00b62: mov    (%rax),%r8
  0x0000000002e00b65: test   %r8,%r8
  0x0000000002e00b68: je     0x0000000002e00b79
  0x0000000002e00b6e: lock cmpxchg %r8,(%rsi)
  0x0000000002e00b73: jne    0x0000000002e012d3
  0x0000000002e00b79: mov    %rdx,%rax
  0x0000000002e00b7c: add    $0x140,%rsp
  0x0000000002e00b83: pop    %rbp
  0x0000000002e00b84: test   %eax,-0x2200a8a(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e00b8a: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@196 (line 511)

  0x0000000002e00b8b: lea    0xf8(%rsp),%rax
  0x0000000002e00b93: mov    0x8(%rax),%r8
  0x0000000002e00b97: mov    (%r8),%rdx
  0x0000000002e00b9a: and    $0x7,%rdx
  0x0000000002e00b9e: cmp    $0x5,%rdx
  0x0000000002e00ba2: je     0x0000000002e00bbf
  0x0000000002e00ba8: mov    (%rax),%rdx
  0x0000000002e00bab: test   %rdx,%rdx
  0x0000000002e00bae: je     0x0000000002e00bbf
  0x0000000002e00bb4: lock cmpxchg %rdx,(%r8)
  0x0000000002e00bb9: jne    0x0000000002e012e9  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@41 (line 477)

  0x0000000002e00bbf: lea    0xe8(%rsp),%rax
  0x0000000002e00bc7: mov    0x8(%rax),%r8
  0x0000000002e00bcb: mov    (%r8),%rdx
  0x0000000002e00bce: and    $0x7,%rdx
  0x0000000002e00bd2: cmp    $0x5,%rdx
  0x0000000002e00bd6: je     0x0000000002e00bf3
  0x0000000002e00bdc: mov    (%rax),%rdx
  0x0000000002e00bdf: test   %rdx,%rdx
  0x0000000002e00be2: je     0x0000000002e00bf3
  0x0000000002e00be8: lock cmpxchg %rdx,(%r8)
  0x0000000002e00bed: jne    0x0000000002e012ff
  0x0000000002e00bf3: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002e00bfd: add    $0x140,%rsp
  0x0000000002e00c04: pop    %rbp
  0x0000000002e00c05: test   %eax,-0x2200b0b(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e00c0b: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@42 (line 477)

  0x0000000002e00c0c: lea    0xe8(%rsp),%rax
  0x0000000002e00c14: mov    0x8(%rax),%r8
  0x0000000002e00c18: mov    (%r8),%rdx
  0x0000000002e00c1b: and    $0x7,%rdx
  0x0000000002e00c1f: cmp    $0x5,%rdx
  0x0000000002e00c23: je     0x0000000002e00c40
  0x0000000002e00c29: mov    (%rax),%rdx
  0x0000000002e00c2c: test   %rdx,%rdx
  0x0000000002e00c2f: je     0x0000000002e00c40
  0x0000000002e00c35: lock cmpxchg %rdx,(%r8)
  0x0000000002e00c3a: jne    0x0000000002e01315
  0x0000000002e00c40: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002e00c4a: add    $0x140,%rsp
  0x0000000002e00c51: pop    %rbp
  0x0000000002e00c52: test   %eax,-0x2200b58(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e00c58: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@8 (line 468)

  0x0000000002e00c59: nopl   0x0(%rax)
  0x0000000002e00c60: jmpq   0x0000000002e0133a  ;   {no_reloc}
  0x0000000002e00c65: add    %al,(%rax)
  0x0000000002e00c67: add    %al,(%rax)
  0x0000000002e00c69: add    %ch,%cl
  0x0000000002e00c6b: (bad)  
  0x0000000002e00c6c: (bad)  
  0x0000000002e00c6d: add    %al,(%rax)         ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x0000000002e00c6f: mov    %rsi,%rdx
  0x0000000002e00c72: movabs $0x1bf0e5a0,%rdi   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00c7c: addq   $0x1,0x128(%rdi)
  0x0000000002e00c84: mov    %r8,%rdi
  0x0000000002e00c87: mov    %rdi,%r8
  0x0000000002e00c8a: mov    %rsi,%rdx          ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x0000000002e00c8d: mov    %rsi,0xd8(%rsp)
  0x0000000002e00c95: mov    %rax,0xd0(%rsp)
  0x0000000002e00c9d: nop
  0x0000000002e00c9e: nop
  0x0000000002e00c9f: callq  0x0000000002cf61a0  ; OopMap{[208]=Oop [216]=Oop [240]=Oop off=7460}
                                                ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {optimized virtual_call}
  0x0000000002e00ca4: mov    0xd0(%rsp),%r8
  0x0000000002e00cac: movabs $0x1bf0e5a0,%rdx   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e00cb6: addq   $0x1,0x138(%rdx)
  0x0000000002e00cbe: mov    %rax,%r8
  0x0000000002e00cc1: mov    0xd0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x0000000002e00cc9: nop
  0x0000000002e00cca: nop
  0x0000000002e00ccb: nop
  0x0000000002e00ccc: nop
  0x0000000002e00ccd: nop
  0x0000000002e00cce: nop
  0x0000000002e00ccf: callq  0x0000000002cf61a0  ; OopMap{[208]=Oop [216]=Oop [240]=Oop off=7508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {optimized virtual_call}
  0x0000000002e00cd4: mov    0xd0(%rsp),%rax
  0x0000000002e00cdc: jmpq   0x0000000002e0146e  ;*athrow
                                                ; - java.util.ArrayList::rangeCheck@20 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x0000000002e00ce1: mov    %rdi,0x88(%rsp)
  0x0000000002e00ce9: mov    %rsi,0xa0(%rsp)
  0x0000000002e00cf1: nopl   0x0(%rax)
  0x0000000002e00cf8: jmpq   0x0000000002e01360  ;   {no_reloc}
  0x0000000002e00cfd: add    %al,(%rax)
  0x0000000002e00cff: add    %al,(%rax)
  0x0000000002e00d01: add    %ch,%cl
  0x0000000002e00d03: movslq (%rsi),%eax
  0x0000000002e00d05: add    %al,(%rax)         ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00d07: mov    %rax,%rdx
  0x0000000002e00d0a: movabs $0x1bff5f68,%rsi   ;   {metadata(method data for {method} {0x000000001bd387c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x0000000002e00d14: addq   $0x1,0x158(%rsi)
  0x0000000002e00d1c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00d1f: mov    %rax,0xe0(%rsp)
  0x0000000002e00d27: callq  0x0000000002cf61a0  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [224]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=7596}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {optimized virtual_call}
  0x0000000002e00d2c: mov    0xe0(%rsp),%rax    ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=7604}
                                                ;*athrow
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00d34: movabs $0x2e00d34,%rdx    ;   {section_word}
  0x0000000002e00d3e: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002e00d43: nop                       ;*athrow
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00d44: mov    0x2a8(%r15),%rax
  0x0000000002e00d4b: xor    %r10,%r10
  0x0000000002e00d4e: mov    %r10,0x2a8(%r15)
  0x0000000002e00d55: xor    %r10,%r10
  0x0000000002e00d58: mov    %r10,0x2b0(%r15)
  0x0000000002e00d5f: mov    %rax,%rdx
  0x0000000002e00d62: lea    0x128(%rsp),%rax
  0x0000000002e00d6a: mov    0x8(%rax),%rdi
  0x0000000002e00d6e: mov    (%rdi),%rsi
  0x0000000002e00d71: and    $0x7,%rsi
  0x0000000002e00d75: cmp    $0x5,%rsi
  0x0000000002e00d79: je     0x0000000002e00d96
  0x0000000002e00d7f: mov    (%rax),%rsi
  0x0000000002e00d82: test   %rsi,%rsi
  0x0000000002e00d85: je     0x0000000002e00d96
  0x0000000002e00d8b: lock cmpxchg %rsi,(%rdi)
  0x0000000002e00d90: jne    0x0000000002e01377  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00d96: mov    %rdx,%rax          ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=7705}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00d99: movabs $0x2e00d99,%rdx    ;   {section_word}
  0x0000000002e00da3: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002e00da8: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00da9: mov    0x2a8(%r15),%rax
  0x0000000002e00db0: xor    %r10,%r10
  0x0000000002e00db3: mov    %r10,0x2a8(%r15)
  0x0000000002e00dba: xor    %r10,%r10
  0x0000000002e00dbd: mov    %r10,0x2b0(%r15)
  0x0000000002e00dc4: mov    %rax,%rdx
  0x0000000002e00dc7: lea    0x118(%rsp),%rax
  0x0000000002e00dcf: mov    0x8(%rax),%rdi
  0x0000000002e00dd3: mov    (%rdi),%rsi
  0x0000000002e00dd6: and    $0x7,%rsi
  0x0000000002e00dda: cmp    $0x5,%rsi
  0x0000000002e00dde: je     0x0000000002e00dfb
  0x0000000002e00de4: mov    (%rax),%rsi
  0x0000000002e00de7: test   %rsi,%rsi
  0x0000000002e00dea: je     0x0000000002e00dfb
  0x0000000002e00df0: lock cmpxchg %rsi,(%rdi)
  0x0000000002e00df5: jne    0x0000000002e0138d  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00dfb: mov    %rdx,%rax          ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop rax=Oop off=7806}
                                                ;*invokevirtual peek
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00dfe: movabs $0x2e00dfe,%rdx    ;   {section_word}
  0x0000000002e00e08: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002e00e0d: nop                       ;*invokevirtual peek
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00e0e: mov    0x2a8(%r15),%rax
  0x0000000002e00e15: xor    %r10,%r10
  0x0000000002e00e18: mov    %r10,0x2a8(%r15)
  0x0000000002e00e1f: xor    %r10,%r10
  0x0000000002e00e22: mov    %r10,0x2b0(%r15)
  0x0000000002e00e29: mov    %rax,%rdx
  0x0000000002e00e2c: lea    0x118(%rsp),%rax
  0x0000000002e00e34: mov    0x8(%rax),%rbx
  0x0000000002e00e38: mov    (%rbx),%rsi
  0x0000000002e00e3b: and    $0x7,%rsi
  0x0000000002e00e3f: cmp    $0x5,%rsi
  0x0000000002e00e43: je     0x0000000002e00e60
  0x0000000002e00e49: mov    (%rax),%rsi
  0x0000000002e00e4c: test   %rsi,%rsi
  0x0000000002e00e4f: je     0x0000000002e00e60
  0x0000000002e00e55: lock cmpxchg %rsi,(%rbx)
  0x0000000002e00e5a: jne    0x0000000002e013a3  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00e60: mov    %rdx,%rax          ; OopMap{[160]=Oop [152]=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop rax=Oop off=7907}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00e63: movabs $0x2e00e63,%rdx    ;   {section_word}
  0x0000000002e00e6d: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002e00e72: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00e73: mov    0x2a8(%r15),%rax
  0x0000000002e00e7a: xor    %r10,%r10
  0x0000000002e00e7d: mov    %r10,0x2a8(%r15)
  0x0000000002e00e84: xor    %r10,%r10
  0x0000000002e00e87: mov    %r10,0x2b0(%r15)
  0x0000000002e00e8e: mov    %rax,%rdx
  0x0000000002e00e91: lea    0x108(%rsp),%rax
  0x0000000002e00e99: mov    0x8(%rax),%rdi
  0x0000000002e00e9d: mov    (%rdi),%rsi
  0x0000000002e00ea0: and    $0x7,%rsi
  0x0000000002e00ea4: cmp    $0x5,%rsi
  0x0000000002e00ea8: je     0x0000000002e00ec5
  0x0000000002e00eae: mov    (%rax),%rsi
  0x0000000002e00eb1: test   %rsi,%rsi
  0x0000000002e00eb4: je     0x0000000002e00ec5
  0x0000000002e00eba: lock cmpxchg %rsi,(%rdi)
  0x0000000002e00ebf: jne    0x0000000002e013b9  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00ec5: mov    %rdx,%rax          ; OopMap{[160]=Oop [152]=Oop [240]=Oop [256]=Oop rax=Oop off=8008}
                                                ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00ec8: movabs $0x2e00ec8,%rdx    ;   {section_word}
  0x0000000002e00ed2: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002e00ed7: nop                       ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x0000000002e00ed8: mov    0x94(%rsp),%r8d
  0x0000000002e00ee0: mov    0x98(%rsp),%rsi
  0x0000000002e00ee8: mov    0x2a8(%r15),%rax
  0x0000000002e00eef: xor    %r10,%r10
  0x0000000002e00ef2: mov    %r10,0x2a8(%r15)
  0x0000000002e00ef9: xor    %r10,%r10
  0x0000000002e00efc: mov    %r10,0x2b0(%r15)
  0x0000000002e00f03: mov    %rax,%rdx
  0x0000000002e00f06: lea    0x108(%rsp),%rax
  0x0000000002e00f0e: mov    0x8(%rax),%rcx
  0x0000000002e00f12: mov    (%rcx),%rbx
  0x0000000002e00f15: and    $0x7,%rbx
  0x0000000002e00f19: cmp    $0x5,%rbx
  0x0000000002e00f1d: je     0x0000000002e00f3a
  0x0000000002e00f23: mov    (%rax),%rbx
  0x0000000002e00f26: test   %rbx,%rbx
  0x0000000002e00f29: je     0x0000000002e00f3a
  0x0000000002e00f2f: lock cmpxchg %rbx,(%rcx)
  0x0000000002e00f34: jne    0x0000000002e013cf  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x0000000002e00f3a: mov    %rdx,%rax          ; OopMap{rdi=Oop rsi=Oop [152]=Oop [240]=Oop [256]=Oop rax=Oop off=8125}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x0000000002e00f3d: movabs $0x2e00f3d,%rdx    ;   {section_word}
  0x0000000002e00f47: callq  0x0000000002dac760  ;   {runtime_call}
  0x0000000002e00f4c: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x0000000002e00f4d: mov    0x2a8(%r15),%rax
  0x0000000002e00f54: xor    %r10,%r10
  0x0000000002e00f57: mov    %r10,0x2a8(%r15)
  0x0000000002e00f5e: xor    %r10,%r10
  0x0000000002e00f61: mov    %r10,0x2b0(%r15)
  0x0000000002e00f68: mov    %rax,%rsi
  0x0000000002e00f6b: lea    0xf8(%rsp),%rax
  0x0000000002e00f73: mov    0x8(%rax),%rbx
  0x0000000002e00f77: mov    (%rbx),%rdi
  0x0000000002e00f7a: and    $0x7,%rdi
  0x0000000002e00f7e: cmp    $0x5,%rdi
  0x0000000002e00f82: je     0x0000000002e00f9f
  0x0000000002e00f88: mov    (%rax),%rdi
  0x0000000002e00f8b: test   %rdi,%rdi
  0x0000000002e00f8e: je     0x0000000002e00f9f
  0x0000000002e00f94: lock cmpxchg %rdi,(%rbx)
  0x0000000002e00f99: jne    0x0000000002e013e5  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@62 (line 481)

  0x0000000002e00f9f: mov    %rsi,%rax
  0x0000000002e00fa2: jmpq   0x0000000002e0146e
  0x0000000002e00fa7: mov    %rdx,0x8(%rsp)
  0x0000000002e00fac: mov    %rsi,(%rsp)
  0x0000000002e00fb0: callq  0x0000000002db0060  ; OopMap{rdx=Oop [152]=Oop [240]=Oop off=8245}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 467)
                                                ;   {runtime_call}
  0x0000000002e00fb5: jmpq   0x0000000002dff088
  0x0000000002e00fba: mov    %rax,0x8(%rsp)
  0x0000000002e00fbf: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e00fc7: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [152]=Oop [240]=Oop off=8268}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 467)
                                                ;   {runtime_call}
  0x0000000002e00fcc: jmpq   0x0000000002dff0ba
  0x0000000002e00fd1: callq  0x0000000002dad680  ; OopMap{rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8278}
                                                ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 472)
                                                ;   {runtime_call}
  0x0000000002e00fd6: callq  0x0000000002dad680  ; OopMap{rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8283}
                                                ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 475)
                                                ;   {runtime_call}
  0x0000000002e00fdb: mov    %rsi,0x8(%rsp)
  0x0000000002e00fe0: mov    %rdi,(%rsp)
  0x0000000002e00fe4: callq  0x0000000002db0060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop [240]=Oop [256]=Oop off=8297}
                                                ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 475)
                                                ;   {runtime_call}
  0x0000000002e00fe9: jmpq   0x0000000002dff227
  0x0000000002e00fee: callq  0x0000000002dad680  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop off=8307}
                                                ;*invokevirtual empty
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ;   {runtime_call}
  0x0000000002e00ff3: mov    %rax,0x8(%rsp)
  0x0000000002e00ff8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e01000: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop off=8325}
                                                ;*synchronization entry
                                                ; - java.util.Stack::empty@-1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ;   {runtime_call}
  0x0000000002e01005: jmpq   0x0000000002dff278
  0x0000000002e0100a: mov    %rdi,0x8(%rsp)
  0x0000000002e0100f: mov    %rbx,(%rsp)
  0x0000000002e01013: callq  0x0000000002db0060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop off=8344}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ;   {runtime_call}
  0x0000000002e01018: jmpq   0x0000000002dff3d1
  0x0000000002e0101d: lea    0x108(%rsp),%rax
  0x0000000002e01025: mov    %rax,(%rsp)
  0x0000000002e01029: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e0102e: jmpq   0x0000000002dff408
  0x0000000002e01033: callq  0x0000000002dad680  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop off=8376}
                                                ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x0000000002e01038: mov    %rdi,0x8(%rsp)
  0x0000000002e0103d: mov    %rbx,(%rsp)
  0x0000000002e01041: callq  0x0000000002db0060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop off=8390}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x0000000002e01046: jmpq   0x0000000002dff584
  0x0000000002e0104b: mov    %rax,0x8(%rsp)
  0x0000000002e01050: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e01058: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop off=8413}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x0000000002e0105d: jmpq   0x0000000002dff5b6
  0x0000000002e01062: mov    %rdi,0x8(%rsp)
  0x0000000002e01067: mov    %rbx,(%rsp)
  0x0000000002e0106b: callq  0x0000000002db0060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=8432}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x0000000002e01070: jmpq   0x0000000002dff70f
  0x0000000002e01075: lea    0x118(%rsp),%rax
  0x0000000002e0107d: mov    %rax,(%rsp)
  0x0000000002e01081: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e01086: jmpq   0x0000000002dff746
  0x0000000002e0108b: mov    %rdi,0x8(%rsp)
  0x0000000002e01090: mov    %rcx,(%rsp)
  0x0000000002e01094: callq  0x0000000002db0060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=8473}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x0000000002e01099: jmpq   0x0000000002dff838
  0x0000000002e0109e: mov    %rax,0x8(%rsp)
  0x0000000002e010a3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e010ab: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=8496}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x0000000002e010b0: jmpq   0x0000000002dff86a
  0x0000000002e010b5: mov    %rdi,0x8(%rsp)
  0x0000000002e010ba: mov    %rcx,(%rsp)
  0x0000000002e010be: callq  0x0000000002db0060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=8515}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x0000000002e010c3: jmpq   0x0000000002dff9c6
  0x0000000002e010c8: lea    0x128(%rsp),%rax
  0x0000000002e010d0: mov    %rax,(%rsp)
  0x0000000002e010d4: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e010d9: jmpq   0x0000000002dff9fd
  0x0000000002e010de: lea    0x118(%rsp),%rax
  0x0000000002e010e6: mov    %rax,(%rsp)
  0x0000000002e010ea: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e010ef: jmpq   0x0000000002dffb28
  0x0000000002e010f4: lea    0x108(%rsp),%rax
  0x0000000002e010fc: mov    %rax,(%rsp)
  0x0000000002e01100: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e01105: jmpq   0x0000000002dffc10
  0x0000000002e0110a: mov    %rax,(%rsp)
  0x0000000002e0110e: callq  0x0000000002daf880  ; OopMap{[160]=Oop [152]=Oop [240]=Oop [256]=Oop off=8595}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 479)
                                                ;   {runtime_call}
  0x0000000002e01113: lea    0xf8(%rsp),%rax
  0x0000000002e0111b: mov    %rax,(%rsp)
  0x0000000002e0111f: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e01124: jmpq   0x0000000002dffd2e
  0x0000000002e01129: callq  0x0000000002dad680  ; OopMap{[176]=Oop rax=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8622}
                                                ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {runtime_call}
  0x0000000002e0112e: mov    %rsi,0x8(%rsp)
  0x0000000002e01133: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e0113b: callq  0x0000000002db1d60  ; OopMap{[184]=Oop rdx=Oop [152]=Oop rbx=Oop [240]=Oop off=8640}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x0000000002e01140: jmpq   0x0000000002dffeb4
  0x0000000002e01145: mov    %rdx,%rdx
  0x0000000002e01148: callq  0x0000000002dade00  ; OopMap{[184]=Oop rbx=Oop r8=Oop [152]=Oop [240]=Oop off=8653}
                                                ;*new  ; - sun.misc.URLClassPath::getLoader@0 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x0000000002e0114d: jmpq   0x0000000002dffef8
  0x0000000002e01152: mov    %rdx,0x8(%rsp)
  0x0000000002e01157: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e0115f: callq  0x0000000002db1d60  ; OopMap{[184]=Oop rbx=Oop r8=Oop [152]=Oop rax=Oop [240]=Oop off=8676}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@-1 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x0000000002e01164: jmpq   0x0000000002dfff3f
  0x0000000002e01169: mov    %rdx,0x8(%rsp)
  0x0000000002e0116e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e01176: callq  0x0000000002db1d60  ; OopMap{[184]=Oop r8=Oop [152]=Oop rax=Oop [240]=Oop off=8699}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@11 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x0000000002e0117b: jmpq   0x0000000002dfffbc
  0x0000000002e01180: mov    %rax,(%rsp)
  0x0000000002e01184: callq  0x0000000002daf880  ; OopMap{[184]=Oop [152]=Oop [240]=Oop off=8713}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@12 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x0000000002e01189: callq  0x0000000002dad680  ; OopMap{[184]=Oop [152]=Oop rsi=Oop [240]=Oop off=8718}
                                                ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 495)
                                                ;   {runtime_call}
  0x0000000002e0118e: callq  0x0000000002dad680  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop r8=Oop [240]=Oop off=8723}
                                                ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 504)
                                                ;   {runtime_call}
  0x0000000002e01193: callq  0x0000000002dad680  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8728}
                                                ;*invokevirtual add
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e01198: mov    %r8,0x8(%rsp)
  0x0000000002e0119d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e011a5: callq  0x0000000002db1d60  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8746}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e011aa: jmpq   0x0000000002e00297
  0x0000000002e011af: mov    %rdi,0x8(%rsp)
  0x0000000002e011b4: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e011bc: callq  0x0000000002db1d60  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8769}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e011c1: jmpq   0x0000000002e002e5
  0x0000000002e011c6: mov    %rbx,0x8(%rsp)
  0x0000000002e011cb: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e011d3: callq  0x0000000002db1d60  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop off=8792}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e011d8: jmpq   0x0000000002e00373
  0x0000000002e011dd: mov    %rbx,0x8(%rsp)
  0x0000000002e011e2: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e011ea: callq  0x0000000002db1d60  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop off=8815}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e011ef: jmpq   0x0000000002e0040b
  0x0000000002e011f4: callq  0x0000000002dad680  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8825}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e011f9: callq  0x0000000002dad680  ; OopMap{[184]=Oop [152]=Oop r9=Oop rax=Oop [240]=Oop off=8830}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e011fe: callq  0x0000000002dad680  ; OopMap{[184]=Oop [152]=Oop r9=Oop rax=Oop [240]=Oop off=8835}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e01203: mov    %rdx,(%rsp)
  0x0000000002e01207: callq  0x0000000002dac940  ; OopMap{[184]=Oop [152]=Oop r9=Oop rax=Oop [240]=Oop off=8844}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e0120c: callq  0x0000000002dad680  ; OopMap{[184]=Oop [152]=Oop r9=Oop [240]=Oop off=8849}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e01211: mov    %r9,(%rsp)
  0x0000000002e01215: callq  0x0000000002daf640  ; OopMap{[184]=Oop [152]=Oop r9=Oop [240]=Oop off=8858}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x0000000002e0121a: mov    %rax,(%rsp)
  0x0000000002e0121e: callq  0x0000000002daf880  ; OopMap{[184]=Oop [152]=Oop [240]=Oop off=8867}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@21 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x0000000002e01223: callq  0x0000000002dad680  ; OopMap{[184]=Oop [152]=Oop rax=Oop [240]=Oop off=8872}
                                                ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@24 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x0000000002e01228: callq  0x0000000002dad680  ; OopMap{rdx=Oop [152]=Oop rax=Oop r9=Oop rsi=Oop [240]=Oop off=8877}
                                                ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {runtime_call}
  0x0000000002e0122d: mov    %rax,0x8(%rsp)
  0x0000000002e01232: movq   $0x97,(%rsp)
  0x0000000002e0123a: callq  0x0000000002db1d60  ; OopMap{[152]=Oop [240]=Oop off=8895}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@151 (line 507)
                                                ;   {runtime_call}
  0x0000000002e0123f: jmpq   0x0000000002e0081e
  0x0000000002e01244: mov    %rax,0x8(%rsp)
  0x0000000002e01249: movq   $0x52,(%rsp)
  0x0000000002e01251: callq  0x0000000002db1d60  ; OopMap{[152]=Oop [240]=Oop off=8918}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 487)
                                                ;   {runtime_call}
  0x0000000002e01256: jmpq   0x0000000002e0087b
  0x0000000002e0125b: mov    %rax,0x8(%rsp)
  0x0000000002e01260: movq   $0x73,(%rsp)
  0x0000000002e01268: callq  0x0000000002db1d60  ; OopMap{[152]=Oop [240]=Oop off=8941}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 501)
                                                ;   {runtime_call}
  0x0000000002e0126d: jmpq   0x0000000002e008f3
  0x0000000002e01272: mov    %rax,0x8(%rsp)
  0x0000000002e01277: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e0127f: callq  0x0000000002db1d60  ; OopMap{rsi=Oop [240]=Oop off=8964}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x0000000002e01284: jmpq   0x0000000002e0097d
  0x0000000002e01289: mov    %rax,0x8(%rsp)
  0x0000000002e0128e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e01296: callq  0x0000000002db1d60  ; OopMap{rsi=Oop [240]=Oop off=8987}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x0000000002e0129b: jmpq   0x0000000002e009c4
  0x0000000002e012a0: mov    %rax,0x8(%rsp)
  0x0000000002e012a5: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e012ad: callq  0x0000000002db1d60  ; OopMap{rsi=Oop [240]=Oop off=9010}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x0000000002e012b2: jmpq   0x0000000002e00a44
  0x0000000002e012b7: callq  0x0000000002dad680  ; OopMap{rax=Oop [240]=Oop off=9020}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x0000000002e012bc: callq  0x0000000002dad680  ; OopMap{rax=Oop [240]=Oop off=9025}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x0000000002e012c1: mov    %r8,(%rsp)
  0x0000000002e012c5: callq  0x0000000002dac940  ; OopMap{rax=Oop [240]=Oop off=9034}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x0000000002e012ca: mov    %rax,(%rsp)
  0x0000000002e012ce: callq  0x0000000002daf880  ; OopMap{[240]=Oop off=9043}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 511)
                                                ;   {runtime_call}
  0x0000000002e012d3: lea    0xe8(%rsp),%rax
  0x0000000002e012db: mov    %rax,(%rsp)
  0x0000000002e012df: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e012e4: jmpq   0x0000000002e00b79
  0x0000000002e012e9: lea    0xf8(%rsp),%rax
  0x0000000002e012f1: mov    %rax,(%rsp)
  0x0000000002e012f5: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e012fa: jmpq   0x0000000002e00bbf
  0x0000000002e012ff: lea    0xe8(%rsp),%rax
  0x0000000002e01307: mov    %rax,(%rsp)
  0x0000000002e0130b: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e01310: jmpq   0x0000000002e00bf3
  0x0000000002e01315: lea    0xe8(%rsp),%rax
  0x0000000002e0131d: mov    %rax,(%rsp)
  0x0000000002e01321: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e01326: jmpq   0x0000000002e00c40
  0x0000000002e0132b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e01335: mov    $0xa050f00,%eax
  0x0000000002e0133a: callq  0x0000000002db0ca0  ; OopMap{rsi=Oop [240]=Oop off=9151}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x0000000002e0133f: jmpq   0x0000000002e00c60
  0x0000000002e01344: mov    %rdx,%rdx
  0x0000000002e01347: callq  0x0000000002dadb20  ; OopMap{rsi=Oop [240]=Oop off=9164}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x0000000002e0134c: jmpq   0x0000000002e00c6f
  0x0000000002e01351: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e0135b: mov    $0xa050f00,%eax
  0x0000000002e01360: callq  0x0000000002db0ca0  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=9189}
                                                ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x0000000002e01365: jmpq   0x0000000002e00cf8
  0x0000000002e0136a: mov    %rdx,%rdx
  0x0000000002e0136d: callq  0x0000000002dadb20  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=9202}
                                                ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x0000000002e01372: jmpq   0x0000000002e00d07
  0x0000000002e01377: lea    0x128(%rsp),%rax
  0x0000000002e0137f: mov    %rax,(%rsp)
  0x0000000002e01383: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e01388: jmpq   0x0000000002e00d96
  0x0000000002e0138d: lea    0x118(%rsp),%rax
  0x0000000002e01395: mov    %rax,(%rsp)
  0x0000000002e01399: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e0139e: jmpq   0x0000000002e00dfb
  0x0000000002e013a3: lea    0x118(%rsp),%rax
  0x0000000002e013ab: mov    %rax,(%rsp)
  0x0000000002e013af: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e013b4: jmpq   0x0000000002e00e60
  0x0000000002e013b9: lea    0x108(%rsp),%rax
  0x0000000002e013c1: mov    %rax,(%rsp)
  0x0000000002e013c5: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e013ca: jmpq   0x0000000002e00ec5
  0x0000000002e013cf: lea    0x108(%rsp),%rax
  0x0000000002e013d7: mov    %rax,(%rsp)
  0x0000000002e013db: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e013e0: jmpq   0x0000000002e00f3a
  0x0000000002e013e5: lea    0xf8(%rsp),%rax
  0x0000000002e013ed: mov    %rax,(%rsp)
  0x0000000002e013f1: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e013f6: jmpq   0x0000000002e00f9f
  0x0000000002e013fb: mov    0x90(%rsp),%ebx
  0x0000000002e01402: jmpq   0x0000000002e00da9
  0x0000000002e01407: mov    0x90(%rsp),%ebx
  0x0000000002e0140e: jmpq   0x0000000002e00da9
  0x0000000002e01413: mov    0x90(%rsp),%ebx
  0x0000000002e0141a: jmpq   0x0000000002e00da9
  0x0000000002e0141f: mov    0x90(%rsp),%ebx
  0x0000000002e01426: jmpq   0x0000000002e00da9
  0x0000000002e0142b: mov    0x90(%rsp),%ebx
  0x0000000002e01432: jmpq   0x0000000002e00da9
  0x0000000002e01437: mov    0x90(%rsp),%ebx
  0x0000000002e0143e: jmpq   0x0000000002e00da9
  0x0000000002e01443: nop
  0x0000000002e01444: nop
  0x0000000002e01445: mov    0x2a8(%r15),%rax
  0x0000000002e0144c: movabs $0x0,%r10
  0x0000000002e01456: mov    %r10,0x2a8(%r15)
  0x0000000002e0145d: movabs $0x0,%r10
  0x0000000002e01467: mov    %r10,0x2b0(%r15)
  0x0000000002e0146e: mov    %rax,%rbx
  0x0000000002e01471: lea    0xe8(%rsp),%rax
  0x0000000002e01479: mov    0x8(%rax),%rsi
  0x0000000002e0147d: mov    (%rsi),%rdi
  0x0000000002e01480: and    $0x7,%rdi
  0x0000000002e01484: cmp    $0x5,%rdi
  0x0000000002e01488: je     0x0000000002e014a5
  0x0000000002e0148e: mov    (%rax),%rdi
  0x0000000002e01491: test   %rdi,%rdi
  0x0000000002e01494: je     0x0000000002e014a5
  0x0000000002e0149a: lock cmpxchg %rdi,(%rsi)
  0x0000000002e0149f: jne    0x0000000002e014b5
  0x0000000002e014a5: mov    %rbx,%rax
  0x0000000002e014a8: add    $0x140,%rsp
  0x0000000002e014af: pop    %rbp
  0x0000000002e014b0: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002e014b5: lea    0xe8(%rsp),%rax
  0x0000000002e014bd: mov    %rax,(%rsp)
  0x0000000002e014c1: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002e014c6: jmp    0x0000000002e014a5
  0x0000000002e014c8: hlt    
  0x0000000002e014c9: hlt    
  0x0000000002e014ca: hlt    
  0x0000000002e014cb: hlt    
  0x0000000002e014cc: hlt    
  0x0000000002e014cd: hlt    
  0x0000000002e014ce: hlt    
  0x0000000002e014cf: hlt    
  0x0000000002e014d0: hlt    
  0x0000000002e014d1: hlt    
  0x0000000002e014d2: hlt    
  0x0000000002e014d3: hlt    
  0x0000000002e014d4: hlt    
  0x0000000002e014d5: hlt    
  0x0000000002e014d6: hlt    
  0x0000000002e014d7: hlt    
  0x0000000002e014d8: hlt    
  0x0000000002e014d9: hlt    
  0x0000000002e014da: hlt    
  0x0000000002e014db: hlt    
  0x0000000002e014dc: hlt    
  0x0000000002e014dd: hlt    
  0x0000000002e014de: hlt    
  0x0000000002e014df: hlt    
[Stub Code]
  0x0000000002e014e0: nop                       ;   {no_reloc}
  0x0000000002e014e1: nop
  0x0000000002e014e2: nop
  0x0000000002e014e3: nop
  0x0000000002e014e4: nop
  0x0000000002e014e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e014ef: jmpq   0x0000000002e014ef  ;   {runtime_call}
  0x0000000002e014f4: nop
  0x0000000002e014f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e014ff: jmpq   0x0000000002e014ff  ;   {runtime_call}
  0x0000000002e01504: nop
  0x0000000002e01505: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0150f: jmpq   0x0000000002e0150f  ;   {runtime_call}
  0x0000000002e01514: nop
  0x0000000002e01515: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0151f: jmpq   0x0000000002e0151f  ;   {runtime_call}
  0x0000000002e01524: nop
  0x0000000002e01525: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0152f: jmpq   0x0000000002e0152f  ;   {runtime_call}
  0x0000000002e01534: nop
  0x0000000002e01535: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0153f: jmpq   0x0000000002e0153f  ;   {runtime_call}
  0x0000000002e01544: nop
  0x0000000002e01545: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0154f: jmpq   0x0000000002e0154f  ;   {runtime_call}
  0x0000000002e01554: nop
  0x0000000002e01555: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0155f: jmpq   0x0000000002e0155f  ;   {runtime_call}
  0x0000000002e01564: nop
  0x0000000002e01565: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0156f: jmpq   0x0000000002e0156f  ;   {runtime_call}
  0x0000000002e01574: nop
  0x0000000002e01575: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0157f: jmpq   0x0000000002e0157f  ;   {runtime_call}
  0x0000000002e01584: nop
  0x0000000002e01585: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0158f: jmpq   0x0000000002e0158f  ;   {runtime_call}
  0x0000000002e01594: nop
  0x0000000002e01595: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0159f: jmpq   0x0000000002e0159f  ;   {runtime_call}
  0x0000000002e015a4: nop
  0x0000000002e015a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e015af: jmpq   0x0000000002e015af  ;   {runtime_call}
[Exception Handler]
  0x0000000002e015b4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002e015b9: mov    %rsp,-0x28(%rsp)
  0x0000000002e015be: sub    $0x80,%rsp
  0x0000000002e015c5: mov    %rax,0x78(%rsp)
  0x0000000002e015ca: mov    %rcx,0x70(%rsp)
  0x0000000002e015cf: mov    %rdx,0x68(%rsp)
  0x0000000002e015d4: mov    %rbx,0x60(%rsp)
  0x0000000002e015d9: mov    %rbp,0x50(%rsp)
  0x0000000002e015de: mov    %rsi,0x48(%rsp)
  0x0000000002e015e3: mov    %rdi,0x40(%rsp)
  0x0000000002e015e8: mov    %r8,0x38(%rsp)
  0x0000000002e015ed: mov    %r9,0x30(%rsp)
  0x0000000002e015f2: mov    %r10,0x28(%rsp)
  0x0000000002e015f7: mov    %r11,0x20(%rsp)
  0x0000000002e015fc: mov    %r12,0x18(%rsp)
  0x0000000002e01601: mov    %r13,0x10(%rsp)
  0x0000000002e01606: mov    %r14,0x8(%rsp)
  0x0000000002e0160b: mov    %r15,(%rsp)
  0x0000000002e0160f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002e01619: movabs $0x2e015b9,%rdx    ;   {internal_word}
  0x0000000002e01623: mov    %rsp,%r8
  0x0000000002e01626: and    $0xfffffffffffffff0,%rsp
  0x0000000002e0162a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002e0162f: hlt    
[Deopt Handler Code]
  0x0000000002e01630: movabs $0x2e01630,%r10    ;   {section_word}
  0x0000000002e0163a: push   %r10
  0x0000000002e0163c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e01641: hlt    
  0x0000000002e01642: hlt    
  0x0000000002e01643: hlt    
  0x0000000002e01644: hlt    
  0x0000000002e01645: hlt    
  0x0000000002e01646: hlt    
  0x0000000002e01647: hlt    
<nmethod compile_id='115' compiler='C1' level='3' entry='0x0000000002dfef80' size='16552' address='0x0000000002dfebd0' relocation_offset='288' insts_offset='944' stub_offset='10512' scopes_data_offset='11040' scopes_pcs_offset='12880' dependencies_offset='15808' handler_table_offset='15824' nul_chk_table_offset='16416' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='197' count='1094' backedge_count='326' iicount='1094' stamp='8.127'/>
<writer thread='19380'/>
<task_queued compile_id='128' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='172077' iicount='12' osr_bci='2' stamp='8.127' comment='tiered' hot_count='172077'/>
<writer thread='19128'/>
Decoding compiled method 0x0000000002dfc110:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bc757a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  # parm3:    rdi:rdi   = &apos;[C&apos;
  # parm4:    rsi       = int
  # parm5:    rcx       = int
  # parm6:    [sp+0x60]   = int  (sp of caller)
  0x0000000002dfc260: mov    %eax,-0x6000(%rsp)
  0x0000000002dfc267: push   %rbp
  0x0000000002dfc268: sub    $0x50,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1756)

  0x0000000002dfc26c: mov    %r8d,0x14(%rsp)
  0x0000000002dfc271: mov    %r9d,%r11d
  0x0000000002dfc274: mov    0x60(%rsp),%r10d
  0x0000000002dfc279: cmp    %r9d,%r10d
  0x0000000002dfc27c: jge    0x0000000002dfc675  ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x0000000002dfc282: test   %r10d,%r10d
  0x0000000002dfc285: jl     0x0000000002dfc6a1  ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x0000000002dfc28b: test   %ecx,%ecx
  0x0000000002dfc28d: je     0x0000000002dfc6cd  ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x0000000002dfc293: mov    %rdi,%r14
  0x0000000002dfc296: mov    0xc(%rdi),%ebx     ; implicit exception: dispatches to 0x0000000002dfc6f9
  0x0000000002dfc299: mov    %esi,%edi
  0x0000000002dfc29b: cmp    %ebx,%esi
  0x0000000002dfc29d: jae    0x0000000002dfc601  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x0000000002dfc2a3: mov    %r8d,%r9d
  0x0000000002dfc2a6: add    0x60(%rsp),%r9d    ;*iadd
                                                ; - java.lang.String::indexOf@50 (line 1769)

  0x0000000002dfc2ab: mov    %r11d,%esi
  0x0000000002dfc2ae: sub    %ecx,%esi
  0x0000000002dfc2b0: add    %r8d,%esi          ;*iadd
                                                ; - java.lang.String::indexOf@44 (line 1767)

  0x0000000002dfc2b3: cmp    %esi,%r9d
  0x0000000002dfc2b6: jg     0x0000000002dfc4b8  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x0000000002dfc2bc: movzwl 0x10(%r14,%rdi,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x0000000002dfc2c2: mov    0xc(%rdx),%r10d    ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ; implicit exception: dispatches to 0x0000000002dfc709
  0x0000000002dfc2c6: mov    %r10d,(%rsp)
  0x0000000002dfc2ca: mov    %ebx,0x60(%rsp)
  0x0000000002dfc2ce: mov    %esi,%r10d
  0x0000000002dfc2d1: inc    %r10d
  0x0000000002dfc2d4: mov    %r10d,0x4(%rsp)
  0x0000000002dfc2d9: mov    %esi,%ebx
  0x0000000002dfc2db: add    $0xfffffffe,%ebx
  0x0000000002dfc2de: movslq %edi,%r10
  0x0000000002dfc2e1: vmovq  %r10,%xmm0
  0x0000000002dfc2e6: mov    %edi,%r13d
  0x0000000002dfc2e9: inc    %r13d              ;*iadd
                                                ; - java.lang.String::indexOf@116 (line 1779)

  0x0000000002dfc2ec: mov    $0x80000000,%r11d
  0x0000000002dfc2f2: mov    0x4(%rsp),%r10d
  0x0000000002dfc2f7: cmp    %ebx,%r10d
  0x0000000002dfc2fa: cmovl  %r11d,%ebx
  0x0000000002dfc2fe: jmpq   0x0000000002dfc39a
  0x0000000002dfc303: mov    %eax,%r10d
  0x0000000002dfc306: inc    %r10d
  0x0000000002dfc309: mov    %eax,%r11d
  0x0000000002dfc30c: mov    %r10d,%eax
  0x0000000002dfc30f: jmp    0x0000000002dfc31b
  0x0000000002dfc311: mov    %eax,%r11d
  0x0000000002dfc314: add    $0x2,%r11d
  0x0000000002dfc318: add    $0x3,%eax
  0x0000000002dfc31b: mov    %eax,%r9d
  0x0000000002dfc31e: mov    %r11d,%eax
  0x0000000002dfc321: jmp    0x0000000002dfc338
  0x0000000002dfc323: mov    %eax,%r10d
  0x0000000002dfc326: inc    %r10d
  0x0000000002dfc329: mov    %eax,%r9d
  0x0000000002dfc32c: add    $0x2,%r9d
  0x0000000002dfc330: mov    %r10d,%eax
  0x0000000002dfc333: jmp    0x0000000002dfc338
  0x0000000002dfc335: add    $0x3,%eax          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dfc338: cmp    %esi,%eax
  0x0000000002dfc33a: jg     0x0000000002dfc38b  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000002dfc33c: mov    %eax,%r10d
  0x0000000002dfc33f: add    %ecx,%r10d         ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000002dfc342: cmp    %r10d,%r9d
  0x0000000002dfc345: jge    0x0000000002dfc376  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x0000000002dfc347: cmp    (%rsp),%r9d
  0x0000000002dfc34b: jae    0x0000000002dfc580
  0x0000000002dfc351: movzwl 0x10(%rdx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000002dfc357: cmp    0x60(%rsp),%r13d
  0x0000000002dfc35c: jae    0x0000000002dfc5b9
  0x0000000002dfc362: vmovq  %xmm0,%rbp
  0x0000000002dfc367: movzwl 0x12(%r14,%rbp,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000002dfc36d: cmp    %ebp,%r11d
  0x0000000002dfc370: je     0x0000000002dfc62d  ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x0000000002dfc376: cmp    %r10d,%r9d
  0x0000000002dfc379: jne    0x0000000002dfc38b  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x0000000002dfc37b: sub    0x14(%rsp),%eax    ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x0000000002dfc37f: add    $0x50,%rsp
  0x0000000002dfc383: pop    %rbp
  0x0000000002dfc384: test   %eax,-0x21fc38a(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002dfc38a: retq                      ; OopMap{rdx=Oop r14=Oop off=299}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x0000000002dfc38b: test   %eax,-0x21fc391(%rip)        # 0x0000000000c00000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x0000000002dfc391: cmp    %esi,%r9d
  0x0000000002dfc394: jg     0x0000000002dfc4b8  ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)

  0x0000000002dfc39a: cmp    (%rsp),%r9d
  0x0000000002dfc39e: jae    0x0000000002dfc4d8  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000002dfc3a4: movzwl 0x10(%rdx,%r9,2),%r11d
  0x0000000002dfc3aa: mov    %r9d,%r10d
  0x0000000002dfc3ad: inc    %r10d              ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dfc3b0: cmp    %r8d,%r11d
  0x0000000002dfc3b3: je     0x0000000002dfc49d  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x0000000002dfc3b9: add    $0x2,%r9d          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000002dfc3bd: cmp    %esi,%r10d
  0x0000000002dfc3c0: jg     0x0000000002dfc38b  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000002dfc3c2: cmp    (%rsp),%r10d
  0x0000000002dfc3c6: jae    0x0000000002dfc50d
  0x0000000002dfc3cc: cmp    (%rsp),%esi
  0x0000000002dfc3cf: jae    0x0000000002dfc50d
  0x0000000002dfc3d5: cmp    $0x7ffffffe,%esi
  0x0000000002dfc3db: jg     0x0000000002dfc541  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x0000000002dfc3e1: movzwl 0x10(%rdx,%r10,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000002dfc3e7: mov    %r10d,%eax
  0x0000000002dfc3ea: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dfc3ec: cmp    %r8d,%r11d
  0x0000000002dfc3ef: je     0x0000000002dfc4ad  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000002dfc3f5: cmp    %r9d,%eax
  0x0000000002dfc3f8: jge    0x0000000002dfc3ff  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000002dfc3fa: mov    %eax,%r10d
  0x0000000002dfc3fd: jmp    0x0000000002dfc3e1
  0x0000000002dfc3ff: cmp    %ebx,%eax
  0x0000000002dfc401: jge    0x0000000002dfc575
  0x0000000002dfc407: jmp    0x0000000002dfc413
  0x0000000002dfc409: nopl   0x0(%rax)
  0x0000000002dfc410: mov    %r9d,%eax          ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x0000000002dfc413: movzwl 0x10(%rdx,%rax,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000002dfc419: cmp    %r8d,%r10d
  0x0000000002dfc41c: je     0x0000000002dfc303  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000002dfc422: movslq %eax,%r9
  0x0000000002dfc425: movzwl 0x12(%rdx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000002dfc42b: cmp    %r8d,%r11d
  0x0000000002dfc42e: je     0x0000000002dfc323  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000002dfc434: movzwl 0x14(%rdx,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000002dfc43a: cmp    %r8d,%r10d
  0x0000000002dfc43d: je     0x0000000002dfc311  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000002dfc443: movzwl 0x16(%rdx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000002dfc449: mov    %eax,%r9d
  0x0000000002dfc44c: add    $0x4,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dfc450: cmp    %r8d,%r11d
  0x0000000002dfc453: je     0x0000000002dfc335  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000002dfc459: cmp    %ebx,%r9d
  0x0000000002dfc45c: jl     0x0000000002dfc410  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000002dfc45e: add    $0x3,%eax          ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dfc461: cmp    0x4(%rsp),%r9d
  0x0000000002dfc466: jge    0x0000000002dfc483  ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x0000000002dfc468: movzwl 0x10(%rdx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x0000000002dfc46e: mov    %r9d,%eax
  0x0000000002dfc471: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x0000000002dfc473: cmp    %r8d,%r11d
  0x0000000002dfc476: je     0x0000000002dfc4ca  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x0000000002dfc478: cmp    0x4(%rsp),%eax
  0x0000000002dfc47c: jge    0x0000000002dfc48c  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x0000000002dfc47e: mov    %eax,%r9d
  0x0000000002dfc481: jmp    0x0000000002dfc468
  0x0000000002dfc483: mov    %r9d,%r11d
  0x0000000002dfc486: mov    %eax,%r9d
  0x0000000002dfc489: mov    %r11d,%eax
  0x0000000002dfc48c: add    $0x2,%r9d          ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000002dfc490: cmp    %esi,%eax
  0x0000000002dfc492: jg     0x0000000002dfc38b
  0x0000000002dfc498: jmpq   0x0000000002dfc33c
  0x0000000002dfc49d: cmp    %esi,%r9d
  0x0000000002dfc4a0: jg     0x0000000002dfc4c2  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x0000000002dfc4a2: mov    %r9d,%eax
  0x0000000002dfc4a5: mov    %r10d,%r9d
  0x0000000002dfc4a8: jmpq   0x0000000002dfc33c
  0x0000000002dfc4ad: mov    %eax,%r9d
  0x0000000002dfc4b0: mov    %r10d,%eax
  0x0000000002dfc4b3: jmpq   0x0000000002dfc338  ;*iconst_m1
                                                ; - java.lang.String::indexOf@164 (line 1788)

  0x0000000002dfc4b8: mov    $0xffffffff,%eax
  0x0000000002dfc4bd: jmpq   0x0000000002dfc37f
  0x0000000002dfc4c2: mov    %r10d,%r9d
  0x0000000002dfc4c5: jmpq   0x0000000002dfc38b
  0x0000000002dfc4ca: mov    %eax,%r10d
  0x0000000002dfc4cd: mov    %r9d,%eax
  0x0000000002dfc4d0: mov    %r10d,%r9d
  0x0000000002dfc4d3: jmpq   0x0000000002dfc338
  0x0000000002dfc4d8: mov    %r8d,0x60(%rsp)
  0x0000000002dfc4dd: mov    %rdx,0x8(%rsp)
  0x0000000002dfc4e2: mov    %r9d,0x4(%rsp)
  0x0000000002dfc4e7: mov    0x14(%rsp),%r10d
  0x0000000002dfc4ec: mov    %r10d,0x10(%rsp)
  0x0000000002dfc4f1: mov    %r14,0x18(%rsp)
  0x0000000002dfc4f6: mov    %edi,0x14(%rsp)
  0x0000000002dfc4fa: mov    %ecx,0x20(%rsp)
  0x0000000002dfc4fe: mov    %esi,0x24(%rsp)
  0x0000000002dfc502: mov    $0xffffffe4,%edx
  0x0000000002dfc507: callq  0x0000000002cf57a0  ; OopMap{[8]=Oop [24]=Oop off=684}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x0000000002dfc50c: int3                      ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x0000000002dfc50d: mov    %rdx,%rbp
  0x0000000002dfc510: mov    %r8d,0x60(%rsp)
  0x0000000002dfc515: mov    %r10d,(%rsp)
  0x0000000002dfc519: mov    0x14(%rsp),%r11d
  0x0000000002dfc51e: mov    %r11d,0x4(%rsp)
  0x0000000002dfc523: mov    %r14,0x8(%rsp)
  0x0000000002dfc528: mov    %edi,0x10(%rsp)
  0x0000000002dfc52c: mov    %ecx,0x14(%rsp)
  0x0000000002dfc530: mov    %esi,0x18(%rsp)
  0x0000000002dfc534: mov    $0xffffff86,%edx
  0x0000000002dfc539: xchg   %ax,%ax
  0x0000000002dfc53b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [8]=Oop off=736}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x0000000002dfc540: int3   
  0x0000000002dfc541: mov    %rdx,%rbp
  0x0000000002dfc544: mov    %r8d,0x60(%rsp)
  0x0000000002dfc549: mov    %r10d,(%rsp)
  0x0000000002dfc54d: mov    0x14(%rsp),%r11d
  0x0000000002dfc552: mov    %r11d,0x4(%rsp)
  0x0000000002dfc557: mov    %r14,0x8(%rsp)
  0x0000000002dfc55c: mov    %edi,0x10(%rsp)
  0x0000000002dfc560: mov    %ecx,0x14(%rsp)
  0x0000000002dfc564: mov    %esi,0x18(%rsp)
  0x0000000002dfc568: mov    $0xffffff7e,%edx
  0x0000000002dfc56d: xchg   %ax,%ax
  0x0000000002dfc56f: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [8]=Oop off=788}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)
                                                ;   {runtime_call}
  0x0000000002dfc574: int3                      ;*aload_0
                                                ; - java.lang.String::indexOf@79 (line 1772)

  0x0000000002dfc575: mov    %eax,%r9d
  0x0000000002dfc578: mov    %r10d,%eax
  0x0000000002dfc57b: jmpq   0x0000000002dfc461
  0x0000000002dfc580: mov    %r8d,0x60(%rsp)
  0x0000000002dfc585: mov    %eax,(%rsp)
  0x0000000002dfc588: mov    %rdx,0x8(%rsp)
  0x0000000002dfc58d: mov    %r9d,0x10(%rsp)
  0x0000000002dfc592: mov    %r14,0x18(%rsp)
  0x0000000002dfc597: mov    %edi,0x20(%rsp)
  0x0000000002dfc59b: mov    %ecx,0x24(%rsp)
  0x0000000002dfc59f: mov    %esi,0x28(%rsp)
  0x0000000002dfc5a3: mov    %r10d,0x2c(%rsp)
  0x0000000002dfc5a8: mov    %r13d,0x30(%rsp)
  0x0000000002dfc5ad: mov    $0xffffffe4,%edx
  0x0000000002dfc5b2: nop
  0x0000000002dfc5b3: callq  0x0000000002cf57a0  ; OopMap{[8]=Oop [24]=Oop off=856}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x0000000002dfc5b8: int3                      ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x0000000002dfc5b9: mov    %rdx,%rbp
  0x0000000002dfc5bc: mov    %r8d,0x60(%rsp)
  0x0000000002dfc5c1: mov    %eax,(%rsp)
  0x0000000002dfc5c4: mov    %r9d,0x4(%rsp)
  0x0000000002dfc5c9: mov    0x14(%rsp),%r8d
  0x0000000002dfc5ce: mov    %r8d,0x8(%rsp)
  0x0000000002dfc5d3: mov    %edi,0xc(%rsp)
  0x0000000002dfc5d7: mov    %ecx,0x18(%rsp)
  0x0000000002dfc5db: mov    %esi,0x1c(%rsp)
  0x0000000002dfc5df: mov    %r10d,0x20(%rsp)
  0x0000000002dfc5e4: mov    %r11d,0x28(%rsp)
  0x0000000002dfc5e9: mov    %r14,0x30(%rsp)
  0x0000000002dfc5ee: mov    %r13d,0x2c(%rsp)
  0x0000000002dfc5f3: mov    $0xffffffe4,%edx
  0x0000000002dfc5f8: data16 xchg %ax,%ax
  0x0000000002dfc5fb: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [48]=Oop off=928}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x0000000002dfc600: int3                      ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x0000000002dfc601: mov    %rdx,%rbp
  0x0000000002dfc604: mov    %r8d,0x60(%rsp)
  0x0000000002dfc609: mov    %r9d,(%rsp)
  0x0000000002dfc60d: mov    %ecx,0x10(%rsp)
  0x0000000002dfc611: mov    %r10d,0x14(%rsp)
  0x0000000002dfc616: mov    %r14,0x18(%rsp)
  0x0000000002dfc61b: mov    %esi,0x20(%rsp)
  0x0000000002dfc61f: mov    $0xffffffe4,%edx
  0x0000000002dfc624: data16 xchg %ax,%ax
  0x0000000002dfc627: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [24]=Oop off=972}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000002dfc62c: int3                      ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x0000000002dfc62d: mov    %rdx,(%rsp)
  0x0000000002dfc631: mov    %r8d,0x60(%rsp)
  0x0000000002dfc636: mov    %eax,0x8(%rsp)
  0x0000000002dfc63a: mov    %r9d,0xc(%rsp)
  0x0000000002dfc63f: mov    0x14(%rsp),%r9d
  0x0000000002dfc644: mov    %r9d,0x10(%rsp)
  0x0000000002dfc649: mov    %r14,0x18(%rsp)
  0x0000000002dfc64e: mov    %edi,0x14(%rsp)
  0x0000000002dfc652: mov    %ecx,0x20(%rsp)
  0x0000000002dfc656: mov    %esi,0x24(%rsp)
  0x0000000002dfc65a: mov    %r10d,0x28(%rsp)
  0x0000000002dfc65f: mov    %r13d,0x2c(%rsp)
  0x0000000002dfc664: mov    %r11d,0x30(%rsp)
  0x0000000002dfc669: mov    $0xffffff65,%edx
  0x0000000002dfc66e: nop
  0x0000000002dfc66f: callq  0x0000000002cf57a0  ; OopMap{[0]=Oop [24]=Oop off=1044}
                                                ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x0000000002dfc674: int3                      ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x0000000002dfc675: mov    %rdx,%rbp
  0x0000000002dfc678: mov    %r8d,0x60(%rsp)
  0x0000000002dfc67d: mov    %rdi,0x8(%rsp)
  0x0000000002dfc682: mov    %esi,0x4(%rsp)
  0x0000000002dfc686: mov    %ecx,0x10(%rsp)
  0x0000000002dfc68a: mov    %r10d,0x18(%rsp)
  0x0000000002dfc68f: mov    %r9d,0x1c(%rsp)
  0x0000000002dfc694: mov    $0xffffff65,%edx
  0x0000000002dfc699: xchg   %ax,%ax
  0x0000000002dfc69b: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [8]=Oop off=1088}
                                                ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)
                                                ;   {runtime_call}
  0x0000000002dfc6a0: int3                      ;*if_icmplt
                                                ; - java.lang.String::indexOf@3 (line 1756)

  0x0000000002dfc6a1: mov    %rdx,%rbp
  0x0000000002dfc6a4: mov    %r8d,0x60(%rsp)
  0x0000000002dfc6a9: mov    %r9d,(%rsp)
  0x0000000002dfc6ad: mov    %rdi,0x8(%rsp)
  0x0000000002dfc6b2: mov    %esi,0x4(%rsp)
  0x0000000002dfc6b6: mov    %ecx,0x10(%rsp)
  0x0000000002dfc6ba: mov    %r10d,0x18(%rsp)
  0x0000000002dfc6bf: mov    $0xffffff65,%edx
  0x0000000002dfc6c4: data16 xchg %ax,%ax
  0x0000000002dfc6c7: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [8]=Oop off=1132}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)
                                                ;   {runtime_call}
  0x0000000002dfc6cc: int3                      ;*ifge
                                                ; - java.lang.String::indexOf@19 (line 1759)

  0x0000000002dfc6cd: mov    %rdx,%rbp
  0x0000000002dfc6d0: mov    %r8d,0x60(%rsp)
  0x0000000002dfc6d5: mov    %r9d,(%rsp)
  0x0000000002dfc6d9: mov    %rdi,0x8(%rsp)
  0x0000000002dfc6de: mov    %esi,0x4(%rsp)
  0x0000000002dfc6e2: mov    %r10d,0x14(%rsp)
  0x0000000002dfc6e7: mov    %ecx,0x18(%rsp)
  0x0000000002dfc6eb: mov    $0xffffff65,%edx
  0x0000000002dfc6f0: data16 xchg %ax,%ax
  0x0000000002dfc6f3: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [8]=Oop off=1176}
                                                ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)
                                                ;   {runtime_call}
  0x0000000002dfc6f8: int3                      ;*ifne
                                                ; - java.lang.String::indexOf@27 (line 1762)

  0x0000000002dfc6f9: mov    $0xfffffff6,%edx
  0x0000000002dfc6fe: mov    %esi,%ebp
  0x0000000002dfc700: data16 xchg %ax,%ax
  0x0000000002dfc703: callq  0x0000000002cf57a0  ; OopMap{off=1192}
                                                ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)
                                                ;   {runtime_call}
  0x0000000002dfc708: int3                      ;*caload
                                                ; - java.lang.String::indexOf@36 (line 1766)

  0x0000000002dfc709: mov    %rdx,%rbp
  0x0000000002dfc70c: mov    %r8d,0x60(%rsp)
  0x0000000002dfc711: mov    %r9d,(%rsp)
  0x0000000002dfc715: mov    0x14(%rsp),%r10d
  0x0000000002dfc71a: mov    %r10d,0x4(%rsp)
  0x0000000002dfc71f: mov    %r14,0x8(%rsp)
  0x0000000002dfc724: mov    %edi,0x10(%rsp)
  0x0000000002dfc728: mov    %ecx,0x14(%rsp)
  0x0000000002dfc72c: mov    %esi,0x18(%rsp)
  0x0000000002dfc730: mov    $0xffffff86,%edx
  0x0000000002dfc735: xchg   %ax,%ax
  0x0000000002dfc737: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop [8]=Oop off=1244}
                                                ;*aload_0
                                                ; - java.lang.String::indexOf@60 (line 1771)
                                                ;   {runtime_call}
  0x0000000002dfc73c: int3                      ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x0000000002dfc73d: hlt    
  0x0000000002dfc73e: hlt    
  0x0000000002dfc73f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dfc740: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dfc745: callq  0x0000000002dfc74a
  0x0000000002dfc74a: subq   $0x5,(%rsp)
  0x0000000002dfc74f: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dfc754: hlt    
  0x0000000002dfc755: hlt    
  0x0000000002dfc756: hlt    
  0x0000000002dfc757: hlt    
<nmethod compile_id='126' compiler='C2' level='4' entry='0x0000000002dfc260' size='3552' address='0x0000000002dfc110' relocation_offset='288' insts_offset='336' stub_offset='1584' scopes_data_offset='1616' scopes_pcs_offset='2272' dependencies_offset='3520' nul_chk_table_offset='3528' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='758' backedge_count='55356' iicount='758' stamp='8.139'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dfbad0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001bd86dc0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[B&apos;
  # parm1:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x0000000002dfbc40: mov    %eax,-0x6000(%rsp)
  0x0000000002dfbc47: push   %rbp
  0x0000000002dfbc48: sub    $0x60,%rsp
  0x0000000002dfbc4c: mov    %rdx,%r9
  0x0000000002dfbc4f: movabs $0x1bea9220,%rbx   ;   {metadata(method data for {method} {0x000000001bd86dc0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dfbc59: mov    0xdc(%rbx),%edx
  0x0000000002dfbc5f: add    $0x8,%edx
  0x0000000002dfbc62: mov    %edx,0xdc(%rbx)
  0x0000000002dfbc68: movabs $0x1bd86db8,%rbx   ;   {metadata({method} {0x000000001bd86dc0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dfbc72: and    $0x1ff8,%edx
  0x0000000002dfbc78: cmp    $0x0,%edx
  0x0000000002dfbc7b: je     0x0000000002dfbe38  ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3236)

  0x0000000002dfbc81: mov    %r8,%rbx
  0x0000000002dfbc84: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x0000000002dfbc8e: movslq %ebx,%rbx
  0x0000000002dfbc91: mov    %rbx,%rdi
  0x0000000002dfbc94: cmp    $0xffffff,%rbx
  0x0000000002dfbc9b: ja     0x0000000002dfbe4f
  0x0000000002dfbca1: movabs $0x17,%rsi
  0x0000000002dfbcab: lea    (%rsi,%rbx,1),%rsi
  0x0000000002dfbcaf: and    $0xfffffffffffffff8,%rsi
  0x0000000002dfbcb3: mov    0x60(%r15),%rax
  0x0000000002dfbcb7: lea    (%rax,%rsi,1),%rsi
  0x0000000002dfbcbb: cmp    0x70(%r15),%rsi
  0x0000000002dfbcbf: ja     0x0000000002dfbe4f
  0x0000000002dfbcc5: mov    %rsi,0x60(%r15)
  0x0000000002dfbcc9: sub    %rax,%rsi
  0x0000000002dfbccc: movq   $0x1,(%rax)
  0x0000000002dfbcd3: mov    %rdx,%rcx
  0x0000000002dfbcd6: shr    $0x3,%rcx
  0x0000000002dfbcda: mov    %ecx,0x8(%rax)
  0x0000000002dfbcdd: mov    %ebx,0xc(%rax)
  0x0000000002dfbce0: sub    $0x10,%rsi
  0x0000000002dfbce4: je     0x0000000002dfbcfb
  0x0000000002dfbcea: xor    %rbx,%rbx
  0x0000000002dfbced: shr    $0x3,%rsi
  0x0000000002dfbcf1: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002dfbcf6: dec    %rsi
  0x0000000002dfbcf9: jne    0x0000000002dfbcf1  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)

  0x0000000002dfbcfb: mov    0xc(%r9),%edx      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ; implicit exception: dispatches to 0x0000000002dfbe59
  0x0000000002dfbcff: movabs $0x1bea9220,%rdi   ;   {metadata(method data for {method} {0x000000001bd86dc0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dfbd09: addq   $0x1,0x108(%rdi)
  0x0000000002dfbd11: movabs $0x1be5bf60,%rdi   ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dfbd1b: mov    0xdc(%rdi),%esi
  0x0000000002dfbd21: add    $0x8,%esi
  0x0000000002dfbd24: mov    %esi,0xdc(%rdi)
  0x0000000002dfbd2a: movabs $0x1bd62b00,%rdi   ;   {metadata({method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dfbd34: and    $0x7ffff8,%esi
  0x0000000002dfbd3a: cmp    $0x0,%esi
  0x0000000002dfbd3d: je     0x0000000002dfbe5e
  0x0000000002dfbd43: cmp    %r8d,%edx
  0x0000000002dfbd46: movabs $0x1be5bf60,%rdi   ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dfbd50: movabs $0x108,%rsi
  0x0000000002dfbd5a: jg     0x0000000002dfbd6a
  0x0000000002dfbd60: movabs $0x118,%rsi
  0x0000000002dfbd6a: mov    (%rdi,%rsi,1),%rbx
  0x0000000002dfbd6e: lea    0x1(%rbx),%rbx
  0x0000000002dfbd72: mov    %rbx,(%rdi,%rsi,1)
  0x0000000002dfbd76: jg     0x0000000002dfbd95  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x0000000002dfbd7c: movabs $0x1be5bf60,%r8    ;   {metadata(method data for {method} {0x000000001bd62b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000002dfbd86: incl   0x128(%r8)
  0x0000000002dfbd8d: mov    %rdx,%rsi
  0x0000000002dfbd90: jmpq   0x0000000002dfbd98  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x0000000002dfbd95: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)

  0x0000000002dfbd98: movabs $0x1bea9220,%rdx   ;   {metadata(method data for {method} {0x000000001bd86dc0} &apos;copyOf&apos; &apos;([BI)[B&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000002dfbda2: addq   $0x1,0x118(%rdx)
  0x0000000002dfbdaa: mov    %r9,%rdx
  0x0000000002dfbdad: mov    $0x0,%r8d
  0x0000000002dfbdb3: mov    %rax,%r9
  0x0000000002dfbdb6: mov    $0x0,%edi
  0x0000000002dfbdbb: mov    %rax,0x50(%rsp)
  0x0000000002dfbdc0: lea    (%r8,%rsi,1),%rcx
  0x0000000002dfbdc4: cmp    0xc(%rdx),%ecx
  0x0000000002dfbdc7: ja     0x0000000002dfbe75
  0x0000000002dfbdcd: lea    (%rdi,%rsi,1),%rcx
  0x0000000002dfbdd1: cmp    0xc(%r9),%ecx
  0x0000000002dfbdd5: ja     0x0000000002dfbe75
  0x0000000002dfbddb: test   %esi,%esi
  0x0000000002dfbddd: jl     0x0000000002dfbe75
  0x0000000002dfbde3: je     0x0000000002dfbe27
  0x0000000002dfbde9: movslq %r8d,%r8
  0x0000000002dfbdec: movslq %edi,%rdi
  0x0000000002dfbdef: lea    0x10(%rdx,%r8,1),%rcx
  0x0000000002dfbdf4: lea    0x10(%r9,%rdi,1),%rdx
  0x0000000002dfbdf9: mov    %rsi,%r8
  0x0000000002dfbdfc: sub    $0x20,%rsp
  0x0000000002dfbe00: test   $0xf,%esp
  0x0000000002dfbe06: je     0x0000000002dfbe1e
  0x0000000002dfbe0c: sub    $0x8,%rsp
  0x0000000002dfbe10: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002dfbe15: add    $0x8,%rsp
  0x0000000002dfbe19: jmpq   0x0000000002dfbe23
  0x0000000002dfbe1e: callq  Stub::jbyte_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000002dfbe23: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)

  0x0000000002dfbe27: mov    0x50(%rsp),%rax
  0x0000000002dfbe2c: add    $0x60,%rsp
  0x0000000002dfbe30: pop    %rbp
  0x0000000002dfbe31: test   %eax,-0x21fbd37(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dfbe37: retq   
  0x0000000002dfbe38: mov    %rbx,0x8(%rsp)
  0x0000000002dfbe3d: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfbe45: callq  0x0000000002db1d60  ; OopMap{r9=Oop off=522}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3236)
                                                ;   {runtime_call}
  0x0000000002dfbe4a: jmpq   0x0000000002dfbc81
  0x0000000002dfbe4f: callq  0x0000000002dae700  ; OopMap{r9=Oop off=532}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3236)
                                                ;   {runtime_call}
  0x0000000002dfbe54: jmpq   0x0000000002dfbcfb
  0x0000000002dfbe59: callq  0x0000000002dad680  ; OopMap{r9=Oop rax=Oop off=542}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3237)
                                                ;   {runtime_call}
  0x0000000002dfbe5e: mov    %rdi,0x8(%rsp)
  0x0000000002dfbe63: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfbe6b: callq  0x0000000002db1d60  ; OopMap{r9=Oop rax=Oop off=560}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3238)
                                                ;   {runtime_call}
  0x0000000002dfbe70: jmpq   0x0000000002dfbd43
  0x0000000002dfbe75: nop
  0x0000000002dfbe76: nop
  0x0000000002dfbe77: callq  0x0000000002cf6620  ; OopMap{[80]=Oop off=572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3237)
                                                ;   {static_call}
  0x0000000002dfbe7c: jmp    0x0000000002dfbe27
  0x0000000002dfbe7e: nop
  0x0000000002dfbe7f: nop
  0x0000000002dfbe80: mov    0x2a8(%r15),%rax
  0x0000000002dfbe87: movabs $0x0,%r10
  0x0000000002dfbe91: mov    %r10,0x2a8(%r15)
  0x0000000002dfbe98: movabs $0x0,%r10
  0x0000000002dfbea2: mov    %r10,0x2b0(%r15)
  0x0000000002dfbea9: add    $0x60,%rsp
  0x0000000002dfbead: pop    %rbp
  0x0000000002dfbeae: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dfbeb3: hlt    
  0x0000000002dfbeb4: hlt    
  0x0000000002dfbeb5: hlt    
  0x0000000002dfbeb6: hlt    
  0x0000000002dfbeb7: hlt    
  0x0000000002dfbeb8: hlt    
  0x0000000002dfbeb9: hlt    
  0x0000000002dfbeba: hlt    
  0x0000000002dfbebb: hlt    
  0x0000000002dfbebc: hlt    
  0x0000000002dfbebd: hlt    
  0x0000000002dfbebe: hlt    
  0x0000000002dfbebf: hlt    
[Stub Code]
  0x0000000002dfbec0: nop                       ;   {no_reloc}
  0x0000000002dfbec1: nop
  0x0000000002dfbec2: nop
  0x0000000002dfbec3: nop
  0x0000000002dfbec4: nop
  0x0000000002dfbec5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dfbecf: jmpq   0x0000000002dfbecf  ;   {runtime_call}
[Exception Handler]
  0x0000000002dfbed4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dfbed9: mov    %rsp,-0x28(%rsp)
  0x0000000002dfbede: sub    $0x80,%rsp
  0x0000000002dfbee5: mov    %rax,0x78(%rsp)
  0x0000000002dfbeea: mov    %rcx,0x70(%rsp)
  0x0000000002dfbeef: mov    %rdx,0x68(%rsp)
  0x0000000002dfbef4: mov    %rbx,0x60(%rsp)
  0x0000000002dfbef9: mov    %rbp,0x50(%rsp)
  0x0000000002dfbefe: mov    %rsi,0x48(%rsp)
  0x0000000002dfbf03: mov    %rdi,0x40(%rsp)
  0x0000000002dfbf08: mov    %r8,0x38(%rsp)
  0x0000000002dfbf0d: mov    %r9,0x30(%rsp)
  0x0000000002dfbf12: mov    %r10,0x28(%rsp)
  0x0000000002dfbf17: mov    %r11,0x20(%rsp)
  0x0000000002dfbf1c: mov    %r12,0x18(%rsp)
  0x0000000002dfbf21: mov    %r13,0x10(%rsp)
  0x0000000002dfbf26: mov    %r14,0x8(%rsp)
  0x0000000002dfbf2b: mov    %r15,(%rsp)
  0x0000000002dfbf2f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dfbf39: movabs $0x2dfbed9,%rdx    ;   {internal_word}
  0x0000000002dfbf43: mov    %rsp,%r8
  0x0000000002dfbf46: and    $0xfffffffffffffff0,%rsp
  0x0000000002dfbf4a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dfbf4f: hlt    
[Deopt Handler Code]
  0x0000000002dfbf50: movabs $0x2dfbf50,%r10    ;   {section_word}
  0x0000000002dfbf5a: push   %r10
  0x0000000002dfbf5c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dfbf61: hlt    
  0x0000000002dfbf62: hlt    
  0x0000000002dfbf63: hlt    
  0x0000000002dfbf64: hlt    
  0x0000000002dfbf65: hlt    
  0x0000000002dfbf66: hlt    
  0x0000000002dfbf67: hlt    
<nmethod compile_id='120' compiler='C1' level='3' entry='0x0000000002dfbc40' size='1576' address='0x0000000002dfbad0' relocation_offset='288' insts_offset='368' stub_offset='1008' scopes_data_offset='1192' scopes_pcs_offset='1328' dependencies_offset='1552' nul_chk_table_offset='1560' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='2707' iicount='2707' stamp='8.145'/>
<make_not_entrant thread='17312' zombie='1' compile_id='53' compiler='C1' level='2' stamp='8.145'/>
<make_not_entrant thread='17312' zombie='1' compile_id='54' compiler='C1' level='3' stamp='8.145'/>
Decoding compiled method 0x0000000002dfd510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rdx:rdx   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    r8:r8     = &apos;[I&apos;
  # parm1:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x0000000002dfd6e0: mov    0x8(%rdx),%r10d
  0x0000000002dfd6e4: shl    $0x3,%r10
  0x0000000002dfd6e8: cmp    %rax,%r10
  0x0000000002dfd6eb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dfd6f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dfd6fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dfd700: mov    %eax,-0x6000(%rsp)
  0x0000000002dfd707: push   %rbp
  0x0000000002dfd708: sub    $0xa0,%rsp
  0x0000000002dfd70f: lea    0x88(%rsp),%rsi
  0x0000000002dfd717: mov    %rdx,0x8(%rsi)
  0x0000000002dfd71b: mov    (%rdx),%rax
  0x0000000002dfd71e: mov    %rax,%rdi
  0x0000000002dfd721: and    $0x7,%rdi
  0x0000000002dfd725: cmp    $0x5,%rdi
  0x0000000002dfd729: jne    0x0000000002dfd7b0
  0x0000000002dfd72f: mov    0x8(%rdx),%edi
  0x0000000002dfd732: shl    $0x3,%rdi
  0x0000000002dfd736: mov    0xa8(%rdi),%rdi
  0x0000000002dfd73d: or     %r15,%rdi
  0x0000000002dfd740: xor    %rax,%rdi
  0x0000000002dfd743: and    $0xffffffffffffff87,%rdi
  0x0000000002dfd747: je     0x0000000002dfd7d8
  0x0000000002dfd74d: test   $0x7,%rdi
  0x0000000002dfd754: jne    0x0000000002dfd79d
  0x0000000002dfd756: test   $0x300,%rdi
  0x0000000002dfd75d: jne    0x0000000002dfd77c
  0x0000000002dfd75f: and    $0x37f,%rax
  0x0000000002dfd766: mov    %rax,%rdi
  0x0000000002dfd769: or     %r15,%rdi
  0x0000000002dfd76c: lock cmpxchg %rdi,(%rdx)
  0x0000000002dfd771: jne    0x0000000002dfdcd6
  0x0000000002dfd777: jmpq   0x0000000002dfd7d8
  0x0000000002dfd77c: mov    0x8(%rdx),%edi
  0x0000000002dfd77f: shl    $0x3,%rdi
  0x0000000002dfd783: mov    0xa8(%rdi),%rdi
  0x0000000002dfd78a: or     %r15,%rdi
  0x0000000002dfd78d: lock cmpxchg %rdi,(%rdx)
  0x0000000002dfd792: jne    0x0000000002dfdcd6
  0x0000000002dfd798: jmpq   0x0000000002dfd7d8
  0x0000000002dfd79d: mov    0x8(%rdx),%edi
  0x0000000002dfd7a0: shl    $0x3,%rdi
  0x0000000002dfd7a4: mov    0xa8(%rdi),%rdi
  0x0000000002dfd7ab: lock cmpxchg %rdi,(%rdx)
  0x0000000002dfd7b0: mov    (%rdx),%rax
  0x0000000002dfd7b3: or     $0x1,%rax
  0x0000000002dfd7b7: mov    %rax,(%rsi)
  0x0000000002dfd7ba: lock cmpxchg %rsi,(%rdx)
  0x0000000002dfd7bf: je     0x0000000002dfd7d8
  0x0000000002dfd7c5: sub    %rsp,%rax
  0x0000000002dfd7c8: and    $0xfffffffffffff007,%rax
  0x0000000002dfd7cf: mov    %rax,(%rsi)
  0x0000000002dfd7d2: jne    0x0000000002dfdcd6
  0x0000000002dfd7d8: movabs $0x1bf0dac0,%rax   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfd7e2: mov    0xdc(%rax),%esi
  0x0000000002dfd7e8: add    $0x8,%esi
  0x0000000002dfd7eb: mov    %esi,0xdc(%rax)
  0x0000000002dfd7f1: movabs $0x1be58c78,%rax   ;   {metadata({method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfd7fb: and    $0x1ff8,%esi
  0x0000000002dfd801: cmp    $0x0,%esi
  0x0000000002dfd804: je     0x0000000002dfdce9  ;*aload_0
                                                ; - sun.misc.URLClassPath::getNextLoader@0 (line 442)

  0x0000000002dfd80a: movsbl 0xc(%rdx),%eax     ;*getfield closed
                                                ; - sun.misc.URLClassPath::getNextLoader@1 (line 442)

  0x0000000002dfd80e: cmp    $0x0,%eax
  0x0000000002dfd811: movabs $0x1bf0dac0,%rax   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfd81b: movabs $0x108,%rsi
  0x0000000002dfd825: je     0x0000000002dfd835
  0x0000000002dfd82b: movabs $0x118,%rsi
  0x0000000002dfd835: mov    (%rax,%rsi,1),%rdi
  0x0000000002dfd839: lea    0x1(%rdi),%rdi
  0x0000000002dfd83d: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dfd841: jne    0x0000000002dfdc05  ;*ifeq
                                                ; - sun.misc.URLClassPath::getNextLoader@4 (line 442)

  0x0000000002dfd847: cmp    $0x0,%r8
  0x0000000002dfd84b: movabs $0x1bf0dac0,%rax   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfd855: movabs $0x128,%rsi
  0x0000000002dfd85f: je     0x0000000002dfd86f
  0x0000000002dfd865: movabs $0x138,%rsi
  0x0000000002dfd86f: mov    (%rax,%rsi,1),%rdi
  0x0000000002dfd873: lea    0x1(%rdi),%rdi
  0x0000000002dfd877: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dfd87b: je     0x0000000002dfdb9c  ;*ifnull
                                                ; - sun.misc.URLClassPath::getNextLoader@10 (line 445)

  0x0000000002dfd881: mov    0xc(%r8),%eax      ;*arraylength
                                                ; - sun.misc.URLClassPath::getNextLoader@15 (line 446)
                                                ; implicit exception: dispatches to 0x0000000002dfdd00
  0x0000000002dfd885: cmp    %eax,%r9d
  0x0000000002dfd888: movabs $0x1bf0dac0,%rax   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfd892: movabs $0x148,%rsi
  0x0000000002dfd89c: jge    0x0000000002dfd8ac
  0x0000000002dfd8a2: movabs $0x158,%rsi
  0x0000000002dfd8ac: mov    (%rax,%rsi,1),%rdi
  0x0000000002dfd8b0: lea    0x1(%rdi),%rdi
  0x0000000002dfd8b4: mov    %rdi,(%rax,%rsi,1)
  0x0000000002dfd8b8: jge    0x0000000002dfdb4f  ;*if_icmpge
                                                ; - sun.misc.URLClassPath::getNextLoader@16 (line 446)

  0x0000000002dfd8be: mov    0x18(%rdx),%esi
  0x0000000002dfd8c1: shl    $0x3,%rsi          ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getNextLoader@20 (line 447)

  0x0000000002dfd8c5: movslq %r9d,%rax
  0x0000000002dfd8c8: cmp    0xc(%r8),%r9d
  0x0000000002dfd8cc: jae    0x0000000002dfdd05
  0x0000000002dfd8d2: mov    0x10(%r8,%rax,4),%edi  ;*iaload
                                                ; - sun.misc.URLClassPath::getNextLoader@25 (line 447)

  0x0000000002dfd8d7: cmp    (%rsi),%rax        ;*invokevirtual get
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ; implicit exception: dispatches to 0x0000000002dfdd0e
  0x0000000002dfd8da: mov    %rsi,%rax
  0x0000000002dfd8dd: movabs $0x1bf0dac0,%rdx   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfd8e7: movabs $0x7c0017908,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x0000000002dfd8f1: mov    %r10,0x170(%rdx)
  0x0000000002dfd8f8: addq   $0x1,0x178(%rdx)
  0x0000000002dfd900: movabs $0x1bf0e410,%rax   ;   {metadata(method data for {method} {0x000000001bd3da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfd90a: mov    0xdc(%rax),%edx
  0x0000000002dfd910: add    $0x8,%edx
  0x0000000002dfd913: mov    %edx,0xdc(%rax)
  0x0000000002dfd919: movabs $0x1bd3da10,%rax   ;   {metadata({method} {0x000000001bd3da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfd923: and    $0x7ffff8,%edx
  0x0000000002dfd929: cmp    $0x0,%edx
  0x0000000002dfd92c: je     0x0000000002dfdd13
  0x0000000002dfd932: mov    %rsi,%rax
  0x0000000002dfd935: movabs $0x1bf0e410,%rdx   ;   {metadata(method data for {method} {0x000000001bd3da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfd93f: addq   $0x1,0x108(%rdx)
  0x0000000002dfd947: movabs $0x1bf0e5a0,%rax   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfd951: mov    0xdc(%rax),%edx
  0x0000000002dfd957: add    $0x8,%edx
  0x0000000002dfd95a: mov    %edx,0xdc(%rax)
  0x0000000002dfd960: movabs $0x1bd3e2f0,%rax   ;   {metadata({method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfd96a: and    $0x7ffff8,%edx
  0x0000000002dfd970: cmp    $0x0,%edx
  0x0000000002dfd973: je     0x0000000002dfdd2a
  0x0000000002dfd979: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::rangeCheck@2 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x0000000002dfd97c: cmp    %eax,%edi
  0x0000000002dfd97e: movabs $0x1bf0e5a0,%rax   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfd988: movabs $0x108,%rdx
  0x0000000002dfd992: jl     0x0000000002dfd9a2
  0x0000000002dfd998: movabs $0x118,%rdx
  0x0000000002dfd9a2: mov    (%rax,%rdx,1),%rbx
  0x0000000002dfd9a6: lea    0x1(%rbx),%rbx
  0x0000000002dfd9aa: mov    %rbx,(%rax,%rdx,1)
  0x0000000002dfd9ae: jge    0x0000000002dfdc52  ;*if_icmplt
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x0000000002dfd9b4: mov    %rsi,%rax
  0x0000000002dfd9b7: movabs $0x1bf0e410,%rdx   ;   {metadata(method data for {method} {0x000000001bd3da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfd9c1: addq   $0x1,0x128(%rdx)
  0x0000000002dfd9c9: movabs $0x1bf0e708,%rax   ;   {metadata(method data for {method} {0x000000001bd3d978} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfd9d3: mov    0xdc(%rax),%edx
  0x0000000002dfd9d9: add    $0x8,%edx
  0x0000000002dfd9dc: mov    %edx,0xdc(%rax)
  0x0000000002dfd9e2: movabs $0x1bd3d970,%rax   ;   {metadata({method} {0x000000001bd3d978} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfd9ec: and    $0x7ffff8,%edx
  0x0000000002dfd9f2: cmp    $0x0,%edx
  0x0000000002dfd9f5: je     0x0000000002dfdd41
  0x0000000002dfd9fb: mov    0x14(%rsi),%eax
  0x0000000002dfd9fe: shl    $0x3,%rax          ;*getfield elementData
                                                ; - java.util.ArrayList::elementData@1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x0000000002dfda02: movslq %edi,%rdx
  0x0000000002dfda05: cmp    0xc(%rax),%edi     ; implicit exception: dispatches to 0x0000000002dfdd58
  0x0000000002dfda08: jae    0x0000000002dfdd62
  0x0000000002dfda0e: mov    0x10(%rax,%rdx,4),%eax
  0x0000000002dfda12: shl    $0x3,%rax          ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x0000000002dfda16: cmp    $0x0,%rax
  0x0000000002dfda1a: jne    0x0000000002dfda35
  0x0000000002dfda1c: movabs $0x1bf0dac0,%rdx   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfda26: orl    $0x100,0x190(%rdx)
  0x0000000002dfda30: jmpq   0x0000000002dfdaf6
  0x0000000002dfda35: movabs $0x7c003e0a0,%rsi  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x0000000002dfda3f: mov    0x8(%rax),%edx
  0x0000000002dfda42: shl    $0x3,%rdx
  0x0000000002dfda46: cmp    0x30(%rdx),%rsi
  0x0000000002dfda4a: jne    0x0000000002dfdada
  0x0000000002dfda50: movabs $0x1bf0dac0,%rdx   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfda5a: mov    0x8(%rax),%esi
  0x0000000002dfda5d: shl    $0x3,%rsi
  0x0000000002dfda61: cmp    0x1a0(%rdx),%rsi
  0x0000000002dfda68: jne    0x0000000002dfda77
  0x0000000002dfda6a: addq   $0x1,0x1a8(%rdx)
  0x0000000002dfda72: jmpq   0x0000000002dfdaf6
  0x0000000002dfda77: cmp    0x1b0(%rdx),%rsi
  0x0000000002dfda7e: jne    0x0000000002dfda8d
  0x0000000002dfda80: addq   $0x1,0x1b8(%rdx)
  0x0000000002dfda88: jmpq   0x0000000002dfdaf6
  0x0000000002dfda8d: cmpq   $0x0,0x1a0(%rdx)
  0x0000000002dfda98: jne    0x0000000002dfdab1
  0x0000000002dfda9a: mov    %rsi,0x1a0(%rdx)
  0x0000000002dfdaa1: movq   $0x1,0x1a8(%rdx)
  0x0000000002dfdaac: jmpq   0x0000000002dfdaf6
  0x0000000002dfdab1: cmpq   $0x0,0x1b0(%rdx)
  0x0000000002dfdabc: jne    0x0000000002dfdad5
  0x0000000002dfdabe: mov    %rsi,0x1b0(%rdx)
  0x0000000002dfdac5: movq   $0x1,0x1b8(%rdx)
  0x0000000002dfdad0: jmpq   0x0000000002dfdaf6
  0x0000000002dfdad5: jmpq   0x0000000002dfdaf6
  0x0000000002dfdada: movabs $0x1bf0dac0,%rdx   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfdae4: subq   $0x1,0x198(%rdx)
  0x0000000002dfdaec: jmpq   0x0000000002dfdd6b
  0x0000000002dfdaf1: jmpq   0x0000000002dfdaf6
  0x0000000002dfdaf6: mov    %rax,%r8           ;*checkcast
                                                ; - sun.misc.URLClassPath::getNextLoader@29 (line 447)

  0x0000000002dfdaf9: movabs $0x1bf0dac0,%rax   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfdb03: incl   0x1c8(%rax)        ;*ifeq
                                                ; - sun.misc.URLClassPath::getNextLoader@36 (line 448)

  0x0000000002dfdb09: lea    0x88(%rsp),%rax
  0x0000000002dfdb11: mov    0x8(%rax),%rsi
  0x0000000002dfdb15: mov    (%rsi),%rdx
  0x0000000002dfdb18: and    $0x7,%rdx
  0x0000000002dfdb1c: cmp    $0x5,%rdx
  0x0000000002dfdb20: je     0x0000000002dfdb3d
  0x0000000002dfdb26: mov    (%rax),%rdx
  0x0000000002dfdb29: test   %rdx,%rdx
  0x0000000002dfdb2c: je     0x0000000002dfdb3d
  0x0000000002dfdb32: lock cmpxchg %rdx,(%rsi)
  0x0000000002dfdb37: jne    0x0000000002dfdd74
  0x0000000002dfdb3d: mov    %r8,%rax
  0x0000000002dfdb40: add    $0xa0,%rsp
  0x0000000002dfdb47: pop    %rbp
  0x0000000002dfdb48: test   %eax,-0x21fda4e(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dfdb4e: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getNextLoader@79 (line 452)

  0x0000000002dfdb4f: lea    0x88(%rsp),%rax
  0x0000000002dfdb57: mov    0x8(%rax),%rdx
  0x0000000002dfdb5b: mov    (%rdx),%r8
  0x0000000002dfdb5e: and    $0x7,%r8
  0x0000000002dfdb62: cmp    $0x5,%r8
  0x0000000002dfdb66: je     0x0000000002dfdb83
  0x0000000002dfdb6c: mov    (%rax),%r8
  0x0000000002dfdb6f: test   %r8,%r8
  0x0000000002dfdb72: je     0x0000000002dfdb83
  0x0000000002dfdb78: lock cmpxchg %r8,(%rdx)
  0x0000000002dfdb7d: jne    0x0000000002dfdd8a
  0x0000000002dfdb83: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002dfdb8d: add    $0xa0,%rsp
  0x0000000002dfdb94: pop    %rbp
  0x0000000002dfdb95: test   %eax,-0x21fda9b(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dfdb9b: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getNextLoader@81 (line 454)

  0x0000000002dfdb9c: mov    %rdx,%r8
  0x0000000002dfdb9f: movabs $0x1bf0dac0,%rsi   ;   {metadata(method data for {method} {0x000000001be58c80} &apos;getNextLoader&apos; &apos;([II)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x0000000002dfdba9: addq   $0x1,0x348(%rsi)
  0x0000000002dfdbb1: mov    %r9,%r8            ;*invokespecial getLoader
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 457)

  0x0000000002dfdbb4: nop
  0x0000000002dfdbb5: nop
  0x0000000002dfdbb6: nop
  0x0000000002dfdbb7: callq  0x0000000002cf61a0  ; OopMap{[144]=Oop off=1244}
                                                ;*invokespecial getLoader
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 457)
                                                ;   {optimized virtual_call}
  0x0000000002dfdbbc: mov    %rax,%rdx          ;*invokespecial getLoader
                                                ; - sun.misc.URLClassPath::getNextLoader@84 (line 457)

  0x0000000002dfdbbf: lea    0x88(%rsp),%rax
  0x0000000002dfdbc7: mov    0x8(%rax),%rsi
  0x0000000002dfdbcb: mov    (%rsi),%r8
  0x0000000002dfdbce: and    $0x7,%r8
  0x0000000002dfdbd2: cmp    $0x5,%r8
  0x0000000002dfdbd6: je     0x0000000002dfdbf3
  0x0000000002dfdbdc: mov    (%rax),%r8
  0x0000000002dfdbdf: test   %r8,%r8
  0x0000000002dfdbe2: je     0x0000000002dfdbf3
  0x0000000002dfdbe8: lock cmpxchg %r8,(%rsi)
  0x0000000002dfdbed: jne    0x0000000002dfdda0
  0x0000000002dfdbf3: mov    %rdx,%rax
  0x0000000002dfdbf6: add    $0xa0,%rsp
  0x0000000002dfdbfd: pop    %rbp
  0x0000000002dfdbfe: test   %eax,-0x21fdb04(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dfdc04: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getNextLoader@87 (line 457)

  0x0000000002dfdc05: lea    0x88(%rsp),%rax
  0x0000000002dfdc0d: mov    0x8(%rax),%r8
  0x0000000002dfdc11: mov    (%r8),%rdx
  0x0000000002dfdc14: and    $0x7,%rdx
  0x0000000002dfdc18: cmp    $0x5,%rdx
  0x0000000002dfdc1c: je     0x0000000002dfdc39
  0x0000000002dfdc22: mov    (%rax),%rdx
  0x0000000002dfdc25: test   %rdx,%rdx
  0x0000000002dfdc28: je     0x0000000002dfdc39
  0x0000000002dfdc2e: lock cmpxchg %rdx,(%r8)
  0x0000000002dfdc33: jne    0x0000000002dfddb6
  0x0000000002dfdc39: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000002dfdc43: add    $0xa0,%rsp
  0x0000000002dfdc4a: pop    %rbp
  0x0000000002dfdc4b: test   %eax,-0x21fdb51(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dfdc51: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getNextLoader@8 (line 443)

  0x0000000002dfdc52: mov    %r9d,0x78(%rsp)
  0x0000000002dfdc57: mov    %r8,0x70(%rsp)
  0x0000000002dfdc5c: nopl   0x0(%rax)
  0x0000000002dfdc60: jmpq   0x0000000002dfdddb  ;   {no_reloc}
  0x0000000002dfdc65: add    %al,(%rax)
  0x0000000002dfdc67: add    %al,(%rax)
  0x0000000002dfdc69: add    %ch,%cl
  0x0000000002dfdc6b: jbe    0x0000000002dfdc6e
  0x0000000002dfdc6d: add    %al,(%rax)         ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x0000000002dfdc6f: mov    %rsi,%rdx
  0x0000000002dfdc72: movabs $0x1bf0e5a0,%rbx   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfdc7c: addq   $0x1,0x128(%rbx)
  0x0000000002dfdc84: mov    %rdi,%r8
  0x0000000002dfdc87: mov    %rsi,%rdx          ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x0000000002dfdc8a: mov    %rsi,0x80(%rsp)
  0x0000000002dfdc92: mov    %edi,0x7c(%rsp)
  0x0000000002dfdc96: mov    %rax,0x68(%rsp)
  0x0000000002dfdc9b: nop
  0x0000000002dfdc9c: nop
  0x0000000002dfdc9d: nop
  0x0000000002dfdc9e: nop
  0x0000000002dfdc9f: callq  0x0000000002cf61a0  ; OopMap{[128]=Oop [112]=Oop [104]=Oop [144]=Oop off=1476}
                                                ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {optimized virtual_call}
  0x0000000002dfdca4: mov    0x68(%rsp),%r8
  0x0000000002dfdca9: movabs $0x1bf0e5a0,%rdx   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002dfdcb3: addq   $0x1,0x138(%rdx)
  0x0000000002dfdcbb: mov    %rax,%r8
  0x0000000002dfdcbe: mov    0x68(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)

  0x0000000002dfdcc3: nop
  0x0000000002dfdcc4: nop
  0x0000000002dfdcc5: nop
  0x0000000002dfdcc6: nop
  0x0000000002dfdcc7: callq  0x0000000002cf61a0  ; OopMap{[128]=Oop [112]=Oop [104]=Oop [144]=Oop off=1516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {optimized virtual_call}
  0x0000000002dfdccc: mov    0x68(%rsp),%rax
  0x0000000002dfdcd1: jmpq   0x0000000002dfde1d
  0x0000000002dfdcd6: mov    %rdx,0x8(%rsp)
  0x0000000002dfdcdb: mov    %rsi,(%rsp)
  0x0000000002dfdcdf: callq  0x0000000002db0060  ; OopMap{rdx=Oop r8=Oop [144]=Oop off=1540}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getNextLoader@-1 (line 442)
                                                ;   {runtime_call}
  0x0000000002dfdce4: jmpq   0x0000000002dfd7d8
  0x0000000002dfdce9: mov    %rax,0x8(%rsp)
  0x0000000002dfdcee: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfdcf6: callq  0x0000000002db1d60  ; OopMap{rdx=Oop r8=Oop [144]=Oop off=1563}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getNextLoader@-1 (line 442)
                                                ;   {runtime_call}
  0x0000000002dfdcfb: jmpq   0x0000000002dfd80a
  0x0000000002dfdd00: callq  0x0000000002dad680  ; OopMap{rdx=Oop r8=Oop [144]=Oop off=1573}
                                                ;*arraylength
                                                ; - sun.misc.URLClassPath::getNextLoader@15 (line 446)
                                                ;   {runtime_call}
  0x0000000002dfdd05: mov    %r9,(%rsp)
  0x0000000002dfdd09: callq  0x0000000002dac940  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1582}
                                                ;*iaload
                                                ; - sun.misc.URLClassPath::getNextLoader@25 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdd0e: callq  0x0000000002dad680  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1587}
                                                ;*invokevirtual get
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdd13: mov    %rax,0x8(%rsp)
  0x0000000002dfdd18: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfdd20: callq  0x0000000002db1d60  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1605}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdd25: jmpq   0x0000000002dfd932
  0x0000000002dfdd2a: mov    %rax,0x8(%rsp)
  0x0000000002dfdd2f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfdd37: callq  0x0000000002db1d60  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1628}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdd3c: jmpq   0x0000000002dfd979
  0x0000000002dfdd41: mov    %rax,0x8(%rsp)
  0x0000000002dfdd46: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfdd4e: callq  0x0000000002db1d60  ; OopMap{r8=Oop rsi=Oop [144]=Oop off=1651}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdd53: jmpq   0x0000000002dfd9fb
  0x0000000002dfdd58: callq  0x0000000002dad680  ; OopMap{r8=Oop rax=Oop [144]=Oop off=1661}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdd5d: callq  0x0000000002dad680  ; OopMap{r8=Oop rax=Oop [144]=Oop off=1666}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdd62: mov    %rdi,(%rsp)
  0x0000000002dfdd66: callq  0x0000000002dac940  ; OopMap{r8=Oop rax=Oop [144]=Oop off=1675}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdd6b: mov    %rax,(%rsp)
  0x0000000002dfdd6f: callq  0x0000000002daf880  ; OopMap{[144]=Oop off=1684}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getNextLoader@29 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdd74: lea    0x88(%rsp),%rax
  0x0000000002dfdd7c: mov    %rax,(%rsp)
  0x0000000002dfdd80: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dfdd85: jmpq   0x0000000002dfdb3d
  0x0000000002dfdd8a: lea    0x88(%rsp),%rax
  0x0000000002dfdd92: mov    %rax,(%rsp)
  0x0000000002dfdd96: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dfdd9b: jmpq   0x0000000002dfdb83
  0x0000000002dfdda0: lea    0x88(%rsp),%rax
  0x0000000002dfdda8: mov    %rax,(%rsp)
  0x0000000002dfddac: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dfddb1: jmpq   0x0000000002dfdbf3
  0x0000000002dfddb6: lea    0x88(%rsp),%rax
  0x0000000002dfddbe: mov    %rax,(%rsp)
  0x0000000002dfddc2: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dfddc7: jmpq   0x0000000002dfdc39
  0x0000000002dfddcc: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002dfddd6: mov    $0xa050f00,%eax
  0x0000000002dfdddb: callq  0x0000000002db0ca0  ; OopMap{[112]=Oop rsi=Oop [144]=Oop off=1792}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdde0: jmpq   0x0000000002dfdc60
  0x0000000002dfdde5: mov    %rdx,%rdx
  0x0000000002dfdde8: callq  0x0000000002dadb20  ; OopMap{[112]=Oop rsi=Oop [144]=Oop off=1805}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getNextLoader@26 (line 447)
                                                ;   {runtime_call}
  0x0000000002dfdded: jmpq   0x0000000002dfdc6f
  0x0000000002dfddf2: nop
  0x0000000002dfddf3: nop
  0x0000000002dfddf4: mov    0x2a8(%r15),%rax
  0x0000000002dfddfb: movabs $0x0,%r10
  0x0000000002dfde05: mov    %r10,0x2a8(%r15)
  0x0000000002dfde0c: movabs $0x0,%r10
  0x0000000002dfde16: mov    %r10,0x2b0(%r15)
  0x0000000002dfde1d: mov    %rax,%rbx
  0x0000000002dfde20: lea    0x88(%rsp),%rax
  0x0000000002dfde28: mov    0x8(%rax),%rsi
  0x0000000002dfde2c: mov    (%rsi),%rdi
  0x0000000002dfde2f: and    $0x7,%rdi
  0x0000000002dfde33: cmp    $0x5,%rdi
  0x0000000002dfde37: je     0x0000000002dfde54
  0x0000000002dfde3d: mov    (%rax),%rdi
  0x0000000002dfde40: test   %rdi,%rdi
  0x0000000002dfde43: je     0x0000000002dfde54
  0x0000000002dfde49: lock cmpxchg %rdi,(%rsi)
  0x0000000002dfde4e: jne    0x0000000002dfde64
  0x0000000002dfde54: mov    %rbx,%rax
  0x0000000002dfde57: add    $0xa0,%rsp
  0x0000000002dfde5e: pop    %rbp
  0x0000000002dfde5f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dfde64: lea    0x88(%rsp),%rax
  0x0000000002dfde6c: mov    %rax,(%rsp)
  0x0000000002dfde70: callq  0x0000000002db0460  ;   {runtime_call}
  0x0000000002dfde75: jmp    0x0000000002dfde54
  0x0000000002dfde77: hlt    
  0x0000000002dfde78: hlt    
  0x0000000002dfde79: hlt    
  0x0000000002dfde7a: hlt    
  0x0000000002dfde7b: hlt    
  0x0000000002dfde7c: hlt    
  0x0000000002dfde7d: hlt    
  0x0000000002dfde7e: hlt    
  0x0000000002dfde7f: hlt    
[Stub Code]
  0x0000000002dfde80: nop                       ;   {no_reloc}
  0x0000000002dfde81: nop
  0x0000000002dfde82: nop
  0x0000000002dfde83: nop
  0x0000000002dfde84: nop
  0x0000000002dfde85: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dfde8f: jmpq   0x0000000002dfde8f  ;   {runtime_call}
  0x0000000002dfde94: nop
  0x0000000002dfde95: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dfde9f: jmpq   0x0000000002dfde9f  ;   {runtime_call}
  0x0000000002dfdea4: nop
  0x0000000002dfdea5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002dfdeaf: jmpq   0x0000000002dfdeaf  ;   {runtime_call}
[Exception Handler]
  0x0000000002dfdeb4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002dfdeb9: mov    %rsp,-0x28(%rsp)
  0x0000000002dfdebe: sub    $0x80,%rsp
  0x0000000002dfdec5: mov    %rax,0x78(%rsp)
  0x0000000002dfdeca: mov    %rcx,0x70(%rsp)
  0x0000000002dfdecf: mov    %rdx,0x68(%rsp)
  0x0000000002dfded4: mov    %rbx,0x60(%rsp)
  0x0000000002dfded9: mov    %rbp,0x50(%rsp)
  0x0000000002dfdede: mov    %rsi,0x48(%rsp)
  0x0000000002dfdee3: mov    %rdi,0x40(%rsp)
  0x0000000002dfdee8: mov    %r8,0x38(%rsp)
  0x0000000002dfdeed: mov    %r9,0x30(%rsp)
  0x0000000002dfdef2: mov    %r10,0x28(%rsp)
  0x0000000002dfdef7: mov    %r11,0x20(%rsp)
  0x0000000002dfdefc: mov    %r12,0x18(%rsp)
  0x0000000002dfdf01: mov    %r13,0x10(%rsp)
  0x0000000002dfdf06: mov    %r14,0x8(%rsp)
  0x0000000002dfdf0b: mov    %r15,(%rsp)
  0x0000000002dfdf0f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dfdf19: movabs $0x2dfdeb9,%rdx    ;   {internal_word}
  0x0000000002dfdf23: mov    %rsp,%r8
  0x0000000002dfdf26: and    $0xfffffffffffffff0,%rsp
  0x0000000002dfdf2a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dfdf2f: hlt    
[Deopt Handler Code]
  0x0000000002dfdf30: movabs $0x2dfdf30,%r10    ;   {section_word}
  0x0000000002dfdf3a: push   %r10
  0x0000000002dfdf3c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dfdf41: hlt    
  0x0000000002dfdf42: hlt    
  0x0000000002dfdf43: hlt    
  0x0000000002dfdf44: hlt    
  0x0000000002dfdf45: hlt    
  0x0000000002dfdf46: hlt    
  0x0000000002dfdf47: hlt    
<nmethod compile_id='114' compiler='C1' level='3' entry='0x0000000002dfd6e0' size='3768' address='0x0000000002dfd510' relocation_offset='288' insts_offset='464' stub_offset='2416' scopes_data_offset='2664' scopes_pcs_offset='3032' dependencies_offset='3720' nul_chk_table_offset='3728' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='1094' iicount='1094' stamp='8.161'/>
<make_not_entrant thread='17312' zombie='1' compile_id='61' compiler='C1' level='2' stamp='8.161'/>
<writer thread='19128'/>
Decoding compiled method 0x0000000002dfb550:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;
  0x0000000002dfb6a0: int3   
  0x0000000002dfb6a1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dfb6ac: data16 data16 xchg %ax,%ax
  0x0000000002dfb6b0: mov    %eax,-0x6000(%rsp)
  0x0000000002dfb6b7: push   %rbp
  0x0000000002dfb6b8: sub    $0x40,%rsp
  0x0000000002dfb6bc: mov    (%rdx),%ebp
  0x0000000002dfb6be: mov    0x8(%rdx),%rbx
  0x0000000002dfb6c2: mov    %rdx,%rcx
  0x0000000002dfb6c5: movabs $0x5590be80,%r10
  0x0000000002dfb6cf: callq  *%r10
  0x0000000002dfb6d2: mov    0x8(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002dfb795
  0x0000000002dfb6d6: cmp    $0xf800e605,%r11d  ;   {metadata(&apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002dfb6dd: jne    0x0000000002dfb785  ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)

  0x0000000002dfb6e3: jmp    0x0000000002dfb720
  0x0000000002dfb6e5: lea    (%r12,%r10,8),%r8  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002dfb6e9: nopl   0x0(%rax)
  0x0000000002dfb6f0: mov    0xc(%r12,%r10,8),%ecx
  0x0000000002dfb6f5: mov    %ecx,%r9d
  0x0000000002dfb6f8: inc    %r9d
  0x0000000002dfb6fb: mov    %ecx,%eax
  0x0000000002dfb6fd: lock cmpxchg %r9d,0xc(%r12,%r10,8)
  0x0000000002dfb704: sete   %r9b
  0x0000000002dfb708: movzbl %r9b,%r9d          ; OopMap{r10=NarrowOop r8=Oop rbx=Oop off=108}
                                                ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002dfb70c: test   %eax,-0x21fb712(%rip)        # 0x0000000000c00000
                                                ;   {poll}
  0x0000000002dfb712: test   %r9d,%r9d
  0x0000000002dfb715: je     0x0000000002dfb6f0  ; OopMap{rbx=Oop off=119}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)

  0x0000000002dfb717: test   %eax,-0x21fb71d(%rip)        # 0x0000000000c00000
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)
                                                ;   {poll}
  0x0000000002dfb71d: mov    %r11d,%ebp         ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)

  0x0000000002dfb720: mov    0x178(%rbx),%r10d  ;*getfield count
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@4 (line 17)

  0x0000000002dfb727: cmp    %r10d,%ebp
  0x0000000002dfb72a: jge    0x0000000002dfb76d  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002dfb72c: mov    0x17c(%rbx),%r10d  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002dfb733: test   %r10d,%r10d
  0x0000000002dfb736: je     0x0000000002dfb75f
  0x0000000002dfb738: mov    0xc(%r12,%r10,8),%eax  ;*invokevirtual compareAndSwapInt
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@31 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002dfb73d: mov    %ebp,%r11d
  0x0000000002dfb740: inc    %r11d              ;*iinc
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@18 (line 17)

  0x0000000002dfb743: mov    %eax,%r9d
  0x0000000002dfb746: inc    %r9d
  0x0000000002dfb749: lock cmpxchg %r9d,0xc(%r12,%r10,8)
  0x0000000002dfb750: sete   %r9b
  0x0000000002dfb754: movzbl %r9b,%r9d          ;*invokevirtual compareAndSwapInt
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@31 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002dfb758: test   %r9d,%r9d
  0x0000000002dfb75b: je     0x0000000002dfb6e5  ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002dfb75d: jmp    0x0000000002dfb717
  0x0000000002dfb75f: mov    $0xfffffff6,%edx
  0x0000000002dfb764: data16 xchg %ax,%ax
  0x0000000002dfb767: callq  0x0000000002cf57a0  ; OopMap{off=204}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x0000000002dfb76c: int3                      ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002dfb76d: mov    $0xffffff65,%edx
  0x0000000002dfb772: mov    %rbx,0x20(%rsp)
  0x0000000002dfb777: mov    %r10d,0x2c(%rsp)
  0x0000000002dfb77c: data16 xchg %ax,%ax
  0x0000000002dfb77f: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop off=228}
                                                ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)
                                                ;   {runtime_call}
  0x0000000002dfb784: int3   
  0x0000000002dfb785: mov    $0xffffff9d,%edx
  0x0000000002dfb78a: mov    %rbx,0x20(%rsp)
  0x0000000002dfb78f: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop off=244}
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)
                                                ;   {runtime_call}
  0x0000000002dfb794: int3   
  0x0000000002dfb795: mov    $0xffffff86,%edx
  0x0000000002dfb79a: nop
  0x0000000002dfb79b: callq  0x0000000002cf57a0  ; OopMap{off=256}
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)
                                                ;   {runtime_call}
  0x0000000002dfb7a0: int3                      ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)

  0x0000000002dfb7a1: hlt    
  0x0000000002dfb7a2: hlt    
  0x0000000002dfb7a3: hlt    
  0x0000000002dfb7a4: hlt    
  0x0000000002dfb7a5: hlt    
  0x0000000002dfb7a6: hlt    
  0x0000000002dfb7a7: hlt    
  0x0000000002dfb7a8: hlt    
  0x0000000002dfb7a9: hlt    
  0x0000000002dfb7aa: hlt    
  0x0000000002dfb7ab: hlt    
  0x0000000002dfb7ac: hlt    
  0x0000000002dfb7ad: hlt    
  0x0000000002dfb7ae: hlt    
  0x0000000002dfb7af: hlt    
  0x0000000002dfb7b0: hlt    
  0x0000000002dfb7b1: hlt    
  0x0000000002dfb7b2: hlt    
  0x0000000002dfb7b3: hlt    
  0x0000000002dfb7b4: hlt    
  0x0000000002dfb7b5: hlt    
  0x0000000002dfb7b6: hlt    
  0x0000000002dfb7b7: hlt    
  0x0000000002dfb7b8: hlt    
  0x0000000002dfb7b9: hlt    
  0x0000000002dfb7ba: hlt    
  0x0000000002dfb7bb: hlt    
  0x0000000002dfb7bc: hlt    
  0x0000000002dfb7bd: hlt    
  0x0000000002dfb7be: hlt    
  0x0000000002dfb7bf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dfb7c0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002dfb7c5: callq  0x0000000002dfb7ca
  0x0000000002dfb7ca: subq   $0x5,(%rsp)
  0x0000000002dfb7cf: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dfb7d4: hlt    
  0x0000000002dfb7d5: hlt    
  0x0000000002dfb7d6: hlt    
  0x0000000002dfb7d7: hlt    
<nmethod compile_id='128' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002dfb6a0' size='1200' address='0x0000000002dfb550' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='680' scopes_pcs_offset='840' dependencies_offset='1176' nul_chk_table_offset='1184' oops_offset='648' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='316242' iicount='12' stamp='8.165'/>
<make_not_entrant thread='19128' zombie='1' compile_id='59' compiler='C1' level='2' stamp='8.165'/>
<make_not_entrant thread='19128' zombie='1' compile_id='58' compiler='C1' level='1' stamp='8.165'/>
<writer thread='16472'/>
<task_queued compile_id='129' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='316372' iicount='12' stamp='8.165' comment='tiered' hot_count='12'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002dfd0d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c0740d0} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger&apos;
  #           [sp+0x60]  (sp of caller)
  0x0000000002dfd220: mov    0x8(%rdx),%r10d
  0x0000000002dfd224: shl    $0x3,%r10
  0x0000000002dfd228: cmp    %rax,%r10
  0x0000000002dfd22b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002dfd231: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002dfd23c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002dfd240: mov    %eax,-0x6000(%rsp)
  0x0000000002dfd247: push   %rbp
  0x0000000002dfd248: sub    $0x50,%rsp
  0x0000000002dfd24c: movabs $0x1c0749a0,%rax
  0x0000000002dfd256: mov    0x8(%rax),%esi
  0x0000000002dfd259: add    $0x8,%esi
  0x0000000002dfd25c: mov    %esi,0x8(%rax)
  0x0000000002dfd25f: movabs $0x1c0740c8,%rax   ;   {metadata({method} {0x000000001c0740d0} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger&apos;)}
  0x0000000002dfd269: and    $0x3ff8,%esi
  0x0000000002dfd26f: cmp    $0x0,%esi
  0x0000000002dfd272: je     0x0000000002dfd2eb  ;*aload_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@0 (line 19)

  0x0000000002dfd278: movabs $0xc,%rsi
  0x0000000002dfd282: mov    (%rdx,%rsi,1),%edi
  0x0000000002dfd285: mov    %rdi,%rbx
  0x0000000002dfd288: inc    %ebx
  0x0000000002dfd28a: mov    %rdi,%rax
  0x0000000002dfd28d: lea    (%rdx,%rsi,1),%rsi
  0x0000000002dfd291: lock cmpxchg %ebx,(%rsi)
  0x0000000002dfd295: mov    $0x1,%eax
  0x0000000002dfd29a: je     0x0000000002dfd2a5
  0x0000000002dfd2a0: mov    $0x0,%eax          ;*invokevirtual compareAndSwapInt
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@31 (line 25)

  0x0000000002dfd2a5: movabs $0x1c0749a0,%rsi
  0x0000000002dfd2af: mov    0xc(%rsi),%ebx
  0x0000000002dfd2b2: add    $0x8,%ebx
  0x0000000002dfd2b5: mov    %ebx,0xc(%rsi)
  0x0000000002dfd2b8: movabs $0x1c0740c8,%rsi   ;   {metadata({method} {0x000000001c0740d0} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger&apos;)}
  0x0000000002dfd2c2: and    $0x1fff8,%ebx
  0x0000000002dfd2c8: cmp    $0x0,%ebx
  0x0000000002dfd2cb: je     0x0000000002dfd302  ; OopMap{rdx=Oop off=177}
                                                ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)

  0x0000000002dfd2d1: test   %eax,-0x21fd1d7(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002dfd2d7: cmp    $0x0,%eax
  0x0000000002dfd2da: je     0x0000000002dfd278  ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)

  0x0000000002dfd2dc: mov    %rdi,%rax
  0x0000000002dfd2df: add    $0x50,%rsp
  0x0000000002dfd2e3: pop    %rbp
  0x0000000002dfd2e4: test   %eax,-0x21fd1ea(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002dfd2ea: retq   
  0x0000000002dfd2eb: mov    %rax,0x8(%rsp)
  0x0000000002dfd2f0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002dfd2f8: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=221}
                                                ;*synchronization entry
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@-1 (line 19)
                                                ;   {runtime_call}
  0x0000000002dfd2fd: jmpq   0x0000000002dfd278
  0x0000000002dfd302: mov    %rsi,0x8(%rsp)
  0x0000000002dfd307: movq   $0x22,(%rsp)
  0x0000000002dfd30f: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=244}
                                                ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)
                                                ;   {runtime_call}
  0x0000000002dfd314: jmp    0x0000000002dfd2d1
  0x0000000002dfd316: nop
  0x0000000002dfd317: nop
  0x0000000002dfd318: mov    0x2a8(%r15),%rax
  0x0000000002dfd31f: movabs $0x0,%r10
  0x0000000002dfd329: mov    %r10,0x2a8(%r15)
  0x0000000002dfd330: movabs $0x0,%r10
  0x0000000002dfd33a: mov    %r10,0x2b0(%r15)
  0x0000000002dfd341: add    $0x50,%rsp
  0x0000000002dfd345: pop    %rbp
  0x0000000002dfd346: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002dfd34b: hlt    
  0x0000000002dfd34c: hlt    
  0x0000000002dfd34d: hlt    
  0x0000000002dfd34e: hlt    
  0x0000000002dfd34f: hlt    
  0x0000000002dfd350: hlt    
  0x0000000002dfd351: hlt    
  0x0000000002dfd352: hlt    
  0x0000000002dfd353: hlt    
  0x0000000002dfd354: hlt    
  0x0000000002dfd355: hlt    
  0x0000000002dfd356: hlt    
  0x0000000002dfd357: hlt    
  0x0000000002dfd358: hlt    
  0x0000000002dfd359: hlt    
  0x0000000002dfd35a: hlt    
  0x0000000002dfd35b: hlt    
  0x0000000002dfd35c: hlt    
  0x0000000002dfd35d: hlt    
  0x0000000002dfd35e: hlt    
  0x0000000002dfd35f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002dfd360: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002dfd365: mov    %rsp,-0x28(%rsp)
  0x0000000002dfd36a: sub    $0x80,%rsp
  0x0000000002dfd371: mov    %rax,0x78(%rsp)
  0x0000000002dfd376: mov    %rcx,0x70(%rsp)
  0x0000000002dfd37b: mov    %rdx,0x68(%rsp)
  0x0000000002dfd380: mov    %rbx,0x60(%rsp)
  0x0000000002dfd385: mov    %rbp,0x50(%rsp)
  0x0000000002dfd38a: mov    %rsi,0x48(%rsp)
  0x0000000002dfd38f: mov    %rdi,0x40(%rsp)
  0x0000000002dfd394: mov    %r8,0x38(%rsp)
  0x0000000002dfd399: mov    %r9,0x30(%rsp)
  0x0000000002dfd39e: mov    %r10,0x28(%rsp)
  0x0000000002dfd3a3: mov    %r11,0x20(%rsp)
  0x0000000002dfd3a8: mov    %r12,0x18(%rsp)
  0x0000000002dfd3ad: mov    %r13,0x10(%rsp)
  0x0000000002dfd3b2: mov    %r14,0x8(%rsp)
  0x0000000002dfd3b7: mov    %r15,(%rsp)
  0x0000000002dfd3bb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002dfd3c5: movabs $0x2dfd365,%rdx    ;   {internal_word}
  0x0000000002dfd3cf: mov    %rsp,%r8
  0x0000000002dfd3d2: and    $0xfffffffffffffff0,%rsp
  0x0000000002dfd3d6: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002dfd3db: hlt    
[Deopt Handler Code]
  0x0000000002dfd3dc: movabs $0x2dfd3dc,%r10    ;   {section_word}
  0x0000000002dfd3e6: push   %r10
  0x0000000002dfd3e8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002dfd3ed: hlt    
  0x0000000002dfd3ee: hlt    
  0x0000000002dfd3ef: hlt    
<nmethod compile_id='127' compiler='C1' level='2' entry='0x0000000002dfd220' size='1016' address='0x0000000002dfd0d0' relocation_offset='288' insts_offset='336' stub_offset='656' scopes_data_offset='816' scopes_pcs_offset='880' dependencies_offset='1008' oops_offset='800' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger getAndIncrement ()I' bytes='40' count='312924' backedge_count='415483' iicount='312924' stamp='8.168'/>
<writer thread='21024'/>
<task_queued compile_id='130' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger getAndIncrement ()I' bytes='40' count='313035' backedge_count='416361' iicount='313039' osr_bci='9' stamp='8.168' comment='tiered' hot_count='416266'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002e05bd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd04c40} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;
  # this:     rdx:rdx   = &apos;java/nio/Buffer&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x0000000002e05d40: mov    0x8(%rdx),%r10d
  0x0000000002e05d44: shl    $0x3,%r10
  0x0000000002e05d48: cmp    %rax,%r10
  0x0000000002e05d4b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e05d51: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e05d5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e05d60: mov    %eax,-0x6000(%rsp)
  0x0000000002e05d67: push   %rbp
  0x0000000002e05d68: sub    $0x30,%rsp
  0x0000000002e05d6c: movabs $0x1beb5b70,%rax   ;   {metadata(method data for {method} {0x000000001bd04c40} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x0000000002e05d76: mov    0xdc(%rax),%esi
  0x0000000002e05d7c: add    $0x8,%esi
  0x0000000002e05d7f: mov    %esi,0xdc(%rax)
  0x0000000002e05d85: movabs $0x1bd04c38,%rax   ;   {metadata({method} {0x000000001bd04c40} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x0000000002e05d8f: and    $0x1ff8,%esi
  0x0000000002e05d95: cmp    $0x0,%esi
  0x0000000002e05d98: je     0x0000000002e05e66  ;*iload_1
                                                ; - java.nio.Buffer::checkIndex@0 (line 539)

  0x0000000002e05d9e: cmp    $0x0,%r8d
  0x0000000002e05da2: movabs $0x1beb5b70,%rax   ;   {metadata(method data for {method} {0x000000001bd04c40} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x0000000002e05dac: movabs $0x108,%rsi
  0x0000000002e05db6: jl     0x0000000002e05dc6
  0x0000000002e05dbc: movabs $0x118,%rsi
  0x0000000002e05dc6: mov    (%rax,%rsi,1),%rdi
  0x0000000002e05dca: lea    0x1(%rdi),%rdi
  0x0000000002e05dce: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e05dd2: jl     0x0000000002e05e23  ;*iflt
                                                ; - java.nio.Buffer::checkIndex@1 (line 539)

  0x0000000002e05dd8: mov    0x1c(%rdx),%eax    ;*getfield limit
                                                ; - java.nio.Buffer::checkIndex@6 (line 539)

  0x0000000002e05ddb: cmp    %eax,%r8d
  0x0000000002e05dde: movabs $0x1beb5b70,%rax   ;   {metadata(method data for {method} {0x000000001bd04c40} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x0000000002e05de8: movabs $0x128,%rdx
  0x0000000002e05df2: jl     0x0000000002e05e02
  0x0000000002e05df8: movabs $0x138,%rdx
  0x0000000002e05e02: mov    (%rax,%rdx,1),%rsi
  0x0000000002e05e06: lea    0x1(%rsi),%rsi
  0x0000000002e05e0a: mov    %rsi,(%rax,%rdx,1)
  0x0000000002e05e0e: jge    0x0000000002e05e23  ;*if_icmplt
                                                ; - java.nio.Buffer::checkIndex@9 (line 539)

  0x0000000002e05e14: mov    %r8,%rax
  0x0000000002e05e17: add    $0x30,%rsp
  0x0000000002e05e1b: pop    %rbp
  0x0000000002e05e1c: test   %eax,-0x2205d22(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e05e22: retq                      ;*ireturn
                                                ; - java.nio.Buffer::checkIndex@21 (line 541)

  0x0000000002e05e23: nopl   0x0(%rax,%rax,1)
  0x0000000002e05e28: jmpq   0x0000000002e05e8c  ;   {no_reloc}
  0x0000000002e05e2d: add    %al,(%rax)
  0x0000000002e05e2f: add    %al,(%rax)
  0x0000000002e05e31: add    %ch,%cl
  0x0000000002e05e33: pop    %rdi
  0x0000000002e05e34: add    %al,(%rax)
  0x0000000002e05e36: add    %cl,-0x75(%rax)    ;*new  ; - java.nio.Buffer::checkIndex@12 (line 540)

  0x0000000002e05e39: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001bd04c40} &apos;checkIndex&apos; &apos;(I)I&apos; in &apos;java/nio/Buffer&apos;)}
  0x0000000002e05e3c: jo     0x0000000002e05e99
  0x0000000002e05e3e: jmp    0x0000000002e05e5b
  0x0000000002e05e40: add    %al,(%rax)
  0x0000000002e05e42: add    %al,(%rax)
  0x0000000002e05e44: addq   $0x1,0x148(%rsi)
  0x0000000002e05e4c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.Buffer::checkIndex@16 (line 540)

  0x0000000002e05e4f: mov    %rax,0x20(%rsp)
  0x0000000002e05e54: nop
  0x0000000002e05e55: nop
  0x0000000002e05e56: nop
  0x0000000002e05e57: callq  0x0000000002cf61a0  ; OopMap{[32]=Oop off=284}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.Buffer::checkIndex@16 (line 540)
                                                ;   {optimized virtual_call}
  0x0000000002e05e5c: mov    0x20(%rsp),%rax
  0x0000000002e05e61: jmpq   0x0000000002e05ecb
  0x0000000002e05e66: mov    %rax,0x8(%rsp)
  0x0000000002e05e6b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e05e73: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=312}
                                                ;*synchronization entry
                                                ; - java.nio.Buffer::checkIndex@-1 (line 539)
                                                ;   {runtime_call}
  0x0000000002e05e78: jmpq   0x0000000002e05d9e
  0x0000000002e05e7d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e05e87: mov    $0xa050f00,%eax
  0x0000000002e05e8c: callq  0x0000000002db0ca0  ; OopMap{off=337}
                                                ;*new  ; - java.nio.Buffer::checkIndex@12 (line 540)
                                                ;   {runtime_call}
  0x0000000002e05e91: jmp    0x0000000002e05e28
  0x0000000002e05e93: nop
  0x0000000002e05e94: nop
  0x0000000002e05e95: nop
  0x0000000002e05e96: mov    %rdx,%rdx
  0x0000000002e05e99: callq  0x0000000002dadb20  ; OopMap{off=350}
                                                ;*new  ; - java.nio.Buffer::checkIndex@12 (line 540)
                                                ;   {runtime_call}
  0x0000000002e05e9e: jmp    0x0000000002e05e37
  0x0000000002e05ea0: nop
  0x0000000002e05ea1: nop
  0x0000000002e05ea2: mov    0x2a8(%r15),%rax
  0x0000000002e05ea9: movabs $0x0,%r10
  0x0000000002e05eb3: mov    %r10,0x2a8(%r15)
  0x0000000002e05eba: movabs $0x0,%r10
  0x0000000002e05ec4: mov    %r10,0x2b0(%r15)
  0x0000000002e05ecb: add    $0x30,%rsp
  0x0000000002e05ecf: pop    %rbp
  0x0000000002e05ed0: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002e05ed5: hlt    
  0x0000000002e05ed6: hlt    
  0x0000000002e05ed7: hlt    
  0x0000000002e05ed8: hlt    
  0x0000000002e05ed9: hlt    
  0x0000000002e05eda: hlt    
  0x0000000002e05edb: hlt    
  0x0000000002e05edc: hlt    
  0x0000000002e05edd: hlt    
  0x0000000002e05ede: hlt    
  0x0000000002e05edf: hlt    
[Stub Code]
  0x0000000002e05ee0: nop                       ;   {no_reloc}
  0x0000000002e05ee1: nop
  0x0000000002e05ee2: nop
  0x0000000002e05ee3: nop
  0x0000000002e05ee4: nop
  0x0000000002e05ee5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e05eef: jmpq   0x0000000002e05eef  ;   {runtime_call}
[Exception Handler]
  0x0000000002e05ef4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002e05ef9: mov    %rsp,-0x28(%rsp)
  0x0000000002e05efe: sub    $0x80,%rsp
  0x0000000002e05f05: mov    %rax,0x78(%rsp)
  0x0000000002e05f0a: mov    %rcx,0x70(%rsp)
  0x0000000002e05f0f: mov    %rdx,0x68(%rsp)
  0x0000000002e05f14: mov    %rbx,0x60(%rsp)
  0x0000000002e05f19: mov    %rbp,0x50(%rsp)
  0x0000000002e05f1e: mov    %rsi,0x48(%rsp)
  0x0000000002e05f23: mov    %rdi,0x40(%rsp)
  0x0000000002e05f28: mov    %r8,0x38(%rsp)
  0x0000000002e05f2d: mov    %r9,0x30(%rsp)
  0x0000000002e05f32: mov    %r10,0x28(%rsp)
  0x0000000002e05f37: mov    %r11,0x20(%rsp)
  0x0000000002e05f3c: mov    %r12,0x18(%rsp)
  0x0000000002e05f41: mov    %r13,0x10(%rsp)
  0x0000000002e05f46: mov    %r14,0x8(%rsp)
  0x0000000002e05f4b: mov    %r15,(%rsp)
  0x0000000002e05f4f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002e05f59: movabs $0x2e05ef9,%rdx    ;   {internal_word}
  0x0000000002e05f63: mov    %rsp,%r8
  0x0000000002e05f66: and    $0xfffffffffffffff0,%rsp
  0x0000000002e05f6a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002e05f6f: hlt    
[Deopt Handler Code]
  0x0000000002e05f70: movabs $0x2e05f70,%r10    ;   {section_word}
  0x0000000002e05f7a: push   %r10
  0x0000000002e05f7c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e05f81: hlt    
  0x0000000002e05f82: hlt    
  0x0000000002e05f83: hlt    
  0x0000000002e05f84: hlt    
  0x0000000002e05f85: hlt    
  0x0000000002e05f86: hlt    
  0x0000000002e05f87: hlt    
<nmethod compile_id='121' compiler='C1' level='3' entry='0x0000000002e05d40' size='1256' address='0x0000000002e05bd0' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1040' dependencies_offset='1248' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='1160' iicount='1160' stamp='8.186'/>
Decoding compiled method 0x0000000002e049d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;
  # this:     rdx:rdx   = &apos;java/util/ArrayList&apos;
  # parm0:    r8        = int
  #           [sp+0xc0]  (sp of caller)
  0x0000000002e04be0: mov    0x8(%rdx),%r10d
  0x0000000002e04be4: shl    $0x3,%r10
  0x0000000002e04be8: cmp    %rax,%r10
  0x0000000002e04beb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e04bf1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e04bfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e04c00: mov    %eax,-0x6000(%rsp)
  0x0000000002e04c07: push   %rbp
  0x0000000002e04c08: sub    $0xb0,%rsp
  0x0000000002e04c0f: movabs $0x1bf0e5a0,%rax   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e04c19: mov    0xdc(%rax),%esi
  0x0000000002e04c1f: add    $0x8,%esi
  0x0000000002e04c22: mov    %esi,0xdc(%rax)
  0x0000000002e04c28: movabs $0x1bd3e2f0,%rax   ;   {metadata({method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e04c32: and    $0x1ff8,%esi
  0x0000000002e04c38: cmp    $0x0,%esi
  0x0000000002e04c3b: je     0x0000000002e05409  ;*iload_1
                                                ; - java.util.ArrayList::rangeCheck@0 (line 652)

  0x0000000002e04c41: mov    0x10(%rdx),%eax    ;*getfield size
                                                ; - java.util.ArrayList::rangeCheck@2 (line 652)

  0x0000000002e04c44: cmp    %eax,%r8d
  0x0000000002e04c47: movabs $0x1bf0e5a0,%rax   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e04c51: movabs $0x108,%rsi
  0x0000000002e04c5b: jl     0x0000000002e04c6b
  0x0000000002e04c61: movabs $0x118,%rsi
  0x0000000002e04c6b: mov    (%rax,%rsi,1),%rdi
  0x0000000002e04c6f: lea    0x1(%rdi),%rdi
  0x0000000002e04c73: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e04c77: jge    0x0000000002e04c8c  ;*if_icmplt
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)

  0x0000000002e04c7d: add    $0xb0,%rsp
  0x0000000002e04c84: pop    %rbp
  0x0000000002e04c85: test   %eax,-0x2204b8b(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e04c8b: retq                      ;*return
                                                ; - java.util.ArrayList::rangeCheck@21 (line 654)

  0x0000000002e04c8c: mov    %r8d,0x80(%rsp)
  0x0000000002e04c94: mov    %rdx,%r9
  0x0000000002e04c97: nop
  0x0000000002e04c98: jmpq   0x0000000002e0542f  ;   {no_reloc}
  0x0000000002e04c9d: add    %al,(%rax)
  0x0000000002e04c9f: add    %al,(%rax)
  0x0000000002e04ca1: add    %ch,%cl
  0x0000000002e04ca3: xchg   %eax,%edx
  0x0000000002e04ca4: (bad)  
  0x0000000002e04ca5: add    %al,(%rax)         ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)

  0x0000000002e04ca7: mov    %r9,%rdx
  0x0000000002e04caa: movabs $0x1bf0e5a0,%rsi   ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e04cb4: addq   $0x1,0x128(%rsi)
  0x0000000002e04cbc: movabs $0x1bffa808,%rdx   ;   {metadata(method data for {method} {0x000000001bd3e458} &apos;outOfBoundsMsg&apos; &apos;(I)Ljava/lang/String;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e04cc6: mov    0xdc(%rdx),%esi
  0x0000000002e04ccc: add    $0x8,%esi
  0x0000000002e04ccf: mov    %esi,0xdc(%rdx)
  0x0000000002e04cd5: movabs $0x1bd3e450,%rdx   ;   {metadata({method} {0x000000001bd3e458} &apos;outOfBoundsMsg&apos; &apos;(I)Ljava/lang/String;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e04cdf: and    $0x7ffff8,%esi
  0x0000000002e04ce5: cmp    $0x0,%esi
  0x0000000002e04ce8: je     0x0000000002e05446
  0x0000000002e04cee: xchg   %ax,%ax
  0x0000000002e04cf0: jmpq   0x0000000002e0546c  ;   {no_reloc}
  0x0000000002e04cf5: add    %al,(%rax)
  0x0000000002e04cf7: add    %al,(%rax)
  0x0000000002e04cf9: add    %cl,-0x77(%rax)
  0x0000000002e04cfc: test   %ah,(%rax,%rdx,4)
  0x0000000002e04cff: add    %al,(%rax)
  0x0000000002e04d01: add    %cl,-0x75(%rcx)
  0x0000000002e04d04: rex.RXB (bad) 
  0x0000000002e04d06: lea    0x18(%rax),%rdi
  0x0000000002e04d0a: cmp    0x70(%r15),%rdi
  0x0000000002e04d0e: ja     0x0000000002e05476
  0x0000000002e04d14: mov    %rdi,0x60(%r15)
  0x0000000002e04d18: mov    0xa8(%rdx),%rcx
  0x0000000002e04d1f: mov    %rcx,(%rax)
  0x0000000002e04d22: mov    %rdx,%rcx
  0x0000000002e04d25: shr    $0x3,%rcx
  0x0000000002e04d29: mov    %ecx,0x8(%rax)
  0x0000000002e04d2c: xor    %rcx,%rcx
  0x0000000002e04d2f: mov    %ecx,0xc(%rax)
  0x0000000002e04d32: xor    %rcx,%rcx
  0x0000000002e04d35: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.ArrayList::outOfBoundsMsg@0 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e04d39: mov    %rax,%rbx
  0x0000000002e04d3c: movabs $0x1bffa808,%rdx   ;   {metadata(method data for {method} {0x000000001bd3e458} &apos;outOfBoundsMsg&apos; &apos;(I)Ljava/lang/String;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e04d46: addq   $0x1,0x108(%rdx)
  0x0000000002e04d4e: movabs $0x1bea7de8,%rbx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e04d58: mov    0xdc(%rbx),%edx
  0x0000000002e04d5e: add    $0x8,%edx
  0x0000000002e04d61: mov    %edx,0xdc(%rbx)
  0x0000000002e04d67: movabs $0x1bce7640,%rbx   ;   {metadata({method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e04d71: and    $0x7ffff8,%edx
  0x0000000002e04d77: cmp    $0x0,%edx
  0x0000000002e04d7a: je     0x0000000002e05483
  0x0000000002e04d80: mov    %rax,%rbx
  0x0000000002e04d83: movabs $0x1bea7de8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e04d8d: addq   $0x1,0x108(%rdx)
  0x0000000002e04d95: movabs $0x1be9d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e04d9f: mov    0xdc(%rbx),%edx
  0x0000000002e04da5: add    $0x8,%edx
  0x0000000002e04da8: mov    %edx,0xdc(%rbx)
  0x0000000002e04dae: movabs $0x1bce3970,%rbx   ;   {metadata({method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e04db8: and    $0x7ffff8,%edx
  0x0000000002e04dbe: cmp    $0x0,%edx
  0x0000000002e04dc1: je     0x0000000002e0549a
  0x0000000002e04dc7: mov    %rax,%rbx
  0x0000000002e04dca: movabs $0x1be9d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000002e04dd4: addq   $0x1,0x108(%rdx)
  0x0000000002e04ddc: movabs $0x1bda1c10,%rbx   ;   {metadata(method data for {method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e04de6: mov    0xdc(%rbx),%edx
  0x0000000002e04dec: add    $0x8,%edx
  0x0000000002e04def: mov    %edx,0xdc(%rbx)
  0x0000000002e04df5: movabs $0x1bc70480,%rbx   ;   {metadata({method} {0x000000001bc70488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000002e04dff: and    $0x7ffff8,%edx
  0x0000000002e04e05: cmp    $0x0,%edx
  0x0000000002e04e08: je     0x0000000002e054b1
  0x0000000002e04e0e: mov    $0x10,%ebx
  0x0000000002e04e13: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000002e04e1d: mov    %rax,%r13
  0x0000000002e04e20: movslq %ebx,%rbx
  0x0000000002e04e23: mov    %rbx,%rdi
  0x0000000002e04e26: cmp    $0xffffff,%rbx
  0x0000000002e04e2d: ja     0x0000000002e054c8
  0x0000000002e04e33: movabs $0x17,%rsi
  0x0000000002e04e3d: lea    (%rsi,%rbx,2),%rsi
  0x0000000002e04e41: and    $0xfffffffffffffff8,%rsi
  0x0000000002e04e45: mov    0x60(%r15),%rax
  0x0000000002e04e49: lea    (%rax,%rsi,1),%rsi
  0x0000000002e04e4d: cmp    0x70(%r15),%rsi
  0x0000000002e04e51: ja     0x0000000002e054c8
  0x0000000002e04e57: mov    %rsi,0x60(%r15)
  0x0000000002e04e5b: sub    %rax,%rsi
  0x0000000002e04e5e: movq   $0x1,(%rax)
  0x0000000002e04e65: mov    %rdx,%rcx
  0x0000000002e04e68: shr    $0x3,%rcx
  0x0000000002e04e6c: mov    %ecx,0x8(%rax)
  0x0000000002e04e6f: mov    %ebx,0xc(%rax)
  0x0000000002e04e72: sub    $0x10,%rsi
  0x0000000002e04e76: je     0x0000000002e04e8d
  0x0000000002e04e7c: xor    %rbx,%rbx
  0x0000000002e04e7f: shr    $0x3,%rsi
  0x0000000002e04e83: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000002e04e88: dec    %rsi
  0x0000000002e04e8b: jne    0x0000000002e04e83  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e04e8d: mov    %rax,%r10
  0x0000000002e04e90: shr    $0x3,%r10
  0x0000000002e04e94: mov    %r10d,0x10(%r13)
  0x0000000002e04e98: mov    %r13,%rax
  0x0000000002e04e9b: shr    $0x9,%rax
  0x0000000002e04e9f: movabs $0xea5d000,%rdx
  0x0000000002e04ea9: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e04ead: mov    %r13,%rax
  0x0000000002e04eb0: movabs $0x1bffa808,%rdx   ;   {metadata(method data for {method} {0x000000001bd3e458} &apos;outOfBoundsMsg&apos; &apos;(I)Ljava/lang/String;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e04eba: mov    0x8(%rax),%eax
  0x0000000002e04ebd: shl    $0x3,%rax
  0x0000000002e04ec1: cmp    0x120(%rdx),%rax
  0x0000000002e04ec8: jne    0x0000000002e04ed7
  0x0000000002e04eca: addq   $0x1,0x128(%rdx)
  0x0000000002e04ed2: jmpq   0x0000000002e04f3d
  0x0000000002e04ed7: cmp    0x130(%rdx),%rax
  0x0000000002e04ede: jne    0x0000000002e04eed
  0x0000000002e04ee0: addq   $0x1,0x138(%rdx)
  0x0000000002e04ee8: jmpq   0x0000000002e04f3d
  0x0000000002e04eed: cmpq   $0x0,0x120(%rdx)
  0x0000000002e04ef8: jne    0x0000000002e04f11
  0x0000000002e04efa: mov    %rax,0x120(%rdx)
  0x0000000002e04f01: movq   $0x1,0x128(%rdx)
  0x0000000002e04f0c: jmpq   0x0000000002e04f3d
  0x0000000002e04f11: cmpq   $0x0,0x130(%rdx)
  0x0000000002e04f1c: jne    0x0000000002e04f35
  0x0000000002e04f1e: mov    %rax,0x130(%rdx)
  0x0000000002e04f25: movq   $0x1,0x138(%rdx)
  0x0000000002e04f30: jmpq   0x0000000002e04f3d
  0x0000000002e04f35: addq   $0x1,0x118(%rdx)
  0x0000000002e04f3d: movabs $0x1be611d0,%rdx   ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e04f47: mov    0xdc(%rdx),%esi
  0x0000000002e04f4d: add    $0x8,%esi
  0x0000000002e04f50: mov    %esi,0xdc(%rdx)
  0x0000000002e04f56: movabs $0x1bce7958,%rdx   ;   {metadata({method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e04f60: and    $0x7ffff8,%esi
  0x0000000002e04f66: cmp    $0x0,%esi
  0x0000000002e04f69: je     0x0000000002e054d2
  0x0000000002e04f6f: mov    %r13,%rax
  0x0000000002e04f72: movabs $0x1be611d0,%rdx   ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e04f7c: addq   $0x1,0x108(%rdx)
  0x0000000002e04f84: movabs $0x76bf1f178,%r8   ;   {oop(&quot;Index: &quot;)}
  0x0000000002e04f8e: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@9 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e04f91: mov    %r9,0x88(%rsp)
  0x0000000002e04f99: mov    %r13,0x78(%rsp)
  0x0000000002e04f9e: nop
  0x0000000002e04f9f: callq  0x0000000002cf61a0  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=964}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@9 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {optimized virtual_call}
  0x0000000002e04fa4: mov    0x78(%rsp),%rax
  0x0000000002e04fa9: movabs $0x1bffa808,%r8    ;   {metadata(method data for {method} {0x000000001bd3e458} &apos;outOfBoundsMsg&apos; &apos;(I)Ljava/lang/String;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e04fb3: mov    0x8(%rax),%eax
  0x0000000002e04fb6: shl    $0x3,%rax
  0x0000000002e04fba: cmp    0x150(%r8),%rax
  0x0000000002e04fc1: jne    0x0000000002e04fd0
  0x0000000002e04fc3: addq   $0x1,0x158(%r8)
  0x0000000002e04fcb: jmpq   0x0000000002e05036
  0x0000000002e04fd0: cmp    0x160(%r8),%rax
  0x0000000002e04fd7: jne    0x0000000002e04fe6
  0x0000000002e04fd9: addq   $0x1,0x168(%r8)
  0x0000000002e04fe1: jmpq   0x0000000002e05036
  0x0000000002e04fe6: cmpq   $0x0,0x150(%r8)
  0x0000000002e04ff1: jne    0x0000000002e0500a
  0x0000000002e04ff3: mov    %rax,0x150(%r8)
  0x0000000002e04ffa: movq   $0x1,0x158(%r8)
  0x0000000002e05005: jmpq   0x0000000002e05036
  0x0000000002e0500a: cmpq   $0x0,0x160(%r8)
  0x0000000002e05015: jne    0x0000000002e0502e
  0x0000000002e05017: mov    %rax,0x160(%r8)
  0x0000000002e0501e: movq   $0x1,0x168(%r8)
  0x0000000002e05029: jmpq   0x0000000002e05036
  0x0000000002e0502e: addq   $0x1,0x148(%r8)
  0x0000000002e05036: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e05040: mov    0xdc(%r8),%edx
  0x0000000002e05047: add    $0x8,%edx
  0x0000000002e0504a: mov    %edx,0xdc(%r8)
  0x0000000002e05051: movabs $0x1bce7e18,%r8    ;   {metadata({method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e0505b: and    $0x7ffff8,%edx
  0x0000000002e05061: cmp    $0x0,%edx
  0x0000000002e05064: je     0x0000000002e054e9
  0x0000000002e0506a: mov    0x78(%rsp),%rax
  0x0000000002e0506f: movabs $0x1bf788f8,%r8    ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e05079: addq   $0x1,0x108(%r8)
  0x0000000002e05081: mov    0x80(%rsp),%r8d
  0x0000000002e05089: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@13 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e0508e: nop
  0x0000000002e0508f: callq  0x0000000002cf61a0  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=1204}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@13 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {optimized virtual_call}
  0x0000000002e05094: mov    0x78(%rsp),%rax
  0x0000000002e05099: movabs $0x1bffa808,%r8    ;   {metadata(method data for {method} {0x000000001bd3e458} &apos;outOfBoundsMsg&apos; &apos;(I)Ljava/lang/String;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e050a3: mov    0x8(%rax),%eax
  0x0000000002e050a6: shl    $0x3,%rax
  0x0000000002e050aa: cmp    0x180(%r8),%rax
  0x0000000002e050b1: jne    0x0000000002e050c0
  0x0000000002e050b3: addq   $0x1,0x188(%r8)
  0x0000000002e050bb: jmpq   0x0000000002e05126
  0x0000000002e050c0: cmp    0x190(%r8),%rax
  0x0000000002e050c7: jne    0x0000000002e050d6
  0x0000000002e050c9: addq   $0x1,0x198(%r8)
  0x0000000002e050d1: jmpq   0x0000000002e05126
  0x0000000002e050d6: cmpq   $0x0,0x180(%r8)
  0x0000000002e050e1: jne    0x0000000002e050fa
  0x0000000002e050e3: mov    %rax,0x180(%r8)
  0x0000000002e050ea: movq   $0x1,0x188(%r8)
  0x0000000002e050f5: jmpq   0x0000000002e05126
  0x0000000002e050fa: cmpq   $0x0,0x190(%r8)
  0x0000000002e05105: jne    0x0000000002e0511e
  0x0000000002e05107: mov    %rax,0x190(%r8)
  0x0000000002e0510e: movq   $0x1,0x198(%r8)
  0x0000000002e05119: jmpq   0x0000000002e05126
  0x0000000002e0511e: addq   $0x1,0x178(%r8)
  0x0000000002e05126: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e05130: mov    0xdc(%r8),%edx
  0x0000000002e05137: add    $0x8,%edx
  0x0000000002e0513a: mov    %edx,0xdc(%r8)
  0x0000000002e05141: movabs $0x1bce7958,%r8    ;   {metadata({method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e0514b: and    $0x7ffff8,%edx
  0x0000000002e05151: cmp    $0x0,%edx
  0x0000000002e05154: je     0x0000000002e05500
  0x0000000002e0515a: mov    0x78(%rsp),%rax
  0x0000000002e0515f: movabs $0x1be611d0,%r8    ;   {metadata(method data for {method} {0x000000001bce7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e05169: addq   $0x1,0x108(%r8)
  0x0000000002e05171: movabs $0x76bf1f1b0,%r8   ;   {oop(&quot;, Size: &quot;)}
  0x0000000002e0517b: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@18 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e05180: nop
  0x0000000002e05181: nop
  0x0000000002e05182: nop
  0x0000000002e05183: nop
  0x0000000002e05184: nop
  0x0000000002e05185: nop
  0x0000000002e05186: nop
  0x0000000002e05187: callq  0x0000000002cf61a0  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=1452}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@18 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {optimized virtual_call}
  0x0000000002e0518c: mov    0x88(%rsp),%rdx
  0x0000000002e05194: mov    0x10(%rdx),%r8d    ;*getfield size
                                                ; - java.util.ArrayList::outOfBoundsMsg@22 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e05198: mov    0x78(%rsp),%rax
  0x0000000002e0519d: movabs $0x1bffa808,%rdx   ;   {metadata(method data for {method} {0x000000001bd3e458} &apos;outOfBoundsMsg&apos; &apos;(I)Ljava/lang/String;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e051a7: mov    0x8(%rax),%eax
  0x0000000002e051aa: shl    $0x3,%rax
  0x0000000002e051ae: cmp    0x1b0(%rdx),%rax
  0x0000000002e051b5: jne    0x0000000002e051c4
  0x0000000002e051b7: addq   $0x1,0x1b8(%rdx)
  0x0000000002e051bf: jmpq   0x0000000002e0522a
  0x0000000002e051c4: cmp    0x1c0(%rdx),%rax
  0x0000000002e051cb: jne    0x0000000002e051da
  0x0000000002e051cd: addq   $0x1,0x1c8(%rdx)
  0x0000000002e051d5: jmpq   0x0000000002e0522a
  0x0000000002e051da: cmpq   $0x0,0x1b0(%rdx)
  0x0000000002e051e5: jne    0x0000000002e051fe
  0x0000000002e051e7: mov    %rax,0x1b0(%rdx)
  0x0000000002e051ee: movq   $0x1,0x1b8(%rdx)
  0x0000000002e051f9: jmpq   0x0000000002e0522a
  0x0000000002e051fe: cmpq   $0x0,0x1c0(%rdx)
  0x0000000002e05209: jne    0x0000000002e05222
  0x0000000002e0520b: mov    %rax,0x1c0(%rdx)
  0x0000000002e05212: movq   $0x1,0x1c8(%rdx)
  0x0000000002e0521d: jmpq   0x0000000002e0522a
  0x0000000002e05222: addq   $0x1,0x1a8(%rdx)
  0x0000000002e0522a: movabs $0x1bf788f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e05234: mov    0xdc(%rdx),%esi
  0x0000000002e0523a: add    $0x8,%esi
  0x0000000002e0523d: mov    %esi,0xdc(%rdx)
  0x0000000002e05243: movabs $0x1bce7e18,%rdx   ;   {metadata({method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e0524d: and    $0x7ffff8,%esi
  0x0000000002e05253: cmp    $0x0,%esi
  0x0000000002e05256: je     0x0000000002e05517
  0x0000000002e0525c: mov    0x78(%rsp),%rax
  0x0000000002e05261: movabs $0x1bf788f8,%rdx   ;   {metadata(method data for {method} {0x000000001bce7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e0526b: addq   $0x1,0x108(%rdx)
  0x0000000002e05273: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@25 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e05278: nop
  0x0000000002e05279: nop
  0x0000000002e0527a: nop
  0x0000000002e0527b: nop
  0x0000000002e0527c: nop
  0x0000000002e0527d: nop
  0x0000000002e0527e: nop
  0x0000000002e0527f: callq  0x0000000002cf61a0  ; OopMap{[120]=Oop [144]=Oop off=1700}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@25 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {optimized virtual_call}
  0x0000000002e05284: mov    0x78(%rsp),%rax
  0x0000000002e05289: movabs $0x1bffa808,%rdx   ;   {metadata(method data for {method} {0x000000001bd3e458} &apos;outOfBoundsMsg&apos; &apos;(I)Ljava/lang/String;&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e05293: mov    0x8(%rax),%eax
  0x0000000002e05296: shl    $0x3,%rax
  0x0000000002e0529a: cmp    0x1e0(%rdx),%rax
  0x0000000002e052a1: jne    0x0000000002e052b0
  0x0000000002e052a3: addq   $0x1,0x1e8(%rdx)
  0x0000000002e052ab: jmpq   0x0000000002e05316
  0x0000000002e052b0: cmp    0x1f0(%rdx),%rax
  0x0000000002e052b7: jne    0x0000000002e052c6
  0x0000000002e052b9: addq   $0x1,0x1f8(%rdx)
  0x0000000002e052c1: jmpq   0x0000000002e05316
  0x0000000002e052c6: cmpq   $0x0,0x1e0(%rdx)
  0x0000000002e052d1: jne    0x0000000002e052ea
  0x0000000002e052d3: mov    %rax,0x1e0(%rdx)
  0x0000000002e052da: movq   $0x1,0x1e8(%rdx)
  0x0000000002e052e5: jmpq   0x0000000002e05316
  0x0000000002e052ea: cmpq   $0x0,0x1f0(%rdx)
  0x0000000002e052f5: jne    0x0000000002e0530e
  0x0000000002e052f7: mov    %rax,0x1f0(%rdx)
  0x0000000002e052fe: movq   $0x1,0x1f8(%rdx)
  0x0000000002e05309: jmpq   0x0000000002e05316
  0x0000000002e0530e: addq   $0x1,0x1d8(%rdx)
  0x0000000002e05316: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e05320: mov    0xdc(%rdx),%esi
  0x0000000002e05326: add    $0x8,%esi
  0x0000000002e05329: mov    %esi,0xdc(%rdx)
  0x0000000002e0532f: movabs $0x1bce8d08,%rdx   ;   {metadata({method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e05339: and    $0x7ffff8,%esi
  0x0000000002e0533f: cmp    $0x0,%esi
  0x0000000002e05342: je     0x0000000002e0552e
  0x0000000002e05348: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x0000000002e05352: mov    0x60(%r15),%rax
  0x0000000002e05356: lea    0x18(%rax),%rdi
  0x0000000002e0535a: cmp    0x70(%r15),%rdi
  0x0000000002e0535e: ja     0x0000000002e05545
  0x0000000002e05364: mov    %rdi,0x60(%r15)
  0x0000000002e05368: mov    0xa8(%rdx),%rcx
  0x0000000002e0536f: mov    %rcx,(%rax)
  0x0000000002e05372: mov    %rdx,%rcx
  0x0000000002e05375: shr    $0x3,%rcx
  0x0000000002e05379: mov    %ecx,0x8(%rax)
  0x0000000002e0537c: xor    %rcx,%rcx
  0x0000000002e0537f: mov    %ecx,0xc(%rax)
  0x0000000002e05382: xor    %rcx,%rcx
  0x0000000002e05385: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e05389: mov    0x78(%rsp),%r8
  0x0000000002e0538e: mov    0x10(%r8),%r9d
  0x0000000002e05392: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e05396: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e0539a: mov    %rax,%r8
  0x0000000002e0539d: movabs $0x1bea7f18,%rdx   ;   {metadata(method data for {method} {0x000000001bce8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x0000000002e053a7: addq   $0x1,0x108(%rdx)
  0x0000000002e053af: mov    %r9,%r8
  0x0000000002e053b2: mov    $0x0,%r9d
  0x0000000002e053b8: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)

  0x0000000002e053bb: mov    %rax,0x98(%rsp)
  0x0000000002e053c3: nop
  0x0000000002e053c4: nop
  0x0000000002e053c5: nop
  0x0000000002e053c6: nop
  0x0000000002e053c7: callq  0x0000000002cf61a0  ; OopMap{[144]=Oop [152]=Oop off=2028}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {optimized virtual_call}
  0x0000000002e053cc: mov    0x90(%rsp),%rax
  0x0000000002e053d4: movabs $0x1bf0e5a0,%r8    ;   {metadata(method data for {method} {0x000000001bd3e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x0000000002e053de: addq   $0x1,0x138(%r8)
  0x0000000002e053e6: mov    0x98(%rsp),%r8
  0x0000000002e053ee: mov    0x90(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)

  0x0000000002e053f6: nop
  0x0000000002e053f7: callq  0x0000000002cf61a0  ; OopMap{[144]=Oop off=2076}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ;   {optimized virtual_call}
  0x0000000002e053fc: mov    0x90(%rsp),%rax
  0x0000000002e05404: jmpq   0x0000000002e0557d
  0x0000000002e05409: mov    %rax,0x8(%rsp)
  0x0000000002e0540e: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e05416: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=2107}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ;   {runtime_call}
  0x0000000002e0541b: jmpq   0x0000000002e04c41
  0x0000000002e05420: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e0542a: mov    $0xa050f00,%eax
  0x0000000002e0542f: callq  0x0000000002db0ca0  ; OopMap{r9=Oop off=2132}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ;   {runtime_call}
  0x0000000002e05434: jmpq   0x0000000002e04c98
  0x0000000002e05439: mov    %rdx,%rdx
  0x0000000002e0543c: callq  0x0000000002dadb20  ; OopMap{r9=Oop off=2145}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ;   {runtime_call}
  0x0000000002e05441: jmpq   0x0000000002e04ca7
  0x0000000002e05446: mov    %rdx,0x8(%rsp)
  0x0000000002e0544b: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e05453: callq  0x0000000002db1d60  ; OopMap{r9=Oop rax=Oop off=2168}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::outOfBoundsMsg@-1 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e05458: jmpq   0x0000000002e04cee
  0x0000000002e0545d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e05467: mov    $0xa050f00,%eax
  0x0000000002e0546c: callq  0x0000000002db0ca0  ; OopMap{r9=Oop rax=Oop off=2193}
                                                ;*new  ; - java.util.ArrayList::outOfBoundsMsg@0 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e05471: jmpq   0x0000000002e04cf0
  0x0000000002e05476: mov    %rdx,%rdx
  0x0000000002e05479: callq  0x0000000002dade00  ; OopMap{r9=Oop [144]=Oop off=2206}
                                                ;*new  ; - java.util.ArrayList::outOfBoundsMsg@0 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e0547e: jmpq   0x0000000002e04d39
  0x0000000002e05483: mov    %rbx,0x8(%rsp)
  0x0000000002e05488: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e05490: callq  0x0000000002db1d60  ; OopMap{r9=Oop [144]=Oop rax=Oop off=2229}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e05495: jmpq   0x0000000002e04d80
  0x0000000002e0549a: mov    %rbx,0x8(%rsp)
  0x0000000002e0549f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e054a7: callq  0x0000000002db1d60  ; OopMap{r9=Oop [144]=Oop rax=Oop off=2252}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e054ac: jmpq   0x0000000002e04dc7
  0x0000000002e054b1: mov    %rbx,0x8(%rsp)
  0x0000000002e054b6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e054be: callq  0x0000000002db1d60  ; OopMap{r9=Oop [144]=Oop rax=Oop off=2275}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e054c3: jmpq   0x0000000002e04e0e
  0x0000000002e054c8: callq  0x0000000002dae700  ; OopMap{r9=Oop [144]=Oop r13=Oop off=2285}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.ArrayList::outOfBoundsMsg@4 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e054cd: jmpq   0x0000000002e04e8d
  0x0000000002e054d2: mov    %rdx,0x8(%rsp)
  0x0000000002e054d7: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e054df: callq  0x0000000002db1d60  ; OopMap{r9=Oop [144]=Oop r13=Oop off=2308}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@9 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e054e4: jmpq   0x0000000002e04f6f
  0x0000000002e054e9: mov    %r8,0x8(%rsp)
  0x0000000002e054ee: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e054f6: callq  0x0000000002db1d60  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=2331}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@13 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e054fb: jmpq   0x0000000002e0506a
  0x0000000002e05500: mov    %r8,0x8(%rsp)
  0x0000000002e05505: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e0550d: callq  0x0000000002db1d60  ; OopMap{[120]=Oop [136]=Oop [144]=Oop off=2354}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.ArrayList::outOfBoundsMsg@18 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e05512: jmpq   0x0000000002e0515a
  0x0000000002e05517: mov    %rdx,0x8(%rsp)
  0x0000000002e0551c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e05524: callq  0x0000000002db1d60  ; OopMap{[120]=Oop [144]=Oop off=2377}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.ArrayList::outOfBoundsMsg@25 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e05529: jmpq   0x0000000002e0525c
  0x0000000002e0552e: mov    %rdx,0x8(%rsp)
  0x0000000002e05533: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e0553b: callq  0x0000000002db1d60  ; OopMap{[120]=Oop [144]=Oop off=2400}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e05540: jmpq   0x0000000002e05348
  0x0000000002e05545: mov    %rdx,%rdx
  0x0000000002e05548: callq  0x0000000002dade00  ; OopMap{[120]=Oop [144]=Oop off=2413}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.ArrayList::outOfBoundsMsg@28 (line 670)
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ;   {runtime_call}
  0x0000000002e0554d: jmpq   0x0000000002e05389
  0x0000000002e05552: nop
  0x0000000002e05553: nop
  0x0000000002e05554: mov    0x2a8(%r15),%rax
  0x0000000002e0555b: movabs $0x0,%r10
  0x0000000002e05565: mov    %r10,0x2a8(%r15)
  0x0000000002e0556c: movabs $0x0,%r10
  0x0000000002e05576: mov    %r10,0x2b0(%r15)
  0x0000000002e0557d: add    $0xb0,%rsp
  0x0000000002e05584: pop    %rbp
  0x0000000002e05585: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002e0558a: hlt    
  0x0000000002e0558b: hlt    
  0x0000000002e0558c: hlt    
  0x0000000002e0558d: hlt    
  0x0000000002e0558e: hlt    
  0x0000000002e0558f: hlt    
  0x0000000002e05590: hlt    
  0x0000000002e05591: hlt    
  0x0000000002e05592: hlt    
  0x0000000002e05593: hlt    
  0x0000000002e05594: hlt    
  0x0000000002e05595: hlt    
  0x0000000002e05596: hlt    
  0x0000000002e05597: hlt    
  0x0000000002e05598: hlt    
  0x0000000002e05599: hlt    
  0x0000000002e0559a: hlt    
  0x0000000002e0559b: hlt    
  0x0000000002e0559c: hlt    
  0x0000000002e0559d: hlt    
  0x0000000002e0559e: hlt    
  0x0000000002e0559f: hlt    
[Stub Code]
  0x0000000002e055a0: nop                       ;   {no_reloc}
  0x0000000002e055a1: nop
  0x0000000002e055a2: nop
  0x0000000002e055a3: nop
  0x0000000002e055a4: nop
  0x0000000002e055a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e055af: jmpq   0x0000000002e055af  ;   {runtime_call}
  0x0000000002e055b4: nop
  0x0000000002e055b5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e055bf: jmpq   0x0000000002e055bf  ;   {runtime_call}
  0x0000000002e055c4: nop
  0x0000000002e055c5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e055cf: jmpq   0x0000000002e055cf  ;   {runtime_call}
  0x0000000002e055d4: nop
  0x0000000002e055d5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e055df: jmpq   0x0000000002e055df  ;   {runtime_call}
  0x0000000002e055e4: nop
  0x0000000002e055e5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e055ef: jmpq   0x0000000002e055ef  ;   {runtime_call}
  0x0000000002e055f4: nop
  0x0000000002e055f5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e055ff: jmpq   0x0000000002e055ff  ;   {runtime_call}
[Exception Handler]
  0x0000000002e05604: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002e05609: mov    %rsp,-0x28(%rsp)
  0x0000000002e0560e: sub    $0x80,%rsp
  0x0000000002e05615: mov    %rax,0x78(%rsp)
  0x0000000002e0561a: mov    %rcx,0x70(%rsp)
  0x0000000002e0561f: mov    %rdx,0x68(%rsp)
  0x0000000002e05624: mov    %rbx,0x60(%rsp)
  0x0000000002e05629: mov    %rbp,0x50(%rsp)
  0x0000000002e0562e: mov    %rsi,0x48(%rsp)
  0x0000000002e05633: mov    %rdi,0x40(%rsp)
  0x0000000002e05638: mov    %r8,0x38(%rsp)
  0x0000000002e0563d: mov    %r9,0x30(%rsp)
  0x0000000002e05642: mov    %r10,0x28(%rsp)
  0x0000000002e05647: mov    %r11,0x20(%rsp)
  0x0000000002e0564c: mov    %r12,0x18(%rsp)
  0x0000000002e05651: mov    %r13,0x10(%rsp)
  0x0000000002e05656: mov    %r14,0x8(%rsp)
  0x0000000002e0565b: mov    %r15,(%rsp)
  0x0000000002e0565f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002e05669: movabs $0x2e05609,%rdx    ;   {internal_word}
  0x0000000002e05673: mov    %rsp,%r8
  0x0000000002e05676: and    $0xfffffffffffffff0,%rsp
  0x0000000002e0567a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002e0567f: hlt    
[Deopt Handler Code]
  0x0000000002e05680: movabs $0x2e05680,%r10    ;   {section_word}
  0x0000000002e0568a: push   %r10
  0x0000000002e0568c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e05691: hlt    
  0x0000000002e05692: hlt    
  0x0000000002e05693: hlt    
  0x0000000002e05694: hlt    
  0x0000000002e05695: hlt    
  0x0000000002e05696: hlt    
  0x0000000002e05697: hlt    
<nmethod compile_id='116' compiler='C1' level='3' entry='0x0000000002e04be0' size='4552' address='0x0000000002e049d0' relocation_offset='288' insts_offset='528' stub_offset='3024' scopes_data_offset='3360' scopes_pcs_offset='3872' dependencies_offset='4544' oops_offset='3272' method='java/util/ArrayList rangeCheck (I)V' bytes='22' count='1089' iicount='1089' stamp='8.206'/>
<writer thread='19128'/>
Decoding compiled method 0x0000000002e031d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c0740d0} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger&apos;
  0x0000000002e03300: int3   
  0x0000000002e03301: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e0330c: data16 data16 xchg %ax,%ax
  0x0000000002e03310: mov    %eax,-0x6000(%rsp)
  0x0000000002e03317: push   %rbp
  0x0000000002e03318: sub    $0x40,%rsp
  0x0000000002e0331c: mov    0x8(%rdx),%ebp
  0x0000000002e0331f: mov    0x20(%rdx),%r13
  0x0000000002e03323: mov    0x10(%rdx),%rbx
  0x0000000002e03327: mov    %rdx,%rcx
  0x0000000002e0332a: movabs $0x5590be80,%r10
  0x0000000002e03334: callq  *%r10
  0x0000000002e03337: test   %r13,%r13
  0x0000000002e0333a: je     0x0000000002e03383
  0x0000000002e0333c: mov    0x8(%r13),%r10d
  0x0000000002e03340: cmp    $0xf800c1a0,%r10d  ;   {metadata(&apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger&apos;)}
  0x0000000002e03347: jne    0x0000000002e03388  ;*getstatic unsafe
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@9 (line 24)

  0x0000000002e03349: mov    %r13,%r10
  0x0000000002e0334c: add    %rbx,%r10          ;*invokevirtual getIntVolatile
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@14 (line 24)

  0x0000000002e0334f: nop
  0x0000000002e03350: mov    (%r10),%r9d
  0x0000000002e03353: mov    %r9d,%r8d
  0x0000000002e03356: add    %ebp,%r8d
  0x0000000002e03359: mov    %r9d,%eax
  0x0000000002e0335c: lock cmpxchg %r8d,(%r10)
  0x0000000002e03361: sete   %r8b
  0x0000000002e03365: movzbl %r8b,%r8d          ; OopMap{r10=Derived_oop_r13 r13=Oop off=105}
                                                ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)

  0x0000000002e03369: test   %eax,-0x220336f(%rip)        # 0x0000000000c00000
                                                ;   {poll}
  0x0000000002e0336f: test   %r8d,%r8d
  0x0000000002e03372: je     0x0000000002e03350  ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)

  0x0000000002e03374: mov    %r9d,%eax
  0x0000000002e03377: add    $0x40,%rsp
  0x0000000002e0337b: pop    %rbp
  0x0000000002e0337c: test   %eax,-0x2203382(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002e03382: retq   
  0x0000000002e03383: xor    %r13d,%r13d
  0x0000000002e03386: jmp    0x0000000002e03349  ;*getstatic unsafe
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@9 (line 24)

  0x0000000002e03388: mov    $0xffffff9d,%edx
  0x0000000002e0338d: mov    %r13,0x20(%rsp)
  0x0000000002e03392: mov    %rbx,0x28(%rsp)
  0x0000000002e03397: callq  0x0000000002cf57a0  ; OopMap{[32]=Oop off=156}
                                                ;*getstatic unsafe
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@9 (line 24)
                                                ;   {runtime_call}
  0x0000000002e0339c: int3                      ;*getstatic unsafe
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@9 (line 24)

  0x0000000002e0339d: hlt    
  0x0000000002e0339e: hlt    
  0x0000000002e0339f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e033a0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002e033a5: callq  0x0000000002e033aa
  0x0000000002e033aa: subq   $0x5,(%rsp)
  0x0000000002e033af: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e033b4: hlt    
  0x0000000002e033b5: hlt    
  0x0000000002e033b6: hlt    
  0x0000000002e033b7: hlt    
<nmethod compile_id='130' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002e03300' size='736' address='0x0000000002e031d0' relocation_offset='288' insts_offset='304' stub_offset='464' scopes_data_offset='512' scopes_pcs_offset='584' dependencies_offset='728' oops_offset='488' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger getAndIncrement ()I' bytes='40' count='316019' backedge_count='431584' iicount='316019' stamp='8.210'/>
<writer thread='30136'/>
Decoding compiled method 0x0000000002e02c90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;
  #           [sp+0x30]  (sp of caller)
  0x0000000002e02de0: mov    0x8(%rdx),%r10d
  0x0000000002e02de4: shl    $0x3,%r10
  0x0000000002e02de8: cmp    %r10,%rax
  0x0000000002e02deb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e02df1: data16 xchg %ax,%ax
  0x0000000002e02df4: nopl   0x0(%rax,%rax,1)
  0x0000000002e02dfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e02e00: mov    %eax,-0x6000(%rsp)
  0x0000000002e02e07: push   %rbp
  0x0000000002e02e08: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@-1 (line 17)

  0x0000000002e02e0c: mov    %rdx,%r10
  0x0000000002e02e0f: mov    0x178(%rdx),%ebp   ;*getfield count
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@4 (line 17)

  0x0000000002e02e15: test   %ebp,%ebp
  0x0000000002e02e17: jle    0x0000000002e02eb9  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002e02e1d: xor    %ebx,%ebx
  0x0000000002e02e1f: jmp    0x0000000002e02e69
  0x0000000002e02e21: lea    (%r12,%r8,8),%r11  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002e02e25: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e02e30: mov    0xc(%r12,%r8,8),%edx
  0x0000000002e02e35: mov    %edx,%ecx
  0x0000000002e02e37: inc    %ecx
  0x0000000002e02e39: mov    %edx,%eax
  0x0000000002e02e3b: lock cmpxchg %ecx,0xc(%r12,%r8,8)
  0x0000000002e02e42: sete   %r9b
  0x0000000002e02e46: movzbl %r9b,%r9d          ; OopMap{r10=Oop r11=Oop r8=NarrowOop off=106}
                                                ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e02e4a: test   %eax,-0x2202e50(%rip)        # 0x0000000000c00000
                                                ;   {poll}
  0x0000000002e02e50: test   %r9d,%r9d
  0x0000000002e02e53: je     0x0000000002e02e30  ;*iload
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@37 (line 27)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e02e55: mov    0x178(%r10),%r8d   ;*getfield count
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@4 (line 17)

  0x0000000002e02e5c: inc    %ebx               ; OopMap{r10=Oop off=126}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)

  0x0000000002e02e5e: test   %eax,-0x2202e64(%rip)        # 0x0000000000c00000
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)
                                                ;   {poll}
  0x0000000002e02e64: cmp    %r8d,%ebx
  0x0000000002e02e67: jge    0x0000000002e02ea1  ;*aload_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@10 (line 18)

  0x0000000002e02e69: mov    0x17c(%r10),%r8d   ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002e02e70: test   %r8d,%r8d
  0x0000000002e02e73: je     0x0000000002e02e96
  0x0000000002e02e75: mov    0xc(%r12,%r8,8),%eax
  0x0000000002e02e7a: mov    %eax,%r11d
  0x0000000002e02e7d: inc    %r11d
  0x0000000002e02e80: lock cmpxchg %r11d,0xc(%r12,%r8,8)
  0x0000000002e02e87: sete   %r11b
  0x0000000002e02e8b: movzbl %r11b,%r11d        ;*invokevirtual compareAndSwapInt
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@31 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e02e8f: test   %r11d,%r11d
  0x0000000002e02e92: je     0x0000000002e02e21  ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e02e94: jmp    0x0000000002e02e55
  0x0000000002e02e96: mov    $0xfffffff6,%edx
  0x0000000002e02e9b: callq  0x0000000002cf57a0  ; OopMap{off=192}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x0000000002e02ea0: int3                      ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e02ea1: mov    $0xffffff65,%edx
  0x0000000002e02ea6: mov    %r10,%rbp
  0x0000000002e02ea9: mov    %ebx,0x4(%rsp)
  0x0000000002e02ead: mov    %r8d,0x8(%rsp)
  0x0000000002e02eb2: nop
  0x0000000002e02eb3: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop off=216}
                                                ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)
                                                ;   {runtime_call}
  0x0000000002e02eb8: int3                      ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002e02eb9: mov    $0xffffff65,%edx
  0x0000000002e02ebe: mov    %r10,(%rsp)
  0x0000000002e02ec2: nop
  0x0000000002e02ec3: callq  0x0000000002cf57a0  ; OopMap{[0]=Oop off=232}
                                                ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)
                                                ;   {runtime_call}
  0x0000000002e02ec8: int3                      ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002e02ec9: hlt    
  0x0000000002e02eca: hlt    
  0x0000000002e02ecb: hlt    
  0x0000000002e02ecc: hlt    
  0x0000000002e02ecd: hlt    
  0x0000000002e02ece: hlt    
  0x0000000002e02ecf: hlt    
  0x0000000002e02ed0: hlt    
  0x0000000002e02ed1: hlt    
  0x0000000002e02ed2: hlt    
  0x0000000002e02ed3: hlt    
  0x0000000002e02ed4: hlt    
  0x0000000002e02ed5: hlt    
  0x0000000002e02ed6: hlt    
  0x0000000002e02ed7: hlt    
  0x0000000002e02ed8: hlt    
  0x0000000002e02ed9: hlt    
  0x0000000002e02eda: hlt    
  0x0000000002e02edb: hlt    
  0x0000000002e02edc: hlt    
  0x0000000002e02edd: hlt    
  0x0000000002e02ede: hlt    
  0x0000000002e02edf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e02ee0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002e02ee5: callq  0x0000000002e02eea
  0x0000000002e02eea: subq   $0x5,(%rsp)
  0x0000000002e02eef: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e02ef4: hlt    
  0x0000000002e02ef5: hlt    
  0x0000000002e02ef6: hlt    
  0x0000000002e02ef7: hlt    
<nmethod compile_id='129' compiler='C2' level='4' entry='0x0000000002e02de0' size='1144' address='0x0000000002e02c90' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='640' scopes_pcs_offset='800' dependencies_offset='1136' oops_offset='616' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' stamp='8.213'/>
<writer thread='19188'/>
<uncommon_trap thread='19188' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' stamp='17.164'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12'/>
</uncommon_trap>
<make_not_entrant thread='19188' compile_id='128' compile_kind='osr' compiler='C2' level='4' stamp='17.164'/>
<writer thread='19380'/>
<uncommon_trap thread='19380' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='1' state='intrinsic recompiled' stamp='17.197'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='1'/>
</uncommon_trap>
<writer thread='30964'/>
<uncommon_trap thread='30964' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='2' state='intrinsic recompiled' stamp='17.210'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='2'/>
</uncommon_trap>
<writer thread='26472'/>
<uncommon_trap thread='26472' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='3' state='intrinsic recompiled' stamp='17.263'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='3'/>
</uncommon_trap>
<writer thread='12924'/>
<uncommon_trap thread='12924' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='4' state='intrinsic recompiled' stamp='17.358'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='4'/>
</uncommon_trap>
<writer thread='14568'/>
<uncommon_trap thread='14568' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='5' state='intrinsic recompiled' stamp='17.419'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='5'/>
</uncommon_trap>
<writer thread='21024'/>
<uncommon_trap thread='21024' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='6' state='intrinsic recompiled' stamp='18.359'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='6'/>
</uncommon_trap>
<writer thread='16472'/>
<uncommon_trap thread='16472' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='7' state='intrinsic recompiled' stamp='18.363'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='7'/>
</uncommon_trap>
<writer thread='30200'/>
<uncommon_trap thread='30200' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='8' state='intrinsic recompiled' stamp='18.417'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='8'/>
</uncommon_trap>
<writer thread='17680'/>
<uncommon_trap thread='17680' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='9' state='intrinsic recompiled' stamp='18.433'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='9'/>
</uncommon_trap>
<writer thread='17292'/>
<uncommon_trap thread='17292' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='10' state='intrinsic recompiled' stamp='18.433'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='10'/>
</uncommon_trap>
<writer thread='26548'/>
<uncommon_trap thread='26548' reason='unstable_if' action='reinterpret' compile_id='128' compile_kind='osr' compiler='C2' level='4' count='11' state='intrinsic recompiled' stamp='18.434'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='11'/>
</uncommon_trap>
<writer thread='22236'/>
Decoding compiled method 0x0000000002e04650:
Code:
[Entry Point]
  # {method} {0x000000001bc9c5c8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000002e047c0: mov    0x8(%rdx),%r10d
  0x0000000002e047c4: shl    $0x3,%r10
  0x0000000002e047c8: cmp    %r10,%rax
  0x0000000002e047cb: je     0x0000000002e047d8
  0x0000000002e047d1: jmpq   0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e047d6: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000002e047d8: mov    %eax,-0x6000(%rsp)
  0x0000000002e047df: push   %rbp
  0x0000000002e047e0: mov    %rsp,%rbp
  0x0000000002e047e3: sub    $0x60,%rsp
  0x0000000002e047e7: movabs $0x76b781c08,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/Thread&apos;)}
  0x0000000002e047f1: mov    %r14,0x50(%rsp)
  0x0000000002e047f6: lea    0x50(%rsp),%r14
  0x0000000002e047fb: mov    %r14,%rdx          ; OopMap{[80]=Oop off=62}
  0x0000000002e047fe: movabs $0x2e047fe,%r10    ;   {section_word}
  0x0000000002e04808: mov    %r10,0x1e0(%r15)
  0x0000000002e0480f: mov    %rsp,0x1d8(%r15)
  0x0000000002e04816: cmpb   $0x0,0x530e6f64(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002e0481d: je     0x0000000002e0485d
  0x0000000002e04823: push   %rdx
  0x0000000002e04824: movabs $0x1bc9c5c0,%rdx   ;   {metadata({method} {0x000000001bc9c5c8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x0000000002e0482e: mov    %r15,%rcx
  0x0000000002e04831: sub    $0x20,%rsp
  0x0000000002e04835: test   $0xf,%esp
  0x0000000002e0483b: je     0x0000000002e04853
  0x0000000002e04841: sub    $0x8,%rsp
  0x0000000002e04845: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002e0484a: add    $0x8,%rsp
  0x0000000002e0484e: jmpq   0x0000000002e04858
  0x0000000002e04853: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002e04858: add    $0x20,%rsp
  0x0000000002e0485c: pop    %rdx
  0x0000000002e0485d: lea    0x1f8(%r15),%rcx
  0x0000000002e04864: movl   $0x4,0x270(%r15)
  0x0000000002e0486f: callq  0x00000000556c09bc  ;   {runtime_call}
  0x0000000002e04874: vzeroupper 
  0x0000000002e04877: movl   $0x5,0x270(%r15)
  0x0000000002e04882: mov    %r15d,%ecx
  0x0000000002e04885: shr    $0x4,%ecx
  0x0000000002e04888: and    $0xffc,%ecx
  0x0000000002e0488e: movabs $0xc10000,%r10     ;   {external_word}
  0x0000000002e04898: mov    %ecx,(%r10,%rcx,1)
  0x0000000002e0489c: cmpl   $0x0,0x530e7aaa(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x0000000002e048a6: jne    0x0000000002e048ba
  0x0000000002e048ac: cmpl   $0x0,0x30(%r15)
  0x0000000002e048b4: je     0x0000000002e048db
  0x0000000002e048ba: mov    %rax,-0x8(%rbp)
  0x0000000002e048be: mov    %r15,%rcx
  0x0000000002e048c1: mov    %rsp,%r12
  0x0000000002e048c4: sub    $0x20,%rsp
  0x0000000002e048c8: and    $0xfffffffffffffff0,%rsp
  0x0000000002e048cc: callq  0x00000000559236e0  ;   {runtime_call}
  0x0000000002e048d1: mov    %r12,%rsp
  0x0000000002e048d4: xor    %r12,%r12
  0x0000000002e048d7: mov    -0x8(%rbp),%rax
  0x0000000002e048db: movl   $0x8,0x270(%r15)
  0x0000000002e048e6: cmpl   $0x1,0x29c(%r15)
  0x0000000002e048f1: je     0x0000000002e04995
  0x0000000002e048f7: cmpb   $0x0,0x530e6e83(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x0000000002e048fe: je     0x0000000002e04944
  0x0000000002e04904: mov    %rax,-0x8(%rbp)
  0x0000000002e04908: movabs $0x1bc9c5c0,%rdx   ;   {metadata({method} {0x000000001bc9c5c8} &apos;currentThread&apos; &apos;()Ljava/lang/Thread;&apos; in &apos;java/lang/Thread&apos;)}
  0x0000000002e04912: mov    %r15,%rcx
  0x0000000002e04915: sub    $0x20,%rsp
  0x0000000002e04919: test   $0xf,%esp
  0x0000000002e0491f: je     0x0000000002e04937
  0x0000000002e04925: sub    $0x8,%rsp
  0x0000000002e04929: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002e0492e: add    $0x8,%rsp
  0x0000000002e04932: jmpq   0x0000000002e0493c
  0x0000000002e04937: callq  0x000000005590c580  ;   {runtime_call}
  0x0000000002e0493c: add    $0x20,%rsp
  0x0000000002e04940: mov    -0x8(%rbp),%rax
  0x0000000002e04944: movabs $0x0,%r10
  0x0000000002e0494e: mov    %r10,0x1d8(%r15)
  0x0000000002e04955: movabs $0x0,%r10
  0x0000000002e0495f: mov    %r10,0x1e0(%r15)
  0x0000000002e04966: test   %rax,%rax
  0x0000000002e04969: je     0x0000000002e04972
  0x0000000002e0496f: mov    (%rax),%rax
  0x0000000002e04972: mov    0x38(%r15),%rcx
  0x0000000002e04976: movl   $0x0,0x100(%rcx)
  0x0000000002e04980: leaveq 
  0x0000000002e04981: cmpq   $0x0,0x8(%r15)
  0x0000000002e04989: jne    0x0000000002e04990
  0x0000000002e0498f: retq   
  0x0000000002e04990: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000002e04995: mov    %rax,-0x8(%rbp)
  0x0000000002e04999: mov    %rsp,%r12
  0x0000000002e0499c: sub    $0x20,%rsp
  0x0000000002e049a0: and    $0xfffffffffffffff0,%rsp
  0x0000000002e049a4: callq  0x000000005590c5a0  ;   {runtime_call}
  0x0000000002e049a9: mov    %r12,%rsp
  0x0000000002e049ac: xor    %r12,%r12
  0x0000000002e049af: mov    -0x8(%rbp),%rax
  0x0000000002e049b3: jmpq   0x0000000002e048f7
<nmethod compile_id='131' compile_kind='c2n' level='0' entry='0x0000000002e047c0' size='872' address='0x0000000002e04650' relocation_offset='288' consts_offset='872' insts_offset='368' method='java/lang/Thread currentThread ()Ljava/lang/Thread;' bytes='0' count='512' iicount='512' stamp='18.436'/>
<task_queued compile_id='132' method='java/lang/Thread getThreadGroup ()Ljava/lang/ThreadGroup;' bytes='5' count='128' iicount='128' level='1' stamp='18.436' comment='tiered' hot_count='128'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002e04350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bc9dff8} &apos;getThreadGroup&apos; &apos;()Ljava/lang/ThreadGroup;&apos; in &apos;java/lang/Thread&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000002e044a0: mov    0x8(%rdx),%r10d
  0x0000000002e044a4: shl    $0x3,%r10
  0x0000000002e044a8: cmp    %rax,%r10
  0x0000000002e044ab: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e044b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e044bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e044c0: mov    %eax,-0x6000(%rsp)
  0x0000000002e044c7: push   %rbp
  0x0000000002e044c8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.Thread::getThreadGroup@0 (line 1150)

  0x0000000002e044cc: mov    0x44(%rdx),%eax
  0x0000000002e044cf: shl    $0x3,%rax          ;*getfield group
                                                ; - java.lang.Thread::getThreadGroup@1 (line 1150)

  0x0000000002e044d3: add    $0x30,%rsp
  0x0000000002e044d7: pop    %rbp
  0x0000000002e044d8: test   %eax,-0x22043de(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e044de: retq   
  0x0000000002e044df: nop
  0x0000000002e044e0: nop
  0x0000000002e044e1: mov    0x2a8(%r15),%rax
  0x0000000002e044e8: movabs $0x0,%r10
  0x0000000002e044f2: mov    %r10,0x2a8(%r15)
  0x0000000002e044f9: movabs $0x0,%r10
  0x0000000002e04503: mov    %r10,0x2b0(%r15)
  0x0000000002e0450a: add    $0x30,%rsp
  0x0000000002e0450e: pop    %rbp
  0x0000000002e0450f: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002e04514: hlt    
  0x0000000002e04515: hlt    
  0x0000000002e04516: hlt    
  0x0000000002e04517: hlt    
  0x0000000002e04518: hlt    
  0x0000000002e04519: hlt    
  0x0000000002e0451a: hlt    
  0x0000000002e0451b: hlt    
  0x0000000002e0451c: hlt    
  0x0000000002e0451d: hlt    
  0x0000000002e0451e: hlt    
  0x0000000002e0451f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e04520: callq  0x0000000002daf520  ;   {no_reloc}
  0x0000000002e04525: mov    %rsp,-0x28(%rsp)
  0x0000000002e0452a: sub    $0x80,%rsp
  0x0000000002e04531: mov    %rax,0x78(%rsp)
  0x0000000002e04536: mov    %rcx,0x70(%rsp)
  0x0000000002e0453b: mov    %rdx,0x68(%rsp)
  0x0000000002e04540: mov    %rbx,0x60(%rsp)
  0x0000000002e04545: mov    %rbp,0x50(%rsp)
  0x0000000002e0454a: mov    %rsi,0x48(%rsp)
  0x0000000002e0454f: mov    %rdi,0x40(%rsp)
  0x0000000002e04554: mov    %r8,0x38(%rsp)
  0x0000000002e04559: mov    %r9,0x30(%rsp)
  0x0000000002e0455e: mov    %r10,0x28(%rsp)
  0x0000000002e04563: mov    %r11,0x20(%rsp)
  0x0000000002e04568: mov    %r12,0x18(%rsp)
  0x0000000002e0456d: mov    %r13,0x10(%rsp)
  0x0000000002e04572: mov    %r14,0x8(%rsp)
  0x0000000002e04577: mov    %r15,(%rsp)
  0x0000000002e0457b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002e04585: movabs $0x2e04525,%rdx    ;   {internal_word}
  0x0000000002e0458f: mov    %rsp,%r8
  0x0000000002e04592: and    $0xfffffffffffffff0,%rsp
  0x0000000002e04596: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002e0459b: hlt    
[Deopt Handler Code]
  0x0000000002e0459c: movabs $0x2e0459c,%r10    ;   {section_word}
  0x0000000002e045a6: push   %r10
  0x0000000002e045a8: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e045ad: hlt    
  0x0000000002e045ae: hlt    
  0x0000000002e045af: hlt    
<nmethod compile_id='132' compiler='C1' level='1' entry='0x0000000002e044a0' size='704' address='0x0000000002e04350' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/lang/Thread getThreadGroup ()Ljava/lang/ThreadGroup;' bytes='5' count='137' iicount='137' stamp='18.439'/>
<writer thread='9476'/>
<uncommon_trap thread='9476' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='12' state='intrinsic recompiled' stamp='28.419'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='1' unstable_if_traps='12'/>
</uncommon_trap>
<make_not_entrant thread='9476' compile_id='129' compiler='C2' level='4' stamp='28.419'/>
<writer thread='31152'/>
<uncommon_trap thread='31152' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='13' state='intrinsic recompiled' recompiles2='1' stamp='28.427'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='13' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='20464'/>
<uncommon_trap thread='20464' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='14' state='intrinsic recompiled' recompiles2='1' stamp='28.441'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='14' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='14236'/>
<uncommon_trap thread='14236' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='15' state='intrinsic recompiled' recompiles2='1' stamp='28.506'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='15' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='24372'/>
<uncommon_trap thread='24372' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='16' state='intrinsic recompiled' recompiles2='1' stamp='28.555'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='16' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='1220'/>
<uncommon_trap thread='1220' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='17' state='intrinsic recompiled' recompiles2='1' stamp='28.565'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='17' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='8092'/>
<uncommon_trap thread='8092' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='18' state='intrinsic recompiled' recompiles2='1' stamp='29.980'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='18' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='25012'/>
<uncommon_trap thread='25012' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='19' state='intrinsic recompiled' recompiles2='1' stamp='30.002'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='19' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='18428'/>
<uncommon_trap thread='18428' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='20' state='intrinsic recompiled' recompiles2='1' stamp='30.032'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='20' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='29888'/>
<uncommon_trap thread='29888' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='21' state='intrinsic recompiled' recompiles2='1' stamp='30.056'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='21' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='21112'/>
<uncommon_trap thread='21112' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='22' state='intrinsic recompiled' recompiles2='1' stamp='30.063'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='22' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='18300'/>
<uncommon_trap thread='18300' reason='unstable_if' action='reinterpret' compile_id='129' compiler='C2' level='4' count='23' state='intrinsic recompiled' recompiles2='1' stamp='30.064'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' decompiles='2' unstable_if_traps='23' overflow_recompiles='1'/>
</uncommon_trap>
<writer thread='22236'/>
<task_queued compile_id='133' method='java/nio/ByteBuffer arrayOffset ()I' bytes='35' count='256' iicount='256' level='3' stamp='30.064' comment='tiered' hot_count='256'/>
<writer thread='8364'/>
<task_queued compile_id='134' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger getAndIncrement ()I' bytes='40' count='316490' backedge_count='432054' iicount='316490' stamp='30.064' comment='tiered' hot_count='316490'/>
<writer thread='16868'/>
<task_queued compile_id='135' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='14' backedge_count='320820' iicount='14' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' osr_bci='2' level='3' stamp='30.064' comment='tiered' hot_count='320558'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002e03cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001bdd6cf0} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;
  #           [sp+0x50]  (sp of caller)
  0x0000000002e03e60: mov    0x8(%rdx),%r10d
  0x0000000002e03e64: shl    $0x3,%r10
  0x0000000002e03e68: cmp    %rax,%r10
  0x0000000002e03e6b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e03e71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e03e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e03e80: mov    %eax,-0x6000(%rsp)
  0x0000000002e03e87: push   %rbp
  0x0000000002e03e88: sub    $0x40,%rsp
  0x0000000002e03e8c: movabs $0x1bffaf30,%rax   ;   {metadata(method data for {method} {0x000000001bdd6cf0} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002e03e96: mov    0xdc(%rax),%esi
  0x0000000002e03e9c: add    $0x8,%esi
  0x0000000002e03e9f: mov    %esi,0xdc(%rax)
  0x0000000002e03ea5: movabs $0x1bdd6ce8,%rax   ;   {metadata({method} {0x000000001bdd6cf0} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002e03eaf: and    $0x1ff8,%esi
  0x0000000002e03eb5: cmp    $0x0,%esi
  0x0000000002e03eb8: je     0x0000000002e03fce  ;*aload_0
                                                ; - java.nio.ByteBuffer::arrayOffset@0 (line 1021)

  0x0000000002e03ebe: mov    0x2c(%rdx),%eax
  0x0000000002e03ec1: shl    $0x3,%rax          ;*getfield hb
                                                ; - java.nio.ByteBuffer::arrayOffset@1 (line 1021)

  0x0000000002e03ec5: cmp    $0x0,%rax
  0x0000000002e03ec9: movabs $0x1bffaf30,%rax   ;   {metadata(method data for {method} {0x000000001bdd6cf0} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002e03ed3: movabs $0x108,%rsi
  0x0000000002e03edd: jne    0x0000000002e03eed
  0x0000000002e03ee3: movabs $0x118,%rsi
  0x0000000002e03eed: mov    (%rax,%rsi,1),%rdi
  0x0000000002e03ef1: lea    0x1(%rdi),%rdi
  0x0000000002e03ef5: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e03ef9: je     0x0000000002e03f8e  ;*ifnonnull
                                                ; - java.nio.ByteBuffer::arrayOffset@4 (line 1021)

  0x0000000002e03eff: movsbl 0x28(%rdx),%eax    ;*getfield isReadOnly
                                                ; - java.nio.ByteBuffer::arrayOffset@16 (line 1023)

  0x0000000002e03f03: cmp    $0x0,%eax
  0x0000000002e03f06: movabs $0x1bffaf30,%rax   ;   {metadata(method data for {method} {0x000000001bdd6cf0} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002e03f10: movabs $0x138,%rsi
  0x0000000002e03f1a: je     0x0000000002e03f2a
  0x0000000002e03f20: movabs $0x148,%rsi
  0x0000000002e03f2a: mov    (%rax,%rsi,1),%rdi
  0x0000000002e03f2e: lea    0x1(%rdi),%rdi
  0x0000000002e03f32: mov    %rdi,(%rax,%rsi,1)
  0x0000000002e03f36: jne    0x0000000002e03f4b  ;*ifeq
                                                ; - java.nio.ByteBuffer::arrayOffset@19 (line 1023)

  0x0000000002e03f3c: mov    0x24(%rdx),%eax    ;*getfield offset
                                                ; - java.nio.ByteBuffer::arrayOffset@31 (line 1025)

  0x0000000002e03f3f: add    $0x40,%rsp
  0x0000000002e03f43: pop    %rbp
  0x0000000002e03f44: test   %eax,-0x2203e4a(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e03f4a: retq                      ;*ireturn
                                                ; - java.nio.ByteBuffer::arrayOffset@34 (line 1025)

  0x0000000002e03f4b: nopl   0x0(%rax,%rax,1)
  0x0000000002e03f50: jmpq   0x0000000002e03ff4  ;   {no_reloc}
  0x0000000002e03f55: add    %al,(%rax)
  0x0000000002e03f57: add    %al,(%rax)
  0x0000000002e03f59: add    %ch,%cl
  0x0000000002e03f5b: lahf   
  0x0000000002e03f5c: add    %al,(%rax)
  0x0000000002e03f5e: add    %cl,-0x75(%rax)    ;*new  ; - java.nio.ByteBuffer::arrayOffset@22 (line 1024)

  0x0000000002e03f61: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001bdd6cf0} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002e03f64: xor    %ch,0x1bff(%rdi)
  0x0000000002e03f6a: add    %al,(%rax)
  0x0000000002e03f6c: addq   $0x1,0x158(%rsi)
  0x0000000002e03f74: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@26 (line 1024)

  0x0000000002e03f77: mov    %rax,0x20(%rsp)
  0x0000000002e03f7c: nop
  0x0000000002e03f7d: nop
  0x0000000002e03f7e: nop
  0x0000000002e03f7f: callq  0x0000000002cf61a0  ; OopMap{[32]=Oop off=292}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@26 (line 1024)
                                                ;   {optimized virtual_call}
  0x0000000002e03f84: mov    0x20(%rsp),%rax
  0x0000000002e03f89: jmpq   0x0000000002e0405c  ;*athrow
                                                ; - java.nio.ByteBuffer::arrayOffset@29 (line 1024)

  0x0000000002e03f8e: xchg   %ax,%ax
  0x0000000002e03f90: jmpq   0x0000000002e0401a  ;   {no_reloc}
  0x0000000002e03f95: add    %al,(%rax)
  0x0000000002e03f97: add    %al,(%rax)
  0x0000000002e03f99: add    %ch,%cl
  0x0000000002e03f9b: test   %eax,(%rax)
  0x0000000002e03f9d: add    %al,(%rax)         ;*new  ; - java.nio.ByteBuffer::arrayOffset@7 (line 1022)

  0x0000000002e03f9f: mov    %rax,%rdx
  0x0000000002e03fa2: movabs $0x1bffaf30,%rsi   ;   {metadata(method data for {method} {0x000000001bdd6cf0} &apos;arrayOffset&apos; &apos;()I&apos; in &apos;java/nio/ByteBuffer&apos;)}
  0x0000000002e03fac: addq   $0x1,0x128(%rsi)
  0x0000000002e03fb4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@11 (line 1022)

  0x0000000002e03fb7: mov    %rax,0x28(%rsp)
  0x0000000002e03fbc: nop
  0x0000000002e03fbd: nop
  0x0000000002e03fbe: nop
  0x0000000002e03fbf: callq  0x0000000002cf61a0  ; OopMap{[40]=Oop off=356}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.nio.ByteBuffer::arrayOffset@11 (line 1022)
                                                ;   {optimized virtual_call}
  0x0000000002e03fc4: mov    0x28(%rsp),%rax
  0x0000000002e03fc9: jmpq   0x0000000002e0405c
  0x0000000002e03fce: mov    %rax,0x8(%rsp)
  0x0000000002e03fd3: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e03fdb: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=384}
                                                ;*synchronization entry
                                                ; - java.nio.ByteBuffer::arrayOffset@-1 (line 1021)
                                                ;   {runtime_call}
  0x0000000002e03fe0: jmpq   0x0000000002e03ebe
  0x0000000002e03fe5: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e03fef: mov    $0xa050f00,%eax
  0x0000000002e03ff4: callq  0x0000000002db0ca0  ; OopMap{off=409}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@22 (line 1024)
                                                ;   {runtime_call}
  0x0000000002e03ff9: jmpq   0x0000000002e03f50
  0x0000000002e03ffe: mov    %rdx,%rdx
  0x0000000002e04001: callq  0x0000000002dadb20  ; OopMap{off=422}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@22 (line 1024)
                                                ;   {runtime_call}
  0x0000000002e04006: jmpq   0x0000000002e03f5f
  0x0000000002e0400b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000002e04015: mov    $0xa050f00,%eax
  0x0000000002e0401a: callq  0x0000000002db0ca0  ; OopMap{off=447}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@7 (line 1022)
                                                ;   {runtime_call}
  0x0000000002e0401f: jmpq   0x0000000002e03f90
  0x0000000002e04024: mov    %rdx,%rdx
  0x0000000002e04027: callq  0x0000000002dadb20  ; OopMap{off=460}
                                                ;*new  ; - java.nio.ByteBuffer::arrayOffset@7 (line 1022)
                                                ;   {runtime_call}
  0x0000000002e0402c: jmpq   0x0000000002e03f9f
  0x0000000002e04031: nop
  0x0000000002e04032: nop
  0x0000000002e04033: mov    0x2a8(%r15),%rax
  0x0000000002e0403a: movabs $0x0,%r10
  0x0000000002e04044: mov    %r10,0x2a8(%r15)
  0x0000000002e0404b: movabs $0x0,%r10
  0x0000000002e04055: mov    %r10,0x2b0(%r15)
  0x0000000002e0405c: add    $0x40,%rsp
  0x0000000002e04060: pop    %rbp
  0x0000000002e04061: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002e04066: hlt    
  0x0000000002e04067: hlt    
  0x0000000002e04068: hlt    
  0x0000000002e04069: hlt    
  0x0000000002e0406a: hlt    
  0x0000000002e0406b: hlt    
  0x0000000002e0406c: hlt    
  0x0000000002e0406d: hlt    
  0x0000000002e0406e: hlt    
  0x0000000002e0406f: hlt    
  0x0000000002e04070: hlt    
  0x0000000002e04071: hlt    
  0x0000000002e04072: hlt    
  0x0000000002e04073: hlt    
  0x0000000002e04074: hlt    
  0x0000000002e04075: hlt    
  0x0000000002e04076: hlt    
  0x0000000002e04077: hlt    
  0x0000000002e04078: hlt    
  0x0000000002e04079: hlt    
  0x0000000002e0407a: hlt    
  0x0000000002e0407b: hlt    
  0x0000000002e0407c: hlt    
  0x0000000002e0407d: hlt    
  0x0000000002e0407e: hlt    
  0x0000000002e0407f: hlt    
[Stub Code]
  0x0000000002e04080: nop                       ;   {no_reloc}
  0x0000000002e04081: nop
  0x0000000002e04082: nop
  0x0000000002e04083: nop
  0x0000000002e04084: nop
  0x0000000002e04085: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0408f: jmpq   0x0000000002e0408f  ;   {runtime_call}
  0x0000000002e04094: nop
  0x0000000002e04095: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0409f: jmpq   0x0000000002e0409f  ;   {runtime_call}
[Exception Handler]
  0x0000000002e040a4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002e040a9: mov    %rsp,-0x28(%rsp)
  0x0000000002e040ae: sub    $0x80,%rsp
  0x0000000002e040b5: mov    %rax,0x78(%rsp)
  0x0000000002e040ba: mov    %rcx,0x70(%rsp)
  0x0000000002e040bf: mov    %rdx,0x68(%rsp)
  0x0000000002e040c4: mov    %rbx,0x60(%rsp)
  0x0000000002e040c9: mov    %rbp,0x50(%rsp)
  0x0000000002e040ce: mov    %rsi,0x48(%rsp)
  0x0000000002e040d3: mov    %rdi,0x40(%rsp)
  0x0000000002e040d8: mov    %r8,0x38(%rsp)
  0x0000000002e040dd: mov    %r9,0x30(%rsp)
  0x0000000002e040e2: mov    %r10,0x28(%rsp)
  0x0000000002e040e7: mov    %r11,0x20(%rsp)
  0x0000000002e040ec: mov    %r12,0x18(%rsp)
  0x0000000002e040f1: mov    %r13,0x10(%rsp)
  0x0000000002e040f6: mov    %r14,0x8(%rsp)
  0x0000000002e040fb: mov    %r15,(%rsp)
  0x0000000002e040ff: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002e04109: movabs $0x2e040a9,%rdx    ;   {internal_word}
  0x0000000002e04113: mov    %rsp,%r8
  0x0000000002e04116: and    $0xfffffffffffffff0,%rsp
  0x0000000002e0411a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002e0411f: hlt    
[Deopt Handler Code]
  0x0000000002e04120: movabs $0x2e04120,%r10    ;   {section_word}
  0x0000000002e0412a: push   %r10
  0x0000000002e0412c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e04131: hlt    
  0x0000000002e04132: hlt    
  0x0000000002e04133: hlt    
  0x0000000002e04134: hlt    
  0x0000000002e04135: hlt    
  0x0000000002e04136: hlt    
  0x0000000002e04137: hlt    
<nmethod compile_id='133' compiler='C1' level='3' entry='0x0000000002e03e60' size='1600' address='0x0000000002e03cd0' relocation_offset='288' insts_offset='400' stub_offset='944' scopes_data_offset='1136' scopes_pcs_offset='1256' dependencies_offset='1592' method='java/nio/ByteBuffer arrayOffset ()I' bytes='35' count='262' iicount='262' stamp='30.070'/>
Decoding compiled method 0x0000000002e09b50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;
  0x0000000002e09d00: mov    0x8(%rdx),%r10d
  0x0000000002e09d04: shl    $0x3,%r10
  0x0000000002e09d08: cmp    %rax,%r10
  0x0000000002e09d0b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e09d11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e09d1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e09d20: mov    %eax,-0x6000(%rsp)
  0x0000000002e09d27: push   %rbp
  0x0000000002e09d28: sub    $0x70,%rsp
  0x0000000002e09d2c: movabs $0x1c074b88,%rcx   ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09d36: mov    0xdc(%rcx),%esi
  0x0000000002e09d3c: add    $0x8,%esi
  0x0000000002e09d3f: mov    %esi,0xdc(%rcx)
  0x0000000002e09d45: movabs $0x1c074820,%rcx   ;   {metadata({method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09d4f: and    $0x1ff8,%esi
  0x0000000002e09d55: cmp    $0x0,%esi
  0x0000000002e09d58: je     0x0000000002e0a0ca  ;*iconst_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@0 (line 17)

  0x0000000002e09d5e: mov    $0x0,%esi
  0x0000000002e09d63: jmpq   0x0000000002e09e72  ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)

  0x0000000002e09d68: mov    %esi,0x4c(%rsp)
  0x0000000002e09d6c: mov    0x17c(%rdx),%edi
  0x0000000002e09d72: shl    $0x3,%rdi          ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002e09d76: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x0000000002e0a0e1
  0x0000000002e09d79: mov    %rdi,%rbx
  0x0000000002e09d7c: movabs $0x1c074b88,%rax   ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09d86: mov    0x8(%rbx),%ebx
  0x0000000002e09d89: shl    $0x3,%rbx
  0x0000000002e09d8d: cmp    0x130(%rax),%rbx
  0x0000000002e09d94: jne    0x0000000002e09da3
  0x0000000002e09d96: addq   $0x1,0x138(%rax)
  0x0000000002e09d9e: jmpq   0x0000000002e09e09
  0x0000000002e09da3: cmp    0x140(%rax),%rbx
  0x0000000002e09daa: jne    0x0000000002e09db9
  0x0000000002e09dac: addq   $0x1,0x148(%rax)
  0x0000000002e09db4: jmpq   0x0000000002e09e09
  0x0000000002e09db9: cmpq   $0x0,0x130(%rax)
  0x0000000002e09dc4: jne    0x0000000002e09ddd
  0x0000000002e09dc6: mov    %rbx,0x130(%rax)
  0x0000000002e09dcd: movq   $0x1,0x138(%rax)
  0x0000000002e09dd8: jmpq   0x0000000002e09e09
  0x0000000002e09ddd: cmpq   $0x0,0x140(%rax)
  0x0000000002e09de8: jne    0x0000000002e09e01
  0x0000000002e09dea: mov    %rbx,0x140(%rax)
  0x0000000002e09df1: movq   $0x1,0x148(%rax)
  0x0000000002e09dfc: jmpq   0x0000000002e09e09
  0x0000000002e09e01: addq   $0x1,0x128(%rax)
  0x0000000002e09e09: mov    %rdx,0x58(%rsp)
  0x0000000002e09e0e: mov    %rdi,%rdx          ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e09e11: nop
  0x0000000002e09e12: nop
  0x0000000002e09e13: nop
  0x0000000002e09e14: nop
  0x0000000002e09e15: nop
  0x0000000002e09e16: nop
  0x0000000002e09e17: callq  0x0000000002cf61a0  ; OopMap{[88]=Oop off=284}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)
                                                ;   {optimized virtual_call}
  0x0000000002e09e1c: mov    0x4c(%rsp),%esi
  0x0000000002e09e20: inc    %esi
  0x0000000002e09e22: movabs $0x1c074b88,%r8    ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09e2c: mov    0xe0(%r8),%edx
  0x0000000002e09e33: add    $0x8,%edx
  0x0000000002e09e36: mov    %edx,0xe0(%r8)
  0x0000000002e09e3d: movabs $0x1c074820,%r8    ;   {metadata({method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09e47: and    $0xfff8,%edx
  0x0000000002e09e4d: cmp    $0x0,%edx
  0x0000000002e09e50: je     0x0000000002e0a0e6  ; OopMap{[88]=Oop off=342}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)

  0x0000000002e09e56: test   %eax,-0x2209d5c(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002e09e5c: movabs $0x1c074b88,%r8    ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09e66: incl   0x158(%r8)         ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)

  0x0000000002e09e6d: mov    0x58(%rsp),%rdx
  0x0000000002e09e72: mov    0x178(%rdx),%edi   ;*getfield count
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@4 (line 17)
                                                ; implicit exception: dispatches to 0x0000000002e0a0fd
  0x0000000002e09e78: cmp    %edi,%esi
  0x0000000002e09e7a: movabs $0x1c074b88,%rdi   ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09e84: movabs $0x108,%rbx
  0x0000000002e09e8e: jge    0x0000000002e09e9e
  0x0000000002e09e94: movabs $0x118,%rbx
  0x0000000002e09e9e: mov    (%rdi,%rbx,1),%rax
  0x0000000002e09ea2: lea    0x1(%rax),%rax
  0x0000000002e09ea6: mov    %rax,(%rdi,%rbx,1)
  0x0000000002e09eaa: jl     0x0000000002e09d68  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002e09eb0: mov    0x180(%rdx),%r8d
  0x0000000002e09eb7: shl    $0x3,%r8           ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@25 (line 20)

  0x0000000002e09ebb: cmp    (%r8),%rax         ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ; implicit exception: dispatches to 0x0000000002e0a102
  0x0000000002e09ebe: mov    %r8,%rdx
  0x0000000002e09ec1: movabs $0x1c074b88,%rsi   ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09ecb: addq   $0x1,0x180(%rsi)
  0x0000000002e09ed3: movabs $0x1bffb0b0,%rdx   ;   {metadata(method data for {method} {0x000000001bf797e0} &apos;countDown&apos; &apos;()V&apos; in &apos;java/util/concurrent/CountDownLatch&apos;)}
  0x0000000002e09edd: mov    0xdc(%rdx),%esi
  0x0000000002e09ee3: add    $0x8,%esi
  0x0000000002e09ee6: mov    %esi,0xdc(%rdx)
  0x0000000002e09eec: movabs $0x1bf797d8,%rdx   ;   {metadata({method} {0x000000001bf797e0} &apos;countDown&apos; &apos;()V&apos; in &apos;java/util/concurrent/CountDownLatch&apos;)}
  0x0000000002e09ef6: and    $0x7ffff8,%esi
  0x0000000002e09efc: cmp    $0x0,%esi
  0x0000000002e09eff: je     0x0000000002e0a107
  0x0000000002e09f05: mov    0xc(%r8),%esi
  0x0000000002e09f09: shl    $0x3,%rsi          ;*getfield sync
                                                ; - java.util.concurrent.CountDownLatch::countDown@1 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e09f0d: cmp    (%rsi),%rax        ;*invokevirtual releaseShared
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ; implicit exception: dispatches to 0x0000000002e0a11e
  0x0000000002e09f10: mov    %rsi,%r8
  0x0000000002e09f13: movabs $0x1bffb0b0,%rdx   ;   {metadata(method data for {method} {0x000000001bf797e0} &apos;countDown&apos; &apos;()V&apos; in &apos;java/util/concurrent/CountDownLatch&apos;)}
  0x0000000002e09f1d: mov    0x8(%r8),%r8d
  0x0000000002e09f21: shl    $0x3,%r8
  0x0000000002e09f25: cmp    0x110(%rdx),%r8
  0x0000000002e09f2c: jne    0x0000000002e09f3b
  0x0000000002e09f2e: addq   $0x1,0x118(%rdx)
  0x0000000002e09f36: jmpq   0x0000000002e09fa1
  0x0000000002e09f3b: cmp    0x120(%rdx),%r8
  0x0000000002e09f42: jne    0x0000000002e09f51
  0x0000000002e09f44: addq   $0x1,0x128(%rdx)
  0x0000000002e09f4c: jmpq   0x0000000002e09fa1
  0x0000000002e09f51: cmpq   $0x0,0x110(%rdx)
  0x0000000002e09f5c: jne    0x0000000002e09f75
  0x0000000002e09f5e: mov    %r8,0x110(%rdx)
  0x0000000002e09f65: movq   $0x1,0x118(%rdx)
  0x0000000002e09f70: jmpq   0x0000000002e09fa1
  0x0000000002e09f75: cmpq   $0x0,0x120(%rdx)
  0x0000000002e09f80: jne    0x0000000002e09f99
  0x0000000002e09f82: mov    %r8,0x120(%rdx)
  0x0000000002e09f89: movq   $0x1,0x128(%rdx)
  0x0000000002e09f94: jmpq   0x0000000002e09fa1
  0x0000000002e09f99: addq   $0x1,0x108(%rdx)
  0x0000000002e09fa1: movabs $0x1bffb228,%r8    ;   {metadata(method data for {method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e09fab: mov    0xdc(%r8),%edx
  0x0000000002e09fb2: add    $0x8,%edx
  0x0000000002e09fb5: mov    %edx,0xdc(%r8)
  0x0000000002e09fbc: movabs $0x1bf7fd90,%r8    ;   {metadata({method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e09fc6: and    $0x7ffff8,%edx
  0x0000000002e09fcc: cmp    $0x0,%edx
  0x0000000002e09fcf: je     0x0000000002e0a123
  0x0000000002e09fd5: mov    %rsi,%r8
  0x0000000002e09fd8: movabs $0x1bffb228,%rdx   ;   {metadata(method data for {method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e09fe2: movabs $0x7c005fcf0,%r10  ;   {metadata(&apos;java/util/concurrent/CountDownLatch$Sync&apos;)}
  0x0000000002e09fec: mov    %r10,0x110(%rdx)
  0x0000000002e09ff3: addq   $0x1,0x118(%rdx)
  0x0000000002e09ffb: mov    $0x1,%r8d
  0x0000000002e0a001: mov    %rsi,%rdx          ;*invokevirtual tryReleaseShared
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1341)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e0a004: mov    %rsi,0x60(%rsp)
  0x0000000002e0a009: nop
  0x0000000002e0a00a: nop
  0x0000000002e0a00b: nop
  0x0000000002e0a00c: nop
  0x0000000002e0a00d: nop
  0x0000000002e0a00e: nop
  0x0000000002e0a00f: callq  0x0000000002cf61a0  ; OopMap{[96]=Oop off=788}
                                                ;*invokevirtual tryReleaseShared
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1341)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {optimized virtual_call}
  0x0000000002e0a014: cmp    $0x0,%eax
  0x0000000002e0a017: movabs $0x1bffb228,%rdx   ;   {metadata(method data for {method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e0a021: movabs $0x138,%rsi
  0x0000000002e0a02b: je     0x0000000002e0a03b
  0x0000000002e0a031: movabs $0x148,%rsi
  0x0000000002e0a03b: mov    (%rdx,%rsi,1),%rdi
  0x0000000002e0a03f: lea    0x1(%rdi),%rdi
  0x0000000002e0a043: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002e0a047: je     0x0000000002e0a085  ;*ifeq
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@5 (line 1341)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e0a04d: mov    0x60(%rsp),%rsi
  0x0000000002e0a052: mov    %rsi,%rdx
  0x0000000002e0a055: movabs $0x1bffb228,%rdi   ;   {metadata(method data for {method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e0a05f: addq   $0x1,0x158(%rdi)
  0x0000000002e0a067: mov    %rsi,%rdx          ;*invokespecial doReleaseShared
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@9 (line 1342)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e0a06a: nop
  0x0000000002e0a06b: nop
  0x0000000002e0a06c: nop
  0x0000000002e0a06d: nop
  0x0000000002e0a06e: nop
  0x0000000002e0a06f: callq  0x0000000002cf61a0  ; OopMap{off=884}
                                                ;*invokespecial doReleaseShared
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@9 (line 1342)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {optimized virtual_call}
  0x0000000002e0a074: mov    $0x1,%esi
  0x0000000002e0a079: add    $0x70,%rsp
  0x0000000002e0a07d: pop    %rbp
  0x0000000002e0a07e: test   %eax,-0x2209f84(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e0a084: retq   
  0x0000000002e0a085: mov    $0x0,%esi          ;*pop  ; - java.util.concurrent.CountDownLatch::countDown@8 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e0a08a: add    $0x70,%rsp
  0x0000000002e0a08e: pop    %rbp
  0x0000000002e0a08f: test   %eax,-0x2209f95(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e0a095: retq                      ;*return
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@31 (line 21)

  0x0000000002e0a096: mov    %eax,-0x6000(%rsp)
  0x0000000002e0a09d: push   %rbp
  0x0000000002e0a09e: sub    $0x70,%rsp
  0x0000000002e0a0a2: mov    0x8(%rdx),%rsi
  0x0000000002e0a0a6: mov    (%rdx),%edi
  0x0000000002e0a0a8: mov    %rdx,%rcx
  0x0000000002e0a0ab: mov    %rsi,0x50(%rsp)
  0x0000000002e0a0b0: mov    %edi,0x48(%rsp)
  0x0000000002e0a0b4: callq  0x000000005590be80  ;   {runtime_call}
  0x0000000002e0a0b9: mov    0x48(%rsp),%edi
  0x0000000002e0a0bd: mov    %rdi,%rsi
  0x0000000002e0a0c0: mov    0x50(%rsp),%rdx
  0x0000000002e0a0c5: jmpq   0x0000000002e09e72
  0x0000000002e0a0ca: mov    %rcx,0x8(%rsp)
  0x0000000002e0a0cf: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e0a0d7: callq  0x0000000002db1d60  ; OopMap{rdx=Oop off=988}
                                                ;*synchronization entry
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@-1 (line 17)
                                                ;   {runtime_call}
  0x0000000002e0a0dc: jmpq   0x0000000002e09d5e
  0x0000000002e0a0e1: callq  0x0000000002dad680  ; OopMap{rdx=Oop rdi=Oop off=998}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x0000000002e0a0e6: mov    %r8,0x8(%rsp)
  0x0000000002e0a0eb: movq   $0x15,(%rsp)
  0x0000000002e0a0f3: callq  0x0000000002db1d60  ; OopMap{[88]=Oop off=1016}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)
                                                ;   {runtime_call}
  0x0000000002e0a0f8: jmpq   0x0000000002e09e56
  0x0000000002e0a0fd: callq  0x0000000002dad680  ; OopMap{rdx=Oop off=1026}
                                                ;*getfield count
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@4 (line 17)
                                                ;   {runtime_call}
  0x0000000002e0a102: callq  0x0000000002dad680  ; OopMap{r8=Oop off=1031}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e0a107: mov    %rdx,0x8(%rsp)
  0x0000000002e0a10c: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e0a114: callq  0x0000000002db1d60  ; OopMap{r8=Oop off=1049}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.CountDownLatch::countDown@-1 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e0a119: jmpq   0x0000000002e09f05
  0x0000000002e0a11e: callq  0x0000000002dad680  ; OopMap{rsi=Oop off=1059}
                                                ;*invokevirtual releaseShared
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e0a123: mov    %r8,0x8(%rsp)
  0x0000000002e0a128: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e0a130: callq  0x0000000002db1d60  ; OopMap{rsi=Oop off=1077}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@-1 (line 1341)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e0a135: jmpq   0x0000000002e09fd5
  0x0000000002e0a13a: nop
  0x0000000002e0a13b: nop
  0x0000000002e0a13c: mov    0x2a8(%r15),%rax
  0x0000000002e0a143: movabs $0x0,%r10
  0x0000000002e0a14d: mov    %r10,0x2a8(%r15)
  0x0000000002e0a154: movabs $0x0,%r10
  0x0000000002e0a15e: mov    %r10,0x2b0(%r15)
  0x0000000002e0a165: add    $0x70,%rsp
  0x0000000002e0a169: pop    %rbp
  0x0000000002e0a16a: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002e0a16f: hlt    
  0x0000000002e0a170: hlt    
  0x0000000002e0a171: hlt    
  0x0000000002e0a172: hlt    
  0x0000000002e0a173: hlt    
  0x0000000002e0a174: hlt    
  0x0000000002e0a175: hlt    
  0x0000000002e0a176: hlt    
  0x0000000002e0a177: hlt    
  0x0000000002e0a178: hlt    
  0x0000000002e0a179: hlt    
  0x0000000002e0a17a: hlt    
  0x0000000002e0a17b: hlt    
  0x0000000002e0a17c: hlt    
  0x0000000002e0a17d: hlt    
  0x0000000002e0a17e: hlt    
  0x0000000002e0a17f: hlt    
[Stub Code]
  0x0000000002e0a180: nop                       ;   {no_reloc}
  0x0000000002e0a181: nop
  0x0000000002e0a182: nop
  0x0000000002e0a183: nop
  0x0000000002e0a184: nop
  0x0000000002e0a185: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0a18f: jmpq   0x0000000002e0a18f  ;   {runtime_call}
  0x0000000002e0a194: nop
  0x0000000002e0a195: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0a19f: jmpq   0x0000000002e0a19f  ;   {runtime_call}
  0x0000000002e0a1a4: nop
  0x0000000002e0a1a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0a1af: jmpq   0x0000000002e0a1af  ;   {runtime_call}
[Exception Handler]
  0x0000000002e0a1b4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002e0a1b9: mov    %rsp,-0x28(%rsp)
  0x0000000002e0a1be: sub    $0x80,%rsp
  0x0000000002e0a1c5: mov    %rax,0x78(%rsp)
  0x0000000002e0a1ca: mov    %rcx,0x70(%rsp)
  0x0000000002e0a1cf: mov    %rdx,0x68(%rsp)
  0x0000000002e0a1d4: mov    %rbx,0x60(%rsp)
  0x0000000002e0a1d9: mov    %rbp,0x50(%rsp)
  0x0000000002e0a1de: mov    %rsi,0x48(%rsp)
  0x0000000002e0a1e3: mov    %rdi,0x40(%rsp)
  0x0000000002e0a1e8: mov    %r8,0x38(%rsp)
  0x0000000002e0a1ed: mov    %r9,0x30(%rsp)
  0x0000000002e0a1f2: mov    %r10,0x28(%rsp)
  0x0000000002e0a1f7: mov    %r11,0x20(%rsp)
  0x0000000002e0a1fc: mov    %r12,0x18(%rsp)
  0x0000000002e0a201: mov    %r13,0x10(%rsp)
  0x0000000002e0a206: mov    %r14,0x8(%rsp)
  0x0000000002e0a20b: mov    %r15,(%rsp)
  0x0000000002e0a20f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002e0a219: movabs $0x2e0a1b9,%rdx    ;   {internal_word}
  0x0000000002e0a223: mov    %rsp,%r8
  0x0000000002e0a226: and    $0xfffffffffffffff0,%rsp
  0x0000000002e0a22a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002e0a22f: hlt    
[Deopt Handler Code]
  0x0000000002e0a230: movabs $0x2e0a230,%r10    ;   {section_word}
  0x0000000002e0a23a: push   %r10
  0x0000000002e0a23c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e0a241: hlt    
  0x0000000002e0a242: hlt    
  0x0000000002e0a243: hlt    
  0x0000000002e0a244: hlt    
  0x0000000002e0a245: hlt    
  0x0000000002e0a246: hlt    
  0x0000000002e0a247: hlt    
<nmethod compile_id='135' compile_kind='osr' compiler='C1' level='3' entry='0x0000000002e09d00' size='2568' address='0x0000000002e09b50' relocation_offset='288' insts_offset='432' stub_offset='1584' scopes_data_offset='1832' scopes_pcs_offset='2040' dependencies_offset='2520' nul_chk_table_offset='2528' oops_offset='1784' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='22' backedge_count='464312' iicount='22' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' stamp='30.079'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002e03a10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c0740d0} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002e03b40: mov    0x8(%rdx),%r10d
  0x0000000002e03b44: shl    $0x3,%r10
  0x0000000002e03b48: cmp    %r10,%rax
  0x0000000002e03b4b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e03b51: data16 xchg %ax,%ax
  0x0000000002e03b54: nopl   0x0(%rax,%rax,1)
  0x0000000002e03b5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e03b60: sub    $0x18,%rsp
  0x0000000002e03b67: mov    %rbp,0x10(%rsp)
  0x0000000002e03b6c: mov    0xc(%rdx),%r10d
  0x0000000002e03b70: mov    %r10d,%r11d
  0x0000000002e03b73: inc    %r11d
  0x0000000002e03b76: mov    %r10d,%eax
  0x0000000002e03b79: lock cmpxchg %r11d,0xc(%rdx)
  0x0000000002e03b7f: sete   %r11b
  0x0000000002e03b83: movzbl %r11b,%r11d        ;*invokevirtual compareAndSwapInt
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@31 (line 25)

  0x0000000002e03b87: test   %r11d,%r11d
  0x0000000002e03b8a: jne    0x0000000002e03bb6  ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)

  0x0000000002e03b8c: nopl   0x0(%rax)
  0x0000000002e03b90: mov    0xc(%rdx),%r10d
  0x0000000002e03b94: mov    %r10d,%r11d
  0x0000000002e03b97: inc    %r11d
  0x0000000002e03b9a: mov    %r10d,%eax
  0x0000000002e03b9d: lock cmpxchg %r11d,0xc(%rdx)
  0x0000000002e03ba3: sete   %r11b
  0x0000000002e03ba7: movzbl %r11b,%r11d        ; OopMap{rdx=Oop off=107}
                                                ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)

  0x0000000002e03bab: test   %eax,-0x2203bb1(%rip)        # 0x0000000000c00000
                                                ;   {poll}
  0x0000000002e03bb1: test   %r11d,%r11d
  0x0000000002e03bb4: je     0x0000000002e03b90  ;*iload
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@37 (line 27)

  0x0000000002e03bb6: mov    %r10d,%eax
  0x0000000002e03bb9: add    $0x10,%rsp
  0x0000000002e03bbd: pop    %rbp
  0x0000000002e03bbe: test   %eax,-0x2203bc4(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002e03bc4: retq   
  0x0000000002e03bc5: hlt    
  0x0000000002e03bc6: hlt    
  0x0000000002e03bc7: hlt    
  0x0000000002e03bc8: hlt    
  0x0000000002e03bc9: hlt    
  0x0000000002e03bca: hlt    
  0x0000000002e03bcb: hlt    
  0x0000000002e03bcc: hlt    
  0x0000000002e03bcd: hlt    
  0x0000000002e03bce: hlt    
  0x0000000002e03bcf: hlt    
  0x0000000002e03bd0: hlt    
  0x0000000002e03bd1: hlt    
  0x0000000002e03bd2: hlt    
  0x0000000002e03bd3: hlt    
  0x0000000002e03bd4: hlt    
  0x0000000002e03bd5: hlt    
  0x0000000002e03bd6: hlt    
  0x0000000002e03bd7: hlt    
  0x0000000002e03bd8: hlt    
  0x0000000002e03bd9: hlt    
  0x0000000002e03bda: hlt    
  0x0000000002e03bdb: hlt    
  0x0000000002e03bdc: hlt    
  0x0000000002e03bdd: hlt    
  0x0000000002e03bde: hlt    
  0x0000000002e03bdf: hlt    
[Exception Handler]
[Stub Code]
  0x0000000002e03be0: jmpq   0x0000000002dad0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000002e03be5: callq  0x0000000002e03bea
  0x0000000002e03bea: subq   $0x5,(%rsp)
  0x0000000002e03bef: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e03bf4: hlt    
  0x0000000002e03bf5: hlt    
  0x0000000002e03bf6: hlt    
  0x0000000002e03bf7: hlt    
<nmethod compile_id='134' compiler='C2' level='4' entry='0x0000000002e03b40' size='656' address='0x0000000002e03a10' relocation_offset='288' insts_offset='304' stub_offset='464' scopes_data_offset='504' scopes_pcs_offset='552' dependencies_offset='648' oops_offset='488' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger getAndIncrement ()I' bytes='40' count='460904' backedge_count='654646' iicount='460904' stamp='30.081'/>
<make_not_entrant thread='20652' compile_id='127' compiler='C1' level='2' stamp='30.081'/>
<writer thread='30460'/>
<task_queued compile_id='136' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='24' backedge_count='476205' iicount='24' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' level='3' stamp='30.081' comment='tiered' hot_count='24'/>
<writer thread='20652'/>
<sweeper state='finished' traversals='2'  total_blobs='373' nmethods='106' adapters='180' free_code_cache='250261056' stamp='30.081'/>
<writer thread='17312'/>
Decoding compiled method 0x0000000002e09190:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;
  #           [sp+0x80]  (sp of caller)
  0x0000000002e09340: mov    0x8(%rdx),%r10d
  0x0000000002e09344: shl    $0x3,%r10
  0x0000000002e09348: cmp    %rax,%r10
  0x0000000002e0934b: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e09351: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e0935c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e09360: mov    %eax,-0x6000(%rsp)
  0x0000000002e09367: push   %rbp
  0x0000000002e09368: sub    $0x70,%rsp
  0x0000000002e0936c: mov    %rdx,0x50(%rsp)
  0x0000000002e09371: movabs $0x1c074b88,%rsi   ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e0937b: mov    0xdc(%rsi),%edi
  0x0000000002e09381: add    $0x8,%edi
  0x0000000002e09384: mov    %edi,0xdc(%rsi)
  0x0000000002e0938a: movabs $0x1c074820,%rsi   ;   {metadata({method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09394: and    $0x1ff8,%edi
  0x0000000002e0939a: cmp    $0x0,%edi
  0x0000000002e0939d: je     0x0000000002e096d6  ;*iconst_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@0 (line 17)

  0x0000000002e093a3: mov    $0x0,%esi
  0x0000000002e093a8: jmpq   0x0000000002e094b2  ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)

  0x0000000002e093ad: data16 xchg %ax,%ax
  0x0000000002e093b0: mov    %esi,0x48(%rsp)
  0x0000000002e093b4: mov    0x17c(%rdx),%edi
  0x0000000002e093ba: shl    $0x3,%rdi          ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002e093be: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x0000000002e096ed
  0x0000000002e093c1: mov    %rdi,%rbx
  0x0000000002e093c4: movabs $0x1c074b88,%rax   ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e093ce: mov    0x8(%rbx),%ebx
  0x0000000002e093d1: shl    $0x3,%rbx
  0x0000000002e093d5: cmp    0x130(%rax),%rbx
  0x0000000002e093dc: jne    0x0000000002e093eb
  0x0000000002e093de: addq   $0x1,0x138(%rax)
  0x0000000002e093e6: jmpq   0x0000000002e09451
  0x0000000002e093eb: cmp    0x140(%rax),%rbx
  0x0000000002e093f2: jne    0x0000000002e09401
  0x0000000002e093f4: addq   $0x1,0x148(%rax)
  0x0000000002e093fc: jmpq   0x0000000002e09451
  0x0000000002e09401: cmpq   $0x0,0x130(%rax)
  0x0000000002e0940c: jne    0x0000000002e09425
  0x0000000002e0940e: mov    %rbx,0x130(%rax)
  0x0000000002e09415: movq   $0x1,0x138(%rax)
  0x0000000002e09420: jmpq   0x0000000002e09451
  0x0000000002e09425: cmpq   $0x0,0x140(%rax)
  0x0000000002e09430: jne    0x0000000002e09449
  0x0000000002e09432: mov    %rbx,0x140(%rax)
  0x0000000002e09439: movq   $0x1,0x148(%rax)
  0x0000000002e09444: jmpq   0x0000000002e09451
  0x0000000002e09449: addq   $0x1,0x128(%rax)
  0x0000000002e09451: mov    %rdi,%rdx          ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e09454: nop
  0x0000000002e09455: nop
  0x0000000002e09456: nop
  0x0000000002e09457: callq  0x0000000002cf61a0  ; OopMap{[80]=Oop off=284}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)
                                                ;   {optimized virtual_call}
  0x0000000002e0945c: mov    0x48(%rsp),%esi
  0x0000000002e09460: inc    %esi
  0x0000000002e09462: movabs $0x1c074b88,%r8    ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e0946c: mov    0xe0(%r8),%edx
  0x0000000002e09473: add    $0x8,%edx
  0x0000000002e09476: mov    %edx,0xe0(%r8)
  0x0000000002e0947d: movabs $0x1c074820,%r8    ;   {metadata({method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e09487: and    $0xfff8,%edx
  0x0000000002e0948d: cmp    $0x0,%edx
  0x0000000002e09490: je     0x0000000002e096f2  ; OopMap{[80]=Oop off=342}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)

  0x0000000002e09496: test   %eax,-0x220939c(%rip)        # 0x0000000000c00100
                                                ;   {poll}
  0x0000000002e0949c: movabs $0x1c074b88,%r8    ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e094a6: incl   0x158(%r8)         ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)

  0x0000000002e094ad: mov    0x50(%rsp),%rdx
  0x0000000002e094b2: mov    0x178(%rdx),%edi   ;*getfield count
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@4 (line 17)

  0x0000000002e094b8: cmp    %edi,%esi
  0x0000000002e094ba: movabs $0x1c074b88,%rdi   ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e094c4: movabs $0x108,%rbx
  0x0000000002e094ce: jge    0x0000000002e094de
  0x0000000002e094d4: movabs $0x118,%rbx
  0x0000000002e094de: mov    (%rdi,%rbx,1),%rax
  0x0000000002e094e2: lea    0x1(%rax),%rax
  0x0000000002e094e6: mov    %rax,(%rdi,%rbx,1)
  0x0000000002e094ea: jl     0x0000000002e093b0  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002e094f0: mov    0x180(%rdx),%r8d
  0x0000000002e094f7: shl    $0x3,%r8           ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@25 (line 20)

  0x0000000002e094fb: cmp    (%r8),%rax         ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ; implicit exception: dispatches to 0x0000000002e09709
  0x0000000002e094fe: mov    %r8,%rdx
  0x0000000002e09501: movabs $0x1c074b88,%rsi   ;   {metadata(method data for {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e0950b: addq   $0x1,0x180(%rsi)
  0x0000000002e09513: movabs $0x1bffb0b0,%rdx   ;   {metadata(method data for {method} {0x000000001bf797e0} &apos;countDown&apos; &apos;()V&apos; in &apos;java/util/concurrent/CountDownLatch&apos;)}
  0x0000000002e0951d: mov    0xdc(%rdx),%esi
  0x0000000002e09523: add    $0x8,%esi
  0x0000000002e09526: mov    %esi,0xdc(%rdx)
  0x0000000002e0952c: movabs $0x1bf797d8,%rdx   ;   {metadata({method} {0x000000001bf797e0} &apos;countDown&apos; &apos;()V&apos; in &apos;java/util/concurrent/CountDownLatch&apos;)}
  0x0000000002e09536: and    $0x7ffff8,%esi
  0x0000000002e0953c: cmp    $0x0,%esi
  0x0000000002e0953f: je     0x0000000002e0970e
  0x0000000002e09545: mov    0xc(%r8),%esi
  0x0000000002e09549: shl    $0x3,%rsi          ;*getfield sync
                                                ; - java.util.concurrent.CountDownLatch::countDown@1 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e0954d: cmp    (%rsi),%rax        ;*invokevirtual releaseShared
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ; implicit exception: dispatches to 0x0000000002e09725
  0x0000000002e09550: mov    %rsi,%r8
  0x0000000002e09553: movabs $0x1bffb0b0,%rdx   ;   {metadata(method data for {method} {0x000000001bf797e0} &apos;countDown&apos; &apos;()V&apos; in &apos;java/util/concurrent/CountDownLatch&apos;)}
  0x0000000002e0955d: mov    0x8(%r8),%r8d
  0x0000000002e09561: shl    $0x3,%r8
  0x0000000002e09565: cmp    0x110(%rdx),%r8
  0x0000000002e0956c: jne    0x0000000002e0957b
  0x0000000002e0956e: addq   $0x1,0x118(%rdx)
  0x0000000002e09576: jmpq   0x0000000002e095e1
  0x0000000002e0957b: cmp    0x120(%rdx),%r8
  0x0000000002e09582: jne    0x0000000002e09591
  0x0000000002e09584: addq   $0x1,0x128(%rdx)
  0x0000000002e0958c: jmpq   0x0000000002e095e1
  0x0000000002e09591: cmpq   $0x0,0x110(%rdx)
  0x0000000002e0959c: jne    0x0000000002e095b5
  0x0000000002e0959e: mov    %r8,0x110(%rdx)
  0x0000000002e095a5: movq   $0x1,0x118(%rdx)
  0x0000000002e095b0: jmpq   0x0000000002e095e1
  0x0000000002e095b5: cmpq   $0x0,0x120(%rdx)
  0x0000000002e095c0: jne    0x0000000002e095d9
  0x0000000002e095c2: mov    %r8,0x120(%rdx)
  0x0000000002e095c9: movq   $0x1,0x128(%rdx)
  0x0000000002e095d4: jmpq   0x0000000002e095e1
  0x0000000002e095d9: addq   $0x1,0x108(%rdx)
  0x0000000002e095e1: movabs $0x1bffb228,%r8    ;   {metadata(method data for {method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e095eb: mov    0xdc(%r8),%edx
  0x0000000002e095f2: add    $0x8,%edx
  0x0000000002e095f5: mov    %edx,0xdc(%r8)
  0x0000000002e095fc: movabs $0x1bf7fd90,%r8    ;   {metadata({method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e09606: and    $0x7ffff8,%edx
  0x0000000002e0960c: cmp    $0x0,%edx
  0x0000000002e0960f: je     0x0000000002e0972a
  0x0000000002e09615: mov    %rsi,%r8
  0x0000000002e09618: movabs $0x1bffb228,%rdx   ;   {metadata(method data for {method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e09622: movabs $0x7c005fcf0,%r10  ;   {metadata(&apos;java/util/concurrent/CountDownLatch$Sync&apos;)}
  0x0000000002e0962c: mov    %r10,0x110(%rdx)
  0x0000000002e09633: addq   $0x1,0x118(%rdx)
  0x0000000002e0963b: mov    $0x1,%r8d
  0x0000000002e09641: mov    %rsi,%rdx          ;*invokevirtual tryReleaseShared
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1341)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e09644: mov    %rsi,0x58(%rsp)
  0x0000000002e09649: nop
  0x0000000002e0964a: nop
  0x0000000002e0964b: nop
  0x0000000002e0964c: nop
  0x0000000002e0964d: nop
  0x0000000002e0964e: nop
  0x0000000002e0964f: callq  0x0000000002cf61a0  ; OopMap{[88]=Oop off=788}
                                                ;*invokevirtual tryReleaseShared
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@2 (line 1341)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {optimized virtual_call}
  0x0000000002e09654: cmp    $0x0,%eax
  0x0000000002e09657: movabs $0x1bffb228,%rdx   ;   {metadata(method data for {method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e09661: movabs $0x138,%rsi
  0x0000000002e0966b: je     0x0000000002e0967b
  0x0000000002e09671: movabs $0x148,%rsi
  0x0000000002e0967b: mov    (%rdx,%rsi,1),%rdi
  0x0000000002e0967f: lea    0x1(%rdi),%rdi
  0x0000000002e09683: mov    %rdi,(%rdx,%rsi,1)
  0x0000000002e09687: je     0x0000000002e096c5  ;*ifeq
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@5 (line 1341)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e0968d: mov    0x58(%rsp),%rsi
  0x0000000002e09692: mov    %rsi,%rdx
  0x0000000002e09695: movabs $0x1bffb228,%rdi   ;   {metadata(method data for {method} {0x000000001bf7fd98} &apos;releaseShared&apos; &apos;(I)Z&apos; in &apos;java/util/concurrent/locks/AbstractQueuedSynchronizer&apos;)}
  0x0000000002e0969f: addq   $0x1,0x158(%rdi)
  0x0000000002e096a7: mov    %rsi,%rdx          ;*invokespecial doReleaseShared
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@9 (line 1342)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e096aa: nop
  0x0000000002e096ab: nop
  0x0000000002e096ac: nop
  0x0000000002e096ad: nop
  0x0000000002e096ae: nop
  0x0000000002e096af: callq  0x0000000002cf61a0  ; OopMap{off=884}
                                                ;*invokespecial doReleaseShared
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@9 (line 1342)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {optimized virtual_call}
  0x0000000002e096b4: mov    $0x1,%esi
  0x0000000002e096b9: add    $0x70,%rsp
  0x0000000002e096bd: pop    %rbp
  0x0000000002e096be: test   %eax,-0x22095c4(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e096c4: retq   
  0x0000000002e096c5: mov    $0x0,%esi          ;*pop  ; - java.util.concurrent.CountDownLatch::countDown@8 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e096ca: add    $0x70,%rsp
  0x0000000002e096ce: pop    %rbp
  0x0000000002e096cf: test   %eax,-0x22095d5(%rip)        # 0x0000000000c00100
                                                ;   {poll_return}
  0x0000000002e096d5: retq   
  0x0000000002e096d6: mov    %rsi,0x8(%rsp)
  0x0000000002e096db: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e096e3: callq  0x0000000002db1d60  ; OopMap{rdx=Oop [80]=Oop off=936}
                                                ;*synchronization entry
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@-1 (line 17)
                                                ;   {runtime_call}
  0x0000000002e096e8: jmpq   0x0000000002e093a3
  0x0000000002e096ed: callq  0x0000000002dad680  ; OopMap{rdx=Oop [80]=Oop rdi=Oop off=946}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x0000000002e096f2: mov    %r8,0x8(%rsp)
  0x0000000002e096f7: movq   $0x15,(%rsp)
  0x0000000002e096ff: callq  0x0000000002db1d60  ; OopMap{[80]=Oop off=964}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)
                                                ;   {runtime_call}
  0x0000000002e09704: jmpq   0x0000000002e09496
  0x0000000002e09709: callq  0x0000000002dad680  ; OopMap{r8=Oop off=974}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e0970e: mov    %rdx,0x8(%rsp)
  0x0000000002e09713: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e0971b: callq  0x0000000002db1d60  ; OopMap{r8=Oop off=992}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.CountDownLatch::countDown@-1 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e09720: jmpq   0x0000000002e09545
  0x0000000002e09725: callq  0x0000000002dad680  ; OopMap{rsi=Oop off=1002}
                                                ;*invokevirtual releaseShared
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e0972a: mov    %r8,0x8(%rsp)
  0x0000000002e0972f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000002e09737: callq  0x0000000002db1d60  ; OopMap{rsi=Oop off=1020}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::releaseShared@-1 (line 1341)
                                                ; - java.util.concurrent.CountDownLatch::countDown@5 (line 291)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e0973c: jmpq   0x0000000002e09615
  0x0000000002e09741: nop
  0x0000000002e09742: nop
  0x0000000002e09743: mov    0x2a8(%r15),%rax
  0x0000000002e0974a: movabs $0x0,%r10
  0x0000000002e09754: mov    %r10,0x2a8(%r15)
  0x0000000002e0975b: movabs $0x0,%r10
  0x0000000002e09765: mov    %r10,0x2b0(%r15)
  0x0000000002e0976c: add    $0x70,%rsp
  0x0000000002e09770: pop    %rbp
  0x0000000002e09771: jmpq   0x0000000002dacde0  ;   {runtime_call}
  0x0000000002e09776: hlt    
  0x0000000002e09777: hlt    
  0x0000000002e09778: hlt    
  0x0000000002e09779: hlt    
  0x0000000002e0977a: hlt    
  0x0000000002e0977b: hlt    
  0x0000000002e0977c: hlt    
  0x0000000002e0977d: hlt    
  0x0000000002e0977e: hlt    
  0x0000000002e0977f: hlt    
[Stub Code]
  0x0000000002e09780: nop                       ;   {no_reloc}
  0x0000000002e09781: nop
  0x0000000002e09782: nop
  0x0000000002e09783: nop
  0x0000000002e09784: nop
  0x0000000002e09785: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0978f: jmpq   0x0000000002e0978f  ;   {runtime_call}
  0x0000000002e09794: nop
  0x0000000002e09795: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e0979f: jmpq   0x0000000002e0979f  ;   {runtime_call}
  0x0000000002e097a4: nop
  0x0000000002e097a5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000002e097af: jmpq   0x0000000002e097af  ;   {runtime_call}
[Exception Handler]
  0x0000000002e097b4: callq  0x0000000002daf520  ;   {runtime_call}
  0x0000000002e097b9: mov    %rsp,-0x28(%rsp)
  0x0000000002e097be: sub    $0x80,%rsp
  0x0000000002e097c5: mov    %rax,0x78(%rsp)
  0x0000000002e097ca: mov    %rcx,0x70(%rsp)
  0x0000000002e097cf: mov    %rdx,0x68(%rsp)
  0x0000000002e097d4: mov    %rbx,0x60(%rsp)
  0x0000000002e097d9: mov    %rbp,0x50(%rsp)
  0x0000000002e097de: mov    %rsi,0x48(%rsp)
  0x0000000002e097e3: mov    %rdi,0x40(%rsp)
  0x0000000002e097e8: mov    %r8,0x38(%rsp)
  0x0000000002e097ed: mov    %r9,0x30(%rsp)
  0x0000000002e097f2: mov    %r10,0x28(%rsp)
  0x0000000002e097f7: mov    %r11,0x20(%rsp)
  0x0000000002e097fc: mov    %r12,0x18(%rsp)
  0x0000000002e09801: mov    %r13,0x10(%rsp)
  0x0000000002e09806: mov    %r14,0x8(%rsp)
  0x0000000002e0980b: mov    %r15,(%rsp)
  0x0000000002e0980f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000002e09819: movabs $0x2e097b9,%rdx    ;   {internal_word}
  0x0000000002e09823: mov    %rsp,%r8
  0x0000000002e09826: and    $0xfffffffffffffff0,%rsp
  0x0000000002e0982a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000002e0982f: hlt    
[Deopt Handler Code]
  0x0000000002e09830: movabs $0x2e09830,%r10    ;   {section_word}
  0x0000000002e0983a: push   %r10
  0x0000000002e0983c: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e09841: hlt    
  0x0000000002e09842: hlt    
  0x0000000002e09843: hlt    
  0x0000000002e09844: hlt    
  0x0000000002e09845: hlt    
  0x0000000002e09846: hlt    
  0x0000000002e09847: hlt    
<nmethod compile_id='136' compiler='C1' level='3' entry='0x0000000002e09340' size='2456' address='0x0000000002e09190' relocation_offset='288' insts_offset='432' stub_offset='1520' scopes_data_offset='1768' scopes_pcs_offset='1968' dependencies_offset='2416' nul_chk_table_offset='2424' oops_offset='1720' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='24' backedge_count='906875' iicount='24' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' stamp='30.121'/>
<writer thread='8364'/>
<task_queued compile_id='137' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='24' backedge_count='907495' iicount='24' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' osr_bci='2' stamp='30.121' comment='tiered' hot_count='907334'/>
<writer thread='20652'/>
Decoding compiled method 0x0000000002e034d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;
  0x0000000002e03620: int3   
  0x0000000002e03621: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e0362c: data16 data16 xchg %ax,%ax
  0x0000000002e03630: mov    %eax,-0x6000(%rsp)
  0x0000000002e03637: push   %rbp
  0x0000000002e03638: sub    $0x40,%rsp
  0x0000000002e0363c: mov    (%rdx),%r13d
  0x0000000002e0363f: mov    0x8(%rdx),%rbx
  0x0000000002e03643: mov    %rdx,%rcx
  0x0000000002e03646: movabs $0x5590be80,%r10
  0x0000000002e03650: callq  *%r10
  0x0000000002e03653: mov    0x8(%rbx),%r11d    ; implicit exception: dispatches to 0x0000000002e03736
  0x0000000002e03657: cmp    $0xf800e605,%r11d  ;   {metadata(&apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;)}
  0x0000000002e0365e: jne    0x0000000002e03709  ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)

  0x0000000002e03664: jmp    0x0000000002e036a0
  0x0000000002e03666: lea    (%r12,%r10,8),%r11  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002e0366a: nopw   0x0(%rax,%rax,1)
  0x0000000002e03670: mov    0xc(%r12,%r10,8),%ecx
  0x0000000002e03675: mov    %ecx,%r8d
  0x0000000002e03678: inc    %r8d
  0x0000000002e0367b: mov    %ecx,%eax
  0x0000000002e0367d: lock cmpxchg %r8d,0xc(%r12,%r10,8)
  0x0000000002e03684: sete   %r8b
  0x0000000002e03688: movzbl %r8b,%r8d          ; OopMap{r10=NarrowOop r11=Oop rbx=Oop off=108}
                                                ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e0368c: test   %eax,-0x2203692(%rip)        # 0x0000000000c00000
                                                ;   {poll}
  0x0000000002e03692: test   %r8d,%r8d
  0x0000000002e03695: je     0x0000000002e03670  ;*iload
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@37 (line 27)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e03697: inc    %r13d              ; OopMap{rbx=Oop off=122}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)

  0x0000000002e0369a: test   %eax,-0x22036a0(%rip)        # 0x0000000000c00000
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)
                                                ;   {poll}
  0x0000000002e036a0: mov    0x178(%rbx),%r10d
  0x0000000002e036a7: cmp    %r10d,%r13d
  0x0000000002e036aa: jge    0x0000000002e036d9  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002e036ac: mov    0x17c(%rbx),%r10d  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002e036b3: test   %r10d,%r10d
  0x0000000002e036b6: je     0x0000000002e036fc
  0x0000000002e036b8: mov    0xc(%r12,%r10,8),%eax
  0x0000000002e036bd: mov    %eax,%r8d
  0x0000000002e036c0: inc    %r8d
  0x0000000002e036c3: lock cmpxchg %r8d,0xc(%r12,%r10,8)
  0x0000000002e036ca: sete   %r8b
  0x0000000002e036ce: movzbl %r8b,%r8d          ;*invokevirtual compareAndSwapInt
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@31 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e036d2: test   %r8d,%r8d
  0x0000000002e036d5: je     0x0000000002e03666  ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e036d7: jmp    0x0000000002e03697
  0x0000000002e036d9: mov    0x180(%rbx),%r10d  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@25 (line 20)

  0x0000000002e036e0: test   %r10d,%r10d
  0x0000000002e036e3: je     0x0000000002e0371d  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002e036e5: lea    (%r12,%r10,8),%rdx  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@25 (line 20)

  0x0000000002e036e9: xchg   %ax,%ax
  0x0000000002e036eb: callq  0x0000000002cf61a0  ; OopMap{off=208}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {optimized virtual_call}
  0x0000000002e036f0: add    $0x40,%rsp
  0x0000000002e036f4: pop    %rbp
  0x0000000002e036f5: test   %eax,-0x22036fb(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002e036fb: retq   
  0x0000000002e036fc: mov    $0xfffffff6,%edx
  0x0000000002e03701: xchg   %ax,%ax
  0x0000000002e03703: callq  0x0000000002cf57a0  ; OopMap{off=232}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x0000000002e03708: int3   
  0x0000000002e03709: mov    $0xffffff9d,%edx
  0x0000000002e0370e: mov    %rbx,%rbp
  0x0000000002e03711: mov    %r13d,0x20(%rsp)
  0x0000000002e03716: nop
  0x0000000002e03717: callq  0x0000000002cf57a0  ; OopMap{rbp=Oop off=252}
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)
                                                ;   {runtime_call}
  0x0000000002e0371c: int3   
  0x0000000002e0371d: mov    $0xfffffff6,%edx
  0x0000000002e03722: nop
  0x0000000002e03723: callq  0x0000000002cf57a0  ; OopMap{off=264}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e03728: int3                      ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e03729: mov    %rax,%rdx
  0x0000000002e0372c: add    $0x40,%rsp
  0x0000000002e03730: pop    %rbp
  0x0000000002e03731: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002e03736: mov    $0xffffff86,%edx
  0x0000000002e0373b: mov    %r13d,%ebp
  0x0000000002e0373e: nop
  0x0000000002e0373f: callq  0x0000000002cf57a0  ; OopMap{off=292}
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)
                                                ;   {runtime_call}
  0x0000000002e03744: int3                      ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@2 (line 17)

  0x0000000002e03745: hlt    
  0x0000000002e03746: hlt    
  0x0000000002e03747: hlt    
  0x0000000002e03748: hlt    
  0x0000000002e03749: hlt    
  0x0000000002e0374a: hlt    
  0x0000000002e0374b: hlt    
  0x0000000002e0374c: hlt    
  0x0000000002e0374d: hlt    
  0x0000000002e0374e: hlt    
  0x0000000002e0374f: hlt    
  0x0000000002e03750: hlt    
  0x0000000002e03751: hlt    
  0x0000000002e03752: hlt    
  0x0000000002e03753: hlt    
  0x0000000002e03754: hlt    
  0x0000000002e03755: hlt    
  0x0000000002e03756: hlt    
  0x0000000002e03757: hlt    
  0x0000000002e03758: hlt    
  0x0000000002e03759: hlt    
  0x0000000002e0375a: hlt    
  0x0000000002e0375b: hlt    
  0x0000000002e0375c: hlt    
  0x0000000002e0375d: hlt    
  0x0000000002e0375e: hlt    
  0x0000000002e0375f: hlt    
[Stub Code]
  0x0000000002e03760: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002e0376a: jmpq   0x0000000002e0376a  ;   {runtime_call}
[Exception Handler]
  0x0000000002e0376f: jmpq   0x0000000002dad0e0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002e03774: callq  0x0000000002e03779
  0x0000000002e03779: subq   $0x5,(%rsp)
  0x0000000002e0377e: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e03783: hlt    
  0x0000000002e03784: hlt    
  0x0000000002e03785: hlt    
  0x0000000002e03786: hlt    
  0x0000000002e03787: hlt    
<nmethod compile_id='137' compile_kind='osr' compiler='C2' level='4' entry='0x0000000002e03620' size='1288' address='0x0000000002e034d0' relocation_offset='288' insts_offset='336' stub_offset='656' scopes_data_offset='736' scopes_pcs_offset='888' dependencies_offset='1240' handler_table_offset='1248' nul_chk_table_offset='1272' oops_offset='696' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='24' backedge_count='970451' iicount='24' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' stamp='30.127'/>
<make_not_entrant thread='20652' compile_id='135' compile_kind='osr' compiler='C1' level='3' stamp='30.127'/>
<writer thread='31476'/>
<task_queued compile_id='138' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='24' backedge_count='972983' iicount='24' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' stamp='30.128' comment='tiered' hot_count='24'/>
<writer thread='19128'/>
Decoding compiled method 0x0000000002e0a590:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c074828} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread&apos;
  #           [sp+0x20]  (sp of caller)
  0x0000000002e0a6e0: mov    0x8(%rdx),%r10d
  0x0000000002e0a6e4: shl    $0x3,%r10
  0x0000000002e0a6e8: cmp    %r10,%rax
  0x0000000002e0a6eb: jne    0x0000000002cf5f60  ;   {runtime_call}
  0x0000000002e0a6f1: data16 xchg %ax,%ax
  0x0000000002e0a6f4: nopl   0x0(%rax,%rax,1)
  0x0000000002e0a6fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000002e0a700: mov    %eax,-0x6000(%rsp)
  0x0000000002e0a707: push   %rbp
  0x0000000002e0a708: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@-1 (line 17)

  0x0000000002e0a70c: mov    0x178(%rdx),%r11d
  0x0000000002e0a713: test   %r11d,%r11d
  0x0000000002e0a716: jle    0x0000000002e0a796  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002e0a71c: xor    %r11d,%r11d
  0x0000000002e0a71f: jmp    0x0000000002e0a769
  0x0000000002e0a721: lea    (%r12,%r8,8),%r10  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002e0a725: data16 data16 nopw 0x0(%rax,%rax,1)
  0x0000000002e0a730: mov    0xc(%r12,%r8,8),%r9d
  0x0000000002e0a735: mov    %r9d,%ecx
  0x0000000002e0a738: inc    %ecx
  0x0000000002e0a73a: mov    %r9d,%eax
  0x0000000002e0a73d: lock cmpxchg %ecx,0xc(%r12,%r8,8)
  0x0000000002e0a744: sete   %cl
  0x0000000002e0a747: movzbl %cl,%ecx           ; OopMap{r10=Oop r8=NarrowOop rdx=Oop off=106}
                                                ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e0a74a: test   %eax,-0x220a750(%rip)        # 0x0000000000c00000
                                                ;   {poll}
  0x0000000002e0a750: test   %ecx,%ecx
  0x0000000002e0a752: je     0x0000000002e0a730  ;*iload
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@37 (line 27)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e0a754: mov    0x178(%rdx),%r10d
  0x0000000002e0a75b: inc    %r11d              ; OopMap{rdx=Oop off=126}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)

  0x0000000002e0a75e: test   %eax,-0x220a764(%rip)        # 0x0000000000c00000
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@21 (line 17)
                                                ;   {poll}
  0x0000000002e0a764: cmp    %r10d,%r11d
  0x0000000002e0a767: jge    0x0000000002e0a796  ;*aload_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@10 (line 18)

  0x0000000002e0a769: mov    0x17c(%rdx),%r8d   ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@11 (line 18)

  0x0000000002e0a770: test   %r8d,%r8d
  0x0000000002e0a773: je     0x0000000002e0a7b8
  0x0000000002e0a775: mov    0xc(%r12,%r8,8),%eax
  0x0000000002e0a77a: mov    %eax,%r10d
  0x0000000002e0a77d: inc    %r10d
  0x0000000002e0a780: lock cmpxchg %r10d,0xc(%r12,%r8,8)
  0x0000000002e0a787: sete   %r10b
  0x0000000002e0a78b: movzbl %r10b,%r10d        ;*invokevirtual compareAndSwapInt
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@31 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e0a78f: test   %r10d,%r10d
  0x0000000002e0a792: je     0x0000000002e0a721  ;*ifeq
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicInteger::getAndIncrement@34 (line 25)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e0a794: jmp    0x0000000002e0a754  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@7 (line 17)

  0x0000000002e0a796: mov    0x180(%rdx),%r11d  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@25 (line 20)

  0x0000000002e0a79d: test   %r11d,%r11d
  0x0000000002e0a7a0: je     0x0000000002e0a7c5  ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e0a7a2: lea    (%r12,%r11,8),%rdx  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@25 (line 20)

  0x0000000002e0a7a6: nop
  0x0000000002e0a7a7: callq  0x0000000002cf61a0  ; OopMap{off=204}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {optimized virtual_call}
  0x0000000002e0a7ac: add    $0x10,%rsp
  0x0000000002e0a7b0: pop    %rbp
  0x0000000002e0a7b1: test   %eax,-0x220a7b7(%rip)        # 0x0000000000c00000
                                                ;   {poll_return}
  0x0000000002e0a7b7: retq   
  0x0000000002e0a7b8: mov    $0xfffffff6,%edx
  0x0000000002e0a7bd: xchg   %ax,%ax
  0x0000000002e0a7bf: callq  0x0000000002cf57a0  ; OopMap{off=228}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x0000000002e0a7c4: int3                      ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@14 (line 18)

  0x0000000002e0a7c5: mov    $0xfffffff6,%edx
  0x0000000002e0a7ca: nop
  0x0000000002e0a7cb: callq  0x0000000002cf57a0  ; OopMap{off=240}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)
                                                ;   {runtime_call}
  0x0000000002e0a7d0: int3                      ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.FcyAtomicThread::run@28 (line 20)

  0x0000000002e0a7d1: mov    %rax,%rdx
  0x0000000002e0a7d4: add    $0x10,%rsp
  0x0000000002e0a7d8: pop    %rbp
  0x0000000002e0a7d9: jmpq   0x0000000002db3c20  ;   {runtime_call}
  0x0000000002e0a7de: hlt    
  0x0000000002e0a7df: hlt    
[Stub Code]
  0x0000000002e0a7e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x0000000002e0a7ea: jmpq   0x0000000002e0a7ea  ;   {runtime_call}
[Exception Handler]
  0x0000000002e0a7ef: jmpq   0x0000000002dad0e0  ;   {runtime_call}
[Deopt Handler Code]
  0x0000000002e0a7f4: callq  0x0000000002e0a7f9
  0x0000000002e0a7f9: subq   $0x5,(%rsp)
  0x0000000002e0a7fe: jmpq   0x0000000002cf7600  ;   {runtime_call}
  0x0000000002e0a803: hlt    
  0x0000000002e0a804: hlt    
  0x0000000002e0a805: hlt    
  0x0000000002e0a806: hlt    
  0x0000000002e0a807: hlt    
<nmethod compile_id='138' compiler='C2' level='4' entry='0x0000000002e0a6e0' size='1184' address='0x0000000002e0a590' relocation_offset='288' insts_offset='336' stub_offset='592' scopes_data_offset='664' scopes_pcs_offset='800' dependencies_offset='1152' handler_table_offset='1160' oops_offset='632' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='24' backedge_count='1000966' iicount='24' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' stamp='30.133'/>
<make_not_entrant thread='19128' compile_id='136' compiler='C1' level='3' stamp='30.133'/>
<writer thread='5636'/>
<destroy_vm stamp='41.187'/>
<tty_done stamp='41.680'/>
</tty>
<compilation_log thread='17312'>
<start_compile_thread name='C1 CompilerThread3' thread='17312' process='4764' stamp='0.491'/>
<task compile_id='7' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='3841' iicount='3841' level='3' stamp='0.612'>
<phase name='buildIR' stamp='0.612'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='3841'/>
<parse method='832'  stamp='0.612'>
<bc code='183' bci='5'/>
<method id='834' holder='793' name='appendNull' return='793' flags='2' bytes='56' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='836' holder='730' name='length' return='722' flags='1' bytes='6' iicount='37355'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.612'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='838' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='76130'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='17'/>
<method id='840' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1499'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1554'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='11794'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.612'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='848' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.612'/>
</parse>
<parse_done stamp='0.612'/>
</parse>
<bc code='182' bci='35'/>
<method id='850' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='3909'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.612'/>
</parse>
<phase name='optimize_blocks' stamp='0.612'>
<phase_done name='optimize_blocks' stamp='0.612'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.612'>
<phase_done name='rangeCheckElimination' stamp='0.612'/>
</phase>
<phase name='optimize_null_checks' stamp='0.612'>
<phase_done name='optimize_null_checks' stamp='0.612'/>
</phase>
<phase_done name='buildIR' stamp='0.612'/>
</phase>
<phase name='emit_lir' stamp='0.612'>
<phase name='lirGeneration' stamp='0.612'>
<phase_done name='lirGeneration' stamp='0.612'/>
</phase>
<phase name='linearScan' stamp='0.612'>
<phase_done name='linearScan' stamp='0.613'/>
</phase>
<phase_done name='emit_lir' stamp='0.613'/>
</phase>
<phase name='codeemit' stamp='0.613'>
<phase_done name='codeemit' stamp='0.613'/>
</phase>
<phase name='codeinstall' stamp='0.613'>
<phase_done name='codeinstall' stamp='0.624'/>
</phase>
<code_cache total_blobs='232' nmethods='2' adapters='153' free_code_cache='250557376'/>
<task_done success='1' nmsize='1880' count='3843' inlined_bytes='63' stamp='0.624'/>
</task>
<task compile_id='10' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='385' backedge_count='39' iicount='385' level='3' stamp='0.624'>
<phase name='buildIR' stamp='0.624'>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='765' name='java/util/Hashtable' flags='1'/>
<method id='832' holder='765' name='get' return='729' arguments='729' flags='33' bytes='69' iicount='391'/>
<parse method='832'  stamp='0.624'>
<bc code='182' bci='6'/>
<type id='722' name='int'/>
<method id='836' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='857'/>
<call method='836' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='45'/>
<type id='716' name='boolean'/>
<method id='837' holder='729' name='equals' return='716' arguments='729' flags='1' bytes='11' iicount='1'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.624'/>
</parse>
<phase name='optimize_blocks' stamp='0.624'>
<phase_done name='optimize_blocks' stamp='0.624'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.624'>
<phase_done name='rangeCheckElimination' stamp='0.624'/>
</phase>
<phase name='optimize_null_checks' stamp='0.624'>
<phase_done name='optimize_null_checks' stamp='0.624'/>
</phase>
<phase_done name='buildIR' stamp='0.624'/>
</phase>
<phase name='emit_lir' stamp='0.624'>
<phase name='lirGeneration' stamp='0.624'>
<phase_done name='lirGeneration' stamp='0.624'/>
</phase>
<phase name='linearScan' stamp='0.624'>
<phase_done name='linearScan' stamp='0.624'/>
</phase>
<phase_done name='emit_lir' stamp='0.624'/>
</phase>
<phase name='codeemit' stamp='0.624'>
<phase_done name='codeemit' stamp='0.624'/>
</phase>
<phase name='codeinstall' stamp='0.624'>
<phase_done name='codeinstall' stamp='0.632'/>
</phase>
<code_cache total_blobs='236' nmethods='3' adapters='154' free_code_cache='250558464'/>
<task_done success='1' nmsize='1592' count='398' backedge_count='41' stamp='0.632'/>
</task>
<task compile_id='11' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='2560' iicount='2560' level='3' stamp='0.632'>
<phase name='buildIR' stamp='0.632'>
<klass id='741' name='java/lang/SecurityManager' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='832' holder='735' name='getSecurityManager' return='741' flags='9' bytes='4' iicount='2560'/>
<parse method='832'  stamp='0.632'>
<parse_done stamp='0.632'/>
</parse>
<phase name='optimize_blocks' stamp='0.632'>
<phase_done name='optimize_blocks' stamp='0.632'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.632'>
<phase_done name='rangeCheckElimination' stamp='0.632'/>
</phase>
<phase name='optimize_null_checks' stamp='0.632'>
<phase_done name='optimize_null_checks' stamp='0.632'/>
</phase>
<phase_done name='buildIR' stamp='0.632'/>
</phase>
<phase name='emit_lir' stamp='0.632'>
<phase name='lirGeneration' stamp='0.632'>
<phase_done name='lirGeneration' stamp='0.632'/>
</phase>
<phase name='linearScan' stamp='0.632'>
<phase_done name='linearScan' stamp='0.632'/>
</phase>
<phase_done name='emit_lir' stamp='0.632'/>
</phase>
<phase name='codeemit' stamp='0.632'>
<phase_done name='codeemit' stamp='0.632'/>
</phase>
<phase name='codeinstall' stamp='0.632'>
<phase_done name='codeinstall' stamp='0.634'/>
</phase>
<code_cache total_blobs='238' nmethods='4' adapters='154' free_code_cache='250557376'/>
<task_done success='1' nmsize='336' count='2561' stamp='0.634'/>
</task>
<task compile_id='15' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='3460' iicount='3460' level='3' stamp='0.635'>
<phase name='buildIR' stamp='0.635'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='3466'/>
<parse method='832'  stamp='0.635'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='22534'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='0.635'/>
</parse>
<bc code='183' bci='13'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='4718'/>
<call method='840' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.635'/>
</parse>
<phase name='optimize_blocks' stamp='0.635'>
<phase_done name='optimize_blocks' stamp='0.635'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.635'>
<phase_done name='rangeCheckElimination' stamp='0.635'/>
</phase>
<phase name='optimize_null_checks' stamp='0.635'>
<phase_done name='optimize_null_checks' stamp='0.635'/>
</phase>
<phase_done name='buildIR' stamp='0.635'/>
</phase>
<phase name='emit_lir' stamp='0.635'>
<phase name='lirGeneration' stamp='0.635'>
<phase_done name='lirGeneration' stamp='0.635'/>
</phase>
<phase name='linearScan' stamp='0.635'>
<phase_done name='linearScan' stamp='0.635'/>
</phase>
<phase_done name='emit_lir' stamp='0.635'/>
</phase>
<phase name='codeemit' stamp='0.635'>
<phase_done name='codeemit' stamp='0.635'/>
</phase>
<phase name='codeinstall' stamp='0.635'>
<phase_done name='codeinstall' stamp='0.644'/>
</phase>
<code_cache total_blobs='247' nmethods='5' adapters='155' free_code_cache='250547200'/>
<task_done success='1' nmsize='1272' count='3534' inlined_bytes='1' stamp='0.644'/>
</task>
<task compile_id='19' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1422' backedge_count='141' iicount='1422' level='3' stamp='0.644'>
<phase name='buildIR' stamp='0.644'>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='722' name='int'/>
<type id='716' name='boolean'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='putVal' return='729' arguments='722 729 729 716 716' flags='16' bytes='300' iicount='1422'/>
<parse method='833'  stamp='0.644'>
<bc code='182' bci='20'/>
<klass id='838' name='[Ljava/util/HashMap$Node;' flags='1040'/>
<method id='839' holder='832' name='resize' return='838' flags='16' bytes='359' iicount='92'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='837' name='java/util/HashMap$Node' flags='8'/>
<method id='841' holder='832' name='newNode' return='837' arguments='722 729 729 837' flags='0' bytes='13' iicount='831'/>
<call method='841' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='842' holder='729' name='equals' return='716' arguments='729' flags='1' bytes='11' iicount='1'/>
<call method='842' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='843' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='844' holder='843' name='putTreeVal' return='843' arguments='832 838 722 729 729' flags='16' bytes='314' iicount='1'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='841' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='724' name='void'/>
<method id='845' holder='832' name='treeifyBin' return='724' arguments='838 722' flags='16' bytes='110' iicount='1'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='842' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='847' holder='832' name='afterNodeAccess' return='724' arguments='837' flags='0' bytes='1' iicount='27'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='848' holder='832' name='afterNodeInsertion' return='724' arguments='716' flags='0' bytes='1' iicount='831'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.656'/>
</parse>
<phase name='optimize_blocks' stamp='0.656'>
<phase_done name='optimize_blocks' stamp='0.656'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.657'>
<phase_done name='rangeCheckElimination' stamp='0.657'/>
</phase>
<phase name='optimize_null_checks' stamp='0.657'>
<phase_done name='optimize_null_checks' stamp='0.657'/>
</phase>
<phase_done name='buildIR' stamp='0.657'/>
</phase>
<phase name='emit_lir' stamp='0.657'>
<phase name='lirGeneration' stamp='0.657'>
<phase_done name='lirGeneration' stamp='0.657'/>
</phase>
<phase name='linearScan' stamp='0.657'>
<phase_done name='linearScan' stamp='0.657'/>
</phase>
<phase_done name='emit_lir' stamp='0.657'/>
</phase>
<phase name='codeemit' stamp='0.657'>
<phase_done name='codeemit' stamp='0.658'/>
</phase>
<phase name='codeinstall' stamp='0.658'>
<phase_done name='codeinstall' stamp='0.679'/>
</phase>
<code_cache total_blobs='253' nmethods='9' adapters='158' free_code_cache='250538816'/>
<task_done success='1' nmsize='4856' count='1423' backedge_count='141' stamp='0.679'/>
</task>
<task compile_id='22' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10339' iicount='10339' level='2' stamp='0.679'>
<phase name='buildIR' stamp='0.679'>
<klass id='833' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='832' name='java/util/TreeMap' flags='1'/>
<method id='834' holder='832' name='parentOf' return='833' arguments='833' flags='10' bytes='13' iicount='10339'/>
<parse method='834'  stamp='0.679'>
<parse_done stamp='0.679'/>
</parse>
<phase name='optimize_blocks' stamp='0.679'>
<phase_done name='optimize_blocks' stamp='0.679'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.679'>
<phase_done name='rangeCheckElimination' stamp='0.679'/>
</phase>
<phase name='optimize_null_checks' stamp='0.679'>
<phase_done name='optimize_null_checks' stamp='0.679'/>
</phase>
<phase_done name='buildIR' stamp='0.679'/>
</phase>
<phase name='emit_lir' stamp='0.679'>
<phase name='lirGeneration' stamp='0.680'>
<phase_done name='lirGeneration' stamp='0.680'/>
</phase>
<phase name='linearScan' stamp='0.680'>
<phase_done name='linearScan' stamp='0.680'/>
</phase>
<phase_done name='emit_lir' stamp='0.680'/>
</phase>
<phase name='codeemit' stamp='0.680'>
<phase_done name='codeemit' stamp='0.680'/>
</phase>
<phase name='codeinstall' stamp='0.680'>
<phase_done name='codeinstall' stamp='0.682'/>
</phase>
<code_cache total_blobs='255' nmethods='10' adapters='159' free_code_cache='250537408'/>
<task_done success='1' nmsize='336' count='10339' stamp='0.682'/>
</task>
<task compile_id='17' method='java/lang/String indexOf (I)I' bytes='7' count='3620' iicount='3620' level='3' stamp='0.682'>
<phase name='buildIR' stamp='0.683'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' iicount='3620'/>
<parse method='832'  stamp='0.683'>
<bc code='182' bci='3'/>
<method id='834' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='3794'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='0.683'/>
</parse>
<phase name='optimize_blocks' stamp='0.683'>
<phase_done name='optimize_blocks' stamp='0.683'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.683'>
<phase_done name='rangeCheckElimination' stamp='0.683'/>
</phase>
<phase name='optimize_null_checks' stamp='0.683'>
<phase_done name='optimize_null_checks' stamp='0.683'/>
</phase>
<phase_done name='buildIR' stamp='0.683'/>
</phase>
<phase name='emit_lir' stamp='0.683'>
<phase name='lirGeneration' stamp='0.683'>
<phase_done name='lirGeneration' stamp='0.683'/>
</phase>
<phase name='linearScan' stamp='0.683'>
<phase_done name='linearScan' stamp='0.683'/>
</phase>
<phase_done name='emit_lir' stamp='0.683'/>
</phase>
<phase name='codeemit' stamp='0.683'>
<phase_done name='codeemit' stamp='0.683'/>
</phase>
<phase name='codeinstall' stamp='0.683'>
<phase_done name='codeinstall' stamp='0.685'/>
</phase>
<code_cache total_blobs='258' nmethods='11' adapters='160' free_code_cache='250530432'/>
<task_done success='1' nmsize='520' count='3620' stamp='0.685'/>
</task>
<task compile_id='27' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='1536' iicount='1536' level='3' stamp='0.685'>
<phase name='buildIR' stamp='0.685'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/lang/ref/ReferenceQueue' flags='1'/>
<klass id='755' name='java/lang/ref/Reference' flags='1025'/>
<method id='833' holder='755' name='&lt;init&gt;' return='724' arguments='729 832' flags='0' bytes='25' iicount='1536'/>
<parse method='833'  stamp='0.685'>
<bc code='183' bci='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='22743'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='755'/>
<parse_done stamp='0.685'/>
</parse>
<parse_done stamp='0.694'/>
</parse>
<phase name='optimize_blocks' stamp='0.694'>
<phase_done name='optimize_blocks' stamp='0.694'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.694'>
<phase_done name='rangeCheckElimination' stamp='0.694'/>
</phase>
<phase name='optimize_null_checks' stamp='0.694'>
<phase_done name='optimize_null_checks' stamp='0.694'/>
</phase>
<phase_done name='buildIR' stamp='0.694'/>
</phase>
<phase name='emit_lir' stamp='0.694'>
<phase name='lirGeneration' stamp='0.694'>
<phase_done name='lirGeneration' stamp='0.695'/>
</phase>
<phase name='linearScan' stamp='0.695'>
<phase_done name='linearScan' stamp='0.695'/>
</phase>
<phase_done name='emit_lir' stamp='0.695'/>
</phase>
<phase name='codeemit' stamp='0.695'>
<phase_done name='codeemit' stamp='0.695'/>
</phase>
<phase name='codeinstall' stamp='0.695'>
<dependency type='no_finalizable_subclasses' ctxk='755'/>
<phase_done name='codeinstall' stamp='0.698'/>
</phase>
<code_cache total_blobs='264' nmethods='14' adapters='163' free_code_cache='250524096'/>
<task_done success='1' nmsize='592' count='1539' inlined_bytes='1' stamp='0.698'/>
</task>
<task compile_id='29' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2713' backedge_count='3372' iicount='2713' level='3' stamp='0.699'>
<phase name='buildIR' stamp='0.699'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' iicount='2713'/>
<parse method='832'  stamp='0.699'>
<parse_done stamp='0.700'/>
</parse>
<phase name='optimize_blocks' stamp='0.700'>
<phase_done name='optimize_blocks' stamp='0.700'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.700'>
<phase_done name='rangeCheckElimination' stamp='0.700'/>
</phase>
<phase name='optimize_null_checks' stamp='0.700'>
<phase_done name='optimize_null_checks' stamp='0.700'/>
</phase>
<phase_done name='buildIR' stamp='0.700'/>
</phase>
<phase name='emit_lir' stamp='0.700'>
<phase name='lirGeneration' stamp='0.700'>
<phase_done name='lirGeneration' stamp='0.700'/>
</phase>
<phase name='linearScan' stamp='0.700'>
<phase_done name='linearScan' stamp='0.700'/>
</phase>
<phase_done name='emit_lir' stamp='0.700'/>
</phase>
<phase name='codeemit' stamp='0.700'>
<phase_done name='codeemit' stamp='0.700'/>
</phase>
<phase name='codeinstall' stamp='0.700'>
<phase_done name='codeinstall' stamp='0.706'/>
</phase>
<code_cache total_blobs='267' nmethods='16' adapters='163' free_code_cache='250516224'/>
<task_done success='1' nmsize='816' count='2717' backedge_count='3430' stamp='0.706'/>
</task>
<task compile_id='33' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='376' backedge_count='26932' iicount='376' level='3' stamp='0.706'>
<phase name='buildIR' stamp='0.706'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='376'/>
<parse method='832'  stamp='0.706'>
<bc code='183' bci='121'/>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<method id='834' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1564'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='836' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='22787'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.713'/>
</parse>
<parse_done stamp='0.713'/>
</parse>
<parse_done stamp='0.713'/>
</parse>
<phase name='optimize_blocks' stamp='0.713'>
<phase_done name='optimize_blocks' stamp='0.713'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.713'>
<phase_done name='rangeCheckElimination' stamp='0.713'/>
</phase>
<phase name='optimize_null_checks' stamp='0.713'>
<phase_done name='optimize_null_checks' stamp='0.713'/>
</phase>
<phase_done name='buildIR' stamp='0.713'/>
</phase>
<phase name='emit_lir' stamp='0.713'>
<phase name='lirGeneration' stamp='0.713'>
<phase_done name='lirGeneration' stamp='0.713'/>
</phase>
<phase name='linearScan' stamp='0.713'>
<phase_done name='linearScan' stamp='0.714'/>
</phase>
<phase_done name='emit_lir' stamp='0.714'/>
</phase>
<phase name='codeemit' stamp='0.714'>
<phase_done name='codeemit' stamp='0.714'/>
</phase>
<phase name='codeinstall' stamp='0.714'>
<phase_done name='codeinstall' stamp='0.726'/>
</phase>
<code_cache total_blobs='271' nmethods='20' adapters='163' free_code_cache='250518208'/>
<task_done success='1' nmsize='1712' count='377' backedge_count='26990' inlined_bytes='11' stamp='0.726'/>
</task>
<task compile_id='38' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='4751' iicount='4751' level='3' stamp='0.726'>
<phase name='buildIR' stamp='0.726'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='4751'/>
<parse method='833'  stamp='0.726'>
<bc code='183' bci='16'/>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='836' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='1127'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='838' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2348'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='840' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='22800'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='0.727'/>
</parse>
<parse_done stamp='0.731'/>
</parse>
<parse_done stamp='0.731'/>
</parse>
<bc code='182' bci='20'/>
<method id='842' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='5'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<method id='844' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='5'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.731'/>
</parse>
<bc code='182' bci='25'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='847' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='2926'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<method id='849' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='7' compiler='C1' level='3' iicount='3889'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.731'/>
</parse>
<bc code='182' bci='29'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.731'/>
</parse>
<bc code='182' bci='32'/>
<method id='851' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='1130'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='13'/>
<method id='853' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='3563'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.731'/>
</parse>
<bc code='183' bci='35'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='855' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='12198'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.732'/>
</parse>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='860' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.732'/>
</parse>
<phase name='optimize_blocks' stamp='0.732'>
<phase_done name='optimize_blocks' stamp='0.732'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.732'>
<phase_done name='rangeCheckElimination' stamp='0.732'/>
</phase>
<phase name='optimize_null_checks' stamp='0.732'>
<phase_done name='optimize_null_checks' stamp='0.732'/>
</phase>
<phase_done name='buildIR' stamp='0.732'/>
</phase>
<phase name='emit_lir' stamp='0.732'>
<phase name='lirGeneration' stamp='0.732'>
<phase_done name='lirGeneration' stamp='0.732'/>
</phase>
<phase name='linearScan' stamp='0.732'>
<phase_done name='linearScan' stamp='0.732'/>
</phase>
<phase_done name='emit_lir' stamp='0.732'/>
</phase>
<phase name='codeemit' stamp='0.732'>
<phase_done name='codeemit' stamp='0.732'/>
</phase>
<phase name='codeinstall' stamp='0.732'>
<phase_done name='codeinstall' stamp='0.748'/>
</phase>
<code_cache total_blobs='280' nmethods='22' adapters='169' free_code_cache='250497280'/>
<task_done success='1' nmsize='2872' count='4757' inlined_bytes='72' stamp='0.748'/>
</task>
<task compile_id='25' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='641' iicount='641' level='3' stamp='0.748'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='641' stamp='0.748'/>
</task>
<task compile_id='23' method='java/util/HashMap$Node getKey ()Ljava/lang/Object;' bytes='5' count='524' iicount='524' level='1' stamp='0.748'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='524' stamp='0.748'/>
</task>
<task compile_id='39' method='java/lang/String getChars (II[CI)V' bytes='62' count='3968' iicount='3968' level='3' stamp='0.748'>
<phase name='buildIR' stamp='0.748'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='3968'/>
<parse method='832'  stamp='0.748'>
<bc code='183' bci='9'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='836' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.756'/>
</parse>
<phase name='optimize_blocks' stamp='0.756'>
<phase_done name='optimize_blocks' stamp='0.756'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.756'>
<phase_done name='rangeCheckElimination' stamp='0.756'/>
</phase>
<phase name='optimize_null_checks' stamp='0.756'>
<phase_done name='optimize_null_checks' stamp='0.756'/>
</phase>
<phase_done name='buildIR' stamp='0.756'/>
</phase>
<phase name='emit_lir' stamp='0.756'>
<phase name='lirGeneration' stamp='0.756'>
<phase_done name='lirGeneration' stamp='0.756'/>
</phase>
<phase name='linearScan' stamp='0.756'>
<phase_done name='linearScan' stamp='0.756'/>
</phase>
<phase_done name='emit_lir' stamp='0.756'/>
</phase>
<phase name='codeemit' stamp='0.756'>
<phase_done name='codeemit' stamp='0.757'/>
</phase>
<phase name='codeinstall' stamp='0.757'>
<phase_done name='codeinstall' stamp='0.771'/>
</phase>
<code_cache total_blobs='281' nmethods='25' adapters='169' free_code_cache='250499968'/>
<task_done success='1' nmsize='1080' count='3970' stamp='0.771'/>
</task>
<task compile_id='28' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1190' iicount='1190' level='3' stamp='0.771'>
<phase name='buildIR' stamp='0.771'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730' flags='1' bytes='7' iicount='1190'/>
<parse method='832'  stamp='0.771'>
<bc code='182' bci='3'/>
<type id='722' name='int'/>
<method id='834' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' compile_id='29' compiler='C1' level='3' iicount='2833'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.771'/>
</parse>
<phase name='optimize_blocks' stamp='0.771'>
<phase_done name='optimize_blocks' stamp='0.771'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.771'>
<phase_done name='rangeCheckElimination' stamp='0.771'/>
</phase>
<phase name='optimize_null_checks' stamp='0.771'>
<phase_done name='optimize_null_checks' stamp='0.771'/>
</phase>
<phase_done name='buildIR' stamp='0.771'/>
</phase>
<phase name='emit_lir' stamp='0.771'>
<phase name='lirGeneration' stamp='0.771'>
<phase_done name='lirGeneration' stamp='0.771'/>
</phase>
<phase name='linearScan' stamp='0.771'>
<phase_done name='linearScan' stamp='0.771'/>
</phase>
<phase_done name='emit_lir' stamp='0.771'/>
</phase>
<phase name='codeemit' stamp='0.771'>
<phase_done name='codeemit' stamp='0.771'/>
</phase>
<phase name='codeinstall' stamp='0.771'>
<phase_done name='codeinstall' stamp='0.775'/>
</phase>
<code_cache total_blobs='283' nmethods='27' adapters='169' free_code_cache='250497920'/>
<task_done success='1' nmsize='520' count='1190' stamp='0.775'/>
</task>
<task compile_id='34' method='java/io/WinNTFileSystem isLetter (C)Z' bytes='30' count='2697' iicount='2697' level='3' stamp='0.775'>
<phase name='buildIR' stamp='0.775'>
<type id='716' name='boolean'/>
<type id='717' name='char'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='isLetter' return='716' arguments='717' flags='2' bytes='30' iicount='2697'/>
<parse method='833'  stamp='0.775'>
<parse_done stamp='0.775'/>
</parse>
<phase name='optimize_blocks' stamp='0.775'>
<phase_done name='optimize_blocks' stamp='0.775'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.775'>
<phase_done name='rangeCheckElimination' stamp='0.775'/>
</phase>
<phase name='optimize_null_checks' stamp='0.775'>
<phase_done name='optimize_null_checks' stamp='0.775'/>
</phase>
<phase_done name='buildIR' stamp='0.775'/>
</phase>
<phase name='emit_lir' stamp='0.775'>
<phase name='lirGeneration' stamp='0.775'>
<phase_done name='lirGeneration' stamp='0.775'/>
</phase>
<phase name='linearScan' stamp='0.775'>
<phase_done name='linearScan' stamp='0.775'/>
</phase>
<phase_done name='emit_lir' stamp='0.775'/>
</phase>
<phase name='codeemit' stamp='0.775'>
<phase_done name='codeemit' stamp='0.775'/>
</phase>
<phase name='codeinstall' stamp='0.775'>
<phase_done name='codeinstall' stamp='0.779'/>
</phase>
<code_cache total_blobs='288' nmethods='28' adapters='169' free_code_cache='250473920'/>
<task_done success='1' nmsize='592' count='2697' stamp='0.779'/>
</task>
<task compile_id='47' method='java/lang/String lastIndexOf (II)I' bytes='52' count='715' backedge_count='53661' iicount='715' level='3' stamp='0.780'>
<phase name='buildIR' stamp='0.781'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='lastIndexOf' return='722' arguments='722 722' flags='1' bytes='52' iicount='717'/>
<parse method='832'  stamp='0.781'>
<bc code='184' bci='16'/>
<klass id='834' name='java/lang/Math' flags='17'/>
<method id='835' holder='834' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='12260'/>
<call method='835' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.784'/>
</parse>
<bc code='183' bci='48'/>
<method id='837' holder='730' name='lastIndexOfSupplementary' return='722' arguments='722 722' flags='2' bytes='70' iicount='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.784'/>
</parse>
<phase name='optimize_blocks' stamp='0.784'>
<phase_done name='optimize_blocks' stamp='0.784'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.784'>
<phase_done name='rangeCheckElimination' stamp='0.784'/>
</phase>
<phase name='optimize_null_checks' stamp='0.784'>
<phase_done name='optimize_null_checks' stamp='0.785'/>
</phase>
<phase_done name='buildIR' stamp='0.785'/>
</phase>
<phase name='emit_lir' stamp='0.785'>
<phase name='lirGeneration' stamp='0.785'>
<phase_done name='lirGeneration' stamp='0.785'/>
</phase>
<phase name='linearScan' stamp='0.785'>
<phase_done name='linearScan' stamp='0.785'/>
</phase>
<phase_done name='emit_lir' stamp='0.785'/>
</phase>
<phase name='codeemit' stamp='0.785'>
<phase_done name='codeemit' stamp='0.785'/>
</phase>
<phase name='codeinstall' stamp='0.785'>
<phase_done name='codeinstall' stamp='0.792'/>
</phase>
<code_cache total_blobs='292' nmethods='34' adapters='171' free_code_cache='250489728'/>
<task_done success='1' nmsize='936' count='718' backedge_count='53699' inlined_bytes='11' stamp='0.792'/>
</task>
<task compile_id='54' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='1663' backedge_count='308' iicount='1668' level='3' stamp='0.792'>
<phase name='buildIR' stamp='0.792'>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='832' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' iicount='1790'/>
<parse method='832'  stamp='0.792'>
<bc code='182' bci='3'/>
<method id='834' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1225'/>
<call method='834' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='18'/>
<type id='716' name='boolean'/>
<method id='835' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='49' compile_kind='c2n' level='0' iicount='791'/>
<call method='835' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.792'/>
</parse>
<phase name='optimize_blocks' stamp='0.792'>
<phase_done name='optimize_blocks' stamp='0.792'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.792'>
<phase_done name='rangeCheckElimination' stamp='0.792'/>
</phase>
<phase name='optimize_null_checks' stamp='0.792'>
<phase_done name='optimize_null_checks' stamp='0.792'/>
</phase>
<phase_done name='buildIR' stamp='0.792'/>
</phase>
<phase name='emit_lir' stamp='0.792'>
<phase name='lirGeneration' stamp='0.792'>
<phase_done name='lirGeneration' stamp='0.792'/>
</phase>
<phase name='linearScan' stamp='0.792'>
<phase_done name='linearScan' stamp='0.792'/>
</phase>
<phase_done name='emit_lir' stamp='0.792'/>
</phase>
<phase name='codeemit' stamp='0.792'>
<phase_done name='codeemit' stamp='0.792'/>
</phase>
<phase name='codeinstall' stamp='0.792'>
<phase_done name='codeinstall' stamp='0.796'/>
</phase>
<code_cache total_blobs='293' nmethods='35' adapters='171' free_code_cache='250488576'/>
<task_done success='1' nmsize='528' count='21453' backedge_count='25518' stamp='0.796'/>
</task>
<task compile_id='53' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='21874' iicount='21879' level='2' stamp='0.796'>
<phase name='buildIR' stamp='0.796'>
<type id='722' name='int'/>
<klass id='832' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='12' iicount='22023'/>
<parse method='833'  stamp='0.796'>
<bc code='182' bci='8'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='837' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' compile_id='54' compiler='C1' level='3' iicount='22288'/>
<call method='837' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.796'/>
</parse>
<phase name='optimize_blocks' stamp='0.796'>
<phase_done name='optimize_blocks' stamp='0.796'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.796'>
<phase_done name='rangeCheckElimination' stamp='0.796'/>
</phase>
<phase name='optimize_null_checks' stamp='0.796'>
<phase_done name='optimize_null_checks' stamp='0.796'/>
</phase>
<phase_done name='buildIR' stamp='0.796'/>
</phase>
<phase name='emit_lir' stamp='0.796'>
<phase name='lirGeneration' stamp='0.796'>
<phase_done name='lirGeneration' stamp='0.796'/>
</phase>
<phase name='linearScan' stamp='0.796'>
<phase_done name='linearScan' stamp='0.796'/>
</phase>
<phase_done name='emit_lir' stamp='0.796'/>
</phase>
<phase name='codeemit' stamp='0.796'>
<phase_done name='codeemit' stamp='0.796'/>
</phase>
<phase name='codeinstall' stamp='0.796'>
<phase_done name='codeinstall' stamp='0.798'/>
</phase>
<code_cache total_blobs='294' nmethods='36' adapters='171' free_code_cache='250487744'/>
<task_done success='1' nmsize='336' count='43023' stamp='0.798'/>
</task>
<task compile_id='50' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='2951' iicount='2951' level='3' stamp='0.798'>
<phase name='buildIR' stamp='0.798'>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='2951'/>
<parse method='832'  stamp='0.798'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='7' compiler='C1' level='3' iicount='3917'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.798'/>
</parse>
<phase name='optimize_blocks' stamp='0.798'>
<phase_done name='optimize_blocks' stamp='0.798'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.798'>
<phase_done name='rangeCheckElimination' stamp='0.798'/>
</phase>
<phase name='optimize_null_checks' stamp='0.798'>
<phase_done name='optimize_null_checks' stamp='0.798'/>
</phase>
<phase_done name='buildIR' stamp='0.798'/>
</phase>
<phase name='emit_lir' stamp='0.798'>
<phase name='lirGeneration' stamp='0.798'>
<phase_done name='lirGeneration' stamp='0.798'/>
</phase>
<phase name='linearScan' stamp='0.798'>
<phase_done name='linearScan' stamp='0.798'/>
</phase>
<phase_done name='emit_lir' stamp='0.798'/>
</phase>
<phase name='codeemit' stamp='0.798'>
<phase_done name='codeemit' stamp='0.798'/>
</phase>
<phase name='codeinstall' stamp='0.798'>
<phase_done name='codeinstall' stamp='0.801'/>
</phase>
<code_cache total_blobs='295' nmethods='37' adapters='171' free_code_cache='250486784'/>
<task_done success='1' nmsize='392' count='2951' stamp='0.801'/>
</task>
<task compile_id='41' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='1664' iicount='1664' level='3' stamp='0.801'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1664' stamp='0.801'/>
</task>
<task compile_id='58' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='87331' iicount='87354' level='1' stamp='0.801'>
<phase name='buildIR' stamp='0.801'>
<type id='722' name='int'/>
<klass id='832' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='12' compile_id='53' compiler='C1' level='2' iicount='87948'/>
<parse method='833'  stamp='0.801'>
<bc code='182' bci='8'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='836' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' compile_id='54' compiler='C1' level='3' iicount='42734'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.801'/>
</parse>
<phase name='optimize_blocks' stamp='0.801'>
<phase_done name='optimize_blocks' stamp='0.801'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.801'>
<phase_done name='rangeCheckElimination' stamp='0.801'/>
</phase>
<phase name='optimize_null_checks' stamp='0.802'>
<phase_done name='optimize_null_checks' stamp='0.802'/>
</phase>
<phase_done name='buildIR' stamp='0.802'/>
</phase>
<phase name='emit_lir' stamp='0.802'>
<phase name='lirGeneration' stamp='0.802'>
<phase_done name='lirGeneration' stamp='0.802'/>
</phase>
<phase name='linearScan' stamp='0.802'>
<phase_done name='linearScan' stamp='0.802'/>
</phase>
<phase_done name='emit_lir' stamp='0.802'/>
</phase>
<phase name='codeemit' stamp='0.802'>
<phase_done name='codeemit' stamp='0.802'/>
</phase>
<phase name='codeinstall' stamp='0.802'>
<phase_done name='codeinstall' stamp='0.803'/>
</phase>
<code_cache total_blobs='296' nmethods='38' adapters='171' free_code_cache='250486080'/>
<task_done success='1' nmsize='272' count='112037' stamp='0.803'/>
</task>
<task compile_id='56' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='314' iicount='314' level='1' stamp='0.803'>
<phase name='buildIR' stamp='0.803'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<method id='832' holder='768' name='getName' return='730' flags='1' bytes='5' iicount='314'/>
<parse method='832'  stamp='0.803'>
<parse_done stamp='0.803'/>
</parse>
<phase name='optimize_blocks' stamp='0.803'>
<phase_done name='optimize_blocks' stamp='0.803'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.803'>
<phase_done name='rangeCheckElimination' stamp='0.803'/>
</phase>
<phase name='optimize_null_checks' stamp='0.803'>
<phase_done name='optimize_null_checks' stamp='0.803'/>
</phase>
<phase_done name='buildIR' stamp='0.803'/>
</phase>
<phase name='emit_lir' stamp='0.803'>
<phase name='lirGeneration' stamp='0.803'>
<phase_done name='lirGeneration' stamp='0.803'/>
</phase>
<phase name='linearScan' stamp='0.803'>
<phase_done name='linearScan' stamp='0.803'/>
</phase>
<phase_done name='emit_lir' stamp='0.803'/>
</phase>
<phase name='codeemit' stamp='0.803'>
<phase_done name='codeemit' stamp='0.803'/>
</phase>
<phase name='codeinstall' stamp='0.803'>
<phase_done name='codeinstall' stamp='0.805'/>
</phase>
<code_cache total_blobs='297' nmethods='39' adapters='171' free_code_cache='250485312'/>
<task_done success='1' nmsize='272' count='314' stamp='0.805'/>
</task>
<task compile_id='31' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='1678' iicount='1678' level='1' stamp='0.805'>
<phase name='buildIR' stamp='0.805'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='801' name='java/net/URL' flags='17'/>
<method id='832' holder='801' name='getProtocol' return='730' flags='1' bytes='5' iicount='1678'/>
<parse method='832'  stamp='0.805'>
<parse_done stamp='0.805'/>
</parse>
<phase name='optimize_blocks' stamp='0.805'>
<phase_done name='optimize_blocks' stamp='0.805'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.805'>
<phase_done name='rangeCheckElimination' stamp='0.805'/>
</phase>
<phase name='optimize_null_checks' stamp='0.805'>
<phase_done name='optimize_null_checks' stamp='0.805'/>
</phase>
<phase_done name='buildIR' stamp='0.805'/>
</phase>
<phase name='emit_lir' stamp='0.805'>
<phase name='lirGeneration' stamp='0.805'>
<phase_done name='lirGeneration' stamp='0.805'/>
</phase>
<phase name='linearScan' stamp='0.805'>
<phase_done name='linearScan' stamp='0.805'/>
</phase>
<phase_done name='emit_lir' stamp='0.805'/>
</phase>
<phase name='codeemit' stamp='0.805'>
<phase_done name='codeemit' stamp='0.805'/>
</phase>
<phase name='codeinstall' stamp='0.805'>
<phase_done name='codeinstall' stamp='0.807'/>
</phase>
<code_cache total_blobs='298' nmethods='40' adapters='171' free_code_cache='250484544'/>
<task_done success='1' nmsize='272' count='1678' stamp='0.807'/>
</task>
<task compile_id='42' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='1664' iicount='1664' level='3' stamp='0.807'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1664' stamp='0.807'/>
</task>
<task compile_id='59' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='112037' iicount='112037' level='2' stamp='0.807'>
<phase name='buildIR' stamp='0.807'>
<type id='722' name='int'/>
<klass id='832' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='12' compile_id='58' compiler='C1' level='1' iicount='112037'/>
<parse method='833'  stamp='0.807'>
<bc code='182' bci='8'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='837' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' compile_id='54' compiler='C1' level='3' iicount='42799'/>
<call method='837' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.807'/>
</parse>
<phase name='optimize_blocks' stamp='0.807'>
<phase_done name='optimize_blocks' stamp='0.807'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.807'>
<phase_done name='rangeCheckElimination' stamp='0.807'/>
</phase>
<phase name='optimize_null_checks' stamp='0.807'>
<phase_done name='optimize_null_checks' stamp='0.807'/>
</phase>
<phase_done name='buildIR' stamp='0.807'/>
</phase>
<phase name='emit_lir' stamp='0.807'>
<phase name='lirGeneration' stamp='0.807'>
<phase_done name='lirGeneration' stamp='0.807'/>
</phase>
<phase name='linearScan' stamp='0.807'>
<phase_done name='linearScan' stamp='0.807'/>
</phase>
<phase_done name='emit_lir' stamp='0.807'/>
</phase>
<phase name='codeemit' stamp='0.807'>
<phase_done name='codeemit' stamp='0.807'/>
</phase>
<phase name='codeinstall' stamp='0.807'>
<phase_done name='codeinstall' stamp='0.809'/>
</phase>
<code_cache total_blobs='299' nmethods='41' adapters='171' free_code_cache='250483712'/>
<task_done success='1' nmsize='336' count='112270' stamp='0.809'/>
</task>
<task compile_id='20' method='java/io/WinNTFileSystem prefixLength (Ljava/lang/String;)I' bytes='91' count='1806' iicount='1806' level='3' stamp='0.809'>
<phase name='buildIR' stamp='0.809'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='prefixLength' return='722' arguments='730' flags='1' bytes='91' iicount='1806'/>
<parse method='833'  stamp='0.809'>
<bc code='182' bci='6'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='21' compiler='C2' level='4' iicount='37824'/>
<call method='835' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.809'/>
</parse>
<bc code='182' bci='18'/>
<type id='717' name='char'/>
<method id='837' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' compile_id='12' compiler='C2' level='4' iicount='245264'/>
<call method='837' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='183' bci='18'/>
<type id='724' name='void'/>
<klass id='839' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='840' holder='839' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.809'/>
</parse>
<bc code='182' bci='30'/>
<call method='837' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='183' bci='18'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.809'/>
</parse>
<bc code='183' bci='58'/>
<type id='716' name='boolean'/>
<method id='841' holder='832' name='isLetter' return='716' arguments='717' flags='2' bytes='30' compile_id='34' compiler='C1' level='3' iicount='2698'/>
<call method='841' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='841'>
<parse_done stamp='0.810'/>
</parse>
<bc code='182' bci='78'/>
<call method='837' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='183' bci='18'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.810'/>
</parse>
<parse_done stamp='0.810'/>
</parse>
<phase name='optimize_blocks' stamp='0.810'>
<phase_done name='optimize_blocks' stamp='0.810'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.810'>
<phase_done name='rangeCheckElimination' stamp='0.810'/>
</phase>
<phase name='optimize_null_checks' stamp='0.810'>
<phase_done name='optimize_null_checks' stamp='0.810'/>
</phase>
<phase_done name='buildIR' stamp='0.810'/>
</phase>
<phase name='emit_lir' stamp='0.810'>
<phase name='lirGeneration' stamp='0.810'>
<phase_done name='lirGeneration' stamp='0.810'/>
</phase>
<phase name='linearScan' stamp='0.810'>
<phase_done name='linearScan' stamp='0.810'/>
</phase>
<phase_done name='emit_lir' stamp='0.810'/>
</phase>
<phase name='codeemit' stamp='0.810'>
<phase_done name='codeemit' stamp='0.810'/>
</phase>
<phase name='codeinstall' stamp='0.810'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='0.829'/>
</phase>
<code_cache total_blobs='300' nmethods='42' adapters='171' free_code_cache='250478400'/>
<task_done success='1' nmsize='2952' count='1806' inlined_bytes='123' stamp='0.829'/>
</task>
<task compile_id='45' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='1664' iicount='1664' level='3' stamp='0.829'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1664' stamp='0.829'/>
</task>
<task compile_id='44' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='1664' iicount='1664' level='3' stamp='0.829'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1664' stamp='0.829'/>
</task>
<task compile_id='43' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='1664' iicount='1664' level='3' stamp='0.829'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1664' stamp='0.829'/>
</task>
<task compile_id='61' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='368347' iicount='368357' level='2' stamp='0.829'>
<phase name='buildIR' stamp='0.829'>
<type id='722' name='int'/>
<klass id='832' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='12' compile_id='59' compiler='C1' level='2' iicount='368607'/>
<parse method='833'  stamp='0.829'>
<bc code='182' bci='8'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='837' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' compile_id='54' compiler='C1' level='3' iicount='42818'/>
<call method='837' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.829'/>
</parse>
<phase name='optimize_blocks' stamp='0.829'>
<phase_done name='optimize_blocks' stamp='0.829'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.829'>
<phase_done name='rangeCheckElimination' stamp='0.829'/>
</phase>
<phase name='optimize_null_checks' stamp='0.829'>
<phase_done name='optimize_null_checks' stamp='0.829'/>
</phase>
<phase_done name='buildIR' stamp='0.829'/>
</phase>
<phase name='emit_lir' stamp='0.829'>
<phase name='lirGeneration' stamp='0.829'>
<phase_done name='lirGeneration' stamp='0.829'/>
</phase>
<phase name='linearScan' stamp='0.829'>
<phase_done name='linearScan' stamp='0.829'/>
</phase>
<phase_done name='emit_lir' stamp='0.829'/>
</phase>
<phase name='codeemit' stamp='0.829'>
<phase_done name='codeemit' stamp='0.829'/>
</phase>
<phase name='codeinstall' stamp='0.829'>
<phase_done name='codeinstall' stamp='0.831'/>
</phase>
<code_cache total_blobs='301' nmethods='43' adapters='171' free_code_cache='250477568'/>
<task_done success='1' nmsize='336' count='396661' stamp='0.831'/>
</task>
<task compile_id='55' method='java/util/Vector size ()I' bytes='5' count='1025' iicount='1025' level='1' stamp='0.862'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1025' stamp='0.862'/>
</task>
<task compile_id='52' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='1152' iicount='1152' level='3' stamp='0.862'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1152' stamp='0.862'/>
</task>
<task compile_id='48' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='1283' iicount='1283' level='1' stamp='0.862'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1283' stamp='0.862'/>
</task>
<task compile_id='40' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='1165' iicount='1165' level='3' stamp='0.862'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1165' stamp='0.862'/>
</task>
<task compile_id='62' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='845661' iicount='845670' level='1' stamp='0.862'>
<phase name='buildIR' stamp='0.862'>
<type id='722' name='int'/>
<klass id='832' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='12' compile_id='61' compiler='C1' level='2' iicount='845895'/>
<parse method='833'  stamp='0.862'>
<bc code='182' bci='8'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='836' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' compile_id='54' compiler='C1' level='3' iicount='42834'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.862'/>
</parse>
<phase name='optimize_blocks' stamp='0.862'>
<phase_done name='optimize_blocks' stamp='0.862'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.862'>
<phase_done name='rangeCheckElimination' stamp='0.862'/>
</phase>
<phase name='optimize_null_checks' stamp='0.862'>
<phase_done name='optimize_null_checks' stamp='0.862'/>
</phase>
<phase_done name='buildIR' stamp='0.862'/>
</phase>
<phase name='emit_lir' stamp='0.862'>
<phase name='lirGeneration' stamp='0.862'>
<phase_done name='lirGeneration' stamp='0.862'/>
</phase>
<phase name='linearScan' stamp='0.862'>
<phase_done name='linearScan' stamp='0.862'/>
</phase>
<phase_done name='emit_lir' stamp='0.862'/>
</phase>
<phase name='codeemit' stamp='0.862'>
<phase_done name='codeemit' stamp='0.862'/>
</phase>
<phase name='codeinstall' stamp='0.862'>
<phase_done name='codeinstall' stamp='0.864'/>
</phase>
<code_cache total_blobs='304' nmethods='44' adapters='171' free_code_cache='250465408'/>
<task_done success='1' nmsize='272' count='872105' stamp='0.864'/>
</task>
<task compile_id='18' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1439' iicount='1439' level='3' stamp='0.897'>
<phase name='buildIR' stamp='0.897'>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='put' return='729' arguments='729 729' flags='1' bytes='13' iicount='1439'/>
<parse method='833'  stamp='0.897'>
<bc code='184' bci='2'/>
<type id='722' name='int'/>
<method id='835' holder='832' name='hash' return='722' arguments='729' flags='24' bytes='20' iicount='4859'/>
<call method='835' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='182' bci='9'/>
<method id='837' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='876'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.897'/>
</parse>
<bc code='182' bci='9'/>
<type id='716' name='boolean'/>
<method id='838' holder='832' name='putVal' return='729' arguments='722 729 729 716 716' flags='16' bytes='300' compile_id='19' compiler='C1' level='3' iicount='1439'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.897'/>
</parse>
<phase name='optimize_blocks' stamp='0.897'>
<phase_done name='optimize_blocks' stamp='0.897'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.897'>
<phase_done name='rangeCheckElimination' stamp='0.897'/>
</phase>
<phase name='optimize_null_checks' stamp='0.897'>
<phase_done name='optimize_null_checks' stamp='0.897'/>
</phase>
<phase_done name='buildIR' stamp='0.897'/>
</phase>
<phase name='emit_lir' stamp='0.897'>
<phase name='lirGeneration' stamp='0.897'>
<phase_done name='lirGeneration' stamp='0.897'/>
</phase>
<phase name='linearScan' stamp='0.897'>
<phase_done name='linearScan' stamp='0.897'/>
</phase>
<phase_done name='emit_lir' stamp='0.897'/>
</phase>
<phase name='codeemit' stamp='0.897'>
<phase_done name='codeemit' stamp='0.897'/>
</phase>
<phase name='codeinstall' stamp='0.897'>
<phase_done name='codeinstall' stamp='0.904'/>
</phase>
<code_cache total_blobs='306' nmethods='47' adapters='171' free_code_cache='250467584'/>
<task_done success='1' nmsize='952' count='1439' inlined_bytes='20' stamp='0.904'/>
</task>
<task compile_id='64' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='290' iicount='292' level='3' stamp='1.392'>
<phase name='buildIR' stamp='1.392'>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='java/io/BufferedInputStream' flags='1'/>
<method id='833' holder='832' name='getBufIfOpen' return='824' flags='2' bytes='21' iicount='361'/>
<parse method='833'  stamp='1.392'>
<bc code='183' bci='15'/>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='835' name='java/io/IOException' flags='1'/>
<method id='837' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='17'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.392'/>
</parse>
<phase name='optimize_blocks' stamp='1.392'>
<phase_done name='optimize_blocks' stamp='1.392'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.392'>
<phase_done name='rangeCheckElimination' stamp='1.392'/>
</phase>
<phase name='optimize_null_checks' stamp='1.392'>
<phase_done name='optimize_null_checks' stamp='1.392'/>
</phase>
<phase_done name='buildIR' stamp='1.392'/>
</phase>
<phase name='emit_lir' stamp='1.392'>
<phase name='lirGeneration' stamp='1.392'>
<phase_done name='lirGeneration' stamp='1.392'/>
</phase>
<phase name='linearScan' stamp='1.392'>
<phase_done name='linearScan' stamp='1.392'/>
</phase>
<phase_done name='emit_lir' stamp='1.392'/>
</phase>
<phase name='codeemit' stamp='1.392'>
<phase_done name='codeemit' stamp='1.392'/>
</phase>
<phase name='codeinstall' stamp='1.392'>
<phase_done name='codeinstall' stamp='1.395'/>
</phase>
<code_cache total_blobs='314' nmethods='50' adapters='177' free_code_cache='250409664'/>
<task_done success='1' nmsize='584' count='1526' stamp='1.395'/>
</task>
<task compile_id='66' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='415' backedge_count='6264' iicount='416' level='3' stamp='1.396'>
<phase name='buildIR' stamp='1.396'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='833' name='java/io/DataInput' flags='1537'/>
<klass id='832' name='java/io/DataInputStream' flags='1'/>
<method id='834' holder='832' name='readUTF' return='730' arguments='833' flags='25' bytes='501' iicount='431'/>
<parse method='834'  stamp='1.396'>
<bc code='185' bci='1'/>
<type id='722' name='int'/>
<method id='836' holder='833' name='readUnsignedShort' return='722' flags='1025' bytes='0' iicount='1'/>
<call method='836' instr='invokeinterface'/>
<method id='837' holder='832' name='readUnsignedShort' return='722' flags='17' bytes='39' iicount='480'/>
<dependency type='unique_concrete_method' ctxk='833' x='837'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='832'/>
<bc code='193' bci='12'/>
<dependency type='leaf_type' ctxk='832'/>
<bc code='192' bci='19'/>
<dependency type='leaf_type' ctxk='832'/>
<bc code='185' bci='87'/>
<type id='724' name='void'/>
<klass id='824' name='[B' flags='1041'/>
<method id='839' holder='833' name='readFully' return='724' arguments='824 722 722' flags='1025' bytes='0' iicount='1'/>
<call method='839' instr='invokeinterface'/>
<method id='840' holder='832' name='readFully' return='724' arguments='824 722 722' flags='17' bytes='63' iicount='518'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='832'/>
<bc code='183' bci='259'/>
<klass id='843' name='java/io/UTFDataFormatException' unloaded='1'/>
<method id='845' holder='843' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='291'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='846' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='1151'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='848' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2373'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='850' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23451'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.396'/>
</parse>
<parse_done stamp='1.396'/>
</parse>
<parse_done stamp='1.396'/>
</parse>
<bc code='182' bci='296'/>
<method id='853' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' compile_id='50' compiler='C1' level='3' iicount='2955'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='2'/>
<method id='855' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='7' compiler='C1' level='3' iicount='3921'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.396'/>
</parse>
<bc code='182' bci='301'/>
<method id='857' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='18'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<method id='859' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='18'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.396'/>
</parse>
<bc code='182' bci='304'/>
<method id='861' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='1153'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='13'/>
<klass id='821' name='[C' flags='1041'/>
<method id='863' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='4199'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.396'/>
</parse>
<bc code='183' bci='307'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='351'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='403'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='3'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.396'/>
</parse>
<parse_done stamp='1.396'/>
</parse>
<parse_done stamp='1.396'/>
</parse>
<bc code='182' bci='408'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='2'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.396'/>
</parse>
<bc code='182' bci='415'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.396'/>
</parse>
<bc code='182' bci='418'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='13'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.396'/>
</parse>
<bc code='183' bci='421'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='469'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='3'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.396'/>
</parse>
<parse_done stamp='1.396'/>
</parse>
<parse_done stamp='1.396'/>
</parse>
<bc code='182' bci='474'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='2'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.396'/>
</parse>
<bc code='182' bci='479'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.396'/>
</parse>
<bc code='182' bci='482'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='13'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.397'/>
</parse>
<bc code='183' bci='485'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='497'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.397'/>
</parse>
<phase name='optimize_blocks' stamp='1.397'>
<phase_done name='optimize_blocks' stamp='1.397'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.397'>
<phase_done name='rangeCheckElimination' stamp='1.397'/>
</phase>
<phase name='optimize_null_checks' stamp='1.397'>
<phase_done name='optimize_null_checks' stamp='1.397'/>
</phase>
<phase_done name='buildIR' stamp='1.397'/>
</phase>
<phase name='emit_lir' stamp='1.397'>
<phase name='lirGeneration' stamp='1.397'>
<phase_done name='lirGeneration' stamp='1.397'/>
</phase>
<phase name='linearScan' stamp='1.397'>
<phase_done name='linearScan' stamp='1.397'/>
</phase>
<phase_done name='emit_lir' stamp='1.397'/>
</phase>
<phase name='codeemit' stamp='1.397'>
<phase_done name='codeemit' stamp='1.398'/>
</phase>
<phase name='codeinstall' stamp='1.398'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='833' x='837'/>
<dependency type='unique_concrete_method' ctxk='833' x='840'/>
<phase_done name='codeinstall' stamp='1.458'/>
</phase>
<code_cache total_blobs='315' nmethods='51' adapters='177' free_code_cache='250394432'/>
<task_done success='1' nmsize='8712' count='597' backedge_count='8539' inlined_bytes='159' stamp='1.458'/>
</task>
<task compile_id='70' method='java/io/DataInputStream readFully ([BII)V' bytes='63' count='978' backedge_count='978' iicount='978' level='3' stamp='1.458'>
<phase name='buildIR' stamp='1.458'>
<type id='724' name='void'/>
<klass id='824' name='[B' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/io/DataInputStream' flags='1'/>
<method id='833' holder='832' name='readFully' return='724' arguments='824 722 722' flags='17' bytes='63' iicount='978'/>
<parse method='833'  stamp='1.458'>
<bc code='183' bci='8'/>
<klass id='836' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='34'/>
<klass id='797' name='java/io/InputStream' flags='1025'/>
<method id='839' holder='797' name='read' return='722' arguments='824 722 722' flags='1' bytes='109' iicount='1'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='48'/>
<klass id='840' name='java/io/EOFException' unloaded='1'/>
<method id='841' holder='840' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='841' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.459'/>
</parse>
<phase name='optimize_blocks' stamp='1.459'>
<phase_done name='optimize_blocks' stamp='1.459'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.459'>
<phase_done name='rangeCheckElimination' stamp='1.459'/>
</phase>
<phase name='optimize_null_checks' stamp='1.459'>
<phase_done name='optimize_null_checks' stamp='1.459'/>
</phase>
<phase_done name='buildIR' stamp='1.459'/>
</phase>
<phase name='emit_lir' stamp='1.459'>
<phase name='lirGeneration' stamp='1.459'>
<phase_done name='lirGeneration' stamp='1.459'/>
</phase>
<phase name='linearScan' stamp='1.459'>
<phase_done name='linearScan' stamp='1.459'/>
</phase>
<phase_done name='emit_lir' stamp='1.459'/>
</phase>
<phase name='codeemit' stamp='1.459'>
<phase_done name='codeemit' stamp='1.459'/>
</phase>
<phase name='codeinstall' stamp='1.459'>
<phase_done name='codeinstall' stamp='1.468'/>
</phase>
<code_cache total_blobs='317' nmethods='53' adapters='177' free_code_cache='250391488'/>
<task_done success='1' nmsize='1128' count='978' backedge_count='978' stamp='1.468'/>
</task>
<task compile_id='65' method='java/io/BufferedInputStream read ()I' bytes='49' count='4371' iicount='4373' level='3' stamp='1.468'>
<phase name='buildIR' stamp='1.468'>
<type id='722' name='int'/>
<klass id='832' name='java/io/BufferedInputStream' flags='1'/>
<method id='833' holder='832' name='read' return='722' flags='33' bytes='49' iicount='4379'/>
<parse method='833'  stamp='1.468'>
<bc code='183' bci='12'/>
<type id='724' name='void'/>
<method id='835' holder='832' name='fill' return='724' flags='2' bytes='233' iicount='13'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='29'/>
<klass id='824' name='[B' flags='1041'/>
<method id='837' holder='832' name='getBufIfOpen' return='824' flags='2' bytes='21' compile_id='72' compiler='C2' level='4' iicount='6364'/>
<call method='837' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='183' bci='15'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='839' name='java/io/IOException' flags='1'/>
<method id='841' holder='839' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='17'/>
<call method='841' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.468'/>
</parse>
<parse_done stamp='1.468'/>
</parse>
<phase name='optimize_blocks' stamp='1.468'>
<phase_done name='optimize_blocks' stamp='1.468'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.468'>
<phase_done name='rangeCheckElimination' stamp='1.468'/>
</phase>
<phase name='optimize_null_checks' stamp='1.468'>
<phase_done name='optimize_null_checks' stamp='1.468'/>
</phase>
<phase_done name='buildIR' stamp='1.468'/>
</phase>
<phase name='emit_lir' stamp='1.468'>
<phase name='lirGeneration' stamp='1.468'>
<phase_done name='lirGeneration' stamp='1.468'/>
</phase>
<phase name='linearScan' stamp='1.468'>
<phase_done name='linearScan' stamp='1.468'/>
</phase>
<phase_done name='emit_lir' stamp='1.468'/>
</phase>
<phase name='codeemit' stamp='1.468'>
<phase_done name='codeemit' stamp='1.469'/>
</phase>
<phase name='codeinstall' stamp='1.469'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.479'/>
</phase>
<code_cache total_blobs='318' nmethods='54' adapters='177' free_code_cache='250388928'/>
<task_done success='1' nmsize='1400' count='5163' inlined_bytes='21' stamp='1.479'/>
</task>
<task compile_id='67' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='985' backedge_count='11' iicount='985' level='3' stamp='1.479'>
<phase name='buildIR' stamp='1.479'>
<type id='722' name='int'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='java/io/BufferedInputStream' flags='1'/>
<method id='833' holder='832' name='read' return='722' arguments='824 722 722' flags='33' bytes='113' iicount='985'/>
<parse method='833'  stamp='1.479'>
<bc code='183' bci='1'/>
<method id='836' holder='832' name='getBufIfOpen' return='824' flags='2' bytes='21' compile_id='72' compiler='C2' level='4' iicount='6364'/>
<call method='836' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='15'/>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='838' name='java/io/IOException' flags='1'/>
<method id='840' holder='838' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='17'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.479'/>
</parse>
<bc code='183' bci='26'/>
<klass id='842' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='843' holder='842' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='843' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='49'/>
<method id='844' holder='832' name='read1' return='722' arguments='824 722 722' flags='2' bytes='108' iicount='996'/>
<call method='844' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='101'/>
<klass id='797' name='java/io/InputStream' flags='1025'/>
<method id='847' holder='797' name='available' return='722' flags='1' bytes='2' iicount='1'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.480'/>
</parse>
<phase name='optimize_blocks' stamp='1.480'>
<phase_done name='optimize_blocks' stamp='1.480'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.480'>
<phase_done name='rangeCheckElimination' stamp='1.480'/>
</phase>
<phase name='optimize_null_checks' stamp='1.480'>
<phase_done name='optimize_null_checks' stamp='1.480'/>
</phase>
<phase_done name='buildIR' stamp='1.480'/>
</phase>
<phase name='emit_lir' stamp='1.480'>
<phase name='lirGeneration' stamp='1.480'>
<phase_done name='lirGeneration' stamp='1.480'/>
</phase>
<phase name='linearScan' stamp='1.480'>
<phase_done name='linearScan' stamp='1.480'/>
</phase>
<phase_done name='emit_lir' stamp='1.480'/>
</phase>
<phase name='codeemit' stamp='1.480'>
<phase_done name='codeemit' stamp='1.480'/>
</phase>
<phase name='codeinstall' stamp='1.480'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.540'/>
</phase>
<code_cache total_blobs='320' nmethods='55' adapters='178' free_code_cache='250384448'/>
<task_done success='1' nmsize='2360' count='985' backedge_count='11' inlined_bytes='21' stamp='1.540'/>
</task>
<task compile_id='75' method='java/util/HashMap afterNodeInsertion (Z)V' bytes='1' count='1066' iicount='1066' level='3' stamp='1.540'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1066' stamp='1.540'/>
</task>
<task compile_id='74' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1066' iicount='1066' level='3' stamp='1.540'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1066' stamp='1.540'/>
</task>
<task compile_id='73' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1634' iicount='1634' level='3' stamp='1.540'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1634' stamp='1.540'/>
</task>
<task compile_id='71' method='java/io/DataInputStream readShort ()S' bytes='40' count='1984' iicount='1984' level='3' stamp='1.540'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1984' stamp='1.540'/>
</task>
<task compile_id='69' method='java/io/DataInputStream readUTF ()Ljava/lang/String;' bytes='5' count='597' iicount='597' level='3' stamp='1.540'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='597' stamp='1.540'/>
</task>
<task compile_id='68' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='996' iicount='996' level='3' stamp='1.540'>
<phase name='buildIR' stamp='1.540'>
<type id='722' name='int'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='java/io/BufferedInputStream' flags='1'/>
<method id='833' holder='832' name='read1' return='722' arguments='824 722 722' flags='2' bytes='108' iicount='996'/>
<parse method='833'  stamp='1.540'>
<bc code='183' bci='18'/>
<method id='835' holder='832' name='getBufIfOpen' return='824' flags='2' bytes='21' compile_id='72' compiler='C2' level='4' iicount='6364'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='183' bci='15'/>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='837' name='java/io/IOException' flags='1'/>
<method id='839' holder='837' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='17'/>
<call method='839' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.540'/>
</parse>
<bc code='183' bci='33'/>
<klass id='797' name='java/io/InputStream' flags='1025'/>
<method id='841' holder='832' name='getInIfOpen' return='797' flags='2' bytes='21' iicount='20'/>
<call method='841' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='841'>
<bc code='183' bci='15'/>
<call method='839' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.540'/>
</parse>
<bc code='182' bci='39'/>
<method id='844' holder='797' name='read' return='722' arguments='824 722 722' flags='1' bytes='109' iicount='1'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='44'/>
<method id='845' holder='832' name='fill' return='724' flags='2' bytes='233' iicount='13'/>
<call method='845' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='80'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='183' bci='15'/>
<call method='839' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.541'/>
</parse>
<bc code='184' bci='91'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='847' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='847' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.541'/>
</parse>
<phase name='optimize_blocks' stamp='1.541'>
<phase_done name='optimize_blocks' stamp='1.541'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.541'>
<phase_done name='rangeCheckElimination' stamp='1.541'/>
</phase>
<phase name='optimize_null_checks' stamp='1.541'>
<phase_done name='optimize_null_checks' stamp='1.541'/>
</phase>
<phase_done name='buildIR' stamp='1.541'/>
</phase>
<phase name='emit_lir' stamp='1.541'>
<phase name='lirGeneration' stamp='1.541'>
<phase_done name='lirGeneration' stamp='1.541'/>
</phase>
<phase name='linearScan' stamp='1.541'>
<phase_done name='linearScan' stamp='1.541'/>
</phase>
<phase_done name='emit_lir' stamp='1.541'/>
</phase>
<phase name='codeemit' stamp='1.541'>
<phase_done name='codeemit' stamp='1.541'/>
</phase>
<phase name='codeinstall' stamp='1.541'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.558'/>
</phase>
<code_cache total_blobs='321' nmethods='56' adapters='178' free_code_cache='250380032'/>
<task_done success='1' nmsize='2296' count='996' inlined_bytes='63' stamp='1.558'/>
</task>
<task compile_id='76' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='271' iicount='271' level='1' stamp='1.558'>
<phase name='buildIR' stamp='1.558'>
<klass id='834' name='[Lsun/instrument/TransformerManager$TransformerInfo;' flags='1042'/>
<klass id='832' name='sun/instrument/TransformerManager' flags='1'/>
<method id='835' holder='832' name='getSnapshotTransformerList' return='834' flags='2' bytes='5' iicount='271'/>
<parse method='835'  stamp='1.558'>
<parse_done stamp='1.558'/>
</parse>
<phase name='optimize_blocks' stamp='1.558'>
<phase_done name='optimize_blocks' stamp='1.558'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.558'>
<phase_done name='rangeCheckElimination' stamp='1.558'/>
</phase>
<phase name='optimize_null_checks' stamp='1.558'>
<phase_done name='optimize_null_checks' stamp='1.558'/>
</phase>
<phase_done name='buildIR' stamp='1.558'/>
</phase>
<phase name='emit_lir' stamp='1.558'>
<phase name='lirGeneration' stamp='1.558'>
<phase_done name='lirGeneration' stamp='1.558'/>
</phase>
<phase name='linearScan' stamp='1.558'>
<phase_done name='linearScan' stamp='1.558'/>
</phase>
<phase_done name='emit_lir' stamp='1.558'/>
</phase>
<phase name='codeemit' stamp='1.558'>
<phase_done name='codeemit' stamp='1.558'/>
</phase>
<phase name='codeinstall' stamp='1.558'>
<phase_done name='codeinstall' stamp='1.560'/>
</phase>
<code_cache total_blobs='322' nmethods='57' adapters='178' free_code_cache='250379264'/>
<task_done success='1' nmsize='272' count='273' stamp='1.560'/>
</task>
<task compile_id='77' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='1152' iicount='1152' level='3' stamp='1.561'>
<phase name='buildIR' stamp='1.561'>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='832' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='1152'/>
<parse method='832'  stamp='1.561'>
<bc code='183' bci='3'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2375'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='836' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23458'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='1.561'/>
</parse>
<parse_done stamp='1.561'/>
</parse>
<parse_done stamp='1.561'/>
</parse>
<phase name='optimize_blocks' stamp='1.561'>
<phase_done name='optimize_blocks' stamp='1.561'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.561'>
<phase_done name='rangeCheckElimination' stamp='1.561'/>
</phase>
<phase name='optimize_null_checks' stamp='1.561'>
<phase_done name='optimize_null_checks' stamp='1.561'/>
</phase>
<phase_done name='buildIR' stamp='1.561'/>
</phase>
<phase name='emit_lir' stamp='1.561'>
<phase name='lirGeneration' stamp='1.561'>
<phase_done name='lirGeneration' stamp='1.561'/>
</phase>
<phase name='linearScan' stamp='1.561'>
<phase_done name='linearScan' stamp='1.561'/>
</phase>
<phase_done name='emit_lir' stamp='1.561'/>
</phase>
<phase name='codeemit' stamp='1.561'>
<phase_done name='codeemit' stamp='1.561'/>
</phase>
<phase name='codeinstall' stamp='1.561'>
<phase_done name='codeinstall' stamp='1.566'/>
</phase>
<code_cache total_blobs='324' nmethods='58' adapters='179' free_code_cache='250377408'/>
<task_done success='1' nmsize='688' count='1152' inlined_bytes='13' stamp='1.566'/>
</task>
<task compile_id='81' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='1280' iicount='1280' level='1' stamp='1.568'>
<phase name='buildIR' stamp='1.568'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='799' name='java/io/File' flags='1'/>
<method id='832' holder='799' name='getPath' return='730' flags='1' bytes='5' iicount='1281'/>
<parse method='832'  stamp='1.568'>
<parse_done stamp='1.568'/>
</parse>
<phase name='optimize_blocks' stamp='1.568'>
<phase_done name='optimize_blocks' stamp='1.568'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.568'>
<phase_done name='rangeCheckElimination' stamp='1.568'/>
</phase>
<phase name='optimize_null_checks' stamp='1.568'>
<phase_done name='optimize_null_checks' stamp='1.568'/>
</phase>
<phase_done name='buildIR' stamp='1.568'/>
</phase>
<phase name='emit_lir' stamp='1.568'>
<phase name='lirGeneration' stamp='1.568'>
<phase_done name='lirGeneration' stamp='1.568'/>
</phase>
<phase name='linearScan' stamp='1.568'>
<phase_done name='linearScan' stamp='1.568'/>
</phase>
<phase_done name='emit_lir' stamp='1.568'/>
</phase>
<phase name='codeemit' stamp='1.568'>
<phase_done name='codeemit' stamp='1.568'/>
</phase>
<phase name='codeinstall' stamp='1.568'>
<phase_done name='codeinstall' stamp='1.570'/>
</phase>
<code_cache total_blobs='325' nmethods='59' adapters='179' free_code_cache='250376640'/>
<task_done success='1' nmsize='272' count='1287' stamp='1.570'/>
</task>
<task compile_id='83' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='624' backedge_count='18762' iicount='624' level='3' stamp='1.571'>
<phase name='buildIR' stamp='1.571'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='716' name='boolean'/>
<klass id='832' name='java/io/BufferedReader' flags='1'/>
<method id='833' holder='832' name='readLine' return='730' arguments='716' flags='0' bytes='304' iicount='624'/>
<parse method='833'  stamp='1.571'>
<bc code='183' bci='11'/>
<type id='724' name='void'/>
<method id='836' holder='832' name='ensureOpen' return='724' flags='2' bytes='18' iicount='624'/>
<call method='836' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='13'/>
<klass id='838' name='java/io/IOException' flags='1'/>
<method id='840' holder='838' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='17'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.571'/>
</parse>
<bc code='183' bci='44'/>
<method id='842' holder='832' name='fill' return='724' flags='2' bytes='170' iicount='32'/>
<call method='842' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='63'/>
<type id='722' name='int'/>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<method id='844' holder='794' name='length' return='722' flags='33' bytes='5' iicount='7'/>
<call method='844' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='844'>
<parse_done stamp='1.571'/>
</parse>
<bc code='182' bci='70'/>
<method id='846' holder='794' name='toString' return='730' flags='33' bytes='36' iicount='1215'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='208'/>
<klass id='821' name='[C' flags='1041'/>
<method id='848' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='4359'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='226'/>
<method id='850' holder='794' name='append' return='794' arguments='821 722 722' flags='33' bytes='15' iicount='6'/>
<call method='850' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='9'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='852' holder='793' name='append' return='793' arguments='821 722 722' flags='1' bytes='40' iicount='6'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.571'/>
</parse>
<bc code='182' bci='231'/>
<call method='846' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='275'/>
<method id='855' holder='794' name='&lt;init&gt;' return='724' arguments='722' flags='1' bytes='6' iicount='1219'/>
<call method='855' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='855'>
<bc code='183' bci='2'/>
<method id='857' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2384'/>
<call method='857' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='859' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23628'/>
<call method='859' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='859'>
<parse_done stamp='1.571'/>
</parse>
<parse_done stamp='1.572'/>
</parse>
<parse_done stamp='1.572'/>
</parse>
<bc code='182' bci='289'/>
<call method='850' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<bc code='183' bci='9'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.572'/>
</parse>
<parse_done stamp='1.572'/>
</parse>
<phase name='optimize_blocks' stamp='1.572'>
<phase_done name='optimize_blocks' stamp='1.572'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.572'>
<phase_done name='rangeCheckElimination' stamp='1.572'/>
</phase>
<phase name='optimize_null_checks' stamp='1.572'>
<phase_done name='optimize_null_checks' stamp='1.572'/>
</phase>
<phase_done name='buildIR' stamp='1.572'/>
</phase>
<phase name='emit_lir' stamp='1.572'>
<phase name='lirGeneration' stamp='1.572'>
<phase_done name='lirGeneration' stamp='1.572'/>
</phase>
<phase name='linearScan' stamp='1.572'>
<phase_done name='linearScan' stamp='1.573'/>
</phase>
<phase_done name='emit_lir' stamp='1.573'/>
</phase>
<phase name='codeemit' stamp='1.573'>
<phase_done name='codeemit' stamp='1.573'/>
</phase>
<phase name='codeinstall' stamp='1.573'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.623'/>
</phase>
<code_cache total_blobs='332' nmethods='61' adapters='179' free_code_cache='250339456'/>
<task_done success='1' nmsize='5992' count='624' backedge_count='18762' inlined_bytes='72' stamp='1.623'/>
</task>
<task compile_id='89' method='sun/net/www/ParseUtil encodePath (Ljava/lang/String;Z)Ljava/lang/String;' bytes='336' count='316' backedge_count='24599' iicount='316' level='3' stamp='1.626'>
<phase name='buildIR' stamp='1.638'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='716' name='boolean'/>
<klass id='832' name='sun/net/www/ParseUtil' flags='1'/>
<method id='833' holder='832' name='encodePath' return='730' arguments='730 716' flags='9' bytes='336' iicount='316'/>
<parse method='833'  stamp='1.638'>
<bc code='182' bci='1'/>
<type id='722' name='int'/>
<method id='836' holder='730' name='length' return='722' flags='1' bytes='6' compile_id='21' compiler='C2' level='4' iicount='37901'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='1.638'/>
</parse>
<bc code='182' bci='15'/>
<klass id='821' name='[C' flags='1041'/>
<method id='838' holder='730' name='toCharArray' return='821' flags='1' bytes='25' iicount='2237'/>
<call method='838' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='184' bci='20'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='840' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='840' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.638'/>
</parse>
<bc code='182' bci='21'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='1.638'/>
</parse>
<bc code='182' bci='142'/>
<klass id='835' name='java/util/BitSet' flags='1'/>
<method id='844' holder='835' name='get' return='716' arguments='722' flags='1' bytes='69' iicount='2562'/>
<call method='844' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='835'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='835'/>
<bc code='184' bci='152'/>
<type id='717' name='char'/>
<method id='846' holder='832' name='escape' return='722' arguments='821 717 722' flags='10' bytes='42' iicount='2'/>
<call method='846' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='193'/>
<call method='846' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='212'/>
<call method='846' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='230'/>
<call method='846' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='252'/>
<call method='846' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='270'/>
<call method='846' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='313'/>
<call method='840' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<bc code='183' bci='332'/>
<method id='848' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='4393'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.639'/>
</parse>
<phase name='optimize_blocks' stamp='1.639'>
<phase_done name='optimize_blocks' stamp='1.639'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.639'>
<phase_done name='rangeCheckElimination' stamp='1.639'/>
</phase>
<phase name='optimize_null_checks' stamp='1.639'>
<phase_done name='optimize_null_checks' stamp='1.639'/>
</phase>
<phase_done name='buildIR' stamp='1.639'/>
</phase>
<phase name='emit_lir' stamp='1.639'>
<phase name='lirGeneration' stamp='1.639'>
<phase_done name='lirGeneration' stamp='1.639'/>
</phase>
<phase name='linearScan' stamp='1.639'>
<phase_done name='linearScan' stamp='1.639'/>
</phase>
<phase_done name='emit_lir' stamp='1.639'/>
</phase>
<phase name='codeemit' stamp='1.639'>
<phase_done name='codeemit' stamp='1.640'/>
</phase>
<phase name='codeinstall' stamp='1.640'>
<dependency type='leaf_type' ctxk='835'/>
<phase_done name='codeinstall' stamp='1.688'/>
</phase>
<code_cache total_blobs='330' nmethods='64' adapters='179' free_code_cache='250352832'/>
<task_done success='1' nmsize='4120' count='318' backedge_count='24673' inlined_bytes='37' stamp='1.688'/>
</task>
<task compile_id='90' method='java/util/BitSet get (I)Z' bytes='69' count='2563' iicount='2563' level='3' stamp='1.689'>
<phase name='buildIR' stamp='1.689'>
<type id='716' name='boolean'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/BitSet' flags='1'/>
<method id='833' holder='832' name='get' return='716' arguments='722' flags='1' bytes='69' iicount='2563'/>
<parse method='833'  stamp='1.689'>
<bc code='183' bci='12'/>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='836' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' compile_id='77' compiler='C1' level='3' iicount='1176'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='838' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2400'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='840' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23674'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='1.689'/>
</parse>
<parse_done stamp='1.689'/>
</parse>
<parse_done stamp='1.689'/>
</parse>
<bc code='182' bci='17'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='843' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' compile_id='50' compiler='C1' level='3' iicount='3012'/>
<call method='843' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='183' bci='2'/>
<method id='845' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='7' compiler='C1' level='3' iicount='3978'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.689'/>
</parse>
<bc code='182' bci='21'/>
<method id='847' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='18'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<method id='849' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='18'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.689'/>
</parse>
<bc code='182' bci='24'/>
<method id='851' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='1180'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='13'/>
<klass id='821' name='[C' flags='1041'/>
<method id='853' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='4400'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.689'/>
</parse>
<bc code='183' bci='27'/>
<klass id='835' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='855' holder='835' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='32'/>
<method id='856' holder='832' name='checkInvariants' return='724' flags='2' bytes='111' iicount='2614'/>
<call method='856' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='36'/>
<method id='858' holder='832' name='wordIndex' return='722' arguments='722' flags='10' bytes='5' iicount='2615'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='1.689'/>
</parse>
<parse_done stamp='1.689'/>
</parse>
<phase name='optimize_blocks' stamp='1.689'>
<phase_done name='optimize_blocks' stamp='1.689'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.689'>
<phase_done name='rangeCheckElimination' stamp='1.689'/>
</phase>
<phase name='optimize_null_checks' stamp='1.689'>
<phase_done name='optimize_null_checks' stamp='1.689'/>
</phase>
<phase_done name='buildIR' stamp='1.689'/>
</phase>
<phase name='emit_lir' stamp='1.689'>
<phase name='lirGeneration' stamp='1.689'>
<phase_done name='lirGeneration' stamp='1.689'/>
</phase>
<phase name='linearScan' stamp='1.689'>
<phase_done name='linearScan' stamp='1.689'/>
</phase>
<phase_done name='emit_lir' stamp='1.689'/>
</phase>
<phase name='codeemit' stamp='1.689'>
<phase_done name='codeemit' stamp='1.689'/>
</phase>
<phase name='codeinstall' stamp='1.689'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.704'/>
</phase>
<code_cache total_blobs='332' nmethods='65' adapters='179' free_code_cache='250343168'/>
<task_done success='1' nmsize='2440' count='2563' inlined_bytes='58' stamp='1.704'/>
</task>
<task compile_id='91' method='java/lang/Character toLowerCase (C)C' bytes='6' count='4027' iicount='4027' level='3' stamp='1.704'>
<phase name='buildIR' stamp='1.705'>
<type id='717' name='char'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toLowerCase' return='717' arguments='717' flags='9' bytes='6' iicount='4027'/>
<parse method='832'  stamp='1.705'>
<bc code='184' bci='1'/>
<type id='722' name='int'/>
<method id='834' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' compile_id='79' compiler='C2' level='4' iicount='30137'/>
<call method='834' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='184' bci='1'/>
<klass id='837' name='java/lang/CharacterData' flags='1024'/>
<method id='838' holder='837' name='of' return='837' arguments='722' flags='24' bytes='120' compile_id='13' compiler='C2' level='4' iicount='32857'/>
<call method='838' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='5'/>
<method id='840' holder='837' name='toLowerCase' return='722' arguments='722' flags='1024' bytes='0' iicount='1'/>
<call method='840' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.705'/>
</parse>
<parse_done stamp='1.705'/>
</parse>
<phase name='optimize_blocks' stamp='1.705'>
<phase_done name='optimize_blocks' stamp='1.705'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.705'>
<phase_done name='rangeCheckElimination' stamp='1.705'/>
</phase>
<phase name='optimize_null_checks' stamp='1.705'>
<phase_done name='optimize_null_checks' stamp='1.705'/>
</phase>
<phase_done name='buildIR' stamp='1.705'/>
</phase>
<phase name='emit_lir' stamp='1.705'>
<phase name='lirGeneration' stamp='1.705'>
<phase_done name='lirGeneration' stamp='1.705'/>
</phase>
<phase name='linearScan' stamp='1.705'>
<phase_done name='linearScan' stamp='1.705'/>
</phase>
<phase_done name='emit_lir' stamp='1.705'/>
</phase>
<phase name='codeemit' stamp='1.705'>
<phase_done name='codeemit' stamp='1.705'/>
</phase>
<phase name='codeinstall' stamp='1.705'>
<phase_done name='codeinstall' stamp='1.712'/>
</phase>
<code_cache total_blobs='334' nmethods='66' adapters='179' free_code_cache='250333952'/>
<task_done success='1' nmsize='664' count='4027' inlined_bytes='9' stamp='1.712'/>
</task>
<task compile_id='84' method='java/io/File isInvalid ()Z' bytes='47' count='1823' iicount='1823' level='3' stamp='1.738'>
<phase name='buildIR' stamp='1.738'>
<type id='716' name='boolean'/>
<klass id='799' name='java/io/File' flags='1'/>
<method id='832' holder='799' name='isInvalid' return='716' flags='16' bytes='47' iicount='1823'/>
<parse method='832'  stamp='1.738'>
<bc code='182' bci='13'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='835' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' compile_id='17' compiler='C1' level='3' iicount='3877'/>
<call method='835' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='182' bci='3'/>
<method id='837' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' compile_id='32' compiler='C2' level='4' iicount='3806'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='1.738'/>
</parse>
<parse_done stamp='1.738'/>
</parse>
<phase name='optimize_blocks' stamp='1.738'>
<phase_done name='optimize_blocks' stamp='1.738'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.738'>
<phase_done name='rangeCheckElimination' stamp='1.738'/>
</phase>
<phase name='optimize_null_checks' stamp='1.738'>
<phase_done name='optimize_null_checks' stamp='1.738'/>
</phase>
<phase_done name='buildIR' stamp='1.738'/>
</phase>
<phase name='emit_lir' stamp='1.738'>
<phase name='lirGeneration' stamp='1.738'>
<phase_done name='lirGeneration' stamp='1.738'/>
</phase>
<phase name='linearScan' stamp='1.738'>
<phase_done name='linearScan' stamp='1.738'/>
</phase>
<phase_done name='emit_lir' stamp='1.738'/>
</phase>
<phase name='codeemit' stamp='1.738'>
<phase_done name='codeemit' stamp='1.738'/>
</phase>
<phase name='codeinstall' stamp='1.738'>
<phase_done name='codeinstall' stamp='1.745'/>
</phase>
<code_cache total_blobs='334' nmethods='68' adapters='179' free_code_cache='250339200'/>
<task_done success='1' nmsize='1096' count='1823' inlined_bytes='7' stamp='1.745'/>
</task>
<task compile_id='94' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='32' count='1408' iicount='1408' throwouts='19' level='3' stamp='1.745'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1408' stamp='1.745'/>
</task>
<task compile_id='86' method='java/util/LinkedHashMap get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='33' count='1686' iicount='1686' level='3' stamp='1.745'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1686' stamp='1.745'/>
</task>
<task compile_id='85' method='java/io/ExpiringCache entryFor (Ljava/lang/String;)Ljava/io/ExpiringCache$Entry;' bytes='57' count='1686' iicount='1686' level='3' stamp='1.745'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1686' stamp='1.745'/>
</task>
<task compile_id='93' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='1668' iicount='1668' level='3' stamp='1.745'>
<phase name='buildIR' stamp='1.745'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='endsWith' return='716' arguments='730' flags='1' bytes='17' iicount='1668'/>
<parse method='832'  stamp='1.745'>
<bc code='182' bci='13'/>
<type id='722' name='int'/>
<method id='834' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' compile_id='29' compiler='C1' level='3' iicount='2963'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.745'/>
</parse>
<phase name='optimize_blocks' stamp='1.745'>
<phase_done name='optimize_blocks' stamp='1.745'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.745'>
<phase_done name='rangeCheckElimination' stamp='1.745'/>
</phase>
<phase name='optimize_null_checks' stamp='1.745'>
<phase_done name='optimize_null_checks' stamp='1.745'/>
</phase>
<phase_done name='buildIR' stamp='1.745'/>
</phase>
<phase name='emit_lir' stamp='1.745'>
<phase name='lirGeneration' stamp='1.745'>
<phase_done name='lirGeneration' stamp='1.745'/>
</phase>
<phase name='linearScan' stamp='1.745'>
<phase_done name='linearScan' stamp='1.745'/>
</phase>
<phase_done name='emit_lir' stamp='1.745'/>
</phase>
<phase name='codeemit' stamp='1.745'>
<phase_done name='codeemit' stamp='1.745'/>
</phase>
<phase name='codeinstall' stamp='1.745'>
<phase_done name='codeinstall' stamp='1.749'/>
</phase>
<code_cache total_blobs='336' nmethods='69' adapters='180' free_code_cache='250337216'/>
<task_done success='1' nmsize='552' count='1668' stamp='1.749'/>
</task>
<task compile_id='82' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1682' iicount='1682' level='3' stamp='1.749'>
<phase name='buildIR' stamp='1.749'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap$Node' flags='8'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' arguments='722 729 729 832' flags='0' bytes='26' iicount='1682'/>
<parse method='833'  stamp='1.749'>
<bc code='183' bci='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23720'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='832'/>
<parse_done stamp='1.749'/>
</parse>
<parse_done stamp='1.749'/>
</parse>
<phase name='optimize_blocks' stamp='1.749'>
<phase_done name='optimize_blocks' stamp='1.749'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.749'>
<phase_done name='rangeCheckElimination' stamp='1.749'/>
</phase>
<phase name='optimize_null_checks' stamp='1.749'>
<phase_done name='optimize_null_checks' stamp='1.749'/>
</phase>
<phase_done name='buildIR' stamp='1.749'/>
</phase>
<phase name='emit_lir' stamp='1.749'>
<phase name='lirGeneration' stamp='1.749'>
<phase_done name='lirGeneration' stamp='1.749'/>
</phase>
<phase name='linearScan' stamp='1.749'>
<phase_done name='linearScan' stamp='1.749'/>
</phase>
<phase_done name='emit_lir' stamp='1.749'/>
</phase>
<phase name='codeemit' stamp='1.749'>
<phase_done name='codeemit' stamp='1.749'/>
</phase>
<phase name='codeinstall' stamp='1.749'>
<dependency type='no_finalizable_subclasses' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.753'/>
</phase>
<code_cache total_blobs='337' nmethods='70' adapters='180' free_code_cache='250336064'/>
<task_done success='1' nmsize='528' count='1682' inlined_bytes='1' stamp='1.753'/>
</task>
<task compile_id='87' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='1596' iicount='1596' level='3' stamp='1.753'>
<phase name='buildIR' stamp='1.753'>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1596'/>
<parse method='832'  stamp='1.753'>
<bc code='183' bci='31'/>
<method id='834' holder='793' name='hugeCapacity' return='722' arguments='722' flags='2' bytes='28' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='11'/>
<type id='724' name='void'/>
<klass id='752' name='java/lang/OutOfMemoryError' flags='1'/>
<method id='836' holder='752' name='&lt;init&gt;' return='724' flags='1' bytes='5' iicount='1'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.753'/>
</parse>
<parse_done stamp='1.753'/>
</parse>
<phase name='optimize_blocks' stamp='1.753'>
<phase_done name='optimize_blocks' stamp='1.753'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.753'>
<phase_done name='rangeCheckElimination' stamp='1.753'/>
</phase>
<phase name='optimize_null_checks' stamp='1.753'>
<phase_done name='optimize_null_checks' stamp='1.753'/>
</phase>
<phase_done name='buildIR' stamp='1.753'/>
</phase>
<phase name='emit_lir' stamp='1.753'>
<phase name='lirGeneration' stamp='1.753'>
<phase_done name='lirGeneration' stamp='1.754'/>
</phase>
<phase name='linearScan' stamp='1.754'>
<phase_done name='linearScan' stamp='1.754'/>
</phase>
<phase_done name='emit_lir' stamp='1.754'/>
</phase>
<phase name='codeemit' stamp='1.754'>
<phase_done name='codeemit' stamp='1.754'/>
</phase>
<phase name='codeinstall' stamp='1.754'>
<phase_done name='codeinstall' stamp='1.760'/>
</phase>
<code_cache total_blobs='338' nmethods='71' adapters='180' free_code_cache='250334016'/>
<task_done success='1' nmsize='1000' count='1598' inlined_bytes='28' stamp='1.760'/>
</task>
<task compile_id='95' method='java/util/ArrayList size ()I' bytes='5' count='1674' iicount='1674' level='1' stamp='1.760'>
<phase name='buildIR' stamp='1.760'>
<type id='722' name='int'/>
<klass id='832' name='java/util/ArrayList' flags='1'/>
<method id='833' holder='832' name='size' return='722' flags='1' bytes='5' iicount='1674'/>
<parse method='833'  stamp='1.760'>
<parse_done stamp='1.760'/>
</parse>
<phase name='optimize_blocks' stamp='1.761'>
<phase_done name='optimize_blocks' stamp='1.761'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.761'>
<phase_done name='rangeCheckElimination' stamp='1.761'/>
</phase>
<phase name='optimize_null_checks' stamp='1.761'>
<phase_done name='optimize_null_checks' stamp='1.761'/>
</phase>
<phase_done name='buildIR' stamp='1.761'/>
</phase>
<phase name='emit_lir' stamp='1.761'>
<phase name='lirGeneration' stamp='1.761'>
<phase_done name='lirGeneration' stamp='1.761'/>
</phase>
<phase name='linearScan' stamp='1.761'>
<phase_done name='linearScan' stamp='1.761'/>
</phase>
<phase_done name='emit_lir' stamp='1.761'/>
</phase>
<phase name='codeemit' stamp='1.761'>
<phase_done name='codeemit' stamp='1.761'/>
</phase>
<phase name='codeinstall' stamp='1.761'>
<phase_done name='codeinstall' stamp='1.762'/>
</phase>
<code_cache total_blobs='339' nmethods='72' adapters='180' free_code_cache='250333056'/>
<task_done success='1' nmsize='272' count='1674' stamp='1.762'/>
</task>
<task compile_id='92' method='java/net/URL getPort ()I' bytes='5' count='387' iicount='387' level='1' stamp='1.762'>
<phase name='buildIR' stamp='1.762'>
<type id='722' name='int'/>
<klass id='801' name='java/net/URL' flags='17'/>
<method id='832' holder='801' name='getPort' return='722' flags='1' bytes='5' iicount='387'/>
<parse method='832'  stamp='1.762'>
<parse_done stamp='1.762'/>
</parse>
<phase name='optimize_blocks' stamp='1.762'>
<phase_done name='optimize_blocks' stamp='1.762'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.762'>
<phase_done name='rangeCheckElimination' stamp='1.762'/>
</phase>
<phase name='optimize_null_checks' stamp='1.762'>
<phase_done name='optimize_null_checks' stamp='1.762'/>
</phase>
<phase_done name='buildIR' stamp='1.762'/>
</phase>
<phase name='emit_lir' stamp='1.762'>
<phase name='lirGeneration' stamp='1.762'>
<phase_done name='lirGeneration' stamp='1.762'/>
</phase>
<phase name='linearScan' stamp='1.762'>
<phase_done name='linearScan' stamp='1.762'/>
</phase>
<phase_done name='emit_lir' stamp='1.762'/>
</phase>
<phase name='codeemit' stamp='1.762'>
<phase_done name='codeemit' stamp='1.762'/>
</phase>
<phase name='codeinstall' stamp='1.762'>
<phase_done name='codeinstall' stamp='1.764'/>
</phase>
<code_cache total_blobs='340' nmethods='73' adapters='180' free_code_cache='250332288'/>
<task_done success='1' nmsize='272' count='387' stamp='1.764'/>
</task>
<task compile_id='96' method='sun/util/locale/LocaleUtils isUpper (C)Z' bytes='18' count='258' iicount='258' level='3' stamp='1.764'>
<phase name='buildIR' stamp='1.764'>
<type id='716' name='boolean'/>
<type id='717' name='char'/>
<klass id='832' name='sun/util/locale/LocaleUtils' flags='17'/>
<method id='833' holder='832' name='isUpper' return='716' arguments='717' flags='10' bytes='18' iicount='258'/>
<parse method='833'  stamp='1.764'>
<parse_done stamp='1.764'/>
</parse>
<phase name='optimize_blocks' stamp='1.764'>
<phase_done name='optimize_blocks' stamp='1.764'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.765'>
<phase_done name='rangeCheckElimination' stamp='1.765'/>
</phase>
<phase name='optimize_null_checks' stamp='1.765'>
<phase_done name='optimize_null_checks' stamp='1.765'/>
</phase>
<phase_done name='buildIR' stamp='1.765'/>
</phase>
<phase name='emit_lir' stamp='1.765'>
<phase name='lirGeneration' stamp='1.765'>
<phase_done name='lirGeneration' stamp='1.765'/>
</phase>
<phase name='linearScan' stamp='1.765'>
<phase_done name='linearScan' stamp='1.765'/>
</phase>
<phase_done name='emit_lir' stamp='1.765'/>
</phase>
<phase name='codeemit' stamp='1.765'>
<phase_done name='codeemit' stamp='1.765'/>
</phase>
<phase name='codeinstall' stamp='1.765'>
<phase_done name='codeinstall' stamp='1.768'/>
</phase>
<code_cache total_blobs='341' nmethods='74' adapters='180' free_code_cache='250331264'/>
<task_done success='1' nmsize='464' count='260' stamp='1.768'/>
</task>
<task compile_id='98' method='java/lang/AbstractStringBuilder &lt;init&gt; (I)V' bytes='12' count='2432' iicount='2432' level='3' stamp='1.769'>
<phase name='buildIR' stamp='1.769'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2432'/>
<parse method='832'  stamp='1.769'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23775'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='793'/>
<parse_done stamp='1.769'/>
</parse>
<parse_done stamp='1.769'/>
</parse>
<phase name='optimize_blocks' stamp='1.769'>
<phase_done name='optimize_blocks' stamp='1.769'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.769'>
<phase_done name='rangeCheckElimination' stamp='1.769'/>
</phase>
<phase name='optimize_null_checks' stamp='1.769'>
<phase_done name='optimize_null_checks' stamp='1.769'/>
</phase>
<phase_done name='buildIR' stamp='1.769'/>
</phase>
<phase name='emit_lir' stamp='1.769'>
<phase name='lirGeneration' stamp='1.769'>
<phase_done name='lirGeneration' stamp='1.769'/>
</phase>
<phase name='linearScan' stamp='1.769'>
<phase_done name='linearScan' stamp='1.769'/>
</phase>
<phase_done name='emit_lir' stamp='1.769'/>
</phase>
<phase name='codeemit' stamp='1.769'>
<phase_done name='codeemit' stamp='1.769'/>
</phase>
<phase name='codeinstall' stamp='1.769'>
<dependency type='no_finalizable_subclasses' ctxk='793'/>
<phase_done name='codeinstall' stamp='1.773'/>
</phase>
<code_cache total_blobs='343' nmethods='75' adapters='180' free_code_cache='250324672'/>
<task_done success='1' nmsize='592' count='2432' inlined_bytes='1' stamp='1.773'/>
</task>
<task compile_id='99' method='java/util/LinkedHashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='23' count='651' iicount='652' level='3' stamp='1.773'>
<phase name='buildIR' stamp='1.773'>
<klass id='833' name='java/util/HashMap$Node' flags='8'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/LinkedHashMap' flags='1'/>
<method id='834' holder='832' name='newNode' return='833' arguments='722 729 729 833' flags='0' bytes='23' iicount='697'/>
<parse method='834'  stamp='1.773'>
<bc code='183' bci='9'/>
<type id='724' name='void'/>
<klass id='836' name='java/util/LinkedHashMap$Entry' flags='8'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='722 729 729 833' flags='0' bytes='10' iicount='1164'/>
<call method='837' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='183' bci='6'/>
<method id='839' holder='833' name='&lt;init&gt;' return='724' arguments='722 729 729 833' flags='0' bytes='26' compile_id='82' compiler='C1' level='3' iicount='2295'/>
<call method='839' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='183' bci='1'/>
<method id='841' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='24366'/>
<call method='841' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='841'>
<parse_done stamp='1.784'/>
</parse>
<parse_done stamp='1.784'/>
</parse>
<parse_done stamp='1.784'/>
</parse>
<bc code='183' bci='17'/>
<method id='843' holder='832' name='linkNodeLast' return='724' arguments='836' flags='2' bytes='33' iicount='1164'/>
<call method='843' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<parse_done stamp='1.784'/>
</parse>
<parse_done stamp='1.784'/>
</parse>
<phase name='optimize_blocks' stamp='1.784'>
<phase_done name='optimize_blocks' stamp='1.784'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.784'>
<phase_done name='rangeCheckElimination' stamp='1.784'/>
</phase>
<phase name='optimize_null_checks' stamp='1.784'>
<phase_done name='optimize_null_checks' stamp='1.784'/>
</phase>
<phase_done name='buildIR' stamp='1.784'/>
</phase>
<phase name='emit_lir' stamp='1.784'>
<phase name='lirGeneration' stamp='1.784'>
<phase_done name='lirGeneration' stamp='1.784'/>
</phase>
<phase name='linearScan' stamp='1.784'>
<phase_done name='linearScan' stamp='1.784'/>
</phase>
<phase_done name='emit_lir' stamp='1.784'/>
</phase>
<phase name='codeemit' stamp='1.784'>
<phase_done name='codeemit' stamp='1.784'/>
</phase>
<phase name='codeinstall' stamp='1.784'>
<phase_done name='codeinstall' stamp='1.796'/>
</phase>
<code_cache total_blobs='345' nmethods='78' adapters='180' free_code_cache='250325504'/>
<task_done success='1' nmsize='1104' count='1164' inlined_bytes='70' stamp='1.796'/>
</task>
<task compile_id='100' method='java/util/LinkedHashMap$Entry &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='10' count='1164' iicount='1164' level='3' stamp='1.796'>
<phase name='buildIR' stamp='1.796'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='833' name='java/util/HashMap$Node' flags='8'/>
<klass id='832' name='java/util/LinkedHashMap$Entry' flags='8'/>
<method id='834' holder='832' name='&lt;init&gt;' return='724' arguments='722 729 729 833' flags='0' bytes='10' iicount='1164'/>
<parse method='834'  stamp='1.796'>
<bc code='183' bci='6'/>
<method id='836' holder='833' name='&lt;init&gt;' return='724' arguments='722 729 729 833' flags='0' bytes='26' compile_id='82' compiler='C1' level='3' iicount='2295'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='1'/>
<method id='838' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='24391'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='832'/>
<parse_done stamp='1.796'/>
</parse>
<parse_done stamp='1.796'/>
</parse>
<parse_done stamp='1.796'/>
</parse>
<phase name='optimize_blocks' stamp='1.796'>
<phase_done name='optimize_blocks' stamp='1.796'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.796'>
<phase_done name='rangeCheckElimination' stamp='1.796'/>
</phase>
<phase name='optimize_null_checks' stamp='1.796'>
<phase_done name='optimize_null_checks' stamp='1.796'/>
</phase>
<phase_done name='buildIR' stamp='1.796'/>
</phase>
<phase name='emit_lir' stamp='1.796'>
<phase name='lirGeneration' stamp='1.796'>
<phase_done name='lirGeneration' stamp='1.796'/>
</phase>
<phase name='linearScan' stamp='1.796'>
<phase_done name='linearScan' stamp='1.796'/>
</phase>
<phase_done name='emit_lir' stamp='1.796'/>
</phase>
<phase name='codeemit' stamp='1.796'>
<phase_done name='codeemit' stamp='1.796'/>
</phase>
<phase name='codeinstall' stamp='1.796'>
<dependency type='no_finalizable_subclasses' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.801'/>
</phase>
<code_cache total_blobs='346' nmethods='79' adapters='180' free_code_cache='250324224'/>
<task_done success='1' nmsize='592' count='1164' inlined_bytes='27' stamp='1.801'/>
</task>
<task compile_id='101' method='java/util/LinkedHashMap linkNodeLast (Ljava/util/LinkedHashMap$Entry;)V' bytes='33' count='1164' iicount='1164' level='3' stamp='1.801'>
<phase name='buildIR' stamp='1.801'>
<type id='724' name='void'/>
<klass id='833' name='java/util/LinkedHashMap$Entry' flags='8'/>
<klass id='832' name='java/util/LinkedHashMap' flags='1'/>
<method id='834' holder='832' name='linkNodeLast' return='724' arguments='833' flags='2' bytes='33' iicount='1164'/>
<parse method='834'  stamp='1.801'>
<parse_done stamp='1.801'/>
</parse>
<phase name='optimize_blocks' stamp='1.801'>
<phase_done name='optimize_blocks' stamp='1.801'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.801'>
<phase_done name='rangeCheckElimination' stamp='1.801'/>
</phase>
<phase name='optimize_null_checks' stamp='1.801'>
<phase_done name='optimize_null_checks' stamp='1.801'/>
</phase>
<phase_done name='buildIR' stamp='1.801'/>
</phase>
<phase name='emit_lir' stamp='1.801'>
<phase name='lirGeneration' stamp='1.801'>
<phase_done name='lirGeneration' stamp='1.801'/>
</phase>
<phase name='linearScan' stamp='1.801'>
<phase_done name='linearScan' stamp='1.801'/>
</phase>
<phase_done name='emit_lir' stamp='1.801'/>
</phase>
<phase name='codeemit' stamp='1.801'>
<phase_done name='codeemit' stamp='1.801'/>
</phase>
<phase name='codeinstall' stamp='1.801'>
<phase_done name='codeinstall' stamp='1.806'/>
</phase>
<code_cache total_blobs='347' nmethods='80' adapters='180' free_code_cache='250322944'/>
<task_done success='1' nmsize='560' count='1164' stamp='1.806'/>
</task>
<task compile_id='102' method='java/util/LinkedHashMap afterNodeInsertion (Z)V' bytes='40' count='1164' iicount='1164' level='3' stamp='1.806'>
<phase name='buildIR' stamp='1.806'>
<type id='724' name='void'/>
<type id='716' name='boolean'/>
<klass id='832' name='java/util/LinkedHashMap' flags='1'/>
<method id='833' holder='832' name='afterNodeInsertion' return='724' arguments='716' flags='0' bytes='40' iicount='1164'/>
<parse method='833'  stamp='1.806'>
<bc code='182' bci='15'/>
<klass id='837' name='java/util/Map$Entry' flags='1545'/>
<method id='838' holder='832' name='removeEldestEntry' return='716' arguments='837' flags='4' bytes='2' iicount='587'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='184' bci='28'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='840' name='java/util/HashMap' flags='1'/>
<method id='841' holder='840' name='hash' return='722' arguments='729' flags='24' bytes='20' iicount='5816'/>
<call method='841' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='841'>
<bc code='182' bci='9'/>
<method id='843' holder='729' name='hashCode' return='722' flags='257' bytes='0' compile_id='104' compile_kind='c2n' level='0' iicount='896'/>
<call method='843' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.806'/>
</parse>
<bc code='182' bci='35'/>
<klass id='839' name='java/util/HashMap$Node' flags='8'/>
<method id='844' holder='840' name='removeNode' return='839' arguments='722 729 729 716 716' flags='16' bytes='291' iicount='177'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.806'/>
</parse>
<phase name='optimize_blocks' stamp='1.806'>
<phase_done name='optimize_blocks' stamp='1.806'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.806'>
<phase_done name='rangeCheckElimination' stamp='1.806'/>
</phase>
<phase name='optimize_null_checks' stamp='1.806'>
<phase_done name='optimize_null_checks' stamp='1.806'/>
</phase>
<phase_done name='buildIR' stamp='1.806'/>
</phase>
<phase name='emit_lir' stamp='1.806'>
<phase name='lirGeneration' stamp='1.806'>
<phase_done name='lirGeneration' stamp='1.806'/>
</phase>
<phase name='linearScan' stamp='1.806'>
<phase_done name='linearScan' stamp='1.806'/>
</phase>
<phase_done name='emit_lir' stamp='1.806'/>
</phase>
<phase name='codeemit' stamp='1.806'>
<phase_done name='codeemit' stamp='1.806'/>
</phase>
<phase name='codeinstall' stamp='1.806'>
<phase_done name='codeinstall' stamp='1.815'/>
</phase>
<code_cache total_blobs='348' nmethods='81' adapters='180' free_code_cache='250320576'/>
<task_done success='1' nmsize='1352' count='1164' inlined_bytes='20' stamp='1.815'/>
</task>
<task compile_id='103' method='java/util/LinkedHashMap removeEldestEntry (Ljava/util/Map$Entry;)Z' bytes='2' count='587' iicount='587' level='1' stamp='1.815'>
<phase name='buildIR' stamp='1.815'>
<type id='716' name='boolean'/>
<klass id='833' name='java/util/Map$Entry' flags='1545'/>
<klass id='832' name='java/util/LinkedHashMap' flags='1'/>
<method id='834' holder='832' name='removeEldestEntry' return='716' arguments='833' flags='4' bytes='2' iicount='587'/>
<parse method='834'  stamp='1.815'>
<parse_done stamp='1.815'/>
</parse>
<phase name='optimize_blocks' stamp='1.815'>
<phase_done name='optimize_blocks' stamp='1.815'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.815'>
<phase_done name='rangeCheckElimination' stamp='1.815'/>
</phase>
<phase name='optimize_null_checks' stamp='1.815'>
<phase_done name='optimize_null_checks' stamp='1.815'/>
</phase>
<phase_done name='buildIR' stamp='1.815'/>
</phase>
<phase name='emit_lir' stamp='1.815'>
<phase name='lirGeneration' stamp='1.815'>
<phase_done name='lirGeneration' stamp='1.815'/>
</phase>
<phase name='linearScan' stamp='1.815'>
<phase_done name='linearScan' stamp='1.815'/>
</phase>
<phase_done name='emit_lir' stamp='1.815'/>
</phase>
<phase name='codeemit' stamp='1.815'>
<phase_done name='codeemit' stamp='1.815'/>
</phase>
<phase name='codeinstall' stamp='1.815'>
<phase_done name='codeinstall' stamp='1.817'/>
</phase>
<code_cache total_blobs='349' nmethods='82' adapters='180' free_code_cache='250319872'/>
<task_done success='1' nmsize='272' count='587' stamp='1.817'/>
</task>
<task compile_id='105' method='java/util/Hashtable put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='104' count='276' backedge_count='110' iicount='278' level='3' stamp='1.966'>
<phase name='buildIR' stamp='1.967'>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='765' name='java/util/Hashtable' flags='1'/>
<method id='832' holder='765' name='put' return='729' arguments='729 729' flags='33' bytes='104' iicount='280'/>
<parse method='832'  stamp='1.967'>
<bc code='183' bci='8'/>
<type id='724' name='void'/>
<klass id='828' name='java/lang/NullPointerException' flags='1'/>
<method id='834' holder='828' name='&lt;init&gt;' return='724' flags='1' bytes='5' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='182' bci='18'/>
<type id='722' name='int'/>
<method id='838' holder='729' name='hashCode' return='722' flags='257' bytes='0' compile_id='104' compile_kind='c2n' level='0' iicount='896'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='60'/>
<type id='716' name='boolean'/>
<method id='839' holder='729' name='equals' return='716' arguments='729' flags='1' bytes='11' iicount='1'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='99'/>
<method id='840' holder='765' name='addEntry' return='724' arguments='722 729 729 722' flags='2' bytes='87' iicount='273'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.967'/>
</parse>
<phase name='optimize_blocks' stamp='1.967'>
<phase_done name='optimize_blocks' stamp='1.967'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.967'>
<phase_done name='rangeCheckElimination' stamp='1.967'/>
</phase>
<phase name='optimize_null_checks' stamp='1.967'>
<phase_done name='optimize_null_checks' stamp='1.967'/>
</phase>
<phase_done name='buildIR' stamp='1.967'/>
</phase>
<phase name='emit_lir' stamp='1.967'>
<phase name='lirGeneration' stamp='1.967'>
<phase_done name='lirGeneration' stamp='1.967'/>
</phase>
<phase name='linearScan' stamp='1.967'>
<phase_done name='linearScan' stamp='1.967'/>
</phase>
<phase_done name='emit_lir' stamp='1.967'/>
</phase>
<phase name='codeemit' stamp='1.967'>
<phase_done name='codeemit' stamp='1.967'/>
</phase>
<phase name='codeinstall' stamp='1.967'>
<phase_done name='codeinstall' stamp='1.980'/>
</phase>
<code_cache total_blobs='350' nmethods='83' adapters='180' free_code_cache='250316352'/>
<task_done success='1' nmsize='1976' count='280' backedge_count='111' stamp='1.980'/>
</task>
<task compile_id='107' method='java/lang/StringBuffer &lt;init&gt; (I)V' bytes='6' count='1309' iicount='1309' level='3' stamp='1.980'>
<phase name='buildIR' stamp='1.980'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<method id='832' holder='794' name='&lt;init&gt;' return='724' arguments='722' flags='1' bytes='6' iicount='1313'/>
<parse method='832'  stamp='1.980'>
<bc code='183' bci='2'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' compile_id='98' compiler='C1' level='3' iicount='2585'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='836' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='24581'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='1.981'/>
</parse>
<parse_done stamp='1.981'/>
</parse>
<parse_done stamp='1.981'/>
</parse>
<phase name='optimize_blocks' stamp='1.981'>
<phase_done name='optimize_blocks' stamp='1.981'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.981'>
<phase_done name='rangeCheckElimination' stamp='1.981'/>
</phase>
<phase name='optimize_null_checks' stamp='1.981'>
<phase_done name='optimize_null_checks' stamp='1.981'/>
</phase>
<phase_done name='buildIR' stamp='1.981'/>
</phase>
<phase name='emit_lir' stamp='1.981'>
<phase name='lirGeneration' stamp='1.981'>
<phase_done name='lirGeneration' stamp='1.981'/>
</phase>
<phase name='linearScan' stamp='1.981'>
<phase_done name='linearScan' stamp='1.981'/>
</phase>
<phase_done name='emit_lir' stamp='1.981'/>
</phase>
<phase name='codeemit' stamp='1.981'>
<phase_done name='codeemit' stamp='1.981'/>
</phase>
<phase name='codeinstall' stamp='1.981'>
<phase_done name='codeinstall' stamp='1.985'/>
</phase>
<code_cache total_blobs='351' nmethods='84' adapters='180' free_code_cache='250315008'/>
<task_done success='1' nmsize='688' count='1341' inlined_bytes='13' stamp='1.985'/>
</task>
<task compile_id='108' method='java/lang/StringBuffer toString ()Ljava/lang/String;' bytes='36' count='1337' iicount='1337' level='3' stamp='1.985'>
<phase name='buildIR' stamp='1.985'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<method id='832' holder='794' name='toString' return='730' flags='33' bytes='36' iicount='1337'/>
<parse method='832'  stamp='1.985'>
<bc code='184' bci='17'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='834' name='java/util/Arrays' flags='1'/>
<method id='835' holder='834' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='97' compiler='C2' level='4' iicount='5638'/>
<call method='835' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='32'/>
<type id='724' name='void'/>
<type id='716' name='boolean'/>
<method id='837' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1698'/>
<call method='837' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='839' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='24611'/>
<call method='839' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<parse_done stamp='1.986'/>
</parse>
<parse_done stamp='1.986'/>
</parse>
<parse_done stamp='1.986'/>
</parse>
<phase name='optimize_blocks' stamp='1.986'>
<phase_done name='optimize_blocks' stamp='1.986'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.986'>
<phase_done name='rangeCheckElimination' stamp='1.986'/>
</phase>
<phase name='optimize_null_checks' stamp='1.986'>
<phase_done name='optimize_null_checks' stamp='1.986'/>
</phase>
<phase_done name='buildIR' stamp='1.986'/>
</phase>
<phase name='emit_lir' stamp='1.986'>
<phase name='lirGeneration' stamp='1.986'>
<phase_done name='lirGeneration' stamp='1.986'/>
</phase>
<phase name='linearScan' stamp='1.986'>
<phase_done name='linearScan' stamp='1.986'/>
</phase>
<phase_done name='emit_lir' stamp='1.986'/>
</phase>
<phase name='codeemit' stamp='1.986'>
<phase_done name='codeemit' stamp='1.986'/>
</phase>
<phase name='codeinstall' stamp='1.986'>
<phase_done name='codeinstall' stamp='1.993'/>
</phase>
<code_cache total_blobs='352' nmethods='85' adapters='180' free_code_cache='250312896'/>
<task_done success='1' nmsize='1192' count='1337' inlined_bytes='11' stamp='1.993'/>
</task>
<task compile_id='109' method='java/lang/String &lt;init&gt; ([CZ)V' bytes='10' count='1698' iicount='1698' level='3' stamp='1.993'>
<phase name='buildIR' stamp='1.993'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1698'/>
<parse method='832'  stamp='1.993'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='24611'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='1.993'/>
</parse>
<parse_done stamp='1.993'/>
</parse>
<phase name='optimize_blocks' stamp='1.993'>
<phase_done name='optimize_blocks' stamp='1.993'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.993'>
<phase_done name='rangeCheckElimination' stamp='1.993'/>
</phase>
<phase name='optimize_null_checks' stamp='1.993'>
<phase_done name='optimize_null_checks' stamp='1.993'/>
</phase>
<phase_done name='buildIR' stamp='1.993'/>
</phase>
<phase name='emit_lir' stamp='1.993'>
<phase name='lirGeneration' stamp='1.993'>
<phase_done name='lirGeneration' stamp='1.993'/>
</phase>
<phase name='linearScan' stamp='1.993'>
<phase_done name='linearScan' stamp='1.993'/>
</phase>
<phase_done name='emit_lir' stamp='1.993'/>
</phase>
<phase name='codeemit' stamp='1.993'>
<phase_done name='codeemit' stamp='1.993'/>
</phase>
<phase name='codeinstall' stamp='1.993'>
<phase_done name='codeinstall' stamp='1.997'/>
</phase>
<code_cache total_blobs='353' nmethods='86' adapters='180' free_code_cache='250311872'/>
<task_done success='1' nmsize='464' count='1698' inlined_bytes='1' stamp='1.997'/>
</task>
<task compile_id='106' method='java/util/Hashtable addEntry (ILjava/lang/Object;Ljava/lang/Object;I)V' bytes='87' count='273' iicount='273' level='3' stamp='1.997'>
<phase name='buildIR' stamp='1.997'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='765' name='java/util/Hashtable' flags='1'/>
<method id='832' holder='765' name='addEntry' return='724' arguments='722 729 729 722' flags='2' bytes='87' iicount='273'/>
<parse method='832'  stamp='1.997'>
<bc code='182' bci='28'/>
<method id='836' holder='765' name='rehash' return='724' flags='4' bytes='142' iicount='14'/>
<call method='836' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='765' x='836'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='38'/>
<method id='838' holder='729' name='hashCode' return='722' flags='257' bytes='0' compile_id='104' compile_kind='c2n' level='0' iicount='896'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='72'/>
<klass id='834' name='java/util/Hashtable$Entry' flags='10'/>
<method id='839' holder='834' name='&lt;init&gt;' return='724' arguments='722 729 729 834' flags='4' bytes='26' iicount='273'/>
<call method='839' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='183' bci='1'/>
<method id='841' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='24611'/>
<call method='841' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='841'>
<parse_done stamp='1.997'/>
</parse>
<parse_done stamp='1.997'/>
</parse>
<parse_done stamp='1.997'/>
</parse>
<phase name='optimize_blocks' stamp='1.997'>
<phase_done name='optimize_blocks' stamp='1.997'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.997'>
<phase_done name='rangeCheckElimination' stamp='1.997'/>
</phase>
<phase name='optimize_null_checks' stamp='1.997'>
<phase_done name='optimize_null_checks' stamp='1.997'/>
</phase>
<phase_done name='buildIR' stamp='1.997'/>
</phase>
<phase name='emit_lir' stamp='1.997'>
<phase name='lirGeneration' stamp='1.997'>
<phase_done name='lirGeneration' stamp='1.997'/>
</phase>
<phase name='linearScan' stamp='1.997'>
<phase_done name='linearScan' stamp='1.997'/>
</phase>
<phase_done name='emit_lir' stamp='1.997'/>
</phase>
<phase name='codeemit' stamp='1.997'>
<phase_done name='codeemit' stamp='1.997'/>
</phase>
<phase name='codeinstall' stamp='1.997'>
<dependency type='unique_concrete_method' ctxk='765' x='836'/>
<phase_done name='codeinstall' stamp='2.009'/>
</phase>
<code_cache total_blobs='354' nmethods='87' adapters='180' free_code_cache='250308672'/>
<task_done success='1' nmsize='1624' count='273' inlined_bytes='27' stamp='2.009'/>
</task>
<task compile_id='110' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='1280' iicount='1280' level='3' stamp='3.311'>
<phase name='buildIR' stamp='3.311'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='832' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='1280'/>
<parse method='832'  stamp='3.311'>
<bc code='183' bci='13'/>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<method id='834' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='4511'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='3.311'/>
</parse>
<phase name='optimize_blocks' stamp='3.311'>
<phase_done name='optimize_blocks' stamp='3.311'/>
</phase>
<phase name='rangeCheckElimination' stamp='3.311'>
<phase_done name='rangeCheckElimination' stamp='3.311'/>
</phase>
<phase name='optimize_null_checks' stamp='3.311'>
<phase_done name='optimize_null_checks' stamp='3.311'/>
</phase>
<phase_done name='buildIR' stamp='3.311'/>
</phase>
<phase name='emit_lir' stamp='3.311'>
<phase name='lirGeneration' stamp='3.311'>
<phase_done name='lirGeneration' stamp='3.311'/>
</phase>
<phase name='linearScan' stamp='3.311'>
<phase_done name='linearScan' stamp='3.311'/>
</phase>
<phase_done name='emit_lir' stamp='3.311'/>
</phase>
<phase name='codeemit' stamp='3.311'>
<phase_done name='codeemit' stamp='3.311'/>
</phase>
<phase name='codeinstall' stamp='3.311'>
<phase_done name='codeinstall' stamp='3.315'/>
</phase>
<code_cache total_blobs='355' nmethods='88' adapters='180' free_code_cache='250307520'/>
<task_done success='1' nmsize='520' count='1281' stamp='3.315'/>
</task>
<task compile_id='112' method='java/nio/Buffer position ()I' bytes='5' count='384' iicount='384' level='1' stamp='8.030'>
<phase name='buildIR' stamp='8.030'>
<type id='722' name='int'/>
<klass id='808' name='java/nio/Buffer' flags='1025'/>
<method id='832' holder='808' name='position' return='722' flags='17' bytes='5' iicount='384'/>
<parse method='832'  stamp='8.030'>
<parse_done stamp='8.030'/>
</parse>
<phase name='optimize_blocks' stamp='8.030'>
<phase_done name='optimize_blocks' stamp='8.030'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.030'>
<phase_done name='rangeCheckElimination' stamp='8.030'/>
</phase>
<phase name='optimize_null_checks' stamp='8.030'>
<phase_done name='optimize_null_checks' stamp='8.030'/>
</phase>
<phase_done name='buildIR' stamp='8.030'/>
</phase>
<phase name='emit_lir' stamp='8.030'>
<phase name='lirGeneration' stamp='8.030'>
<phase_done name='lirGeneration' stamp='8.030'/>
</phase>
<phase name='linearScan' stamp='8.030'>
<phase_done name='linearScan' stamp='8.030'/>
</phase>
<phase_done name='emit_lir' stamp='8.030'/>
</phase>
<phase name='codeemit' stamp='8.030'>
<phase_done name='codeemit' stamp='8.030'/>
</phase>
<phase name='codeinstall' stamp='8.030'>
<phase_done name='codeinstall' stamp='8.032'/>
</phase>
<code_cache total_blobs='356' nmethods='89' adapters='180' free_code_cache='250306688'/>
<task_done success='1' nmsize='272' count='384' stamp='8.032'/>
</task>
<task compile_id='115' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='197' count='1033' backedge_count='326' iicount='1033' level='3' stamp='8.036'>
<phase name='buildIR' stamp='8.036'>
<klass id='833' name='sun/misc/URLClassPath$Loader' flags='10'/>
<type id='722' name='int'/>
<klass id='832' name='sun/misc/URLClassPath' flags='1'/>
<method id='834' holder='832' name='getLoader' return='833' arguments='722' flags='34' bytes='197' iicount='1034'/>
<parse method='834'  stamp='8.036'>
<bc code='182' bci='13'/>
<klass id='836' name='java/util/ArrayList' flags='1'/>
<method id='841' holder='836' name='size' return='722' flags='1' bytes='5' compile_id='95' compiler='C1' level='1' iicount='1674'/>
<call method='841' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='841'>
<parse_done stamp='8.042'/>
</parse>
<bc code='182' bci='33'/>
<type id='716' name='boolean'/>
<klass id='837' name='java/util/Stack' flags='1'/>
<method id='843' holder='837' name='empty' return='716' flags='1' bytes='13' iicount='336'/>
<call method='843' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='837'/>
<parse method='843'>
<bc code='182' bci='1'/>
<klass id='845' name='java/util/Vector' flags='1'/>
<method id='846' holder='845' name='size' return='722' flags='33' bytes='5' iicount='1055'/>
<call method='846' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='8.042'/>
</parse>
<parse_done stamp='8.042'/>
</parse>
<bc code='182' bci='47'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='848' holder='837' name='pop' return='729' flags='33' bytes='19' iicount='330'/>
<call method='848' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='837'/>
<parse method='848'>
<bc code='182' bci='1'/>
<call method='846' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='8.042'/>
</parse>
<bc code='182' bci='6'/>
<method id='850' holder='837' name='peek' return='729' flags='33' bytes='25' iicount='332'/>
<call method='850' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='837'/>
<parse method='850'>
<bc code='182' bci='1'/>
<call method='846' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='8.042'/>
</parse>
<bc code='183' bci='13'/>
<type id='724' name='void'/>
<klass id='852' name='java/util/EmptyStackException' unloaded='1'/>
<method id='853' holder='852' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='21'/>
<method id='854' holder='845' name='elementAt' return='729' arguments='722' flags='33' bytes='48' iicount='392'/>
<call method='854' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.042'/>
</parse>
<bc code='182' bci='14'/>
<method id='856' holder='845' name='removeElementAt' return='724' arguments='722' flags='33' bytes='115' iicount='330'/>
<call method='856' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.042'/>
</parse>
<bc code='184' bci='67'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='801' name='java/net/URL' flags='17'/>
<klass id='858' name='sun/net/util/URLUtil' flags='1'/>
<method id='859' holder='858' name='urlNoFragString' return='730' arguments='801' flags='9' bytes='114' iicount='339'/>
<call method='859' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='76'/>
<klass id='838' name='java/util/HashMap' flags='1'/>
<method id='861' holder='838' name='containsKey' return='716' arguments='729' flags='1' bytes='18' iicount='348'/>
<call method='861' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='87'/>
<method id='862' holder='832' name='getLoader' return='833' arguments='801' flags='2' bytes='25' iicount='326'/>
<call method='862' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='862'>
<bc code='183' bci='6'/>
<klass id='864' name='sun/misc/URLClassPath$3' flags='0'/>
<method id='865' holder='864' name='&lt;init&gt;' return='724' arguments='832 801' flags='0' bytes='15' iicount='326'/>
<call method='865' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='865'>
<bc code='183' bci='11'/>
<method id='867' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='24682'/>
<call method='867' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<parse_done stamp='8.042'/>
</parse>
<parse_done stamp='8.042'/>
</parse>
<bc code='184' bci='9'/>
<klass id='870' name='java/security/PrivilegedExceptionAction' flags='1537'/>
<klass id='869' name='java/security/AccessController' flags='17'/>
<method id='871' holder='869' name='doPrivileged' return='729' arguments='870' flags='265' bytes='0' iicount='626'/>
<call method='871' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='18'/>
<klass id='739' name='java/lang/Exception' flags='1'/>
<klass id='872' name='java/security/PrivilegedActionException' flags='1'/>
<method id='873' holder='872' name='getException' return='739' flags='1' bytes='5' iicount='38'/>
<call method='873' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='872' x='873'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='872'/>
<parse method='873'>
<parse_done stamp='8.042'/>
</parse>
<parse_done stamp='8.042'/>
</parse>
<bc code='182' bci='94'/>
<klass id='876' name='[Ljava/net/URL;' flags='1041'/>
<method id='877' holder='833' name='getClassPath' return='876' flags='0' bytes='2' iicount='1'/>
<call method='877' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='107'/>
<method id='878' holder='832' name='push' return='724' arguments='876' flags='2' bytes='46' iicount='5'/>
<call method='878' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='123'/>
<call method='841' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='841'>
<parse_done stamp='8.042'/>
</parse>
<bc code='183' bci='127'/>
<method id='880' holder='832' name='validateLookupCache' return='724' arguments='722 730' flags='34' bytes='80' iicount='307'/>
<call method='880' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='136'/>
<method id='882' holder='836' name='add' return='716' arguments='729' flags='1' bytes='29' iicount='758'/>
<call method='882' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='882'>
<bc code='183' bci='7'/>
<method id='884' holder='836' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='23' iicount='758'/>
<call method='884' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<parse method='884'>
<bc code='184' bci='13'/>
<klass id='889' name='java/lang/Math' flags='17'/>
<method id='890' holder='889' name='max' return='722' arguments='722 722' flags='9' bytes='11' iicount='57286'/>
<call method='890' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='890'>
<parse_done stamp='8.042'/>
</parse>
<bc code='183' bci='19'/>
<method id='892' holder='836' name='ensureExplicitCapacity' return='724' arguments='722' flags='2' bytes='26' iicount='758'/>
<call method='892' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<parse method='892'>
<bc code='183' bci='22'/>
<method id='895' holder='836' name='grow' return='724' arguments='722' flags='2' bytes='45' iicount='40'/>
<call method='895' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.043'/>
</parse>
<parse_done stamp='8.043'/>
</parse>
<parse_done stamp='8.043'/>
</parse>
<bc code='182' bci='147'/>
<method id='897' holder='838' name='put' return='729' arguments='729 729' flags='1' bytes='13' compile_id='18' compiler='C1' level='3' iicount='2343'/>
<call method='897' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='190'/>
<method id='899' holder='836' name='get' return='729' arguments='722' flags='1' bytes='11' iicount='1052'/>
<call method='899' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='899'>
<bc code='183' bci='2'/>
<method id='901' holder='836' name='rangeCheck' return='724' arguments='722' flags='2' bytes='22' iicount='1053'/>
<call method='901' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='14'/>
<method id='904' holder='836' name='outOfBoundsMsg' return='730' arguments='722' flags='2' bytes='32' iicount='1'/>
<call method='904' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='17'/>
<klass id='903' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='906' holder='903' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='906' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='8.043'/>
</parse>
<bc code='182' bci='7'/>
<method id='907' holder='836' name='elementData' return='729' arguments='722' flags='0' bytes='7' iicount='1053'/>
<call method='907' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='907'>
<parse_done stamp='8.043'/>
</parse>
<parse_done stamp='8.043'/>
</parse>
<parse_done stamp='8.043'/>
</parse>
<phase name='optimize_blocks' stamp='8.043'>
<phase_done name='optimize_blocks' stamp='8.043'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.043'>
<phase_done name='rangeCheckElimination' stamp='8.043'/>
</phase>
<phase name='optimize_null_checks' stamp='8.043'>
<phase_done name='optimize_null_checks' stamp='8.043'/>
</phase>
<phase_done name='buildIR' stamp='8.043'/>
</phase>
<phase name='emit_lir' stamp='8.043'>
<phase name='lirGeneration' stamp='8.043'>
<phase_done name='lirGeneration' stamp='8.043'/>
</phase>
<phase name='linearScan' stamp='8.043'>
<phase_done name='linearScan' stamp='8.044'/>
</phase>
<phase_done name='emit_lir' stamp='8.044'/>
</phase>
<phase name='codeemit' stamp='8.044'>
<phase_done name='codeemit' stamp='8.044'/>
</phase>
<phase name='codeinstall' stamp='8.044'>
<dependency type='leaf_type' ctxk='836'/>
<dependency type='leaf_type' ctxk='837'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='872'/>
<dependency type='unique_concrete_method' ctxk='872' x='873'/>
<phase_done name='codeinstall' stamp='8.127'/>
</phase>
<code_cache total_blobs='360' nmethods='92' adapters='180' free_code_cache='250281856'/>
<task_done success='1' nmsize='9928' count='1094' backedge_count='326' inlined_bytes='257' stamp='8.127'/>
</task>
<task compile_id='125' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='1408' iicount='1408' level='3' stamp='8.127'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1408' stamp='8.127'/>
</task>
<task compile_id='124' method='java/util/jar/JarFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='22' count='1408' iicount='1408' level='3' stamp='8.127'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1408' stamp='8.127'/>
</task>
<task compile_id='123' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='1408' iicount='1408' level='3' stamp='8.127'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1408' stamp='8.127'/>
</task>
<task compile_id='120' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='2707' iicount='2707' level='3' stamp='8.127'>
<phase name='buildIR' stamp='8.127'>
<klass id='824' name='[B' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOf' return='824' arguments='824 722' flags='9' bytes='19' iicount='2707'/>
<parse method='833'  stamp='8.128'>
<bc code='184' bci='11'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='13313'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='8.128'/>
</parse>
<bc code='184' bci='14'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='838' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='838' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='8.139'/>
</parse>
<phase name='optimize_blocks' stamp='8.139'>
<phase_done name='optimize_blocks' stamp='8.139'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.139'>
<phase_done name='rangeCheckElimination' stamp='8.139'/>
</phase>
<phase name='optimize_null_checks' stamp='8.139'>
<phase_done name='optimize_null_checks' stamp='8.139'/>
</phase>
<phase_done name='buildIR' stamp='8.139'/>
</phase>
<phase name='emit_lir' stamp='8.139'>
<phase name='lirGeneration' stamp='8.139'>
<phase_done name='lirGeneration' stamp='8.139'/>
</phase>
<phase name='linearScan' stamp='8.139'>
<phase_done name='linearScan' stamp='8.139'/>
</phase>
<phase_done name='emit_lir' stamp='8.139'/>
</phase>
<phase name='codeemit' stamp='8.139'>
<phase_done name='codeemit' stamp='8.140'/>
</phase>
<phase name='codeinstall' stamp='8.140'>
<phase_done name='codeinstall' stamp='8.145'/>
</phase>
<code_cache total_blobs='361' nmethods='94' adapters='180' free_code_cache='250282048'/>
<task_done success='1' nmsize='808' count='2707' inlined_bytes='11' stamp='8.145'/>
</task>
<task compile_id='114' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='1094' iicount='1094' level='3' stamp='8.145'>
<phase name='buildIR' stamp='8.145'>
<klass id='833' name='sun/misc/URLClassPath$Loader' flags='10'/>
<klass id='826' name='[I' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='sun/misc/URLClassPath' flags='1'/>
<method id='834' holder='832' name='getNextLoader' return='833' arguments='826 722' flags='34' bytes='88' iicount='1094'/>
<parse method='834'  stamp='8.145'>
<bc code='182' bci='26'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='836' name='java/util/ArrayList' flags='1'/>
<method id='837' holder='836' name='get' return='729' arguments='722' flags='1' bytes='11' iicount='1088'/>
<call method='837' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='837'>
<bc code='183' bci='2'/>
<type id='724' name='void'/>
<method id='839' holder='836' name='rangeCheck' return='724' arguments='722' flags='2' bytes='22' iicount='1089'/>
<call method='839' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<bc code='183' bci='14'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='842' holder='836' name='outOfBoundsMsg' return='730' arguments='722' flags='2' bytes='32' iicount='1'/>
<call method='842' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='17'/>
<klass id='841' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='844' holder='841' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='8.145'/>
</parse>
<bc code='182' bci='7'/>
<method id='845' holder='836' name='elementData' return='729' arguments='722' flags='0' bytes='7' iicount='1089'/>
<call method='845' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='845'>
<parse_done stamp='8.145'/>
</parse>
<parse_done stamp='8.145'/>
</parse>
<bc code='183' bci='84'/>
<method id='849' holder='832' name='getLoader' return='833' arguments='722' flags='34' bytes='197' compile_id='115' compiler='C1' level='3' iicount='1094'/>
<call method='849' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.145'/>
</parse>
<phase name='optimize_blocks' stamp='8.145'>
<phase_done name='optimize_blocks' stamp='8.145'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.145'>
<phase_done name='rangeCheckElimination' stamp='8.145'/>
</phase>
<phase name='optimize_null_checks' stamp='8.145'>
<phase_done name='optimize_null_checks' stamp='8.145'/>
</phase>
<phase_done name='buildIR' stamp='8.145'/>
</phase>
<phase name='emit_lir' stamp='8.145'>
<phase name='lirGeneration' stamp='8.145'>
<phase_done name='lirGeneration' stamp='8.145'/>
</phase>
<phase name='linearScan' stamp='8.145'>
<phase_done name='linearScan' stamp='8.146'/>
</phase>
<phase_done name='emit_lir' stamp='8.146'/>
</phase>
<phase name='codeemit' stamp='8.146'>
<phase_done name='codeemit' stamp='8.146'/>
</phase>
<phase name='codeinstall' stamp='8.146'>
<dependency type='leaf_type' ctxk='836'/>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='8.161'/>
</phase>
<code_cache total_blobs='363' nmethods='95' adapters='180' free_code_cache='250272832'/>
<task_done success='1' nmsize='2152' count='1094' inlined_bytes='40' stamp='8.161'/>
</task>
<task compile_id='127' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger getAndIncrement ()I' bytes='40' count='297485' backedge_count='377490' iicount='297491' level='2' stamp='8.161'>
<phase name='buildIR' stamp='8.161'>
<type id='722' name='int'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='40' iicount='297577'/>
<parse method='833'  stamp='8.161'>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='837' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1225'/>
<call method='837' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='31'/>
<type id='716' name='boolean'/>
<method id='838' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='49' compile_kind='c2n' level='0' iicount='791'/>
<call method='838' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='8.165'/>
</parse>
<phase name='optimize_blocks' stamp='8.165'>
<phase_done name='optimize_blocks' stamp='8.165'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.165'>
<phase_done name='rangeCheckElimination' stamp='8.165'/>
</phase>
<phase name='optimize_null_checks' stamp='8.165'>
<phase_done name='optimize_null_checks' stamp='8.165'/>
</phase>
<phase_done name='buildIR' stamp='8.165'/>
</phase>
<phase name='emit_lir' stamp='8.165'>
<phase name='lirGeneration' stamp='8.165'>
<phase_done name='lirGeneration' stamp='8.165'/>
</phase>
<phase name='linearScan' stamp='8.165'>
<phase_done name='linearScan' stamp='8.165'/>
</phase>
<phase_done name='emit_lir' stamp='8.165'/>
</phase>
<phase name='codeemit' stamp='8.165'>
<phase_done name='codeemit' stamp='8.165'/>
</phase>
<phase name='codeinstall' stamp='8.165'>
<phase_done name='codeinstall' stamp='8.168'/>
</phase>
<code_cache total_blobs='364' nmethods='97' adapters='180' free_code_cache='250275712'/>
<task_done success='1' nmsize='464' count='312924' backedge_count='415646' stamp='8.168'/>
</task>
<task compile_id='121' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='1160' iicount='1160' level='3' stamp='8.168'>
<phase name='buildIR' stamp='8.168'>
<type id='722' name='int'/>
<klass id='808' name='java/nio/Buffer' flags='1025'/>
<method id='832' holder='808' name='checkIndex' return='722' arguments='722' flags='16' bytes='22' iicount='1160'/>
<parse method='832'  stamp='8.168'>
<bc code='183' bci='16'/>
<type id='724' name='void'/>
<klass id='834' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='8.168'/>
</parse>
<phase name='optimize_blocks' stamp='8.168'>
<phase_done name='optimize_blocks' stamp='8.168'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.168'>
<phase_done name='rangeCheckElimination' stamp='8.168'/>
</phase>
<phase name='optimize_null_checks' stamp='8.168'>
<phase_done name='optimize_null_checks' stamp='8.168'/>
</phase>
<phase_done name='buildIR' stamp='8.168'/>
</phase>
<phase name='emit_lir' stamp='8.168'>
<phase name='lirGeneration' stamp='8.168'>
<phase_done name='lirGeneration' stamp='8.168'/>
</phase>
<phase name='linearScan' stamp='8.168'>
<phase_done name='linearScan' stamp='8.168'/>
</phase>
<phase_done name='emit_lir' stamp='8.168'/>
</phase>
<phase name='codeemit' stamp='8.168'>
<phase_done name='codeemit' stamp='8.168'/>
</phase>
<phase name='codeinstall' stamp='8.168'>
<phase_done name='codeinstall' stamp='8.186'/>
</phase>
<code_cache total_blobs='365' nmethods='98' adapters='180' free_code_cache='250274432'/>
<task_done success='1' nmsize='584' count='1160' stamp='8.186'/>
</task>
<task compile_id='122' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='1160' iicount='1160' level='3' stamp='8.186'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1160' stamp='8.186'/>
</task>
<task compile_id='119' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='1076' iicount='1076' level='3' stamp='8.186'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1076' stamp='8.186'/>
</task>
<task compile_id='118' method='java/util/ArrayList get (I)Ljava/lang/Object;' bytes='11' count='1088' iicount='1088' level='3' stamp='8.186'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1088' stamp='8.186'/>
</task>
<task compile_id='117' method='java/util/ArrayList elementData (I)Ljava/lang/Object;' bytes='7' count='1089' iicount='1089' level='3' stamp='8.186'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1089' stamp='8.186'/>
</task>
<task compile_id='116' method='java/util/ArrayList rangeCheck (I)V' bytes='22' count='1089' iicount='1089' level='3' stamp='8.186'>
<phase name='buildIR' stamp='8.186'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/ArrayList' flags='1'/>
<method id='833' holder='832' name='rangeCheck' return='724' arguments='722' flags='2' bytes='22' iicount='1089'/>
<parse method='833'  stamp='8.186'>
<bc code='183' bci='14'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='836' holder='832' name='outOfBoundsMsg' return='730' arguments='722' flags='2' bytes='32' iicount='1'/>
<call method='836' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='4'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='838' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' compile_id='77' compiler='C1' level='3' iicount='1304'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='840' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' compile_id='98' compiler='C1' level='3' iicount='2655'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='842' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='24729'/>
<call method='842' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<parse_done stamp='8.187'/>
</parse>
<parse_done stamp='8.187'/>
</parse>
<parse_done stamp='8.187'/>
</parse>
<bc code='182' bci='9'/>
<method id='845' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' compile_id='50' compiler='C1' level='3' iicount='3314'/>
<call method='845' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<bc code='183' bci='2'/>
<method id='847' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='7' compiler='C1' level='3' iicount='4310'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.187'/>
</parse>
<bc code='182' bci='13'/>
<method id='849' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='59'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='2'/>
<method id='851' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='59'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.187'/>
</parse>
<bc code='182' bci='18'/>
<call method='845' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<bc code='183' bci='2'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.187'/>
</parse>
<bc code='182' bci='25'/>
<call method='849' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='2'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.187'/>
</parse>
<bc code='182' bci='28'/>
<method id='854' holder='795' name='toString' return='730' flags='1' bytes='17' compile_id='110' compiler='C1' level='3' iicount='1311'/>
<call method='854' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='183' bci='13'/>
<klass id='821' name='[C' flags='1041'/>
<method id='856' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='4551'/>
<call method='856' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='8.187'/>
</parse>
<parse_done stamp='8.187'/>
</parse>
<bc code='183' bci='17'/>
<klass id='835' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='858' holder='835' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='858' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='8.187'/>
</parse>
<phase name='optimize_blocks' stamp='8.187'>
<phase_done name='optimize_blocks' stamp='8.187'/>
</phase>
<phase name='rangeCheckElimination' stamp='8.187'>
<phase_done name='rangeCheckElimination' stamp='8.187'/>
</phase>
<phase name='optimize_null_checks' stamp='8.187'>
<phase_done name='optimize_null_checks' stamp='8.187'/>
</phase>
<phase_done name='buildIR' stamp='8.187'/>
</phase>
<phase name='emit_lir' stamp='8.187'>
<phase name='lirGeneration' stamp='8.187'>
<phase_done name='lirGeneration' stamp='8.187'/>
</phase>
<phase name='linearScan' stamp='8.187'>
<phase_done name='linearScan' stamp='8.187'/>
</phase>
<phase_done name='emit_lir' stamp='8.187'/>
</phase>
<phase name='codeemit' stamp='8.187'>
<phase_done name='codeemit' stamp='8.187'/>
</phase>
<phase name='codeinstall' stamp='8.187'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='8.206'/>
</phase>
<code_cache total_blobs='366' nmethods='99' adapters='180' free_code_cache='250269824'/>
<task_done success='1' nmsize='2744' count='1089' inlined_bytes='101' stamp='8.206'/>
</task>
<task compile_id='132' method='java/lang/Thread getThreadGroup ()Ljava/lang/ThreadGroup;' bytes='5' count='129' iicount='129' level='1' stamp='18.436'>
<phase name='buildIR' stamp='18.436'>
<klass id='763' name='java/lang/ThreadGroup' flags='1'/>
<klass id='762' name='java/lang/Thread' flags='1'/>
<method id='832' holder='762' name='getThreadGroup' return='763' flags='17' bytes='5' iicount='129'/>
<parse method='832'  stamp='18.436'>
<parse_done stamp='18.437'/>
</parse>
<phase name='optimize_blocks' stamp='18.437'>
<phase_done name='optimize_blocks' stamp='18.437'/>
</phase>
<phase name='rangeCheckElimination' stamp='18.437'>
<phase_done name='rangeCheckElimination' stamp='18.437'/>
</phase>
<phase name='optimize_null_checks' stamp='18.437'>
<phase_done name='optimize_null_checks' stamp='18.437'/>
</phase>
<phase_done name='buildIR' stamp='18.437'/>
</phase>
<phase name='emit_lir' stamp='18.437'>
<phase name='lirGeneration' stamp='18.437'>
<phase_done name='lirGeneration' stamp='18.437'/>
</phase>
<phase name='linearScan' stamp='18.437'>
<phase_done name='linearScan' stamp='18.437'/>
</phase>
<phase_done name='emit_lir' stamp='18.437'/>
</phase>
<phase name='codeemit' stamp='18.437'>
<phase_done name='codeemit' stamp='18.437'/>
</phase>
<phase name='codeinstall' stamp='18.437'>
<phase_done name='codeinstall' stamp='18.439'/>
</phase>
<code_cache total_blobs='370' nmethods='103' adapters='180' free_code_cache='250266048'/>
<task_done success='1' nmsize='272' count='137' stamp='18.439'/>
</task>
<task compile_id='133' method='java/nio/ByteBuffer arrayOffset ()I' bytes='35' count='261' iicount='261' level='3' stamp='30.064'>
<phase name='buildIR' stamp='30.064'>
<type id='722' name='int'/>
<klass id='832' name='java/nio/ByteBuffer' flags='1025'/>
<method id='833' holder='832' name='arrayOffset' return='722' flags='17' bytes='35' iicount='262'/>
<parse method='833'  stamp='30.064'>
<bc code='183' bci='11'/>
<type id='724' name='void'/>
<klass id='835' name='java/lang/UnsupportedOperationException' unloaded='1'/>
<method id='836' holder='835' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='836' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='26'/>
<klass id='837' name='java/nio/ReadOnlyBufferException' unloaded='1'/>
<method id='838' holder='837' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='838' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='30.064'/>
</parse>
<phase name='optimize_blocks' stamp='30.064'>
<phase_done name='optimize_blocks' stamp='30.064'/>
</phase>
<phase name='rangeCheckElimination' stamp='30.064'>
<phase_done name='rangeCheckElimination' stamp='30.064'/>
</phase>
<phase name='optimize_null_checks' stamp='30.064'>
<phase_done name='optimize_null_checks' stamp='30.064'/>
</phase>
<phase_done name='buildIR' stamp='30.064'/>
</phase>
<phase name='emit_lir' stamp='30.064'>
<phase name='lirGeneration' stamp='30.064'>
<phase_done name='lirGeneration' stamp='30.064'/>
</phase>
<phase name='linearScan' stamp='30.064'>
<phase_done name='linearScan' stamp='30.064'/>
</phase>
<phase_done name='emit_lir' stamp='30.064'/>
</phase>
<phase name='codeemit' stamp='30.064'>
<phase_done name='codeemit' stamp='30.064'/>
</phase>
<phase name='codeinstall' stamp='30.064'>
<phase_done name='codeinstall' stamp='30.070'/>
</phase>
<code_cache total_blobs='371' nmethods='104' adapters='180' free_code_cache='250264384'/>
<task_done success='1' nmsize='728' count='262' stamp='30.070'/>
</task>
<task compile_id='135' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='18' backedge_count='381099' iicount='18' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' osr_bci='2' level='3' stamp='30.070'>
<phase name='buildIR' stamp='30.070'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' iicount='18'/>
<parse method='833'  stamp='30.070'>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='836' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger' flags='1'/>
<method id='837' holder='836' name='getAndIncrement' return='722' flags='17' bytes='40' compile_id='127' compiler='C1' level='2' iicount='376341'/>
<call method='837' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_fail reason='inlining prohibited by policy'/>
<bc code='182' bci='28'/>
<klass id='835' name='java/util/concurrent/CountDownLatch' flags='1'/>
<method id='838' holder='835' name='countDown' return='724' flags='1' bytes='10' iicount='60'/>
<call method='838' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='835'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='835'/>
<parse method='838'>
<bc code='182' bci='5'/>
<type id='716' name='boolean'/>
<klass id='841' name='java/util/concurrent/locks/AbstractQueuedSynchronizer' flags='1025'/>
<method id='842' holder='841' name='releaseShared' return='716' arguments='722' flags='17' bytes='16' iicount='60'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='182' bci='2'/>
<method id='844' holder='841' name='tryReleaseShared' return='716' arguments='722' flags='4' bytes='8' iicount='1'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='9'/>
<method id='847' holder='841' name='doReleaseShared' return='724' flags='2' bytes='79' iicount='10'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='30.070'/>
</parse>
<parse_done stamp='30.070'/>
</parse>
<parse_done stamp='30.070'/>
</parse>
<phase name='optimize_blocks' stamp='30.070'>
<phase_done name='optimize_blocks' stamp='30.070'/>
</phase>
<phase name='optimize_null_checks' stamp='30.070'>
<phase_done name='optimize_null_checks' stamp='30.070'/>
</phase>
<phase_done name='buildIR' stamp='30.070'/>
</phase>
<phase name='emit_lir' stamp='30.070'>
<phase name='lirGeneration' stamp='30.070'>
<phase_done name='lirGeneration' stamp='30.070'/>
</phase>
<phase name='linearScan' stamp='30.070'>
<phase_done name='linearScan' stamp='30.070'/>
</phase>
<phase_done name='emit_lir' stamp='30.070'/>
</phase>
<phase name='codeemit' stamp='30.070'>
<phase_done name='codeemit' stamp='30.070'/>
</phase>
<phase name='codeinstall' stamp='30.070'>
<dependency type='leaf_type' ctxk='836'/>
<dependency type='leaf_type' ctxk='835'/>
<phase_done name='codeinstall' stamp='30.079'/>
</phase>
<code_cache total_blobs='374' nmethods='105' adapters='180' free_code_cache='250250304'/>
<task_done success='1' nmsize='1352' count='22' backedge_count='464632' inlined_bytes='26' stamp='30.079'/>
</task>
<task compile_id='136' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='24' backedge_count='808074' iicount='24' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' level='3' stamp='30.112'>
<phase name='buildIR' stamp='30.112'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' iicount='24'/>
<parse method='833'  stamp='30.112'>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='835' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger' flags='1'/>
<method id='837' holder='835' name='getAndIncrement' return='722' flags='17' bytes='40' compile_id='134' compiler='C2' level='4' iicount='460904'/>
<call method='837' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='835'/>
<inline_fail reason='inlining prohibited by policy'/>
<bc code='182' bci='28'/>
<klass id='836' name='java/util/concurrent/CountDownLatch' flags='1'/>
<method id='838' holder='836' name='countDown' return='724' flags='1' bytes='10' iicount='60'/>
<call method='838' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='838'>
<bc code='182' bci='5'/>
<type id='716' name='boolean'/>
<klass id='841' name='java/util/concurrent/locks/AbstractQueuedSynchronizer' flags='1025'/>
<method id='842' holder='841' name='releaseShared' return='716' arguments='722' flags='17' bytes='16' iicount='60'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='182' bci='2'/>
<method id='844' holder='841' name='tryReleaseShared' return='716' arguments='722' flags='4' bytes='8' iicount='1'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='9'/>
<method id='847' holder='841' name='doReleaseShared' return='724' flags='2' bytes='79' iicount='10'/>
<call method='847' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='30.112'/>
</parse>
<parse_done stamp='30.112'/>
</parse>
<parse_done stamp='30.112'/>
</parse>
<phase name='optimize_blocks' stamp='30.112'>
<phase_done name='optimize_blocks' stamp='30.112'/>
</phase>
<phase name='rangeCheckElimination' stamp='30.112'>
<phase_done name='rangeCheckElimination' stamp='30.112'/>
</phase>
<phase name='optimize_null_checks' stamp='30.112'>
<phase_done name='optimize_null_checks' stamp='30.112'/>
</phase>
<phase_done name='buildIR' stamp='30.112'/>
</phase>
<phase name='emit_lir' stamp='30.112'>
<phase name='lirGeneration' stamp='30.112'>
<phase_done name='lirGeneration' stamp='30.112'/>
</phase>
<phase name='linearScan' stamp='30.112'>
<phase_done name='linearScan' stamp='30.112'/>
</phase>
<phase_done name='emit_lir' stamp='30.112'/>
</phase>
<phase name='codeemit' stamp='30.112'>
<phase_done name='codeemit' stamp='30.113'/>
</phase>
<phase name='codeinstall' stamp='30.113'>
<dependency type='leaf_type' ctxk='835'/>
<dependency type='leaf_type' ctxk='836'/>
<phase_done name='codeinstall' stamp='30.121'/>
</phase>
<code_cache total_blobs='374' nmethods='107' adapters='180' free_code_cache='250258560'/>
<task_done success='1' nmsize='1288' count='24' backedge_count='907165' inlined_bytes='26' stamp='30.121'/>
</task>
</compilation_log>
<compilation_log thread='19128'>
<start_compile_thread name='C2 CompilerThread0' thread='19128' process='4764' stamp='0.491'/>
<task compile_id='4' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='1492' backedge_count='47935' iicount='1492' stamp='0.635'>
<phase name='parse' nodes='3' live='3' stamp='0.635'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='normalize' return='730' arguments='730' flags='1' bytes='143' iicount='1492'/>
<parse method='833' uses='1492' stamp='0.644'>
<bc code='182' bci='1'/>
<type id='722' name='int'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' iicount='37367'/>
<call method='835' count='1280' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='1280' stamp='0.644'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='68' live='65' memory='30968' stamp='0.645'/>
</parse>
<bc code='162' bci='25'/>
<branch target_bci='125' taken='391' not_taken='34415' cnt='34806' prob='0.0112337'/>
<uncommon_trap bci='28' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='28' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='31'/>
<type id='717' name='char'/>
<method id='837' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='243722'/>
<call method='837' count='34415' prof_factor='1' inline='1'/>
<klass id='840' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='837' bci='13' reason='unloaded' action='reinterpret' index='245' klass='840'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='34415' stamp='0.652'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='209' live='199' memory='54880' stamp='0.656'/>
</parse>
<bc code='160' bci='40'/>
<branch target_bci='65' taken='34098' not_taken='317' cnt='34415' prob='0.990789'/>
<bc code='160' bci='49'/>
<branch target_bci='59' taken='317' not_taken='0' cnt='317' prob='always'/>
<uncommon_trap bci='49' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='183' bci='61'/>
<method id='836' holder='832' name='normalize' return='730' arguments='730 722 722' flags='2' bytes='231' iicount='889'/>
<call method='836' count='317' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='317' stamp='0.656'>
<bc code='154' bci='1'/>
<branch target_bci='6' taken='683' not_taken='0' cnt='683' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='162' bci='8'/>
<branch target_bci='13' taken='0' not_taken='683' cnt='683' prob='never'/>
<uncommon_trap bci='8' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='183' bci='24'/>
<type id='724' name='void'/>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<method id='842' holder='794' name='&lt;init&gt;' return='724' arguments='722' flags='1' bytes='6' iicount='1213'/>
<call method='842' count='683' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='24'/>
<bc code='154' bci='30'/>
<branch target_bci='46' taken='0' not_taken='683' cnt='683' prob='never'/>
<bc code='183' bci='38'/>
<method id='850' holder='832' name='normalizePrefix' return='722' arguments='730 722 794' flags='2' bytes='132' iicount='889'/>
<call method='850' count='683' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='244' stamp='0.657'>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='13'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.657'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='456' live='436' memory='106504' stamp='0.679'/>
</parse>
<bc code='183' bci='16'/>
<type id='716' name='boolean'/>
<method id='846' holder='832' name='isSlash' return='716' arguments='717' flags='2' bytes='18' iicount='79588'/>
<call method='846' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.679'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='489' live='468' memory='111824' stamp='0.679'/>
</parse>
<bc code='182' bci='40'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.680'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='600' live='574' memory='144384' stamp='0.683'/>
</parse>
<bc code='183' bci='46'/>
<method id='853' holder='832' name='isLetter' return='716' arguments='717' flags='2' bytes='30' iicount='2684'/>
<call method='853' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='0.683'>
<bc code='161' bci='3'/>
<branch target_bci='12' taken='2684' not_taken='0' cnt='2684' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='15'/>
<branch target_bci='28' taken='0' not_taken='2684' cnt='2684' prob='never'/>
<uncommon_trap bci='15' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='21'/>
<branch target_bci='28' taken='0' not_taken='2684' cnt='2684' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='654' live='624' memory='154320' stamp='0.683'/>
</parse>
<bc code='182' bci='57'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.683'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='755' live='720' memory='170080' stamp='0.690'/>
</parse>
<bc code='182' bci='68'/>
<method id='847' holder='794' name='append' return='794' arguments='717' flags='33' bytes='13' iicount='71999'/>
<call method='847' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='68'/>
<bc code='182' bci='75'/>
<call method='847' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='75'/>
<bc code='182' bci='96'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.695'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='891' live='852' memory='193208' stamp='0.700'/>
</parse>
<bc code='183' bci='99'/>
<call method='846' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.700'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='922' live='882' memory='197184' stamp='0.700'/>
</parse>
<bc code='182' bci='108'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.700'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1005' live='961' memory='212616' stamp='0.700'/>
</parse>
<bc code='183' bci='111'/>
<call method='846' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.700'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='1036' live='991' memory='247888' stamp='0.700'/>
</parse>
<bc code='182' bci='125'/>
<call method='847' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='125'/>
<parse_done nodes='1066' live='1020' memory='256792' stamp='0.700'/>
</parse>
<bc code='162' bci='64'/>
<branch target_bci='221' taken='683' not_taken='55866' cnt='56549' prob='0.012078'/>
<uncommon_trap bci='67' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='67' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='73'/>
<call method='837' count='55866' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='19921' stamp='0.700'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1193' live='1140' memory='278264' stamp='0.713'/>
</parse>
<bc code='183' bci='81'/>
<call method='846' count='55866' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='19921' stamp='0.713'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='1224' live='1170' memory='282424' stamp='0.713'/>
</parse>
<bc code='153' bci='84'/>
<branch target_bci='210' taken='49869' not_taken='5997' cnt='55866' prob='0.892654'/>
<bc code='162' bci='90'/>
<branch target_bci='112' taken='0' not_taken='5997' cnt='5997' prob='never'/>
<uncommon_trap bci='90' reason='unstable_if' action='reinterpret' comment='taken never'/>
<uncommon_trap bci='93' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='93' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='97'/>
<call method='837' count='5997' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='2138' stamp='0.713'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1359' live='1297' memory='304824' stamp='0.713'/>
</parse>
<bc code='183' bci='100'/>
<call method='846' count='5997' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='2138' stamp='0.713'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='1390' live='1327' memory='311032' stamp='0.714'/>
</parse>
<bc code='153' bci='103'/>
<branch target_bci='112' taken='5997' not_taken='0' cnt='5997' prob='always'/>
<uncommon_trap bci='103' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='115'/>
<branch target_bci='199' taken='5997' not_taken='0' cnt='5997' prob='always'/>
<uncommon_trap bci='115' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='203'/>
<call method='847' count='5997' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='203'/>
<bc code='182' bci='214'/>
<call method='847' count='49869' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='214'/>
<bc code='162' bci='64'/>
<branch target_bci='221' taken='683' not_taken='55866' cnt='55866' prob='0.012078'/>
<bc code='182' bci='223'/>
<method id='845' holder='794' name='toString' return='730' flags='33' bytes='36' iicount='1210'/>
<call method='845' count='683' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='223'/>
<parse_done nodes='1487' live='1421' memory='331168' stamp='0.726'/>
</parse>
<bc code='160' bci='68'/>
<branch target_bci='94' taken='30202' not_taken='3896' cnt='34098' prob='0.885741'/>
<bc code='160' bci='74'/>
<branch target_bci='94' taken='3896' not_taken='0' cnt='3896' prob='always'/>
<uncommon_trap bci='74' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='98'/>
<branch target_bci='115' taken='33141' not_taken='957' cnt='34098' prob='0.971934'/>
<bc code='164' bci='104'/>
<branch target_bci='115' taken='385' not_taken='572' cnt='957' prob='0.402299'/>
<bc code='183' bci='111'/>
<call method='836' count='572' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='572' stamp='0.727'>
<bc code='154' bci='1'/>
<branch target_bci='6' taken='683' not_taken='0' cnt='683' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='162' bci='8'/>
<branch target_bci='13' taken='0' not_taken='683' cnt='683' prob='never'/>
<bc code='183' bci='24'/>
<call method='842' count='683' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='24'/>
<bc code='154' bci='30'/>
<branch target_bci='46' taken='0' not_taken='683' cnt='683' prob='never'/>
<bc code='183' bci='38'/>
<call method='850' count='683' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='439' stamp='0.727'>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='13'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.727'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1744' live='1668' memory='374848' stamp='0.731'/>
</parse>
<bc code='183' bci='16'/>
<call method='846' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.731'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='1775' live='1698' memory='378824' stamp='0.731'/>
</parse>
<bc code='182' bci='40'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.731'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1885' live='1803' memory='396856' stamp='0.731'/>
</parse>
<bc code='183' bci='46'/>
<call method='853' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='0.731'>
<bc code='161' bci='3'/>
<branch target_bci='12' taken='2684' not_taken='0' cnt='2684' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='15'/>
<branch target_bci='28' taken='0' not_taken='2684' cnt='2684' prob='never'/>
<uncommon_trap bci='15' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='21'/>
<branch target_bci='28' taken='0' not_taken='2684' cnt='2684' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1936' live='1850' memory='409432' stamp='0.732'/>
</parse>
<bc code='182' bci='57'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.732'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2034' live='1943' memory='427696' stamp='0.732'/>
</parse>
<bc code='182' bci='68'/>
<call method='847' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='68'/>
<bc code='182' bci='75'/>
<call method='847' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='75'/>
<bc code='182' bci='96'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.732'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2169' live='2074' memory='516040' stamp='0.748'/>
</parse>
<bc code='183' bci='99'/>
<call method='846' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.748'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='2200' live='2104' memory='520272' stamp='0.748'/>
</parse>
<bc code='182' bci='108'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.748'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2283' live='2183' memory='534928' stamp='0.771'/>
</parse>
<bc code='183' bci='111'/>
<call method='846' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.771'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='2314' live='2213' memory='538904' stamp='0.771'/>
</parse>
<bc code='182' bci='125'/>
<call method='847' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='125'/>
<parse_done nodes='2344' live='2242' memory='544288' stamp='0.771'/>
</parse>
<bc code='162' bci='64'/>
<branch target_bci='221' taken='683' not_taken='55866' cnt='56549' prob='0.012078'/>
<uncommon_trap bci='67' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='67' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='73'/>
<call method='837' count='55866' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='35945' stamp='0.771'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2471' live='2362' memory='564480' stamp='0.775'/>
</parse>
<bc code='183' bci='81'/>
<call method='846' count='55866' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='35945' stamp='0.775'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='2502' live='2392' memory='568640' stamp='0.775'/>
</parse>
<bc code='153' bci='84'/>
<branch target_bci='210' taken='49869' not_taken='5997' cnt='55866' prob='0.892654'/>
<bc code='162' bci='90'/>
<branch target_bci='112' taken='0' not_taken='5997' cnt='5997' prob='never'/>
<uncommon_trap bci='90' reason='unstable_if' action='reinterpret' comment='taken never'/>
<uncommon_trap bci='93' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='93' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='97'/>
<call method='837' count='5997' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='3859' stamp='0.775'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243788' cnt='243788' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243788' not_taken='0' cnt='243788' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2637' live='2519' memory='591352' stamp='0.775'/>
</parse>
<bc code='183' bci='100'/>
<call method='846' count='5997' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='3859' stamp='0.775'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='2668' live='2549' memory='595512' stamp='0.775'/>
</parse>
<bc code='153' bci='103'/>
<branch target_bci='112' taken='5997' not_taken='0' cnt='5997' prob='always'/>
<uncommon_trap bci='103' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='115'/>
<branch target_bci='199' taken='5997' not_taken='0' cnt='5997' prob='always'/>
<uncommon_trap bci='115' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='203'/>
<call method='847' count='5997' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='203'/>
<bc code='182' bci='214'/>
<call method='847' count='49869' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='214'/>
<bc code='162' bci='64'/>
<branch target_bci='221' taken='683' not_taken='55866' cnt='55866' prob='0.012078'/>
<bc code='182' bci='223'/>
<call method='845' count='683' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='223'/>
<parse_done nodes='2765' live='2643' memory='617688' stamp='0.775'/>
</parse>
<bc code='162' bci='25'/>
<branch target_bci='125' taken='391' not_taken='34415' cnt='33526' prob='0.0112337'/>
<bc code='160' bci='128'/>
<branch target_bci='141' taken='391' not_taken='0' cnt='391' prob='always'/>
<uncommon_trap bci='128' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='2797' live='2672' memory='630040' stamp='0.775'/>
</parse>
<late_inline method='845'>
<jvms bci='223' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='845' uses='439' stamp='0.779'>
<bc code='184' bci='17'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='859' name='java/util/Arrays' flags='1'/>
<method id='860' holder='859' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='38' compiler='C1' level='3' iicount='4751'/>
<call method='860' count='-1' prof_factor='0.36281' inline='1'/>
<klass id='866' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='860' bci='8' reason='unloaded' action='reinterpret' index='285' klass='866'/>
<inline_fail reason='too big'/>
<direct_call bci='17'/>
<bc code='183' bci='32'/>
<method id='858' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1566'/>
<call method='858' count='-1' prof_factor='0.36281' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='858' uses='-1' stamp='0.792'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='867' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='22841'/>
<call method='867' count='1061' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='867' uses='1566' stamp='0.792'>
<parse_done nodes='2942' live='1652' memory='655528' stamp='0.792'/>
</parse>
<parse_done nodes='2959' live='1668' memory='658320' stamp='0.792'/>
</parse>
<parse_done nodes='2978' live='1686' memory='661360' stamp='0.792'/>
</parse>
<late_inline method='847'>
<jvms bci='214' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='32087' stamp='0.792'>
<bc code='183' bci='7'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='857' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' compile_id='36' compiler='C2' level='4' iicount='72289'/>
<call method='857' count='71657' prof_factor='0.445659' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='32087' stamp='0.792'>
<bc code='183' bci='7'/>
<method id='871' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='76397'/>
<call method='871' count='71947' prof_factor='0.443871' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='32087' stamp='0.796'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<method id='873' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1528'/>
<call method='873' count='1261' prof_factor='0.420003' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='533' stamp='0.796'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='3121' live='1824' memory='686208' stamp='0.796'/>
</parse>
<bc code='184' bci='20'/>
<method id='874' holder='859' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1596'/>
<call method='874' count='1261' prof_factor='0.420003' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='533' stamp='0.796'>
<bc code='184' bci='11'/>
<klass id='863' name='java/lang/Math' flags='17'/>
<method id='864' holder='863' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='12252'/>
<call method='864' count='1084' prof_factor='0.33396' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='865' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='865' count='1084' prof_factor='0.33396' inline='1'/>
<intrinsic id='_arraycopy' nodes='105'/>
<parse_done nodes='3297' live='1999' memory='713648' stamp='0.796'/>
</parse>
<parse_done nodes='3316' live='2017' memory='717120' stamp='0.798'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3365' live='2063' memory='726712' stamp='0.798'/>
</parse>
<parse_done nodes='3386' live='2083' memory='730376' stamp='0.798'/>
</parse>
<late_inline method='847'>
<jvms bci='203' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='3859' stamp='0.798'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='0.053598' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='3859' stamp='0.798'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.0533829' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='3859' stamp='0.798'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<call method='873' count='1261' prof_factor='0.0505125' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='64' stamp='0.801'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='3526' live='2218' memory='753144' stamp='0.802'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1261' prof_factor='0.0505125' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='64' stamp='0.802'>
<bc code='184' bci='11'/>
<call method='864' count='1084' prof_factor='0.0401003' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1084' prof_factor='0.0401003' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='3692' live='2383' memory='780392' stamp='0.802'/>
</parse>
<parse_done nodes='3711' live='2401' memory='783800' stamp='0.803'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3760' live='2447' memory='799168' stamp='0.803'/>
</parse>
<parse_done nodes='3781' live='2467' memory='802832' stamp='0.803'/>
</parse>
<late_inline method='847'>
<jvms bci='125' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.804'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.805'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.805'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<call method='873' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1196' stamp='0.805'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='3921' live='2602' memory='826112' stamp='0.807'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1196' stamp='0.807'>
<bc code='184' bci='11'/>
<call method='864' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4087' live='2767' memory='853560' stamp='0.807'/>
</parse>
<parse_done nodes='4106' live='2785' memory='1017416' stamp='0.809'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4155' live='2831' memory='1026840' stamp='0.809'/>
</parse>
<parse_done nodes='4176' live='2851' memory='1030696' stamp='0.809'/>
</parse>
<late_inline method='847'>
<jvms bci='75' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.809'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.809'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.810'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<call method='873' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1196' stamp='0.810'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='4316' live='2986' memory='1057432' stamp='0.810'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1196' stamp='0.810'>
<bc code='184' bci='11'/>
<call method='864' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4482' live='3151' memory='1117672' stamp='0.810'/>
</parse>
<parse_done nodes='4501' live='3169' memory='1121336' stamp='0.810'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4550' live='3215' memory='1130376' stamp='0.810'/>
</parse>
<parse_done nodes='4571' live='3235' memory='1134232' stamp='0.810'/>
</parse>
<late_inline method='847'>
<jvms bci='68' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.810'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.829'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.829'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<call method='873' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1196' stamp='0.829'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='4711' live='3370' memory='1157304' stamp='0.829'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1196' stamp='0.829'>
<bc code='184' bci='11'/>
<call method='864' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4877' live='3535' memory='1184872' stamp='0.829'/>
</parse>
<parse_done nodes='4896' live='3553' memory='1188280' stamp='0.831'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4945' live='3599' memory='1207560' stamp='0.831'/>
</parse>
<parse_done nodes='4966' live='3619' memory='1211416' stamp='0.831'/>
</parse>
<late_inline method='842'>
<jvms bci='24' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='842' uses='439' stamp='0.831'>
<bc code='183' bci='2'/>
<method id='852' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2336'/>
<call method='852' count='-1' prof_factor='0.361913' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.831'>
<bc code='183' bci='1'/>
<call method='867' count='1859' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='867' uses='2336' stamp='0.831'>
<parse_done nodes='5011' live='3662' memory='1220208' stamp='0.831'/>
</parse>
<parse_done nodes='5056' live='3706' memory='1227152' stamp='0.831'/>
</parse>
<parse_done nodes='5063' live='3712' memory='1229360' stamp='0.831'/>
</parse>
<late_inline method='845'>
<jvms bci='223' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='845' uses='244' stamp='0.831'>
<bc code='184' bci='17'/>
<call method='860' count='-1' prof_factor='0.201653' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='17'/>
<bc code='183' bci='32'/>
<call method='858' count='-1' prof_factor='0.201653' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='858' uses='-1' stamp='0.832'>
<bc code='183' bci='1'/>
<call method='867' count='1061' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='867' uses='1566' stamp='0.832'>
<parse_done nodes='5195' live='3842' memory='1251968' stamp='0.832'/>
</parse>
<parse_done nodes='5212' live='3858' memory='1254704' stamp='0.832'/>
</parse>
<parse_done nodes='5231' live='3876' memory='1257744' stamp='0.832'/>
</parse>
<late_inline method='847'>
<jvms bci='214' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='17782' stamp='0.832'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='0.246976' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='17782' stamp='0.832'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.245985' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='17782' stamp='0.832'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<call method='873' count='1261' prof_factor='0.232758' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='295' stamp='0.832'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='5371' live='4011' memory='1282352' stamp='0.832'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1261' prof_factor='0.232758' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='295' stamp='0.832'>
<bc code='184' bci='11'/>
<call method='864' count='1084' prof_factor='0.184837' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1084' prof_factor='0.184837' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='5537' live='4176' memory='1309728' stamp='0.832'/>
</parse>
<parse_done nodes='5556' live='4194' memory='1313352' stamp='0.832'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='5605' live='4240' memory='1323928' stamp='0.832'/>
</parse>
<parse_done nodes='5626' live='4260' memory='1327592' stamp='0.832'/>
</parse>
<late_inline method='847'>
<jvms bci='203' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='2138' stamp='0.832'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='0.0296949' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='2138' stamp='0.832'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.0295757' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='2138' stamp='0.832'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<call method='873' count='1261' prof_factor='0.0279854' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='36' stamp='0.832'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='5766' live='4395' memory='1358512' stamp='0.833'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1261' prof_factor='0.0279854' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='36' stamp='0.833'>
<bc code='184' bci='11'/>
<call method='864' count='1084' prof_factor='0.0225564' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1084' prof_factor='0.0225564' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='5932' live='4560' memory='1387352' stamp='0.833'/>
</parse>
<parse_done nodes='5951' live='4578' memory='1390760' stamp='0.833'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6000' live='4624' memory='1403896' stamp='0.833'/>
</parse>
<parse_done nodes='6021' live='4644' memory='1407560' stamp='0.833'/>
</parse>
<late_inline method='847'>
<jvms bci='125' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.833'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.833'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.833'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<call method='873' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1196' stamp='0.833'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='6161' live='4779' memory='1431160' stamp='0.833'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1196' stamp='0.833'>
<bc code='184' bci='11'/>
<call method='864' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6327' live='4944' memory='1464128' stamp='0.833'/>
</parse>
<parse_done nodes='6346' live='4962' memory='1467536' stamp='0.833'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6395' live='5008' memory='1477592' stamp='0.834'/>
</parse>
<parse_done nodes='6416' live='5028' memory='1481448' stamp='0.834'/>
</parse>
<late_inline method='847'>
<jvms bci='75' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.834'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.834'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.834'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<call method='873' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1196' stamp='0.834'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='6556' live='5163' memory='1505160' stamp='0.834'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1196' stamp='0.834'>
<bc code='184' bci='11'/>
<call method='864' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6722' live='5328' memory='1533368' stamp='0.834'/>
</parse>
<parse_done nodes='6741' live='5346' memory='1537288' stamp='0.834'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6790' live='5392' memory='1546464' stamp='0.834'/>
</parse>
<parse_done nodes='6811' live='5412' memory='1550320' stamp='0.834'/>
</parse>
<late_inline method='847'>
<jvms bci='68' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.834'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.834'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.834'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75127' not_taken='1270' cnt='76397' prob='0.983376'/>
<bc code='183' bci='17'/>
<call method='873' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1196' stamp='0.834'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='6951' live='5547' memory='1573264' stamp='0.834'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1261' prof_factor='0.942432' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1196' stamp='0.834'>
<bc code='184' bci='11'/>
<call method='864' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1084' prof_factor='0.749373' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='7117' live='5712' memory='1599936' stamp='0.835'/>
</parse>
<parse_done nodes='7136' live='5730' memory='1603344' stamp='0.835'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='7185' live='5776' memory='1621432' stamp='0.835'/>
</parse>
<parse_done nodes='7206' live='5796' memory='1625288' stamp='0.835'/>
</parse>
<late_inline method='842'>
<jvms bci='24' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='842' uses='244' stamp='0.835'>
<bc code='183' bci='2'/>
<call method='852' count='-1' prof_factor='0.201154' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.835'>
<bc code='183' bci='1'/>
<call method='867' count='1859' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='867' uses='2336' stamp='0.835'>
<parse_done nodes='7250' live='5838' memory='1633984' stamp='0.835'/>
</parse>
<parse_done nodes='7295' live='5882' memory='1640640' stamp='0.835'/>
</parse>
<parse_done nodes='7302' live='5888' memory='1642848' stamp='0.835'/>
</parse>
<phase_done name='parse' nodes='7302' live='3956' stamp='0.836'/>
</phase>
<phase name='optimizer' nodes='7302' live='3956' stamp='0.836'>
<phase name='idealLoop' nodes='3694' live='3694' stamp='0.838'>
<loop_tree>
<loop idx='3704' >
</loop>
<loop idx='3710' >
</loop>
<loop idx='3716' >
</loop>
<loop idx='3722' >
</loop>
<loop idx='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='3750' live='3659' stamp='0.840'/>
</phase>
<phase name='escapeAnalysis' nodes='3750' live='3659' stamp='0.840'>
<phase name='connectionGraph' nodes='3750' live='3659' stamp='0.840'>
<phase_done name='connectionGraph' nodes='3750' live='3659' stamp='0.841'/>
</phase>
<phase_done name='escapeAnalysis' nodes='3912' live='3821' stamp='0.841'/>
</phase>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='68' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='75' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='125' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='203' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='214' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='845'/>
<jvms bci='223' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='68' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='75' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='125' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='203' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='847'/>
<jvms bci='214' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.844'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.844'>
<jvms bci='-1' method='845'/>
<jvms bci='223' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_allocation type='794'>
<jvms bci='19' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_allocation>
<eliminate_allocation type='794'>
<jvms bci='19' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_allocation>
<phase name='idealLoop' nodes='4405' live='3101' stamp='0.845'>
<loop_tree>
<loop idx='3704' inner_loop='1' >
</loop>
<loop idx='3710' inner_loop='1' >
</loop>
<loop idx='3716' inner_loop='1' >
</loop>
<loop idx='3722' inner_loop='1' >
</loop>
<loop idx='3728' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4688' live='2937' stamp='0.849'/>
</phase>
<phase name='idealLoop' nodes='4688' live='2937' stamp='0.849'>
<loop_tree>
<loop idx='3704' inner_loop='1' >
</loop>
<loop idx='3710' inner_loop='1' >
</loop>
<loop idx='3716' inner_loop='1' >
</loop>
<loop idx='3722' inner_loop='1' >
</loop>
<loop idx='3728' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4745' live='2941' stamp='0.851'/>
</phase>
<phase name='idealLoop' nodes='4745' live='2941' stamp='0.851'>
<loop_tree>
<loop idx='4984' inner_loop='1' main_loop='4984' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='8185' live='5626' stamp='0.856'/>
</phase>
<phase name='ccp' nodes='8185' live='5626' stamp='0.858'>
<phase_done name='ccp' nodes='8185' live='5558' stamp='0.859'/>
</phase>
<phase name='idealLoop' nodes='8232' live='5369' stamp='0.860'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='4984' inner_loop='1' main_loop='4984' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='8716' live='5335' stamp='0.867'/>
</phase>
<phase name='idealLoop' nodes='8716' live='5335' stamp='0.867'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='9020' inner_loop='1' main_loop='9020' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='9191' live='5399' stamp='0.874'/>
</phase>
<phase name='idealLoop' nodes='9191' live='5399' stamp='0.874'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='9020' inner_loop='1' main_loop='9020' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='9645' live='5404' stamp='0.881'/>
</phase>
<phase name='idealLoop' nodes='9645' live='5404' stamp='0.881'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='9020' inner_loop='1' main_loop='9020' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='10048' live='5322' stamp='0.888'/>
</phase>
<phase name='idealLoop' nodes='10048' live='5322' stamp='0.888'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='9020' inner_loop='1' main_loop='9020' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='10479' live='5313' stamp='0.895'/>
</phase>
<phase_done name='optimizer' nodes='11690' live='5941' stamp='0.897'/>
</phase>
<phase name='matcher' nodes='11690' live='5941' stamp='0.897'>
<phase_done name='matcher' nodes='6306' live='6306' stamp='0.907'/>
</phase>
<phase name='regalloc' nodes='8117' live='8109' stamp='0.912'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='12907' live='10586' stamp='1.020'/>
</phase>
<phase name='output' nodes='12955' live='10634' stamp='1.021'>
<phase_done name='output' nodes='13162' live='10738' stamp='1.027'/>
</phase>
<code_cache total_blobs='308' nmethods='49' adapters='171' free_code_cache='250408896'/>
<task_done success='1' nmsize='19992' count='1510' backedge_count='48460' inlined_bytes='2919' stamp='1.327'/>
</task>
<task compile_id='80' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='29715' iicount='29715' stamp='1.568'>
<phase name='parse' nodes='3' live='3' stamp='1.568'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' iicount='29715'/>
<parse method='833' uses='29715' stamp='1.568'>
<bc code='182' bci='4'/>
<method id='835' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='14' compiler='C2' level='4' iicount='32857'/>
<dependency type='unique_concrete_method' ctxk='832' x='835'/>
<call method='835' count='29279' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='29715' stamp='1.571'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='65' live='63' memory='30384' stamp='1.571'/>
</parse>
<bc code='153' bci='12'/>
<branch target_bci='37' taken='28210' not_taken='1505' cnt='29715' prob='0.949352'/>
<bc code='159' bci='21'/>
<branch target_bci='37' taken='0' not_taken='1505' cnt='1505' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='97' live='93' memory='35392' stamp='1.571'/>
</parse>
<phase_done name='parse' nodes='98' live='58' stamp='1.571'/>
</phase>
<phase name='optimizer' nodes='98' live='58' stamp='1.571'>
<phase name='ccp' nodes='98' live='57' stamp='1.571'>
<phase_done name='ccp' nodes='98' live='57' stamp='1.571'/>
</phase>
<phase name='idealLoop' nodes='98' live='57' stamp='1.571'>
<phase_done name='idealLoop' nodes='98' live='57' stamp='1.571'/>
</phase>
<phase_done name='optimizer' nodes='98' live='56' stamp='1.571'/>
</phase>
<phase name='matcher' nodes='98' live='56' stamp='1.571'>
<phase_done name='matcher' nodes='49' live='49' stamp='1.571'/>
</phase>
<phase name='regalloc' nodes='61' live='61' stamp='1.571'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='72' live='70' stamp='1.572'/>
</phase>
<phase name='output' nodes='72' live='70' stamp='1.572'>
<phase_done name='output' nodes='83' live='77' stamp='1.575'/>
</phase>
<dependency type='unique_concrete_method' ctxk='832' x='835'/>
<code_cache total_blobs='331' nmethods='62' adapters='179' free_code_cache='250345536'/>
<task_done success='1' nmsize='216' count='30137' inlined_bytes='11' stamp='1.626'/>
</task>
<task compile_id='97' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='5632' iicount='5632' stamp='1.768'>
<phase name='parse' nodes='3' live='3' stamp='1.768'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='38' compiler='C1' level='3' iicount='5632'/>
<klass id='838' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='833' bci='8' reason='unloaded' action='reinterpret' index='285' klass='838'/>
<parse method='833' uses='5632' stamp='1.768'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='5632' not_taken='0' cnt='5632' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='50'/>
<uncommon_trap bci='50' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='54'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='13207'/>
<call method='836' count='5121' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='837' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='837' count='5121' prof_factor='1' inline='1'/>
<intrinsic id='_arraycopy' nodes='114'/>
<parse_done nodes='230' live='227' memory='57056' stamp='1.768'/>
</parse>
<phase_done name='parse' nodes='232' live='164' stamp='1.768'/>
</phase>
<phase name='optimizer' nodes='232' live='164' stamp='1.768'>
<phase name='escapeAnalysis' nodes='232' live='163' stamp='1.768'>
<phase name='connectionGraph' nodes='233' live='164' stamp='1.768'>
<phase_done name='connectionGraph' nodes='233' live='164' stamp='1.768'/>
</phase>
<phase_done name='escapeAnalysis' nodes='233' live='164' stamp='1.768'/>
</phase>
<phase name='ccp' nodes='233' live='164' stamp='1.768'>
<phase_done name='ccp' nodes='233' live='164' stamp='1.768'/>
</phase>
<phase name='idealLoop' nodes='237' live='161' stamp='1.768'>
<phase_done name='idealLoop' nodes='240' live='161' stamp='1.768'/>
</phase>
<phase_done name='optimizer' nodes='295' live='199' stamp='1.768'/>
</phase>
<phase name='matcher' nodes='295' live='199' stamp='1.768'>
<phase_done name='matcher' nodes='194' live='194' stamp='1.769'/>
</phase>
<phase name='regalloc' nodes='245' live='244' stamp='1.769'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='306' live='286' stamp='1.770'/>
</phase>
<phase name='output' nodes='308' live='288' stamp='1.770'>
<phase_done name='output' nodes='322' live='298' stamp='1.773'/>
</phase>
<code_cache total_blobs='344' nmethods='76' adapters='180' free_code_cache='250323200'/>
<task_done success='1' nmsize='536' count='5638' inlined_bytes='11' stamp='1.784'/>
</task>
<task compile_id='126' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='758' backedge_count='55356' iicount='758' stamp='8.043'>
<phase name='parse' nodes='3' live='3' stamp='8.043'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='758'/>
<parse method='832' uses='758' stamp='8.043'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='556' not_taken='0' cnt='556' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='156' bci='19'/>
<branch target_bci='25' taken='556' not_taken='0' cnt='556' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='27'/>
<branch target_bci='33' taken='556' not_taken='0' cnt='556' prob='always'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='107' not_taken='1491' cnt='1598' prob='0.0669587'/>
<uncommon_trap bci='60' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='95' not_taken='1396' cnt='1491' prob='0.0637156'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='107' not_taken='43217' cnt='43324' prob='0.00246976'/>
<uncommon_trap bci='79' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='79' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='1288' not_taken='41929' cnt='43217' prob='0.0298031'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='107' not_taken='43217' cnt='41929' prob='0.00246976'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='107' not_taken='1383' cnt='1490' prob='0.0718121'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='448' not_taken='935' cnt='1383' prob='0.323933'/>
<uncommon_trap bci='126' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='129'/>
<uncommon_trap bci='129' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='133'/>
<uncommon_trap bci='133' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='134'/>
<branch target_bci='146' taken='935' not_taken='0' cnt='935' prob='always'/>
<uncommon_trap bci='134' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='935' not_taken='448' cnt='1383' prob='0.676067'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='107' not_taken='1491' cnt='1042' prob='0.0669587'/>
<parse_done nodes='417' live='398' memory='104048' stamp='8.043'/>
</parse>
<phase_done name='parse' nodes='418' live='300' stamp='8.043'/>
</phase>
<phase name='optimizer' nodes='418' live='300' stamp='8.043'>
<phase name='idealLoop' nodes='418' live='265' stamp='8.044'>
<loop_tree>
<loop idx='418' >
<loop idx='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='481' live='271' stamp='8.044'/>
</phase>
<phase name='idealLoop' nodes='481' live='271' stamp='8.044'>
<loop_tree>
<loop idx='418' >
<loop idx='429' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='498' live='274' stamp='8.044'/>
</phase>
<phase name='idealLoop' nodes='498' live='274' stamp='8.044'>
<loop_tree>
<loop idx='418' >
<loop idx='586' inner_loop='1' main_loop='586' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='601' live='358' stamp='8.044'/>
</phase>
<phase name='ccp' nodes='601' live='358' stamp='8.044'>
<phase_done name='ccp' nodes='601' live='358' stamp='8.045'/>
</phase>
<phase name='idealLoop' nodes='601' live='356' stamp='8.045'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='682' live='392' stamp='8.045'/>
</phase>
<phase name='idealLoop' nodes='682' live='392' stamp='8.045'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='722' live='379' stamp='8.045'/>
</phase>
<phase name='idealLoop' nodes='722' live='379' stamp='8.045'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='737' live='377' stamp='8.045'/>
</phase>
<phase_done name='optimizer' nodes='744' live='363' stamp='8.046'/>
</phase>
<phase name='matcher' nodes='744' live='363' stamp='8.046'>
<phase_done name='matcher' nodes='316' live='316' stamp='8.046'/>
</phase>
<phase name='regalloc' nodes='437' live='435' stamp='8.046'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='756' live='590' stamp='8.049'/>
</phase>
<phase name='output' nodes='758' live='592' stamp='8.049'>
<phase_done name='output' nodes='791' live='609' stamp='8.128'/>
</phase>
<code_cache total_blobs='361' nmethods='93' adapters='180' free_code_cache='250278272'/>
<task_done success='1' nmsize='1272' count='758' backedge_count='55356' stamp='8.139'/>
</task>
<task compile_id='128' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='220327' iicount='12' osr_bci='2' stamp='8.139'>
<phase name='parse' nodes='3' live='3' stamp='8.139'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' iicount='12'/>
<parse method='833' uses='12' osr_bci='2' stamp='8.139'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='2' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='2' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='2' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='0' not_taken='53416' cnt='53416' prob='never'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='837' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger' flags='1'/>
<method id='838' holder='837' name='getAndIncrement' return='722' flags='17' bytes='40' iicount='218469'/>
<call method='838' count='53326' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='53326' stamp='8.145'>
<uncommon_trap bci='14' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='840' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1225'/>
<call method='840' count='428994' prof_factor='0.24409' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<type id='716' name='boolean'/>
<method id='841' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='49' compile_kind='c2n' level='0' iicount='791'/>
<call method='841' count='431997' prof_factor='0.24409' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='321766' not_taken='239680' cnt='561446' prob='0.573102'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<call method='840' count='428994' prof_factor='0.24409' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<call method='841' count='431997' prof_factor='0.24409' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='321766' not_taken='239680' cnt='561446' prob='0.573102'/>
<parse_done nodes='286' live='277' memory='69224' stamp='8.145'/>
</parse>
<parse_done nodes='289' live='280' memory='69704' stamp='8.145'/>
</parse>
<phase_done name='parse' nodes='289' live='204' stamp='8.145'/>
</phase>
<phase name='optimizer' nodes='289' live='204' stamp='8.145'>
<phase name='idealLoop' nodes='294' live='193' stamp='8.145'>
<loop_tree>
<loop idx='294' >
<loop idx='295' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='301' live='189' stamp='8.146'/>
</phase>
<phase name='idealLoop' nodes='301' live='189' stamp='8.146'>
<loop_tree>
<loop idx='294' >
<loop idx='295' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='301' live='189' stamp='8.146'/>
</phase>
<phase name='idealLoop' nodes='301' live='189' stamp='8.146'>
<loop_tree>
<loop idx='294' >
<loop idx='295' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='301' live='189' stamp='8.146'/>
</phase>
<phase name='ccp' nodes='301' live='189' stamp='8.146'>
<phase_done name='ccp' nodes='301' live='189' stamp='8.146'/>
</phase>
<phase name='idealLoop' nodes='302' live='187' stamp='8.146'>
<loop_tree>
<loop idx='294' >
<loop idx='295' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='326' live='181' stamp='8.146'/>
</phase>
<phase name='idealLoop' nodes='326' live='181' stamp='8.146'>
<loop_tree>
<loop idx='294' >
<loop idx='295' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='332' live='149' stamp='8.146'/>
</phase>
<phase name='idealLoop' nodes='332' live='149' stamp='8.146'>
<loop_tree>
<loop idx='294' >
<loop idx='295' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='338' live='149' stamp='8.146'/>
</phase>
<phase_done name='optimizer' nodes='343' live='148' stamp='8.146'/>
</phase>
<phase name='matcher' nodes='343' live='148' stamp='8.146'>
<phase_done name='matcher' nodes='148' live='148' stamp='8.146'/>
</phase>
<phase name='regalloc' nodes='174' live='173' stamp='8.147'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='190' live='185' stamp='8.147'/>
</phase>
<phase name='output' nodes='192' live='187' stamp='8.147'>
<phase_done name='output' nodes='208' live='197' stamp='8.161'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<code_cache total_blobs='364' nmethods='96' adapters='180' free_code_cache='250271424'/>
<task_done success='1' nmsize='312' count='12' backedge_count='316372' inlined_bytes='40' stamp='8.165'/>
</task>
<task compile_id='130' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger getAndIncrement ()I' bytes='40' count='316019' backedge_count='431584' iicount='316019' osr_bci='9' stamp='8.206'>
<phase name='parse' nodes='3' live='3' stamp='8.206'>
<type id='722' name='int'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='40' compile_id='127' compiler='C1' level='2' iicount='316019'/>
<parse method='833' uses='316019' osr_bci='9' stamp='8.207'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='9' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='836' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1225'/>
<call method='836' count='589317' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<type id='716' name='boolean'/>
<method id='837' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='49' compile_kind='c2n' level='0' iicount='791'/>
<call method='837' count='591164' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='434861' not_taken='317202' cnt='752063' prob='0.578224'/>
<parse_done nodes='156' live='152' memory='44744' stamp='8.207'/>
</parse>
<phase_done name='parse' nodes='157' live='110' stamp='8.207'/>
</phase>
<phase name='optimizer' nodes='157' live='110' stamp='8.207'>
<phase name='idealLoop' nodes='161' live='105' stamp='8.207'>
<loop_tree>
<loop idx='161' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='162' live='105' stamp='8.207'/>
</phase>
<phase name='idealLoop' nodes='162' live='105' stamp='8.207'>
<loop_tree>
<loop idx='161' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='162' live='105' stamp='8.207'/>
</phase>
<phase name='idealLoop' nodes='162' live='105' stamp='8.207'>
<loop_tree>
<loop idx='161' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='162' live='105' stamp='8.207'/>
</phase>
<phase name='ccp' nodes='162' live='105' stamp='8.207'>
<phase_done name='ccp' nodes='162' live='105' stamp='8.207'/>
</phase>
<phase name='idealLoop' nodes='162' live='104' stamp='8.207'>
<loop_tree>
<loop idx='161' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='162' live='86' stamp='8.207'/>
</phase>
<phase name='idealLoop' nodes='162' live='86' stamp='8.207'>
<loop_tree>
<loop idx='161' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='165' live='86' stamp='8.207'/>
</phase>
<phase_done name='optimizer' nodes='167' live='85' stamp='8.207'/>
</phase>
<phase name='matcher' nodes='167' live='85' stamp='8.207'>
<phase_done name='matcher' nodes='80' live='80' stamp='8.207'/>
</phase>
<phase name='regalloc' nodes='94' live='94' stamp='8.207'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='105' live='104' stamp='8.207'/>
</phase>
<phase name='output' nodes='105' live='104' stamp='8.207'>
<phase_done name='output' nodes='117' live='112' stamp='8.207'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<code_cache total_blobs='369' nmethods='100' adapters='180' free_code_cache='250258304'/>
<task_done success='1' nmsize='184' count='316019' backedge_count='431584' stamp='8.210'/>
</task>
<task compile_id='138' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='24' backedge_count='973218' iicount='24' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' stamp='30.128'>
<phase name='parse' nodes='3' live='3' stamp='30.128'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' compile_id='136' compiler='C1' level='3' iicount='24'/>
<parse method='833' uses='24' stamp='30.128'>
<observe trap='unstable_if' count='24' total='24'/>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='24' not_taken='738644' cnt='738668' prob='3.24909e-005'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='835' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger' flags='1'/>
<method id='838' holder='835' name='getAndIncrement' return='722' flags='17' bytes='40' compile_id='134' compiler='C2' level='4' iicount='460904'/>
<call method='838' count='739098' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='739098' stamp='30.128'>
<uncommon_trap bci='14' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='840' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1225'/>
<call method='840' count='589488' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<type id='716' name='boolean'/>
<method id='841' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='49' compile_kind='c2n' level='0' iicount='791'/>
<call method='841' count='591336' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='481228' not_taken='350911' cnt='832139' prob='0.578302'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<call method='840' count='589488' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<call method='841' count='591336' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='481228' not_taken='350911' cnt='832139' prob='0.578302'/>
<parse_done nodes='230' live='224' memory='54872' stamp='30.128'/>
</parse>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='24' not_taken='738644' cnt='786096' prob='3.24909e-005'/>
<bc code='182' bci='28'/>
<klass id='836' name='java/util/concurrent/CountDownLatch' flags='1'/>
<method id='837' holder='836' name='countDown' return='724' flags='1' bytes='10' iicount='60'/>
<dependency type='unique_concrete_method' ctxk='836' x='837'/>
<call method='837' count='24' prof_factor='1' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<direct_call bci='28'/>
<uncommon_trap bci='28' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='278' live='270' memory='68384' stamp='30.128'/>
</parse>
<phase_done name='parse' nodes='280' live='187' stamp='30.128'/>
</phase>
<phase name='optimizer' nodes='280' live='187' stamp='30.128'>
<phase name='idealLoop' nodes='280' live='174' stamp='30.128'>
<loop_tree>
<loop idx='280' >
<loop idx='281' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='291' live='173' stamp='30.128'/>
</phase>
<phase name='idealLoop' nodes='291' live='173' stamp='30.128'>
<loop_tree>
<loop idx='280' >
<loop idx='281' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='291' live='173' stamp='30.128'/>
</phase>
<phase name='idealLoop' nodes='291' live='173' stamp='30.128'>
<loop_tree>
<loop idx='280' >
<loop idx='281' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='291' live='173' stamp='30.128'/>
</phase>
<phase name='ccp' nodes='291' live='173' stamp='30.128'>
<phase_done name='ccp' nodes='291' live='173' stamp='30.128'/>
</phase>
<phase name='idealLoop' nodes='291' live='173' stamp='30.128'>
<loop_tree>
<loop idx='280' >
<loop idx='281' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='300' live='141' stamp='30.129'/>
</phase>
<phase name='idealLoop' nodes='300' live='141' stamp='30.129'>
<loop_tree>
<loop idx='280' >
<loop idx='281' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='309' live='141' stamp='30.129'/>
</phase>
<phase_done name='optimizer' nodes='316' live='142' stamp='30.129'/>
</phase>
<phase name='matcher' nodes='316' live='142' stamp='30.129'>
<phase_done name='matcher' nodes='143' live='143' stamp='30.129'/>
</phase>
<phase name='regalloc' nodes='170' live='170' stamp='30.129'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='176' live='175' stamp='30.129'/>
</phase>
<phase name='output' nodes='178' live='177' stamp='30.129'>
<phase_done name='output' nodes='197' live='189' stamp='30.129'/>
</phase>
<dependency type='unique_concrete_method' ctxk='836' x='837'/>
<code_cache total_blobs='377' nmethods='109' adapters='180' free_code_cache='250250624'/>
<task_done success='1' nmsize='296' count='24' backedge_count='1001076' inlined_bytes='40' stamp='30.133'/>
</task>
</compilation_log>
<compilation_log thread='30136'>
<start_compile_thread name='C2 CompilerThread2' thread='30136' process='4764' stamp='0.491'/>
<task compile_id='16' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='3787' backedge_count='229795' iicount='3787' osr_bci='37' stamp='0.635'>
<phase name='parse' nodes='3' live='3' stamp='0.635'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='3787'/>
<parse method='832' uses='3787' osr_bci='37' stamp='0.635'>
<uncommon_trap bci='37' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='37' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='37' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='2839' not_taken='222708' cnt='225547' prob='0.0125872'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='222556' not_taken='152' cnt='222708' prob='0.999317'/>
<parse_done nodes='169' live='162' memory='48008' stamp='0.636'/>
</parse>
<phase_done name='parse' nodes='170' live='125' stamp='0.636'/>
</phase>
<phase name='optimizer' nodes='170' live='125' stamp='0.636'>
<phase name='idealLoop' nodes='175' live='117' stamp='0.636'>
<loop_tree>
<loop idx='175' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='124' stamp='0.636'/>
</phase>
<phase name='idealLoop' nodes='227' live='124' stamp='0.636'>
<loop_tree>
<loop idx='232' main_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='331' live='187' stamp='0.636'/>
</phase>
<phase name='idealLoop' nodes='331' live='187' stamp='0.636'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='379' live='205' stamp='0.637'/>
</phase>
<phase name='ccp' nodes='379' live='205' stamp='0.637'>
<phase_done name='ccp' nodes='379' live='205' stamp='0.637'/>
</phase>
<phase name='idealLoop' nodes='381' live='200' stamp='0.637'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='396' live='198' stamp='0.637'/>
</phase>
<phase name='idealLoop' nodes='396' live='198' stamp='0.637'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='417' inner_loop='1' main_loop='417' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='440' live='232' stamp='0.637'/>
</phase>
<phase name='idealLoop' nodes='440' live='232' stamp='0.637'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='484' inner_loop='1' main_loop='484' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='550' live='293' stamp='0.638'/>
</phase>
<phase name='idealLoop' nodes='550' live='293' stamp='0.638'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='484' inner_loop='1' main_loop='484' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='593' live='292' stamp='0.638'/>
</phase>
<phase_done name='optimizer' nodes='595' live='263' stamp='0.638'/>
</phase>
<phase name='matcher' nodes='595' live='263' stamp='0.638'>
<phase_done name='matcher' nodes='217' live='217' stamp='0.639'/>
</phase>
<phase name='regalloc' nodes='300' live='300' stamp='0.639'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='326' live='321' stamp='0.640'/>
</phase>
<phase name='output' nodes='326' live='321' stamp='0.641'>
<phase_done name='output' nodes='356' live='333' stamp='0.645'/>
</phase>
<code_cache total_blobs='250' nmethods='6' adapters='156' free_code_cache='250539456'/>
<task_done success='1' nmsize='536' count='3789' backedge_count='229835' stamp='0.652'/>
</task>
<task compile_id='21' method='java/lang/String length ()I' bytes='6' count='37611' iicount='37613' stamp='0.652'>
<phase name='parse' nodes='3' live='3' stamp='0.652'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='37633'/>
<parse method='832' uses='37633' stamp='0.656'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25928' stamp='0.656'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.656'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.656'>
<phase name='ccp' nodes='45' live='27' stamp='0.656'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.656'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.656'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.656'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.656'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.656'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.656'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.656'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.656'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.656'>
<phase_done name='output' nodes='38' live='37' stamp='0.656'/>
</phase>
<code_cache total_blobs='253' nmethods='8' adapters='158' free_code_cache='250541632'/>
<task_done success='1' nmsize='120' count='37770' stamp='0.658'/>
</task>
<task compile_id='26' method='java/lang/String hashCode ()I' bytes='55' count='5489' backedge_count='119321' iicount='5489' stamp='0.679'>
<phase name='parse' nodes='3' live='3' stamp='0.679'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='5489'/>
<parse method='832' uses='5489' stamp='0.679'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='3243' not_taken='1877' cnt='5120' prob='0.633398'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='1' not_taken='1876' cnt='1877' prob='0.000532765'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1876' not_taken='115206' cnt='117082' prob='0.016023'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1876' not_taken='115206' cnt='115206' prob='0.016023'/>
<parse_done nodes='190' live='184' memory='50008' stamp='0.683'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.683'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.683'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.683'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.683'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.683'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.683'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.683'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.683'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.683'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.683'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.683'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='382' live='198' stamp='0.684'/>
</phase>
<phase name='idealLoop' nodes='382' live='198' stamp='0.684'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='407' live='186' stamp='0.684'/>
</phase>
<phase name='idealLoop' nodes='407' live='186' stamp='0.684'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='417' live='169' stamp='0.684'/>
</phase>
<phase_done name='optimizer' nodes='420' live='158' stamp='0.684'/>
</phase>
<phase name='matcher' nodes='420' live='158' stamp='0.684'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.685'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='0.685'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.685'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.685'>
<phase_done name='output' nodes='209' live='200' stamp='0.685'/>
</phase>
<code_cache total_blobs='263' nmethods='12' adapters='162' free_code_cache='250516224'/>
<task_done success='1' nmsize='376' count='5495' backedge_count='119439' stamp='0.690'/>
</task>
<task compile_id='6' method='sun/misc/ASCIICaseInsensitiveComparator isUpper (I)Z' bytes='18' count='28182' iicount='28182' stamp='0.695'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='28182' stamp='0.695'/>
</task>
<task compile_id='5' method='sun/misc/ASCIICaseInsensitiveComparator toLower (I)I' bytes='16' count='28182' iicount='28182' stamp='0.695'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='28182' stamp='0.695'/>
</task>
<task compile_id='12' method='java/lang/String charAt (I)C' bytes='29' count='245024' iicount='245024' stamp='0.695'>
<phase name='parse' nodes='3' live='3' stamp='0.695'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='245024'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='245' klass='834'/>
<parse method='832' uses='245024' stamp='0.699'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='245024' cnt='245024' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='245024' not_taken='0' cnt='245024' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.700'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.700'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.700'>
<phase name='ccp' nodes='103' live='63' stamp='0.700'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.700'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.700'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.700'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.700'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.700'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.700'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.700'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.700'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.700'>
<phase_done name='output' nodes='93' live='85' stamp='0.706'/>
</phase>
<code_cache total_blobs='270' nmethods='17' adapters='163' free_code_cache='250506944'/>
<task_done success='1' nmsize='216' count='245264' stamp='0.709'/>
</task>
<task compile_id='9' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='22949' iicount='22949' stamp='0.713'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='22949' stamp='0.713'/>
</task>
<task compile_id='30' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1654' backedge_count='62892' iicount='1654' stamp='0.713'>
<phase name='parse' nodes='3' live='3' stamp='0.713'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='833' holder='832' name='encode' return='722' arguments='821 722 722 824' flags='1' bytes='359' iicount='1654'/>
<klass id='838' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<uncommon_trap method='833' bci='175' reason='unloaded' action='reinterpret' index='76' klass='838'/>
<uncommon_trap method='833' bci='153' reason='unloaded' action='reinterpret' index='76' klass='838'/>
<parse method='833' uses='1654' stamp='0.713'>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='14'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='12172'/>
<call method='836' count='1450' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='1450' not_taken='56732' cnt='58182' prob='0.0249218'/>
<uncommon_trap bci='27' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='27' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='33'/>
<branch target_bci='54' taken='0' not_taken='56732' cnt='56732' prob='never'/>
<uncommon_trap bci='33' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='52' bci='48'/>
<uncommon_trap bci='48' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='84' bci='50'/>
<uncommon_trap bci='50' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='1450' not_taken='56732' cnt='56732' prob='0.0249218'/>
<bc code='162' bci='57'/>
<branch target_bci='356' taken='1450' not_taken='0' cnt='1450' prob='always'/>
<uncommon_trap bci='57' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='227' live='217' memory='59008' stamp='0.714'/>
</parse>
<phase_done name='parse' nodes='228' live='159' stamp='0.714'/>
</phase>
<phase name='optimizer' nodes='228' live='159' stamp='0.714'>
<phase name='idealLoop' nodes='233' live='140' stamp='0.714'>
<loop_tree>
<loop idx='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='288' live='144' stamp='0.714'/>
</phase>
<phase name='idealLoop' nodes='288' live='144' stamp='0.714'>
<loop_tree>
<loop idx='411' inner_loop='1' main_loop='411' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='426' live='262' stamp='0.714'/>
</phase>
<phase name='idealLoop' nodes='426' live='262' stamp='0.714'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='514' live='320' stamp='0.715'/>
</phase>
<phase name='ccp' nodes='514' live='320' stamp='0.715'>
<phase_done name='ccp' nodes='514' live='320' stamp='0.715'/>
</phase>
<phase name='idealLoop' nodes='514' live='318' stamp='0.715'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='570' live='310' stamp='0.716'/>
</phase>
<phase name='idealLoop' nodes='570' live='310' stamp='0.716'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='585' live='293' stamp='0.716'/>
</phase>
<phase_done name='optimizer' nodes='586' live='273' stamp='0.716'/>
</phase>
<phase name='matcher' nodes='586' live='273' stamp='0.716'>
<phase_done name='matcher' nodes='227' live='227' stamp='0.716'/>
</phase>
<phase name='regalloc' nodes='296' live='294' stamp='0.717'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='364' live='328' stamp='0.718'/>
</phase>
<phase name='output' nodes='364' live='328' stamp='0.718'>
<phase_done name='output' nodes='385' live='341' stamp='0.726'/>
</phase>
<code_cache total_blobs='272' nmethods='21' adapters='163' free_code_cache='250510848'/>
<task_done success='1' nmsize='600' count='1654' backedge_count='62892' inlined_bytes='11' stamp='0.731'/>
</task>
<task compile_id='37' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='72169' iicount='72169' stamp='0.731'>
<phase name='parse' nodes='3' live='3' stamp='0.731'>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='794' name='append' return='794' arguments='717' flags='33' bytes='13' iicount='72169'/>
<parse method='832' uses='72169' stamp='0.731'>
<bc code='183' bci='7'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='72459'/>
<call method='834' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='72169' stamp='0.731'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='835' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='76356'/>
<call method='835' count='71947' prof_factor='0.995998' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='72169' stamp='0.731'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75094' not_taken='1262' cnt='76356' prob='0.983472'/>
<bc code='183' bci='17'/>
<method id='837' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1521'/>
<call method='837' count='1254' prof_factor='0.945165' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='1193' stamp='0.732'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='561' not_taken='960' cnt='1521' prob='0.368836'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1521' cnt='1521' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1521' not_taken='0' cnt='1521' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='163' live='159' memory='48344' stamp='0.732'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='838' name='java/util/Arrays' flags='1'/>
<method id='839' holder='838' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1585'/>
<call method='839' count='1254' prof_factor='0.945165' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='1193' stamp='0.732'>
<bc code='184' bci='11'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='12202'/>
<call method='844' count='1074' prof_factor='0.752681' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='845' count='1074' prof_factor='0.752681' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='340' live='335' memory='86568' stamp='0.732'/>
</parse>
<parse_done nodes='361' live='355' memory='90040' stamp='0.732'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='411' live='402' memory='100320' stamp='0.732'/>
</parse>
<parse_done nodes='432' live='422' memory='103608' stamp='0.732'/>
</parse>
<phase_done name='parse' nodes='434' live='268' stamp='0.732'/>
</phase>
<phase name='optimizer' nodes='434' live='268' stamp='0.732'>
<phase name='escapeAnalysis' nodes='434' live='265' stamp='0.732'>
<phase name='connectionGraph' nodes='434' live='265' stamp='0.732'>
<phase_done name='connectionGraph' nodes='434' live='265' stamp='0.732'/>
</phase>
<phase_done name='escapeAnalysis' nodes='434' live='265' stamp='0.732'/>
</phase>
<phase name='ccp' nodes='434' live='265' stamp='0.732'>
<phase_done name='ccp' nodes='434' live='265' stamp='0.732'/>
</phase>
<phase name='idealLoop' nodes='438' live='263' stamp='0.732'>
<phase_done name='idealLoop' nodes='453' live='264' stamp='0.733'/>
</phase>
<phase_done name='optimizer' nodes='618' live='395' stamp='0.733'/>
</phase>
<phase name='matcher' nodes='618' live='395' stamp='0.733'>
<phase_done name='matcher' nodes='389' live='389' stamp='0.733'/>
</phase>
<phase name='regalloc' nodes='490' live='489' stamp='0.733'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='659' live='591' stamp='0.735'/>
</phase>
<phase name='output' nodes='663' live='595' stamp='0.735'>
<phase_done name='output' nodes='687' live='609' stamp='0.748'/>
</phase>
<code_cache total_blobs='281' nmethods='24' adapters='169' free_code_cache='250496896'/>
<task_done success='1' nmsize='1528' count='72169' inlined_bytes='125' stamp='0.766'/>
</task>
<task compile_id='14' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='32853' iicount='32853' stamp='0.771'>
<phase name='parse' nodes='3' live='3' stamp='0.771'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' iicount='32853'/>
<parse method='833' uses='32853' stamp='0.771'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='54' live='52' memory='27472' stamp='0.771'/>
</parse>
<phase_done name='parse' nodes='55' live='31' stamp='0.771'/>
</phase>
<phase name='optimizer' nodes='55' live='31' stamp='0.771'>
<phase name='ccp' nodes='55' live='31' stamp='0.771'>
<phase_done name='ccp' nodes='55' live='31' stamp='0.771'/>
</phase>
<phase name='idealLoop' nodes='55' live='31' stamp='0.771'>
<phase_done name='idealLoop' nodes='55' live='31' stamp='0.771'/>
</phase>
<phase_done name='optimizer' nodes='55' live='30' stamp='0.771'/>
</phase>
<phase name='matcher' nodes='55' live='30' stamp='0.771'>
<phase_done name='matcher' nodes='25' live='25' stamp='0.771'/>
</phase>
<phase name='regalloc' nodes='30' live='30' stamp='0.771'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='31' live='31' stamp='0.771'/>
</phase>
<phase name='output' nodes='31' live='31' stamp='0.771'>
<phase_done name='output' nodes='40' live='39' stamp='0.779'/>
</phase>
<code_cache total_blobs='290' nmethods='30' adapters='170' free_code_cache='250483392'/>
<task_done success='1' nmsize='152' count='32857' stamp='0.781'/>
</task>
<task compile_id='57' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='42834' backedge_count='55652' iicount='42834' stamp='0.862'>
<phase name='parse' nodes='3' live='3' stamp='0.862'>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='832' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' compile_id='54' compiler='C1' level='3' iicount='42834'/>
<parse method='832' uses='42834' stamp='0.862'>
<bc code='182' bci='3'/>
<method id='834' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1225'/>
<call method='834' count='35370' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='15'/>
<bc code='182' bci='18'/>
<type id='716' name='boolean'/>
<method id='835' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='49' compile_kind='c2n' level='0' iicount='791'/>
<call method='835' count='37759' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='21'/>
<branch target_bci='0' taken='28682' not_taken='43317' cnt='71999' prob='0.398367'/>
<uncommon_trap bci='0' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='loop_limit_check' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='3'/>
<call method='834' count='35370' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='18'/>
<call method='835' count='37759' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='21'/>
<branch target_bci='0' taken='28682' not_taken='43317' cnt='71999' prob='0.398367'/>
<parse_done nodes='178' live='173' memory='48240' stamp='0.862'/>
</parse>
<phase_done name='parse' nodes='179' live='124' stamp='0.863'/>
</phase>
<phase name='optimizer' nodes='179' live='124' stamp='0.863'>
<phase name='idealLoop' nodes='179' live='119' stamp='0.863'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='102' stamp='0.863'/>
</phase>
<phase name='idealLoop' nodes='180' live='102' stamp='0.863'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='102' stamp='0.863'/>
</phase>
<phase name='idealLoop' nodes='180' live='102' stamp='0.863'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='102' stamp='0.863'/>
</phase>
<phase name='ccp' nodes='180' live='102' stamp='0.863'>
<phase_done name='ccp' nodes='180' live='102' stamp='0.863'/>
</phase>
<phase name='idealLoop' nodes='180' live='102' stamp='0.863'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='86' stamp='0.863'/>
</phase>
<phase name='idealLoop' nodes='180' live='86' stamp='0.863'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='86' stamp='0.863'/>
</phase>
<phase_done name='optimizer' nodes='180' live='86' stamp='0.863'/>
</phase>
<phase name='matcher' nodes='180' live='86' stamp='0.863'>
<phase_done name='matcher' nodes='90' live='90' stamp='0.863'/>
</phase>
<phase name='regalloc' nodes='100' live='100' stamp='0.863'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='109' live='107' stamp='0.864'/>
</phase>
<phase name='output' nodes='109' live='107' stamp='0.864'>
<phase_done name='output' nodes='119' live='115' stamp='0.864'/>
</phase>
<code_cache total_blobs='305' nmethods='45' adapters='171' free_code_cache='250465472'/>
<task_done success='1' nmsize='152' count='42850' backedge_count='55669' stamp='0.866'/>
</task>
<task compile_id='63' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='952535' iicount='12' stamp='0.897'>
<phase name='parse' nodes='3' live='3' stamp='0.897'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' iicount='12'/>
<parse method='833' uses='12' stamp='0.897'>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='0' not_taken='0'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='837' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='838' holder='837' name='getAndIncrement' return='722' flags='17' bytes='12' compile_id='62' compiler='C1' level='1' iicount='872105'/>
<call method='838' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='call site not reached'/>
<direct_call bci='14'/>
<uncommon_trap bci='14' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='0' not_taken='0'/>
<bc code='182' bci='28'/>
<klass id='835' name='java/util/concurrent/CountDownLatch' flags='1'/>
<method id='836' holder='835' name='countDown' return='724' flags='1' bytes='10' iicount='1'/>
<dependency type='unique_concrete_method' ctxk='835' x='836'/>
<call method='836' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='28'/>
<uncommon_trap bci='28' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='156' live='151' memory='45816' stamp='0.897'/>
</parse>
<phase_done name='parse' nodes='158' live='105' stamp='0.897'/>
</phase>
<phase name='optimizer' nodes='158' live='105' stamp='0.897'>
<phase name='idealLoop' nodes='158' live='101' stamp='0.897'>
<loop_tree>
<loop idx='158' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='165' live='101' stamp='0.898'/>
</phase>
<phase name='idealLoop' nodes='165' live='101' stamp='0.898'>
<loop_tree>
<loop idx='158' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='165' live='101' stamp='0.898'/>
</phase>
<phase name='idealLoop' nodes='165' live='101' stamp='0.898'>
<loop_tree>
<loop idx='158' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='165' live='101' stamp='0.898'/>
</phase>
<phase name='ccp' nodes='165' live='101' stamp='0.898'>
<phase_done name='ccp' nodes='165' live='101' stamp='0.898'/>
</phase>
<phase name='idealLoop' nodes='165' live='101' stamp='0.898'>
<loop_tree>
<loop idx='158' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='171' live='85' stamp='0.898'/>
</phase>
<phase name='idealLoop' nodes='171' live='85' stamp='0.898'>
<loop_tree>
<loop idx='158' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='177' live='85' stamp='0.898'/>
</phase>
<phase_done name='optimizer' nodes='184' live='86' stamp='0.898'/>
</phase>
<phase name='matcher' nodes='184' live='86' stamp='0.898'>
<phase_done name='matcher' nodes='82' live='82' stamp='0.898'/>
</phase>
<phase name='regalloc' nodes='106' live='106' stamp='0.898'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='117' live='114' stamp='0.898'/>
</phase>
<phase name='output' nodes='117' live='114' stamp='0.898'>
<phase_done name='output' nodes='135' live='127' stamp='0.904'/>
</phase>
<dependency type='unique_concrete_method' ctxk='835' x='836'/>
<code_cache total_blobs='307' nmethods='48' adapters='171' free_code_cache='250466432'/>
<task_done success='1' nmsize='248' count='12' backedge_count='988269' stamp='0.965'/>
</task>
<task compile_id='72' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='5508' iicount='5508' stamp='1.458'>
<phase name='parse' nodes='3' live='3' stamp='1.458'>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='java/io/BufferedInputStream' flags='1'/>
<method id='833' holder='832' name='getBufIfOpen' return='824' flags='2' bytes='21' compile_id='64' compiler='C1' level='3' iicount='5546'/>
<klass id='835' name='java/io/IOException' flags='1'/>
<uncommon_trap method='833' bci='9' reason='unloaded' action='reinterpret' index='65' klass='835'/>
<parse method='833' uses='5546' stamp='1.458'>
<bc code='199' bci='6'/>
<branch target_bci='19' taken='5544' not_taken='0' cnt='5544' prob='always'/>
<uncommon_trap bci='6' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='46' live='44' memory='26144' stamp='1.458'/>
</parse>
<phase_done name='parse' nodes='47' live='28' stamp='1.458'/>
</phase>
<phase name='optimizer' nodes='47' live='28' stamp='1.458'>
<phase name='ccp' nodes='47' live='28' stamp='1.459'>
<phase_done name='ccp' nodes='47' live='28' stamp='1.459'/>
</phase>
<phase name='idealLoop' nodes='47' live='28' stamp='1.459'>
<phase_done name='idealLoop' nodes='47' live='28' stamp='1.459'/>
</phase>
<phase_done name='optimizer' nodes='50' live='28' stamp='1.459'/>
</phase>
<phase name='matcher' nodes='50' live='28' stamp='1.459'>
<phase_done name='matcher' nodes='29' live='29' stamp='1.459'/>
</phase>
<phase name='regalloc' nodes='34' live='34' stamp='1.459'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='33' stamp='1.459'/>
</phase>
<phase name='output' nodes='36' live='33' stamp='1.459'>
<phase_done name='output' nodes='45' live='41' stamp='1.459'/>
</phase>
<code_cache total_blobs='317' nmethods='52' adapters='177' free_code_cache='250388416'/>
<task_done success='1' nmsize='120' count='6364' stamp='1.460'/>
</task>
<task compile_id='79' method='java/lang/Character toLowerCase (I)I' bytes='9' count='29715' iicount='29715' stamp='1.568'>
<phase name='parse' nodes='3' live='3' stamp='1.569'>
<type id='722' name='int'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' iicount='29715'/>
<parse method='832' uses='29715' stamp='1.571'>
<bc code='184' bci='1'/>
<klass id='835' name='java/lang/CharacterData' flags='1024'/>
<method id='836' holder='835' name='of' return='835' arguments='722' flags='24' bytes='120' compile_id='13' compiler='C2' level='4' iicount='32857'/>
<call method='836' count='29429' prof_factor='1' inline='1'/>
<klass id='838' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='836' bci='96' reason='unloaded' action='reinterpret' index='45' klass='838'/>
<klass id='839' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='836' bci='100' reason='unloaded' action='reinterpret' index='46' klass='839'/>
<klass id='840' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='836' bci='104' reason='unloaded' action='reinterpret' index='47' klass='840'/>
<klass id='841' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='836' bci='108' reason='unloaded' action='reinterpret' index='48' klass='841'/>
<klass id='842' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='836' bci='112' reason='unloaded' action='reinterpret' index='50' klass='842'/>
<klass id='843' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='836' bci='116' reason='unloaded' action='reinterpret' index='51' klass='843'/>
<inline_success reason='inline (hot)'/>
<klass id='834' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='835' x='834'/>
<parse method='836' uses='29715' stamp='1.571'>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='32857' cnt='32857' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='51' live='49' memory='27472' stamp='1.571'/>
</parse>
<bc code='182' bci='5'/>
<method id='847' holder='834' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' iicount='30061'/>
<dependency type='unique_concrete_method' ctxk='834' x='847'/>
<call method='847' count='29429' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='29715' stamp='1.571'>
<bc code='182' bci='4'/>
<method id='848' holder='834' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='14' compiler='C2' level='4' iicount='32857'/>
<dependency type='unique_concrete_method' ctxk='834' x='848'/>
<call method='848' count='29579' prof_factor='0.98849' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='848' uses='29715' stamp='1.571'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='98' memory='36200' stamp='1.571'/>
</parse>
<bc code='153' bci='12'/>
<branch target_bci='37' taken='28517' not_taken='1544' cnt='30061' prob='0.948638'/>
<bc code='159' bci='21'/>
<branch target_bci='37' taken='0' not_taken='1544' cnt='1544' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='133' live='127' memory='42480' stamp='1.571'/>
</parse>
<parse_done nodes='133' live='126' memory='42864' stamp='1.571'/>
</parse>
<phase_done name='parse' nodes='134' live='69' stamp='1.571'/>
</phase>
<phase name='optimizer' nodes='134' live='69' stamp='1.571'>
<phase name='ccp' nodes='134' live='67' stamp='1.571'>
<phase_done name='ccp' nodes='134' live='67' stamp='1.571'/>
</phase>
<phase name='idealLoop' nodes='134' live='67' stamp='1.571'>
<phase_done name='idealLoop' nodes='134' live='67' stamp='1.571'/>
</phase>
<phase_done name='optimizer' nodes='135' live='67' stamp='1.571'/>
</phase>
<phase name='matcher' nodes='135' live='67' stamp='1.571'>
<phase_done name='matcher' nodes='60' live='60' stamp='1.571'/>
</phase>
<phase name='regalloc' nodes='75' live='75' stamp='1.571'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='92' live='86' stamp='1.572'/>
</phase>
<phase name='output' nodes='92' live='86' stamp='1.572'>
<phase_done name='output' nodes='105' live='94' stamp='1.572'/>
</phase>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='835' x='834'/>
<dependency type='unique_concrete_method' ctxk='834' x='847'/>
<dependency type='unique_concrete_method' ctxk='834' x='848'/>
<code_cache total_blobs='330' nmethods='60' adapters='179' free_code_cache='250353344'/>
<task_done success='1' nmsize='184' count='30137' inlined_bytes='170' stamp='1.575'/>
</task>
<task compile_id='88' method='java/lang/String toLowerCase (Ljava/util/Locale;)Ljava/lang/String;' bytes='439' count='1639' backedge_count='29704' iicount='1639' stamp='1.623'>
<phase name='parse' nodes='3' live='3' stamp='1.626'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='java/util/Locale' flags='17'/>
<method id='833' holder='730' name='toLowerCase' return='730' arguments='832' flags='1' bytes='439' iicount='1639'/>
<klass id='840' name='java/lang/ConditionalSpecialCasing' unloaded='1'/>
<uncommon_trap method='833' bci='233' reason='unloaded' action='reinterpret' index='228' klass='840'/>
<uncommon_trap method='833' bci='271' reason='unloaded' action='reinterpret' index='228' klass='840'/>
<klass id='828' name='java/lang/NullPointerException' flags='1'/>
<uncommon_trap method='833' bci='4' reason='unloaded' action='reinterpret' index='237' klass='828'/>
<parse method='833' uses='1639' stamp='1.626'>
<bc code='199' bci='1'/>
<branch target_bci='12' taken='1226' not_taken='0' cnt='1226' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='190' bci='16'/>
<uncommon_trap bci='16' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='22'/>
<branch target_bci='97' taken='914' not_taken='2451' cnt='3365' prob='0.27162'/>
<uncommon_trap bci='25' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='25' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='30' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='161' bci='37'/>
<branch target_bci='78' taken='2451' not_taken='0' cnt='2451' prob='always'/>
<uncommon_trap bci='37' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='82'/>
<type id='717' name='char'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='835' holder='810' name='toLowerCase' return='717' arguments='717' flags='9' bytes='6' iicount='3951'/>
<call method='835' count='2451' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='2451' stamp='1.626'>
<bc code='184' bci='1'/>
<type id='722' name='int'/>
<method id='842' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' compile_id='79' compiler='C2' level='4' iicount='30137'/>
<call method='842' count='3439' prof_factor='0.620349' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='2451' stamp='1.638'>
<bc code='184' bci='1'/>
<klass id='851' name='java/lang/CharacterData' flags='1024'/>
<method id='852' holder='851' name='of' return='851' arguments='722' flags='24' bytes='120' compile_id='13' compiler='C2' level='4' iicount='32857'/>
<call method='852' count='29625' prof_factor='0.0813286' inline='1'/>
<klass id='856' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='852' bci='96' reason='unloaded' action='reinterpret' index='45' klass='856'/>
<klass id='857' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='852' bci='100' reason='unloaded' action='reinterpret' index='46' klass='857'/>
<klass id='858' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='852' bci='104' reason='unloaded' action='reinterpret' index='47' klass='858'/>
<klass id='859' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='852' bci='108' reason='unloaded' action='reinterpret' index='48' klass='859'/>
<klass id='860' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='852' bci='112' reason='unloaded' action='reinterpret' index='50' klass='860'/>
<klass id='861' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='852' bci='116' reason='unloaded' action='reinterpret' index='51' klass='861'/>
<inline_success reason='inline (hot)'/>
<klass id='855' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='851' x='855'/>
<parse method='852' uses='2451' stamp='1.638'>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='32857' cnt='32857' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='210' live='201' memory='71872' stamp='1.638'/>
</parse>
<bc code='182' bci='5'/>
<method id='865' holder='855' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' compile_id='80' compiler='C2' level='4' iicount='30137'/>
<dependency type='unique_concrete_method' ctxk='855' x='865'/>
<call method='865' count='29625' prof_factor='0.0813286' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='865' uses='2451' stamp='1.638'>
<bc code='182' bci='4'/>
<method id='866' holder='855' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='14' compiler='C2' level='4' iicount='32857'/>
<dependency type='unique_concrete_method' ctxk='855' x='866'/>
<call method='866' count='29625' prof_factor='0.0813286' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='866' uses='2451' stamp='1.638'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='258' live='247' memory='86672' stamp='1.639'/>
</parse>
<bc code='153' bci='12'/>
<branch target_bci='37' taken='28588' not_taken='1549' cnt='30137' prob='0.948601'/>
<bc code='159' bci='21'/>
<branch target_bci='37' taken='0' not_taken='1549' cnt='1549' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='289' live='276' memory='90792' stamp='1.639'/>
</parse>
<parse_done nodes='289' live='275' memory='90920' stamp='1.639'/>
</parse>
<parse_done nodes='291' live='276' memory='91288' stamp='1.639'/>
</parse>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='2139' not_taken='312' cnt='2451' prob='0.872705'/>
<bc code='184' bci='116'/>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='836' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='836' count='312' prof_factor='1' inline='1'/>
<uncommon_trap bci='116' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_arraycopy' nodes='69'/>
<bc code='182' bci='120'/>
<method id='837' holder='832' name='getLanguage' return='730' flags='1' bytes='8' iicount='403'/>
<call method='837' count='312' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='312' stamp='1.639'>
<bc code='182' bci='4'/>
<klass id='870' name='sun/util/locale/BaseLocale' flags='17'/>
<method id='871' holder='870' name='getLanguage' return='730' flags='1' bytes='5' iicount='403'/>
<call method='871' count='-1' prof_factor='0.774194' inline='1'/>
<inline_success reason='accessor'/>
<parse method='871' uses='-1' stamp='1.639'>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='453' live='435' memory='119808' stamp='1.639'/>
</parse>
<parse_done nodes='453' live='434' memory='119936' stamp='1.639'/>
</parse>
<bc code='165' bci='129'/>
<branch target_bci='146' taken='0' not_taken='312' cnt='312' prob='never'/>
<uncommon_trap bci='129' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='165' bci='136'/>
<branch target_bci='146' taken='0' not_taken='312' cnt='312' prob='never'/>
<uncommon_trap bci='136' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='166' bci='143'/>
<branch target_bci='150' taken='312' not_taken='0' cnt='312' prob='always'/>
<uncommon_trap bci='143' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='162' bci='159'/>
<branch target_bci='424' taken='312' not_taken='24476' cnt='24788' prob='0.0125867'/>
<uncommon_trap bci='162' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='162' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='168'/>
<uncommon_trap bci='168' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='168' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='161' bci='176'/>
<branch target_bci='205' taken='24476' not_taken='0' cnt='24476' prob='always'/>
<uncommon_trap bci='176' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='210'/>
<branch target_bci='229' taken='0' not_taken='24476' cnt='24476' prob='never'/>
<bc code='159' bci='218'/>
<branch target_bci='229' taken='0' not_taken='24476' cnt='24476' prob='never'/>
<uncommon_trap bci='218' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='160' bci='226'/>
<branch target_bci='241' taken='24476' not_taken='0' cnt='24476' prob='always'/>
<uncommon_trap bci='226' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='243'/>
<call method='842' count='24476' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='842' uses='24476' stamp='1.639'>
<bc code='184' bci='1'/>
<call method='852' count='29625' prof_factor='0.812158' inline='1'/>
<inline_success reason='inline (hot)'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='851' x='855'/>
<parse method='852' uses='24476' stamp='1.639'>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='32857' cnt='32857' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='660' live='629' memory='171848' stamp='1.640'/>
</parse>
<bc code='182' bci='5'/>
<dependency type='unique_concrete_method' ctxk='855' x='865'/>
<call method='865' count='29625' prof_factor='0.812158' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='865' uses='24476' stamp='1.640'>
<bc code='182' bci='4'/>
<dependency type='unique_concrete_method' ctxk='855' x='866'/>
<call method='866' count='29625' prof_factor='0.812158' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='866' uses='24476' stamp='1.640'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='704' live='671' memory='180824' stamp='1.640'/>
</parse>
<bc code='153' bci='12'/>
<branch target_bci='37' taken='28588' not_taken='1549' cnt='30137' prob='0.948601'/>
<bc code='159' bci='21'/>
<branch target_bci='37' taken='0' not_taken='1549' cnt='1549' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='731' live='696' memory='184752' stamp='1.640'/>
</parse>
<parse_done nodes='731' live='695' memory='184880' stamp='1.640'/>
</parse>
<bc code='159' bci='251'/>
<branch target_bci='261' taken='0' not_taken='24476' cnt='24476' prob='never'/>
<uncommon_trap bci='251' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='258'/>
<branch target_bci='403' taken='24476' not_taken='0' cnt='24476' prob='always'/>
<uncommon_trap bci='258' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='85' bci='413'/>
<uncommon_trap bci='413' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='413' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='159'/>
<branch target_bci='424' taken='312' not_taken='24476' cnt='24476' prob='0.0125867'/>
<bc code='183' bci='435'/>
<klass id='821' name='[C' flags='1041'/>
<method id='839' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='4384'/>
<call method='839' count='312' prof_factor='1' inline='1'/>
<klass id='877' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='839' bci='58' reason='unloaded' action='reinterpret' index='245' klass='877'/>
<uncommon_trap method='839' bci='25' reason='unloaded' action='reinterpret' index='245' klass='877'/>
<uncommon_trap method='839' bci='8' reason='unloaded' action='reinterpret' index='245' klass='877'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='312' stamp='1.689'>
<bc code='183' bci='1'/>
<method id='874' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23674'/>
<call method='874' count='3885' prof_factor='0.0711679' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='312' stamp='1.689'>
<parse_done nodes='874' live='833' memory='212808' stamp='1.689'/>
</parse>
<bc code='156' bci='5'/>
<branch target_bci='17' taken='4384' not_taken='0' cnt='4384' prob='always'/>
<bc code='157' bci='18'/>
<branch target_bci='50' taken='4354' not_taken='30' cnt='4384' prob='0.993157'/>
<bc code='156' bci='22'/>
<branch target_bci='34' taken='30' not_taken='0'/>
<bc code='187' bci='25'/>
<uncommon_trap bci='25' reason='unloaded' action='reinterpret' index='245'/>
<bc code='163' bci='37'/>
<branch target_bci='50' taken='0' not_taken='30'/>
<bc code='164' bci='55'/>
<branch target_bci='69' taken='4354' not_taken='0' cnt='4354' prob='always'/>
<uncommon_trap bci='55' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='75'/>
<klass id='875' name='java/util/Arrays' flags='1'/>
<method id='876' holder='875' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' compile_id='38' compiler='C1' level='3' iicount='5585'/>
<call method='876' count='3858' prof_factor='0.0711679' inline='1'/>
<klass id='884' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='876' bci='8' reason='unloaded' action='reinterpret' index='285' klass='884'/>
<inline_success reason='inline (hot)'/>
<parse method='876' uses='310' stamp='1.689'>
<bc code='156' bci='5'/>
<branch target_bci='39' taken='5584' not_taken='0' cnt='5584' prob='always'/>
<uncommon_trap bci='5' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='184' bci='54'/>
<klass id='882' name='java/lang/Math' flags='17'/>
<method id='883' holder='882' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='13127'/>
<call method='883' count='5077' prof_factor='0.0555058' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='57'/>
<call method='836' count='5077' prof_factor='0.0555058' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='1147' live='1101' memory='284136' stamp='1.689'/>
</parse>
<parse_done nodes='1162' live='1115' memory='287272' stamp='1.689'/>
</parse>
<bc code='162' bci='22'/>
<branch target_bci='97' taken='914' not_taken='2451' cnt='2139' prob='0.27162'/>
<parse_done nodes='1181' live='1132' memory='292424' stamp='1.689'/>
</parse>
<phase_done name='parse' nodes='1183' live='708' stamp='1.689'/>
</phase>
<phase name='optimizer' nodes='1183' live='708' stamp='1.689'>
<phase name='idealLoop' nodes='1197' live='569' stamp='1.690'>
<loop_tree>
<loop idx='1204' >
</loop>
<loop idx='1210' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1212' live='558' stamp='1.690'/>
</phase>
<phase name='escapeAnalysis' nodes='1212' live='558' stamp='1.690'>
<phase name='connectionGraph' nodes='1213' live='559' stamp='1.690'>
<phase_done name='connectionGraph' nodes='1213' live='559' stamp='1.690'/>
</phase>
<phase_done name='escapeAnalysis' nodes='1213' live='559' stamp='1.690'/>
</phase>
<phase name='idealLoop' nodes='1213' live='559' stamp='1.690'>
<loop_tree>
<loop idx='1204' inner_loop='1' >
</loop>
<loop idx='1210' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1265' live='537' stamp='1.691'/>
</phase>
<phase name='idealLoop' nodes='1265' live='537' stamp='1.691'>
<loop_tree>
<loop idx='1204' inner_loop='1' >
</loop>
<loop idx='1210' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1314' live='549' stamp='1.691'/>
</phase>
<phase name='idealLoop' nodes='1314' live='549' stamp='1.691'>
<loop_tree>
<loop idx='1204' inner_loop='1' >
</loop>
<loop idx='1210' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1314' live='543' stamp='1.692'/>
</phase>
<phase name='ccp' nodes='1314' live='543' stamp='1.692'>
<phase_done name='ccp' nodes='1314' live='543' stamp='1.692'/>
</phase>
<phase name='idealLoop' nodes='1318' live='529' stamp='1.692'>
<loop_tree>
<loop idx='1204' inner_loop='1' >
</loop>
<loop idx='1210' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1318' live='511' stamp='1.693'/>
</phase>
<phase name='idealLoop' nodes='1318' live='511' stamp='1.693'>
<loop_tree>
<loop idx='1204' inner_loop='1' >
</loop>
<loop idx='1210' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1318' live='485' stamp='1.693'/>
</phase>
<phase name='idealLoop' nodes='1318' live='485' stamp='1.693'>
<loop_tree>
<loop idx='1204' inner_loop='1' >
</loop>
<loop idx='1210' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='1318' live='481' stamp='1.693'/>
</phase>
<phase_done name='optimizer' nodes='1512' live='596' stamp='1.694'/>
</phase>
<phase name='matcher' nodes='1512' live='596' stamp='1.694'>
<phase_done name='matcher' nodes='566' live='566' stamp='1.695'/>
</phase>
<phase name='regalloc' nodes='722' live='719' stamp='1.695'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='1013' live='911' stamp='1.699'/>
</phase>
<phase name='output' nodes='1015' live='913' stamp='1.699'>
<phase_done name='output' nodes='1055' live='944' stamp='1.705'/>
</phase>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='851' x='855'/>
<dependency type='unique_concrete_method' ctxk='855' x='865'/>
<dependency type='unique_concrete_method' ctxk='855' x='866'/>
<code_cache total_blobs='334' nmethods='67' adapters='179' free_code_cache='250335808'/>
<task_done success='1' nmsize='1944' count='1674' backedge_count='30082' inlined_bytes='534' stamp='1.738'/>
</task>
<task compile_id='129' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='12' backedge_count='319533' iicount='12' stamp='8.206'>
<phase name='parse' nodes='3' live='3' stamp='8.206'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' iicount='12'/>
<parse method='833' uses='12' stamp='8.206'>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='0' not_taken='134558' cnt='134558' prob='never'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken never'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='837' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger' flags='1'/>
<method id='838' holder='837' name='getAndIncrement' return='722' flags='17' bytes='40' compile_id='127' compiler='C1' level='2' iicount='316019'/>
<call method='838' count='134249' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='134249' stamp='8.207'>
<uncommon_trap bci='14' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='840' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1225'/>
<call method='840' count='589317' prof_factor='0.424813' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<type id='716' name='boolean'/>
<method id='841' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='49' compile_kind='c2n' level='0' iicount='791'/>
<call method='841' count='591164' prof_factor='0.424813' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='434861' not_taken='317202' cnt='752063' prob='0.578224'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<call method='840' count='589317' prof_factor='0.424813' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<call method='841' count='591164' prof_factor='0.424813' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='434861' not_taken='317202' cnt='752063' prob='0.578224'/>
<parse_done nodes='234' live='227' memory='55608' stamp='8.207'/>
</parse>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='0' not_taken='134558' cnt='134247' prob='never'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='251' live='243' memory='58216' stamp='8.207'/>
</parse>
<phase_done name='parse' nodes='251' live='166' stamp='8.207'/>
</phase>
<phase name='optimizer' nodes='251' live='166' stamp='8.207'>
<phase name='idealLoop' nodes='251' live='156' stamp='8.207'>
<loop_tree>
<loop idx='251' >
<loop idx='252' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='259' live='155' stamp='8.207'/>
</phase>
<phase name='idealLoop' nodes='259' live='155' stamp='8.207'>
<loop_tree>
<loop idx='251' >
<loop idx='252' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='259' live='155' stamp='8.207'/>
</phase>
<phase name='idealLoop' nodes='259' live='155' stamp='8.207'>
<loop_tree>
<loop idx='251' >
<loop idx='252' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='259' live='155' stamp='8.207'/>
</phase>
<phase name='ccp' nodes='259' live='155' stamp='8.207'>
<phase_done name='ccp' nodes='259' live='155' stamp='8.207'/>
</phase>
<phase name='idealLoop' nodes='259' live='155' stamp='8.207'>
<loop_tree>
<loop idx='251' >
<loop idx='252' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='265' live='123' stamp='8.207'/>
</phase>
<phase name='idealLoop' nodes='265' live='123' stamp='8.207'>
<loop_tree>
<loop idx='251' >
<loop idx='252' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='271' live='123' stamp='8.207'/>
</phase>
<phase_done name='optimizer' nodes='275' live='124' stamp='8.207'/>
</phase>
<phase name='matcher' nodes='275' live='124' stamp='8.207'>
<phase_done name='matcher' nodes='129' live='129' stamp='8.207'/>
</phase>
<phase name='regalloc' nodes='150' live='150' stamp='8.208'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='168' live='162' stamp='8.208'/>
</phase>
<phase name='output' nodes='170' live='164' stamp='8.208'>
<phase_done name='output' nodes='185' live='173' stamp='8.210'/>
</phase>
<code_cache total_blobs='369' nmethods='101' adapters='180' free_code_cache='250262336'/>
<task_done success='1' nmsize='280' count='12' backedge_count='319533' inlined_bytes='40' stamp='8.213'/>
</task>
</compilation_log>
<compilation_log thread='20652'>
<start_compile_thread name='C2 CompilerThread1' thread='20652' process='4764' stamp='0.491'/>
<task compile_id='3' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='5480' backedge_count='119228' iicount='5480' osr_bci='24' stamp='0.635'>
<phase name='parse' nodes='3' live='3' stamp='0.635'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='5480'/>
<parse method='832' uses='5480' osr_bci='24' stamp='0.635'>
<uncommon_trap bci='24' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='24' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='24' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1872' not_taken='115113' cnt='116985' prob='0.0160021'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='219' live='211' memory='54344' stamp='0.645'/>
</parse>
<phase_done name='parse' nodes='220' live='169' stamp='0.645'/>
</phase>
<phase name='optimizer' nodes='220' live='169' stamp='0.645'>
<phase name='idealLoop' nodes='230' live='160' stamp='0.645'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='245' live='154' stamp='0.645'/>
</phase>
<phase name='idealLoop' nodes='245' live='154' stamp='0.645'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='296' live='161' stamp='0.645'/>
</phase>
<phase name='idealLoop' nodes='296' live='161' stamp='0.645'>
<loop_tree>
<loop idx='301' main_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='399' live='227' stamp='0.646'/>
</phase>
<phase name='ccp' nodes='399' live='227' stamp='0.646'>
<phase_done name='ccp' nodes='399' live='227' stamp='0.646'/>
</phase>
<phase name='idealLoop' nodes='402' live='220' stamp='0.646'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='301' inner_loop='1' main_loop='301' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='402' live='214' stamp='0.646'/>
</phase>
<phase name='idealLoop' nodes='402' live='214' stamp='0.646'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='431' inner_loop='1' main_loop='431' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='450' live='228' stamp='0.646'/>
</phase>
<phase name='idealLoop' nodes='450' live='228' stamp='0.646'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='480' inner_loop='1' main_loop='480' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='511' live='251' stamp='0.647'/>
</phase>
<phase name='idealLoop' nodes='511' live='251' stamp='0.647'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='480' inner_loop='1' main_loop='480' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='533' live='250' stamp='0.647'/>
</phase>
<phase_done name='optimizer' nodes='540' live='236' stamp='0.647'/>
</phase>
<phase name='matcher' nodes='540' live='236' stamp='0.647'>
<phase_done name='matcher' nodes='210' live='210' stamp='0.647'/>
</phase>
<phase name='regalloc' nodes='272' live='269' stamp='0.648'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='318' live='297' stamp='0.648'/>
</phase>
<phase name='output' nodes='318' live='297' stamp='0.648'>
<phase_done name='output' nodes='335' live='308' stamp='0.652'/>
</phase>
<code_cache total_blobs='250' nmethods='7' adapters='156' free_code_cache='250543296'/>
<task_done success='1' nmsize='504' count='5482' backedge_count='119275' stamp='0.656'/>
</task>
<task compile_id='24' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='19701' backedge_count='14092' iicount='19701' stamp='0.656'>
<phase name='parse' nodes='3' live='3' stamp='0.656'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='19701'/>
<parse method='832' uses='19701' stamp='0.656'>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='18080' not_taken='1621' cnt='19701' prob='0.91772'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile'/>
<bc code='153' bci='11'/>
<branch target_bci='79' taken='1' not_taken='18079' cnt='18080' prob='5.53097e-005'/>
<bc code='192' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='make_not_entrant'/>
<uncommon_trap bci='15' reason='class_check' action='maybe_recompile'/>
<bc code='190' bci='23'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='31'/>
<branch target_bci='79' taken='17585' not_taken='494' cnt='18079' prob='0.972676'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='72' not_taken='13064' cnt='13136' prob='0.00548112'/>
<uncommon_trap bci='56' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='56' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='60'/>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='65'/>
<uncommon_trap bci='65' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='65' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='71' taken='12642' not_taken='422' cnt='13064' prob='0.967698'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='72' not_taken='13064' cnt='12642' prob='0.00548112'/>
<parse_done nodes='297' live='282' memory='77040' stamp='0.680'/>
</parse>
<phase_done name='parse' nodes='298' live='206' stamp='0.680'/>
</phase>
<phase name='optimizer' nodes='298' live='206' stamp='0.680'>
<phase name='idealLoop' nodes='325' live='172' stamp='0.680'>
<loop_tree>
<loop idx='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='366' live='157' stamp='0.680'/>
</phase>
<phase name='idealLoop' nodes='366' live='157' stamp='0.680'>
<loop_tree>
<loop idx='528' inner_loop='1' main_loop='528' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='645' live='281' stamp='0.680'/>
</phase>
<phase name='idealLoop' nodes='645' live='281' stamp='0.680'>
<loop_tree>
<loop idx='446' inner_loop='1' pre_loop='332' >
</loop>
<loop idx='682' inner_loop='1' main_loop='682' >
</loop>
<loop idx='392' inner_loop='1' post_loop='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='720' live='312' stamp='0.681'/>
</phase>
<phase name='ccp' nodes='720' live='312' stamp='0.681'>
<phase_done name='ccp' nodes='720' live='312' stamp='0.681'/>
</phase>
<phase name='idealLoop' nodes='720' live='311' stamp='0.681'>
<loop_tree>
<loop idx='446' inner_loop='1' pre_loop='332' >
</loop>
<loop idx='682' inner_loop='1' main_loop='682' >
</loop>
<loop idx='392' inner_loop='1' post_loop='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='720' live='290' stamp='0.681'/>
</phase>
<phase name='idealLoop' nodes='720' live='290' stamp='0.681'>
<loop_tree>
<loop idx='446' inner_loop='1' pre_loop='332' >
</loop>
<loop idx='682' inner_loop='1' main_loop='682' >
</loop>
<loop idx='392' inner_loop='1' post_loop='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='720' live='287' stamp='0.681'/>
</phase>
<phase_done name='optimizer' nodes='730' live='264' stamp='0.681'/>
</phase>
<phase name='matcher' nodes='730' live='264' stamp='0.681'>
<phase_done name='matcher' nodes='220' live='220' stamp='0.682'/>
</phase>
<phase name='regalloc' nodes='300' live='298' stamp='0.682'>
<regalloc attempts='3' success='1'/>
<phase_done name='regalloc' nodes='357' live='332' stamp='0.683'/>
</phase>
<phase name='output' nodes='357' live='332' stamp='0.683'>
<phase_done name='output' nodes='385' live='345' stamp='0.686'/>
</phase>
<code_cache total_blobs='263' nmethods='13' adapters='163' free_code_cache='250525376'/>
<task_done success='1' nmsize='632' count='19722' backedge_count='14124' stamp='0.694'/>
</task>
<task compile_id='8' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='22765' iicount='22765' stamp='0.695'>
<phase name='parse' nodes='3' live='3' stamp='0.695'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='22765'/>
<parse method='832' uses='22765' stamp='0.695'>
<parse_done nodes='54' live='53' memory='27144' stamp='0.695'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.695'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.695'>
<phase name='ccp' nodes='56' live='38' stamp='0.695'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.695'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.695'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.695'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.695'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.695'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.695'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.695'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.695'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.695'>
<phase_done name='output' nodes='55' live='53' stamp='0.698'/>
</phase>
<code_cache total_blobs='265' nmethods='15' adapters='163' free_code_cache='250523456'/>
<task_done success='1' nmsize='152' count='22780' stamp='0.699'/>
</task>
<task compile_id='32' method='java/lang/String indexOf (II)I' bytes='70' count='3800' backedge_count='230294' iicount='3800' stamp='0.699'>
<phase name='parse' nodes='3' live='3' stamp='0.700'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='3801'/>
<parse method='832' uses='3801' stamp='0.700'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='3585' not_taken='0' cnt='3585' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='3005' not_taken='580' cnt='3585' prob='0.838215'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='3005' cnt='3005' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='2853' not_taken='223267' cnt='226120' prob='0.0126172'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='223115' not_taken='152' cnt='223267' prob='0.999319'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='2853' not_taken='223267' cnt='223115' prob='0.0126172'/>
<parse_done nodes='184' live='174' memory='50256' stamp='0.700'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.700'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.700'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.700'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.700'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.700'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.700'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.700'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.700'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.700'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.700'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.700'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='361' live='225' stamp='0.701'/>
</phase>
<phase name='idealLoop' nodes='361' live='225' stamp='0.701'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='402' inner_loop='1' main_loop='402' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='468' live='290' stamp='0.701'/>
</phase>
<phase name='idealLoop' nodes='468' live='290' stamp='0.701'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='402' inner_loop='1' main_loop='402' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='511' live='278' stamp='0.701'/>
</phase>
<phase name='idealLoop' nodes='511' live='278' stamp='0.701'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='402' inner_loop='1' main_loop='402' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='520' live='277' stamp='0.701'/>
</phase>
<phase_done name='optimizer' nodes='524' live='250' stamp='0.701'/>
</phase>
<phase name='matcher' nodes='524' live='250' stamp='0.701'>
<phase_done name='matcher' nodes='197' live='197' stamp='0.701'/>
</phase>
<phase name='regalloc' nodes='279' live='278' stamp='0.702'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='296' live='293' stamp='0.702'/>
</phase>
<phase name='output' nodes='298' live='295' stamp='0.702'>
<phase_done name='output' nodes='329' live='308' stamp='0.706'/>
</phase>
<code_cache total_blobs='269' nmethods='18' adapters='163' free_code_cache='250516864'/>
<task_done success='1' nmsize='504' count='3805' backedge_count='230560' stamp='0.713'/>
</task>
<task compile_id='35' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='79716' iicount='79716' stamp='0.713'>
<phase name='parse' nodes='3' live='3' stamp='0.713'>
<type id='716' name='boolean'/>
<type id='717' name='char'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='isSlash' return='716' arguments='717' flags='2' bytes='18' iicount='79716'/>
<parse method='833' uses='79716' stamp='0.713'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5529' not_taken='74183' cnt='79712' prob='0.0693622'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71237' not_taken='2946' cnt='74183' prob='0.960287'/>
<parse_done nodes='47' live='46' memory='26176' stamp='0.713'/>
</parse>
<phase_done name='parse' nodes='48' live='27' stamp='0.713'/>
</phase>
<phase name='optimizer' nodes='48' live='27' stamp='0.713'>
<phase name='ccp' nodes='48' live='27' stamp='0.713'>
<phase_done name='ccp' nodes='48' live='27' stamp='0.713'/>
</phase>
<phase name='idealLoop' nodes='48' live='27' stamp='0.713'>
<phase_done name='idealLoop' nodes='48' live='27' stamp='0.713'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.713'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.713'>
<phase_done name='matcher' nodes='26' live='26' stamp='0.713'/>
</phase>
<phase name='regalloc' nodes='36' live='36' stamp='0.714'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='36' stamp='0.714'/>
</phase>
<phase name='output' nodes='36' live='36' stamp='0.714'>
<phase_done name='output' nodes='46' live='43' stamp='0.714'/>
</phase>
<code_cache total_blobs='270' nmethods='19' adapters='163' free_code_cache='250516224'/>
<task_done success='1' nmsize='120' count='79782' stamp='0.715'/>
</task>
<task compile_id='36' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='72459' iicount='72459' stamp='0.726'>
<phase name='parse' nodes='3' live='3' stamp='0.726'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='717' name='char'/>
<method id='832' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='72459'/>
<parse method='832' uses='72459' stamp='0.726'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='834' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='76356'/>
<call method='834' count='71947' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='72459' stamp='0.726'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75094' not_taken='1262' cnt='76356' prob='0.983472'/>
<bc code='183' bci='17'/>
<method id='835' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1521'/>
<call method='835' count='1254' prof_factor='0.948963' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='1198' stamp='0.731'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='561' not_taken='960' cnt='1521' prob='0.368836'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1521' cnt='1521' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1521' not_taken='0' cnt='1521' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='137' live='133' memory='42088' stamp='0.731'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='836' name='java/util/Arrays' flags='1'/>
<method id='837' holder='836' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1585'/>
<call method='837' count='1254' prof_factor='0.948963' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='1198' stamp='0.731'>
<bc code='184' bci='11'/>
<klass id='841' name='java/lang/Math' flags='17'/>
<method id='842' holder='841' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='12198'/>
<call method='842' count='1073' prof_factor='0.755836' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='843' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='843' count='1073' prof_factor='0.755836' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='313' live='308' memory='75488' stamp='0.732'/>
</parse>
<parse_done nodes='332' live='326' memory='79352' stamp='0.732'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='381' live='372' memory='87600' stamp='0.732'/>
</parse>
<phase_done name='parse' nodes='383' live='236' stamp='0.732'/>
</phase>
<phase name='optimizer' nodes='383' live='236' stamp='0.732'>
<phase name='escapeAnalysis' nodes='383' live='233' stamp='0.732'>
<phase name='connectionGraph' nodes='384' live='234' stamp='0.732'>
<phase_done name='connectionGraph' nodes='384' live='234' stamp='0.732'/>
</phase>
<phase_done name='escapeAnalysis' nodes='384' live='234' stamp='0.732'/>
</phase>
<phase name='ccp' nodes='384' live='234' stamp='0.732'>
<phase_done name='ccp' nodes='384' live='234' stamp='0.732'/>
</phase>
<phase name='idealLoop' nodes='388' live='232' stamp='0.732'>
<phase_done name='idealLoop' nodes='403' live='233' stamp='0.732'/>
</phase>
<phase_done name='optimizer' nodes='463' live='273' stamp='0.732'/>
</phase>
<phase name='matcher' nodes='463' live='273' stamp='0.732'>
<phase_done name='matcher' nodes='273' live='273' stamp='0.733'/>
</phase>
<phase name='regalloc' nodes='335' live='334' stamp='0.733'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='447' live='403' stamp='0.735'/>
</phase>
<phase name='output' nodes='449' live='405' stamp='0.735'>
<phase_done name='output' nodes='468' live='418' stamp='0.748'/>
</phase>
<code_cache total_blobs='282' nmethods='23' adapters='169' free_code_cache='250487424'/>
<task_done success='1' nmsize='888' count='72459' inlined_bytes='96' stamp='0.756'/>
</task>
<task compile_id='13' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='32853' iicount='32853' stamp='0.771'>
<phase name='parse' nodes='3' live='3' stamp='0.771'>
<klass id='832' name='java/lang/CharacterData' flags='1024'/>
<klass id='835' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='832' x='835'/>
<type id='722' name='int'/>
<method id='833' holder='832' name='of' return='832' arguments='722' flags='24' bytes='120' iicount='32853'/>
<klass id='836' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='833' bci='96' reason='unloaded' action='reinterpret' index='45' klass='836'/>
<klass id='837' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='833' bci='100' reason='unloaded' action='reinterpret' index='46' klass='837'/>
<klass id='838' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='833' bci='104' reason='unloaded' action='reinterpret' index='47' klass='838'/>
<klass id='839' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='833' bci='108' reason='unloaded' action='reinterpret' index='48' klass='839'/>
<klass id='840' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='833' bci='112' reason='unloaded' action='reinterpret' index='50' klass='840'/>
<klass id='841' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='833' bci='116' reason='unloaded' action='reinterpret' index='51' klass='841'/>
<parse method='833' uses='32853' stamp='0.771'>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='32853' cnt='32853' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='41' live='39' memory='25784' stamp='0.771'/>
</parse>
<phase_done name='parse' nodes='42' live='23' stamp='0.771'/>
</phase>
<phase name='optimizer' nodes='42' live='23' stamp='0.771'>
<phase name='ccp' nodes='42' live='23' stamp='0.771'>
<phase_done name='ccp' nodes='42' live='23' stamp='0.771'/>
</phase>
<phase name='idealLoop' nodes='42' live='23' stamp='0.771'>
<phase_done name='idealLoop' nodes='42' live='23' stamp='0.771'/>
</phase>
<phase_done name='optimizer' nodes='42' live='23' stamp='0.771'/>
</phase>
<phase name='matcher' nodes='42' live='23' stamp='0.771'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.771'/>
</phase>
<phase name='regalloc' nodes='29' live='29' stamp='0.771'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='32' stamp='0.771'/>
</phase>
<phase name='output' nodes='33' live='32' stamp='0.771'>
<phase_done name='output' nodes='40' live='38' stamp='0.779'/>
</phase>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='832' x='835'/>
<code_cache total_blobs='288' nmethods='29' adapters='169' free_code_cache='250479104'/>
<task_done success='1' nmsize='120' count='32857' stamp='0.780'/>
</task>
<task compile_id='2' method='java/lang/Math min (II)I' bytes='11' count='12238' iicount='12238' stamp='0.780'>
<phase name='parse' nodes='3' live='3' stamp='0.780'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='12238'/>
<parse method='833' uses='12238' stamp='0.780'>
<bc code='163' bci='2'/>
<branch target_bci='9' taken='5491' not_taken='6746' cnt='12237' prob='0.448721'/>
<parse_done nodes='32' live='31' memory='23912' stamp='0.780'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='0.780'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='0.780'>
<phase name='ccp' nodes='33' live='18' stamp='0.780'>
<phase_done name='ccp' nodes='33' live='18' stamp='0.780'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='0.780'>
<phase_done name='idealLoop' nodes='34' live='14' stamp='0.780'/>
</phase>
<phase_done name='optimizer' nodes='34' live='14' stamp='0.780'/>
</phase>
<phase name='matcher' nodes='34' live='14' stamp='0.780'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.780'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.780'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='18' live='18' stamp='0.780'/>
</phase>
<phase name='output' nodes='18' live='18' stamp='0.780'>
<phase_done name='output' nodes='23' live='23' stamp='0.781'/>
</phase>
<code_cache total_blobs='291' nmethods='32' adapters='171' free_code_cache='250487296'/>
<task_done success='1' nmsize='88' count='12259' stamp='0.784'/>
</task>
<task compile_id='60' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='944243' iicount='12' osr_bci='2' stamp='0.862'>
<phase name='parse' nodes='3' live='3' stamp='0.862'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' iicount='12'/>
<parse method='833' uses='12' osr_bci='2' stamp='0.862'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='2' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='2' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='2' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='0' not_taken='0'/>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='837' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='838' holder='837' name='getAndIncrement' return='722' flags='17' bytes='12' compile_id='61' compiler='C1' level='2' iicount='845724'/>
<call method='838' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='call site not reached'/>
<direct_call bci='14'/>
<uncommon_trap bci='14' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='28'/>
<klass id='835' name='java/util/concurrent/CountDownLatch' flags='1'/>
<method id='836' holder='835' name='countDown' return='724' flags='1' bytes='10' iicount='1'/>
<dependency type='unique_concrete_method' ctxk='835' x='836'/>
<call method='836' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='never executed'/>
<direct_call bci='28'/>
<uncommon_trap bci='28' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='196' live='189' memory='51520' stamp='0.864'/>
</parse>
<phase_done name='parse' nodes='198' live='143' stamp='0.864'/>
</phase>
<phase name='optimizer' nodes='198' live='143' stamp='0.864'>
<phase name='idealLoop' nodes='203' live='138' stamp='0.864'>
<loop_tree>
<loop idx='203' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='210' live='136' stamp='0.864'/>
</phase>
<phase name='idealLoop' nodes='210' live='136' stamp='0.864'>
<loop_tree>
<loop idx='203' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='210' live='136' stamp='0.864'/>
</phase>
<phase name='idealLoop' nodes='210' live='136' stamp='0.864'>
<loop_tree>
<loop idx='203' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='210' live='136' stamp='0.864'/>
</phase>
<phase name='ccp' nodes='210' live='136' stamp='0.865'>
<phase_done name='ccp' nodes='210' live='136' stamp='0.865'/>
</phase>
<phase name='idealLoop' nodes='211' live='134' stamp='0.865'>
<loop_tree>
<loop idx='203' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='238' live='128' stamp='0.865'/>
</phase>
<phase name='idealLoop' nodes='238' live='128' stamp='0.865'>
<loop_tree>
<loop idx='203' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='247' live='112' stamp='0.865'/>
</phase>
<phase name='idealLoop' nodes='247' live='112' stamp='0.865'>
<loop_tree>
<loop idx='203' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='256' live='112' stamp='0.865'/>
</phase>
<phase_done name='optimizer' nodes='265' live='112' stamp='0.865'/>
</phase>
<phase name='matcher' nodes='265' live='112' stamp='0.865'>
<phase_done name='matcher' nodes='106' live='106' stamp='0.865'/>
</phase>
<phase name='regalloc' nodes='134' live='133' stamp='0.865'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='149' live='144' stamp='0.865'/>
</phase>
<phase name='output' nodes='149' live='144' stamp='0.865'>
<phase_done name='output' nodes='168' live='158' stamp='0.866'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='835' x='836'/>
<code_cache total_blobs='305' nmethods='46' adapters='171' free_code_cache='250469568'/>
<task_done success='1' nmsize='312' count='12' backedge_count='947131' stamp='0.870'/>
</task>
<task compile_id='78' compile_kind='osr' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='742' backedge_count='54523' iicount='745' osr_bci='69' stamp='1.567'>
<phase name='parse' nodes='3' live='3' stamp='1.567'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='746'/>
<parse method='832' uses='746' osr_bci='69' stamp='1.567'>
<uncommon_trap bci='69' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='69' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='69' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='96' not_taken='42503' cnt='42599' prob='0.00225357'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='1205' not_taken='41298' cnt='42503' prob='0.0283509'/>
<uncommon_trap bci='91' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='91' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='96' not_taken='1291' cnt='1387' prob='0.0692141'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='448' not_taken='843' cnt='1291' prob='0.347018'/>
<uncommon_trap bci='126' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='129'/>
<uncommon_trap bci='129' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='129' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='133'/>
<uncommon_trap bci='133' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='133' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='134'/>
<branch target_bci='146' taken='843' not_taken='0' cnt='843' prob='always'/>
<uncommon_trap bci='134' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='843' not_taken='448' cnt='1291' prob='0.652982'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='96' not_taken='1387' cnt='939' prob='0.0647336'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='86' not_taken='1301' cnt='1387' prob='0.0620043'/>
<parse_done nodes='470' live='452' memory='105152' stamp='1.568'/>
</parse>
<phase_done name='parse' nodes='471' live='357' stamp='1.568'/>
</phase>
<phase name='optimizer' nodes='471' live='357' stamp='1.568'>
<phase name='idealLoop' nodes='484' live='310' stamp='1.568'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='426' stamp='1.569'/>
</phase>
<phase name='idealLoop' nodes='724' live='426' stamp='1.569'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='407' stamp='1.569'/>
</phase>
<phase name='idealLoop' nodes='724' live='407' stamp='1.569'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='407' stamp='1.569'/>
</phase>
<phase name='ccp' nodes='724' live='407' stamp='1.569'>
<phase_done name='ccp' nodes='724' live='407' stamp='1.569'/>
</phase>
<phase name='idealLoop' nodes='729' live='392' stamp='1.570'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='744' live='374' stamp='1.570'/>
</phase>
<phase name='idealLoop' nodes='744' live='374' stamp='1.570'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='763' live='376' stamp='1.570'/>
</phase>
<phase_done name='optimizer' nodes='773' live='361' stamp='1.570'/>
</phase>
<phase name='matcher' nodes='773' live='361' stamp='1.570'>
<phase_done name='matcher' nodes='323' live='323' stamp='1.571'/>
</phase>
<phase name='regalloc' nodes='451' live='448' stamp='1.571'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='666' live='576' stamp='1.573'/>
</phase>
<phase name='output' nodes='666' live='576' stamp='1.573'>
<phase_done name='output' nodes='692' live='591' stamp='1.623'/>
</phase>
<code_cache total_blobs='330' nmethods='63' adapters='179' free_code_cache='250354816'/>
<task_done success='1' nmsize='1336' count='746' backedge_count='54622' stamp='1.638'/>
</task>
<task compile_id='111' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='76800' iicount='76800' stamp='8.030'>
<phase name='parse' nodes='3' live='3' stamp='8.030'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='76800'/>
<parse method='832' uses='76800' stamp='8.030'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75381' not_taken='1419' cnt='76800' prob='0.981523'/>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' compile_id='87' compiler='C1' level='3' iicount='1677'/>
<call method='834' count='1410' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='1419' stamp='8.030'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='701' not_taken='976' cnt='1677' prob='0.418008'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1677' cnt='1677' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1677' not_taken='0' cnt='1677' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='119' live='115' memory='37496' stamp='8.032'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='835' name='java/util/Arrays' flags='1'/>
<method id='836' holder='835' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1759'/>
<call method='836' count='1410' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='1419' stamp='8.032'>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='13292'/>
<call method='840' count='1247' prof_factor='0.806708' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='841' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15488'/>
<call method='841' count='1247' prof_factor='0.806708' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='295' live='290' memory='72264' stamp='8.032'/>
</parse>
<parse_done nodes='314' live='308' memory='75344' stamp='8.032'/>
</parse>
<phase_done name='parse' nodes='316' live='198' stamp='8.032'/>
</phase>
<phase name='optimizer' nodes='316' live='198' stamp='8.032'>
<phase name='escapeAnalysis' nodes='316' live='196' stamp='8.033'>
<phase name='connectionGraph' nodes='317' live='197' stamp='8.033'>
<phase_done name='connectionGraph' nodes='317' live='197' stamp='8.033'/>
</phase>
<phase_done name='escapeAnalysis' nodes='317' live='197' stamp='8.033'/>
</phase>
<phase name='ccp' nodes='317' live='197' stamp='8.033'>
<phase_done name='ccp' nodes='317' live='197' stamp='8.033'/>
</phase>
<phase name='idealLoop' nodes='321' live='195' stamp='8.033'>
<phase_done name='idealLoop' nodes='324' live='195' stamp='8.033'/>
</phase>
<phase_done name='optimizer' nodes='383' live='234' stamp='8.033'/>
</phase>
<phase name='matcher' nodes='383' live='234' stamp='8.033'>
<phase_done name='matcher' nodes='235' live='235' stamp='8.033'/>
</phase>
<phase name='regalloc' nodes='291' live='290' stamp='8.034'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='375' live='346' stamp='8.035'/>
</phase>
<phase name='output' nodes='377' live='348' stamp='8.035'>
<phase_done name='output' nodes='395' live='360' stamp='8.036'/>
</phase>
<code_cache total_blobs='359' nmethods='91' adapters='180' free_code_cache='250298432'/>
<task_done success='1' nmsize='728' count='76800' inlined_bytes='69' stamp='8.041'/>
</task>
<task compile_id='134' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger getAndIncrement ()I' bytes='40' count='316593' backedge_count='432157' iicount='316593' stamp='30.064'>
<phase name='parse' nodes='3' live='3' stamp='30.064'>
<type id='722' name='int'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='40' compile_id='127' compiler='C1' level='2' iicount='317079'/>
<parse method='833' uses='317079' stamp='30.070'>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='836' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1225'/>
<call method='836' count='589317' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='15'/>
<bc code='182' bci='31'/>
<type id='716' name='boolean'/>
<method id='837' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='49' compile_kind='c2n' level='0' iicount='791'/>
<call method='837' count='591164' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='434861' not_taken='317202' cnt='752063' prob='0.578224'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<call method='836' count='589317' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<call method='837' count='591164' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='434861' not_taken='317202' cnt='752063' prob='0.578224'/>
<parse_done nodes='153' live='150' memory='44184' stamp='30.070'/>
</parse>
<phase_done name='parse' nodes='154' live='106' stamp='30.070'/>
</phase>
<phase name='optimizer' nodes='154' live='106' stamp='30.070'>
<phase name='idealLoop' nodes='154' live='101' stamp='30.070'>
<loop_tree>
<loop idx='154' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='155' live='100' stamp='30.070'/>
</phase>
<phase name='idealLoop' nodes='155' live='100' stamp='30.070'>
<loop_tree>
<loop idx='154' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='155' live='100' stamp='30.070'/>
</phase>
<phase name='idealLoop' nodes='155' live='100' stamp='30.070'>
<loop_tree>
<loop idx='154' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='155' live='100' stamp='30.070'/>
</phase>
<phase name='ccp' nodes='155' live='100' stamp='30.070'>
<phase_done name='ccp' nodes='155' live='100' stamp='30.070'/>
</phase>
<phase name='idealLoop' nodes='155' live='100' stamp='30.070'>
<loop_tree>
<loop idx='154' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='155' live='84' stamp='30.070'/>
</phase>
<phase name='idealLoop' nodes='155' live='84' stamp='30.070'>
<loop_tree>
<loop idx='154' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='155' live='84' stamp='30.070'/>
</phase>
<phase_done name='optimizer' nodes='155' live='84' stamp='30.070'/>
</phase>
<phase name='matcher' nodes='155' live='84' stamp='30.070'>
<phase_done name='matcher' nodes='87' live='87' stamp='30.070'/>
</phase>
<phase name='regalloc' nodes='97' live='97' stamp='30.070'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='104' live='104' stamp='30.071'/>
</phase>
<phase name='output' nodes='104' live='104' stamp='30.071'>
<phase_done name='output' nodes='114' live='112' stamp='30.079'/>
</phase>
<code_cache total_blobs='374' nmethods='106' adapters='180' free_code_cache='250255680'/>
<task_done success='1' nmsize='184' count='460904' backedge_count='654646' stamp='30.081'/>
</task>
<task compile_id='137' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread run ()V' bytes='32' count='24' backedge_count='907782' iicount='24' decompiles='2' unstable_if_traps='24' overflow_recompiles='1' osr_bci='2' stamp='30.121'>
<phase name='parse' nodes='3' live='3' stamp='30.121'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' compile_id='136' compiler='C1' level='3' iicount='24'/>
<parse method='833' uses='24' osr_bci='2' stamp='30.121'>
<observe trap='unstable_if' count='24' total='24'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='2' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='2' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='2' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='24' not_taken='716817' cnt='716841' prob='3.34802e-005'/>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='835' name='com/fcy/Java/Concurrent/CustomerLockDemo/FcyAtomicInteger' flags='1'/>
<method id='838' holder='835' name='getAndIncrement' return='722' flags='17' bytes='40' compile_id='134' compiler='C2' level='4' iicount='460904'/>
<call method='838' count='681845' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='681845' stamp='30.121'>
<uncommon_trap bci='14' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='840' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1225'/>
<call method='840' count='589488' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<type id='716' name='boolean'/>
<method id='841' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='49' compile_kind='c2n' level='0' iicount='791'/>
<call method='841' count='591336' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='481228' not_taken='350911' cnt='832139' prob='0.578302'/>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<call method='840' count='589488' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='31'/>
<call method='841' count='591336' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='34'/>
<branch target_bci='9' taken='481228' not_taken='350911' cnt='832139' prob='0.578302'/>
<parse_done nodes='281' live='273' memory='68512' stamp='30.122'/>
</parse>
<bc code='182' bci='28'/>
<klass id='836' name='java/util/concurrent/CountDownLatch' flags='1'/>
<method id='837' holder='836' name='countDown' return='724' flags='1' bytes='10' iicount='60'/>
<dependency type='unique_concrete_method' ctxk='836' x='837'/>
<call method='837' count='24' prof_factor='1' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<direct_call bci='28'/>
<uncommon_trap bci='28' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='318' live='308' memory='74048' stamp='30.122'/>
</parse>
<phase_done name='parse' nodes='320' live='226' stamp='30.122'/>
</phase>
<phase name='optimizer' nodes='320' live='226' stamp='30.122'>
<phase name='idealLoop' nodes='325' live='213' stamp='30.122'>
<loop_tree>
<loop idx='325' >
<loop idx='326' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='332' live='209' stamp='30.122'/>
</phase>
<phase name='idealLoop' nodes='332' live='209' stamp='30.122'>
<loop_tree>
<loop idx='325' >
<loop idx='326' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='332' live='209' stamp='30.122'/>
</phase>
<phase name='idealLoop' nodes='332' live='209' stamp='30.122'>
<loop_tree>
<loop idx='325' >
<loop idx='326' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='332' live='209' stamp='30.122'/>
</phase>
<phase name='ccp' nodes='332' live='209' stamp='30.122'>
<phase_done name='ccp' nodes='332' live='209' stamp='30.122'/>
</phase>
<phase name='idealLoop' nodes='333' live='207' stamp='30.122'>
<loop_tree>
<loop idx='325' >
<loop idx='326' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='360' live='201' stamp='30.122'/>
</phase>
<phase name='idealLoop' nodes='360' live='201' stamp='30.122'>
<loop_tree>
<loop idx='325' >
<loop idx='326' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='369' live='169' stamp='30.122'/>
</phase>
<phase name='idealLoop' nodes='369' live='169' stamp='30.122'>
<loop_tree>
<loop idx='325' >
<loop idx='326' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='378' live='169' stamp='30.122'/>
</phase>
<phase_done name='optimizer' nodes='387' live='169' stamp='30.123'/>
</phase>
<phase name='matcher' nodes='387' live='169' stamp='30.123'>
<phase_done name='matcher' nodes='168' live='168' stamp='30.123'/>
</phase>
<phase name='regalloc' nodes='199' live='198' stamp='30.123'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='211' live='209' stamp='30.123'/>
</phase>
<phase name='output' nodes='213' live='211' stamp='30.123'>
<phase_done name='output' nodes='234' live='225' stamp='30.123'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='836' x='837'/>
<code_cache total_blobs='376' nmethods='108' adapters='180' free_code_cache='250251840'/>
<task_done success='1' nmsize='360' count='24' backedge_count='970802' inlined_bytes='40' stamp='30.127'/>
</task>
</compilation_log>
<hotspot_log_done stamp='41.719'/>
</hotspot_log>
