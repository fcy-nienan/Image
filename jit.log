<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='17108' time_ms='1571678515258'>
<vm_version>
<name>
Java HotSpot(TM) 64-Bit Server VM
</name>
<release>
25.112-b15
</release>
<info>
Java HotSpot(TM) 64-Bit Server VM (25.112-b15) for windows-amd64 JRE (1.8.0_112-b15), built on Sep 22 2016 21:31:56 by &quot;java_re&quot; with MS VC++ 10.0 (VS2010)
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit.log -javaagent:D:\Code\IDE\IntelliJ IDEA 2019.2\lib\idea_rt.jar=60777:D:\Code\IDE\IntelliJ IDEA 2019.2\bin -Dfile.encoding=UTF-8 
</args>
<command>
com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.112-b15
java.vm.name=Java HotSpot(TM) 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=D:\Code\Language\java\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext
java.endorsed.dirs=D:\Code\Language\java\jre\lib\endorsed
sun.boot.library.path=D:\Code\Language\java\jre\bin
java.library.path=D:\Code\Language\java\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Code\IDE\IntelliJ IDEA 2019.2\jbr\\bin;D:\Code\IDE\IntelliJ IDEA 2019.2\jbr\\bin\server;D:\Code\Language\python\Scripts\;D:\Code\Language\python\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;D:\Code\CodeTool\NetWork\Git\cmd;D:\Code\Language\nodejs\;C:\Users\80771\AppData\Local\Microsoft\WindowsApps;D:\Code\Language\java\bin;C:\Users\80771\AppData\Roaming\npm;D:\Code\Build\apache-maven-3.6.1\bin;D:\Code\Build\gradle-5.6\bin;D:\Code\MiddleWare\mysql-5.7.27-winx64\bin;D:\Code\MiddleWare\hadoop\bin;D:\Code\MiddleWare\hadoop\sbin;C:\Users\80771\AppData\Local\Microsoft\WindowsApps;D:\Code\Language\scala-2.13.0\bin;;.
java.home=D:\Code\Language\java\jre
java.class.path=D:\Code\Language\java\jre\lib\charsets.jar;D:\Code\Language\java\jre\lib\deploy.jar;D:\Code\Language\java\jre\lib\ext\access-bridge-64.jar;D:\Code\Language\java\jre\lib\ext\cldrdata.jar;D:\Code\Language\java\jre\lib\ext\dnsns.jar;D:\Code\Language\java\jre\lib\ext\jaccess.jar;D:\Code\Language\java\jre\lib\ext\jfxrt.jar;D:\Code\Language\java\jre\lib\ext\localedata.jar;D:\Code\Language\java\jre\lib\ext\nashorn.jar;D:\Code\Language\java\jre\lib\ext\sunec.jar;D:\Code\Language\java\jre\lib\ext\sunjce_provider.jar;D:\Code\Language\java\jre\lib\ext\sunmscapi.jar;D:\Code\Language\java\jre\lib\ext\sunpkcs11.jar;D:\Code\Language\java\jre\lib\ext\zipfs.jar;D:\Code\Language\java\jre\lib\javaws.jar;D:\Code\Language\java\jre\lib\jce.jar;D:\Code\Language\java\jre\lib\jfr.jar;D:\Code\Language\java\jre\lib\jfxswt.jar;D:\Code\Language\java\jre\lib\jsse.jar;D:\Code\Language\java\jre\lib\management-agent.jar;D:\Code\Language\java\jre\lib\plugin.jar;D:\Code\Language\java\jre\lib\resources.jar;D:\Code\Language\java\jre\lib\rt.jar;D:\Code\WorkSpace\java\NewWorkSpace\Image\target\classes;D:\Code\Packages\maven\commons-logging\commons-logging\1.0.4\commons-logging-1.0.4.jar;D:\Code\Packages\maven\org\apache\pdfbox\pdfbox\1.8.8\pdfbox-1.8.8.jar;D:\Code\Packages\maven\org\apache\pdfbox\fontbox\1.8.8\fontbox-1.8.8.jar;D:\Code\Packages\maven\org\apache\pdfbox\jempbox\1.8.8\jempbox-1.8.8.jar;D:\Code\Packages\maven\com\itextpdf\itextpdf\5.5.9\itextpdf-5.5.9.jar;D:\Code\Packages\maven\com\itextpdf\itext-asian\5.2.0\itext-asian-5.2.0.jar;D:\Code\Packages\maven\com\itextpdf\tool\xmlworker\5.5.6\xmlworker-5.5.6.jar;D:\Code\Packages\maven\org\projectlombok\lombok\1.14.4\lombok-1.14.4.jar;D:\Code\Packages\maven\mysql\mysql-connector-java\5.1.45\mysql-connector-java-5.1.45.jar;D:\Code\Packages\maven\com\fasterxml\jackson\core\jackson-core\2.9.5\jackson-core-2.9.5.jar;D:\Code\Packages\maven\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;D:\Code\Packages\mave
sun.boot.class.path=D:\Code\Language\java\jre\lib\resources.jar;D:\Code\Language\java\jre\lib\rt.jar;D:\Code\Language\java\jre\lib\sunrsasign.jar;D:\Code\Language\java\jre\lib\jsse.jar;D:\Code\Language\java\jre\lib\jce.jar;D:\Code\Language\java\jre\lib\charsets.jar;D:\Code\Language\java\jre\lib\jfr.jar;D:\Code\Language\java\jre\classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
file.encoding=UTF-8
sun.java.command=com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='4332'/>
<thread_logfile thread='4332' filename='D:\dir\tmp\system\\hs_c4332_pid17108.log'/>
<writer thread='25548'/>
<thread_logfile thread='25548' filename='D:\dir\tmp\system\\hs_c25548_pid17108.log'/>
<writer thread='6664'/>
Loaded disassembler from D:\Code\Language\java\jre\bin\server\hsdis-amd64.dll
Decoding compiled method 0x00000000031ff610:
Code:
<writer thread='26572'/>
<thread_logfile thread='26572' filename='D:\dir\tmp\system\\hs_c26572_pid17108.log'/>
<writer thread='23880'/>
<thread_logfile thread='23880' filename='D:\dir\tmp\system\\hs_c23880_pid17108.log'/>
<writer thread='6664'/>
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
  # {method} {0x000000001c1696c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  # parm1:    r8        = int
  # parm2:    r9:r9     = &apos;java/lang/Object&apos;
  # parm3:    rdi       = int
  # parm4:    rsi       = int
  #           [sp+0x90]  (sp of caller)
  0x00000000031ff780: mov    0x8(%rdx),%r10d
  0x00000000031ff784: shl    $0x3,%r10
  0x00000000031ff788: cmp    %r10,%rax
  0x00000000031ff78b: je     0x00000000031ff798
  0x00000000031ff791: jmpq   0x00000000031d5f60  ;   {runtime_call}
  0x00000000031ff796: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000031ff798: mov    %eax,-0x6000(%rsp)
  0x00000000031ff79f: push   %rbp
  0x00000000031ff7a0: mov    %rsp,%rbp
  0x00000000031ff7a3: sub    $0x80,%rsp
  0x00000000031ff7aa: mov    %rsi,0x30(%rsp)
  0x00000000031ff7af: mov    %rdi,0x28(%rsp)
  0x00000000031ff7b4: mov    %r9,0x48(%rsp)
  0x00000000031ff7b9: cmp    $0x0,%r9
  0x00000000031ff7bd: lea    0x48(%rsp),%rax
  0x00000000031ff7c2: cmove  0x48(%rsp),%rax
  0x00000000031ff7c8: mov    %rax,0x20(%rsp)
  0x00000000031ff7cd: mov    %r8,%r9
  0x00000000031ff7d0: mov    %rdx,0x38(%rsp)
  0x00000000031ff7d5: cmp    $0x0,%rdx
  0x00000000031ff7d9: lea    0x38(%rsp),%r8
  0x00000000031ff7de: cmove  0x38(%rsp),%r8
  0x00000000031ff7e4: movabs $0x76b780c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000031ff7ee: mov    %r14,0x68(%rsp)
  0x00000000031ff7f3: lea    0x68(%rsp),%r14
  0x00000000031ff7f8: mov    %r14,%rdx          ; OopMap{[72]=Oop [56]=Oop [104]=Oop off=123}
  0x00000000031ff7fb: movabs $0x31ff7fb,%r10    ;   {section_word}
  0x00000000031ff805: mov    %r10,0x1e0(%r15)
  0x00000000031ff80c: mov    %rsp,0x1d8(%r15)
  0x00000000031ff813: cmpb   $0x0,0x52cebf67(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000031ff81a: je     0x00000000031ff862
  0x00000000031ff820: push   %rdx
  0x00000000031ff821: push   %r8
  0x00000000031ff823: push   %r9
  0x00000000031ff825: movabs $0x1c1696b8,%rdx   ;   {metadata({method} {0x000000001c1696c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000000031ff82f: mov    %r15,%rcx
  0x00000000031ff832: sub    $0x20,%rsp
  0x00000000031ff836: test   $0xf,%esp
  0x00000000031ff83c: je     0x00000000031ff854
  0x00000000031ff842: sub    $0x8,%rsp
  0x00000000031ff846: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000031ff84b: add    $0x8,%rsp
  0x00000000031ff84f: jmpq   0x00000000031ff859
  0x00000000031ff854: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000031ff859: add    $0x20,%rsp
  0x00000000031ff85d: pop    %r9
  0x00000000031ff85f: pop    %r8
  0x00000000031ff861: pop    %rdx
  0x00000000031ff862: lea    0x1f8(%r15),%rcx
  0x00000000031ff869: movl   $0x4,0x270(%r15)
  0x00000000031ff874: callq  0x00000000556c097a  ;   {runtime_call}
  0x00000000031ff879: vzeroupper 
  0x00000000031ff87c: movl   $0x5,0x270(%r15)
  0x00000000031ff887: mov    %r15d,%ecx
  0x00000000031ff88a: shr    $0x4,%ecx
  0x00000000031ff88d: and    $0xffc,%ecx
  0x00000000031ff893: movabs $0x2900000,%r10    ;   {external_word}
  0x00000000031ff89d: mov    %ecx,(%r10,%rcx,1)
  0x00000000031ff8a1: cmpl   $0x0,0x52cecaa5(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x00000000031ff8ab: jne    0x00000000031ff8bf
  0x00000000031ff8b1: cmpl   $0x0,0x30(%r15)
  0x00000000031ff8b9: je     0x00000000031ff8d8
  0x00000000031ff8bf: mov    %r15,%rcx
  0x00000000031ff8c2: mov    %rsp,%r12
  0x00000000031ff8c5: sub    $0x20,%rsp
  0x00000000031ff8c9: and    $0xfffffffffffffff0,%rsp
  0x00000000031ff8cd: callq  0x00000000559236e0  ;   {runtime_call}
  0x00000000031ff8d2: mov    %r12,%rsp
  0x00000000031ff8d5: xor    %r12,%r12
  0x00000000031ff8d8: movl   $0x8,0x270(%r15)
  0x00000000031ff8e3: cmpl   $0x1,0x29c(%r15)
  0x00000000031ff8ee: je     0x00000000031ff97e
  0x00000000031ff8f4: cmpb   $0x0,0x52cebe86(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000031ff8fb: je     0x00000000031ff939
  0x00000000031ff901: movabs $0x1c1696b8,%rdx   ;   {metadata({method} {0x000000001c1696c0} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00000000031ff90b: mov    %r15,%rcx
  0x00000000031ff90e: sub    $0x20,%rsp
  0x00000000031ff912: test   $0xf,%esp
  0x00000000031ff918: je     0x00000000031ff930
  0x00000000031ff91e: sub    $0x8,%rsp
  0x00000000031ff922: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000031ff927: add    $0x8,%rsp
  0x00000000031ff92b: jmpq   0x00000000031ff935
  0x00000000031ff930: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000031ff935: add    $0x20,%rsp
  0x00000000031ff939: movabs $0x0,%r10
  0x00000000031ff943: mov    %r10,0x1d8(%r15)
  0x00000000031ff94a: movabs $0x0,%r10
  0x00000000031ff954: mov    %r10,0x1e0(%r15)
  0x00000000031ff95b: mov    0x38(%r15),%rcx
  0x00000000031ff95f: movl   $0x0,0x100(%rcx)
  0x00000000031ff969: leaveq 
  0x00000000031ff96a: cmpq   $0x0,0x8(%r15)
  0x00000000031ff972: jne    0x00000000031ff979
  0x00000000031ff978: retq   
  0x00000000031ff979: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000031ff97e: mov    %rsp,%r12
  0x00000000031ff981: sub    $0x20,%rsp
  0x00000000031ff985: and    $0xfffffffffffffff0,%rsp
  0x00000000031ff989: callq  0x000000005590c5a0  ;   {runtime_call}
  0x00000000031ff98e: mov    %r12,%rsp
  0x00000000031ff991: xor    %r12,%r12
  0x00000000031ff994: jmpq   0x00000000031ff8f4
  0x00000000031ff999: hlt    
  0x00000000031ff99a: hlt    
  0x00000000031ff99b: hlt    
  0x00000000031ff99c: hlt    
  0x00000000031ff99d: hlt    
  0x00000000031ff99e: hlt    
  0x00000000031ff99f: hlt    
<nmethod compile_id='1' compile_kind='c2n' level='0' entry='0x00000000031ff780' size='912' address='0x00000000031ff610' relocation_offset='288' consts_offset='912' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='15493' iicount='15493' stamp='0.452'/>
<task_queued compile_id='2' method='java/lang/Math min (II)I' bytes='11' count='11776' iicount='11776' stamp='0.452' comment='tiered' hot_count='11776'/>
<task_queued compile_id='3' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='5394' backedge_count='117760' iicount='5394' osr_bci='24' stamp='0.452' comment='tiered' hot_count='117760'/>
<task_queued compile_id='4' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='1492' backedge_count='47928' iicount='1492' stamp='0.453' comment='tiered' hot_count='1492'/>
<task_queued compile_id='5' method='sun/misc/ASCIICaseInsensitiveComparator toLower (I)I' bytes='16' count='28160' iicount='28160' stamp='0.453' comment='tiered' hot_count='28160'/>
<task_queued compile_id='6' method='sun/misc/ASCIICaseInsensitiveComparator isUpper (I)Z' bytes='18' count='28160' iicount='28160' stamp='0.453' comment='tiered' hot_count='28160'/>
<task_queued compile_id='7' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='3840' iicount='3840' level='3' stamp='0.453' comment='tiered' hot_count='3840'/>
<task_queued compile_id='8' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='22400' iicount='22400' stamp='0.453' comment='tiered' hot_count='22400'/>
<task_queued compile_id='9' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='22912' iicount='22912' stamp='0.453' comment='tiered' hot_count='22912'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='26124'/>
<task_queued compile_id='10' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='384' backedge_count='39' iicount='384' level='3' stamp='0.454' comment='tiered' hot_count='384'/>
<writer thread='23880'/>
Decoding compiled method 0x0000000003293ed0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1c4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00000000032940a0: mov    0x8(%rdx),%r10d
  0x00000000032940a4: shl    $0x3,%r10
  0x00000000032940a8: cmp    %rax,%r10
  0x00000000032940ab: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032940b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032940bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032940c0: mov    %eax,-0x6000(%rsp)
  0x00000000032940c7: push   %rbp
  0x00000000032940c8: sub    $0xe0,%rsp
  0x00000000032940cf: mov    %rdx,0xb8(%rsp)
  0x00000000032940d7: movabs $0x1c341308,%rsi   ;   {metadata(method data for {method} {0x000000001c1c4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032940e1: mov    0xdc(%rsi),%edi
  0x00000000032940e7: add    $0x8,%edi
  0x00000000032940ea: mov    %edi,0xdc(%rsi)
  0x00000000032940f0: movabs $0x1c1c4548,%rsi   ;   {metadata({method} {0x000000001c1c4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032940fa: and    $0x1ff8,%edi
  0x0000000003294100: cmp    $0x0,%edi
  0x0000000003294103: je     0x0000000003294643  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000003294109: cmp    $0x0,%r8
  0x000000000329410d: movabs $0x1c341308,%rsi   ;   {metadata(method data for {method} {0x000000001c1c4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003294117: movabs $0x108,%rdi
  0x0000000003294121: jne    0x0000000003294131
  0x0000000003294127: movabs $0x118,%rdi
  0x0000000003294131: mov    (%rsi,%rdi,1),%rbx
  0x0000000003294135: lea    0x1(%rbx),%rbx
  0x0000000003294139: mov    %rbx,(%rsi,%rdi,1)
  0x000000000329413d: je     0x0000000003294613  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x0000000003294143: cmp    (%r8),%rax         ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000000329465a
  0x0000000003294146: mov    %r8,%rsi
  0x0000000003294149: movabs $0x1c341308,%rdi   ;   {metadata(method data for {method} {0x000000001c1c4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003294153: mov    0x8(%rsi),%esi
  0x0000000003294156: shl    $0x3,%rsi
  0x000000000329415a: cmp    0x140(%rdi),%rsi
  0x0000000003294161: jne    0x0000000003294170
  0x0000000003294163: addq   $0x1,0x148(%rdi)
  0x000000000329416b: jmpq   0x00000000032941d6
  0x0000000003294170: cmp    0x150(%rdi),%rsi
  0x0000000003294177: jne    0x0000000003294186
  0x0000000003294179: addq   $0x1,0x158(%rdi)
  0x0000000003294181: jmpq   0x00000000032941d6
  0x0000000003294186: cmpq   $0x0,0x140(%rdi)
  0x0000000003294191: jne    0x00000000032941aa
  0x0000000003294193: mov    %rsi,0x140(%rdi)
  0x000000000329419a: movq   $0x1,0x148(%rdi)
  0x00000000032941a5: jmpq   0x00000000032941d6
  0x00000000032941aa: cmpq   $0x0,0x150(%rdi)
  0x00000000032941b5: jne    0x00000000032941ce
  0x00000000032941b7: mov    %rsi,0x150(%rdi)
  0x00000000032941be: movq   $0x1,0x158(%rdi)
  0x00000000032941c9: jmpq   0x00000000032941d6
  0x00000000032941ce: addq   $0x1,0x138(%rdi)
  0x00000000032941d6: movabs $0x1c280ed0,%rsi   ;   {metadata(method data for {method} {0x000000001c153c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032941e0: mov    0xdc(%rsi),%edi
  0x00000000032941e6: add    $0x8,%edi
  0x00000000032941e9: mov    %edi,0xdc(%rsi)
  0x00000000032941ef: movabs $0x1c153c18,%rsi   ;   {metadata({method} {0x000000001c153c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032941f9: and    $0x7ffff8,%edi
  0x00000000032941ff: cmp    $0x0,%edi
  0x0000000003294202: je     0x000000000329465f
  0x0000000003294208: mov    0xc(%r8),%esi
  0x000000000329420c: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000003294210: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x0000000003294676
  0x0000000003294213: mov    %esi,0xac(%rsp)
  0x000000000329421a: mov    0xc(%rdx),%edi     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x000000000329421d: add    %esi,%edi
  0x000000000329421f: mov    %rdx,%rbx
  0x0000000003294222: movabs $0x1c341308,%rax   ;   {metadata(method data for {method} {0x000000001c1c4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000329422c: addq   $0x1,0x168(%rax)
  0x0000000003294234: movabs $0x1c33f340,%rbx   ;   {metadata(method data for {method} {0x000000001c1c3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x000000000329423e: mov    0xdc(%rbx),%eax
  0x0000000003294244: add    $0x8,%eax
  0x0000000003294247: mov    %eax,0xdc(%rbx)
  0x000000000329424d: movabs $0x1c1c3bf0,%rbx   ;   {metadata({method} {0x000000001c1c3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003294257: and    $0x7ffff8,%eax
  0x000000000329425d: cmp    $0x0,%eax
  0x0000000003294260: je     0x000000000329467b
  0x0000000003294266: mov    0x10(%rdx),%ebx
  0x0000000003294269: shl    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000000329426d: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x0000000003294692
  0x0000000003294270: mov    %rdi,%rcx
  0x0000000003294273: sub    %eax,%ecx
  0x0000000003294275: cmp    $0x0,%ecx
  0x0000000003294278: movabs $0x1c33f340,%rcx   ;   {metadata(method data for {method} {0x000000001c1c3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003294282: movabs $0x108,%r9
  0x000000000329428c: jle    0x000000000329429c
  0x0000000003294292: movabs $0x118,%r9
  0x000000000329429c: mov    (%rcx,%r9,1),%r11
  0x00000000032942a0: lea    0x1(%r11),%r11
  0x00000000032942a4: mov    %r11,(%rcx,%r9,1)
  0x00000000032942a8: jg     0x00000000032942bb  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000032942ae: mov    %r8,0xc0(%rsp)
  0x00000000032942b6: jmpq   0x000000000329452d  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000032942bb: mov    %eax,0xa8(%rsp)
  0x00000000032942c2: mov    %rbx,0xb0(%rsp)
  0x00000000032942ca: mov    %r8,0xc0(%rsp)
  0x00000000032942d2: mov    %rdx,%rcx
  0x00000000032942d5: movabs $0x1c33f340,%r9    ;   {metadata(method data for {method} {0x000000001c1c3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032942df: addq   $0x1,0x128(%r9)
  0x00000000032942e7: mov    %rdi,%r8
  0x00000000032942ea: mov    %rdx,%rdi
  0x00000000032942ed: mov    %rdi,%rdx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000032942f0: nop
  0x00000000032942f1: nop
  0x00000000032942f2: nop
  0x00000000032942f3: nop
  0x00000000032942f4: nop
  0x00000000032942f5: nop
  0x00000000032942f6: nop
  0x00000000032942f7: callq  0x00000000031d61a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x00000000032942fc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000032942ff: movabs $0x1c33f340,%rbx   ;   {metadata(method data for {method} {0x000000001c1c3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003294309: addq   $0x1,0x138(%rbx)
  0x0000000003294311: movabs $0x1c37c918,%rbx   ;   {metadata(method data for {method} {0x000000001c267060} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x000000000329431b: mov    0xdc(%rbx),%edx
  0x0000000003294321: add    $0x8,%edx
  0x0000000003294324: mov    %edx,0xdc(%rbx)
  0x000000000329432a: movabs $0x1c267058,%rbx   ;   {metadata({method} {0x000000001c267060} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003294334: and    $0x7ffff8,%edx
  0x000000000329433a: cmp    $0x0,%edx
  0x000000000329433d: je     0x0000000003294697
  0x0000000003294343: mov    %r8,%rbx
  0x0000000003294346: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000003294350: movslq %ebx,%rbx
  0x0000000003294353: mov    %rbx,%rdi
  0x0000000003294356: cmp    $0xffffff,%rbx
  0x000000000329435d: ja     0x00000000032946ae
  0x0000000003294363: movabs $0x17,%rsi
  0x000000000329436d: lea    (%rsi,%rbx,2),%rsi
  0x0000000003294371: and    $0xfffffffffffffff8,%rsi
  0x0000000003294375: mov    0x60(%r15),%rax
  0x0000000003294379: lea    (%rax,%rsi,1),%rsi
  0x000000000329437d: cmp    0x70(%r15),%rsi
  0x0000000003294381: ja     0x00000000032946ae
  0x0000000003294387: mov    %rsi,0x60(%r15)
  0x000000000329438b: sub    %rax,%rsi
  0x000000000329438e: movq   $0x1,(%rax)
  0x0000000003294395: mov    %rdx,%rcx
  0x0000000003294398: shr    $0x3,%rcx
  0x000000000329439c: mov    %ecx,0x8(%rax)
  0x000000000329439f: mov    %ebx,0xc(%rax)
  0x00000000032943a2: sub    $0x10,%rsi
  0x00000000032943a6: je     0x00000000032943bd
  0x00000000032943ac: xor    %rbx,%rbx
  0x00000000032943af: shr    $0x3,%rsi
  0x00000000032943b3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032943b8: dec    %rsi
  0x00000000032943bb: jne    0x00000000032943b3  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000032943bd: movabs $0x1c37c918,%rdx   ;   {metadata(method data for {method} {0x000000001c267060} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032943c7: addq   $0x1,0x108(%rdx)
  0x00000000032943cf: movabs $0x1c33bf60,%rdx   ;   {metadata(method data for {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032943d9: mov    0xdc(%rdx),%r9d
  0x00000000032943e0: add    $0x8,%r9d
  0x00000000032943e4: mov    %r9d,0xdc(%rdx)
  0x00000000032943eb: movabs $0x1c242b00,%rdx   ;   {metadata({method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032943f5: and    $0x7ffff8,%r9d
  0x00000000032943fc: cmp    $0x0,%r9d
  0x0000000003294400: je     0x00000000032946b8
  0x0000000003294406: mov    0xa8(%rsp),%edx
  0x000000000329440d: cmp    %r8d,%edx
  0x0000000003294410: movabs $0x1c33bf60,%r9    ;   {metadata(method data for {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x000000000329441a: movabs $0x108,%rdi
  0x0000000003294424: jg     0x0000000003294434
  0x000000000329442a: movabs $0x118,%rdi
  0x0000000003294434: mov    (%r9,%rdi,1),%rsi
  0x0000000003294438: lea    0x1(%rsi),%rsi
  0x000000000329443c: mov    %rsi,(%r9,%rdi,1)
  0x0000000003294440: jg     0x000000000329445f  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000003294446: movabs $0x1c33bf60,%r8    ;   {metadata(method data for {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x0000000003294450: incl   0x128(%r8)
  0x0000000003294457: mov    %rdx,%rsi
  0x000000000329445a: jmpq   0x0000000003294462  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000000329445f: mov    %r8,%rsi           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000003294462: mov    0xb0(%rsp),%rbx
  0x000000000329446a: movabs $0x1c37c918,%rdx   ;   {metadata(method data for {method} {0x000000001c267060} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x0000000003294474: addq   $0x1,0x118(%rdx)
  0x000000000329447c: mov    %rbx,%rdx
  0x000000000329447f: mov    $0x0,%r8d
  0x0000000003294485: mov    %rax,%r9
  0x0000000003294488: mov    $0x0,%edi
  0x000000000329448d: mov    %rax,0xc8(%rsp)
  0x0000000003294495: lea    (%r8,%rsi,1),%rcx
  0x0000000003294499: cmp    0xc(%rdx),%ecx
  0x000000000329449c: ja     0x00000000032946cf
  0x00000000032944a2: lea    (%rdi,%rsi,1),%rcx
  0x00000000032944a6: cmp    0xc(%r9),%ecx
  0x00000000032944aa: ja     0x00000000032946cf
  0x00000000032944b0: test   %esi,%esi
  0x00000000032944b2: jl     0x00000000032946cf
  0x00000000032944b8: je     0x00000000032944fc
  0x00000000032944be: movslq %r8d,%r8
  0x00000000032944c1: movslq %edi,%rdi
  0x00000000032944c4: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000032944c9: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000032944ce: mov    %rsi,%r8
  0x00000000032944d1: sub    $0x20,%rsp
  0x00000000032944d5: test   $0xf,%esp
  0x00000000032944db: je     0x00000000032944f3
  0x00000000032944e1: sub    $0x8,%rsp
  0x00000000032944e5: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000032944ea: add    $0x8,%rsp
  0x00000000032944ee: jmpq   0x00000000032944f8
  0x00000000032944f3: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000032944f8: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000000032944fc: mov    0xc8(%rsp),%rax
  0x0000000003294504: mov    0xb8(%rsp),%rdx
  0x000000000329450c: mov    %rax,%r10
  0x000000000329450f: shr    $0x3,%r10
  0x0000000003294513: mov    %r10d,0x10(%rdx)
  0x0000000003294517: mov    %rdx,%r8
  0x000000000329451a: shr    $0x9,%r8
  0x000000000329451e: movabs $0xef3d000,%r9
  0x0000000003294528: movb   $0x0,(%r8,%r9,1)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000000329452d: mov    0xac(%rsp),%esi
  0x0000000003294534: mov    0xc0(%rsp),%rbx
  0x000000000329453c: mov    0x10(%rdx),%edi
  0x000000000329453f: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x0000000003294543: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000003294546: mov    %rbx,%r8
  0x0000000003294549: movabs $0x1c341308,%r9    ;   {metadata(method data for {method} {0x000000001c1c4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003294553: mov    0x8(%r8),%r8d
  0x0000000003294557: shl    $0x3,%r8
  0x000000000329455b: cmp    0x180(%r9),%r8
  0x0000000003294562: jne    0x0000000003294571
  0x0000000003294564: addq   $0x1,0x188(%r9)
  0x000000000329456c: jmpq   0x00000000032945d7
  0x0000000003294571: cmp    0x190(%r9),%r8
  0x0000000003294578: jne    0x0000000003294587
  0x000000000329457a: addq   $0x1,0x198(%r9)
  0x0000000003294582: jmpq   0x00000000032945d7
  0x0000000003294587: cmpq   $0x0,0x180(%r9)
  0x0000000003294592: jne    0x00000000032945ab
  0x0000000003294594: mov    %r8,0x180(%r9)
  0x000000000329459b: movq   $0x1,0x188(%r9)
  0x00000000032945a6: jmpq   0x00000000032945d7
  0x00000000032945ab: cmpq   $0x0,0x190(%r9)
  0x00000000032945b6: jne    0x00000000032945cf
  0x00000000032945b8: mov    %r8,0x190(%r9)
  0x00000000032945bf: movq   $0x1,0x198(%r9)
  0x00000000032945ca: jmpq   0x00000000032945d7
  0x00000000032945cf: addq   $0x1,0x178(%r9)
  0x00000000032945d7: mov    $0x0,%r8d
  0x00000000032945dd: mov    %rsi,%r9
  0x00000000032945e0: mov    %rax,%rsi
  0x00000000032945e3: mov    %rbx,%rdx          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x00000000032945e6: nop
  0x00000000032945e7: callq  0x00000000031d61a0  ; OopMap{[184]=Oop off=1356}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x00000000032945ec: mov    0xb8(%rsp),%rdx
  0x00000000032945f4: mov    0xc(%rdx),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x00000000032945f7: add    0xac(%rsp),%eax
  0x00000000032945fe: mov    %eax,0xc(%rdx)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000003294601: mov    %rdx,%rax
  0x0000000003294604: add    $0xe0,%rsp
  0x000000000329460b: pop    %rbp
  0x000000000329460c: test   %eax,-0x9a4512(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x0000000003294612: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000003294613: mov    %rdx,%rsi
  0x0000000003294616: movabs $0x1c341308,%rdi   ;   {metadata(method data for {method} {0x000000001c1c4550} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x0000000003294620: addq   $0x1,0x128(%rdi)
  0x0000000003294628: nop
  0x0000000003294629: nop
  0x000000000329462a: nop
  0x000000000329462b: nop
  0x000000000329462c: nop
  0x000000000329462d: nop
  0x000000000329462e: nop
  0x000000000329462f: callq  0x00000000031d61a0  ; OopMap{off=1428}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000003294634: add    $0xe0,%rsp
  0x000000000329463b: pop    %rbp
  0x000000000329463c: test   %eax,-0x9a4542(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x0000000003294642: retq   
  0x0000000003294643: mov    %rsi,0x8(%rsp)
  0x0000000003294648: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003294650: callq  0x0000000003291d60  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1461}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000003294655: jmpq   0x0000000003294109
  0x000000000329465a: callq  0x000000000328d680  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1471}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000000329465f: mov    %rsi,0x8(%rsp)
  0x0000000003294664: movq   $0xffffffffffffffff,(%rsp)
  0x000000000329466c: callq  0x0000000003291d60  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1489}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x0000000003294671: jmpq   0x0000000003294208
  0x0000000003294676: callq  0x000000000328d680  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1499}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000000329467b: mov    %rbx,0x8(%rsp)
  0x0000000003294680: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003294688: callq  0x0000000003291d60  ; OopMap{rdx=Oop [184]=Oop r8=Oop off=1517}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000000329468d: jmpq   0x0000000003294266
  0x0000000003294692: callq  0x000000000328d680  ; OopMap{rdx=Oop [184]=Oop r8=Oop rbx=Oop off=1527}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x0000000003294697: mov    %rbx,0x8(%rsp)
  0x000000000329469c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032946a4: callq  0x0000000003291d60  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1545}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000032946a9: jmpq   0x0000000003294343
  0x00000000032946ae: callq  0x000000000328e700  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1555}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000032946b3: jmpq   0x00000000032943bd
  0x00000000032946b8: mov    %rdx,0x8(%rsp)
  0x00000000032946bd: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032946c5: callq  0x0000000003291d60  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1578}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000000032946ca: jmpq   0x0000000003294406
  0x00000000032946cf: callq  0x00000000031d6620  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1588}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x00000000032946d4: jmpq   0x00000000032944fc
  0x00000000032946d9: nop
  0x00000000032946da: nop
  0x00000000032946db: mov    0x2a8(%r15),%rax
  0x00000000032946e2: movabs $0x0,%r10
  0x00000000032946ec: mov    %r10,0x2a8(%r15)
  0x00000000032946f3: movabs $0x0,%r10
  0x00000000032946fd: mov    %r10,0x2b0(%r15)
  0x0000000003294704: add    $0xe0,%rsp
  0x000000000329470b: pop    %rbp
  0x000000000329470c: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x0000000003294711: hlt    
  0x0000000003294712: hlt    
  0x0000000003294713: hlt    
  0x0000000003294714: hlt    
  0x0000000003294715: hlt    
  0x0000000003294716: hlt    
  0x0000000003294717: hlt    
  0x0000000003294718: hlt    
  0x0000000003294719: hlt    
  0x000000000329471a: hlt    
  0x000000000329471b: hlt    
  0x000000000329471c: hlt    
  0x000000000329471d: hlt    
  0x000000000329471e: hlt    
  0x000000000329471f: hlt    
[Stub Code]
  0x0000000003294720: nop                       ;   {no_reloc}
  0x0000000003294721: nop
  0x0000000003294722: nop
  0x0000000003294723: nop
  0x0000000003294724: nop
  0x0000000003294725: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000329472f: jmpq   0x000000000329472f  ;   {runtime_call}
  0x0000000003294734: nop
  0x0000000003294735: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000329473f: jmpq   0x000000000329473f  ;   {runtime_call}
  0x0000000003294744: nop
  0x0000000003294745: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000329474f: jmpq   0x000000000329474f  ;   {runtime_call}
  0x0000000003294754: nop
  0x0000000003294755: movabs $0x0,%rbx          ;   {static_stub}
  0x000000000329475f: jmpq   0x000000000329475f  ;   {runtime_call}
[Exception Handler]
  0x0000000003294764: callq  0x000000000328f520  ;   {runtime_call}
  0x0000000003294769: mov    %rsp,-0x28(%rsp)
  0x000000000329476e: sub    $0x80,%rsp
  0x0000000003294775: mov    %rax,0x78(%rsp)
  0x000000000329477a: mov    %rcx,0x70(%rsp)
  0x000000000329477f: mov    %rdx,0x68(%rsp)
  0x0000000003294784: mov    %rbx,0x60(%rsp)
  0x0000000003294789: mov    %rbp,0x50(%rsp)
  0x000000000329478e: mov    %rsi,0x48(%rsp)
  0x0000000003294793: mov    %rdi,0x40(%rsp)
  0x0000000003294798: mov    %r8,0x38(%rsp)
  0x000000000329479d: mov    %r9,0x30(%rsp)
  0x00000000032947a2: mov    %r10,0x28(%rsp)
  0x00000000032947a7: mov    %r11,0x20(%rsp)
  0x00000000032947ac: mov    %r12,0x18(%rsp)
  0x00000000032947b1: mov    %r13,0x10(%rsp)
  0x00000000032947b6: mov    %r14,0x8(%rsp)
  0x00000000032947bb: mov    %r15,(%rsp)
  0x00000000032947bf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032947c9: movabs $0x3294769,%rdx    ;   {internal_word}
  0x00000000032947d3: mov    %rsp,%r8
  0x00000000032947d6: and    $0xfffffffffffffff0,%rsp
  0x00000000032947da: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032947df: hlt    
[Deopt Handler Code]
  0x00000000032947e0: movabs $0x32947e0,%r10    ;   {section_word}
  0x00000000032947ea: push   %r10
  0x00000000032947ec: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032947f1: hlt    
  0x00000000032947f2: hlt    
  0x00000000032947f3: hlt    
  0x00000000032947f4: hlt    
  0x00000000032947f5: hlt    
  0x00000000032947f6: hlt    
  0x00000000032947f7: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x00000000032940a0' size='3456' address='0x0000000003293ed0' relocation_offset='288' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='3843' iicount='3843' stamp='0.463'/>
<writer thread='26124'/>
<task_queued compile_id='11' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='2560' iicount='2560' level='3' stamp='0.463' comment='tiered' hot_count='2560'/>
<task_queued compile_id='12' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='32384' iicount='32384' stamp='0.463' comment='tiered' hot_count='32384'/>
<task_queued compile_id='13' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='32384' iicount='32384' stamp='0.463' comment='tiered' hot_count='32384'/>
<writer thread='6664'/>
<task_queued compile_id='14' method='java/lang/String charAt (I)C' bytes='29' count='243712' iicount='243712' stamp='0.464' comment='tiered' hot_count='243712'/>
<writer thread='23880'/>
Decoding compiled method 0x0000000003292390:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;
  # this:     rdx:rdx   = &apos;java/util/Hashtable&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x70]  (sp of caller)
  0x0000000003292520: mov    0x8(%rdx),%r10d
  0x0000000003292524: shl    $0x3,%r10
  0x0000000003292528: cmp    %rax,%r10
  0x000000000329252b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x0000000003292531: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000329253c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003292540: mov    %eax,-0x6000(%rsp)
  0x0000000003292547: push   %rbp
  0x0000000003292548: sub    $0x60,%rsp
  0x000000000329254c: mov    %r8,0x28(%rsp)
  0x0000000003292551: lea    0x40(%rsp),%rsi
  0x0000000003292556: mov    %rdx,0x8(%rsi)
  0x000000000329255a: mov    (%rdx),%rax
  0x000000000329255d: mov    %rax,%rdi
  0x0000000003292560: and    $0x7,%rdi
  0x0000000003292564: cmp    $0x5,%rdi
  0x0000000003292568: jne    0x00000000032925ef
  0x000000000329256e: mov    0x8(%rdx),%edi
  0x0000000003292571: shl    $0x3,%rdi
  0x0000000003292575: mov    0xa8(%rdi),%rdi
  0x000000000329257c: or     %r15,%rdi
  0x000000000329257f: xor    %rax,%rdi
  0x0000000003292582: and    $0xffffffffffffff87,%rdi
  0x0000000003292586: je     0x0000000003292617
  0x000000000329258c: test   $0x7,%rdi
  0x0000000003292593: jne    0x00000000032925dc
  0x0000000003292595: test   $0x300,%rdi
  0x000000000329259c: jne    0x00000000032925bb
  0x000000000329259e: and    $0x37f,%rax
  0x00000000032925a5: mov    %rax,%rdi
  0x00000000032925a8: or     %r15,%rdi
  0x00000000032925ab: lock cmpxchg %rdi,(%rdx)
  0x00000000032925b0: jne    0x000000000329299d
  0x00000000032925b6: jmpq   0x0000000003292617
  0x00000000032925bb: mov    0x8(%rdx),%edi
  0x00000000032925be: shl    $0x3,%rdi
  0x00000000032925c2: mov    0xa8(%rdi),%rdi
  0x00000000032925c9: or     %r15,%rdi
  0x00000000032925cc: lock cmpxchg %rdi,(%rdx)
  0x00000000032925d1: jne    0x000000000329299d
  0x00000000032925d7: jmpq   0x0000000003292617
  0x00000000032925dc: mov    0x8(%rdx),%edi
  0x00000000032925df: shl    $0x3,%rdi
  0x00000000032925e3: mov    0xa8(%rdi),%rdi
  0x00000000032925ea: lock cmpxchg %rdi,(%rdx)
  0x00000000032925ef: mov    (%rdx),%rax
  0x00000000032925f2: or     $0x1,%rax
  0x00000000032925f6: mov    %rax,(%rsi)
  0x00000000032925f9: lock cmpxchg %rsi,(%rdx)
  0x00000000032925fe: je     0x0000000003292617
  0x0000000003292604: sub    %rsp,%rax
  0x0000000003292607: and    $0xfffffffffffff007,%rax
  0x000000000329260e: mov    %rax,(%rsi)
  0x0000000003292611: jne    0x000000000329299d
  0x0000000003292617: movabs $0x1c416040,%rsi   ;   {metadata(method data for {method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000003292621: mov    0xdc(%rsi),%edi
  0x0000000003292627: add    $0x8,%edi
  0x000000000329262a: mov    %edi,0xdc(%rsi)
  0x0000000003292630: movabs $0x1c187c88,%rsi   ;   {metadata({method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x000000000329263a: and    $0x1ff8,%edi
  0x0000000003292640: cmp    $0x0,%edi
  0x0000000003292643: je     0x00000000032929b0  ;*aload_0
                                                ; - java.util.Hashtable::get@0 (line 362)

  0x0000000003292649: mov    0x1c(%rdx),%esi
  0x000000000329264c: shl    $0x3,%rsi          ;*getfield table
                                                ; - java.util.Hashtable::get@1 (line 362)

  0x0000000003292650: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x00000000032929c7
  0x0000000003292653: mov    %r8,%rdx
  0x0000000003292656: movabs $0x1c416040,%rdi   ;   {metadata(method data for {method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000003292660: mov    0x8(%rdx),%edx
  0x0000000003292663: shl    $0x3,%rdx
  0x0000000003292667: cmp    0x110(%rdi),%rdx
  0x000000000329266e: jne    0x000000000329267d
  0x0000000003292670: addq   $0x1,0x118(%rdi)
  0x0000000003292678: jmpq   0x00000000032926e3
  0x000000000329267d: cmp    0x120(%rdi),%rdx
  0x0000000003292684: jne    0x0000000003292693
  0x0000000003292686: addq   $0x1,0x128(%rdi)
  0x000000000329268e: jmpq   0x00000000032926e3
  0x0000000003292693: cmpq   $0x0,0x110(%rdi)
  0x000000000329269e: jne    0x00000000032926b7
  0x00000000032926a0: mov    %rdx,0x110(%rdi)
  0x00000000032926a7: movq   $0x1,0x118(%rdi)
  0x00000000032926b2: jmpq   0x00000000032926e3
  0x00000000032926b7: cmpq   $0x0,0x120(%rdi)
  0x00000000032926c2: jne    0x00000000032926db
  0x00000000032926c4: mov    %rdx,0x120(%rdi)
  0x00000000032926cb: movq   $0x1,0x128(%rdi)
  0x00000000032926d6: jmpq   0x00000000032926e3
  0x00000000032926db: addq   $0x1,0x108(%rdi)
  0x00000000032926e3: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 363)

  0x00000000032926e6: mov    %rsi,0x20(%rsp)
  0x00000000032926eb: nop
  0x00000000032926ec: nop
  0x00000000032926ed: movabs $0xffffffffffffffff,%rax
  0x00000000032926f7: callq  0x00000000031d63e0  ; OopMap{[40]=Oop [32]=Oop [72]=Oop off=476}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 363)
                                                ;   {virtual_call}
  0x00000000032926fc: mov    %eax,0x38(%rsp)
  0x0000000003292700: mov    0x20(%rsp),%rsi
  0x0000000003292705: mov    0xc(%rsi),%r8d     ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 364)
                                                ; implicit exception: dispatches to 0x00000000032929cc
  0x0000000003292709: mov    %rax,%rdx
  0x000000000329270c: and    $0x7fffffff,%edx
  0x0000000003292712: mov    %rax,%rdi
  0x0000000003292715: mov    %rdx,%rax
  0x0000000003292718: cmp    $0x80000000,%eax
  0x000000000329271e: jne    0x0000000003292730
  0x0000000003292724: xor    %edx,%edx
  0x0000000003292726: cmp    $0xffffffff,%r8d
  0x000000000329272a: je     0x0000000003292734
  0x0000000003292730: cltd   
  0x0000000003292731: idiv   %r8d               ;*irem
                                                ; - java.util.Hashtable::get@16 (line 364)
                                                ; implicit exception: dispatches to 0x00000000032929d1
  0x0000000003292734: movslq %edx,%rdx
  0x0000000003292737: mov    0x10(%rsi,%rdx,4),%r8d
  0x000000000329273c: shl    $0x3,%r8           ;*aaload
                                                ; - java.util.Hashtable::get@22 (line 365)

  0x0000000003292740: mov    0x28(%rsp),%rsi
  0x0000000003292745: cmp    $0x0,%r8
  0x0000000003292749: movabs $0x1c416040,%rdx   ;   {metadata(method data for {method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000003292753: movabs $0x138,%rbx
  0x000000000329275d: je     0x000000000329276d
  0x0000000003292763: movabs $0x148,%rbx
  0x000000000329276d: mov    (%rdx,%rbx,1),%rax
  0x0000000003292771: lea    0x1(%rax),%rax
  0x0000000003292775: mov    %rax,(%rdx,%rbx,1)
  0x0000000003292779: je     0x0000000003292956  ;*ifnull
                                                ; - java.util.Hashtable::get@27 (line 365)

  0x000000000329277f: mov    0xc(%r8),%edx      ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 366)
                                                ; implicit exception: dispatches to 0x00000000032929d6
  0x0000000003292783: cmp    %edi,%edx
  0x0000000003292785: movabs $0x1c416040,%rdx   ;   {metadata(method data for {method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x000000000329278f: movabs $0x158,%rbx
  0x0000000003292799: jne    0x00000000032927a9
  0x000000000329279f: movabs $0x168,%rbx
  0x00000000032927a9: mov    (%rdx,%rbx,1),%rax
  0x00000000032927ad: lea    0x1(%rax),%rax
  0x00000000032927b1: mov    %rax,(%rdx,%rbx,1)
  0x00000000032927b5: jne    0x00000000032928b2  ;*if_icmpne
                                                ; - java.util.Hashtable::get@36 (line 366)

  0x00000000032927bb: mov    0x10(%r8),%edx
  0x00000000032927bf: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.Hashtable::get@41 (line 366)

  0x00000000032927c3: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000032929db
  0x00000000032927c6: mov    %rdx,%rdi
  0x00000000032927c9: movabs $0x1c416040,%rbx   ;   {metadata(method data for {method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000032927d3: mov    0x8(%rdi),%edi
  0x00000000032927d6: shl    $0x3,%rdi
  0x00000000032927da: cmp    0x180(%rbx),%rdi
  0x00000000032927e1: jne    0x00000000032927f0
  0x00000000032927e3: addq   $0x1,0x188(%rbx)
  0x00000000032927eb: jmpq   0x0000000003292856
  0x00000000032927f0: cmp    0x190(%rbx),%rdi
  0x00000000032927f7: jne    0x0000000003292806
  0x00000000032927f9: addq   $0x1,0x198(%rbx)
  0x0000000003292801: jmpq   0x0000000003292856
  0x0000000003292806: cmpq   $0x0,0x180(%rbx)
  0x0000000003292811: jne    0x000000000329282a
  0x0000000003292813: mov    %rdi,0x180(%rbx)
  0x000000000329281a: movq   $0x1,0x188(%rbx)
  0x0000000003292825: jmpq   0x0000000003292856
  0x000000000329282a: cmpq   $0x0,0x190(%rbx)
  0x0000000003292835: jne    0x000000000329284e
  0x0000000003292837: mov    %rdi,0x190(%rbx)
  0x000000000329283e: movq   $0x1,0x198(%rbx)
  0x0000000003292849: jmpq   0x0000000003292856
  0x000000000329284e: addq   $0x1,0x178(%rbx)
  0x0000000003292856: mov    %r8,0x30(%rsp)
  0x000000000329285b: mov    %rsi,%r8           ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 366)

  0x000000000329285e: nop
  0x000000000329285f: nop
  0x0000000003292860: nop
  0x0000000003292861: nop
  0x0000000003292862: nop
  0x0000000003292863: nop
  0x0000000003292864: nop
  0x0000000003292865: movabs $0xffffffffffffffff,%rax
  0x000000000329286f: callq  0x00000000031d63e0  ; OopMap{[40]=Oop [48]=Oop [72]=Oop off=852}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 366)
                                                ;   {virtual_call}
  0x0000000003292874: cmp    $0x0,%eax
  0x0000000003292877: movabs $0x1c416040,%rax   ;   {metadata(method data for {method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x0000000003292881: movabs $0x1a8,%rsi
  0x000000000329288b: je     0x000000000329289b
  0x0000000003292891: movabs $0x1b8,%rsi
  0x000000000329289b: mov    (%rax,%rsi,1),%rdi
  0x000000000329289f: lea    0x1(%rdi),%rdi
  0x00000000032928a3: mov    %rdi,(%rax,%rsi,1)
  0x00000000032928a7: mov    0x30(%rsp),%r8
  0x00000000032928ac: jne    0x000000000329290e  ;*ifeq
                                                ; - java.util.Hashtable::get@48 (line 366)

  0x00000000032928b2: mov    0x18(%r8),%eax
  0x00000000032928b6: shl    $0x3,%rax          ;*getfield next
                                                ; - java.util.Hashtable::get@59 (line 365)

  0x00000000032928ba: movabs $0x1c416040,%rsi   ;   {metadata(method data for {method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000032928c4: mov    0xe0(%rsi),%edi
  0x00000000032928ca: add    $0x8,%edi
  0x00000000032928cd: mov    %edi,0xe0(%rsi)
  0x00000000032928d3: movabs $0x1c187c88,%rsi   ;   {metadata({method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000032928dd: and    $0xfff8,%edi
  0x00000000032928e3: cmp    $0x0,%edi
  0x00000000032928e6: je     0x00000000032929e0  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=972}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 365)

  0x00000000032928ec: test   %eax,-0x9a27f2(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032928f2: movabs $0x1c416040,%rsi   ;   {metadata(method data for {method} {0x000000001c187c90} &apos;get&apos; &apos;(Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/Hashtable&apos;)}
  0x00000000032928fc: incl   0x1c8(%rsi)
  0x0000000003292902: mov    %rax,%r8
  0x0000000003292905: mov    0x38(%rsp),%edi
  0x0000000003292909: jmpq   0x0000000003292740  ;*goto
                                                ; - java.util.Hashtable::get@64 (line 365)

  0x000000000329290e: mov    0x14(%r8),%esi
  0x0000000003292912: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.util.Hashtable::get@53 (line 367)

  0x0000000003292916: lea    0x40(%rsp),%rax
  0x000000000329291b: mov    0x8(%rax),%rbx
  0x000000000329291f: mov    (%rbx),%rdi
  0x0000000003292922: and    $0x7,%rdi
  0x0000000003292926: cmp    $0x5,%rdi
  0x000000000329292a: je     0x0000000003292947
  0x0000000003292930: mov    (%rax),%rdi
  0x0000000003292933: test   %rdi,%rdi
  0x0000000003292936: je     0x0000000003292947
  0x000000000329293c: lock cmpxchg %rdi,(%rbx)
  0x0000000003292941: jne    0x00000000032929f7
  0x0000000003292947: mov    %rsi,%rax
  0x000000000329294a: add    $0x60,%rsp
  0x000000000329294e: pop    %rbp
  0x000000000329294f: test   %eax,-0x9a2855(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x0000000003292955: retq                      ;*areturn
                                                ; - java.util.Hashtable::get@56 (line 367)

  0x0000000003292956: lea    0x40(%rsp),%rax
  0x000000000329295b: mov    0x8(%rax),%rdi
  0x000000000329295f: mov    (%rdi),%rsi
  0x0000000003292962: and    $0x7,%rsi
  0x0000000003292966: cmp    $0x5,%rsi
  0x000000000329296a: je     0x0000000003292987
  0x0000000003292970: mov    (%rax),%rsi
  0x0000000003292973: test   %rsi,%rsi
  0x0000000003292976: je     0x0000000003292987
  0x000000000329297c: lock cmpxchg %rsi,(%rdi)
  0x0000000003292981: jne    0x0000000003292a0a  ;*areturn
                                                ; - java.util.Hashtable::get@68 (line 370)

  0x0000000003292987: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000003292991: add    $0x60,%rsp
  0x0000000003292995: pop    %rbp
  0x0000000003292996: test   %eax,-0x9a289c(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x000000000329299c: retq   
  0x000000000329299d: mov    %rdx,0x8(%rsp)
  0x00000000032929a2: mov    %rsi,(%rsp)
  0x00000000032929a6: callq  0x0000000003290060  ; OopMap{rdx=Oop r8=Oop [40]=Oop [72]=Oop off=1163}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 362)
                                                ;   {runtime_call}
  0x00000000032929ab: jmpq   0x0000000003292617
  0x00000000032929b0: mov    %rsi,0x8(%rsp)
  0x00000000032929b5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032929bd: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop [40]=Oop [72]=Oop off=1186}
                                                ;*synchronization entry
                                                ; - java.util.Hashtable::get@-1 (line 362)
                                                ;   {runtime_call}
  0x00000000032929c2: jmpq   0x0000000003292649
  0x00000000032929c7: callq  0x000000000328d680  ; OopMap{r8=Oop [40]=Oop rsi=Oop [72]=Oop off=1196}
                                                ;*invokevirtual hashCode
                                                ; - java.util.Hashtable::get@6 (line 363)
                                                ;   {runtime_call}
  0x00000000032929cc: callq  0x000000000328d680  ; OopMap{[40]=Oop rsi=Oop [72]=Oop off=1201}
                                                ;*arraylength
                                                ; - java.util.Hashtable::get@15 (line 364)
                                                ;   {runtime_call}
  0x00000000032929d1: callq  0x000000000328d440  ; OopMap{[40]=Oop rsi=Oop [72]=Oop off=1206}
                                                ;*irem
                                                ; - java.util.Hashtable::get@16 (line 364)
                                                ;   {runtime_call}
  0x00000000032929d6: callq  0x000000000328d680  ; OopMap{r8=Oop rsi=Oop [40]=Oop [72]=Oop off=1211}
                                                ;*getfield hash
                                                ; - java.util.Hashtable::get@32 (line 366)
                                                ;   {runtime_call}
  0x00000000032929db: callq  0x000000000328d680  ; OopMap{r8=Oop rsi=Oop [40]=Oop rdx=Oop [72]=Oop off=1216}
                                                ;*invokevirtual equals
                                                ; - java.util.Hashtable::get@45 (line 366)
                                                ;   {runtime_call}
  0x00000000032929e0: mov    %rsi,0x8(%rsp)
  0x00000000032929e5: movq   $0x40,(%rsp)
  0x00000000032929ed: callq  0x0000000003291d60  ; OopMap{[40]=Oop rax=Oop [72]=Oop off=1234}
                                                ;*goto
                                                ; - java.util.Hashtable::get@64 (line 365)
                                                ;   {runtime_call}
  0x00000000032929f2: jmpq   0x00000000032928ec
  0x00000000032929f7: lea    0x40(%rsp),%rax
  0x00000000032929fc: mov    %rax,(%rsp)
  0x0000000003292a00: callq  0x0000000003290460  ;   {runtime_call}
  0x0000000003292a05: jmpq   0x0000000003292947
  0x0000000003292a0a: lea    0x40(%rsp),%rax
  0x0000000003292a0f: mov    %rax,(%rsp)
  0x0000000003292a13: callq  0x0000000003290460  ;   {runtime_call}
  0x0000000003292a18: jmpq   0x0000000003292987
  0x0000000003292a1d: nop
  0x0000000003292a1e: nop
  0x0000000003292a1f: mov    0x2a8(%r15),%rax
  0x0000000003292a26: movabs $0x0,%r10
  0x0000000003292a30: mov    %r10,0x2a8(%r15)
  0x0000000003292a37: movabs $0x0,%r10
  0x0000000003292a41: mov    %r10,0x2b0(%r15)
  0x0000000003292a48: mov    %rax,%rbx
  0x0000000003292a4b: lea    0x40(%rsp),%rax
  0x0000000003292a50: mov    0x8(%rax),%rsi
  0x0000000003292a54: mov    (%rsi),%rdi
  0x0000000003292a57: and    $0x7,%rdi
  0x0000000003292a5b: cmp    $0x5,%rdi
  0x0000000003292a5f: je     0x0000000003292a7c
  0x0000000003292a65: mov    (%rax),%rdi
  0x0000000003292a68: test   %rdi,%rdi
  0x0000000003292a6b: je     0x0000000003292a7c
  0x0000000003292a71: lock cmpxchg %rdi,(%rsi)
  0x0000000003292a76: jne    0x0000000003292a89
  0x0000000003292a7c: mov    %rbx,%rax
  0x0000000003292a7f: add    $0x60,%rsp
  0x0000000003292a83: pop    %rbp
  0x0000000003292a84: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x0000000003292a89: lea    0x40(%rsp),%rax
  0x0000000003292a8e: mov    %rax,(%rsp)
  0x0000000003292a92: callq  0x0000000003290460  ;   {runtime_call}
  0x0000000003292a97: jmp    0x0000000003292a7c
  0x0000000003292a99: hlt    
  0x0000000003292a9a: hlt    
  0x0000000003292a9b: hlt    
  0x0000000003292a9c: hlt    
  0x0000000003292a9d: hlt    
  0x0000000003292a9e: hlt    
  0x0000000003292a9f: hlt    
[Stub Code]
  0x0000000003292aa0: nop                       ;   {no_reloc}
  0x0000000003292aa1: nop
  0x0000000003292aa2: nop
  0x0000000003292aa3: nop
  0x0000000003292aa4: nop
  0x0000000003292aa5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003292aaf: jmpq   0x0000000003292aaf  ;   {runtime_call}
  0x0000000003292ab4: nop
  0x0000000003292ab5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003292abf: jmpq   0x0000000003292abf  ;   {runtime_call}
[Exception Handler]
  0x0000000003292ac4: callq  0x000000000328f520  ;   {runtime_call}
  0x0000000003292ac9: mov    %rsp,-0x28(%rsp)
  0x0000000003292ace: sub    $0x80,%rsp
  0x0000000003292ad5: mov    %rax,0x78(%rsp)
  0x0000000003292ada: mov    %rcx,0x70(%rsp)
  0x0000000003292adf: mov    %rdx,0x68(%rsp)
  0x0000000003292ae4: mov    %rbx,0x60(%rsp)
  0x0000000003292ae9: mov    %rbp,0x50(%rsp)
  0x0000000003292aee: mov    %rsi,0x48(%rsp)
  0x0000000003292af3: mov    %rdi,0x40(%rsp)
  0x0000000003292af8: mov    %r8,0x38(%rsp)
  0x0000000003292afd: mov    %r9,0x30(%rsp)
  0x0000000003292b02: mov    %r10,0x28(%rsp)
  0x0000000003292b07: mov    %r11,0x20(%rsp)
  0x0000000003292b0c: mov    %r12,0x18(%rsp)
  0x0000000003292b11: mov    %r13,0x10(%rsp)
  0x0000000003292b16: mov    %r14,0x8(%rsp)
  0x0000000003292b1b: mov    %r15,(%rsp)
  0x0000000003292b1f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000003292b29: movabs $0x3292ac9,%rdx    ;   {internal_word}
  0x0000000003292b33: mov    %rsp,%r8
  0x0000000003292b36: and    $0xfffffffffffffff0,%rsp
  0x0000000003292b3a: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000003292b3f: hlt    
[Deopt Handler Code]
  0x0000000003292b40: movabs $0x3292b40,%r10    ;   {section_word}
  0x0000000003292b4a: push   %r10
  0x0000000003292b4c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x0000000003292b51: hlt    
  0x0000000003292b52: hlt    
  0x0000000003292b53: hlt    
  0x0000000003292b54: hlt    
  0x0000000003292b55: hlt    
  0x0000000003292b56: hlt    
  0x0000000003292b57: hlt    
<nmethod compile_id='10' compiler='C1' level='3' entry='0x0000000003292520' size='2784' address='0x0000000003292390' relocation_offset='288' insts_offset='400' stub_offset='1808' scopes_data_offset='2000' scopes_pcs_offset='2248' dependencies_offset='2728' nul_chk_table_offset='2736' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='404' backedge_count='48' iicount='404' stamp='0.473'/>
Decoding compiled method 0x00000000032963d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c169508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x0000000003296520: mov    %eax,-0x6000(%rsp)
  0x0000000003296527: push   %rbp
  0x0000000003296528: sub    $0x30,%rsp
  0x000000000329652c: movabs $0x1c340eb0,%rax   ;   {metadata(method data for {method} {0x000000001c169508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x0000000003296536: mov    0xdc(%rax),%esi
  0x000000000329653c: add    $0x8,%esi
  0x000000000329653f: mov    %esi,0xdc(%rax)
  0x0000000003296545: movabs $0x1c169500,%rax   ;   {metadata({method} {0x000000001c169508} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x000000000329654f: and    $0x1ff8,%esi
  0x0000000003296555: cmp    $0x0,%esi
  0x0000000003296558: je     0x000000000329657b
  0x000000000329655e: movabs $0x76b780c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x0000000003296568: mov    0x74(%rax),%eax
  0x000000000329656b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x000000000329656f: add    $0x30,%rsp
  0x0000000003296573: pop    %rbp
  0x0000000003296574: test   %eax,-0x9a647a(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x000000000329657a: retq   
  0x000000000329657b: mov    %rax,0x8(%rsp)
  0x0000000003296580: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003296588: callq  0x0000000003291d60  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x000000000329658d: jmp    0x000000000329655e
  0x000000000329658f: nop
  0x0000000003296590: nop
  0x0000000003296591: mov    0x2a8(%r15),%rax
  0x0000000003296598: movabs $0x0,%r10
  0x00000000032965a2: mov    %r10,0x2a8(%r15)
  0x00000000032965a9: movabs $0x0,%r10
  0x00000000032965b3: mov    %r10,0x2b0(%r15)
  0x00000000032965ba: add    $0x30,%rsp
  0x00000000032965be: pop    %rbp
  0x00000000032965bf: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032965c4: hlt    
  0x00000000032965c5: hlt    
  0x00000000032965c6: hlt    
  0x00000000032965c7: hlt    
  0x00000000032965c8: hlt    
  0x00000000032965c9: hlt    
  0x00000000032965ca: hlt    
  0x00000000032965cb: hlt    
  0x00000000032965cc: hlt    
  0x00000000032965cd: hlt    
  0x00000000032965ce: hlt    
  0x00000000032965cf: hlt    
  0x00000000032965d0: hlt    
  0x00000000032965d1: hlt    
  0x00000000032965d2: hlt    
  0x00000000032965d3: hlt    
  0x00000000032965d4: hlt    
  0x00000000032965d5: hlt    
  0x00000000032965d6: hlt    
  0x00000000032965d7: hlt    
  0x00000000032965d8: hlt    
  0x00000000032965d9: hlt    
  0x00000000032965da: hlt    
  0x00000000032965db: hlt    
  0x00000000032965dc: hlt    
  0x00000000032965dd: hlt    
  0x00000000032965de: hlt    
  0x00000000032965df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032965e0: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032965e5: mov    %rsp,-0x28(%rsp)
  0x00000000032965ea: sub    $0x80,%rsp
  0x00000000032965f1: mov    %rax,0x78(%rsp)
  0x00000000032965f6: mov    %rcx,0x70(%rsp)
  0x00000000032965fb: mov    %rdx,0x68(%rsp)
  0x0000000003296600: mov    %rbx,0x60(%rsp)
  0x0000000003296605: mov    %rbp,0x50(%rsp)
  0x000000000329660a: mov    %rsi,0x48(%rsp)
  0x000000000329660f: mov    %rdi,0x40(%rsp)
  0x0000000003296614: mov    %r8,0x38(%rsp)
  0x0000000003296619: mov    %r9,0x30(%rsp)
  0x000000000329661e: mov    %r10,0x28(%rsp)
  0x0000000003296623: mov    %r11,0x20(%rsp)
  0x0000000003296628: mov    %r12,0x18(%rsp)
  0x000000000329662d: mov    %r13,0x10(%rsp)
  0x0000000003296632: mov    %r14,0x8(%rsp)
  0x0000000003296637: mov    %r15,(%rsp)
  0x000000000329663b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000003296645: movabs $0x32965e5,%rdx    ;   {internal_word}
  0x000000000329664f: mov    %rsp,%r8
  0x0000000003296652: and    $0xfffffffffffffff0,%rsp
  0x0000000003296656: callq  0x00000000559d3300  ;   {runtime_call}
  0x000000000329665b: hlt    
[Deopt Handler Code]
  0x000000000329665c: movabs $0x329665c,%r10    ;   {section_word}
  0x0000000003296666: push   %r10
  0x0000000003296668: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x000000000329666d: hlt    
  0x000000000329666e: hlt    
  0x000000000329666f: hlt    
<nmethod compile_id='11' compiler='C1' level='3' entry='0x0000000003296520' size='768' address='0x00000000032963d0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='2568' iicount='2568' stamp='0.475'/>
<writer thread='26124'/>
<task_queued compile_id='15' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='3456' iicount='3456' level='3' stamp='0.476' comment='tiered' hot_count='3456'/>
<task_queued compile_id='16' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='3609' backedge_count='225280' iicount='3609' osr_bci='37' stamp='0.476' comment='tiered' hot_count='225280'/>
<task_queued compile_id='17' method='java/lang/String indexOf (I)I' bytes='7' count='3584' iicount='3584' level='3' stamp='0.476' comment='tiered' hot_count='3584'/>
<task_queued compile_id='18' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1408' iicount='1408' level='3' stamp='0.476' comment='tiered' hot_count='1408'/>
<task_queued compile_id='19' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1408' backedge_count='138' iicount='1408' level='3' stamp='0.476' comment='tiered' hot_count='1408'/>
<writer thread='6664'/>
<task_queued compile_id='20' method='java/io/WinNTFileSystem prefixLength (Ljava/lang/String;)I' bytes='91' count='1792' iicount='1792' level='3' stamp='0.476' comment='tiered' hot_count='1792'/>
<task_queued compile_id='21' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='19698' backedge_count='14067' iicount='19698' stamp='0.476' comment='tiered' hot_count='19698'/>
<writer thread='23880'/>
Decoding compiled method 0x0000000003295710:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0x70]  (sp of caller)
  0x00000000032958e0: mov    0x8(%rdx),%r10d
  0x00000000032958e4: shl    $0x3,%r10
  0x00000000032958e8: cmp    %rax,%r10
  0x00000000032958eb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032958f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032958fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x0000000003295900: mov    %eax,-0x6000(%rsp)
  0x0000000003295907: push   %rbp
  0x0000000003295908: sub    $0x60,%rsp
  0x000000000329590c: movabs $0x1c33c568,%rsi   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003295916: mov    0xdc(%rsi),%ebx
  0x000000000329591c: add    $0x8,%ebx
  0x000000000329591f: mov    %ebx,0xdc(%rsi)
  0x0000000003295925: movabs $0x1c153158,%rsi   ;   {metadata({method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000329592f: and    $0x1ff8,%ebx
  0x0000000003295935: cmp    $0x0,%ebx
  0x0000000003295938: je     0x0000000003295c0e  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x000000000329593e: mov    %rdx,%rsi
  0x0000000003295941: movabs $0x1c33c568,%rbx   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x000000000329594b: addq   $0x1,0x108(%rbx)
  0x0000000003295953: movabs $0x1c281c10,%rsi   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x000000000329595d: mov    0xdc(%rsi),%ebx
  0x0000000003295963: add    $0x8,%ebx
  0x0000000003295966: mov    %ebx,0xdc(%rsi)
  0x000000000329596c: movabs $0x1c150480,%rsi   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x0000000003295976: and    $0x7ffff8,%ebx
  0x000000000329597c: cmp    $0x0,%ebx
  0x000000000329597f: je     0x0000000003295c25
  0x0000000003295985: cmp    $0x0,%r9d
  0x0000000003295989: movabs $0x1c33c568,%rsi   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003295993: movabs $0x118,%rbx
  0x000000000329599d: jge    0x00000000032959ad
  0x00000000032959a3: movabs $0x128,%rbx
  0x00000000032959ad: mov    (%rsi,%rbx,1),%rax
  0x00000000032959b1: lea    0x1(%rax),%rax
  0x00000000032959b5: mov    %rax,(%rsi,%rbx,1)
  0x00000000032959b9: jl     0x0000000003295bce  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x00000000032959bf: cmp    $0x0,%edi
  0x00000000032959c2: movabs $0x1c33c568,%rsi   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032959cc: movabs $0x148,%rbx
  0x00000000032959d6: jg     0x00000000032959e6
  0x00000000032959dc: movabs $0x158,%rbx
  0x00000000032959e6: mov    (%rsi,%rbx,1),%rax
  0x00000000032959ea: lea    0x1(%rax),%rax
  0x00000000032959ee: mov    %rax,(%rsi,%rbx,1)
  0x00000000032959f2: jg     0x0000000003295a6e  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x00000000032959f8: cmp    $0x0,%edi
  0x00000000032959fb: movabs $0x1c33c568,%rsi   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003295a05: movabs $0x168,%rbx
  0x0000000003295a0f: jge    0x0000000003295a1f
  0x0000000003295a15: movabs $0x178,%rbx
  0x0000000003295a1f: mov    (%rsi,%rbx,1),%rax
  0x0000000003295a23: lea    0x1(%rax),%rax
  0x0000000003295a27: mov    %rax,(%rsi,%rbx,1)
  0x0000000003295a2b: jl     0x0000000003295b8e  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x0000000003295a31: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000003295c3c
  0x0000000003295a35: cmp    %esi,%r9d
  0x0000000003295a38: movabs $0x1c33c568,%rsi   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003295a42: movabs $0x198,%rbx
  0x0000000003295a4c: jg     0x0000000003295a5c
  0x0000000003295a52: movabs $0x1a8,%rbx
  0x0000000003295a5c: mov    (%rsi,%rbx,1),%rax
  0x0000000003295a60: lea    0x1(%rax),%rax
  0x0000000003295a64: mov    %rax,(%rsi,%rbx,1)
  0x0000000003295a68: jle    0x0000000003295b0a  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x0000000003295a6e: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000003295c41
  0x0000000003295a72: sub    %edi,%esi
  0x0000000003295a74: cmp    %esi,%r9d
  0x0000000003295a77: movabs $0x1c33c568,%rsi   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003295a81: movabs $0x1b8,%rbx
  0x0000000003295a8b: jle    0x0000000003295a9b
  0x0000000003295a91: movabs $0x1c8,%rbx
  0x0000000003295a9b: mov    (%rsi,%rbx,1),%rax
  0x0000000003295a9f: lea    0x1(%rax),%rax
  0x0000000003295aa3: mov    %rax,(%rsi,%rbx,1)
  0x0000000003295aa7: jg     0x0000000003295b44  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x0000000003295aad: mov    %rdx,0x38(%rsp)
  0x0000000003295ab2: movabs $0x1c33c568,%rsi   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003295abc: addq   $0x1,0x1e8(%rsi)
  0x0000000003295ac4: add    %r9d,%edi
  0x0000000003295ac7: mov    %r8,%rdx
  0x0000000003295aca: mov    %r9,%r8
  0x0000000003295acd: mov    %rdi,%r9           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x0000000003295ad0: nop
  0x0000000003295ad1: nop
  0x0000000003295ad2: nop
  0x0000000003295ad3: nop
  0x0000000003295ad4: nop
  0x0000000003295ad5: nop
  0x0000000003295ad6: nop
  0x0000000003295ad7: callq  0x00000000031d6620  ; OopMap{[56]=Oop off=508}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x0000000003295adc: mov    0x38(%rsp),%rdx
  0x0000000003295ae1: mov    %rax,%r10
  0x0000000003295ae4: shr    $0x3,%r10
  0x0000000003295ae8: mov    %r10d,0xc(%rdx)
  0x0000000003295aec: shr    $0x9,%rdx
  0x0000000003295af0: movabs $0xef3d000,%rax
  0x0000000003295afa: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x0000000003295afe: add    $0x60,%rsp
  0x0000000003295b02: pop    %rbp
  0x0000000003295b03: test   %eax,-0x9a5a09(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x0000000003295b09: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x0000000003295b0a: movabs $0x76b78aa58,%rax  ;   {oop(&quot;&quot;)}
  0x0000000003295b14: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x0000000003295c46
  0x0000000003295b17: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x0000000003295b1b: mov    %rax,%r10
  0x0000000003295b1e: shr    $0x3,%r10
  0x0000000003295b22: mov    %r10d,0xc(%rdx)
  0x0000000003295b26: shr    $0x9,%rdx
  0x0000000003295b2a: movabs $0xef3d000,%rax
  0x0000000003295b34: movb   $0x0,(%rdx,%rax,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x0000000003295b38: add    $0x60,%rsp
  0x0000000003295b3c: pop    %rbp
  0x0000000003295b3d: test   %eax,-0x9a5a43(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x0000000003295b43: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x0000000003295b44: nopl   0x0(%rax)
  0x0000000003295b48: jmpq   0x0000000003295c5a  ;   {no_reloc}
  0x0000000003295b4d: add    %al,(%rax)
  0x0000000003295b4f: add    %al,(%rax)
  0x0000000003295b51: add    %ch,%cl
  0x0000000003295b53: or     $0x4c000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x0000000003295b58: mov    %eax,%eax
  0x0000000003295b5a: movabs $0x1c33c568,%rdx   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003295b64: addq   $0x1,0x1d8(%rdx)
  0x0000000003295b6c: add    %r9d,%edi
  0x0000000003295b6f: mov    %rdi,%r8
  0x0000000003295b72: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x0000000003295b75: mov    %rax,0x40(%rsp)
  0x0000000003295b7a: nop
  0x0000000003295b7b: nop
  0x0000000003295b7c: nop
  0x0000000003295b7d: nop
  0x0000000003295b7e: nop
  0x0000000003295b7f: callq  0x00000000031d61a0  ; OopMap{[64]=Oop off=676}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000003295b84: mov    0x40(%rsp),%rax
  0x0000000003295b89: jmpq   0x0000000003295ce8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x0000000003295b8e: xchg   %ax,%ax
  0x0000000003295b90: jmpq   0x0000000003295c80  ;   {no_reloc}
  0x0000000003295b95: add    %al,(%rax)
  0x0000000003295b97: add    %al,(%rax)
  0x0000000003295b99: add    %ch,%cl
  0x0000000003295b9b: jmp    0x0000000003295b9d
  0x0000000003295b9d: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x0000000003295b9f: mov    %rax,%r8
  0x0000000003295ba2: movabs $0x1c33c568,%rdx   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003295bac: addq   $0x1,0x188(%rdx)
  0x0000000003295bb4: mov    %rdi,%r8
  0x0000000003295bb7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x0000000003295bba: mov    %rax,0x48(%rsp)
  0x0000000003295bbf: callq  0x00000000031d61a0  ; OopMap{[72]=Oop off=740}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000003295bc4: mov    0x48(%rsp),%rax
  0x0000000003295bc9: jmpq   0x0000000003295ce8  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x0000000003295bce: xchg   %ax,%ax
  0x0000000003295bd0: jmpq   0x0000000003295ca6  ;   {no_reloc}
  0x0000000003295bd5: add    %al,(%rax)
  0x0000000003295bd7: add    %al,(%rax)
  0x0000000003295bd9: add    %ch,%cl
  0x0000000003295bdb: roll   (%rax)
  0x0000000003295bdd: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x0000000003295bdf: mov    %rax,%r8
  0x0000000003295be2: movabs $0x1c33c568,%rdx   ;   {metadata(method data for {method} {0x000000001c153160} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x0000000003295bec: addq   $0x1,0x138(%rdx)
  0x0000000003295bf4: mov    %r9,%r8
  0x0000000003295bf7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x0000000003295bfa: mov    %rax,0x50(%rsp)
  0x0000000003295bff: callq  0x00000000031d61a0  ; OopMap{[80]=Oop off=804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000003295c04: mov    0x50(%rsp),%rax
  0x0000000003295c09: jmpq   0x0000000003295ce8
  0x0000000003295c0e: mov    %rsi,0x8(%rsp)
  0x0000000003295c13: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003295c1b: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop off=832}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000003295c20: jmpq   0x000000000329593e
  0x0000000003295c25: mov    %rsi,0x8(%rsp)
  0x0000000003295c2a: movq   $0xffffffffffffffff,(%rsp)
  0x0000000003295c32: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop off=855}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x0000000003295c37: jmpq   0x0000000003295985
  0x0000000003295c3c: callq  0x000000000328d680  ; OopMap{rdx=Oop r8=Oop off=865}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x0000000003295c41: callq  0x000000000328d680  ; OopMap{rdx=Oop r8=Oop off=870}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x0000000003295c46: callq  0x000000000328d680  ; OopMap{rdx=Oop off=875}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x0000000003295c4b: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003295c55: mov    $0xa050f00,%eax
  0x0000000003295c5a: callq  0x0000000003290ca0  ; OopMap{off=895}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000003295c5f: jmpq   0x0000000003295b48
  0x0000000003295c64: mov    %rdx,%rdx
  0x0000000003295c67: callq  0x000000000328db20  ; OopMap{off=908}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x0000000003295c6c: jmpq   0x0000000003295b57
  0x0000000003295c71: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003295c7b: mov    $0xa050f00,%eax
  0x0000000003295c80: callq  0x0000000003290ca0  ; OopMap{off=933}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000003295c85: jmpq   0x0000000003295b90
  0x0000000003295c8a: mov    %rdx,%rdx
  0x0000000003295c8d: callq  0x000000000328db20  ; OopMap{off=946}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x0000000003295c92: jmpq   0x0000000003295b9f
  0x0000000003295c97: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000003295ca1: mov    $0xa050f00,%eax
  0x0000000003295ca6: callq  0x0000000003290ca0  ; OopMap{off=971}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000003295cab: jmpq   0x0000000003295bd0
  0x0000000003295cb0: mov    %rdx,%rdx
  0x0000000003295cb3: callq  0x000000000328db20  ; OopMap{off=984}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x0000000003295cb8: jmpq   0x0000000003295bdf
  0x0000000003295cbd: nop
  0x0000000003295cbe: nop
  0x0000000003295cbf: mov    0x2a8(%r15),%rax
  0x0000000003295cc6: movabs $0x0,%r10
  0x0000000003295cd0: mov    %r10,0x2a8(%r15)
  0x0000000003295cd7: movabs $0x0,%r10
  0x0000000003295ce1: mov    %r10,0x2b0(%r15)
  0x0000000003295ce8: add    $0x60,%rsp
  0x0000000003295cec: pop    %rbp
  0x0000000003295ced: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x0000000003295cf2: hlt    
  0x0000000003295cf3: hlt    
  0x0000000003295cf4: hlt    
  0x0000000003295cf5: hlt    
  0x0000000003295cf6: hlt    
  0x0000000003295cf7: hlt    
  0x0000000003295cf8: hlt    
  0x0000000003295cf9: hlt    
  0x0000000003295cfa: hlt    
  0x0000000003295cfb: hlt    
  0x0000000003295cfc: hlt    
  0x0000000003295cfd: hlt    
  0x0000000003295cfe: hlt    
  0x0000000003295cff: hlt    
[Stub Code]
  0x0000000003295d00: nop                       ;   {no_reloc}
  0x0000000003295d01: nop
  0x0000000003295d02: nop
  0x0000000003295d03: nop
  0x0000000003295d04: nop
  0x0000000003295d05: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003295d0f: jmpq   0x0000000003295d0f  ;   {runtime_call}
  0x0000000003295d14: nop
  0x0000000003295d15: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003295d1f: jmpq   0x0000000003295d1f  ;   {runtime_call}
  0x0000000003295d24: nop
  0x0000000003295d25: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003295d2f: jmpq   0x0000000003295d2f  ;   {runtime_call}
  0x0000000003295d34: nop
  0x0000000003295d35: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000003295d3f: jmpq   0x0000000003295d3f  ;   {runtime_call}
[Exception Handler]
  0x0000000003295d44: callq  0x000000000328f520  ;   {runtime_call}
  0x0000000003295d49: mov    %rsp,-0x28(%rsp)
  0x0000000003295d4e: sub    $0x80,%rsp
  0x0000000003295d55: mov    %rax,0x78(%rsp)
  0x0000000003295d5a: mov    %rcx,0x70(%rsp)
  0x0000000003295d5f: mov    %rdx,0x68(%rsp)
  0x0000000003295d64: mov    %rbx,0x60(%rsp)
  0x0000000003295d69: mov    %rbp,0x50(%rsp)
  0x0000000003295d6e: mov    %rsi,0x48(%rsp)
  0x0000000003295d73: mov    %rdi,0x40(%rsp)
  0x0000000003295d78: mov    %r8,0x38(%rsp)
  0x0000000003295d7d: mov    %r9,0x30(%rsp)
  0x0000000003295d82: mov    %r10,0x28(%rsp)
  0x0000000003295d87: mov    %r11,0x20(%rsp)
  0x0000000003295d8c: mov    %r12,0x18(%rsp)
  0x0000000003295d91: mov    %r13,0x10(%rsp)
  0x0000000003295d96: mov    %r14,0x8(%rsp)
  0x0000000003295d9b: mov    %r15,(%rsp)
  0x0000000003295d9f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x0000000003295da9: movabs $0x3295d49,%rdx    ;   {internal_word}
  0x0000000003295db3: mov    %rsp,%r8
  0x0000000003295db6: and    $0xfffffffffffffff0,%rsp
  0x0000000003295dba: callq  0x00000000559d3300  ;   {runtime_call}
  0x0000000003295dbf: hlt    
[Deopt Handler Code]
  0x0000000003295dc0: movabs $0x3295dc0,%r10    ;   {section_word}
  0x0000000003295dca: push   %r10
  0x0000000003295dcc: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x0000000003295dd1: hlt    
  0x0000000003295dd2: hlt    
  0x0000000003295dd3: hlt    
  0x0000000003295dd4: hlt    
  0x0000000003295dd5: hlt    
  0x0000000003295dd6: hlt    
  0x0000000003295dd7: hlt    
<nmethod compile_id='15' compiler='C1' level='3' entry='0x00000000032958e0' size='2704' address='0x0000000003295710' relocation_offset='288' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='3535' iicount='3535' stamp='0.483'/>
<writer thread='26572'/>
Decoding compiled method 0x0000000003295350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c153d70} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x30]  (sp of caller)
  0x00000000032954a0: mov    0x8(%rdx),%r10d
  0x00000000032954a4: shl    $0x3,%r10
  0x00000000032954a8: cmp    %r10,%rax
  0x00000000032954ab: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032954b1: data16 xchg %ax,%ax
  0x00000000032954b4: nopl   0x0(%rax,%rax,1)
  0x00000000032954bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032954c0: mov    %eax,-0x6000(%rsp)
  0x00000000032954c7: push   %rbp
  0x00000000032954c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x00000000032954cc: test   %r8d,%r8d
  0x00000000032954cf: jl     0x000000000329550d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00000000032954d1: mov    0xc(%rdx),%r10d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00000000032954d5: mov    0xc(%r12,%r10,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000003295535
  0x00000000032954da: cmp    %ebp,%r8d
  0x00000000032954dd: jge    0x0000000003295521  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00000000032954df: cmp    %ebp,%r8d
  0x00000000032954e2: jae    0x00000000032954fa
  0x00000000032954e4: shl    $0x3,%r10
  0x00000000032954e8: movzwl 0x10(%r10,%r8,2),%eax
  0x00000000032954ee: add    $0x20,%rsp
  0x00000000032954f2: pop    %rbp
  0x00000000032954f3: test   %eax,-0x9a54f9(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032954f9: retq   
  0x00000000032954fa: mov    $0xffffffe4,%edx
  0x00000000032954ff: mov    %r8d,%ebp
  0x0000000003295502: mov    %r10d,(%rsp)
  0x0000000003295506: nop
  0x0000000003295507: callq  0x00000000031d57a0  ; OopMap{[0]=NarrowOop off=108}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000000329550c: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x000000000329550d: mov    %rdx,%rbp
  0x0000000003295510: mov    %r8d,0x4(%rsp)
  0x0000000003295515: mov    $0xffffff65,%edx
  0x000000000329551a: nop
  0x000000000329551b: callq  0x00000000031d57a0  ; OopMap{rbp=Oop off=128}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x0000000003295520: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000003295521: mov    %rdx,(%rsp)
  0x0000000003295525: mov    %r8d,0xc(%rsp)
  0x000000000329552a: mov    $0xffffff65,%edx
  0x000000000329552f: callq  0x00000000031d57a0  ; OopMap{[0]=Oop off=148}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x0000000003295534: int3                      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x0000000003295535: mov    $0xfffffff6,%edx
  0x000000000329553a: nop
  0x000000000329553b: callq  0x00000000031d57a0  ; OopMap{off=160}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x0000000003295540: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x0000000003295541: hlt    
  0x0000000003295542: hlt    
  0x0000000003295543: hlt    
  0x0000000003295544: hlt    
  0x0000000003295545: hlt    
  0x0000000003295546: hlt    
  0x0000000003295547: hlt    
  0x0000000003295548: hlt    
  0x0000000003295549: hlt    
  0x000000000329554a: hlt    
  0x000000000329554b: hlt    
  0x000000000329554c: hlt    
  0x000000000329554d: hlt    
  0x000000000329554e: hlt    
  0x000000000329554f: hlt    
  0x0000000003295550: hlt    
  0x0000000003295551: hlt    
  0x0000000003295552: hlt    
  0x0000000003295553: hlt    
  0x0000000003295554: hlt    
  0x0000000003295555: hlt    
  0x0000000003295556: hlt    
  0x0000000003295557: hlt    
  0x0000000003295558: hlt    
  0x0000000003295559: hlt    
  0x000000000329555a: hlt    
  0x000000000329555b: hlt    
  0x000000000329555c: hlt    
  0x000000000329555d: hlt    
  0x000000000329555e: hlt    
  0x000000000329555f: hlt    
[Exception Handler]
[Stub Code]
  0x0000000003295560: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x0000000003295565: callq  0x000000000329556a
  0x000000000329556a: subq   $0x5,(%rsp)
  0x000000000329556f: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x0000000003295574: hlt    
  0x0000000003295575: hlt    
  0x0000000003295576: hlt    
  0x0000000003295577: hlt    
<nmethod compile_id='14' compiler='C2' level='4' entry='0x00000000032954a0' size='928' address='0x0000000003295350' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='560' scopes_pcs_offset='664' dependencies_offset='904' nul_chk_table_offset='912' method='java/lang/String charAt (I)C' bytes='29' count='243764' iicount='243764' stamp='0.484'/>
<writer thread='4332'/>
Decoding compiled method 0x000000000329f890:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c154fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  0x000000000329f9e0: int3   
  0x000000000329f9e1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x000000000329f9ec: data16 data16 xchg %ax,%ax
  0x000000000329f9f0: mov    %eax,-0x6000(%rsp)
  0x000000000329f9f7: push   %rbp
  0x000000000329f9f8: sub    $0x50,%rsp
  0x000000000329f9fc: mov    (%rdx),%r13d
  0x000000000329f9ff: mov    0x10(%rdx),%ebx
  0x000000000329fa02: mov    0x18(%rdx),%rbp
  0x000000000329fa06: mov    0x8(%rdx),%r14
  0x000000000329fa0a: mov    %rdx,%rcx
  0x000000000329fa0d: movabs $0x5590be80,%r10
  0x000000000329fa17: callq  *%r10
  0x000000000329fa1a: test   %rbp,%rbp
  0x000000000329fa1d: je     0x000000000329fb45
  0x000000000329fa23: mov    0x8(%rbp),%r10d
  0x000000000329fa27: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x000000000329fa2e: jne    0x000000000329fb71
  0x000000000329fa34: mov    %rbp,%rcx
  0x000000000329fa37: test   %r14,%r14
  0x000000000329fa3a: je     0x000000000329fb4c
  0x000000000329fa40: mov    0x8(%r14),%r11d
  0x000000000329fa44: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x000000000329fa4b: jne    0x000000000329fb71  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x000000000329fa51: mov    0xc(%rcx),%r10d    ;*getfield value
                                                ; - java.lang.String::hashCode@26 (line 1470)
                                                ; implicit exception: dispatches to 0x000000000329fb8d
  0x000000000329fa55: mov    0xc(%r12,%r10,8),%esi  ;*arraylength
                                                ; - java.lang.String::hashCode@29 (line 1470)
                                                ; implicit exception: dispatches to 0x000000000329fb8d
  0x000000000329fa5a: cmp    %esi,%r13d
  0x000000000329fa5d: jge    0x000000000329fb34  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000000329fa63: mov    %r13d,%r10d
  0x000000000329fa66: inc    %r10d
  0x000000000329fa69: xor    %r11d,%r11d
  0x000000000329fa6c: cmp    %r11d,%r10d
  0x000000000329fa6f: cmovl  %r11d,%r10d
  0x000000000329fa73: cmp    %esi,%r10d
  0x000000000329fa76: cmovg  %esi,%r10d
  0x000000000329fa7a: mov    0xc(%r14),%edx     ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ; implicit exception: dispatches to 0x000000000329fba9
  0x000000000329fa7e: mov    %ebx,%ebp
  0x000000000329fa80: shl    $0x5,%ebp
  0x000000000329fa83: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000000329fa85: cmp    %edx,%r13d
  0x000000000329fa88: jae    0x000000000329fb54  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000000329fa8e: movzwl 0x10(%r14,%r13,2),%ebx
  0x000000000329fa94: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000000329fa96: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000000329fa99: cmp    %r10d,%r13d
  0x000000000329fa9c: jl     0x000000000329fa7a  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000000329fa9e: cmp    %edx,%esi
  0x000000000329faa0: mov    %esi,%r8d
  0x000000000329faa3: cmovg  %edx,%r8d
  0x000000000329faa7: mov    %r8d,%r10d
  0x000000000329faaa: add    $0xfffffffd,%r10d
  0x000000000329faae: mov    $0x80000000,%r9d
  0x000000000329fab4: cmp    %r10d,%r8d
  0x000000000329fab7: cmovl  %r9d,%r10d
  0x000000000329fabb: cmp    %r10d,%r13d
  0x000000000329fabe: jge    0x000000000329fb10  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000000329fac0: movzwl 0x10(%r14,%r13,2),%r11d
  0x000000000329fac6: movslq %r13d,%rdi
  0x000000000329fac9: movzwl 0x12(%r14,%rdi,2),%r9d
  0x000000000329facf: movzwl 0x16(%r14,%rdi,2),%r8d
  0x000000000329fad5: movzwl 0x14(%r14,%rdi,2),%edi
  0x000000000329fadb: mov    %ebx,%eax
  0x000000000329fadd: shl    $0x5,%eax
  0x000000000329fae0: sub    %ebx,%eax
  0x000000000329fae2: add    %r11d,%eax
  0x000000000329fae5: mov    %eax,%r11d
  0x000000000329fae8: shl    $0x5,%r11d
  0x000000000329faec: sub    %eax,%r11d
  0x000000000329faef: add    %r9d,%r11d
  0x000000000329faf2: mov    %r11d,%eax
  0x000000000329faf5: shl    $0x5,%eax
  0x000000000329faf8: sub    %r11d,%eax
  0x000000000329fafb: add    %edi,%eax
  0x000000000329fafd: mov    %eax,%ebx
  0x000000000329faff: shl    $0x5,%ebx
  0x000000000329fb02: sub    %eax,%ebx
  0x000000000329fb04: add    %r8d,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000000329fb07: add    $0x4,%r13d         ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000000329fb0b: cmp    %r10d,%r13d
  0x000000000329fb0e: jl     0x000000000329fac0  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000000329fb10: cmp    %esi,%r13d
  0x000000000329fb13: jge    0x000000000329fb34
  0x000000000329fb15: data16 xchg %ax,%ax       ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000000329fb18: mov    %ebx,%ebp
  0x000000000329fb1a: shl    $0x5,%ebp
  0x000000000329fb1d: sub    %ebx,%ebp          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x000000000329fb1f: cmp    %edx,%r13d
  0x000000000329fb22: jae    0x000000000329fb54  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000000329fb24: movzwl 0x10(%r14,%r13,2),%ebx
  0x000000000329fb2a: add    %ebp,%ebx          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x000000000329fb2c: inc    %r13d              ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x000000000329fb2f: cmp    %esi,%r13d
  0x000000000329fb32: jl     0x000000000329fb18  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x000000000329fb34: mov    %ebx,0x10(%rcx)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x000000000329fb37: mov    %ebx,%eax
  0x000000000329fb39: add    $0x50,%rsp
  0x000000000329fb3d: pop    %rbp
  0x000000000329fb3e: test   %eax,-0x9afb44(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x000000000329fb44: retq   
  0x000000000329fb45: xor    %ecx,%ecx
  0x000000000329fb47: jmpq   0x000000000329fa37
  0x000000000329fb4c: xor    %r14d,%r14d
  0x000000000329fb4f: jmpq   0x000000000329fa51
  0x000000000329fb54: mov    $0xffffffe4,%edx
  0x000000000329fb59: mov    %r14,0x30(%rsp)
  0x000000000329fb5e: mov    %r13d,0x2c(%rsp)
  0x000000000329fb63: mov    %rcx,0x38(%rsp)
  0x000000000329fb68: data16 xchg %ax,%ax
  0x000000000329fb6b: callq  0x00000000031d57a0  ; OopMap{[48]=Oop [56]=Oop off=400}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x000000000329fb70: int3   
  0x000000000329fb71: mov    $0xffffff9d,%edx
  0x000000000329fb76: mov    %ebx,0x20(%rsp)
  0x000000000329fb7a: mov    %r14,0x28(%rsp)
  0x000000000329fb7f: mov    %r13d,0x24(%rsp)
  0x000000000329fb84: data16 xchg %ax,%ax
  0x000000000329fb87: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [40]=Oop off=428}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x000000000329fb8c: int3   
  0x000000000329fb8d: mov    $0xffffff86,%edx
  0x000000000329fb92: mov    %ebx,%ebp
  0x000000000329fb94: mov    %r14,0x20(%rsp)
  0x000000000329fb99: mov    %r13d,0x28(%rsp)
  0x000000000329fb9e: mov    %rcx,0x30(%rsp)
  0x000000000329fba3: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [48]=Oop off=456}
                                                ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)
                                                ;   {runtime_call}
  0x000000000329fba8: int3   
  0x000000000329fba9: mov    $0xfffffff6,%edx
  0x000000000329fbae: mov    %r13d,%ebp
  0x000000000329fbb1: xchg   %ax,%ax
  0x000000000329fbb3: callq  0x00000000031d57a0  ; OopMap{off=472}
                                                ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)
                                                ;   {runtime_call}
  0x000000000329fbb8: int3                      ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x000000000329fbb9: hlt    
  0x000000000329fbba: hlt    
  0x000000000329fbbb: hlt    
  0x000000000329fbbc: hlt    
  0x000000000329fbbd: hlt    
  0x000000000329fbbe: hlt    
  0x000000000329fbbf: hlt    
[Exception Handler]
[Stub Code]
  0x000000000329fbc0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x000000000329fbc5: callq  0x000000000329fbca
  0x000000000329fbca: subq   $0x5,(%rsp)
  0x000000000329fbcf: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x000000000329fbd4: hlt    
  0x000000000329fbd5: hlt    
  0x000000000329fbd6: hlt    
  0x000000000329fbd7: hlt    
<nmethod compile_id='3' compile_kind='osr' compiler='C2' level='4' entry='0x000000000329f9e0' size='1496' address='0x000000000329f890' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='864' scopes_pcs_offset='1008' dependencies_offset='1456' nul_chk_table_offset='1464' method='java/lang/String hashCode ()I' bytes='55' count='5482' backedge_count='119275' iicount='5482' stamp='0.487'/>
<writer thread='26124'/>
<task_queued compile_id='22' method='java/lang/String length ()I' bytes='6' count='37376' iicount='37376' stamp='0.488' comment='tiered' hot_count='37376'/>
<task_queued compile_id='23' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='9984' iicount='9984' stamp='0.488' comment='tiered' hot_count='9984'/>
<task_queued compile_id='24' method='java/util/HashMap$Node getKey ()Ljava/lang/Object;' bytes='5' count='512' iicount='512' level='1' stamp='0.488' comment='tiered' hot_count='512'/>
<task_queued compile_id='25' method='java/lang/Character toUpperCase (C)C' bytes='6' count='384' iicount='384' level='3' stamp='0.488' comment='tiered' hot_count='384'/>
<task_queued compile_id='26' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='640' iicount='640' level='3' stamp='0.488' comment='tiered' hot_count='640'/>
<writer thread='6664'/>
<task_queued compile_id='27' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='1536' iicount='1536' level='3' stamp='0.488' comment='tiered' hot_count='1536'/>
<writer thread='26124'/>
<task_queued compile_id='28' method='java/lang/String hashCode ()I' bytes='55' count='5489' backedge_count='119369' iicount='5489' stamp='0.489' comment='tiered' hot_count='5489'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032a2450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi       = boolean
  # parm4:    rcx       = boolean
  #           [sp+0xb0]  (sp of caller)
  0x00000000032a26c0: mov    0x8(%rdx),%r10d
  0x00000000032a26c4: shl    $0x3,%r10
  0x00000000032a26c8: cmp    %rax,%r10
  0x00000000032a26cb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a26d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a26dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a26e0: mov    %eax,-0x6000(%rsp)
  0x00000000032a26e7: push   %rbp
  0x00000000032a26e8: sub    $0xa0,%rsp
  0x00000000032a26ef: mov    %rdx,0x48(%rsp)
  0x00000000032a26f4: mov    %r8d,0x40(%rsp)
  0x00000000032a26f9: mov    %r9,0x50(%rsp)
  0x00000000032a26fe: movabs $0x1c342f90,%rbx   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2708: mov    0xdc(%rbx),%eax
  0x00000000032a270e: add    $0x8,%eax
  0x00000000032a2711: mov    %eax,0xdc(%rbx)
  0x00000000032a2717: movabs $0x1c236f88,%rbx   ;   {metadata({method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2721: and    $0x1ff8,%eax
  0x00000000032a2727: cmp    $0x0,%eax
  0x00000000032a272a: je     0x00000000032a379d  ;*aload_0
                                                ; - java.util.HashMap::putVal@0 (line 627)

  0x00000000032a2730: mov    0x24(%rdx),%ebx
  0x00000000032a2733: shl    $0x3,%rbx          ;*getfield table
                                                ; - java.util.HashMap::putVal@1 (line 627)

  0x00000000032a2737: cmp    $0x0,%rbx
  0x00000000032a273b: movabs $0x1c342f90,%rax   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2745: movabs $0x108,%r11
  0x00000000032a274f: je     0x00000000032a275f
  0x00000000032a2755: movabs $0x118,%r11
  0x00000000032a275f: mov    (%rax,%r11,1),%r13
  0x00000000032a2763: lea    0x1(%r13),%r13
  0x00000000032a2767: mov    %r13,(%rax,%r11,1)
  0x00000000032a276b: je     0x00000000032a27bf  ;*ifnull
                                                ; - java.util.HashMap::putVal@7 (line 627)

  0x00000000032a2771: mov    0xc(%rbx),%eax     ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ; implicit exception: dispatches to 0x00000000032a37b4
  0x00000000032a2774: cmp    $0x0,%eax
  0x00000000032a2777: movabs $0x1c342f90,%r11   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2781: movabs $0x128,%r13
  0x00000000032a278b: jne    0x00000000032a279b
  0x00000000032a2791: movabs $0x138,%r13
  0x00000000032a279b: mov    (%r11,%r13,1),%r14
  0x00000000032a279f: lea    0x1(%r14),%r14
  0x00000000032a27a3: mov    %r14,(%r11,%r13,1)
  0x00000000032a27a7: je     0x00000000032a27bf  ;*ifne
                                                ; - java.util.HashMap::putVal@16 (line 627)

  0x00000000032a27ad: mov    %ecx,0x60(%rsp)
  0x00000000032a27b1: mov    %esi,0x44(%rsp)
  0x00000000032a27b5: mov    %rdi,0x58(%rsp)
  0x00000000032a27ba: jmpq   0x00000000032a2879  ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x00000000032a27bf: mov    %ecx,0x60(%rsp)
  0x00000000032a27c3: mov    %esi,0x44(%rsp)
  0x00000000032a27c7: mov    %rdi,0x58(%rsp)
  0x00000000032a27cc: mov    %rdx,%rbx
  0x00000000032a27cf: movabs $0x1c342f90,%rax   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a27d9: mov    0x8(%rbx),%ebx
  0x00000000032a27dc: shl    $0x3,%rbx
  0x00000000032a27e0: cmp    0x150(%rax),%rbx
  0x00000000032a27e7: jne    0x00000000032a27f6
  0x00000000032a27e9: addq   $0x1,0x158(%rax)
  0x00000000032a27f1: jmpq   0x00000000032a285c
  0x00000000032a27f6: cmp    0x160(%rax),%rbx
  0x00000000032a27fd: jne    0x00000000032a280c
  0x00000000032a27ff: addq   $0x1,0x168(%rax)
  0x00000000032a2807: jmpq   0x00000000032a285c
  0x00000000032a280c: cmpq   $0x0,0x150(%rax)
  0x00000000032a2817: jne    0x00000000032a2830
  0x00000000032a2819: mov    %rbx,0x150(%rax)
  0x00000000032a2820: movq   $0x1,0x158(%rax)
  0x00000000032a282b: jmpq   0x00000000032a285c
  0x00000000032a2830: cmpq   $0x0,0x160(%rax)
  0x00000000032a283b: jne    0x00000000032a2854
  0x00000000032a283d: mov    %rbx,0x160(%rax)
  0x00000000032a2844: movq   $0x1,0x168(%rax)
  0x00000000032a284f: jmpq   0x00000000032a285c
  0x00000000032a2854: addq   $0x1,0x148(%rax)
  0x00000000032a285c: mov    %rdx,%rbx
  0x00000000032a285f: mov    %rbx,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x00000000032a2862: nop
  0x00000000032a2863: nop
  0x00000000032a2864: nop
  0x00000000032a2865: nop
  0x00000000032a2866: nop
  0x00000000032a2867: callq  0x00000000031d61a0  ; OopMap{[88]=Oop [80]=Oop [72]=Oop off=428}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)
                                                ;   {optimized virtual_call}
  0x00000000032a286c: mov    %rax,%r8           ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@20 (line 628)

  0x00000000032a286f: mov    0xc(%r8),%r9d      ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ; implicit exception: dispatches to 0x00000000032a37b9
  0x00000000032a2873: mov    %r9,%rax
  0x00000000032a2876: mov    %r8,%rbx           ;*aload
                                                ; - java.util.HashMap::putVal@29 (line 629)

  0x00000000032a2879: dec    %eax
  0x00000000032a287b: and    0x40(%rsp),%eax
  0x00000000032a287f: movslq %eax,%r8
  0x00000000032a2882: cmp    0xc(%rbx),%eax     ; implicit exception: dispatches to 0x00000000032a37be
  0x00000000032a2885: jae    0x00000000032a37c8
  0x00000000032a288b: mov    0x10(%rbx,%r8,4),%esi
  0x00000000032a2890: shl    $0x3,%rsi          ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)

  0x00000000032a2894: cmp    $0x0,%rsi
  0x00000000032a2898: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a28a2: movabs $0x178,%r9
  0x00000000032a28ac: jne    0x00000000032a28bc
  0x00000000032a28b2: movabs $0x188,%r9
  0x00000000032a28bc: mov    (%r8,%r9,1),%rdi
  0x00000000032a28c0: lea    0x1(%rdi),%rdi
  0x00000000032a28c4: mov    %rdi,(%r8,%r9,1)
  0x00000000032a28c8: jne    0x00000000032a2af4  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@44 (line 629)

  0x00000000032a28ce: mov    %eax,0x64(%rsp)
  0x00000000032a28d2: mov    %rbx,0x68(%rsp)
  0x00000000032a28d7: mov    0x48(%rsp),%rdx
  0x00000000032a28dc: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a28e6: mov    0x8(%rdx),%edx
  0x00000000032a28e9: shl    $0x3,%rdx
  0x00000000032a28ed: cmp    0x1a0(%r8),%rdx
  0x00000000032a28f4: jne    0x00000000032a2903
  0x00000000032a28f6: addq   $0x1,0x1a8(%r8)
  0x00000000032a28fe: jmpq   0x00000000032a2969
  0x00000000032a2903: cmp    0x1b0(%r8),%rdx
  0x00000000032a290a: jne    0x00000000032a2919
  0x00000000032a290c: addq   $0x1,0x1b8(%r8)
  0x00000000032a2914: jmpq   0x00000000032a2969
  0x00000000032a2919: cmpq   $0x0,0x1a0(%r8)
  0x00000000032a2924: jne    0x00000000032a293d
  0x00000000032a2926: mov    %rdx,0x1a0(%r8)
  0x00000000032a292d: movq   $0x1,0x1a8(%r8)
  0x00000000032a2938: jmpq   0x00000000032a2969
  0x00000000032a293d: cmpq   $0x0,0x1b0(%r8)
  0x00000000032a2948: jne    0x00000000032a2961
  0x00000000032a294a: mov    %rdx,0x1b0(%r8)
  0x00000000032a2951: movq   $0x1,0x1b8(%r8)
  0x00000000032a295c: jmpq   0x00000000032a2969
  0x00000000032a2961: addq   $0x1,0x198(%r8)
  0x00000000032a2969: mov    0x40(%rsp),%r8d
  0x00000000032a296e: mov    0x50(%rsp),%r9
  0x00000000032a2973: mov    0x58(%rsp),%rdi
  0x00000000032a2978: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000000032a2982: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 630)

  0x00000000032a2987: nop
  0x00000000032a2988: nop
  0x00000000032a2989: nop
  0x00000000032a298a: nop
  0x00000000032a298b: nop
  0x00000000032a298c: nop
  0x00000000032a298d: movabs $0xffffffffffffffff,%rax
  0x00000000032a2997: callq  0x00000000031d63e0  ; OopMap{[72]=Oop [104]=Oop off=732}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@56 (line 630)
                                                ;   {virtual_call}
  0x00000000032a299c: mov    0x64(%rsp),%r8d
  0x00000000032a29a1: movslq %r8d,%rdx
  0x00000000032a29a4: mov    0x68(%rsp),%rbx
  0x00000000032a29a9: lea    0x10(%rbx,%rdx,4),%rdx
  0x00000000032a29ae: cmp    0xc(%rbx),%r8d
  0x00000000032a29b2: jae    0x00000000032a37d1
  0x00000000032a29b8: cmp    $0x0,%rax
  0x00000000032a29bc: jne    0x00000000032a29d7
  0x00000000032a29be: movabs $0x1c342f90,%rsi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a29c8: orl    $0x100,0x1c0(%rsi)
  0x00000000032a29d2: jmpq   0x00000000032a2ac1
  0x00000000032a29d7: mov    0x8(%rbx),%r8d     ; implicit exception: dispatches to 0x00000000032a37da
  0x00000000032a29db: shl    $0x3,%r8
  0x00000000032a29df: mov    0x8(%rax),%esi
  0x00000000032a29e2: shl    $0x3,%rsi
  0x00000000032a29e6: mov    0xf0(%r8),%r8
  0x00000000032a29ed: cmp    %r8,%rsi
  0x00000000032a29f0: je     0x00000000032a2a22
  0x00000000032a29f6: mov    0xc(%r8),%edi
  0x00000000032a29fa: cmp    (%rsi,%rdi,1),%r8
  0x00000000032a29fe: je     0x00000000032a2a22
  0x00000000032a2a04: cmp    $0x18,%edi
  0x00000000032a2a07: jne    0x00000000032a2aaa
  0x00000000032a2a0d: push   %rsi
  0x00000000032a2a0e: push   %r8
  0x00000000032a2a10: callq  0x000000000328fce0  ;   {runtime_call}
  0x00000000032a2a15: pop    %rsi
  0x00000000032a2a16: pop    %r8
  0x00000000032a2a18: cmp    $0x0,%r8d
  0x00000000032a2a1c: je     0x00000000032a2aaa
  0x00000000032a2a22: movabs $0x1c342f90,%rsi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2a2c: mov    0x8(%rax),%r8d
  0x00000000032a2a30: shl    $0x3,%r8
  0x00000000032a2a34: cmp    0x1d0(%rsi),%r8
  0x00000000032a2a3b: jne    0x00000000032a2a4a
  0x00000000032a2a3d: addq   $0x1,0x1d8(%rsi)
  0x00000000032a2a45: jmpq   0x00000000032a2ac1
  0x00000000032a2a4a: cmp    0x1e0(%rsi),%r8
  0x00000000032a2a51: jne    0x00000000032a2a60
  0x00000000032a2a53: addq   $0x1,0x1e8(%rsi)
  0x00000000032a2a5b: jmpq   0x00000000032a2ac1
  0x00000000032a2a60: cmpq   $0x0,0x1d0(%rsi)
  0x00000000032a2a6b: jne    0x00000000032a2a84
  0x00000000032a2a6d: mov    %r8,0x1d0(%rsi)
  0x00000000032a2a74: movq   $0x1,0x1d8(%rsi)
  0x00000000032a2a7f: jmpq   0x00000000032a2ac1
  0x00000000032a2a84: cmpq   $0x0,0x1e0(%rsi)
  0x00000000032a2a8f: jne    0x00000000032a2aa8
  0x00000000032a2a91: mov    %r8,0x1e0(%rsi)
  0x00000000032a2a98: movq   $0x1,0x1e8(%rsi)
  0x00000000032a2aa3: jmpq   0x00000000032a2ac1
  0x00000000032a2aa8: jmp    0x00000000032a2ac1
  0x00000000032a2aaa: movabs $0x1c342f90,%rsi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2ab4: subq   $0x1,0x1c8(%rsi)
  0x00000000032a2abc: jmpq   0x00000000032a37df
  0x00000000032a2ac1: mov    %rax,%r10
  0x00000000032a2ac4: shr    $0x3,%r10
  0x00000000032a2ac8: mov    %r10d,(%rdx)
  0x00000000032a2acb: shr    $0x9,%rdx
  0x00000000032a2acf: movabs $0xef3d000,%r8
  0x00000000032a2ad9: movb   $0x0,(%rdx,%r8,1)  ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)

  0x00000000032a2ade: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2ae8: incl   0x1f8(%r8)
  0x00000000032a2aef: jmpq   0x00000000032a3468  ;*goto
                                                ; - java.util.HashMap::putVal@60 (line 630)

  0x00000000032a2af4: mov    0xc(%rsi),%r8d     ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ; implicit exception: dispatches to 0x00000000032a37e8
  0x00000000032a2af8: cmp    0x40(%rsp),%r8d
  0x00000000032a2afd: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2b07: movabs $0x210,%rdx
  0x00000000032a2b11: jne    0x00000000032a2b21
  0x00000000032a2b17: movabs $0x220,%rdx
  0x00000000032a2b21: mov    (%r8,%rdx,1),%rdi
  0x00000000032a2b25: lea    0x1(%rdi),%rdi
  0x00000000032a2b29: mov    %rdi,(%r8,%rdx,1)
  0x00000000032a2b2d: je     0x00000000032a2b3d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@69 (line 633)

  0x00000000032a2b33: mov    %rbx,0x68(%rsp)
  0x00000000032a2b38: jmpq   0x00000000032a2cba  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x00000000032a2b3d: mov    0x50(%rsp),%r9
  0x00000000032a2b42: mov    0x10(%rsi),%r8d
  0x00000000032a2b46: shl    $0x3,%r8           ;*getfield key
                                                ; - java.util.HashMap::putVal@74 (line 633)

  0x00000000032a2b4a: cmp    %r9,%r8
  0x00000000032a2b4d: movabs $0x1c342f90,%rdx   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2b57: movabs $0x230,%rdi
  0x00000000032a2b61: je     0x00000000032a2b71
  0x00000000032a2b67: movabs $0x240,%rdi
  0x00000000032a2b71: mov    (%rdx,%rdi,1),%rax
  0x00000000032a2b75: lea    0x1(%rax),%rax
  0x00000000032a2b79: mov    %rax,(%rdx,%rdi,1)
  0x00000000032a2b7d: je     0x00000000032a341a  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@81 (line 633)

  0x00000000032a2b83: cmp    $0x0,%r9
  0x00000000032a2b87: movabs $0x1c342f90,%rdx   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2b91: movabs $0x250,%rdi
  0x00000000032a2b9b: je     0x00000000032a2bab
  0x00000000032a2ba1: movabs $0x260,%rdi
  0x00000000032a2bab: mov    (%rdx,%rdi,1),%rax
  0x00000000032a2baf: lea    0x1(%rax),%rax
  0x00000000032a2bb3: mov    %rax,(%rdx,%rdi,1)
  0x00000000032a2bb7: jne    0x00000000032a2bc7  ;*ifnull
                                                ; - java.util.HashMap::putVal@85 (line 633)

  0x00000000032a2bbd: mov    %rbx,0x68(%rsp)
  0x00000000032a2bc2: jmpq   0x00000000032a2cba  ;*aload
                                                ; - java.util.HashMap::putVal@104 (line 636)

  0x00000000032a2bc7: mov    %rsi,0x70(%rsp)
  0x00000000032a2bcc: mov    %rbx,0x68(%rsp)
  0x00000000032a2bd1: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000000032a37ed
  0x00000000032a2bd4: mov    %r9,%rdx
  0x00000000032a2bd7: movabs $0x1c342f90,%rdi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2be1: mov    0x8(%rdx),%edx
  0x00000000032a2be4: shl    $0x3,%rdx
  0x00000000032a2be8: cmp    0x278(%rdi),%rdx
  0x00000000032a2bef: jne    0x00000000032a2bfe
  0x00000000032a2bf1: addq   $0x1,0x280(%rdi)
  0x00000000032a2bf9: jmpq   0x00000000032a2c64
  0x00000000032a2bfe: cmp    0x288(%rdi),%rdx
  0x00000000032a2c05: jne    0x00000000032a2c14
  0x00000000032a2c07: addq   $0x1,0x290(%rdi)
  0x00000000032a2c0f: jmpq   0x00000000032a2c64
  0x00000000032a2c14: cmpq   $0x0,0x278(%rdi)
  0x00000000032a2c1f: jne    0x00000000032a2c38
  0x00000000032a2c21: mov    %rdx,0x278(%rdi)
  0x00000000032a2c28: movq   $0x1,0x280(%rdi)
  0x00000000032a2c33: jmpq   0x00000000032a2c64
  0x00000000032a2c38: cmpq   $0x0,0x288(%rdi)
  0x00000000032a2c43: jne    0x00000000032a2c5c
  0x00000000032a2c45: mov    %rdx,0x288(%rdi)
  0x00000000032a2c4c: movq   $0x1,0x290(%rdi)
  0x00000000032a2c57: jmpq   0x00000000032a2c64
  0x00000000032a2c5c: addq   $0x1,0x270(%rdi)
  0x00000000032a2c64: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)

  0x00000000032a2c67: nop
  0x00000000032a2c68: nop
  0x00000000032a2c69: nop
  0x00000000032a2c6a: nop
  0x00000000032a2c6b: nop
  0x00000000032a2c6c: nop
  0x00000000032a2c6d: movabs $0xffffffffffffffff,%rax
  0x00000000032a2c77: callq  0x00000000031d63e0  ; OopMap{[72]=Oop [88]=Oop [80]=Oop [112]=Oop [104]=Oop off=1468}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {virtual_call}
  0x00000000032a2c7c: cmp    $0x0,%eax
  0x00000000032a2c7f: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2c89: movabs $0x2a0,%r9
  0x00000000032a2c93: je     0x00000000032a2ca3
  0x00000000032a2c99: movabs $0x2b0,%r9
  0x00000000032a2ca3: mov    (%r8,%r9,1),%rdi
  0x00000000032a2ca7: lea    0x1(%rdi),%rdi
  0x00000000032a2cab: mov    %rdi,(%r8,%r9,1)
  0x00000000032a2caf: mov    0x70(%rsp),%rsi
  0x00000000032a2cb4: jne    0x00000000032a341a  ;*ifeq
                                                ; - java.util.HashMap::putVal@94 (line 634)

  0x00000000032a2cba: cmp    $0x0,%rsi
  0x00000000032a2cbe: jne    0x00000000032a2cd9
  0x00000000032a2cc0: movabs $0x1c342f90,%rdi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2cca: orl    $0x100,0x2d0(%rdi)
  0x00000000032a2cd4: jmpq   0x00000000032a2d9a
  0x00000000032a2cd9: movabs $0x7c0039768,%rcx  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000000032a2ce3: mov    0x8(%rsi),%r9d
  0x00000000032a2ce7: shl    $0x3,%r9
  0x00000000032a2ceb: cmp    %r9,%rcx
  0x00000000032a2cee: jne    0x00000000032a2d7e
  0x00000000032a2cf4: movabs $0x1c342f90,%rdi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2cfe: mov    0x8(%rsi),%ecx
  0x00000000032a2d01: shl    $0x3,%rcx
  0x00000000032a2d05: cmp    0x2e0(%rdi),%rcx
  0x00000000032a2d0c: jne    0x00000000032a2d1b
  0x00000000032a2d0e: addq   $0x1,0x2e8(%rdi)
  0x00000000032a2d16: jmpq   0x00000000032a2d9f
  0x00000000032a2d1b: cmp    0x2f0(%rdi),%rcx
  0x00000000032a2d22: jne    0x00000000032a2d31
  0x00000000032a2d24: addq   $0x1,0x2f8(%rdi)
  0x00000000032a2d2c: jmpq   0x00000000032a2d9f
  0x00000000032a2d31: cmpq   $0x0,0x2e0(%rdi)
  0x00000000032a2d3c: jne    0x00000000032a2d55
  0x00000000032a2d3e: mov    %rcx,0x2e0(%rdi)
  0x00000000032a2d45: movq   $0x1,0x2e8(%rdi)
  0x00000000032a2d50: jmpq   0x00000000032a2d9f
  0x00000000032a2d55: cmpq   $0x0,0x2f0(%rdi)
  0x00000000032a2d60: jne    0x00000000032a2d79
  0x00000000032a2d62: mov    %rcx,0x2f0(%rdi)
  0x00000000032a2d69: movq   $0x1,0x2f8(%rdi)
  0x00000000032a2d74: jmpq   0x00000000032a2d9f
  0x00000000032a2d79: jmpq   0x00000000032a2d9f
  0x00000000032a2d7e: movabs $0x1c342f90,%rdi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2d88: subq   $0x1,0x2d8(%rdi)
  0x00000000032a2d90: jmpq   0x00000000032a2d9a
  0x00000000032a2d95: jmpq   0x00000000032a2d9f
  0x00000000032a2d9a: xor    %r8,%r8
  0x00000000032a2d9d: jmp    0x00000000032a2da9
  0x00000000032a2d9f: movabs $0x1,%r8           ;*instanceof
                                                ; - java.util.HashMap::putVal@106 (line 636)

  0x00000000032a2da9: cmp    $0x0,%r8d
  0x00000000032a2dad: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2db7: movabs $0x308,%r9
  0x00000000032a2dc1: je     0x00000000032a2dd1
  0x00000000032a2dc7: movabs $0x318,%r9
  0x00000000032a2dd1: mov    (%r8,%r9,1),%rdi
  0x00000000032a2dd5: lea    0x1(%rdi),%rdi
  0x00000000032a2dd9: mov    %rdi,(%r8,%r9,1)
  0x00000000032a2ddd: je     0x00000000032a2f92  ;*ifeq
                                                ; - java.util.HashMap::putVal@109 (line 636)

  0x00000000032a2de3: cmp    $0x0,%rsi
  0x00000000032a2de7: jne    0x00000000032a2e03
  0x00000000032a2de9: movabs $0x1c342f90,%r9    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2df3: orl    $0x100,0x320(%r9)
  0x00000000032a2dfe: jmpq   0x00000000032a2ec4
  0x00000000032a2e03: movabs $0x7c0039768,%rdi  ;   {metadata(&apos;java/util/HashMap$TreeNode&apos;)}
  0x00000000032a2e0d: mov    0x8(%rsi),%r8d
  0x00000000032a2e11: shl    $0x3,%r8
  0x00000000032a2e15: cmp    %r8,%rdi
  0x00000000032a2e18: jne    0x00000000032a2ea8
  0x00000000032a2e1e: movabs $0x1c342f90,%r9    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2e28: mov    0x8(%rsi),%edi
  0x00000000032a2e2b: shl    $0x3,%rdi
  0x00000000032a2e2f: cmp    0x330(%r9),%rdi
  0x00000000032a2e36: jne    0x00000000032a2e45
  0x00000000032a2e38: addq   $0x1,0x338(%r9)
  0x00000000032a2e40: jmpq   0x00000000032a2ec4
  0x00000000032a2e45: cmp    0x340(%r9),%rdi
  0x00000000032a2e4c: jne    0x00000000032a2e5b
  0x00000000032a2e4e: addq   $0x1,0x348(%r9)
  0x00000000032a2e56: jmpq   0x00000000032a2ec4
  0x00000000032a2e5b: cmpq   $0x0,0x330(%r9)
  0x00000000032a2e66: jne    0x00000000032a2e7f
  0x00000000032a2e68: mov    %rdi,0x330(%r9)
  0x00000000032a2e6f: movq   $0x1,0x338(%r9)
  0x00000000032a2e7a: jmpq   0x00000000032a2ec4
  0x00000000032a2e7f: cmpq   $0x0,0x340(%r9)
  0x00000000032a2e8a: jne    0x00000000032a2ea3
  0x00000000032a2e8c: mov    %rdi,0x340(%r9)
  0x00000000032a2e93: movq   $0x1,0x348(%r9)
  0x00000000032a2e9e: jmpq   0x00000000032a2ec4
  0x00000000032a2ea3: jmpq   0x00000000032a2ec4
  0x00000000032a2ea8: movabs $0x1c342f90,%r9    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2eb2: subq   $0x1,0x328(%r9)
  0x00000000032a2eba: jmpq   0x00000000032a37f2
  0x00000000032a2ebf: jmpq   0x00000000032a2ec4
  0x00000000032a2ec4: mov    %rsi,%rdx          ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 637)

  0x00000000032a2ec7: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000032a37fb
  0x00000000032a2eca: mov    %rdx,%r8
  0x00000000032a2ecd: movabs $0x1c342f90,%r9    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2ed7: mov    0x8(%r8),%r8d
  0x00000000032a2edb: shl    $0x3,%r8
  0x00000000032a2edf: cmp    0x360(%r9),%r8
  0x00000000032a2ee6: jne    0x00000000032a2ef5
  0x00000000032a2ee8: addq   $0x1,0x368(%r9)
  0x00000000032a2ef0: jmpq   0x00000000032a2f5b
  0x00000000032a2ef5: cmp    0x370(%r9),%r8
  0x00000000032a2efc: jne    0x00000000032a2f0b
  0x00000000032a2efe: addq   $0x1,0x378(%r9)
  0x00000000032a2f06: jmpq   0x00000000032a2f5b
  0x00000000032a2f0b: cmpq   $0x0,0x360(%r9)
  0x00000000032a2f16: jne    0x00000000032a2f2f
  0x00000000032a2f18: mov    %r8,0x360(%r9)
  0x00000000032a2f1f: movq   $0x1,0x368(%r9)
  0x00000000032a2f2a: jmpq   0x00000000032a2f5b
  0x00000000032a2f2f: cmpq   $0x0,0x370(%r9)
  0x00000000032a2f3a: jne    0x00000000032a2f53
  0x00000000032a2f3c: mov    %r8,0x370(%r9)
  0x00000000032a2f43: movq   $0x1,0x378(%r9)
  0x00000000032a2f4e: jmpq   0x00000000032a2f5b
  0x00000000032a2f53: addq   $0x1,0x358(%r9)
  0x00000000032a2f5b: mov    0x48(%rsp),%r8
  0x00000000032a2f60: mov    0x68(%rsp),%r9
  0x00000000032a2f65: mov    0x40(%rsp),%edi
  0x00000000032a2f69: mov    0x50(%rsp),%rsi
  0x00000000032a2f6e: mov    0x58(%rsp),%rcx    ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)

  0x00000000032a2f73: nop
  0x00000000032a2f74: nop
  0x00000000032a2f75: nop
  0x00000000032a2f76: nop
  0x00000000032a2f77: callq  0x00000000031d61a0  ; OopMap{[72]=Oop [88]=Oop off=2236}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {optimized virtual_call}
  0x00000000032a2f7c: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2f86: incl   0x388(%r8)
  0x00000000032a2f8d: jmpq   0x00000000032a342e  ;*goto
                                                ; - java.util.HashMap::putVal@128 (line 637)

  0x00000000032a2f92: mov    $0x0,%edi          ;*aload
                                                ; - java.util.HashMap::putVal@134 (line 640)

  0x00000000032a2f97: nop
  0x00000000032a2f98: mov    %edi,0x78(%rsp)
  0x00000000032a2f9c: mov    0x50(%rsp),%r9
  0x00000000032a2fa1: mov    0x40(%rsp),%r8d
  0x00000000032a2fa6: mov    0x18(%rsi),%ebx    ; implicit exception: dispatches to 0x00000000032a3800
  0x00000000032a2fa9: shl    $0x3,%rbx          ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 640)

  0x00000000032a2fad: mov    %rbx,0x80(%rsp)
  0x00000000032a2fb5: cmp    $0x0,%rbx
  0x00000000032a2fb9: movabs $0x1c342f90,%rdx   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2fc3: movabs $0x3a0,%rax
  0x00000000032a2fcd: jne    0x00000000032a2fdd
  0x00000000032a2fd3: movabs $0x3b0,%rax
  0x00000000032a2fdd: mov    (%rdx,%rax,1),%rcx
  0x00000000032a2fe1: lea    0x1(%rcx),%rcx
  0x00000000032a2fe5: mov    %rcx,(%rdx,%rax,1)
  0x00000000032a2fe9: je     0x00000000032a3219  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@142 (line 640)

  0x00000000032a2fef: mov    0xc(%rbx),%edx     ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ; implicit exception: dispatches to 0x00000000032a3805
  0x00000000032a2ff2: cmp    %r8d,%edx
  0x00000000032a2ff5: movabs $0x1c342f90,%rdx   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a2fff: movabs $0x458,%rsi
  0x00000000032a3009: jne    0x00000000032a3019
  0x00000000032a300f: movabs $0x468,%rsi
  0x00000000032a3019: mov    (%rdx,%rsi,1),%rax
  0x00000000032a301d: lea    0x1(%rax),%rax
  0x00000000032a3021: mov    %rax,(%rdx,%rsi,1)
  0x00000000032a3025: jne    0x00000000032a318d  ;*if_icmpne
                                                ; - java.util.HashMap::putVal@181 (line 646)

  0x00000000032a302b: mov    0x10(%rbx),%edx
  0x00000000032a302e: shl    $0x3,%rdx          ;*getfield key
                                                ; - java.util.HashMap::putVal@186 (line 646)

  0x00000000032a3032: cmp    %r9,%rdx
  0x00000000032a3035: movabs $0x1c342f90,%rsi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a303f: movabs $0x478,%rax
  0x00000000032a3049: je     0x00000000032a3059
  0x00000000032a304f: movabs $0x488,%rax
  0x00000000032a3059: mov    (%rsi,%rax,1),%rcx
  0x00000000032a305d: lea    0x1(%rcx),%rcx
  0x00000000032a3061: mov    %rcx,(%rsi,%rax,1)
  0x00000000032a3065: je     0x00000000032a31ee  ;*if_acmpeq
                                                ; - java.util.HashMap::putVal@193 (line 646)

  0x00000000032a306b: cmp    $0x0,%r9
  0x00000000032a306f: movabs $0x1c342f90,%rsi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3079: movabs $0x498,%rax
  0x00000000032a3083: je     0x00000000032a3093
  0x00000000032a3089: movabs $0x4a8,%rax
  0x00000000032a3093: mov    (%rsi,%rax,1),%rcx
  0x00000000032a3097: lea    0x1(%rcx),%rcx
  0x00000000032a309b: mov    %rcx,(%rsi,%rax,1)
  0x00000000032a309f: je     0x00000000032a318d  ;*ifnull
                                                ; - java.util.HashMap::putVal@197 (line 646)

  0x00000000032a30a5: cmp    (%r9),%rax         ; implicit exception: dispatches to 0x00000000032a380a
  0x00000000032a30a8: mov    %r9,%rsi
  0x00000000032a30ab: movabs $0x1c342f90,%rax   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a30b5: mov    0x8(%rsi),%esi
  0x00000000032a30b8: shl    $0x3,%rsi
  0x00000000032a30bc: cmp    0x4c0(%rax),%rsi
  0x00000000032a30c3: jne    0x00000000032a30d2
  0x00000000032a30c5: addq   $0x1,0x4c8(%rax)
  0x00000000032a30cd: jmpq   0x00000000032a3138
  0x00000000032a30d2: cmp    0x4d0(%rax),%rsi
  0x00000000032a30d9: jne    0x00000000032a30e8
  0x00000000032a30db: addq   $0x1,0x4d8(%rax)
  0x00000000032a30e3: jmpq   0x00000000032a3138
  0x00000000032a30e8: cmpq   $0x0,0x4c0(%rax)
  0x00000000032a30f3: jne    0x00000000032a310c
  0x00000000032a30f5: mov    %rsi,0x4c0(%rax)
  0x00000000032a30fc: movq   $0x1,0x4c8(%rax)
  0x00000000032a3107: jmpq   0x00000000032a3138
  0x00000000032a310c: cmpq   $0x0,0x4d0(%rax)
  0x00000000032a3117: jne    0x00000000032a3130
  0x00000000032a3119: mov    %rsi,0x4d0(%rax)
  0x00000000032a3120: movq   $0x1,0x4d8(%rax)
  0x00000000032a312b: jmpq   0x00000000032a3138
  0x00000000032a3130: addq   $0x1,0x4b8(%rax)
  0x00000000032a3138: mov    %rdx,%r8
  0x00000000032a313b: mov    %r9,%rdx           ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)

  0x00000000032a313e: nop
  0x00000000032a313f: nop
  0x00000000032a3140: nop
  0x00000000032a3141: nop
  0x00000000032a3142: nop
  0x00000000032a3143: nop
  0x00000000032a3144: nop
  0x00000000032a3145: movabs $0xffffffffffffffff,%rax
  0x00000000032a314f: callq  0x00000000031d63e0  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2708}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {virtual_call}
  0x00000000032a3154: cmp    $0x0,%eax
  0x00000000032a3157: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3161: movabs $0x4e8,%r9
  0x00000000032a316b: je     0x00000000032a317b
  0x00000000032a3171: movabs $0x4f8,%r9
  0x00000000032a317b: mov    (%r8,%r9,1),%rdi
  0x00000000032a317f: lea    0x1(%rdi),%rdi
  0x00000000032a3183: mov    %rdi,(%r8,%r9,1)
  0x00000000032a3187: jne    0x00000000032a31fb  ;*ifeq
                                                ; - java.util.HashMap::putVal@206 (line 647)

  0x00000000032a318d: mov    0x78(%rsp),%edi
  0x00000000032a3191: inc    %edi
  0x00000000032a3193: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a319d: mov    0xe0(%r8),%r9d
  0x00000000032a31a4: add    $0x8,%r9d
  0x00000000032a31a8: mov    %r9d,0xe0(%r8)
  0x00000000032a31af: movabs $0x1c236f88,%r8    ;   {metadata({method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a31b9: and    $0xfff8,%r9d
  0x00000000032a31c0: cmp    $0x0,%r9d
  0x00000000032a31c4: je     0x00000000032a380f  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=2826}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x00000000032a31ca: test   %eax,-0x9b30d0(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032a31d0: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a31da: incl   0x520(%r8)
  0x00000000032a31e1: mov    0x80(%rsp),%rsi
  0x00000000032a31e9: jmpq   0x00000000032a2f98  ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)

  0x00000000032a31ee: mov    0x80(%rsp),%rax
  0x00000000032a31f6: jmpq   0x00000000032a342e  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x00000000032a31fb: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3205: incl   0x508(%r8)
  0x00000000032a320c: mov    0x80(%rsp),%rax
  0x00000000032a3214: jmpq   0x00000000032a342e  ;*goto
                                                ; - java.util.HashMap::putVal@209 (line 648)

  0x00000000032a3219: mov    %rsi,0x88(%rsp)
  0x00000000032a3221: mov    0x48(%rsp),%rdx
  0x00000000032a3226: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3230: mov    0x8(%rdx),%edx
  0x00000000032a3233: shl    $0x3,%rdx
  0x00000000032a3237: cmp    0x3c8(%r8),%rdx
  0x00000000032a323e: jne    0x00000000032a324d
  0x00000000032a3240: addq   $0x1,0x3d0(%r8)
  0x00000000032a3248: jmpq   0x00000000032a32b3
  0x00000000032a324d: cmp    0x3d8(%r8),%rdx
  0x00000000032a3254: jne    0x00000000032a3263
  0x00000000032a3256: addq   $0x1,0x3e0(%r8)
  0x00000000032a325e: jmpq   0x00000000032a32b3
  0x00000000032a3263: cmpq   $0x0,0x3c8(%r8)
  0x00000000032a326e: jne    0x00000000032a3287
  0x00000000032a3270: mov    %rdx,0x3c8(%r8)
  0x00000000032a3277: movq   $0x1,0x3d0(%r8)
  0x00000000032a3282: jmpq   0x00000000032a32b3
  0x00000000032a3287: cmpq   $0x0,0x3d8(%r8)
  0x00000000032a3292: jne    0x00000000032a32ab
  0x00000000032a3294: mov    %rdx,0x3d8(%r8)
  0x00000000032a329b: movq   $0x1,0x3e0(%r8)
  0x00000000032a32a6: jmpq   0x00000000032a32b3
  0x00000000032a32ab: addq   $0x1,0x3c0(%r8)
  0x00000000032a32b3: mov    0x40(%rsp),%r8d
  0x00000000032a32b8: mov    0x58(%rsp),%rdi
  0x00000000032a32bd: movabs $0x0,%rsi          ;   {oop(NULL)}
  0x00000000032a32c7: mov    0x48(%rsp),%rdx    ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 641)

  0x00000000032a32cc: nop
  0x00000000032a32cd: movabs $0xffffffffffffffff,%rax
  0x00000000032a32d7: callq  0x00000000031d63e0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop [104]=Oop [136]=Oop off=3100}
                                                ;*invokevirtual newNode
                                                ; - java.util.HashMap::putVal@152 (line 641)
                                                ;   {virtual_call}
  0x00000000032a32dc: mov    0x88(%rsp),%rsi
  0x00000000032a32e4: mov    %rax,%r10
  0x00000000032a32e7: shr    $0x3,%r10
  0x00000000032a32eb: mov    %r10d,0x18(%rsi)
  0x00000000032a32ef: shr    $0x9,%rsi
  0x00000000032a32f3: movabs $0xef3d000,%r8
  0x00000000032a32fd: movb   $0x0,(%rsi,%r8,1)  ;*putfield next
                                                ; - java.util.HashMap::putVal@155 (line 641)

  0x00000000032a3302: mov    0x78(%rsp),%edi
  0x00000000032a3306: cmp    $0x7,%edi
  0x00000000032a3309: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3313: movabs $0x3f0,%r9
  0x00000000032a331d: jl     0x00000000032a332d
  0x00000000032a3323: movabs $0x400,%r9
  0x00000000032a332d: mov    (%r8,%r9,1),%rdx
  0x00000000032a3331: lea    0x1(%rdx),%rdx
  0x00000000032a3335: mov    %rdx,(%r8,%r9,1)
  0x00000000032a3339: jge    0x00000000032a334c  ;*if_icmplt
                                                ; - java.util.HashMap::putVal@162 (line 642)

  0x00000000032a333f: mov    0x80(%rsp),%rax
  0x00000000032a3347: jmpq   0x00000000032a342e  ;*aload
                                                ; - java.util.HashMap::putVal@222 (line 652)

  0x00000000032a334c: mov    0x68(%rsp),%rbx
  0x00000000032a3351: mov    0x40(%rsp),%r9d
  0x00000000032a3356: mov    0x48(%rsp),%rdx
  0x00000000032a335b: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3365: mov    0x8(%rdx),%edx
  0x00000000032a3368: shl    $0x3,%rdx
  0x00000000032a336c: cmp    0x418(%r8),%rdx
  0x00000000032a3373: jne    0x00000000032a3382
  0x00000000032a3375: addq   $0x1,0x420(%r8)
  0x00000000032a337d: jmpq   0x00000000032a33e8
  0x00000000032a3382: cmp    0x428(%r8),%rdx
  0x00000000032a3389: jne    0x00000000032a3398
  0x00000000032a338b: addq   $0x1,0x430(%r8)
  0x00000000032a3393: jmpq   0x00000000032a33e8
  0x00000000032a3398: cmpq   $0x0,0x418(%r8)
  0x00000000032a33a3: jne    0x00000000032a33bc
  0x00000000032a33a5: mov    %rdx,0x418(%r8)
  0x00000000032a33ac: movq   $0x1,0x420(%r8)
  0x00000000032a33b7: jmpq   0x00000000032a33e8
  0x00000000032a33bc: cmpq   $0x0,0x428(%r8)
  0x00000000032a33c7: jne    0x00000000032a33e0
  0x00000000032a33c9: mov    %rdx,0x428(%r8)
  0x00000000032a33d0: movq   $0x1,0x430(%r8)
  0x00000000032a33db: jmpq   0x00000000032a33e8
  0x00000000032a33e0: addq   $0x1,0x410(%r8)
  0x00000000032a33e8: mov    %rbx,%r8
  0x00000000032a33eb: mov    0x48(%rsp),%rdx    ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 643)

  0x00000000032a33f0: nop
  0x00000000032a33f1: nop
  0x00000000032a33f2: nop
  0x00000000032a33f3: nop
  0x00000000032a33f4: nop
  0x00000000032a33f5: nop
  0x00000000032a33f6: nop
  0x00000000032a33f7: callq  0x00000000031d61a0  ; OopMap{[72]=Oop [88]=Oop [128]=Oop off=3388}
                                                ;*invokevirtual treeifyBin
                                                ; - java.util.HashMap::putVal@169 (line 643)
                                                ;   {optimized virtual_call}
  0x00000000032a33fc: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3406: incl   0x440(%r8)
  0x00000000032a340d: mov    0x80(%rsp),%rax
  0x00000000032a3415: jmpq   0x00000000032a342e  ;*goto
                                                ; - java.util.HashMap::putVal@172 (line 643)

  0x00000000032a341a: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3424: incl   0x2c0(%r8)
  0x00000000032a342b: mov    %rsi,%rax          ;*goto
                                                ; - java.util.HashMap::putVal@101 (line 635)

  0x00000000032a342e: cmp    $0x0,%rax
  0x00000000032a3432: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a343c: movabs $0x538,%rdx
  0x00000000032a3446: je     0x00000000032a3456
  0x00000000032a344c: movabs $0x548,%rdx
  0x00000000032a3456: mov    (%r8,%rdx,1),%rsi
  0x00000000032a345a: lea    0x1(%rsi),%rsi
  0x00000000032a345e: mov    %rsi,(%r8,%rdx,1)
  0x00000000032a3462: jne    0x00000000032a34c8  ;*ifnull
                                                ; - java.util.HashMap::putVal@224 (line 652)

  0x00000000032a3468: mov    0x48(%rsp),%rdx
  0x00000000032a346d: mov    0x18(%rdx),%r8d    ;*getfield modCount
                                                ; - java.util.HashMap::putVal@261 (line 660)

  0x00000000032a3471: inc    %r8d
  0x00000000032a3474: mov    %r8d,0x18(%rdx)    ;*putfield modCount
                                                ; - java.util.HashMap::putVal@266 (line 660)

  0x00000000032a3478: mov    0x14(%rdx),%r8d    ;*getfield size
                                                ; - java.util.HashMap::putVal@271 (line 661)

  0x00000000032a347c: inc    %r8d
  0x00000000032a347f: mov    %r8d,0x14(%rdx)    ;*putfield size
                                                ; - java.util.HashMap::putVal@277 (line 661)

  0x00000000032a3483: mov    0x1c(%rdx),%esi    ;*getfield threshold
                                                ; - java.util.HashMap::putVal@281 (line 661)

  0x00000000032a3486: cmp    %esi,%r8d
  0x00000000032a3489: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3493: movabs $0x5c8,%rsi
  0x00000000032a349d: jle    0x00000000032a34ad
  0x00000000032a34a3: movabs $0x5d8,%rsi
  0x00000000032a34ad: mov    (%r8,%rsi,1),%rdi
  0x00000000032a34b1: lea    0x1(%rdi),%rdi
  0x00000000032a34b5: mov    %rdi,(%r8,%rsi,1)
  0x00000000032a34b9: jg     0x00000000032a3633  ;*if_icmple
                                                ; - java.util.HashMap::putVal@284 (line 661)

  0x00000000032a34bf: mov    0x60(%rsp),%ecx
  0x00000000032a34c3: jmpq   0x00000000032a36dd  ;*aload_0
                                                ; - java.util.HashMap::putVal@292 (line 663)

  0x00000000032a34c8: mov    0x44(%rsp),%esi
  0x00000000032a34cc: mov    0x48(%rsp),%rdx
  0x00000000032a34d1: mov    0x14(%rax),%edi    ; implicit exception: dispatches to 0x00000000032a3826
  0x00000000032a34d4: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 653)

  0x00000000032a34d8: cmp    $0x0,%esi
  0x00000000032a34db: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a34e5: movabs $0x558,%rsi
  0x00000000032a34ef: je     0x00000000032a34ff
  0x00000000032a34f5: movabs $0x568,%rsi
  0x00000000032a34ff: mov    (%r8,%rsi,1),%rbx
  0x00000000032a3503: lea    0x1(%rbx),%rbx
  0x00000000032a3507: mov    %rbx,(%r8,%rsi,1)
  0x00000000032a350b: je     0x00000000032a354b  ;*ifeq
                                                ; - java.util.HashMap::putVal@236 (line 654)

  0x00000000032a3511: cmp    $0x0,%rdi
  0x00000000032a3515: movabs $0x1c342f90,%r8    ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a351f: movabs $0x578,%rsi
  0x00000000032a3529: jne    0x00000000032a3539
  0x00000000032a352f: movabs $0x588,%rsi
  0x00000000032a3539: mov    (%r8,%rsi,1),%rbx
  0x00000000032a353d: lea    0x1(%rbx),%rbx
  0x00000000032a3541: mov    %rbx,(%r8,%rsi,1)
  0x00000000032a3545: jne    0x00000000032a3571  ;*ifnonnull
                                                ; - java.util.HashMap::putVal@241 (line 654)

  0x00000000032a354b: mov    0x58(%rsp),%r8
  0x00000000032a3550: mov    %r8,%r10
  0x00000000032a3553: shr    $0x3,%r10
  0x00000000032a3557: mov    %r10d,0x14(%rax)
  0x00000000032a355b: mov    %rax,%r8
  0x00000000032a355e: shr    $0x9,%r8
  0x00000000032a3562: movabs $0xef3d000,%rsi
  0x00000000032a356c: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.util.HashMap::putVal@247 (line 655)

  0x00000000032a3571: mov    %rdi,0x90(%rsp)
  0x00000000032a3579: mov    %rdx,%r8
  0x00000000032a357c: movabs $0x1c342f90,%rsi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3586: mov    0x8(%r8),%r8d
  0x00000000032a358a: shl    $0x3,%r8
  0x00000000032a358e: cmp    0x5a0(%rsi),%r8
  0x00000000032a3595: jne    0x00000000032a35a4
  0x00000000032a3597: addq   $0x1,0x5a8(%rsi)
  0x00000000032a359f: jmpq   0x00000000032a360a
  0x00000000032a35a4: cmp    0x5b0(%rsi),%r8
  0x00000000032a35ab: jne    0x00000000032a35ba
  0x00000000032a35ad: addq   $0x1,0x5b8(%rsi)
  0x00000000032a35b5: jmpq   0x00000000032a360a
  0x00000000032a35ba: cmpq   $0x0,0x5a0(%rsi)
  0x00000000032a35c5: jne    0x00000000032a35de
  0x00000000032a35c7: mov    %r8,0x5a0(%rsi)
  0x00000000032a35ce: movq   $0x1,0x5a8(%rsi)
  0x00000000032a35d9: jmpq   0x00000000032a360a
  0x00000000032a35de: cmpq   $0x0,0x5b0(%rsi)
  0x00000000032a35e9: jne    0x00000000032a3602
  0x00000000032a35eb: mov    %r8,0x5b0(%rsi)
  0x00000000032a35f2: movq   $0x1,0x5b8(%rsi)
  0x00000000032a35fd: jmpq   0x00000000032a360a
  0x00000000032a3602: addq   $0x1,0x598(%rsi)
  0x00000000032a360a: mov    %rax,%r8           ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 656)

  0x00000000032a360d: movabs $0xffffffffffffffff,%rax
  0x00000000032a3617: callq  0x00000000031d63e0  ; OopMap{[144]=Oop off=3932}
                                                ;*invokevirtual afterNodeAccess
                                                ; - java.util.HashMap::putVal@253 (line 656)
                                                ;   {virtual_call}
  0x00000000032a361c: mov    0x90(%rsp),%rax
  0x00000000032a3624: add    $0xa0,%rsp
  0x00000000032a362b: pop    %rbp
  0x00000000032a362c: test   %eax,-0x9b3532(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032a3632: retq                      ;*areturn
                                                ; - java.util.HashMap::putVal@258 (line 657)

  0x00000000032a3633: mov    %rdx,%rsi
  0x00000000032a3636: movabs $0x1c342f90,%rdi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a3640: mov    0x8(%rsi),%esi
  0x00000000032a3643: shl    $0x3,%rsi
  0x00000000032a3647: cmp    0x5f0(%rdi),%rsi
  0x00000000032a364e: jne    0x00000000032a365d
  0x00000000032a3650: addq   $0x1,0x5f8(%rdi)
  0x00000000032a3658: jmpq   0x00000000032a36c3
  0x00000000032a365d: cmp    0x600(%rdi),%rsi
  0x00000000032a3664: jne    0x00000000032a3673
  0x00000000032a3666: addq   $0x1,0x608(%rdi)
  0x00000000032a366e: jmpq   0x00000000032a36c3
  0x00000000032a3673: cmpq   $0x0,0x5f0(%rdi)
  0x00000000032a367e: jne    0x00000000032a3697
  0x00000000032a3680: mov    %rsi,0x5f0(%rdi)
  0x00000000032a3687: movq   $0x1,0x5f8(%rdi)
  0x00000000032a3692: jmpq   0x00000000032a36c3
  0x00000000032a3697: cmpq   $0x0,0x600(%rdi)
  0x00000000032a36a2: jne    0x00000000032a36bb
  0x00000000032a36a4: mov    %rsi,0x600(%rdi)
  0x00000000032a36ab: movq   $0x1,0x608(%rdi)
  0x00000000032a36b6: jmpq   0x00000000032a36c3
  0x00000000032a36bb: addq   $0x1,0x5e8(%rdi)
  0x00000000032a36c3: mov    %rdx,%rsi
  0x00000000032a36c6: mov    %rsi,%rdx          ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 662)

  0x00000000032a36c9: nop
  0x00000000032a36ca: nop
  0x00000000032a36cb: nop
  0x00000000032a36cc: nop
  0x00000000032a36cd: nop
  0x00000000032a36ce: nop
  0x00000000032a36cf: callq  0x00000000031d61a0  ; OopMap{[72]=Oop off=4116}
                                                ;*invokevirtual resize
                                                ; - java.util.HashMap::putVal@288 (line 662)
                                                ;   {optimized virtual_call}
  0x00000000032a36d4: mov    0x60(%rsp),%ecx
  0x00000000032a36d8: mov    0x48(%rsp),%rdx
  0x00000000032a36dd: mov    %rdx,%r8
  0x00000000032a36e0: movabs $0x1c342f90,%rsi   ;   {metadata(method data for {method} {0x000000001c236f90} &apos;putVal&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a36ea: mov    0x8(%r8),%r8d
  0x00000000032a36ee: shl    $0x3,%r8
  0x00000000032a36f2: cmp    0x620(%rsi),%r8
  0x00000000032a36f9: jne    0x00000000032a3708
  0x00000000032a36fb: addq   $0x1,0x628(%rsi)
  0x00000000032a3703: jmpq   0x00000000032a376e
  0x00000000032a3708: cmp    0x630(%rsi),%r8
  0x00000000032a370f: jne    0x00000000032a371e
  0x00000000032a3711: addq   $0x1,0x638(%rsi)
  0x00000000032a3719: jmpq   0x00000000032a376e
  0x00000000032a371e: cmpq   $0x0,0x620(%rsi)
  0x00000000032a3729: jne    0x00000000032a3742
  0x00000000032a372b: mov    %r8,0x620(%rsi)
  0x00000000032a3732: movq   $0x1,0x628(%rsi)
  0x00000000032a373d: jmpq   0x00000000032a376e
  0x00000000032a3742: cmpq   $0x0,0x630(%rsi)
  0x00000000032a374d: jne    0x00000000032a3766
  0x00000000032a374f: mov    %r8,0x630(%rsi)
  0x00000000032a3756: movq   $0x1,0x638(%rsi)
  0x00000000032a3761: jmpq   0x00000000032a376e
  0x00000000032a3766: addq   $0x1,0x618(%rsi)
  0x00000000032a376e: mov    %rcx,%r8           ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 663)

  0x00000000032a3771: nop
  0x00000000032a3772: nop
  0x00000000032a3773: nop
  0x00000000032a3774: nop
  0x00000000032a3775: movabs $0xffffffffffffffff,%rax
  0x00000000032a377f: callq  0x00000000031d63e0  ; OopMap{off=4292}
                                                ;*invokevirtual afterNodeInsertion
                                                ; - java.util.HashMap::putVal@295 (line 663)
                                                ;   {virtual_call}
  0x00000000032a3784: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000032a378e: add    $0xa0,%rsp
  0x00000000032a3795: pop    %rbp
  0x00000000032a3796: test   %eax,-0x9b369c(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032a379c: retq   
  0x00000000032a379d: mov    %rbx,0x8(%rsp)
  0x00000000032a37a2: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032a37aa: callq  0x0000000003291d60  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop off=4335}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::putVal@-1 (line 627)
                                                ;   {runtime_call}
  0x00000000032a37af: jmpq   0x00000000032a2730
  0x00000000032a37b4: callq  0x000000000328d680  ; OopMap{rdx=Oop [72]=Oop r9=Oop [80]=Oop rdi=Oop rbx=Oop off=4345}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@12 (line 627)
                                                ;   {runtime_call}
  0x00000000032a37b9: callq  0x000000000328d680  ; OopMap{[88]=Oop [80]=Oop [72]=Oop r8=Oop off=4350}
                                                ;*arraylength
                                                ; - java.util.HashMap::putVal@26 (line 628)
                                                ;   {runtime_call}
  0x00000000032a37be: callq  0x000000000328d680  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4355}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00000000032a37c3: callq  0x000000000328d680  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4360}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00000000032a37c8: mov    %rax,(%rsp)
  0x00000000032a37cc: callq  0x000000000328c940  ; OopMap{[88]=Oop [80]=Oop [72]=Oop rbx=Oop off=4369}
                                                ;*aaload
                                                ; - java.util.HashMap::putVal@40 (line 629)
                                                ;   {runtime_call}
  0x00000000032a37d1: mov    %r8,(%rsp)
  0x00000000032a37d5: callq  0x000000000328c940  ; OopMap{[72]=Oop rax=Oop rbx=Oop off=4378}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00000000032a37da: callq  0x000000000328d680  ; OopMap{[72]=Oop rax=Oop off=4383}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00000000032a37df: mov    %rax,(%rsp)
  0x00000000032a37e3: callq  0x000000000328f640  ; OopMap{[72]=Oop rax=Oop off=4392}
                                                ;*aastore
                                                ; - java.util.HashMap::putVal@59 (line 630)
                                                ;   {runtime_call}
  0x00000000032a37e8: callq  0x000000000328d680  ; OopMap{[72]=Oop rsi=Oop [88]=Oop [80]=Oop rbx=Oop off=4397}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@65 (line 633)
                                                ;   {runtime_call}
  0x00000000032a37ed: callq  0x000000000328d680  ; OopMap{[72]=Oop [88]=Oop r9=Oop [80]=Oop [104]=Oop [112]=Oop r8=Oop off=4402}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@91 (line 634)
                                                ;   {runtime_call}
  0x00000000032a37f2: mov    %rsi,(%rsp)
  0x00000000032a37f6: callq  0x000000000328f880  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop off=4411}
                                                ;*checkcast
                                                ; - java.util.HashMap::putVal@114 (line 637)
                                                ;   {runtime_call}
  0x00000000032a37fb: callq  0x000000000328d680  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop rdx=Oop off=4416}
                                                ;*invokevirtual putTreeVal
                                                ; - java.util.HashMap::putVal@123 (line 637)
                                                ;   {runtime_call}
  0x00000000032a3800: callq  0x000000000328d680  ; OopMap{[72]=Oop [88]=Oop [104]=Oop rsi=Oop r9=Oop [80]=Oop off=4421}
                                                ;*getfield next
                                                ; - java.util.HashMap::putVal@136 (line 640)
                                                ;   {runtime_call}
  0x00000000032a3805: callq  0x000000000328d680  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop rbx=Oop [128]=Oop off=4426}
                                                ;*getfield hash
                                                ; - java.util.HashMap::putVal@177 (line 646)
                                                ;   {runtime_call}
  0x00000000032a380a: callq  0x000000000328d680  ; OopMap{[72]=Oop [88]=Oop [104]=Oop r9=Oop [80]=Oop [128]=Oop rdx=Oop off=4431}
                                                ;*invokevirtual equals
                                                ; - java.util.HashMap::putVal@203 (line 647)
                                                ;   {runtime_call}
  0x00000000032a380f: mov    %r8,0x8(%rsp)
  0x00000000032a3814: movq   $0xdb,(%rsp)
  0x00000000032a381c: callq  0x0000000003291d60  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [80]=Oop [128]=Oop off=4449}
                                                ;*goto
                                                ; - java.util.HashMap::putVal@219 (line 639)
                                                ;   {runtime_call}
  0x00000000032a3821: jmpq   0x00000000032a31ca
  0x00000000032a3826: callq  0x000000000328d680  ; OopMap{rdx=Oop [72]=Oop [88]=Oop rax=Oop off=4459}
                                                ;*getfield value
                                                ; - java.util.HashMap::putVal@229 (line 653)
                                                ;   {runtime_call}
  0x00000000032a382b: nop
  0x00000000032a382c: nop
  0x00000000032a382d: mov    0x2a8(%r15),%rax
  0x00000000032a3834: movabs $0x0,%r10
  0x00000000032a383e: mov    %r10,0x2a8(%r15)
  0x00000000032a3845: movabs $0x0,%r10
  0x00000000032a384f: mov    %r10,0x2b0(%r15)
  0x00000000032a3856: add    $0xa0,%rsp
  0x00000000032a385d: pop    %rbp
  0x00000000032a385e: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032a3863: hlt    
  0x00000000032a3864: hlt    
  0x00000000032a3865: hlt    
  0x00000000032a3866: hlt    
  0x00000000032a3867: hlt    
  0x00000000032a3868: hlt    
  0x00000000032a3869: hlt    
  0x00000000032a386a: hlt    
  0x00000000032a386b: hlt    
  0x00000000032a386c: hlt    
  0x00000000032a386d: hlt    
  0x00000000032a386e: hlt    
  0x00000000032a386f: hlt    
  0x00000000032a3870: hlt    
  0x00000000032a3871: hlt    
  0x00000000032a3872: hlt    
  0x00000000032a3873: hlt    
  0x00000000032a3874: hlt    
  0x00000000032a3875: hlt    
  0x00000000032a3876: hlt    
  0x00000000032a3877: hlt    
  0x00000000032a3878: hlt    
  0x00000000032a3879: hlt    
  0x00000000032a387a: hlt    
  0x00000000032a387b: hlt    
  0x00000000032a387c: hlt    
  0x00000000032a387d: hlt    
  0x00000000032a387e: hlt    
  0x00000000032a387f: hlt    
[Stub Code]
  0x00000000032a3880: nop                       ;   {no_reloc}
  0x00000000032a3881: nop
  0x00000000032a3882: nop
  0x00000000032a3883: nop
  0x00000000032a3884: nop
  0x00000000032a3885: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a388f: jmpq   0x00000000032a388f  ;   {runtime_call}
  0x00000000032a3894: nop
  0x00000000032a3895: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a389f: jmpq   0x00000000032a389f  ;   {runtime_call}
  0x00000000032a38a4: nop
  0x00000000032a38a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a38af: jmpq   0x00000000032a38af  ;   {runtime_call}
  0x00000000032a38b4: nop
  0x00000000032a38b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a38bf: jmpq   0x00000000032a38bf  ;   {runtime_call}
  0x00000000032a38c4: nop
  0x00000000032a38c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a38cf: jmpq   0x00000000032a38cf  ;   {runtime_call}
  0x00000000032a38d4: nop
  0x00000000032a38d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a38df: jmpq   0x00000000032a38df  ;   {runtime_call}
  0x00000000032a38e4: nop
  0x00000000032a38e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a38ef: jmpq   0x00000000032a38ef  ;   {runtime_call}
  0x00000000032a38f4: nop
  0x00000000032a38f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a38ff: jmpq   0x00000000032a38ff  ;   {runtime_call}
  0x00000000032a3904: nop
  0x00000000032a3905: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a390f: jmpq   0x00000000032a390f  ;   {runtime_call}
  0x00000000032a3914: nop
  0x00000000032a3915: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a391f: jmpq   0x00000000032a391f  ;   {runtime_call}
[Exception Handler]
  0x00000000032a3924: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032a3929: mov    %rsp,-0x28(%rsp)
  0x00000000032a392e: sub    $0x80,%rsp
  0x00000000032a3935: mov    %rax,0x78(%rsp)
  0x00000000032a393a: mov    %rcx,0x70(%rsp)
  0x00000000032a393f: mov    %rdx,0x68(%rsp)
  0x00000000032a3944: mov    %rbx,0x60(%rsp)
  0x00000000032a3949: mov    %rbp,0x50(%rsp)
  0x00000000032a394e: mov    %rsi,0x48(%rsp)
  0x00000000032a3953: mov    %rdi,0x40(%rsp)
  0x00000000032a3958: mov    %r8,0x38(%rsp)
  0x00000000032a395d: mov    %r9,0x30(%rsp)
  0x00000000032a3962: mov    %r10,0x28(%rsp)
  0x00000000032a3967: mov    %r11,0x20(%rsp)
  0x00000000032a396c: mov    %r12,0x18(%rsp)
  0x00000000032a3971: mov    %r13,0x10(%rsp)
  0x00000000032a3976: mov    %r14,0x8(%rsp)
  0x00000000032a397b: mov    %r15,(%rsp)
  0x00000000032a397f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032a3989: movabs $0x32a3929,%rdx    ;   {internal_word}
  0x00000000032a3993: mov    %rsp,%r8
  0x00000000032a3996: and    $0xfffffffffffffff0,%rsp
  0x00000000032a399a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032a399f: hlt    
[Deopt Handler Code]
  0x00000000032a39a0: movabs $0x32a39a0,%r10    ;   {section_word}
  0x00000000032a39aa: push   %r10
  0x00000000032a39ac: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a39b1: hlt    
  0x00000000032a39b2: hlt    
  0x00000000032a39b3: hlt    
  0x00000000032a39b4: hlt    
  0x00000000032a39b5: hlt    
  0x00000000032a39b6: hlt    
  0x00000000032a39b7: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x00000000032a26c0' size='8144' address='0x00000000032a2450' relocation_offset='288' insts_offset='624' stub_offset='5168' scopes_data_offset='5488' scopes_pcs_offset='6496' dependencies_offset='8032' nul_chk_table_offset='8040' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1423' backedge_count='141' iicount='1423' stamp='0.508'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032a08d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c155140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  0x00000000032a0a20: int3   
  0x00000000032a0a21: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a0a2c: data16 data16 xchg %ax,%ax
  0x00000000032a0a30: mov    %eax,-0x6000(%rsp)
  0x00000000032a0a37: push   %rbp
  0x00000000032a0a38: sub    $0x50,%rsp
  0x00000000032a0a3c: mov    (%rdx),%ebx
  0x00000000032a0a3e: mov    0x8(%rdx),%r14
  0x00000000032a0a42: mov    0x20(%rdx),%r13d
  0x00000000032a0a46: mov    0x10(%rdx),%ebp
  0x00000000032a0a49: mov    %rdx,%rcx
  0x00000000032a0a4c: movabs $0x5590be80,%r10
  0x00000000032a0a56: callq  *%r10
  0x00000000032a0a59: test   %r14,%r14
  0x00000000032a0a5c: je     0x00000000032a0bbb
  0x00000000032a0a62: mov    0x8(%r14),%r11d
  0x00000000032a0a66: cmp    $0xf8000041,%r11d  ;   {metadata({type array char})}
  0x00000000032a0a6d: jne    0x00000000032a0bf9  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x00000000032a0a73: mov    %r14,%r10
  0x00000000032a0a76: add    $0xc,%r10          ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0a7a: cmp    %ebp,%ebx
  0x00000000032a0a7c: jge    0x00000000032a0b82  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000032a0a82: mov    %ebx,%r11d
  0x00000000032a0a85: inc    %r11d
  0x00000000032a0a88: xor    %r8d,%r8d
  0x00000000032a0a8b: cmp    %r8d,%r11d
  0x00000000032a0a8e: cmovl  %r8d,%r11d
  0x00000000032a0a92: cmp    %ebp,%r11d
  0x00000000032a0a95: cmovg  %ebp,%r11d
  0x00000000032a0a99: test   %r14,%r14
  0x00000000032a0a9c: je     0x00000000032a0bc9
  0x00000000032a0aa2: mov    (%r10),%r9d
  0x00000000032a0aa5: cmp    %r9d,%ebx
  0x00000000032a0aa8: jae    0x00000000032a0bd9  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0aae: movzwl 0x10(%r14,%rbx,2),%r8d
  0x00000000032a0ab4: cmp    %r13d,%r8d
  0x00000000032a0ab7: je     0x00000000032a0b87  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0abd: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a0abf: cmp    %r11d,%ebx
  0x00000000032a0ac2: jl     0x00000000032a0a99  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000032a0ac4: cmp    %r9d,%ebp
  0x00000000032a0ac7: mov    %ebp,%r11d
  0x00000000032a0aca: cmovg  %r9d,%r11d
  0x00000000032a0ace: mov    %r11d,%ecx
  0x00000000032a0ad1: add    $0xfffffff9,%ecx
  0x00000000032a0ad4: mov    $0x80000000,%r8d
  0x00000000032a0ada: cmp    %ecx,%r11d
  0x00000000032a0add: cmovl  %r8d,%ecx
  0x00000000032a0ae1: cmp    %ecx,%ebx
  0x00000000032a0ae3: jge    0x00000000032a0b65
  0x00000000032a0ae9: nopl   0x0(%rax)
  0x00000000032a0af0: movzwl 0x10(%r14,%rbx,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0af6: cmp    %r13d,%r11d
  0x00000000032a0af9: je     0x00000000032a0b95  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0aff: movslq %ebx,%rdi
  0x00000000032a0b02: movzwl 0x12(%r14,%rdi,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0b08: cmp    %r13d,%r11d
  0x00000000032a0b0b: je     0x00000000032a0b9d  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0b11: movzwl 0x14(%r14,%rdi,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0b17: cmp    %r13d,%r11d
  0x00000000032a0b1a: je     0x00000000032a0bb1  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0b20: movzwl 0x16(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0b26: cmp    %r13d,%r10d
  0x00000000032a0b29: je     0x00000000032a0ba5  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0b2b: movzwl 0x18(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0b31: mov    %ebx,%r8d
  0x00000000032a0b34: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a0b38: cmp    %r13d,%r10d
  0x00000000032a0b3b: je     0x00000000032a0b98  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0b3d: movzwl 0x1a(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0b43: cmp    %r13d,%r10d
  0x00000000032a0b46: je     0x00000000032a0ba0  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0b48: movzwl 0x1c(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0b4e: cmp    %r13d,%r10d
  0x00000000032a0b51: je     0x00000000032a0bb6  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0b53: movzwl 0x1e(%r14,%rdi,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0b59: cmp    %r13d,%r10d
  0x00000000032a0b5c: je     0x00000000032a0baa  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0b5e: add    $0x8,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a0b61: cmp    %ecx,%ebx
  0x00000000032a0b63: jl     0x00000000032a0af0  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000032a0b65: cmp    %ebp,%ebx
  0x00000000032a0b67: jge    0x00000000032a0b82
  0x00000000032a0b69: data16 xchg %ax,%ax
  0x00000000032a0b6c: cmp    %r9d,%ebx
  0x00000000032a0b6f: jae    0x00000000032a0bdf  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a0b71: movzwl 0x10(%r14,%rbx,2),%r11d
  0x00000000032a0b77: cmp    %r13d,%r11d
  0x00000000032a0b7a: je     0x00000000032a0b87  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a0b7c: inc    %ebx               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a0b7e: cmp    %ebp,%ebx
  0x00000000032a0b80: jl     0x00000000032a0b6c  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000032a0b82: mov    $0xffffffff,%ebx   ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x00000000032a0b87: mov    %ebx,%eax
  0x00000000032a0b89: add    $0x50,%rsp
  0x00000000032a0b8d: pop    %rbp
  0x00000000032a0b8e: test   %eax,-0x9b0b94(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032a0b94: retq   
  0x00000000032a0b95: mov    %ebx,%r8d
  0x00000000032a0b98: mov    %r8d,%ebx
  0x00000000032a0b9b: jmp    0x00000000032a0b87
  0x00000000032a0b9d: mov    %ebx,%r8d
  0x00000000032a0ba0: mov    %r8d,%ebx
  0x00000000032a0ba3: jmp    0x00000000032a0bad
  0x00000000032a0ba5: add    $0x2,%ebx
  0x00000000032a0ba8: jmp    0x00000000032a0bad
  0x00000000032a0baa: add    $0x6,%ebx
  0x00000000032a0bad: inc    %ebx
  0x00000000032a0baf: jmp    0x00000000032a0b87
  0x00000000032a0bb1: add    $0x2,%ebx
  0x00000000032a0bb4: jmp    0x00000000032a0b87
  0x00000000032a0bb6: add    $0x6,%ebx          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a0bb9: jmp    0x00000000032a0b87
  0x00000000032a0bbb: xor    %r14d,%r14d
  0x00000000032a0bbe: mov    $0xc,%r10d
  0x00000000032a0bc4: jmpq   0x00000000032a0a7a
  0x00000000032a0bc9: mov    $0xfffffff6,%edx
  0x00000000032a0bce: mov    %ebx,%ebp
  0x00000000032a0bd0: data16 xchg %ax,%ax
  0x00000000032a0bd3: callq  0x00000000031d57a0  ; OopMap{off=440}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00000000032a0bd8: int3   
  0x00000000032a0bd9: mov    %ebx,0x20(%rsp)
  0x00000000032a0bdd: jmp    0x00000000032a0be3
  0x00000000032a0bdf: mov    %ebx,0x20(%rsp)
  0x00000000032a0be3: mov    $0xffffffe4,%edx
  0x00000000032a0be8: mov    %r13d,0x24(%rsp)
  0x00000000032a0bed: mov    %r14,0x30(%rsp)
  0x00000000032a0bf2: nop
  0x00000000032a0bf3: callq  0x00000000031d57a0  ; OopMap{[48]=Oop off=472}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00000000032a0bf8: int3   
  0x00000000032a0bf9: mov    $0xffffff9d,%edx
  0x00000000032a0bfe: mov    %r13d,0x20(%rsp)
  0x00000000032a0c03: mov    %r14,0x28(%rsp)
  0x00000000032a0c08: mov    %ebx,0x24(%rsp)
  0x00000000032a0c0c: data16 xchg %ax,%ax
  0x00000000032a0c0f: callq  0x00000000031d57a0  ; OopMap{[40]=Oop off=500}
                                                ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)
                                                ;   {runtime_call}
  0x00000000032a0c14: int3                      ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x00000000032a0c15: hlt    
  0x00000000032a0c16: hlt    
  0x00000000032a0c17: hlt    
  0x00000000032a0c18: hlt    
  0x00000000032a0c19: hlt    
  0x00000000032a0c1a: hlt    
  0x00000000032a0c1b: hlt    
  0x00000000032a0c1c: hlt    
  0x00000000032a0c1d: hlt    
  0x00000000032a0c1e: hlt    
  0x00000000032a0c1f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a0c20: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a0c25: callq  0x00000000032a0c2a
  0x00000000032a0c2a: subq   $0x5,(%rsp)
  0x00000000032a0c2f: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a0c34: hlt    
  0x00000000032a0c35: hlt    
  0x00000000032a0c36: hlt    
  0x00000000032a0c37: hlt    
<nmethod compile_id='16' compile_kind='osr' compiler='C2' level='4' entry='0x00000000032a0a20' size='1616' address='0x00000000032a08d0' relocation_offset='288' insts_offset='336' stub_offset='848' scopes_data_offset='888' scopes_pcs_offset='1000' dependencies_offset='1608' method='java/lang/String indexOf (II)I' bytes='70' count='3797' backedge_count='230232' iicount='3797' stamp='0.512'/>
<writer thread='26124'/>
<task_queued compile_id='29' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1024' iicount='1024' level='3' stamp='0.512' comment='tiered' hot_count='1024'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032a0490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c155058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000032a0600: mov    0x8(%rdx),%r10d
  0x00000000032a0604: shl    $0x3,%r10
  0x00000000032a0608: cmp    %rax,%r10
  0x00000000032a060b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a0611: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a061c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a0620: mov    %eax,-0x6000(%rsp)
  0x00000000032a0627: push   %rbp
  0x00000000032a0628: sub    $0x30,%rsp
  0x00000000032a062c: movabs $0x1c33da88,%r9    ;   {metadata(method data for {method} {0x000000001c155058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a0636: mov    0xdc(%r9),%esi
  0x00000000032a063d: add    $0x8,%esi
  0x00000000032a0640: mov    %esi,0xdc(%r9)
  0x00000000032a0647: movabs $0x1c155050,%r9    ;   {metadata({method} {0x000000001c155058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a0651: and    $0x1ff8,%esi
  0x00000000032a0657: cmp    $0x0,%esi
  0x00000000032a065a: je     0x00000000032a0708  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x00000000032a0660: mov    %rdx,%r9
  0x00000000032a0663: movabs $0x1c33da88,%rsi   ;   {metadata(method data for {method} {0x000000001c155058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a066d: mov    0x8(%r9),%r9d
  0x00000000032a0671: shl    $0x3,%r9
  0x00000000032a0675: cmp    0x110(%rsi),%r9
  0x00000000032a067c: jne    0x00000000032a068b
  0x00000000032a067e: addq   $0x1,0x118(%rsi)
  0x00000000032a0686: jmpq   0x00000000032a06f1
  0x00000000032a068b: cmp    0x120(%rsi),%r9
  0x00000000032a0692: jne    0x00000000032a06a1
  0x00000000032a0694: addq   $0x1,0x128(%rsi)
  0x00000000032a069c: jmpq   0x00000000032a06f1
  0x00000000032a06a1: cmpq   $0x0,0x110(%rsi)
  0x00000000032a06ac: jne    0x00000000032a06c5
  0x00000000032a06ae: mov    %r9,0x110(%rsi)
  0x00000000032a06b5: movq   $0x1,0x118(%rsi)
  0x00000000032a06c0: jmpq   0x00000000032a06f1
  0x00000000032a06c5: cmpq   $0x0,0x120(%rsi)
  0x00000000032a06d0: jne    0x00000000032a06e9
  0x00000000032a06d2: mov    %r9,0x120(%rsi)
  0x00000000032a06d9: movq   $0x1,0x128(%rsi)
  0x00000000032a06e4: jmpq   0x00000000032a06f1
  0x00000000032a06e9: addq   $0x1,0x108(%rsi)
  0x00000000032a06f1: mov    $0x0,%r9d          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x00000000032a06f7: callq  0x00000000031d61a0  ; OopMap{off=252}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x00000000032a06fc: add    $0x30,%rsp
  0x00000000032a0700: pop    %rbp
  0x00000000032a0701: test   %eax,-0x9b0607(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032a0707: retq   
  0x00000000032a0708: mov    %r9,0x8(%rsp)
  0x00000000032a070d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032a0715: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=282}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x00000000032a071a: jmpq   0x00000000032a0660
  0x00000000032a071f: nop
  0x00000000032a0720: nop
  0x00000000032a0721: mov    0x2a8(%r15),%rax
  0x00000000032a0728: movabs $0x0,%r10
  0x00000000032a0732: mov    %r10,0x2a8(%r15)
  0x00000000032a0739: movabs $0x0,%r10
  0x00000000032a0743: mov    %r10,0x2b0(%r15)
  0x00000000032a074a: add    $0x30,%rsp
  0x00000000032a074e: pop    %rbp
  0x00000000032a074f: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032a0754: hlt    
  0x00000000032a0755: hlt    
  0x00000000032a0756: hlt    
  0x00000000032a0757: hlt    
  0x00000000032a0758: hlt    
  0x00000000032a0759: hlt    
  0x00000000032a075a: hlt    
  0x00000000032a075b: hlt    
  0x00000000032a075c: hlt    
  0x00000000032a075d: hlt    
  0x00000000032a075e: hlt    
  0x00000000032a075f: hlt    
[Stub Code]
  0x00000000032a0760: nop                       ;   {no_reloc}
  0x00000000032a0761: nop
  0x00000000032a0762: nop
  0x00000000032a0763: nop
  0x00000000032a0764: nop
  0x00000000032a0765: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a076f: jmpq   0x00000000032a076f  ;   {runtime_call}
[Exception Handler]
  0x00000000032a0774: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032a0779: mov    %rsp,-0x28(%rsp)
  0x00000000032a077e: sub    $0x80,%rsp
  0x00000000032a0785: mov    %rax,0x78(%rsp)
  0x00000000032a078a: mov    %rcx,0x70(%rsp)
  0x00000000032a078f: mov    %rdx,0x68(%rsp)
  0x00000000032a0794: mov    %rbx,0x60(%rsp)
  0x00000000032a0799: mov    %rbp,0x50(%rsp)
  0x00000000032a079e: mov    %rsi,0x48(%rsp)
  0x00000000032a07a3: mov    %rdi,0x40(%rsp)
  0x00000000032a07a8: mov    %r8,0x38(%rsp)
  0x00000000032a07ad: mov    %r9,0x30(%rsp)
  0x00000000032a07b2: mov    %r10,0x28(%rsp)
  0x00000000032a07b7: mov    %r11,0x20(%rsp)
  0x00000000032a07bc: mov    %r12,0x18(%rsp)
  0x00000000032a07c1: mov    %r13,0x10(%rsp)
  0x00000000032a07c6: mov    %r14,0x8(%rsp)
  0x00000000032a07cb: mov    %r15,(%rsp)
  0x00000000032a07cf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032a07d9: movabs $0x32a0779,%rdx    ;   {internal_word}
  0x00000000032a07e3: mov    %rsp,%r8
  0x00000000032a07e6: and    $0xfffffffffffffff0,%rsp
  0x00000000032a07ea: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032a07ef: hlt    
[Deopt Handler Code]
  0x00000000032a07f0: movabs $0x32a07f0,%r10    ;   {section_word}
  0x00000000032a07fa: push   %r10
  0x00000000032a07fc: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a0801: hlt    
  0x00000000032a0802: hlt    
  0x00000000032a0803: hlt    
  0x00000000032a0804: hlt    
  0x00000000032a0805: hlt    
  0x00000000032a0806: hlt    
  0x00000000032a0807: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x00000000032a0600' size='1040' address='0x00000000032a0490' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String indexOf (I)I' bytes='7' count='3623' iicount='3623' stamp='0.514'/>
<writer thread='6664'/>
<task_queued compile_id='30' method='java/io/WinNTFileSystem isLetter (C)Z' bytes='30' count='2688' iicount='2688' level='3' stamp='0.515' comment='tiered' hot_count='2688'/>
<writer thread='4332'/>
Decoding compiled method 0x00000000032a5150:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1545d8} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000032a52a0: mov    0x8(%rdx),%r10d
  0x00000000032a52a4: shl    $0x3,%r10
  0x00000000032a52a8: cmp    %r10,%rax
  0x00000000032a52ab: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a52b1: data16 xchg %ax,%ax
  0x00000000032a52b4: nopl   0x0(%rax,%rax,1)
  0x00000000032a52bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a52c0: mov    %eax,-0x6000(%rsp)
  0x00000000032a52c7: push   %rbp
  0x00000000032a52c8: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x00000000032a52cc: cmp    %r8,%rdx
  0x00000000032a52cf: je     0x00000000032a530b  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x00000000032a52d1: test   %r8,%r8
  0x00000000032a52d4: je     0x00000000032a52fd
  0x00000000032a52d6: mov    0x8(%r8),%r10d
  0x00000000032a52da: cmp    $0xf80002da,%r10d  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032a52e1: jne    0x00000000032a54b9  ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00000000032a52e7: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x00000000032a52ea: mov    0xc(%r12,%rcx,8),%edi  ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ; implicit exception: dispatches to 0x00000000032a54cd
  0x00000000032a52ef: mov    0xc(%r8),%ebx      ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x00000000032a52f3: mov    0xc(%r12,%rbx,8),%r9d  ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x00000000032a54d9
  0x00000000032a52f8: cmp    %r9d,%edi
  0x00000000032a52fb: je     0x00000000032a5312  ;*iconst_0
                                                ; - java.lang.String::equals@79 (line 995)

  0x00000000032a52fd: xor    %eax,%eax          ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)

  0x00000000032a52ff: add    $0x30,%rsp
  0x00000000032a5303: pop    %rbp
  0x00000000032a5304: test   %eax,-0x9b530a(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032a530a: retq   
  0x00000000032a530b: mov    $0x1,%eax
  0x00000000032a5310: jmp    0x00000000032a52ff
  0x00000000032a5312: test   %edi,%edi
  0x00000000032a5314: je     0x00000000032a546d  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000000032a531a: mov    %edi,%r10d
  0x00000000032a531d: dec    %r10d              ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000032a5320: movslq %edi,%r11
  0x00000000032a5323: vmovq  %r11,%xmm2
  0x00000000032a5328: lea    (%r12,%rcx,8),%r11
  0x00000000032a532c: lea    (%r12,%rbx,8),%rax
  0x00000000032a5330: mov    %edi,%edx
  0x00000000032a5332: add    $0xfffffffe,%edx
  0x00000000032a5335: mov    $0xffffffff,%r14d
  0x00000000032a533b: cmp    %r14d,%edx
  0x00000000032a533e: cmovl  %r14d,%edx
  0x00000000032a5342: mov    %r10d,%esi
  0x00000000032a5345: xor    %r8d,%r8d
  0x00000000032a5348: mov    %r10d,%r13d
  0x00000000032a534b: sub    %esi,%r13d         ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000000032a534e: cmp    %edi,%r13d
  0x00000000032a5351: jae    0x00000000032a5480
  0x00000000032a5357: vmovd  %r10d,%xmm1
  0x00000000032a535c: vmovd  %r8d,%xmm0
  0x00000000032a5361: movslq %esi,%r8
  0x00000000032a5364: vmovq  %xmm2,%r10
  0x00000000032a5369: sub    %r8,%r10
  0x00000000032a536c: movzwl 0xe(%r11,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000032a5372: cmp    %r9d,%r13d
  0x00000000032a5375: jae    0x00000000032a549d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000032a537b: movzwl 0xe(%rax,%r10,2),%r8d
  0x00000000032a5381: cmp    %r8d,%ebp
  0x00000000032a5384: jne    0x00000000032a5477  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000032a538a: dec    %esi               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000032a538c: cmp    %edx,%esi
  0x00000000032a538e: jle    0x00000000032a539c  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000000032a5390: vmovd  %xmm0,%r8d
  0x00000000032a5395: vmovd  %xmm1,%r10d
  0x00000000032a539a: jmp    0x00000000032a5348
  0x00000000032a539c: mov    %edi,%r10d
  0x00000000032a539f: sub    %r9d,%r10d
  0x00000000032a53a2: dec    %r10d
  0x00000000032a53a5: cmp    %r14d,%r10d
  0x00000000032a53a8: cmovl  %r14d,%r10d
  0x00000000032a53ac: mov    %r10d,%ebp
  0x00000000032a53af: add    $0x3,%ebp
  0x00000000032a53b2: mov    $0x7fffffff,%edx
  0x00000000032a53b7: cmp    %ebp,%r10d
  0x00000000032a53ba: cmovg  %edx,%ebp
  0x00000000032a53bd: cmp    %ebp,%esi
  0x00000000032a53bf: jle    0x00000000032a5431  ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000000032a53c1: movslq %esi,%r10
  0x00000000032a53c4: vmovq  %xmm2,%r8
  0x00000000032a53c9: sub    %r10,%r8
  0x00000000032a53cc: movzwl 0xe(%rax,%r8,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000032a53d2: movzwl 0xe(%r11,%r8,2),%edx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000032a53d8: cmp    %r10d,%edx
  0x00000000032a53db: jne    0x00000000032a5477  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000032a53e1: movzwl 0x10(%rax,%r8,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000032a53e7: movzwl 0x10(%r11,%r8,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000032a53ed: cmp    %r10d,%r8d
  0x00000000032a53f0: jne    0x00000000032a5477  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000032a53f6: mov    %esi,%r10d
  0x00000000032a53f9: add    $0xfffffffe,%r10d
  0x00000000032a53fd: movslq %r10d,%r10
  0x00000000032a5400: vmovq  %xmm2,%rdx
  0x00000000032a5405: sub    %r10,%rdx
  0x00000000032a5408: movzwl 0xe(%rax,%rdx,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000032a540e: movzwl 0xe(%r11,%rdx,2),%r10d  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000032a5414: cmp    %r8d,%r10d
  0x00000000032a5417: jne    0x00000000032a5477  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000032a5419: movzwl 0x10(%rax,%rdx,2),%r8d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000032a541f: movzwl 0x10(%r11,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000032a5425: cmp    %r8d,%edx
  0x00000000032a5428: jne    0x00000000032a5477  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000032a542a: add    $0xfffffffc,%esi   ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000032a542d: cmp    %ebp,%esi
  0x00000000032a542f: jg     0x00000000032a53c1  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00000000032a5431: cmp    $0xffffffff,%esi
  0x00000000032a5434: je     0x00000000032a546d
  0x00000000032a5436: xchg   %ax,%ax
  0x00000000032a5438: vmovd  %xmm1,%r13d
  0x00000000032a543d: sub    %esi,%r13d         ;*aload
                                                ; - java.lang.String::equals@56 (line 988)

  0x00000000032a5440: cmp    %edi,%r13d
  0x00000000032a5443: jae    0x00000000032a5480
  0x00000000032a5445: movslq %esi,%r8
  0x00000000032a5448: vmovq  %xmm2,%r10
  0x00000000032a544d: sub    %r8,%r10
  0x00000000032a5450: movzwl 0xe(%r11,%r10,2),%ebp  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000032a5456: cmp    %r9d,%r13d
  0x00000000032a5459: jae    0x00000000032a549d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000032a545b: movzwl 0xe(%rax,%r10,2),%r8d
  0x00000000032a5461: cmp    %r8d,%ebp
  0x00000000032a5464: jne    0x00000000032a5477  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00000000032a5466: dec    %esi               ;*iinc
                                                ; - java.lang.String::equals@50 (line 987)

  0x00000000032a5468: cmp    $0xffffffff,%esi
  0x00000000032a546b: jne    0x00000000032a5438  ;*iconst_1
                                                ; - java.lang.String::equals@77 (line 992)

  0x00000000032a546d: mov    $0x1,%eax
  0x00000000032a5472: jmpq   0x00000000032a52ff
  0x00000000032a5477: vmovd  %xmm0,%eax
  0x00000000032a547b: jmpq   0x00000000032a52ff
  0x00000000032a5480: mov    $0xffffffe4,%edx
  0x00000000032a5485: mov    %esi,%ebp
  0x00000000032a5487: mov    %ebx,0x4(%rsp)
  0x00000000032a548b: mov    %ecx,0xc(%rsp)
  0x00000000032a548f: mov    %r13d,0x10(%rsp)
  0x00000000032a5494: data16 xchg %ax,%ax
  0x00000000032a5497: callq  0x00000000031d57a0  ; OopMap{[4]=NarrowOop [12]=NarrowOop off=508}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x00000000032a549c: int3                      ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00000000032a549d: mov    $0xffffffe4,%edx
  0x00000000032a54a2: mov    %esi,(%rsp)
  0x00000000032a54a5: mov    %ecx,0x4(%rsp)
  0x00000000032a54a9: mov    %ebx,0x10(%rsp)
  0x00000000032a54ad: mov    %r13d,0x14(%rsp)
  0x00000000032a54b2: nop
  0x00000000032a54b3: callq  0x00000000031d57a0  ; OopMap{[4]=NarrowOop [16]=NarrowOop off=536}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x00000000032a54b8: int3                      ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00000000032a54b9: mov    %rdx,%rbp
  0x00000000032a54bc: mov    %r8,0x8(%rsp)
  0x00000000032a54c1: mov    $0xffffffde,%edx
  0x00000000032a54c6: nop
  0x00000000032a54c7: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [8]=Oop off=556}
                                                ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)
                                                ;   {runtime_call}
  0x00000000032a54cc: int3                      ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00000000032a54cd: mov    $0xfffffff6,%edx
  0x00000000032a54d2: nop
  0x00000000032a54d3: callq  0x00000000031d57a0  ; OopMap{off=568}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x00000000032a54d8: int3                      ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)

  0x00000000032a54d9: mov    $0xfffffff6,%edx
  0x00000000032a54de: nop
  0x00000000032a54df: callq  0x00000000031d57a0  ; OopMap{off=580}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x00000000032a54e4: int3                      ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)

  0x00000000032a54e5: hlt    
  0x00000000032a54e6: hlt    
  0x00000000032a54e7: hlt    
  0x00000000032a54e8: hlt    
  0x00000000032a54e9: hlt    
  0x00000000032a54ea: hlt    
  0x00000000032a54eb: hlt    
  0x00000000032a54ec: hlt    
  0x00000000032a54ed: hlt    
  0x00000000032a54ee: hlt    
  0x00000000032a54ef: hlt    
  0x00000000032a54f0: hlt    
  0x00000000032a54f1: hlt    
  0x00000000032a54f2: hlt    
  0x00000000032a54f3: hlt    
  0x00000000032a54f4: hlt    
  0x00000000032a54f5: hlt    
  0x00000000032a54f6: hlt    
  0x00000000032a54f7: hlt    
  0x00000000032a54f8: hlt    
  0x00000000032a54f9: hlt    
  0x00000000032a54fa: hlt    
  0x00000000032a54fb: hlt    
  0x00000000032a54fc: hlt    
  0x00000000032a54fd: hlt    
  0x00000000032a54fe: hlt    
  0x00000000032a54ff: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a5500: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a5505: callq  0x00000000032a550a
  0x00000000032a550a: subq   $0x5,(%rsp)
  0x00000000032a550f: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a5514: hlt    
  0x00000000032a5515: hlt    
  0x00000000032a5516: hlt    
  0x00000000032a5517: hlt    
<nmethod compile_id='21' compiler='C2' level='4' entry='0x00000000032a52a0' size='2032' address='0x00000000032a5150' relocation_offset='288' insts_offset='336' stub_offset='944' scopes_data_offset='984' scopes_pcs_offset='1200' dependencies_offset='2000' nul_chk_table_offset='2008' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='19726' backedge_count='14133' iicount='19726' stamp='0.519'/>
<writer thread='6664'/>
<task_queued compile_id='31' method='java/lang/String indexOf (II)I' bytes='70' count='3800' backedge_count='230320' iicount='3800' stamp='0.519' comment='tiered' hot_count='3800'/>
<writer thread='26124'/>
<task_queued compile_id='32' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2688' backedge_count='3360' iicount='2688' level='3' stamp='0.519' comment='tiered' hot_count='2688'/>
<task_queued compile_id='33' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1647' backedge_count='62464' iicount='1647' stamp='0.519' comment='tiered' hot_count='1647'/>
<task_queued compile_id='34' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='1664' iicount='1664' level='1' stamp='0.519' comment='tiered' hot_count='1664'/>
<task_queued compile_id='35' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='371' backedge_count='26624' iicount='371' level='3' stamp='0.519' comment='tiered' hot_count='371'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032a0050:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c154e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000032a01c0: mov    0x8(%rdx),%r10d
  0x00000000032a01c4: shl    $0x3,%r10
  0x00000000032a01c8: cmp    %rax,%r10
  0x00000000032a01cb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a01d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a01dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a01e0: mov    %eax,-0x6000(%rsp)
  0x00000000032a01e7: push   %rbp
  0x00000000032a01e8: sub    $0x30,%rsp
  0x00000000032a01ec: movabs $0x1c3954d0,%r9    ;   {metadata(method data for {method} {0x000000001c154e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a01f6: mov    0xdc(%r9),%esi
  0x00000000032a01fd: add    $0x8,%esi
  0x00000000032a0200: mov    %esi,0xdc(%r9)
  0x00000000032a0207: movabs $0x1c154e48,%r9    ;   {metadata({method} {0x000000001c154e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a0211: and    $0x1ff8,%esi
  0x00000000032a0217: cmp    $0x0,%esi
  0x00000000032a021a: je     0x00000000032a02cb  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1434)

  0x00000000032a0220: mov    %rdx,%r9
  0x00000000032a0223: movabs $0x1c3954d0,%rsi   ;   {metadata(method data for {method} {0x000000001c154e50} &apos;startsWith&apos; &apos;(Ljava/lang/String;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a022d: mov    0x8(%r9),%r9d
  0x00000000032a0231: shl    $0x3,%r9
  0x00000000032a0235: cmp    0x110(%rsi),%r9
  0x00000000032a023c: jne    0x00000000032a024b
  0x00000000032a023e: addq   $0x1,0x118(%rsi)
  0x00000000032a0246: jmpq   0x00000000032a02b1
  0x00000000032a024b: cmp    0x120(%rsi),%r9
  0x00000000032a0252: jne    0x00000000032a0261
  0x00000000032a0254: addq   $0x1,0x128(%rsi)
  0x00000000032a025c: jmpq   0x00000000032a02b1
  0x00000000032a0261: cmpq   $0x0,0x110(%rsi)
  0x00000000032a026c: jne    0x00000000032a0285
  0x00000000032a026e: mov    %r9,0x110(%rsi)
  0x00000000032a0275: movq   $0x1,0x118(%rsi)
  0x00000000032a0280: jmpq   0x00000000032a02b1
  0x00000000032a0285: cmpq   $0x0,0x120(%rsi)
  0x00000000032a0290: jne    0x00000000032a02a9
  0x00000000032a0292: mov    %r9,0x120(%rsi)
  0x00000000032a0299: movq   $0x1,0x128(%rsi)
  0x00000000032a02a4: jmpq   0x00000000032a02b1
  0x00000000032a02a9: addq   $0x1,0x108(%rsi)
  0x00000000032a02b1: mov    $0x0,%r9d          ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)

  0x00000000032a02b7: callq  0x00000000031d61a0  ; OopMap{off=252}
                                                ;*invokevirtual startsWith
                                                ; - java.lang.String::startsWith@3 (line 1434)
                                                ;   {optimized virtual_call}
  0x00000000032a02bc: and    $0x1,%eax
  0x00000000032a02bf: add    $0x30,%rsp
  0x00000000032a02c3: pop    %rbp
  0x00000000032a02c4: test   %eax,-0x9b01ca(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032a02ca: retq   
  0x00000000032a02cb: mov    %r9,0x8(%rsp)
  0x00000000032a02d0: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032a02d8: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop off=285}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1434)
                                                ;   {runtime_call}
  0x00000000032a02dd: jmpq   0x00000000032a0220
  0x00000000032a02e2: nop
  0x00000000032a02e3: nop
  0x00000000032a02e4: mov    0x2a8(%r15),%rax
  0x00000000032a02eb: movabs $0x0,%r10
  0x00000000032a02f5: mov    %r10,0x2a8(%r15)
  0x00000000032a02fc: movabs $0x0,%r10
  0x00000000032a0306: mov    %r10,0x2b0(%r15)
  0x00000000032a030d: add    $0x30,%rsp
  0x00000000032a0311: pop    %rbp
  0x00000000032a0312: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032a0317: hlt    
  0x00000000032a0318: hlt    
  0x00000000032a0319: hlt    
  0x00000000032a031a: hlt    
  0x00000000032a031b: hlt    
  0x00000000032a031c: hlt    
  0x00000000032a031d: hlt    
  0x00000000032a031e: hlt    
  0x00000000032a031f: hlt    
[Stub Code]
  0x00000000032a0320: nop                       ;   {no_reloc}
  0x00000000032a0321: nop
  0x00000000032a0322: nop
  0x00000000032a0323: nop
  0x00000000032a0324: nop
  0x00000000032a0325: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a032f: jmpq   0x00000000032a032f  ;   {runtime_call}
[Exception Handler]
  0x00000000032a0334: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032a0339: mov    %rsp,-0x28(%rsp)
  0x00000000032a033e: sub    $0x80,%rsp
  0x00000000032a0345: mov    %rax,0x78(%rsp)
  0x00000000032a034a: mov    %rcx,0x70(%rsp)
  0x00000000032a034f: mov    %rdx,0x68(%rsp)
  0x00000000032a0354: mov    %rbx,0x60(%rsp)
  0x00000000032a0359: mov    %rbp,0x50(%rsp)
  0x00000000032a035e: mov    %rsi,0x48(%rsp)
  0x00000000032a0363: mov    %rdi,0x40(%rsp)
  0x00000000032a0368: mov    %r8,0x38(%rsp)
  0x00000000032a036d: mov    %r9,0x30(%rsp)
  0x00000000032a0372: mov    %r10,0x28(%rsp)
  0x00000000032a0377: mov    %r11,0x20(%rsp)
  0x00000000032a037c: mov    %r12,0x18(%rsp)
  0x00000000032a0381: mov    %r13,0x10(%rsp)
  0x00000000032a0386: mov    %r14,0x8(%rsp)
  0x00000000032a038b: mov    %r15,(%rsp)
  0x00000000032a038f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032a0399: movabs $0x32a0339,%rdx    ;   {internal_word}
  0x00000000032a03a3: mov    %rsp,%r8
  0x00000000032a03a6: and    $0xfffffffffffffff0,%rsp
  0x00000000032a03aa: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032a03af: hlt    
[Deopt Handler Code]
  0x00000000032a03b0: movabs $0x32a03b0,%r10    ;   {section_word}
  0x00000000032a03ba: push   %r10
  0x00000000032a03bc: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a03c1: hlt    
  0x00000000032a03c2: hlt    
  0x00000000032a03c3: hlt    
  0x00000000032a03c4: hlt    
  0x00000000032a03c5: hlt    
  0x00000000032a03c6: hlt    
  0x00000000032a03c7: hlt    
<nmethod compile_id='29' compiler='C1' level='3' entry='0x00000000032a01c0' size='1040' address='0x00000000032a0050' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='936' dependencies_offset='1032' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1083' iicount='1083' stamp='0.521'/>
<writer thread='6664'/>
<task_queued compile_id='36' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='4736' iicount='4736' level='3' stamp='0.521' comment='tiered' hot_count='4736'/>
<writer thread='4332'/>
Decoding compiled method 0x00000000032a6b90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c155140} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000032a6ce0: mov    0x8(%rdx),%r10d
  0x00000000032a6ce4: shl    $0x3,%r10
  0x00000000032a6ce8: cmp    %r10,%rax
  0x00000000032a6ceb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a6cf1: data16 xchg %ax,%ax
  0x00000000032a6cf4: nopl   0x0(%rax,%rax,1)
  0x00000000032a6cfc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a6d00: mov    %eax,-0x6000(%rsp)
  0x00000000032a6d07: push   %rbp
  0x00000000032a6d08: sub    $0x30,%rsp         ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)

  0x00000000032a6d0c: mov    %rdx,%r10
  0x00000000032a6d0f: mov    0xc(%rdx),%ecx     ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x00000000032a6d12: mov    0xc(%r12,%rcx,8),%ebp  ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00000000032a6e99
  0x00000000032a6d17: test   %r9d,%r9d
  0x00000000032a6d1a: jl     0x00000000032a6e61  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000000032a6d20: mov    $0xffffffff,%eax
  0x00000000032a6d25: cmp    %ebp,%r9d
  0x00000000032a6d28: jge    0x00000000032a6e29  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x00000000032a6d2e: cmp    $0x10000,%r8d
  0x00000000032a6d35: jge    0x00000000032a6e7d  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00000000032a6d3b: cmp    %ebp,%r9d
  0x00000000032a6d3e: jae    0x00000000032a6e47
  0x00000000032a6d44: mov    %ebp,%r10d
  0x00000000032a6d47: dec    %r10d
  0x00000000032a6d4a: cmp    %ebp,%r10d
  0x00000000032a6d4d: jae    0x00000000032a6e47
  0x00000000032a6d53: lea    (%r12,%rcx,8),%rbx
  0x00000000032a6d57: mov    %r9d,%r11d
  0x00000000032a6d5a: inc    %r11d              ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000032a6d5d: movzwl 0x10(%rbx,%r9,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6d63: cmp    %r8d,%ecx
  0x00000000032a6d66: je     0x00000000032a6e26  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6d6c: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a6d6f: cmp    %r11d,%r9d
  0x00000000032a6d72: jl     0x00000000032a6d5d  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000032a6d74: mov    %ebp,%r11d
  0x00000000032a6d77: add    $0xfffffff9,%r11d
  0x00000000032a6d7b: mov    $0x80000000,%ecx
  0x00000000032a6d80: cmp    %r11d,%r10d
  0x00000000032a6d83: cmovl  %ecx,%r11d
  0x00000000032a6d87: cmp    %r11d,%r9d
  0x00000000032a6d8a: jge    0x00000000032a6df8
  0x00000000032a6d8c: nopl   0x0(%rax)          ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000032a6d90: movzwl 0x10(%rbx,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6d96: cmp    %r8d,%r10d
  0x00000000032a6d99: je     0x00000000032a6e26  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6d9f: movslq %r9d,%r10
  0x00000000032a6da2: movzwl 0x12(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6da8: cmp    %r8d,%edi
  0x00000000032a6dab: je     0x00000000032a6e19  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6dad: movzwl 0x14(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6db3: cmp    %r8d,%edi
  0x00000000032a6db6: je     0x00000000032a6e35  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6db8: movzwl 0x16(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6dbe: cmp    %r8d,%edi
  0x00000000032a6dc1: je     0x00000000032a6e22  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6dc3: movzwl 0x18(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6dc9: cmp    %r8d,%edi
  0x00000000032a6dcc: je     0x00000000032a6e3b  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6dce: movzwl 0x1a(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6dd4: cmp    %r8d,%edi
  0x00000000032a6dd7: je     0x00000000032a6e15  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6dd9: movzwl 0x1c(%rbx,%r10,2),%edi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6ddf: cmp    %r8d,%edi
  0x00000000032a6de2: je     0x00000000032a6e41  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6de4: movzwl 0x1e(%rbx,%r10,2),%ecx  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6dea: cmp    %r8d,%ecx
  0x00000000032a6ded: je     0x00000000032a6e1e  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6def: add    $0x8,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a6df3: cmp    %r11d,%r9d
  0x00000000032a6df6: jl     0x00000000032a6d90  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000032a6df8: cmp    %ebp,%r9d
  0x00000000032a6dfb: jge    0x00000000032a6e29
  0x00000000032a6dfd: data16 xchg %ax,%ax       ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000032a6e00: movzwl 0x10(%rbx,%r9,2),%r11d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00000000032a6e06: cmp    %r8d,%r11d
  0x00000000032a6e09: je     0x00000000032a6e26  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00000000032a6e0b: inc    %r9d               ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a6e0e: cmp    %ebp,%r9d
  0x00000000032a6e11: jl     0x00000000032a6e00  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00000000032a6e13: jmp    0x00000000032a6e29
  0x00000000032a6e15: add    $0x4,%r9d
  0x00000000032a6e19: inc    %r9d
  0x00000000032a6e1c: jmp    0x00000000032a6e26
  0x00000000032a6e1e: add    $0x4,%r9d
  0x00000000032a6e22: add    $0x3,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a6e26: mov    %r9d,%eax          ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000000032a6e29: add    $0x30,%rsp
  0x00000000032a6e2d: pop    %rbp
  0x00000000032a6e2e: test   %eax,-0x9b6e34(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032a6e34: retq   
  0x00000000032a6e35: add    $0x2,%r9d
  0x00000000032a6e39: jmp    0x00000000032a6e26
  0x00000000032a6e3b: add    $0x4,%r9d
  0x00000000032a6e3f: jmp    0x00000000032a6e26
  0x00000000032a6e41: add    $0x6,%r9d          ;*iinc
                                                ; - java.lang.String::indexOf@55 (line 1558)

  0x00000000032a6e45: jmp    0x00000000032a6e26
  0x00000000032a6e47: mov    $0xffffff86,%edx
  0x00000000032a6e4c: mov    %r8d,(%rsp)
  0x00000000032a6e50: mov    %r9d,0x4(%rsp)
  0x00000000032a6e55: mov    %ecx,0x8(%rsp)
  0x00000000032a6e59: xchg   %ax,%ax
  0x00000000032a6e5b: callq  0x00000000031d57a0  ; OopMap{[8]=NarrowOop off=384}
                                                ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)
                                                ;   {runtime_call}
  0x00000000032a6e60: int3                      ;*aload
                                                ; - java.lang.String::indexOf@43 (line 1559)

  0x00000000032a6e61: mov    $0xffffff65,%edx
  0x00000000032a6e66: mov    %r8d,(%rsp)
  0x00000000032a6e6a: mov    %r9d,0x8(%rsp)
  0x00000000032a6e6f: mov    %r10,0x10(%rsp)
  0x00000000032a6e74: data16 xchg %ax,%ax
  0x00000000032a6e77: callq  0x00000000031d57a0  ; OopMap{[16]=Oop off=412}
                                                ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)
                                                ;   {runtime_call}
  0x00000000032a6e7c: int3                      ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00000000032a6e7d: mov    $0xffffff65,%edx
  0x00000000032a6e82: mov    %r9d,0x4(%rsp)
  0x00000000032a6e87: mov    %r8d,0x8(%rsp)
  0x00000000032a6e8c: mov    %r10,0x10(%rsp)
  0x00000000032a6e91: xchg   %ax,%ax
  0x00000000032a6e93: callq  0x00000000031d57a0  ; OopMap{[16]=Oop off=440}
                                                ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)
                                                ;   {runtime_call}
  0x00000000032a6e98: int3                      ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00000000032a6e99: mov    $0xfffffff6,%edx
  0x00000000032a6e9e: nop
  0x00000000032a6e9f: callq  0x00000000031d57a0  ; OopMap{off=452}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00000000032a6ea4: int3                      ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)

  0x00000000032a6ea5: hlt    
  0x00000000032a6ea6: hlt    
  0x00000000032a6ea7: hlt    
  0x00000000032a6ea8: hlt    
  0x00000000032a6ea9: hlt    
  0x00000000032a6eaa: hlt    
  0x00000000032a6eab: hlt    
  0x00000000032a6eac: hlt    
  0x00000000032a6ead: hlt    
  0x00000000032a6eae: hlt    
  0x00000000032a6eaf: hlt    
  0x00000000032a6eb0: hlt    
  0x00000000032a6eb1: hlt    
  0x00000000032a6eb2: hlt    
  0x00000000032a6eb3: hlt    
  0x00000000032a6eb4: hlt    
  0x00000000032a6eb5: hlt    
  0x00000000032a6eb6: hlt    
  0x00000000032a6eb7: hlt    
  0x00000000032a6eb8: hlt    
  0x00000000032a6eb9: hlt    
  0x00000000032a6eba: hlt    
  0x00000000032a6ebb: hlt    
  0x00000000032a6ebc: hlt    
  0x00000000032a6ebd: hlt    
  0x00000000032a6ebe: hlt    
  0x00000000032a6ebf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a6ec0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a6ec5: callq  0x00000000032a6eca
  0x00000000032a6eca: subq   $0x5,(%rsp)
  0x00000000032a6ecf: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a6ed4: hlt    
  0x00000000032a6ed5: hlt    
  0x00000000032a6ed6: hlt    
  0x00000000032a6ed7: hlt    
<nmethod compile_id='31' compiler='C2' level='4' entry='0x00000000032a6ce0' size='1800' address='0x00000000032a6b90' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='848' scopes_pcs_offset='1008' dependencies_offset='1776' nul_chk_table_offset='1784' method='java/lang/String indexOf (II)I' bytes='70' count='3806' backedge_count='230635' iicount='3806' stamp='0.525'/>
<writer thread='26124'/>
<task_queued compile_id='37' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='79616' iicount='79616' stamp='0.525' comment='tiered' hot_count='79616'/>
<task_queued compile_id='38' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='72320' iicount='72320' stamp='0.525' comment='tiered' hot_count='72320'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032a4450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c154fc0} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x30]  (sp of caller)
  0x00000000032a4580: mov    0x8(%rdx),%r10d
  0x00000000032a4584: shl    $0x3,%r10
  0x00000000032a4588: cmp    %r10,%rax
  0x00000000032a458b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a4591: data16 xchg %ax,%ax
  0x00000000032a4594: nopl   0x0(%rax,%rax,1)
  0x00000000032a459c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a45a0: mov    %eax,-0x6000(%rsp)
  0x00000000032a45a7: push   %rbp
  0x00000000032a45a8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x00000000032a45ac: mov    %rdx,%rbx
  0x00000000032a45af: mov    0x10(%rdx),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00000000032a45b2: test   %eax,%eax
  0x00000000032a45b4: jne    0x00000000032a46a5  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00000000032a45ba: mov    0xc(%rdx),%ebp     ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00000000032a45bd: mov    0xc(%r12,%rbp,8),%r10d  ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00000000032a46c5
  0x00000000032a45c2: test   %r10d,%r10d
  0x00000000032a45c5: jle    0x00000000032a46b1  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00000000032a45cb: test   %r10d,%r10d
  0x00000000032a45ce: jbe    0x00000000032a46b5
  0x00000000032a45d4: mov    %r10d,%r9d
  0x00000000032a45d7: dec    %r9d
  0x00000000032a45da: cmp    %r10d,%r9d
  0x00000000032a45dd: jae    0x00000000032a46b5  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000000032a45e3: movzwl 0x10(%r12,%rbp,8),%r11d  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00000000032a45e9: mov    %r10d,%edi
  0x00000000032a45ec: add    $0xfffffffd,%edi
  0x00000000032a45ef: mov    %r11d,%eax
  0x00000000032a45f2: shl    $0x5,%eax
  0x00000000032a45f5: lea    (%r12,%rbp,8),%rdx
  0x00000000032a45f9: mov    $0x1,%r8d
  0x00000000032a45ff: mov    $0x80000000,%ecx
  0x00000000032a4604: cmp    %edi,%r9d
  0x00000000032a4607: cmovl  %ecx,%edi
  0x00000000032a460a: cmp    $0x1,%edi
  0x00000000032a460d: jle    0x00000000032a4696
  0x00000000032a4613: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000000032a4616: jmp    0x00000000032a4643  ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000000032a4618: movzwl 0x10(%rdx,%r8,2),%ecx
  0x00000000032a461e: sub    %r11d,%eax
  0x00000000032a4621: add    %ecx,%eax          ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x00000000032a4623: inc    %r8d               ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x00000000032a4626: cmp    %r10d,%r8d
  0x00000000032a4629: jge    0x00000000032a46a2  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000000032a462f: mov    %eax,%r9d
  0x00000000032a4632: shl    $0x5,%r9d
  0x00000000032a4636: mov    %eax,%r11d
  0x00000000032a4639: mov    %r9d,%eax
  0x00000000032a463c: jmp    0x00000000032a4618
  0x00000000032a463e: xchg   %ax,%ax
  0x00000000032a4640: sub    %r11d,%eax         ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000000032a4643: movzwl 0x10(%rdx,%r8,2),%r9d
  0x00000000032a4649: add    %r9d,%eax
  0x00000000032a464c: movslq %r8d,%r11
  0x00000000032a464f: movzwl 0x12(%rdx,%r11,2),%ecx
  0x00000000032a4655: movzwl 0x16(%rdx,%r11,2),%ebp
  0x00000000032a465b: movzwl 0x14(%rdx,%r11,2),%r9d
  0x00000000032a4661: mov    %eax,%r11d
  0x00000000032a4664: shl    $0x5,%r11d
  0x00000000032a4668: sub    %eax,%r11d
  0x00000000032a466b: add    %ecx,%r11d
  0x00000000032a466e: mov    %r11d,%esi
  0x00000000032a4671: shl    $0x5,%esi
  0x00000000032a4674: sub    %r11d,%esi
  0x00000000032a4677: add    %r9d,%esi
  0x00000000032a467a: mov    %esi,%r11d
  0x00000000032a467d: shl    $0x5,%r11d
  0x00000000032a4681: sub    %esi,%r11d
  0x00000000032a4684: add    %ebp,%r11d         ;*iadd
                                                ; - java.lang.String::hashCode@40 (line 1471)

  0x00000000032a4687: mov    %r11d,%eax
  0x00000000032a468a: shl    $0x5,%eax          ;*imul
                                                ; - java.lang.String::hashCode@36 (line 1471)

  0x00000000032a468d: add    $0x4,%r8d          ;*iinc
                                                ; - java.lang.String::hashCode@42 (line 1470)

  0x00000000032a4691: cmp    %edi,%r8d
  0x00000000032a4694: jl     0x00000000032a4640  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000000032a4696: cmp    %r10d,%r8d
  0x00000000032a4699: jl     0x00000000032a4618
  0x00000000032a469f: mov    %r11d,%eax
  0x00000000032a46a2: mov    %eax,0x10(%rbx)    ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)

  0x00000000032a46a5: add    $0x20,%rsp
  0x00000000032a46a9: pop    %rbp
  0x00000000032a46aa: test   %eax,-0x9b46b0(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032a46b0: retq   
  0x00000000032a46b1: xor    %eax,%eax
  0x00000000032a46b3: jmp    0x00000000032a46a5
  0x00000000032a46b5: mov    $0xffffff86,%edx
  0x00000000032a46ba: mov    %rbx,(%rsp)
  0x00000000032a46be: nop
  0x00000000032a46bf: callq  0x00000000031d57a0  ; OopMap{rbp=NarrowOop [0]=Oop off=324}
                                                ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)
                                                ;   {runtime_call}
  0x00000000032a46c4: int3                      ;*bipush
                                                ; - java.lang.String::hashCode@33 (line 1471)

  0x00000000032a46c5: mov    $0xfffffff6,%edx
  0x00000000032a46ca: nop
  0x00000000032a46cb: callq  0x00000000031d57a0  ; OopMap{off=336}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000000032a46d0: int3                      ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)

  0x00000000032a46d1: hlt    
  0x00000000032a46d2: hlt    
  0x00000000032a46d3: hlt    
  0x00000000032a46d4: hlt    
  0x00000000032a46d5: hlt    
  0x00000000032a46d6: hlt    
  0x00000000032a46d7: hlt    
  0x00000000032a46d8: hlt    
  0x00000000032a46d9: hlt    
  0x00000000032a46da: hlt    
  0x00000000032a46db: hlt    
  0x00000000032a46dc: hlt    
  0x00000000032a46dd: hlt    
  0x00000000032a46de: hlt    
  0x00000000032a46df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a46e0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a46e5: callq  0x00000000032a46ea
  0x00000000032a46ea: subq   $0x5,(%rsp)
  0x00000000032a46ef: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a46f4: hlt    
  0x00000000032a46f5: hlt    
  0x00000000032a46f6: hlt    
  0x00000000032a46f7: hlt    
<nmethod compile_id='28' compiler='C2' level='4' entry='0x00000000032a4580' size='1224' address='0x00000000032a4450' relocation_offset='288' insts_offset='304' stub_offset='656' scopes_data_offset='688' scopes_pcs_offset='800' dependencies_offset='1200' nul_chk_table_offset='1208' method='java/lang/String hashCode ()I' bytes='55' count='5522' backedge_count='119833' iicount='5522' stamp='0.528'/>
<writer thread='26124'/>
<task_queued compile_id='39' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='72064' iicount='72064' stamp='0.528' comment='tiered' hot_count='72064'/>
<task_queued compile_id='40' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='76288' iicount='76288' stamp='0.528' comment='tiered' hot_count='76288'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032a64d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c27cf90} &apos;parentOf&apos; &apos;(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;&apos; in &apos;java/util/TreeMap&apos;
  # parm0:    rdx:rdx   = &apos;java/util/TreeMap$Entry&apos;
  #           [sp+0x30]  (sp of caller)
  0x00000000032a6600: mov    %eax,-0x6000(%rsp)
  0x00000000032a6607: push   %rbp
  0x00000000032a6608: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.util.TreeMap::parentOf@-1 (line 2204)

  0x00000000032a660c: mov    0x20(%rdx),%r10d   ; implicit exception: dispatches to 0x00000000032a6623
  0x00000000032a6610: mov    %r10,%rax
  0x00000000032a6613: shl    $0x3,%rax          ;*getfield parent
                                                ; - java.util.TreeMap::parentOf@9 (line 2204)

  0x00000000032a6617: add    $0x20,%rsp
  0x00000000032a661b: pop    %rbp
  0x00000000032a661c: test   %eax,-0x9b6622(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032a6622: retq   
  0x00000000032a6623: mov    %rdx,(%rsp)
  0x00000000032a6627: mov    $0xffffff65,%edx
  0x00000000032a662c: data16 xchg %ax,%ax
  0x00000000032a662f: callq  0x00000000031d57a0  ; OopMap{[0]=Oop off=52}
                                                ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)
                                                ;   {runtime_call}
  0x00000000032a6634: int3                      ;*ifnonnull
                                                ; - java.util.TreeMap::parentOf@1 (line 2204)

  0x00000000032a6635: hlt    
  0x00000000032a6636: hlt    
  0x00000000032a6637: hlt    
  0x00000000032a6638: hlt    
  0x00000000032a6639: hlt    
  0x00000000032a663a: hlt    
  0x00000000032a663b: hlt    
  0x00000000032a663c: hlt    
  0x00000000032a663d: hlt    
  0x00000000032a663e: hlt    
  0x00000000032a663f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a6640: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a6645: callq  0x00000000032a664a
  0x00000000032a664a: subq   $0x5,(%rsp)
  0x00000000032a664f: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a6654: hlt    
  0x00000000032a6655: hlt    
  0x00000000032a6656: hlt    
  0x00000000032a6657: hlt    
<nmethod compile_id='23' compiler='C2' level='4' entry='0x00000000032a6600' size='552' address='0x00000000032a64d0' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='432' dependencies_offset='528' nul_chk_table_offset='536' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10339' iicount='10339' stamp='0.529'/>
<writer thread='26124'/>
<task_queued compile_id='41' method='java/lang/String getChars (II[CI)V' bytes='62' count='3968' iicount='3968' level='3' stamp='0.529' comment='tiered' hot_count='3968'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032a1710:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = char
  # parm1:    r9        = char
  #           [sp+0x60]  (sp of caller)
  0x00000000032a18c0: mov    0x8(%rdx),%r10d
  0x00000000032a18c4: shl    $0x3,%r10
  0x00000000032a18c8: cmp    %rax,%r10
  0x00000000032a18cb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a18d1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a18dc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a18e0: mov    %eax,-0x6000(%rsp)
  0x00000000032a18e7: push   %rbp
  0x00000000032a18e8: sub    $0x50,%rsp
  0x00000000032a18ec: movabs $0x1c3977b8,%rbx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a18f6: mov    0xdc(%rbx),%esi
  0x00000000032a18fc: add    $0x8,%esi
  0x00000000032a18ff: mov    %esi,0xdc(%rbx)
  0x00000000032a1905: movabs $0x1c155ef0,%rbx   ;   {metadata({method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a190f: and    $0x1ff8,%esi
  0x00000000032a1915: cmp    $0x0,%esi
  0x00000000032a1918: je     0x00000000032a1dbf  ;*iload_1
                                                ; - java.lang.String::replace@0 (line 2067)

  0x00000000032a191e: cmp    %r9d,%r8d
  0x00000000032a1921: movabs $0x1c3977b8,%rbx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a192b: movabs $0x108,%rsi
  0x00000000032a1935: je     0x00000000032a1945
  0x00000000032a193b: movabs $0x118,%rsi
  0x00000000032a1945: mov    (%rbx,%rsi,1),%rdi
  0x00000000032a1949: lea    0x1(%rdi),%rdi
  0x00000000032a194d: mov    %rdi,(%rbx,%rsi,1)
  0x00000000032a1951: je     0x00000000032a1db0  ;*if_icmpeq
                                                ; - java.lang.String::replace@2 (line 2067)

  0x00000000032a1957: mov    0xc(%rdx),%r11d
  0x00000000032a195b: shl    $0x3,%r11          ;*getfield value
                                                ; - java.lang.String::replace@6 (line 2068)

  0x00000000032a195f: mov    0xc(%r11),%r13d    ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ; implicit exception: dispatches to 0x00000000032a1dd6
  0x00000000032a1963: mov    $0xffffffff,%ebx
  0x00000000032a1968: jmpq   0x00000000032a19f7  ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x00000000032a196d: data16 xchg %ax,%ax
  0x00000000032a1970: movslq %r14d,%rbx
  0x00000000032a1973: cmp    0xc(%r11),%r14d
  0x00000000032a1977: jae    0x00000000032a1ddb
  0x00000000032a197d: movzwl 0x10(%r11,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)

  0x00000000032a1983: movabs $0x1c3977b8,%rsi   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a198d: mov    0xe0(%rsi),%edi
  0x00000000032a1993: add    $0x8,%edi
  0x00000000032a1996: mov    %edi,0xe0(%rsi)
  0x00000000032a199c: movabs $0x1c155ef0,%rsi   ;   {metadata({method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a19a6: and    $0xfff8,%edi
  0x00000000032a19ac: cmp    $0x0,%edi
  0x00000000032a19af: je     0x00000000032a1de4  ; OopMap{rdx=Oop r11=Oop off=245}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x00000000032a19b5: test   %eax,-0x9b18bb(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032a19bb: cmp    %r8d,%ebx
  0x00000000032a19be: movabs $0x1c3977b8,%rbx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a19c8: movabs $0x148,%rsi
  0x00000000032a19d2: jne    0x00000000032a19e2
  0x00000000032a19d8: movabs $0x158,%rsi
  0x00000000032a19e2: mov    (%rbx,%rsi,1),%rdi
  0x00000000032a19e6: lea    0x1(%rdi),%rdi
  0x00000000032a19ea: mov    %rdi,(%rbx,%rsi,1)
  0x00000000032a19ee: je     0x00000000032a1a3b  ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)

  0x00000000032a19f4: mov    %r14,%rbx          ;*iinc
                                                ; - java.lang.String::replace@20 (line 2072)

  0x00000000032a19f7: mov    %rbx,%r14
  0x00000000032a19fa: inc    %r14d
  0x00000000032a19fd: cmp    %r13d,%r14d
  0x00000000032a1a00: movabs $0x1c3977b8,%rbx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1a0a: movabs $0x128,%rsi
  0x00000000032a1a14: jge    0x00000000032a1a24
  0x00000000032a1a1a: movabs $0x138,%rsi
  0x00000000032a1a24: mov    (%rbx,%rsi,1),%rdi
  0x00000000032a1a28: lea    0x1(%rdi),%rdi
  0x00000000032a1a2c: mov    %rdi,(%rbx,%rsi,1)
  0x00000000032a1a30: jge    0x00000000032a1a4b
  0x00000000032a1a36: jmpq   0x00000000032a1970  ;*if_icmpge
                                                ; - java.lang.String::replace@26 (line 2072)

  0x00000000032a1a3b: movabs $0x1c3977b8,%rbx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1a45: incl   0x168(%rbx)        ;*goto
                                                ; - java.lang.String::replace@38 (line 2074)

  0x00000000032a1a4b: cmp    %r13d,%r14d
  0x00000000032a1a4e: movabs $0x1c3977b8,%rbx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1a58: movabs $0x180,%rsi
  0x00000000032a1a62: jge    0x00000000032a1a72
  0x00000000032a1a68: movabs $0x190,%rsi
  0x00000000032a1a72: mov    (%rbx,%rsi,1),%rdi
  0x00000000032a1a76: lea    0x1(%rdi),%rdi
  0x00000000032a1a7a: mov    %rdi,(%rbx,%rsi,1)
  0x00000000032a1a7e: jge    0x00000000032a1db0  ;*if_icmpge
                                                ; - java.lang.String::replace@44 (line 2077)

  0x00000000032a1a84: mov    %r13,%rbx
  0x00000000032a1a87: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032a1a91: movslq %ebx,%rbx
  0x00000000032a1a94: mov    %rbx,%rdi
  0x00000000032a1a97: cmp    $0xffffff,%rbx
  0x00000000032a1a9e: ja     0x00000000032a1dfb
  0x00000000032a1aa4: movabs $0x17,%rsi
  0x00000000032a1aae: lea    (%rsi,%rbx,2),%rsi
  0x00000000032a1ab2: and    $0xfffffffffffffff8,%rsi
  0x00000000032a1ab6: mov    0x60(%r15),%rax
  0x00000000032a1aba: lea    (%rax,%rsi,1),%rsi
  0x00000000032a1abe: cmp    0x70(%r15),%rsi
  0x00000000032a1ac2: ja     0x00000000032a1dfb
  0x00000000032a1ac8: mov    %rsi,0x60(%r15)
  0x00000000032a1acc: sub    %rax,%rsi
  0x00000000032a1acf: movq   $0x1,(%rax)
  0x00000000032a1ad6: mov    %rdx,%rcx
  0x00000000032a1ad9: shr    $0x3,%rcx
  0x00000000032a1add: mov    %ecx,0x8(%rax)
  0x00000000032a1ae0: mov    %ebx,0xc(%rax)
  0x00000000032a1ae3: sub    $0x10,%rsi
  0x00000000032a1ae7: je     0x00000000032a1afe
  0x00000000032a1aed: xor    %rbx,%rbx
  0x00000000032a1af0: shr    $0x3,%rsi
  0x00000000032a1af4: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032a1af9: dec    %rsi
  0x00000000032a1afc: jne    0x00000000032a1af4
  0x00000000032a1afe: mov    %rax,%rbx          ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)

  0x00000000032a1b01: mov    $0x0,%edx
  0x00000000032a1b06: jmpq   0x00000000032a1b7e  ;*iload
                                                ; - java.lang.String::replace@55 (line 2079)

  0x00000000032a1b0b: nopl   0x0(%rax,%rax,1)
  0x00000000032a1b10: movslq %edx,%rsi
  0x00000000032a1b13: cmp    0xc(%r11),%edx
  0x00000000032a1b17: jae    0x00000000032a1e05
  0x00000000032a1b1d: movzwl 0x10(%r11,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)

  0x00000000032a1b23: movslq %edx,%rdi
  0x00000000032a1b26: cmp    0xc(%rbx),%edx
  0x00000000032a1b29: jae    0x00000000032a1e0e
  0x00000000032a1b2f: mov    %si,0x10(%rbx,%rdi,2)  ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)

  0x00000000032a1b34: inc    %edx
  0x00000000032a1b36: movabs $0x1c3977b8,%rsi   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1b40: mov    0xe0(%rsi),%edi
  0x00000000032a1b46: add    $0x8,%edi
  0x00000000032a1b49: mov    %edi,0xe0(%rsi)
  0x00000000032a1b4f: movabs $0x1c155ef0,%rsi   ;   {metadata({method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1b59: and    $0xfff8,%edi
  0x00000000032a1b5f: cmp    $0x0,%edi
  0x00000000032a1b62: je     0x00000000032a1e17  ; OopMap{r11=Oop rbx=Oop off=680}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x00000000032a1b68: test   %eax,-0x9b1a6e(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032a1b6e: movabs $0x1c3977b8,%rsi   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1b78: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)

  0x00000000032a1b7e: cmp    %r14d,%edx
  0x00000000032a1b81: movabs $0x1c3977b8,%rsi   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1b8b: movabs $0x1a0,%rdi
  0x00000000032a1b95: jge    0x00000000032a1ba5
  0x00000000032a1b9b: movabs $0x1b0,%rdi
  0x00000000032a1ba5: mov    (%rsi,%rdi,1),%rax
  0x00000000032a1ba9: lea    0x1(%rax),%rax
  0x00000000032a1bad: mov    %rax,(%rsi,%rdi,1)
  0x00000000032a1bb1: jge    0x00000000032a1c7c
  0x00000000032a1bb7: jmpq   0x00000000032a1b10  ;*if_icmpge
                                                ; - java.lang.String::replace@59 (line 2079)

  0x00000000032a1bbc: nopl   0x0(%rax)
  0x00000000032a1bc0: movslq %r14d,%rdx
  0x00000000032a1bc3: cmp    0xc(%r11),%r14d
  0x00000000032a1bc7: jae    0x00000000032a1e2e
  0x00000000032a1bcd: movzwl 0x10(%r11,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)

  0x00000000032a1bd3: cmp    %r8d,%edx
  0x00000000032a1bd6: movabs $0x1c3977b8,%rsi   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1be0: movabs $0x1f8,%rdi
  0x00000000032a1bea: jne    0x00000000032a1bfa
  0x00000000032a1bf0: movabs $0x208,%rdi
  0x00000000032a1bfa: mov    (%rsi,%rdi,1),%rax
  0x00000000032a1bfe: lea    0x1(%rax),%rax
  0x00000000032a1c02: mov    %rax,(%rsi,%rdi,1)
  0x00000000032a1c06: jne    0x00000000032a1c1f  ;*if_icmpne
                                                ; - java.lang.String::replace@98 (line 2084)

  0x00000000032a1c0c: movabs $0x1c3977b8,%rdx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1c16: incl   0x218(%rdx)
  0x00000000032a1c1c: mov    %r9,%rdx           ;*goto
                                                ; - java.lang.String::replace@102 (line 2084)

  0x00000000032a1c1f: movslq %r14d,%rsi
  0x00000000032a1c22: cmp    0xc(%rbx),%r14d
  0x00000000032a1c26: jae    0x00000000032a1e37
  0x00000000032a1c2c: mov    %dx,0x10(%rbx,%rsi,2)  ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)

  0x00000000032a1c31: inc    %r14d
  0x00000000032a1c34: movabs $0x1c3977b8,%rdx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1c3e: mov    0xe0(%rdx),%esi
  0x00000000032a1c44: add    $0x8,%esi
  0x00000000032a1c47: mov    %esi,0xe0(%rdx)
  0x00000000032a1c4d: movabs $0x1c155ef0,%rdx   ;   {metadata({method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1c57: and    $0xfff8,%esi
  0x00000000032a1c5d: cmp    $0x0,%esi
  0x00000000032a1c60: je     0x00000000032a1e40  ; OopMap{r11=Oop rbx=Oop off=934}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x00000000032a1c66: test   %eax,-0x9b1b6c(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032a1c6c: movabs $0x1c3977b8,%rdx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1c76: incl   0x230(%rdx)        ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)

  0x00000000032a1c7c: cmp    %r13d,%r14d
  0x00000000032a1c7f: movabs $0x1c3977b8,%rdx   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1c89: movabs $0x1d8,%rsi
  0x00000000032a1c93: jge    0x00000000032a1ca3
  0x00000000032a1c99: movabs $0x1e8,%rsi
  0x00000000032a1ca3: mov    (%rdx,%rsi,1),%rdi
  0x00000000032a1ca7: lea    0x1(%rdi),%rdi
  0x00000000032a1cab: mov    %rdi,(%rdx,%rsi,1)
  0x00000000032a1caf: jl     0x00000000032a1bc0  ;*if_icmpge
                                                ; - java.lang.String::replace@81 (line 2082)

  0x00000000032a1cb5: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032a1cbf: mov    0x60(%r15),%rax
  0x00000000032a1cc3: lea    0x18(%rax),%rdi
  0x00000000032a1cc7: cmp    0x70(%r15),%rdi
  0x00000000032a1ccb: ja     0x00000000032a1e57
  0x00000000032a1cd1: mov    %rdi,0x60(%r15)
  0x00000000032a1cd5: mov    0xa8(%rdx),%rcx
  0x00000000032a1cdc: mov    %rcx,(%rax)
  0x00000000032a1cdf: mov    %rdx,%rcx
  0x00000000032a1ce2: shr    $0x3,%rcx
  0x00000000032a1ce6: mov    %ecx,0x8(%rax)
  0x00000000032a1ce9: xor    %rcx,%rcx
  0x00000000032a1cec: mov    %ecx,0xc(%rax)
  0x00000000032a1cef: xor    %rcx,%rcx
  0x00000000032a1cf2: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.String::replace@114 (line 2087)

  0x00000000032a1cf6: mov    %rax,%rsi
  0x00000000032a1cf9: movabs $0x1c3977b8,%rdi   ;   {metadata(method data for {method} {0x000000001c155ef8} &apos;replace&apos; &apos;(CC)Ljava/lang/String;&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1d03: addq   $0x1,0x248(%rdi)
  0x00000000032a1d0b: movabs $0x1c395650,%rsi   ;   {metadata(method data for {method} {0x000000001c153b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1d15: mov    0xdc(%rsi),%edi
  0x00000000032a1d1b: add    $0x8,%edi
  0x00000000032a1d1e: mov    %edi,0xdc(%rsi)
  0x00000000032a1d24: movabs $0x1c153b80,%rsi   ;   {metadata({method} {0x000000001c153b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1d2e: and    $0x7ffff8,%edi
  0x00000000032a1d34: cmp    $0x0,%edi
  0x00000000032a1d37: je     0x00000000032a1e64
  0x00000000032a1d3d: mov    %rax,%rsi
  0x00000000032a1d40: movabs $0x1c395650,%rdi   ;   {metadata(method data for {method} {0x000000001c153b88} &apos;&lt;init&gt;&apos; &apos;([CZ)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032a1d4a: addq   $0x1,0x108(%rdi)
  0x00000000032a1d52: movabs $0x1c281c10,%rsi   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032a1d5c: mov    0xdc(%rsi),%edi
  0x00000000032a1d62: add    $0x8,%edi
  0x00000000032a1d65: mov    %edi,0xdc(%rsi)
  0x00000000032a1d6b: movabs $0x1c150480,%rsi   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032a1d75: and    $0x7ffff8,%edi
  0x00000000032a1d7b: cmp    $0x0,%edi
  0x00000000032a1d7e: je     0x00000000032a1e7b
  0x00000000032a1d84: mov    %rbx,%r10
  0x00000000032a1d87: shr    $0x3,%r10
  0x00000000032a1d8b: mov    %r10d,0xc(%rax)
  0x00000000032a1d8f: mov    %rax,%rsi
  0x00000000032a1d92: shr    $0x9,%rsi
  0x00000000032a1d96: movabs $0xef3d000,%rdi
  0x00000000032a1da0: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.String::replace@121 (line 2087)

  0x00000000032a1da4: add    $0x50,%rsp
  0x00000000032a1da8: pop    %rbp
  0x00000000032a1da9: test   %eax,-0x9b1caf(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032a1daf: retq                      ;*areturn
                                                ; - java.lang.String::replace@124 (line 2087)

  0x00000000032a1db0: mov    %rdx,%rax
  0x00000000032a1db3: add    $0x50,%rsp
  0x00000000032a1db7: pop    %rbp
  0x00000000032a1db8: test   %eax,-0x9b1cbe(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032a1dbe: retq   
  0x00000000032a1dbf: mov    %rbx,0x8(%rsp)
  0x00000000032a1dc4: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032a1dcc: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=1297}
                                                ;*synchronization entry
                                                ; - java.lang.String::replace@-1 (line 2067)
                                                ;   {runtime_call}
  0x00000000032a1dd1: jmpq   0x00000000032a191e
  0x00000000032a1dd6: callq  0x000000000328d680  ; OopMap{rdx=Oop r11=Oop off=1307}
                                                ;*arraylength
                                                ; - java.lang.String::replace@9 (line 2068)
                                                ;   {runtime_call}
  0x00000000032a1ddb: mov    %r14,(%rsp)
  0x00000000032a1ddf: callq  0x000000000328c940  ; OopMap{rdx=Oop r11=Oop off=1316}
                                                ;*caload
                                                ; - java.lang.String::replace@33 (line 2073)
                                                ;   {runtime_call}
  0x00000000032a1de4: mov    %rsi,0x8(%rsp)
  0x00000000032a1de9: movq   $0x23,(%rsp)
  0x00000000032a1df1: callq  0x0000000003291d60  ; OopMap{rdx=Oop r11=Oop off=1334}
                                                ;*if_icmpne
                                                ; - java.lang.String::replace@35 (line 2073)
                                                ;   {runtime_call}
  0x00000000032a1df6: jmpq   0x00000000032a19b5
  0x00000000032a1dfb: callq  0x000000000328e700  ; OopMap{r11=Oop off=1344}
                                                ;*newarray
                                                ; - java.lang.String::replace@48 (line 2078)
                                                ;   {runtime_call}
  0x00000000032a1e00: jmpq   0x00000000032a1afe
  0x00000000032a1e05: mov    %rdx,(%rsp)
  0x00000000032a1e09: callq  0x000000000328c940  ; OopMap{r11=Oop rbx=Oop off=1358}
                                                ;*caload
                                                ; - java.lang.String::replace@70 (line 2080)
                                                ;   {runtime_call}
  0x00000000032a1e0e: mov    %rdx,(%rsp)
  0x00000000032a1e12: callq  0x000000000328c940  ; OopMap{r11=Oop rbx=Oop off=1367}
                                                ;*castore
                                                ; - java.lang.String::replace@71 (line 2080)
                                                ;   {runtime_call}
  0x00000000032a1e17: mov    %rsi,0x8(%rsp)
  0x00000000032a1e1c: movq   $0x4b,(%rsp)
  0x00000000032a1e24: callq  0x0000000003291d60  ; OopMap{r11=Oop rbx=Oop off=1385}
                                                ;*goto
                                                ; - java.lang.String::replace@75 (line 2079)
                                                ;   {runtime_call}
  0x00000000032a1e29: jmpq   0x00000000032a1b68
  0x00000000032a1e2e: mov    %r14,(%rsp)
  0x00000000032a1e32: callq  0x000000000328c940  ; OopMap{r11=Oop rbx=Oop off=1399}
                                                ;*caload
                                                ; - java.lang.String::replace@88 (line 2083)
                                                ;   {runtime_call}
  0x00000000032a1e37: mov    %r14,(%rsp)
  0x00000000032a1e3b: callq  0x000000000328c940  ; OopMap{r11=Oop rbx=Oop off=1408}
                                                ;*castore
                                                ; - java.lang.String::replace@107 (line 2084)
                                                ;   {runtime_call}
  0x00000000032a1e40: mov    %rdx,0x8(%rsp)
  0x00000000032a1e45: movq   $0x6f,(%rsp)
  0x00000000032a1e4d: callq  0x0000000003291d60  ; OopMap{r11=Oop rbx=Oop off=1426}
                                                ;*goto
                                                ; - java.lang.String::replace@111 (line 2086)
                                                ;   {runtime_call}
  0x00000000032a1e52: jmpq   0x00000000032a1c66
  0x00000000032a1e57: mov    %rdx,%rdx
  0x00000000032a1e5a: callq  0x000000000328de00  ; OopMap{rbx=Oop off=1439}
                                                ;*new  ; - java.lang.String::replace@114 (line 2087)
                                                ;   {runtime_call}
  0x00000000032a1e5f: jmpq   0x00000000032a1cf6
  0x00000000032a1e64: mov    %rsi,0x8(%rsp)
  0x00000000032a1e69: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032a1e71: callq  0x0000000003291d60  ; OopMap{rbx=Oop rax=Oop off=1462}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x00000000032a1e76: jmpq   0x00000000032a1d3d
  0x00000000032a1e7b: mov    %rsi,0x8(%rsp)
  0x00000000032a1e80: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032a1e88: callq  0x0000000003291d60  ; OopMap{rbx=Oop rax=Oop off=1485}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.String::replace@121 (line 2087)
                                                ;   {runtime_call}
  0x00000000032a1e8d: jmpq   0x00000000032a1d84
  0x00000000032a1e92: nop
  0x00000000032a1e93: nop
  0x00000000032a1e94: mov    0x2a8(%r15),%rax
  0x00000000032a1e9b: movabs $0x0,%r10
  0x00000000032a1ea5: mov    %r10,0x2a8(%r15)
  0x00000000032a1eac: movabs $0x0,%r10
  0x00000000032a1eb6: mov    %r10,0x2b0(%r15)
  0x00000000032a1ebd: add    $0x50,%rsp
  0x00000000032a1ec1: pop    %rbp
  0x00000000032a1ec2: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032a1ec7: hlt    
  0x00000000032a1ec8: hlt    
  0x00000000032a1ec9: hlt    
  0x00000000032a1eca: hlt    
  0x00000000032a1ecb: hlt    
  0x00000000032a1ecc: hlt    
  0x00000000032a1ecd: hlt    
  0x00000000032a1ece: hlt    
  0x00000000032a1ecf: hlt    
  0x00000000032a1ed0: hlt    
  0x00000000032a1ed1: hlt    
  0x00000000032a1ed2: hlt    
  0x00000000032a1ed3: hlt    
  0x00000000032a1ed4: hlt    
  0x00000000032a1ed5: hlt    
  0x00000000032a1ed6: hlt    
  0x00000000032a1ed7: hlt    
  0x00000000032a1ed8: hlt    
  0x00000000032a1ed9: hlt    
  0x00000000032a1eda: hlt    
  0x00000000032a1edb: hlt    
  0x00000000032a1edc: hlt    
  0x00000000032a1edd: hlt    
  0x00000000032a1ede: hlt    
  0x00000000032a1edf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a1ee0: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032a1ee5: mov    %rsp,-0x28(%rsp)
  0x00000000032a1eea: sub    $0x80,%rsp
  0x00000000032a1ef1: mov    %rax,0x78(%rsp)
  0x00000000032a1ef6: mov    %rcx,0x70(%rsp)
  0x00000000032a1efb: mov    %rdx,0x68(%rsp)
  0x00000000032a1f00: mov    %rbx,0x60(%rsp)
  0x00000000032a1f05: mov    %rbp,0x50(%rsp)
  0x00000000032a1f0a: mov    %rsi,0x48(%rsp)
  0x00000000032a1f0f: mov    %rdi,0x40(%rsp)
  0x00000000032a1f14: mov    %r8,0x38(%rsp)
  0x00000000032a1f19: mov    %r9,0x30(%rsp)
  0x00000000032a1f1e: mov    %r10,0x28(%rsp)
  0x00000000032a1f23: mov    %r11,0x20(%rsp)
  0x00000000032a1f28: mov    %r12,0x18(%rsp)
  0x00000000032a1f2d: mov    %r13,0x10(%rsp)
  0x00000000032a1f32: mov    %r14,0x8(%rsp)
  0x00000000032a1f37: mov    %r15,(%rsp)
  0x00000000032a1f3b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032a1f45: movabs $0x32a1ee5,%rdx    ;   {internal_word}
  0x00000000032a1f4f: mov    %rsp,%r8
  0x00000000032a1f52: and    $0xfffffffffffffff0,%rsp
  0x00000000032a1f56: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032a1f5b: hlt    
[Deopt Handler Code]
  0x00000000032a1f5c: movabs $0x32a1f5c,%r10    ;   {section_word}
  0x00000000032a1f66: push   %r10
  0x00000000032a1f68: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a1f6d: hlt    
  0x00000000032a1f6e: hlt    
  0x00000000032a1f6f: hlt    
<nmethod compile_id='35' compiler='C1' level='3' entry='0x00000000032a18c0' size='3352' address='0x00000000032a1710' relocation_offset='288' insts_offset='432' stub_offset='2000' scopes_data_offset='2168' scopes_pcs_offset='2608' dependencies_offset='3328' nul_chk_table_offset='3336' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='377' backedge_count='26990' iicount='377' stamp='0.536'/>
<writer thread='4332'/>
Decoding compiled method 0x00000000032a5d10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c2b1ee0} &apos;encode&apos; &apos;([CII[B)I&apos; in &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # this:     rdx:rdx   = &apos;sun/nio/cs/UTF_8$Encoder&apos;
  # parm0:    r8:r8     = &apos;[C&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  # parm3:    rsi:rsi   = &apos;[B&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032a5e60: mov    0x8(%rdx),%r10d
  0x00000000032a5e64: shl    $0x3,%r10
  0x00000000032a5e68: cmp    %r10,%rax
  0x00000000032a5e6b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a5e71: data16 xchg %ax,%ax
  0x00000000032a5e74: nopl   0x0(%rax,%rax,1)
  0x00000000032a5e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a5e80: mov    %eax,-0x6000(%rsp)
  0x00000000032a5e87: push   %rbp
  0x00000000032a5e88: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)

  0x00000000032a5e8c: mov    %rdx,%r13
  0x00000000032a5e8f: mov    0xc(%rsi),%r11d    ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x00000000032a6085
  0x00000000032a5e93: cmp    %r11d,%edi
  0x00000000032a5e96: mov    %r11d,%r10d
  0x00000000032a5e99: cmovl  %edi,%r10d         ;*invokestatic min
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00000000032a5e9d: mov    %r9d,%ecx
  0x00000000032a5ea0: add    %edi,%ecx          ;*iadd
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@2 (line 704)

  0x00000000032a5ea2: xor    %eax,%eax
  0x00000000032a5ea4: test   %r10d,%r10d
  0x00000000032a5ea7: jle    0x00000000032a5fd3  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000000032a5ead: mov    0xc(%r8),%ebx      ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ; implicit exception: dispatches to 0x00000000032a601d
  0x00000000032a5eb1: cmp    %ebx,%r9d
  0x00000000032a5eb4: jae    0x00000000032a601d
  0x00000000032a5eba: mov    %r9d,%edx
  0x00000000032a5ebd: add    %r10d,%edx
  0x00000000032a5ec0: dec    %edx
  0x00000000032a5ec2: cmp    %ebx,%edx
  0x00000000032a5ec4: jae    0x00000000032a601d
  0x00000000032a5eca: test   %r11d,%r11d
  0x00000000032a5ecd: jbe    0x00000000032a601d
  0x00000000032a5ed3: mov    %r10d,%edi
  0x00000000032a5ed6: dec    %edi
  0x00000000032a5ed8: cmp    %r11d,%edi
  0x00000000032a5edb: jae    0x00000000032a601d  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000032a5ee1: movzwl 0x10(%r8,%r9,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000032a5ee7: cmp    $0x80,%ebp
  0x00000000032a5eed: jge    0x00000000032a6075  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000032a5ef3: mov    %bpl,0x10(%rsi)    ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000032a5ef7: mov    %r10d,%edi
  0x00000000032a5efa: add    $0xfffffffd,%edi
  0x00000000032a5efd: mov    $0x80000000,%r11d
  0x00000000032a5f03: cmp    %edi,%r10d
  0x00000000032a5f06: cmovl  %r11d,%edi
  0x00000000032a5f0a: mov    $0x1,%eax
  0x00000000032a5f0f: cmp    $0x1,%edi
  0x00000000032a5f12: jle    0x00000000032a6045
  0x00000000032a5f18: nopl   0x0(%rax,%rax,1)
  0x00000000032a5f20: mov    %eax,%r11d
  0x00000000032a5f23: add    %r9d,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000032a5f26: movzwl 0x10(%r8,%r11,2),%ebx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000032a5f2c: cmp    $0x80,%ebx
  0x00000000032a5f32: jge    0x00000000032a5fdf  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000032a5f38: movslq %r11d,%r14
  0x00000000032a5f3b: movzwl 0x12(%r8,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000032a5f41: movslq %eax,%rdx
  0x00000000032a5f44: mov    %bl,0x10(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000032a5f48: cmp    $0x80,%ebp
  0x00000000032a5f4e: jge    0x00000000032a5fe3  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000032a5f54: movzwl 0x14(%r8,%r14,2),%ebx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000032a5f5a: movslq %eax,%rdx
  0x00000000032a5f5d: mov    %bpl,0x11(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000032a5f62: cmp    $0x80,%ebx
  0x00000000032a5f68: jge    0x00000000032a5fd8  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000032a5f6a: mov    %bl,0x12(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000032a5f6e: movzwl 0x16(%r8,%r14,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000032a5f74: cmp    $0x80,%ebp
  0x00000000032a5f7a: jge    0x00000000032a5fea  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000032a5f7c: mov    %bpl,0x13(%rsi,%rdx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000032a5f81: add    $0x4,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000000032a5f84: cmp    %edi,%eax
  0x00000000032a5f86: jl     0x00000000032a5f20
  0x00000000032a5f88: add    $0x3,%r11d
  0x00000000032a5f8c: cmp    %r10d,%eax
  0x00000000032a5f8f: jge    0x00000000032a5fbb
  0x00000000032a5f91: data16 xchg %ax,%ax
  0x00000000032a5f94: mov    %eax,%r11d
  0x00000000032a5f97: add    %r9d,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000032a5f9a: movzwl 0x10(%r8,%r11,2),%ebp  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000000032a5fa0: cmp    $0x80,%ebp
  0x00000000032a5fa6: jge    0x00000000032a607d  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000032a5fac: movslq %eax,%rbx
  0x00000000032a5faf: mov    %bpl,0x10(%rsi,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x00000000032a5fb4: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000000032a5fb6: cmp    %r10d,%eax
  0x00000000032a5fb9: jl     0x00000000032a5f94
  0x00000000032a5fbb: inc    %r11d              ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000000032a5fbe: cmp    %ecx,%r11d
  0x00000000032a5fc1: jl     0x00000000032a604d
  0x00000000032a5fc7: add    $0x40,%rsp
  0x00000000032a5fcb: pop    %rbp
  0x00000000032a5fcc: test   %eax,-0x9b5fd2(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032a5fd2: retq   
  0x00000000032a5fd3: mov    %r9d,%r11d
  0x00000000032a5fd6: jmp    0x00000000032a5fbe
  0x00000000032a5fd8: add    $0x2,%r11d
  0x00000000032a5fdc: add    $0x2,%eax
  0x00000000032a5fdf: mov    %ebx,%ebp
  0x00000000032a5fe1: jmp    0x00000000032a5ff1  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000032a5fe3: inc    %eax               ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000000032a5fe5: inc    %r11d
  0x00000000032a5fe8: jmp    0x00000000032a5ff1  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000032a5fea: add    $0x3,%eax          ;*iinc
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@40 (line 710)

  0x00000000032a5fed: add    $0x3,%r11d         ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000032a5ff1: mov    %eax,(%rsp)
  0x00000000032a5ff4: mov    $0xffffff65,%edx
  0x00000000032a5ff9: mov    %r8,0x8(%rsp)
  0x00000000032a5ffe: mov    %r11d,0x4(%rsp)
  0x00000000032a6003: mov    %r13,0x10(%rsp)
  0x00000000032a6008: mov    %rsi,0x18(%rsp)
  0x00000000032a600d: mov    %ecx,0x20(%rsp)
  0x00000000032a6011: mov    %r10d,0x24(%rsp)
  0x00000000032a6016: nop
  0x00000000032a6017: callq  0x00000000031d57a0  ; OopMap{[8]=Oop [16]=Oop [24]=Oop off=444}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)
                                                ;   {runtime_call}
  0x00000000032a601c: int3                      ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x00000000032a601d: mov    $0xffffff86,%edx
  0x00000000032a6022: mov    %r8,%rbp
  0x00000000032a6025: mov    %r9d,(%rsp)
  0x00000000032a6029: mov    %r13,0x8(%rsp)
  0x00000000032a602e: mov    %rsi,0x10(%rsp)
  0x00000000032a6033: mov    %ecx,0x4(%rsp)
  0x00000000032a6037: mov    %r10d,0x18(%rsp)
  0x00000000032a603c: data16 xchg %ax,%ax
  0x00000000032a603f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [8]=Oop [16]=Oop off=484}
                                                ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)
                                                ;   {runtime_call}
  0x00000000032a6044: int3                      ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000032a6045: mov    %r9d,%r11d
  0x00000000032a6048: jmpq   0x00000000032a5f8c  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000000032a604d: mov    $0xffffff65,%edx
  0x00000000032a6052: mov    %r8,%rbp
  0x00000000032a6055: mov    %eax,0x4(%rsp)
  0x00000000032a6059: mov    %r11d,0x8(%rsp)
  0x00000000032a605e: mov    %r13,0x10(%rsp)
  0x00000000032a6063: mov    %rsi,0x18(%rsp)
  0x00000000032a6068: mov    %ecx,0x20(%rsp)
  0x00000000032a606c: data16 xchg %ax,%ax
  0x00000000032a606f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [16]=Oop [24]=Oop off=532}
                                                ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)
                                                ;   {runtime_call}
  0x00000000032a6074: int3                      ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x00000000032a6075: mov    %r9d,%r11d
  0x00000000032a6078: jmpq   0x00000000032a5ff1  ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000032a607d: mov    %eax,(%rsp)
  0x00000000032a6080: jmpq   0x00000000032a5ff4
  0x00000000032a6085: mov    $0xfffffff6,%edx
  0x00000000032a608a: nop
  0x00000000032a608b: callq  0x00000000031d57a0  ; OopMap{off=560}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x00000000032a6090: int3                      ;*aload_1
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@27 (line 709)

  0x00000000032a6091: hlt    
  0x00000000032a6092: hlt    
  0x00000000032a6093: hlt    
  0x00000000032a6094: hlt    
  0x00000000032a6095: hlt    
  0x00000000032a6096: hlt    
  0x00000000032a6097: hlt    
  0x00000000032a6098: hlt    
  0x00000000032a6099: hlt    
  0x00000000032a609a: hlt    
  0x00000000032a609b: hlt    
  0x00000000032a609c: hlt    
  0x00000000032a609d: hlt    
  0x00000000032a609e: hlt    
  0x00000000032a609f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a60a0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a60a5: callq  0x00000000032a60aa
  0x00000000032a60aa: subq   $0x5,(%rsp)
  0x00000000032a60af: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a60b4: hlt    
  0x00000000032a60b5: hlt    
  0x00000000032a60b6: hlt    
  0x00000000032a60b7: hlt    
<nmethod compile_id='33' compiler='C2' level='4' entry='0x00000000032a5e60' size='1936' address='0x00000000032a5d10' relocation_offset='288' insts_offset='336' stub_offset='912' scopes_data_offset='944' scopes_pcs_offset='1152' dependencies_offset='1904' nul_chk_table_offset='1912' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1654' backedge_count='62892' iicount='1654' stamp='0.541'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032ab2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c154db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  # parm1:    r9        = int
  #           [sp+0x40]  (sp of caller)
  0x00000000032ab440: mov    0x8(%rdx),%r10d
  0x00000000032ab444: shl    $0x3,%r10
  0x00000000032ab448: cmp    %rax,%r10
  0x00000000032ab44b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032ab451: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032ab45c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032ab460: mov    %eax,-0x6000(%rsp)
  0x00000000032ab467: push   %rbp
  0x00000000032ab468: sub    $0x30,%rsp
  0x00000000032ab46c: movabs $0x1c342a68,%rax   ;   {metadata(method data for {method} {0x000000001c154db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ab476: mov    0xdc(%rax),%esi
  0x00000000032ab47c: add    $0x8,%esi
  0x00000000032ab47f: mov    %esi,0xdc(%rax)
  0x00000000032ab485: movabs $0x1c154db0,%rax   ;   {metadata({method} {0x000000001c154db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ab48f: and    $0x1ff8,%esi
  0x00000000032ab495: cmp    $0x0,%esi
  0x00000000032ab498: je     0x00000000032ab655  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x00000000032ab49e: mov    0xc(%rdx),%eax
  0x00000000032ab4a1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x00000000032ab4a5: mov    0xc(%r8),%esi      ; implicit exception: dispatches to 0x00000000032ab66c
  0x00000000032ab4a9: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x00000000032ab4ad: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x00000000032ab671
  0x00000000032ab4b0: cmp    $0x0,%r9d
  0x00000000032ab4b4: movabs $0x1c342a68,%rbx   ;   {metadata(method data for {method} {0x000000001c154db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ab4be: movabs $0x108,%rdx
  0x00000000032ab4c8: jl     0x00000000032ab4d8
  0x00000000032ab4ce: movabs $0x118,%rdx
  0x00000000032ab4d8: mov    (%rbx,%rdx,1),%rcx
  0x00000000032ab4dc: lea    0x1(%rcx),%rcx
  0x00000000032ab4e0: mov    %rcx,(%rbx,%rdx,1)
  0x00000000032ab4e4: jl     0x00000000032ab622  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x00000000032ab4ea: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x00000000032ab676
  0x00000000032ab4ed: sub    %edi,%ebx
  0x00000000032ab4ef: cmp    %ebx,%r9d
  0x00000000032ab4f2: movabs $0x1c342a68,%rbx   ;   {metadata(method data for {method} {0x000000001c154db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ab4fc: movabs $0x128,%rdx
  0x00000000032ab506: jle    0x00000000032ab516
  0x00000000032ab50c: movabs $0x138,%rdx
  0x00000000032ab516: mov    (%rbx,%rdx,1),%rcx
  0x00000000032ab51a: lea    0x1(%rcx),%rcx
  0x00000000032ab51e: mov    %rcx,(%rbx,%rdx,1)
  0x00000000032ab522: jg     0x00000000032ab622  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x00000000032ab528: mov    $0x0,%ebx
  0x00000000032ab52d: jmpq   0x00000000032ab5e2  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000000032ab532: nopw   0x0(%rax,%rax,1)
  0x00000000032ab538: mov    %r9,%rdx
  0x00000000032ab53b: inc    %edx
  0x00000000032ab53d: movslq %r9d,%rcx
  0x00000000032ab540: cmp    0xc(%rax),%r9d
  0x00000000032ab544: jae    0x00000000032ab67b
  0x00000000032ab54a: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x00000000032ab54f: mov    %rbx,%r8
  0x00000000032ab552: inc    %r8d
  0x00000000032ab555: movslq %ebx,%r9
  0x00000000032ab558: cmp    0xc(%rsi),%ebx
  0x00000000032ab55b: jae    0x00000000032ab684
  0x00000000032ab561: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x00000000032ab567: movabs $0x1c342a68,%r9    ;   {metadata(method data for {method} {0x000000001c154db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ab571: mov    0xe0(%r9),%r11d
  0x00000000032ab578: add    $0x8,%r11d
  0x00000000032ab57c: mov    %r11d,0xe0(%r9)
  0x00000000032ab583: movabs $0x1c154db0,%r9    ;   {metadata({method} {0x000000001c154db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ab58d: and    $0xfff8,%r11d
  0x00000000032ab594: cmp    $0x0,%r11d
  0x00000000032ab598: je     0x00000000032ab68d  ; OopMap{rsi=Oop rax=Oop off=350}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00000000032ab59e: test   %eax,-0x9bb4a4(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032ab5a4: cmp    %ebx,%ecx
  0x00000000032ab5a6: movabs $0x1c342a68,%rbx   ;   {metadata(method data for {method} {0x000000001c154db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ab5b0: movabs $0x168,%rcx
  0x00000000032ab5ba: je     0x00000000032ab5ca
  0x00000000032ab5c0: movabs $0x178,%rcx
  0x00000000032ab5ca: mov    (%rbx,%rcx,1),%r9
  0x00000000032ab5ce: lea    0x1(%r9),%r9
  0x00000000032ab5d2: mov    %r9,(%rbx,%rcx,1)
  0x00000000032ab5d6: jne    0x00000000032ab633  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00000000032ab5dc: mov    %r8,%rbx
  0x00000000032ab5df: mov    %rdx,%r9           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00000000032ab5e2: dec    %edi
  0x00000000032ab5e4: cmp    $0x0,%edi
  0x00000000032ab5e7: movabs $0x1c342a68,%rdx   ;   {metadata(method data for {method} {0x000000001c154db8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ab5f1: movabs $0x148,%rcx
  0x00000000032ab5fb: jl     0x00000000032ab60b
  0x00000000032ab601: movabs $0x158,%rcx
  0x00000000032ab60b: mov    (%rdx,%rcx,1),%r8
  0x00000000032ab60f: lea    0x1(%r8),%r8
  0x00000000032ab613: mov    %r8,(%rdx,%rcx,1)
  0x00000000032ab617: jl     0x00000000032ab644
  0x00000000032ab61d: jmpq   0x00000000032ab538  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x00000000032ab622: mov    $0x0,%eax
  0x00000000032ab627: add    $0x30,%rsp
  0x00000000032ab62b: pop    %rbp
  0x00000000032ab62c: test   %eax,-0x9bb532(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ab632: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x00000000032ab633: mov    $0x0,%eax
  0x00000000032ab638: add    $0x30,%rsp
  0x00000000032ab63c: pop    %rbp
  0x00000000032ab63d: test   %eax,-0x9bb543(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ab643: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x00000000032ab644: mov    $0x1,%eax
  0x00000000032ab649: add    $0x30,%rsp
  0x00000000032ab64d: pop    %rbp
  0x00000000032ab64e: test   %eax,-0x9bb554(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ab654: retq   
  0x00000000032ab655: mov    %rax,0x8(%rsp)
  0x00000000032ab65a: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ab662: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop off=551}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x00000000032ab667: jmpq   0x00000000032ab49e
  0x00000000032ab66c: callq  0x000000000328d680  ; OopMap{rax=Oop off=561}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x00000000032ab671: callq  0x000000000328d680  ; OopMap{rax=Oop rsi=Oop off=566}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x00000000032ab676: callq  0x000000000328d680  ; OopMap{rsi=Oop rax=Oop off=571}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x00000000032ab67b: mov    %r9,(%rsp)
  0x00000000032ab67f: callq  0x000000000328c940  ; OopMap{rsi=Oop rax=Oop off=580}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x00000000032ab684: mov    %rbx,(%rsp)
  0x00000000032ab688: callq  0x000000000328c940  ; OopMap{rsi=Oop rax=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x00000000032ab68d: mov    %r9,0x8(%rsp)
  0x00000000032ab692: movq   $0x41,(%rsp)
  0x00000000032ab69a: callq  0x0000000003291d60  ; OopMap{rsi=Oop rax=Oop off=607}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x00000000032ab69f: jmpq   0x00000000032ab59e
  0x00000000032ab6a4: nop
  0x00000000032ab6a5: nop
  0x00000000032ab6a6: mov    0x2a8(%r15),%rax
  0x00000000032ab6ad: movabs $0x0,%r10
  0x00000000032ab6b7: mov    %r10,0x2a8(%r15)
  0x00000000032ab6be: movabs $0x0,%r10
  0x00000000032ab6c8: mov    %r10,0x2b0(%r15)
  0x00000000032ab6cf: add    $0x30,%rsp
  0x00000000032ab6d3: pop    %rbp
  0x00000000032ab6d4: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032ab6d9: hlt    
  0x00000000032ab6da: hlt    
  0x00000000032ab6db: hlt    
  0x00000000032ab6dc: hlt    
  0x00000000032ab6dd: hlt    
  0x00000000032ab6de: hlt    
  0x00000000032ab6df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032ab6e0: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032ab6e5: mov    %rsp,-0x28(%rsp)
  0x00000000032ab6ea: sub    $0x80,%rsp
  0x00000000032ab6f1: mov    %rax,0x78(%rsp)
  0x00000000032ab6f6: mov    %rcx,0x70(%rsp)
  0x00000000032ab6fb: mov    %rdx,0x68(%rsp)
  0x00000000032ab700: mov    %rbx,0x60(%rsp)
  0x00000000032ab705: mov    %rbp,0x50(%rsp)
  0x00000000032ab70a: mov    %rsi,0x48(%rsp)
  0x00000000032ab70f: mov    %rdi,0x40(%rsp)
  0x00000000032ab714: mov    %r8,0x38(%rsp)
  0x00000000032ab719: mov    %r9,0x30(%rsp)
  0x00000000032ab71e: mov    %r10,0x28(%rsp)
  0x00000000032ab723: mov    %r11,0x20(%rsp)
  0x00000000032ab728: mov    %r12,0x18(%rsp)
  0x00000000032ab72d: mov    %r13,0x10(%rsp)
  0x00000000032ab732: mov    %r14,0x8(%rsp)
  0x00000000032ab737: mov    %r15,(%rsp)
  0x00000000032ab73b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032ab745: movabs $0x32ab6e5,%rdx    ;   {internal_word}
  0x00000000032ab74f: mov    %rsp,%r8
  0x00000000032ab752: and    $0xfffffffffffffff0,%rsp
  0x00000000032ab756: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032ab75b: hlt    
[Deopt Handler Code]
  0x00000000032ab75c: movabs $0x32ab75c,%r10    ;   {section_word}
  0x00000000032ab766: push   %r10
  0x00000000032ab768: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032ab76d: hlt    
  0x00000000032ab76e: hlt    
  0x00000000032ab76f: hlt    
<nmethod compile_id='32' compiler='C1' level='3' entry='0x00000000032ab440' size='1824' address='0x00000000032ab2d0' relocation_offset='288' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2721' backedge_count='3431' iicount='2721' stamp='0.544'/>
<writer thread='6664'/>
<task_queued compile_id='42' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='1152' iicount='1152' level='3' stamp='0.544' comment='tiered' hot_count='1152'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032a5a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c153c20} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x20]  (sp of caller)
  0x00000000032a5bc0: mov    0x8(%rdx),%r10d
  0x00000000032a5bc4: shl    $0x3,%r10
  0x00000000032a5bc8: cmp    %r10,%rax
  0x00000000032a5bcb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a5bd1: data16 xchg %ax,%ax
  0x00000000032a5bd4: nopl   0x0(%rax,%rax,1)
  0x00000000032a5bdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a5be0: mov    %eax,-0x6000(%rsp)
  0x00000000032a5be7: push   %rbp
  0x00000000032a5be8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)

  0x00000000032a5bec: mov    0xc(%rdx),%r11d    ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00000000032a5bf0: mov    0xc(%r12,%r11,8),%eax  ; implicit exception: dispatches to 0x00000000032a5c01
  0x00000000032a5bf5: add    $0x10,%rsp
  0x00000000032a5bf9: pop    %rbp
  0x00000000032a5bfa: test   %eax,-0x9b5c00(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032a5c00: retq   
  0x00000000032a5c01: mov    $0xfffffff6,%edx
  0x00000000032a5c06: nop
  0x00000000032a5c07: callq  0x00000000031d57a0  ; OopMap{off=76}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00000000032a5c0c: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)

  0x00000000032a5c0d: hlt    
  0x00000000032a5c0e: hlt    
  0x00000000032a5c0f: hlt    
  0x00000000032a5c10: hlt    
  0x00000000032a5c11: hlt    
  0x00000000032a5c12: hlt    
  0x00000000032a5c13: hlt    
  0x00000000032a5c14: hlt    
  0x00000000032a5c15: hlt    
  0x00000000032a5c16: hlt    
  0x00000000032a5c17: hlt    
  0x00000000032a5c18: hlt    
  0x00000000032a5c19: hlt    
  0x00000000032a5c1a: hlt    
  0x00000000032a5c1b: hlt    
  0x00000000032a5c1c: hlt    
  0x00000000032a5c1d: hlt    
  0x00000000032a5c1e: hlt    
  0x00000000032a5c1f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a5c20: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a5c25: callq  0x00000000032a5c2a
  0x00000000032a5c2a: subq   $0x5,(%rsp)
  0x00000000032a5c2f: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a5c34: hlt    
  0x00000000032a5c35: hlt    
  0x00000000032a5c36: hlt    
  0x00000000032a5c37: hlt    
<nmethod compile_id='22' compiler='C2' level='4' entry='0x00000000032a5bc0' size='584' address='0x00000000032a5a90' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='560' nul_chk_table_offset='568' method='java/lang/String length ()I' bytes='6' count='37932' iicount='37932' stamp='0.545'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032aa9d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi:rdi   = &apos;[C&apos;
  # parm3:    rsi       = int
  #           [sp+0x70]  (sp of caller)
  0x00000000032aab80: mov    0x8(%rdx),%r10d
  0x00000000032aab84: shl    $0x3,%r10
  0x00000000032aab88: cmp    %rax,%r10
  0x00000000032aab8b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032aab91: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032aab9c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032aaba0: mov    %eax,-0x6000(%rsp)
  0x00000000032aaba7: push   %rbp
  0x00000000032aaba8: sub    $0x60,%rsp
  0x00000000032aabac: movabs $0x1c340fc8,%rbx   ;   {metadata(method data for {method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032aabb6: mov    0xdc(%rbx),%eax
  0x00000000032aabbc: add    $0x8,%eax
  0x00000000032aabbf: mov    %eax,0xdc(%rbx)
  0x00000000032aabc5: movabs $0x1c1541c0,%rbx   ;   {metadata({method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032aabcf: and    $0x1ff8,%eax
  0x00000000032aabd5: cmp    $0x0,%eax
  0x00000000032aabd8: je     0x00000000032aae0e  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x00000000032aabde: cmp    $0x0,%r8d
  0x00000000032aabe2: movabs $0x1c340fc8,%rbx   ;   {metadata(method data for {method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032aabec: movabs $0x108,%rax
  0x00000000032aabf6: jge    0x00000000032aac06
  0x00000000032aabfc: movabs $0x118,%rax
  0x00000000032aac06: mov    (%rbx,%rax,1),%rcx
  0x00000000032aac0a: lea    0x1(%rcx),%rcx
  0x00000000032aac0e: mov    %rcx,(%rbx,%rax,1)
  0x00000000032aac12: jl     0x00000000032aadce  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x00000000032aac18: mov    0xc(%rdx),%edx
  0x00000000032aac1b: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x00000000032aac1f: mov    0xc(%rdx),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00000000032aae25
  0x00000000032aac22: cmp    %ebx,%r9d
  0x00000000032aac25: movabs $0x1c340fc8,%rbx   ;   {metadata(method data for {method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032aac2f: movabs $0x138,%rax
  0x00000000032aac39: jle    0x00000000032aac49
  0x00000000032aac3f: movabs $0x148,%rax
  0x00000000032aac49: mov    (%rbx,%rax,1),%rcx
  0x00000000032aac4d: lea    0x1(%rcx),%rcx
  0x00000000032aac51: mov    %rcx,(%rbx,%rax,1)
  0x00000000032aac55: jg     0x00000000032aad8e  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x00000000032aac5b: cmp    %r9d,%r8d
  0x00000000032aac5e: movabs $0x1c340fc8,%rbx   ;   {metadata(method data for {method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032aac68: movabs $0x168,%rax
  0x00000000032aac72: jle    0x00000000032aac82
  0x00000000032aac78: movabs $0x178,%rax
  0x00000000032aac82: mov    (%rbx,%rax,1),%rcx
  0x00000000032aac86: lea    0x1(%rcx),%rcx
  0x00000000032aac8a: mov    %rcx,(%rbx,%rax,1)
  0x00000000032aac8e: jg     0x00000000032aad42  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x00000000032aac94: movabs $0x1c340fc8,%rbx   ;   {metadata(method data for {method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032aac9e: addq   $0x1,0x198(%rbx)
  0x00000000032aaca6: mov    %r9,%rbx
  0x00000000032aaca9: sub    %r8d,%ebx
  0x00000000032aacac: mov    %rdi,%r9
  0x00000000032aacaf: mov    %rsi,%rdi
  0x00000000032aacb2: mov    %rbx,%rsi
  0x00000000032aacb5: test   %r9,%r9
  0x00000000032aacb8: je     0x00000000032aae2a
  0x00000000032aacbe: test   %r8d,%r8d
  0x00000000032aacc1: jl     0x00000000032aae2a
  0x00000000032aacc7: test   %edi,%edi
  0x00000000032aacc9: jl     0x00000000032aae2a
  0x00000000032aaccf: lea    (%r8,%rsi,1),%rcx
  0x00000000032aacd3: cmp    0xc(%rdx),%ecx
  0x00000000032aacd6: ja     0x00000000032aae2a
  0x00000000032aacdc: lea    (%rdi,%rsi,1),%rcx
  0x00000000032aace0: cmp    0xc(%r9),%ecx
  0x00000000032aace4: ja     0x00000000032aae2a
  0x00000000032aacea: test   %esi,%esi
  0x00000000032aacec: jl     0x00000000032aae2a
  0x00000000032aacf2: je     0x00000000032aad36
  0x00000000032aacf8: movslq %r8d,%r8
  0x00000000032aacfb: movslq %edi,%rdi
  0x00000000032aacfe: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000032aad03: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000032aad08: mov    %rsi,%r8
  0x00000000032aad0b: sub    $0x20,%rsp
  0x00000000032aad0f: test   $0xf,%esp
  0x00000000032aad15: je     0x00000000032aad2d
  0x00000000032aad1b: sub    $0x8,%rsp
  0x00000000032aad1f: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000000032aad24: add    $0x8,%rsp
  0x00000000032aad28: jmpq   0x00000000032aad32
  0x00000000032aad2d: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00000000032aad32: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)

  0x00000000032aad36: add    $0x60,%rsp
  0x00000000032aad3a: pop    %rbp
  0x00000000032aad3b: test   %eax,-0x9bac41(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032aad41: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x00000000032aad42: nopw   0x0(%rax,%rax,1)
  0x00000000032aad48: jmpq   0x00000000032aae48  ;   {no_reloc}
  0x00000000032aad4d: add    %al,(%rax)
  0x00000000032aad4f: add    %al,(%rax)
  0x00000000032aad51: add    %ch,%cl
  0x00000000032aad53: sti    
  0x00000000032aad54: add    %al,(%rax)
  0x00000000032aad56: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x00000000032aad59: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032aad5c: enterq $0x340f,$0x1c
  0x00000000032aad60: add    %al,(%rax)
  0x00000000032aad62: add    %al,(%rax)
  0x00000000032aad64: addq   $0x1,0x188(%rsi)
  0x00000000032aad6c: sub    %r8d,%r9d
  0x00000000032aad6f: mov    %r9,%r8
  0x00000000032aad72: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x00000000032aad75: mov    %rax,0x38(%rsp)
  0x00000000032aad7a: nop
  0x00000000032aad7b: nop
  0x00000000032aad7c: nop
  0x00000000032aad7d: nop
  0x00000000032aad7e: nop
  0x00000000032aad7f: callq  0x00000000031d61a0  ; OopMap{[56]=Oop off=516}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x00000000032aad84: mov    0x38(%rsp),%rax
  0x00000000032aad89: jmpq   0x00000000032aaed6  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x00000000032aad8e: xchg   %ax,%ax
  0x00000000032aad90: jmpq   0x00000000032aae6e  ;   {no_reloc}
  0x00000000032aad95: add    %al,(%rax)
  0x00000000032aad97: add    %al,(%rax)
  0x00000000032aad99: add    %ch,%cl
  0x00000000032aad9b: flds   (%rax)
  0x00000000032aad9d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x00000000032aad9f: mov    %rax,%r8
  0x00000000032aada2: movabs $0x1c340fc8,%rdx   ;   {metadata(method data for {method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032aadac: addq   $0x1,0x158(%rdx)
  0x00000000032aadb4: mov    %r9,%r8
  0x00000000032aadb7: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x00000000032aadba: mov    %rax,0x40(%rsp)
  0x00000000032aadbf: callq  0x00000000031d61a0  ; OopMap{[64]=Oop off=580}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x00000000032aadc4: mov    0x40(%rsp),%rax
  0x00000000032aadc9: jmpq   0x00000000032aaed6  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x00000000032aadce: xchg   %ax,%ax
  0x00000000032aadd0: jmpq   0x00000000032aae94  ;   {no_reloc}
  0x00000000032aadd5: add    %al,(%rax)
  0x00000000032aadd7: add    %al,(%rax)
  0x00000000032aadd9: add    %ch,%cl
  0x00000000032aaddb: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x00000000032aade0: mov    %eax,%edx
  0x00000000032aade2: movabs $0x1c340fc8,%rsi   ;   {metadata(method data for {method} {0x000000001c1541c8} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00000000032aadec: addq   $0x1,0x128(%rsi)
  0x00000000032aadf4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x00000000032aadf7: mov    %rax,0x48(%rsp)
  0x00000000032aadfc: nop
  0x00000000032aadfd: nop
  0x00000000032aadfe: nop
  0x00000000032aadff: callq  0x00000000031d61a0  ; OopMap{[72]=Oop off=644}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x00000000032aae04: mov    0x48(%rsp),%rax
  0x00000000032aae09: jmpq   0x00000000032aaed6
  0x00000000032aae0e: mov    %rbx,0x8(%rsp)
  0x00000000032aae13: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032aae1b: callq  0x0000000003291d60  ; OopMap{rdx=Oop rdi=Oop off=672}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00000000032aae20: jmpq   0x00000000032aabde
  0x00000000032aae25: callq  0x000000000328d680  ; OopMap{rdi=Oop rdx=Oop off=682}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00000000032aae2a: nop
  0x00000000032aae2b: nop
  0x00000000032aae2c: nop
  0x00000000032aae2d: nop
  0x00000000032aae2e: nop
  0x00000000032aae2f: callq  0x00000000031d6620  ; OopMap{off=692}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00000000032aae34: jmpq   0x00000000032aad36
  0x00000000032aae39: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032aae43: mov    $0xa050f00,%eax
  0x00000000032aae48: callq  0x0000000003290ca0  ; OopMap{off=717}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00000000032aae4d: jmpq   0x00000000032aad48
  0x00000000032aae52: mov    %rdx,%rdx
  0x00000000032aae55: callq  0x000000000328db20  ; OopMap{off=730}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00000000032aae5a: jmpq   0x00000000032aad57
  0x00000000032aae5f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032aae69: mov    $0xa050f00,%eax
  0x00000000032aae6e: callq  0x0000000003290ca0  ; OopMap{off=755}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00000000032aae73: jmpq   0x00000000032aad90
  0x00000000032aae78: mov    %rdx,%rdx
  0x00000000032aae7b: callq  0x000000000328db20  ; OopMap{off=768}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00000000032aae80: jmpq   0x00000000032aad9f
  0x00000000032aae85: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032aae8f: mov    $0xa050f00,%eax
  0x00000000032aae94: callq  0x0000000003290ca0  ; OopMap{off=793}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00000000032aae99: jmpq   0x00000000032aadd0
  0x00000000032aae9e: mov    %rdx,%rdx
  0x00000000032aaea1: callq  0x000000000328db20  ; OopMap{off=806}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00000000032aaea6: jmpq   0x00000000032aaddf
  0x00000000032aaeab: nop
  0x00000000032aaeac: nop
  0x00000000032aaead: mov    0x2a8(%r15),%rax
  0x00000000032aaeb4: movabs $0x0,%r10
  0x00000000032aaebe: mov    %r10,0x2a8(%r15)
  0x00000000032aaec5: movabs $0x0,%r10
  0x00000000032aaecf: mov    %r10,0x2b0(%r15)
  0x00000000032aaed6: add    $0x60,%rsp
  0x00000000032aaeda: pop    %rbp
  0x00000000032aaedb: jmpq   0x000000000328cde0  ;   {runtime_call}
[Stub Code]
  0x00000000032aaee0: nop                       ;   {no_reloc}
  0x00000000032aaee1: nop
  0x00000000032aaee2: nop
  0x00000000032aaee3: nop
  0x00000000032aaee4: nop
  0x00000000032aaee5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032aaeef: jmpq   0x00000000032aaeef  ;   {runtime_call}
  0x00000000032aaef4: nop
  0x00000000032aaef5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032aaeff: jmpq   0x00000000032aaeff  ;   {runtime_call}
  0x00000000032aaf04: nop
  0x00000000032aaf05: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032aaf0f: jmpq   0x00000000032aaf0f  ;   {runtime_call}
  0x00000000032aaf14: nop
  0x00000000032aaf15: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032aaf1f: jmpq   0x00000000032aaf1f  ;   {runtime_call}
[Exception Handler]
  0x00000000032aaf24: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032aaf29: mov    %rsp,-0x28(%rsp)
  0x00000000032aaf2e: sub    $0x80,%rsp
  0x00000000032aaf35: mov    %rax,0x78(%rsp)
  0x00000000032aaf3a: mov    %rcx,0x70(%rsp)
  0x00000000032aaf3f: mov    %rdx,0x68(%rsp)
  0x00000000032aaf44: mov    %rbx,0x60(%rsp)
  0x00000000032aaf49: mov    %rbp,0x50(%rsp)
  0x00000000032aaf4e: mov    %rsi,0x48(%rsp)
  0x00000000032aaf53: mov    %rdi,0x40(%rsp)
  0x00000000032aaf58: mov    %r8,0x38(%rsp)
  0x00000000032aaf5d: mov    %r9,0x30(%rsp)
  0x00000000032aaf62: mov    %r10,0x28(%rsp)
  0x00000000032aaf67: mov    %r11,0x20(%rsp)
  0x00000000032aaf6c: mov    %r12,0x18(%rsp)
  0x00000000032aaf71: mov    %r13,0x10(%rsp)
  0x00000000032aaf76: mov    %r14,0x8(%rsp)
  0x00000000032aaf7b: mov    %r15,(%rsp)
  0x00000000032aaf7f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032aaf89: movabs $0x32aaf29,%rdx    ;   {internal_word}
  0x00000000032aaf93: mov    %rsp,%r8
  0x00000000032aaf96: and    $0xfffffffffffffff0,%rsp
  0x00000000032aaf9a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032aaf9f: hlt    
[Deopt Handler Code]
  0x00000000032aafa0: movabs $0x32aafa0,%r10    ;   {section_word}
  0x00000000032aafaa: push   %r10
  0x00000000032aafac: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032aafb1: hlt    
  0x00000000032aafb2: hlt    
  0x00000000032aafb3: hlt    
  0x00000000032aafb4: hlt    
  0x00000000032aafb5: hlt    
  0x00000000032aafb6: hlt    
  0x00000000032aafb7: hlt    
<nmethod compile_id='41' compiler='C1' level='3' entry='0x00000000032aab80' size='2256' address='0x00000000032aa9d0' relocation_offset='288' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='3970' iicount='3970' stamp='0.550'/>
<writer thread='4332'/>
Decoding compiled method 0x00000000032aba10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c2c9988} &apos;isSlash&apos; &apos;(C)Z&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8        = char
  #           [sp+0x20]  (sp of caller)
  0x00000000032abb40: mov    0x8(%rdx),%r10d
  0x00000000032abb44: shl    $0x3,%r10
  0x00000000032abb48: cmp    %r10,%rax
  0x00000000032abb4b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032abb51: data16 xchg %ax,%ax
  0x00000000032abb54: nopl   0x0(%rax,%rax,1)
  0x00000000032abb5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032abb60: sub    $0x18,%rsp
  0x00000000032abb67: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)

  0x00000000032abb6c: cmp    $0x5c,%r8d
  0x00000000032abb70: je     0x00000000032abb86  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)

  0x00000000032abb72: cmp    $0x2f,%r8d
  0x00000000032abb76: je     0x00000000032abb86  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)

  0x00000000032abb78: xor    %eax,%eax          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)

  0x00000000032abb7a: add    $0x10,%rsp
  0x00000000032abb7e: pop    %rbp
  0x00000000032abb7f: test   %eax,-0x9bbb85(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032abb85: retq                      ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)

  0x00000000032abb86: mov    $0x1,%eax
  0x00000000032abb8b: jmp    0x00000000032abb7a
  0x00000000032abb8d: hlt    
  0x00000000032abb8e: hlt    
  0x00000000032abb8f: hlt    
  0x00000000032abb90: hlt    
  0x00000000032abb91: hlt    
  0x00000000032abb92: hlt    
  0x00000000032abb93: hlt    
  0x00000000032abb94: hlt    
  0x00000000032abb95: hlt    
  0x00000000032abb96: hlt    
  0x00000000032abb97: hlt    
  0x00000000032abb98: hlt    
  0x00000000032abb99: hlt    
  0x00000000032abb9a: hlt    
  0x00000000032abb9b: hlt    
  0x00000000032abb9c: hlt    
  0x00000000032abb9d: hlt    
  0x00000000032abb9e: hlt    
  0x00000000032abb9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032abba0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032abba5: callq  0x00000000032abbaa
  0x00000000032abbaa: subq   $0x5,(%rsp)
  0x00000000032abbaf: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032abbb4: hlt    
  0x00000000032abbb5: hlt    
  0x00000000032abbb6: hlt    
  0x00000000032abbb7: hlt    
<nmethod compile_id='37' compiler='C2' level='4' entry='0x00000000032abb40' size='584' address='0x00000000032aba10' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='432' scopes_pcs_offset='464' dependencies_offset='576' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='79782' iicount='79782' stamp='0.551'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032a7ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c3203b8} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rdx:rdx   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x00000000032a7c00: mov    0x8(%rdx),%r10d
  0x00000000032a7c04: shl    $0x3,%r10
  0x00000000032a7c08: cmp    %r10,%rax
  0x00000000032a7c0b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a7c11: data16 xchg %ax,%ax
  0x00000000032a7c14: nopl   0x0(%rax,%rax,1)
  0x00000000032a7c1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a7c20: mov    %eax,-0x6000(%rsp)
  0x00000000032a7c27: push   %rbp
  0x00000000032a7c28: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)

  0x00000000032a7c2c: movzwl %r8w,%r8d          ;*i2c  ; - java.lang.CharacterDataLatin1::getProperties@1 (line 71)

  0x00000000032a7c30: cmp    $0x100,%r8d
  0x00000000032a7c37: jae    0x00000000032a7c54
  0x00000000032a7c39: movabs $0x76b81ae28,%r10  ;   {oop([I)}
  0x00000000032a7c43: mov    0x10(%r10,%r8,4),%eax
  0x00000000032a7c48: add    $0x10,%rsp
  0x00000000032a7c4c: pop    %rbp
  0x00000000032a7c4d: test   %eax,-0x9b7c53(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032a7c53: retq   
  0x00000000032a7c54: mov    $0xffffffe4,%edx
  0x00000000032a7c59: mov    %r8d,%ebp
  0x00000000032a7c5c: data16 xchg %ax,%ax
  0x00000000032a7c5f: callq  0x00000000031d57a0  ; OopMap{off=100}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000000032a7c64: int3                      ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x00000000032a7c65: hlt    
  0x00000000032a7c66: hlt    
  0x00000000032a7c67: hlt    
  0x00000000032a7c68: hlt    
  0x00000000032a7c69: hlt    
  0x00000000032a7c6a: hlt    
  0x00000000032a7c6b: hlt    
  0x00000000032a7c6c: hlt    
  0x00000000032a7c6d: hlt    
  0x00000000032a7c6e: hlt    
  0x00000000032a7c6f: hlt    
  0x00000000032a7c70: hlt    
  0x00000000032a7c71: hlt    
  0x00000000032a7c72: hlt    
  0x00000000032a7c73: hlt    
  0x00000000032a7c74: hlt    
  0x00000000032a7c75: hlt    
  0x00000000032a7c76: hlt    
  0x00000000032a7c77: hlt    
  0x00000000032a7c78: hlt    
  0x00000000032a7c79: hlt    
  0x00000000032a7c7a: hlt    
  0x00000000032a7c7b: hlt    
  0x00000000032a7c7c: hlt    
  0x00000000032a7c7d: hlt    
  0x00000000032a7c7e: hlt    
  0x00000000032a7c7f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a7c80: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a7c85: callq  0x00000000032a7c8a
  0x00000000032a7c8a: subq   $0x5,(%rsp)
  0x00000000032a7c8f: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a7c94: hlt    
  0x00000000032a7c95: hlt    
  0x00000000032a7c96: hlt    
  0x00000000032a7c97: hlt    
<nmethod compile_id='13' compiler='C2' level='4' entry='0x00000000032a7c00' size='616' address='0x00000000032a7ad0' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='472' scopes_pcs_offset='512' dependencies_offset='608' oops_offset='456' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='32853' iicount='32853' stamp='0.552'/>
<writer thread='26124'/>
<task_queued compile_id='43' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='1664' iicount='1664' level='3' stamp='0.553' comment='tiered' hot_count='1664'/>
<task_queued compile_id='44' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='1664' iicount='1664' level='3' stamp='0.553' comment='tiered' hot_count='1664'/>
<task_queued compile_id='45' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='1664' iicount='1664' level='3' stamp='0.553' comment='tiered' hot_count='1664'/>
<task_queued compile_id='46' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='1664' iicount='1664' level='3' stamp='0.553' comment='tiered' hot_count='1664'/>
<task_queued compile_id='47' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='1664' iicount='1664' level='3' stamp='0.553' comment='tiered' hot_count='1664'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032ae910:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    r8        = int
  # parm2:    r9        = int
  #           [sp+0xb0]  (sp of caller)
  0x00000000032aeb20: mov    %eax,-0x6000(%rsp)
  0x00000000032aeb27: push   %rbp
  0x00000000032aeb28: sub    $0xa0,%rsp
  0x00000000032aeb2f: mov    %rdx,%r11
  0x00000000032aeb32: movabs $0x1c33c7b8,%rbx   ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032aeb3c: mov    0xdc(%rbx),%edx
  0x00000000032aeb42: add    $0x8,%edx
  0x00000000032aeb45: mov    %edx,0xdc(%rbx)
  0x00000000032aeb4b: movabs $0x1c267820,%rbx   ;   {metadata({method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032aeb55: and    $0x1ff8,%edx
  0x00000000032aeb5b: cmp    $0x0,%edx
  0x00000000032aeb5e: je     0x00000000032af3c9  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x00000000032aeb64: mov    %r9,%r13
  0x00000000032aeb67: sub    %r8d,%r13d
  0x00000000032aeb6a: cmp    $0x0,%r13d
  0x00000000032aeb6e: movabs $0x1c33c7b8,%rbx   ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032aeb78: movabs $0x108,%rdx
  0x00000000032aeb82: jge    0x00000000032aeb92
  0x00000000032aeb88: movabs $0x118,%rdx
  0x00000000032aeb92: mov    (%rbx,%rdx,1),%rsi
  0x00000000032aeb96: lea    0x1(%rsi),%rsi
  0x00000000032aeb9a: mov    %rsi,(%rbx,%rdx,1)
  0x00000000032aeb9e: jl     0x00000000032aed66  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x00000000032aeba4: mov    %r13,%rbx
  0x00000000032aeba7: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032aebb1: movslq %ebx,%rbx
  0x00000000032aebb4: mov    %rbx,%rdi
  0x00000000032aebb7: cmp    $0xffffff,%rbx
  0x00000000032aebbe: ja     0x00000000032af3e0
  0x00000000032aebc4: movabs $0x17,%rsi
  0x00000000032aebce: lea    (%rsi,%rbx,2),%rsi
  0x00000000032aebd2: and    $0xfffffffffffffff8,%rsi
  0x00000000032aebd6: mov    0x60(%r15),%rax
  0x00000000032aebda: lea    (%rax,%rsi,1),%rsi
  0x00000000032aebde: cmp    0x70(%r15),%rsi
  0x00000000032aebe2: ja     0x00000000032af3e0
  0x00000000032aebe8: mov    %rsi,0x60(%r15)
  0x00000000032aebec: sub    %rax,%rsi
  0x00000000032aebef: movq   $0x1,(%rax)
  0x00000000032aebf6: mov    %rdx,%rcx
  0x00000000032aebf9: shr    $0x3,%rcx
  0x00000000032aebfd: mov    %ecx,0x8(%rax)
  0x00000000032aec00: mov    %ebx,0xc(%rax)
  0x00000000032aec03: sub    $0x10,%rsi
  0x00000000032aec07: je     0x00000000032aec1e
  0x00000000032aec0d: xor    %rbx,%rbx
  0x00000000032aec10: shr    $0x3,%rsi
  0x00000000032aec14: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032aec19: dec    %rsi
  0x00000000032aec1c: jne    0x00000000032aec14  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00000000032aec1e: mov    0xc(%r11),%edx     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00000000032af3ea
  0x00000000032aec22: sub    %r8d,%edx
  0x00000000032aec25: movabs $0x1c33c7b8,%r9    ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032aec2f: addq   $0x1,0x208(%r9)
  0x00000000032aec37: movabs $0x1c33bf60,%r9    ;   {metadata(method data for {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032aec41: mov    0xdc(%r9),%edi
  0x00000000032aec48: add    $0x8,%edi
  0x00000000032aec4b: mov    %edi,0xdc(%r9)
  0x00000000032aec52: movabs $0x1c242b00,%r9    ;   {metadata({method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032aec5c: and    $0x7ffff8,%edi
  0x00000000032aec62: cmp    $0x0,%edi
  0x00000000032aec65: je     0x00000000032af3ef
  0x00000000032aec6b: cmp    %r13d,%edx
  0x00000000032aec6e: movabs $0x1c33bf60,%r9    ;   {metadata(method data for {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032aec78: movabs $0x108,%rdi
  0x00000000032aec82: jg     0x00000000032aec92
  0x00000000032aec88: movabs $0x118,%rdi
  0x00000000032aec92: mov    (%r9,%rdi,1),%rsi
  0x00000000032aec96: lea    0x1(%rsi),%rsi
  0x00000000032aec9a: mov    %rsi,(%r9,%rdi,1)
  0x00000000032aec9e: jg     0x00000000032aecbd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00000000032aeca4: movabs $0x1c33bf60,%r9    ;   {metadata(method data for {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032aecae: incl   0x128(%r9)
  0x00000000032aecb5: mov    %rdx,%rsi
  0x00000000032aecb8: jmpq   0x00000000032aecc0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00000000032aecbd: mov    %r13,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00000000032aecc0: movabs $0x1c33c7b8,%rdx   ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032aecca: addq   $0x1,0x218(%rdx)
  0x00000000032aecd2: mov    %r11,%rdx
  0x00000000032aecd5: mov    %rax,%r9
  0x00000000032aecd8: mov    $0x0,%edi
  0x00000000032aecdd: mov    %rax,0x70(%rsp)
  0x00000000032aece2: test   %r8d,%r8d
  0x00000000032aece5: jl     0x00000000032af406
  0x00000000032aeceb: lea    (%r8,%rsi,1),%rcx
  0x00000000032aecef: cmp    0xc(%rdx),%ecx
  0x00000000032aecf2: ja     0x00000000032af406
  0x00000000032aecf8: lea    (%rdi,%rsi,1),%rcx
  0x00000000032aecfc: cmp    0xc(%r9),%ecx
  0x00000000032aed00: ja     0x00000000032af406
  0x00000000032aed06: test   %esi,%esi
  0x00000000032aed08: jl     0x00000000032af406
  0x00000000032aed0e: je     0x00000000032aed52
  0x00000000032aed14: movslq %r8d,%r8
  0x00000000032aed17: movslq %edi,%rdi
  0x00000000032aed1a: lea    0x10(%rdx,%r8,2),%rcx
  0x00000000032aed1f: lea    0x10(%r9,%rdi,2),%rdx
  0x00000000032aed24: mov    %rsi,%r8
  0x00000000032aed27: sub    $0x20,%rsp
  0x00000000032aed2b: test   $0xf,%esp
  0x00000000032aed31: je     0x00000000032aed49
  0x00000000032aed37: sub    $0x8,%rsp
  0x00000000032aed3b: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000032aed40: add    $0x8,%rsp
  0x00000000032aed44: jmpq   0x00000000032aed4e
  0x00000000032aed49: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00000000032aed4e: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)

  0x00000000032aed52: mov    0x70(%rsp),%rax
  0x00000000032aed57: add    $0xa0,%rsp
  0x00000000032aed5e: pop    %rbp
  0x00000000032aed5f: test   %eax,-0x9bec65(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032aed65: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x00000000032aed66: mov    %r9d,0x80(%rsp)
  0x00000000032aed6e: xchg   %ax,%ax
  0x00000000032aed70: jmpq   0x00000000032af420  ;   {no_reloc}
  0x00000000032aed75: add    %al,(%rax)
  0x00000000032aed77: add    %al,(%rax)
  0x00000000032aed79: add    %cl,-0x75(%rcx)
  0x00000000032aed7c: rex.RXB (bad) 
  0x00000000032aed7e: lea    0x20(%rax),%rdi
  0x00000000032aed82: cmp    0x70(%r15),%rdi
  0x00000000032aed86: ja     0x00000000032af42a
  0x00000000032aed8c: mov    %rdi,0x60(%r15)
  0x00000000032aed90: mov    0xa8(%rdx),%rcx
  0x00000000032aed97: mov    %rcx,(%rax)
  0x00000000032aed9a: mov    %rdx,%rcx
  0x00000000032aed9d: shr    $0x3,%rcx
  0x00000000032aeda1: mov    %ecx,0x8(%rax)
  0x00000000032aeda4: xor    %rcx,%rcx
  0x00000000032aeda7: mov    %ecx,0xc(%rax)
  0x00000000032aedaa: xor    %rcx,%rcx
  0x00000000032aedad: mov    %rcx,0x10(%rax)
  0x00000000032aedb1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x00000000032aedb5: data16 xchg %ax,%ax
  0x00000000032aedb8: jmpq   0x00000000032af446  ;   {no_reloc}
  0x00000000032aedbd: add    %al,(%rax)
  0x00000000032aedbf: add    %al,(%rax)
  0x00000000032aedc1: add    %cl,-0x77(%rax)
  0x00000000032aedc4: test   %ah,(%rax,%rcx,4)
  0x00000000032aedc7: add    %al,(%rax)
  0x00000000032aedc9: add    %cl,-0x75(%rcx)
  0x00000000032aedcc: rex.RXB (bad) 
  0x00000000032aedce: lea    0x18(%rax),%rdi
  0x00000000032aedd2: cmp    0x70(%r15),%rdi
  0x00000000032aedd6: ja     0x00000000032af450
  0x00000000032aeddc: mov    %rdi,0x60(%r15)
  0x00000000032aede0: mov    0xa8(%rdx),%rcx
  0x00000000032aede7: mov    %rcx,(%rax)
  0x00000000032aedea: mov    %rdx,%rcx
  0x00000000032aeded: shr    $0x3,%rcx
  0x00000000032aedf1: mov    %ecx,0x8(%rax)
  0x00000000032aedf4: xor    %rcx,%rcx
  0x00000000032aedf7: mov    %ecx,0xc(%rax)
  0x00000000032aedfa: xor    %rcx,%rcx
  0x00000000032aedfd: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x00000000032aee01: mov    %rax,%rbx
  0x00000000032aee04: movabs $0x1c33c7b8,%rdx   ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032aee0e: addq   $0x1,0x128(%rdx)
  0x00000000032aee16: movabs $0x1c387de8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032aee20: mov    0xdc(%rbx),%edx
  0x00000000032aee26: add    $0x8,%edx
  0x00000000032aee29: mov    %edx,0xdc(%rbx)
  0x00000000032aee2f: movabs $0x1c1c7640,%rbx   ;   {metadata({method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032aee39: and    $0x7ffff8,%edx
  0x00000000032aee3f: cmp    $0x0,%edx
  0x00000000032aee42: je     0x00000000032af45d
  0x00000000032aee48: mov    %rax,%rbx
  0x00000000032aee4b: movabs $0x1c387de8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032aee55: addq   $0x1,0x108(%rdx)
  0x00000000032aee5d: movabs $0x1c37d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032aee67: mov    0xdc(%rbx),%edx
  0x00000000032aee6d: add    $0x8,%edx
  0x00000000032aee70: mov    %edx,0xdc(%rbx)
  0x00000000032aee76: movabs $0x1c1c3970,%rbx   ;   {metadata({method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032aee80: and    $0x7ffff8,%edx
  0x00000000032aee86: cmp    $0x0,%edx
  0x00000000032aee89: je     0x00000000032af474
  0x00000000032aee8f: mov    %rax,%rbx
  0x00000000032aee92: movabs $0x1c37d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032aee9c: addq   $0x1,0x108(%rdx)
  0x00000000032aeea4: movabs $0x1c281c10,%rbx   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032aeeae: mov    0xdc(%rbx),%edx
  0x00000000032aeeb4: add    $0x8,%edx
  0x00000000032aeeb7: mov    %edx,0xdc(%rbx)
  0x00000000032aeebd: movabs $0x1c150480,%rbx   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032aeec7: and    $0x7ffff8,%edx
  0x00000000032aeecd: cmp    $0x0,%edx
  0x00000000032aeed0: je     0x00000000032af48b
  0x00000000032aeed6: mov    $0x10,%ebx
  0x00000000032aeedb: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032aeee5: mov    %rax,%r13
  0x00000000032aeee8: movslq %ebx,%rbx
  0x00000000032aeeeb: mov    %rbx,%rdi
  0x00000000032aeeee: cmp    $0xffffff,%rbx
  0x00000000032aeef5: ja     0x00000000032af4a2
  0x00000000032aeefb: movabs $0x17,%rsi
  0x00000000032aef05: lea    (%rsi,%rbx,2),%rsi
  0x00000000032aef09: and    $0xfffffffffffffff8,%rsi
  0x00000000032aef0d: mov    0x60(%r15),%rax
  0x00000000032aef11: lea    (%rax,%rsi,1),%rsi
  0x00000000032aef15: cmp    0x70(%r15),%rsi
  0x00000000032aef19: ja     0x00000000032af4a2
  0x00000000032aef1f: mov    %rsi,0x60(%r15)
  0x00000000032aef23: sub    %rax,%rsi
  0x00000000032aef26: movq   $0x1,(%rax)
  0x00000000032aef2d: mov    %rdx,%rcx
  0x00000000032aef30: shr    $0x3,%rcx
  0x00000000032aef34: mov    %ecx,0x8(%rax)
  0x00000000032aef37: mov    %ebx,0xc(%rax)
  0x00000000032aef3a: sub    $0x10,%rsi
  0x00000000032aef3e: je     0x00000000032aef55
  0x00000000032aef44: xor    %rbx,%rbx
  0x00000000032aef47: shr    $0x3,%rsi
  0x00000000032aef4b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032aef50: dec    %rsi
  0x00000000032aef53: jne    0x00000000032aef4b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00000000032aef55: mov    %rax,%r10
  0x00000000032aef58: shr    $0x3,%r10
  0x00000000032aef5c: mov    %r10d,0x10(%r13)
  0x00000000032aef60: mov    %r13,%rax
  0x00000000032aef63: shr    $0x9,%rax
  0x00000000032aef67: movabs $0xef3d000,%rdx
  0x00000000032aef71: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00000000032aef75: mov    %r13,%rax
  0x00000000032aef78: movabs $0x1c33c7b8,%rdx   ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032aef82: mov    0x8(%rax),%eax
  0x00000000032aef85: shl    $0x3,%rax
  0x00000000032aef89: cmp    0x140(%rdx),%rax
  0x00000000032aef90: jne    0x00000000032aef9f
  0x00000000032aef92: addq   $0x1,0x148(%rdx)
  0x00000000032aef9a: jmpq   0x00000000032af005
  0x00000000032aef9f: cmp    0x150(%rdx),%rax
  0x00000000032aefa6: jne    0x00000000032aefb5
  0x00000000032aefa8: addq   $0x1,0x158(%rdx)
  0x00000000032aefb0: jmpq   0x00000000032af005
  0x00000000032aefb5: cmpq   $0x0,0x140(%rdx)
  0x00000000032aefc0: jne    0x00000000032aefd9
  0x00000000032aefc2: mov    %rax,0x140(%rdx)
  0x00000000032aefc9: movq   $0x1,0x148(%rdx)
  0x00000000032aefd4: jmpq   0x00000000032af005
  0x00000000032aefd9: cmpq   $0x0,0x150(%rdx)
  0x00000000032aefe4: jne    0x00000000032aeffd
  0x00000000032aefe6: mov    %rax,0x150(%rdx)
  0x00000000032aefed: movq   $0x1,0x158(%rdx)
  0x00000000032aeff8: jmpq   0x00000000032af005
  0x00000000032aeffd: addq   $0x1,0x138(%rdx)
  0x00000000032af005: movabs $0x1c464bd0,%rdx   ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af00f: mov    0xdc(%rdx),%esi
  0x00000000032af015: add    $0x8,%esi
  0x00000000032af018: mov    %esi,0xdc(%rdx)
  0x00000000032af01e: movabs $0x1c1c7e18,%rdx   ;   {metadata({method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af028: and    $0x7ffff8,%esi
  0x00000000032af02e: cmp    $0x0,%esi
  0x00000000032af031: je     0x00000000032af4ac
  0x00000000032af037: mov    %r13,%rax
  0x00000000032af03a: movabs $0x1c464bd0,%rdx   ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af044: addq   $0x1,0x108(%rdx)
  0x00000000032af04c: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x00000000032af04f: mov    %r13,0x78(%rsp)
  0x00000000032af054: nop
  0x00000000032af055: nop
  0x00000000032af056: nop
  0x00000000032af057: callq  0x00000000031d61a0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000032af05c: mov    0x78(%rsp),%rax
  0x00000000032af061: movabs $0x1c33c7b8,%r8    ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032af06b: mov    0x8(%rax),%eax
  0x00000000032af06e: shl    $0x3,%rax
  0x00000000032af072: cmp    0x170(%r8),%rax
  0x00000000032af079: jne    0x00000000032af088
  0x00000000032af07b: addq   $0x1,0x178(%r8)
  0x00000000032af083: jmpq   0x00000000032af0ee
  0x00000000032af088: cmp    0x180(%r8),%rax
  0x00000000032af08f: jne    0x00000000032af09e
  0x00000000032af091: addq   $0x1,0x188(%r8)
  0x00000000032af099: jmpq   0x00000000032af0ee
  0x00000000032af09e: cmpq   $0x0,0x170(%r8)
  0x00000000032af0a9: jne    0x00000000032af0c2
  0x00000000032af0ab: mov    %rax,0x170(%r8)
  0x00000000032af0b2: movq   $0x1,0x178(%r8)
  0x00000000032af0bd: jmpq   0x00000000032af0ee
  0x00000000032af0c2: cmpq   $0x0,0x180(%r8)
  0x00000000032af0cd: jne    0x00000000032af0e6
  0x00000000032af0cf: mov    %rax,0x180(%r8)
  0x00000000032af0d6: movq   $0x1,0x188(%r8)
  0x00000000032af0e1: jmpq   0x00000000032af0ee
  0x00000000032af0e6: addq   $0x1,0x168(%r8)
  0x00000000032af0ee: movabs $0x1c3411d0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af0f8: mov    0xdc(%r8),%edx
  0x00000000032af0ff: add    $0x8,%edx
  0x00000000032af102: mov    %edx,0xdc(%r8)
  0x00000000032af109: movabs $0x1c1c7958,%r8    ;   {metadata({method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af113: and    $0x7ffff8,%edx
  0x00000000032af119: cmp    $0x0,%edx
  0x00000000032af11c: je     0x00000000032af4c3
  0x00000000032af122: mov    0x78(%rsp),%rax
  0x00000000032af127: movabs $0x1c3411d0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af131: addq   $0x1,0x108(%r8)
  0x00000000032af139: movabs $0x76bf1efd8,%r8   ;   {oop(&quot; &gt; &quot;)}
  0x00000000032af143: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x00000000032af148: nop
  0x00000000032af149: nop
  0x00000000032af14a: nop
  0x00000000032af14b: nop
  0x00000000032af14c: nop
  0x00000000032af14d: nop
  0x00000000032af14e: nop
  0x00000000032af14f: callq  0x00000000031d61a0  ; OopMap{[120]=Oop [136]=Oop off=1588}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000032af154: mov    0x78(%rsp),%rax
  0x00000000032af159: movabs $0x1c33c7b8,%r8    ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032af163: mov    0x8(%rax),%eax
  0x00000000032af166: shl    $0x3,%rax
  0x00000000032af16a: cmp    0x1a0(%r8),%rax
  0x00000000032af171: jne    0x00000000032af180
  0x00000000032af173: addq   $0x1,0x1a8(%r8)
  0x00000000032af17b: jmpq   0x00000000032af1e6
  0x00000000032af180: cmp    0x1b0(%r8),%rax
  0x00000000032af187: jne    0x00000000032af196
  0x00000000032af189: addq   $0x1,0x1b8(%r8)
  0x00000000032af191: jmpq   0x00000000032af1e6
  0x00000000032af196: cmpq   $0x0,0x1a0(%r8)
  0x00000000032af1a1: jne    0x00000000032af1ba
  0x00000000032af1a3: mov    %rax,0x1a0(%r8)
  0x00000000032af1aa: movq   $0x1,0x1a8(%r8)
  0x00000000032af1b5: jmpq   0x00000000032af1e6
  0x00000000032af1ba: cmpq   $0x0,0x1b0(%r8)
  0x00000000032af1c5: jne    0x00000000032af1de
  0x00000000032af1c7: mov    %rax,0x1b0(%r8)
  0x00000000032af1ce: movq   $0x1,0x1b8(%r8)
  0x00000000032af1d9: jmpq   0x00000000032af1e6
  0x00000000032af1de: addq   $0x1,0x198(%r8)
  0x00000000032af1e6: movabs $0x1c464bd0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af1f0: mov    0xdc(%r8),%edx
  0x00000000032af1f7: add    $0x8,%edx
  0x00000000032af1fa: mov    %edx,0xdc(%r8)
  0x00000000032af201: movabs $0x1c1c7e18,%r8    ;   {metadata({method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af20b: and    $0x7ffff8,%edx
  0x00000000032af211: cmp    $0x0,%edx
  0x00000000032af214: je     0x00000000032af4da
  0x00000000032af21a: mov    0x78(%rsp),%rax
  0x00000000032af21f: movabs $0x1c464bd0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af229: addq   $0x1,0x108(%r8)
  0x00000000032af231: mov    0x80(%rsp),%r8d
  0x00000000032af239: mov    0x78(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x00000000032af23e: nop
  0x00000000032af23f: callq  0x00000000031d61a0  ; OopMap{[120]=Oop [136]=Oop off=1828}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000032af244: mov    0x78(%rsp),%rax
  0x00000000032af249: movabs $0x1c33c7b8,%rdx   ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032af253: mov    0x8(%rax),%eax
  0x00000000032af256: shl    $0x3,%rax
  0x00000000032af25a: cmp    0x1d0(%rdx),%rax
  0x00000000032af261: jne    0x00000000032af270
  0x00000000032af263: addq   $0x1,0x1d8(%rdx)
  0x00000000032af26b: jmpq   0x00000000032af2d6
  0x00000000032af270: cmp    0x1e0(%rdx),%rax
  0x00000000032af277: jne    0x00000000032af286
  0x00000000032af279: addq   $0x1,0x1e8(%rdx)
  0x00000000032af281: jmpq   0x00000000032af2d6
  0x00000000032af286: cmpq   $0x0,0x1d0(%rdx)
  0x00000000032af291: jne    0x00000000032af2aa
  0x00000000032af293: mov    %rax,0x1d0(%rdx)
  0x00000000032af29a: movq   $0x1,0x1d8(%rdx)
  0x00000000032af2a5: jmpq   0x00000000032af2d6
  0x00000000032af2aa: cmpq   $0x0,0x1e0(%rdx)
  0x00000000032af2b5: jne    0x00000000032af2ce
  0x00000000032af2b7: mov    %rax,0x1e0(%rdx)
  0x00000000032af2be: movq   $0x1,0x1e8(%rdx)
  0x00000000032af2c9: jmpq   0x00000000032af2d6
  0x00000000032af2ce: addq   $0x1,0x1c8(%rdx)
  0x00000000032af2d6: movabs $0x1c387f18,%rdx   ;   {metadata(method data for {method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af2e0: mov    0xdc(%rdx),%esi
  0x00000000032af2e6: add    $0x8,%esi
  0x00000000032af2e9: mov    %esi,0xdc(%rdx)
  0x00000000032af2ef: movabs $0x1c1c8d08,%rdx   ;   {metadata({method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af2f9: and    $0x7ffff8,%esi
  0x00000000032af2ff: cmp    $0x0,%esi
  0x00000000032af302: je     0x00000000032af4f1
  0x00000000032af308: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032af312: mov    0x60(%r15),%rax
  0x00000000032af316: lea    0x18(%rax),%rdi
  0x00000000032af31a: cmp    0x70(%r15),%rdi
  0x00000000032af31e: ja     0x00000000032af508
  0x00000000032af324: mov    %rdi,0x60(%r15)
  0x00000000032af328: mov    0xa8(%rdx),%rcx
  0x00000000032af32f: mov    %rcx,(%rax)
  0x00000000032af332: mov    %rdx,%rcx
  0x00000000032af335: shr    $0x3,%rcx
  0x00000000032af339: mov    %ecx,0x8(%rax)
  0x00000000032af33c: xor    %rcx,%rcx
  0x00000000032af33f: mov    %ecx,0xc(%rax)
  0x00000000032af342: xor    %rcx,%rcx
  0x00000000032af345: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00000000032af349: mov    0x78(%rsp),%r8
  0x00000000032af34e: mov    0x10(%r8),%r9d
  0x00000000032af352: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00000000032af356: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00000000032af35a: mov    %rax,%r8
  0x00000000032af35d: movabs $0x1c387f18,%rdx   ;   {metadata(method data for {method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032af367: addq   $0x1,0x108(%rdx)
  0x00000000032af36f: mov    %r9,%r8
  0x00000000032af372: mov    $0x0,%r9d
  0x00000000032af378: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00000000032af37b: mov    %rax,0x90(%rsp)
  0x00000000032af383: nop
  0x00000000032af384: nop
  0x00000000032af385: nop
  0x00000000032af386: nop
  0x00000000032af387: callq  0x00000000031d61a0  ; OopMap{[136]=Oop [144]=Oop off=2156}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000032af38c: mov    0x88(%rsp),%rax
  0x00000000032af394: movabs $0x1c33c7b8,%r8    ;   {metadata(method data for {method} {0x000000001c267828} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00000000032af39e: addq   $0x1,0x1f8(%r8)
  0x00000000032af3a6: mov    0x90(%rsp),%r8
  0x00000000032af3ae: mov    0x88(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x00000000032af3b6: nop
  0x00000000032af3b7: callq  0x00000000031d61a0  ; OopMap{[136]=Oop off=2204}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x00000000032af3bc: mov    0x88(%rsp),%rax
  0x00000000032af3c4: jmpq   0x00000000032af540
  0x00000000032af3c9: mov    %rbx,0x8(%rsp)
  0x00000000032af3ce: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032af3d6: callq  0x0000000003291d60  ; OopMap{r11=Oop off=2235}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00000000032af3db: jmpq   0x00000000032aeb64
  0x00000000032af3e0: callq  0x000000000328e700  ; OopMap{r11=Oop off=2245}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00000000032af3e5: jmpq   0x00000000032aec1e
  0x00000000032af3ea: callq  0x000000000328d680  ; OopMap{r11=Oop rax=Oop off=2255}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00000000032af3ef: mov    %r9,0x8(%rsp)
  0x00000000032af3f4: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032af3fc: callq  0x0000000003291d60  ; OopMap{r11=Oop rax=Oop off=2273}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x00000000032af401: jmpq   0x00000000032aec6b
  0x00000000032af406: nop
  0x00000000032af407: callq  0x00000000031d6620  ; OopMap{[112]=Oop off=2284}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x00000000032af40c: jmpq   0x00000000032aed52
  0x00000000032af411: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032af41b: mov    $0xa050f00,%eax
  0x00000000032af420: callq  0x0000000003290ca0  ; OopMap{off=2309}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af425: jmpq   0x00000000032aed70
  0x00000000032af42a: mov    %rdx,%rdx
  0x00000000032af42d: callq  0x000000000328de00  ; OopMap{off=2322}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af432: jmpq   0x00000000032aedb5
  0x00000000032af437: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032af441: mov    $0xa050f00,%eax
  0x00000000032af446: callq  0x0000000003290ca0  ; OopMap{rax=Oop off=2347}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af44b: jmpq   0x00000000032aedb8
  0x00000000032af450: mov    %rdx,%rdx
  0x00000000032af453: callq  0x000000000328de00  ; OopMap{[136]=Oop off=2360}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af458: jmpq   0x00000000032aee01
  0x00000000032af45d: mov    %rbx,0x8(%rsp)
  0x00000000032af462: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032af46a: callq  0x0000000003291d60  ; OopMap{[136]=Oop rax=Oop off=2383}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af46f: jmpq   0x00000000032aee48
  0x00000000032af474: mov    %rbx,0x8(%rsp)
  0x00000000032af479: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032af481: callq  0x0000000003291d60  ; OopMap{[136]=Oop rax=Oop off=2406}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af486: jmpq   0x00000000032aee8f
  0x00000000032af48b: mov    %rbx,0x8(%rsp)
  0x00000000032af490: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032af498: callq  0x0000000003291d60  ; OopMap{[136]=Oop rax=Oop off=2429}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af49d: jmpq   0x00000000032aeed6
  0x00000000032af4a2: callq  0x000000000328e700  ; OopMap{[136]=Oop r13=Oop off=2439}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af4a7: jmpq   0x00000000032aef55
  0x00000000032af4ac: mov    %rdx,0x8(%rsp)
  0x00000000032af4b1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032af4b9: callq  0x0000000003291d60  ; OopMap{[136]=Oop r13=Oop off=2462}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af4be: jmpq   0x00000000032af037
  0x00000000032af4c3: mov    %r8,0x8(%rsp)
  0x00000000032af4c8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032af4d0: callq  0x0000000003291d60  ; OopMap{[120]=Oop [136]=Oop off=2485}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af4d5: jmpq   0x00000000032af122
  0x00000000032af4da: mov    %r8,0x8(%rsp)
  0x00000000032af4df: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032af4e7: callq  0x0000000003291d60  ; OopMap{[120]=Oop [136]=Oop off=2508}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af4ec: jmpq   0x00000000032af21a
  0x00000000032af4f1: mov    %rdx,0x8(%rsp)
  0x00000000032af4f6: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032af4fe: callq  0x0000000003291d60  ; OopMap{[120]=Oop [136]=Oop off=2531}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af503: jmpq   0x00000000032af308
  0x00000000032af508: mov    %rdx,%rdx
  0x00000000032af50b: callq  0x000000000328de00  ; OopMap{[120]=Oop [136]=Oop off=2544}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00000000032af510: jmpq   0x00000000032af349
  0x00000000032af515: nop
  0x00000000032af516: nop
  0x00000000032af517: mov    0x2a8(%r15),%rax
  0x00000000032af51e: movabs $0x0,%r10
  0x00000000032af528: mov    %r10,0x2a8(%r15)
  0x00000000032af52f: movabs $0x0,%r10
  0x00000000032af539: mov    %r10,0x2b0(%r15)
  0x00000000032af540: add    $0xa0,%rsp
  0x00000000032af547: pop    %rbp
  0x00000000032af548: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032af54d: hlt    
  0x00000000032af54e: hlt    
  0x00000000032af54f: hlt    
  0x00000000032af550: hlt    
  0x00000000032af551: hlt    
  0x00000000032af552: hlt    
  0x00000000032af553: hlt    
  0x00000000032af554: hlt    
  0x00000000032af555: hlt    
  0x00000000032af556: hlt    
  0x00000000032af557: hlt    
  0x00000000032af558: hlt    
  0x00000000032af559: hlt    
  0x00000000032af55a: hlt    
  0x00000000032af55b: hlt    
  0x00000000032af55c: hlt    
  0x00000000032af55d: hlt    
  0x00000000032af55e: hlt    
  0x00000000032af55f: hlt    
[Stub Code]
  0x00000000032af560: nop                       ;   {no_reloc}
  0x00000000032af561: nop
  0x00000000032af562: nop
  0x00000000032af563: nop
  0x00000000032af564: nop
  0x00000000032af565: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032af56f: jmpq   0x00000000032af56f  ;   {runtime_call}
  0x00000000032af574: nop
  0x00000000032af575: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032af57f: jmpq   0x00000000032af57f  ;   {runtime_call}
  0x00000000032af584: nop
  0x00000000032af585: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032af58f: jmpq   0x00000000032af58f  ;   {runtime_call}
  0x00000000032af594: nop
  0x00000000032af595: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032af59f: jmpq   0x00000000032af59f  ;   {runtime_call}
  0x00000000032af5a4: nop
  0x00000000032af5a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032af5af: jmpq   0x00000000032af5af  ;   {runtime_call}
  0x00000000032af5b4: nop
  0x00000000032af5b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032af5bf: jmpq   0x00000000032af5bf  ;   {runtime_call}
[Exception Handler]
  0x00000000032af5c4: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032af5c9: mov    %rsp,-0x28(%rsp)
  0x00000000032af5ce: sub    $0x80,%rsp
  0x00000000032af5d5: mov    %rax,0x78(%rsp)
  0x00000000032af5da: mov    %rcx,0x70(%rsp)
  0x00000000032af5df: mov    %rdx,0x68(%rsp)
  0x00000000032af5e4: mov    %rbx,0x60(%rsp)
  0x00000000032af5e9: mov    %rbp,0x50(%rsp)
  0x00000000032af5ee: mov    %rsi,0x48(%rsp)
  0x00000000032af5f3: mov    %rdi,0x40(%rsp)
  0x00000000032af5f8: mov    %r8,0x38(%rsp)
  0x00000000032af5fd: mov    %r9,0x30(%rsp)
  0x00000000032af602: mov    %r10,0x28(%rsp)
  0x00000000032af607: mov    %r11,0x20(%rsp)
  0x00000000032af60c: mov    %r12,0x18(%rsp)
  0x00000000032af611: mov    %r13,0x10(%rsp)
  0x00000000032af616: mov    %r14,0x8(%rsp)
  0x00000000032af61b: mov    %r15,(%rsp)
  0x00000000032af61f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032af629: movabs $0x32af5c9,%rdx    ;   {internal_word}
  0x00000000032af633: mov    %rsp,%r8
  0x00000000032af636: and    $0xfffffffffffffff0,%rsp
  0x00000000032af63a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032af63f: hlt    
[Deopt Handler Code]
  0x00000000032af640: movabs $0x32af640,%r10    ;   {section_word}
  0x00000000032af64a: push   %r10
  0x00000000032af64c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032af651: hlt    
  0x00000000032af652: hlt    
  0x00000000032af653: hlt    
  0x00000000032af654: hlt    
  0x00000000032af655: hlt    
  0x00000000032af656: hlt    
  0x00000000032af657: hlt    
<nmethod compile_id='36' compiler='C1' level='3' entry='0x00000000032aeb20' size='4856' address='0x00000000032ae910' relocation_offset='288' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='4770' iicount='4770' stamp='0.564'/>
<writer thread='26124'/>
Decoding compiled method 0x00000000032a72d0:
Code:
[Entry Point]
  # {method} {0x000000001c352070} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;
  # parm0:    rdx:rdx   = long
  # parm1:    r8:r8     = &apos;[B&apos;
  # parm2:    r9        = boolean
  #           [sp+0x80]  (sp of caller)
  0x00000000032a7440: mov    0x8(%rdx),%r10d
  0x00000000032a7444: shl    $0x3,%r10
  0x00000000032a7448: cmp    %r10,%rax
  0x00000000032a744b: je     0x00000000032a7458
  0x00000000032a7451: jmpq   0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a7456: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000032a7458: mov    %eax,-0x6000(%rsp)
  0x00000000032a745f: push   %rbp
  0x00000000032a7460: mov    %rsp,%rbp
  0x00000000032a7463: sub    $0x70,%rsp
  0x00000000032a7467: mov    %r9,0x20(%rsp)
  0x00000000032a746c: mov    %r8,0x30(%rsp)
  0x00000000032a7471: cmp    $0x0,%r8
  0x00000000032a7475: lea    0x30(%rsp),%r9
  0x00000000032a747a: cmove  0x30(%rsp),%r9
  0x00000000032a7480: mov    %rdx,%r8
  0x00000000032a7483: movabs $0x76b8d81c0,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/util/zip/ZipFile&apos;)}
  0x00000000032a748d: mov    %r14,0x58(%rsp)
  0x00000000032a7492: lea    0x58(%rsp),%r14
  0x00000000032a7497: mov    %r14,%rdx          ; OopMap{[48]=Oop [88]=Oop off=90}
  0x00000000032a749a: movabs $0x32a749a,%r10    ;   {section_word}
  0x00000000032a74a4: mov    %r10,0x1e0(%r15)
  0x00000000032a74ab: mov    %rsp,0x1d8(%r15)
  0x00000000032a74b2: cmpb   $0x0,0x52c442c8(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000032a74b9: je     0x00000000032a7501
  0x00000000032a74bf: push   %rdx
  0x00000000032a74c0: push   %r8
  0x00000000032a74c2: push   %r9
  0x00000000032a74c4: movabs $0x1c352068,%rdx   ;   {metadata({method} {0x000000001c352070} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00000000032a74ce: mov    %r15,%rcx
  0x00000000032a74d1: sub    $0x20,%rsp
  0x00000000032a74d5: test   $0xf,%esp
  0x00000000032a74db: je     0x00000000032a74f3
  0x00000000032a74e1: sub    $0x8,%rsp
  0x00000000032a74e5: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a74ea: add    $0x8,%rsp
  0x00000000032a74ee: jmpq   0x00000000032a74f8
  0x00000000032a74f3: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a74f8: add    $0x20,%rsp
  0x00000000032a74fc: pop    %r9
  0x00000000032a74fe: pop    %r8
  0x00000000032a7500: pop    %rdx
  0x00000000032a7501: lea    0x1f8(%r15),%rcx
  0x00000000032a7508: movl   $0x4,0x270(%r15)
  0x00000000032a7513: callq  0x0000000055691f98  ;   {runtime_call}
  0x00000000032a7518: vzeroupper 
  0x00000000032a751b: movl   $0x5,0x270(%r15)
  0x00000000032a7526: mov    %r15d,%ecx
  0x00000000032a7529: shr    $0x4,%ecx
  0x00000000032a752c: and    $0xffc,%ecx
  0x00000000032a7532: movabs $0x2900000,%r10    ;   {external_word}
  0x00000000032a753c: mov    %ecx,(%r10,%rcx,1)
  0x00000000032a7540: cmpl   $0x0,0x52c44e06(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x00000000032a754a: jne    0x00000000032a755e
  0x00000000032a7550: cmpl   $0x0,0x30(%r15)
  0x00000000032a7558: je     0x00000000032a757f
  0x00000000032a755e: mov    %rax,-0x8(%rbp)
  0x00000000032a7562: mov    %r15,%rcx
  0x00000000032a7565: mov    %rsp,%r12
  0x00000000032a7568: sub    $0x20,%rsp
  0x00000000032a756c: and    $0xfffffffffffffff0,%rsp
  0x00000000032a7570: callq  0x00000000559236e0  ;   {runtime_call}
  0x00000000032a7575: mov    %r12,%rsp
  0x00000000032a7578: xor    %r12,%r12
  0x00000000032a757b: mov    -0x8(%rbp),%rax
  0x00000000032a757f: movl   $0x8,0x270(%r15)
  0x00000000032a758a: cmpl   $0x1,0x29c(%r15)
  0x00000000032a7595: je     0x00000000032a762d
  0x00000000032a759b: cmpb   $0x0,0x52c441df(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000032a75a2: je     0x00000000032a75e8
  0x00000000032a75a8: mov    %rax,-0x8(%rbp)
  0x00000000032a75ac: movabs $0x1c352068,%rdx   ;   {metadata({method} {0x000000001c352070} &apos;getEntry&apos; &apos;(J[BZ)J&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00000000032a75b6: mov    %r15,%rcx
  0x00000000032a75b9: sub    $0x20,%rsp
  0x00000000032a75bd: test   $0xf,%esp
  0x00000000032a75c3: je     0x00000000032a75db
  0x00000000032a75c9: sub    $0x8,%rsp
  0x00000000032a75cd: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a75d2: add    $0x8,%rsp
  0x00000000032a75d6: jmpq   0x00000000032a75e0
  0x00000000032a75db: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a75e0: add    $0x20,%rsp
  0x00000000032a75e4: mov    -0x8(%rbp),%rax
  0x00000000032a75e8: movabs $0x0,%r10
  0x00000000032a75f2: mov    %r10,0x1d8(%r15)
  0x00000000032a75f9: movabs $0x0,%r10
  0x00000000032a7603: mov    %r10,0x1e0(%r15)
  0x00000000032a760a: mov    0x38(%r15),%rcx
  0x00000000032a760e: movl   $0x0,0x100(%rcx)
  0x00000000032a7618: leaveq 
  0x00000000032a7619: cmpq   $0x0,0x8(%r15)
  0x00000000032a7621: jne    0x00000000032a7628
  0x00000000032a7627: retq   
  0x00000000032a7628: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000032a762d: mov    %rax,-0x8(%rbp)
  0x00000000032a7631: mov    %rsp,%r12
  0x00000000032a7634: sub    $0x20,%rsp
  0x00000000032a7638: and    $0xfffffffffffffff0,%rsp
  0x00000000032a763c: callq  0x000000005590c5a0  ;   {runtime_call}
  0x00000000032a7641: mov    %r12,%rsp
  0x00000000032a7644: xor    %r12,%r12
  0x00000000032a7647: mov    -0x8(%rbp),%rax
  0x00000000032a764b: jmpq   0x00000000032a759b
<nmethod compile_id='48' compile_kind='c2n' level='0' entry='0x00000000032a7440' size='896' address='0x00000000032a72d0' relocation_offset='288' consts_offset='896' insts_offset='368' method='java/util/zip/ZipFile getEntry (J[BZ)J' bytes='0' count='1664' iicount='1664' stamp='0.566'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032afc50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c31fcf8} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00000000032afd80: mov    %eax,-0x6000(%rsp)
  0x00000000032afd87: push   %rbp
  0x00000000032afd88: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)

  0x00000000032afd8c: mov    %edx,%r11d
  0x00000000032afd8f: shr    $0x8,%r11d         ;*iushr
                                                ; - java.lang.CharacterData::of@3 (line 77)

  0x00000000032afd93: test   %r11d,%r11d
  0x00000000032afd96: jne    0x00000000032afdae  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00000000032afd98: movabs $0x76b81ae18,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00000000032afda2: add    $0x20,%rsp
  0x00000000032afda6: pop    %rbp
  0x00000000032afda7: test   %eax,-0x9bfdad(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032afdad: retq   
  0x00000000032afdae: mov    %edx,%ebp
  0x00000000032afdb0: mov    %r11d,(%rsp)
  0x00000000032afdb4: mov    $0xffffff65,%edx
  0x00000000032afdb9: xchg   %ax,%ax
  0x00000000032afdbb: callq  0x00000000031d57a0  ; OopMap{off=64}
                                                ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)
                                                ;   {runtime_call}
  0x00000000032afdc0: int3                      ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00000000032afdc1: hlt    
  0x00000000032afdc2: hlt    
  0x00000000032afdc3: hlt    
  0x00000000032afdc4: hlt    
  0x00000000032afdc5: hlt    
  0x00000000032afdc6: hlt    
  0x00000000032afdc7: hlt    
  0x00000000032afdc8: hlt    
  0x00000000032afdc9: hlt    
  0x00000000032afdca: hlt    
  0x00000000032afdcb: hlt    
  0x00000000032afdcc: hlt    
  0x00000000032afdcd: hlt    
  0x00000000032afdce: hlt    
  0x00000000032afdcf: hlt    
  0x00000000032afdd0: hlt    
  0x00000000032afdd1: hlt    
  0x00000000032afdd2: hlt    
  0x00000000032afdd3: hlt    
  0x00000000032afdd4: hlt    
  0x00000000032afdd5: hlt    
  0x00000000032afdd6: hlt    
  0x00000000032afdd7: hlt    
  0x00000000032afdd8: hlt    
  0x00000000032afdd9: hlt    
  0x00000000032afdda: hlt    
  0x00000000032afddb: hlt    
  0x00000000032afddc: hlt    
  0x00000000032afddd: hlt    
  0x00000000032afdde: hlt    
  0x00000000032afddf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032afde0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032afde5: callq  0x00000000032afdea
  0x00000000032afdea: subq   $0x5,(%rsp)
  0x00000000032afdef: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032afdf4: hlt    
  0x00000000032afdf5: hlt    
  0x00000000032afdf6: hlt    
  0x00000000032afdf7: hlt    
<nmethod compile_id='12' compiler='C2' level='4' entry='0x00000000032afd80' size='600' address='0x00000000032afc50' relocation_offset='288' insts_offset='304' stub_offset='400' scopes_data_offset='448' scopes_pcs_offset='480' dependencies_offset='592' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='32857' iicount='32857' stamp='0.567'/>
<writer thread='26124'/>
<task_queued compile_id='49' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='1280' iicount='1280' level='1' stamp='0.567' comment='tiered' hot_count='1280'/>
<writer thread='6664'/>
<task_queued compile_id='50' method='java/lang/String lastIndexOf (II)I' bytes='52' count='716' backedge_count='53661' iicount='716' level='3' stamp='0.567' comment='tiered' hot_count='714'/>
<writer thread='4332'/>
Decoding compiled method 0x00000000032aa750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x20]  (sp of caller)
  0x00000000032aa880: mov    0x8(%rdx),%r10d
  0x00000000032aa884: shl    $0x3,%r10
  0x00000000032aa888: cmp    %r10,%rax
  0x00000000032aa88b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032aa891: data16 xchg %ax,%ax
  0x00000000032aa894: nopl   0x0(%rax,%rax,1)
  0x00000000032aa89c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032aa8a0: mov    %eax,-0x6000(%rsp)
  0x00000000032aa8a7: push   %rbp
  0x00000000032aa8a8: sub    $0x10,%rsp         ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)

  0x00000000032aa8ac: mov    0x8(%rdx),%r11d
  0x00000000032aa8b0: movabs $0x0,%r10
  0x00000000032aa8ba: lea    (%r10,%r11,8),%r10
  0x00000000032aa8be: mov    $0x40000000,%r8d
  0x00000000032aa8c4: test   %r8d,0x9c(%r10)
  0x00000000032aa8cb: je     0x00000000032aa8d8  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000000032aa8cd: mov    %rdx,%rbp
  0x00000000032aa8d0: data16 xchg %ax,%ax
  0x00000000032aa8d3: callq  0x000000000329e5e0  ; OopMap{rbp=Oop off=88}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00000000032aa8d8: add    $0x10,%rsp
  0x00000000032aa8dc: pop    %rbp
  0x00000000032aa8dd: test   %eax,-0x9ba8e3(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032aa8e3: retq                      ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00000000032aa8e4: mov    %rax,%rdx
  0x00000000032aa8e7: add    $0x10,%rsp
  0x00000000032aa8eb: pop    %rbp
  0x00000000032aa8ec: jmpq   0x0000000003292260  ;   {runtime_call}
  0x00000000032aa8f1: hlt    
  0x00000000032aa8f2: hlt    
  0x00000000032aa8f3: hlt    
  0x00000000032aa8f4: hlt    
  0x00000000032aa8f5: hlt    
  0x00000000032aa8f6: hlt    
  0x00000000032aa8f7: hlt    
  0x00000000032aa8f8: hlt    
  0x00000000032aa8f9: hlt    
  0x00000000032aa8fa: hlt    
  0x00000000032aa8fb: hlt    
  0x00000000032aa8fc: hlt    
  0x00000000032aa8fd: hlt    
  0x00000000032aa8fe: hlt    
  0x00000000032aa8ff: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032aa900: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032aa905: callq  0x00000000032aa90a
  0x00000000032aa90a: subq   $0x5,(%rsp)
  0x00000000032aa90f: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032aa914: hlt    
  0x00000000032aa915: hlt    
  0x00000000032aa916: hlt    
  0x00000000032aa917: hlt    
<nmethod compile_id='8' compiler='C2' level='4' entry='0x00000000032aa880' size='616' address='0x00000000032aa750' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='488' dependencies_offset='584' handler_table_offset='592' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='23012' iicount='23012' stamp='0.568'/>
Decoding compiled method 0x00000000032a9050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rdx       = int
  # parm1:    r8        = int
  #           [sp+0x20]  (sp of caller)
  0x00000000032a9180: sub    $0x18,%rsp
  0x00000000032a9187: mov    %rbp,0x10(%rsp)    ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)

  0x00000000032a918c: cmp    %r8d,%edx
  0x00000000032a918f: mov    %r8d,%eax
  0x00000000032a9192: cmovle %edx,%eax          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00000000032a9195: add    $0x10,%rsp
  0x00000000032a9199: pop    %rbp
  0x00000000032a919a: test   %eax,-0x9b91a0(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032a91a0: retq   
  0x00000000032a91a1: hlt    
  0x00000000032a91a2: hlt    
  0x00000000032a91a3: hlt    
  0x00000000032a91a4: hlt    
  0x00000000032a91a5: hlt    
  0x00000000032a91a6: hlt    
  0x00000000032a91a7: hlt    
  0x00000000032a91a8: hlt    
  0x00000000032a91a9: hlt    
  0x00000000032a91aa: hlt    
  0x00000000032a91ab: hlt    
  0x00000000032a91ac: hlt    
  0x00000000032a91ad: hlt    
  0x00000000032a91ae: hlt    
  0x00000000032a91af: hlt    
  0x00000000032a91b0: hlt    
  0x00000000032a91b1: hlt    
  0x00000000032a91b2: hlt    
  0x00000000032a91b3: hlt    
  0x00000000032a91b4: hlt    
  0x00000000032a91b5: hlt    
  0x00000000032a91b6: hlt    
  0x00000000032a91b7: hlt    
  0x00000000032a91b8: hlt    
  0x00000000032a91b9: hlt    
  0x00000000032a91ba: hlt    
  0x00000000032a91bb: hlt    
  0x00000000032a91bc: hlt    
  0x00000000032a91bd: hlt    
  0x00000000032a91be: hlt    
  0x00000000032a91bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a91c0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a91c5: callq  0x00000000032a91ca
  0x00000000032a91ca: subq   $0x5,(%rsp)
  0x00000000032a91cf: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a91d4: hlt    
  0x00000000032a91d5: hlt    
  0x00000000032a91d6: hlt    
  0x00000000032a91d7: hlt    
<nmethod compile_id='2' compiler='C2' level='4' entry='0x00000000032a9180' size='488' address='0x00000000032a9050' relocation_offset='288' insts_offset='304' stub_offset='368' scopes_data_offset='400' scopes_pcs_offset='416' dependencies_offset='480' method='java/lang/Math min (II)I' bytes='11' count='12261' iicount='12261' stamp='0.569'/>
<writer thread='15136'/>
<task_queued compile_id='52' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='762' iicount='762' level='3' stamp='0.569' comment='tiered' hot_count='755'/>
<writer thread='30896'/>
Decoding compiled method 0x00000000032a8c90:
Code:
<writer thread='26124'/>
<task_queued compile_id='53' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='2944' iicount='2944' level='3' stamp='0.570' comment='tiered' hot_count='2944'/>
<writer thread='30896'/>
[Entry Point]
  # {method} {0x000000001c1cf220} &apos;compareAndSwapInt&apos; &apos;(Ljava/lang/Object;JII)Z&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  # parm3:    rsi       = int
  #           [sp+0x80]  (sp of caller)
  0x00000000032a8e00: mov    0x8(%rdx),%r10d
  0x00000000032a8e04: shl    $0x3,%r10
  0x00000000032a8e08: cmp    %r10,%rax
  0x00000000032a8e0b: je     0x00000000032a8e18
  0x00000000032a8e11: jmpq   0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a8e16: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000032a8e18: mov    %eax,-0x6000(%rsp)
  0x00000000032a8e1f: push   %rbp
  0x00000000032a8e20: mov    %rsp,%rbp
  0x00000000032a8e23: sub    $0x70,%rsp
  0x00000000032a8e27: mov    %rsi,0x28(%rsp)
  0x00000000032a8e2c: mov    %rdi,0x20(%rsp)
  0x00000000032a8e31: mov    %r8,0x38(%rsp)
  0x00000000032a8e36: cmp    $0x0,%r8
  0x00000000032a8e3a: lea    0x38(%rsp),%r8
  0x00000000032a8e3f: cmove  0x38(%rsp),%r8
  0x00000000032a8e45: mov    %rdx,0x30(%rsp)
  0x00000000032a8e4a: cmp    $0x0,%rdx
  0x00000000032a8e4e: lea    0x30(%rsp),%rdx
  0x00000000032a8e53: cmove  0x30(%rsp),%rdx    ; OopMap{[56]=Oop [48]=Oop off=89}
  0x00000000032a8e59: movabs $0x32a8e59,%r10    ;   {section_word}
  0x00000000032a8e63: mov    %r10,0x1e0(%r15)
  0x00000000032a8e6a: mov    %rsp,0x1d8(%r15)
  0x00000000032a8e71: cmpb   $0x0,0x52c42909(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000032a8e78: je     0x00000000032a8ec0
  0x00000000032a8e7e: push   %rdx
  0x00000000032a8e7f: push   %r8
  0x00000000032a8e81: push   %r9
  0x00000000032a8e83: movabs $0x1c1cf218,%rdx   ;   {metadata({method} {0x000000001c1cf220} &apos;compareAndSwapInt&apos; &apos;(Ljava/lang/Object;JII)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000032a8e8d: mov    %r15,%rcx
  0x00000000032a8e90: sub    $0x20,%rsp
  0x00000000032a8e94: test   $0xf,%esp
  0x00000000032a8e9a: je     0x00000000032a8eb2
  0x00000000032a8ea0: sub    $0x8,%rsp
  0x00000000032a8ea4: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a8ea9: add    $0x8,%rsp
  0x00000000032a8ead: jmpq   0x00000000032a8eb7
  0x00000000032a8eb2: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a8eb7: add    $0x20,%rsp
  0x00000000032a8ebb: pop    %r9
  0x00000000032a8ebd: pop    %r8
  0x00000000032a8ebf: pop    %rdx
  0x00000000032a8ec0: lea    0x1f8(%r15),%rcx
  0x00000000032a8ec7: movl   $0x4,0x270(%r15)
  0x00000000032a8ed2: callq  0x00000000558c57e0  ;   {runtime_call}
  0x00000000032a8ed7: vzeroupper 
  0x00000000032a8eda: and    $0xff,%eax
  0x00000000032a8ee0: setne  %al
  0x00000000032a8ee3: movl   $0x5,0x270(%r15)
  0x00000000032a8eee: mov    %r15d,%ecx
  0x00000000032a8ef1: shr    $0x4,%ecx
  0x00000000032a8ef4: and    $0xffc,%ecx
  0x00000000032a8efa: movabs $0x2900000,%r10    ;   {external_word}
  0x00000000032a8f04: mov    %ecx,(%r10,%rcx,1)
  0x00000000032a8f08: cmpl   $0x0,0x52c4343e(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x00000000032a8f12: jne    0x00000000032a8f26
  0x00000000032a8f18: cmpl   $0x0,0x30(%r15)
  0x00000000032a8f20: je     0x00000000032a8f47
  0x00000000032a8f26: mov    %rax,-0x8(%rbp)
  0x00000000032a8f2a: mov    %r15,%rcx
  0x00000000032a8f2d: mov    %rsp,%r12
  0x00000000032a8f30: sub    $0x20,%rsp
  0x00000000032a8f34: and    $0xfffffffffffffff0,%rsp
  0x00000000032a8f38: callq  0x00000000559236e0  ;   {runtime_call}
  0x00000000032a8f3d: mov    %r12,%rsp
  0x00000000032a8f40: xor    %r12,%r12
  0x00000000032a8f43: mov    -0x8(%rbp),%rax
  0x00000000032a8f47: movl   $0x8,0x270(%r15)
  0x00000000032a8f52: cmpl   $0x1,0x29c(%r15)
  0x00000000032a8f5d: je     0x00000000032a8ff5
  0x00000000032a8f63: cmpb   $0x0,0x52c42817(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000032a8f6a: je     0x00000000032a8fb0
  0x00000000032a8f70: mov    %rax,-0x8(%rbp)
  0x00000000032a8f74: movabs $0x1c1cf218,%rdx   ;   {metadata({method} {0x000000001c1cf220} &apos;compareAndSwapInt&apos; &apos;(Ljava/lang/Object;JII)Z&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000032a8f7e: mov    %r15,%rcx
  0x00000000032a8f81: sub    $0x20,%rsp
  0x00000000032a8f85: test   $0xf,%esp
  0x00000000032a8f8b: je     0x00000000032a8fa3
  0x00000000032a8f91: sub    $0x8,%rsp
  0x00000000032a8f95: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a8f9a: add    $0x8,%rsp
  0x00000000032a8f9e: jmpq   0x00000000032a8fa8
  0x00000000032a8fa3: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a8fa8: add    $0x20,%rsp
  0x00000000032a8fac: mov    -0x8(%rbp),%rax
  0x00000000032a8fb0: movabs $0x0,%r10
  0x00000000032a8fba: mov    %r10,0x1d8(%r15)
  0x00000000032a8fc1: movabs $0x0,%r10
  0x00000000032a8fcb: mov    %r10,0x1e0(%r15)
  0x00000000032a8fd2: mov    0x38(%r15),%rcx
  0x00000000032a8fd6: movl   $0x0,0x100(%rcx)
  0x00000000032a8fe0: leaveq 
  0x00000000032a8fe1: cmpq   $0x0,0x8(%r15)
  0x00000000032a8fe9: jne    0x00000000032a8ff0
  0x00000000032a8fef: retq   
  0x00000000032a8ff0: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000032a8ff5: mov    %rax,-0x8(%rbp)
  0x00000000032a8ff9: mov    %rsp,%r12
  0x00000000032a8ffc: sub    $0x20,%rsp
  0x00000000032a9000: and    $0xfffffffffffffff0,%rsp
  0x00000000032a9004: callq  0x000000005590c5a0  ;   {runtime_call}
  0x00000000032a9009: mov    %r12,%rsp
  0x00000000032a900c: xor    %r12,%r12
  0x00000000032a900f: mov    -0x8(%rbp),%rax
  0x00000000032a9013: jmpq   0x00000000032a8f63
<nmethod compile_id='51' compile_kind='c2n' level='0' entry='0x00000000032a8e00' size='904' address='0x00000000032a8c90' relocation_offset='288' consts_offset='904' insts_offset='368' method='sun/misc/Unsafe compareAndSwapInt (Ljava/lang/Object;JII)Z' bytes='0' count='1195' iicount='1195' stamp='0.571'/>
<writer thread='22604'/>
Decoding compiled method 0x00000000032a88d0:
Code:
[Entry Point]
  # {method} {0x000000001c1cf480} &apos;getIntVolatile&apos; &apos;(Ljava/lang/Object;J)I&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  #           [sp+0x70]  (sp of caller)
  0x00000000032a8a40: mov    0x8(%rdx),%r10d
  0x00000000032a8a44: shl    $0x3,%r10
  0x00000000032a8a48: cmp    %r10,%rax
  0x00000000032a8a4b: je     0x00000000032a8a58
  0x00000000032a8a51: jmpq   0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a8a56: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000032a8a58: mov    %eax,-0x6000(%rsp)
  0x00000000032a8a5f: push   %rbp
  0x00000000032a8a60: mov    %rsp,%rbp
  0x00000000032a8a63: sub    $0x60,%rsp
  0x00000000032a8a67: mov    %r8,0x28(%rsp)
  0x00000000032a8a6c: cmp    $0x0,%r8
  0x00000000032a8a70: lea    0x28(%rsp),%r8
  0x00000000032a8a75: cmove  0x28(%rsp),%r8
  0x00000000032a8a7b: mov    %rdx,0x20(%rsp)
  0x00000000032a8a80: cmp    $0x0,%rdx
  0x00000000032a8a84: lea    0x20(%rsp),%rdx
  0x00000000032a8a89: cmove  0x20(%rsp),%rdx    ; OopMap{[40]=Oop [32]=Oop off=79}
  0x00000000032a8a8f: movabs $0x32a8a8f,%r10    ;   {section_word}
  0x00000000032a8a99: mov    %r10,0x1e0(%r15)
  0x00000000032a8aa0: mov    %rsp,0x1d8(%r15)
  0x00000000032a8aa7: cmpb   $0x0,0x52c42cd3(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000032a8aae: je     0x00000000032a8af6
  0x00000000032a8ab4: push   %rdx
  0x00000000032a8ab5: push   %r8
  0x00000000032a8ab7: push   %r9
  0x00000000032a8ab9: movabs $0x1c1cf478,%rdx   ;   {metadata({method} {0x000000001c1cf480} &apos;getIntVolatile&apos; &apos;(Ljava/lang/Object;J)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000032a8ac3: mov    %r15,%rcx
  0x00000000032a8ac6: sub    $0x20,%rsp
  0x00000000032a8aca: test   $0xf,%esp
  0x00000000032a8ad0: je     0x00000000032a8ae8
  0x00000000032a8ad6: sub    $0x8,%rsp
  0x00000000032a8ada: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a8adf: add    $0x8,%rsp
  0x00000000032a8ae3: jmpq   0x00000000032a8aed
  0x00000000032a8ae8: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a8aed: add    $0x20,%rsp
  0x00000000032a8af1: pop    %r9
  0x00000000032a8af3: pop    %r8
  0x00000000032a8af5: pop    %rdx
  0x00000000032a8af6: lea    0x1f8(%r15),%rcx
  0x00000000032a8afd: movl   $0x4,0x270(%r15)
  0x00000000032a8b08: callq  0x00000000558c1570  ;   {runtime_call}
  0x00000000032a8b0d: vzeroupper 
  0x00000000032a8b10: movl   $0x5,0x270(%r15)
  0x00000000032a8b1b: mov    %r15d,%ecx
  0x00000000032a8b1e: shr    $0x4,%ecx
  0x00000000032a8b21: and    $0xffc,%ecx
  0x00000000032a8b27: movabs $0x2900000,%r10    ;   {external_word}
  0x00000000032a8b31: mov    %ecx,(%r10,%rcx,1)
  0x00000000032a8b35: cmpl   $0x0,0x52c43811(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x00000000032a8b3f: jne    0x00000000032a8b53
  0x00000000032a8b45: cmpl   $0x0,0x30(%r15)
  0x00000000032a8b4d: je     0x00000000032a8b74
  0x00000000032a8b53: mov    %rax,-0x8(%rbp)
  0x00000000032a8b57: mov    %r15,%rcx
  0x00000000032a8b5a: mov    %rsp,%r12
  0x00000000032a8b5d: sub    $0x20,%rsp
  0x00000000032a8b61: and    $0xfffffffffffffff0,%rsp
  0x00000000032a8b65: callq  0x00000000559236e0  ;   {runtime_call}
  0x00000000032a8b6a: mov    %r12,%rsp
  0x00000000032a8b6d: xor    %r12,%r12
  0x00000000032a8b70: mov    -0x8(%rbp),%rax
  0x00000000032a8b74: movl   $0x8,0x270(%r15)
  0x00000000032a8b7f: cmpl   $0x1,0x29c(%r15)
  0x00000000032a8b8a: je     0x00000000032a8c22
  0x00000000032a8b90: cmpb   $0x0,0x52c42bea(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000032a8b97: je     0x00000000032a8bdd
  0x00000000032a8b9d: mov    %rax,-0x8(%rbp)
  0x00000000032a8ba1: movabs $0x1c1cf478,%rdx   ;   {metadata({method} {0x000000001c1cf480} &apos;getIntVolatile&apos; &apos;(Ljava/lang/Object;J)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000032a8bab: mov    %r15,%rcx
  0x00000000032a8bae: sub    $0x20,%rsp
  0x00000000032a8bb2: test   $0xf,%esp
  0x00000000032a8bb8: je     0x00000000032a8bd0
  0x00000000032a8bbe: sub    $0x8,%rsp
  0x00000000032a8bc2: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a8bc7: add    $0x8,%rsp
  0x00000000032a8bcb: jmpq   0x00000000032a8bd5
  0x00000000032a8bd0: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032a8bd5: add    $0x20,%rsp
  0x00000000032a8bd9: mov    -0x8(%rbp),%rax
  0x00000000032a8bdd: movabs $0x0,%r10
  0x00000000032a8be7: mov    %r10,0x1d8(%r15)
  0x00000000032a8bee: movabs $0x0,%r10
  0x00000000032a8bf8: mov    %r10,0x1e0(%r15)
  0x00000000032a8bff: mov    0x38(%r15),%rcx
  0x00000000032a8c03: movl   $0x0,0x100(%rcx)
  0x00000000032a8c0d: leaveq 
  0x00000000032a8c0e: cmpq   $0x0,0x8(%r15)
  0x00000000032a8c16: jne    0x00000000032a8c1d
  0x00000000032a8c1c: retq   
  0x00000000032a8c1d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000032a8c22: mov    %rax,-0x8(%rbp)
  0x00000000032a8c26: mov    %rsp,%r12
  0x00000000032a8c29: sub    $0x20,%rsp
  0x00000000032a8c2d: and    $0xfffffffffffffff0,%rsp
  0x00000000032a8c31: callq  0x000000005590c5a0  ;   {runtime_call}
  0x00000000032a8c36: mov    %r12,%rsp
  0x00000000032a8c39: xor    %r12,%r12
  0x00000000032a8c3c: mov    -0x8(%rbp),%rax
  0x00000000032a8c40: jmpq   0x00000000032a8b90
  0x00000000032a8c45: hlt    
  0x00000000032a8c46: hlt    
  0x00000000032a8c47: hlt    
<nmethod compile_id='54' compile_kind='c2n' level='0' entry='0x00000000032a8a40' size='888' address='0x00000000032a88d0' relocation_offset='288' consts_offset='888' insts_offset='368' method='sun/misc/Unsafe getIntVolatile (Ljava/lang/Object;J)I' bytes='0' count='1280' iicount='1280' stamp='0.573'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032a8290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c352d38} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032a8420: mov    0x8(%rdx),%r10d
  0x00000000032a8424: shl    $0x3,%r10
  0x00000000032a8428: cmp    %rax,%r10
  0x00000000032a842b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a8431: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a843c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a8440: mov    %eax,-0x6000(%rsp)
  0x00000000032a8447: push   %rbp
  0x00000000032a8448: sub    $0x40,%rsp
  0x00000000032a844c: movabs $0x1c396320,%rax   ;   {metadata(method data for {method} {0x000000001c352d38} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00000000032a8456: mov    0xdc(%rax),%r8d
  0x00000000032a845d: add    $0x8,%r8d
  0x00000000032a8461: mov    %r8d,0xdc(%rax)
  0x00000000032a8468: movabs $0x1c352d30,%rax   ;   {metadata({method} {0x000000001c352d38} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00000000032a8472: and    $0x1ff8,%r8d
  0x00000000032a8479: cmp    $0x0,%r8d
  0x00000000032a847d: je     0x00000000032a85a6  ;*aload_0
                                                ; - java.util.zip.ZipFile::ensureOpen@0 (line 668)

  0x00000000032a8483: movsbl 0x19(%rdx),%eax    ;*getfield closeRequested
                                                ; - java.util.zip.ZipFile::ensureOpen@1 (line 668)

  0x00000000032a8487: cmp    $0x0,%eax
  0x00000000032a848a: movabs $0x1c396320,%rax   ;   {metadata(method data for {method} {0x000000001c352d38} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00000000032a8494: movabs $0x108,%r8
  0x00000000032a849e: je     0x00000000032a84ae
  0x00000000032a84a4: movabs $0x118,%r8
  0x00000000032a84ae: mov    (%rax,%r8,1),%rsi
  0x00000000032a84b2: lea    0x1(%rsi),%rsi
  0x00000000032a84b6: mov    %rsi,(%rax,%r8,1)
  0x00000000032a84ba: jne    0x00000000032a855e  ;*ifeq
                                                ; - java.util.zip.ZipFile::ensureOpen@4 (line 668)

  0x00000000032a84c0: mov    0x10(%rdx),%rax    ;*getfield jzfile
                                                ; - java.util.zip.ZipFile::ensureOpen@18 (line 672)

  0x00000000032a84c4: movabs $0x0,%rdx
  0x00000000032a84ce: cmp    %rdx,%rax
  0x00000000032a84d1: movabs $0x1c396320,%rdx   ;   {metadata(method data for {method} {0x000000001c352d38} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00000000032a84db: movabs $0x138,%rax
  0x00000000032a84e5: jne    0x00000000032a84f5
  0x00000000032a84eb: movabs $0x148,%rax
  0x00000000032a84f5: mov    (%rdx,%rax,1),%r8
  0x00000000032a84f9: lea    0x1(%r8),%r8
  0x00000000032a84fd: mov    %r8,(%rdx,%rax,1)
  0x00000000032a8501: je     0x00000000032a8513  ;*lcmp
                                                ; - java.util.zip.ZipFile::ensureOpen@22 (line 672)

  0x00000000032a8507: add    $0x40,%rsp
  0x00000000032a850b: pop    %rbp
  0x00000000032a850c: test   %eax,-0x9b8412(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032a8512: retq                      ;*return
                                                ; - java.util.zip.ZipFile::ensureOpen@36 (line 675)

  0x00000000032a8513: nopl   0x0(%rax,%rax,1)
  0x00000000032a8518: jmpq   0x00000000032a85cc  ;   {no_reloc}
  0x00000000032a851d: add    %al,(%rax)
  0x00000000032a851f: add    %al,(%rax)
  0x00000000032a8521: add    %ch,%cl
  0x00000000032a8523: scas   %es:(%rdi),%eax
  0x00000000032a8524: add    %al,(%rax)
  0x00000000032a8526: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.util.zip.ZipFile::ensureOpen@26 (line 673)

  0x00000000032a852a: movabs $0x1c396320,%rdx   ;   {metadata(method data for {method} {0x000000001c352d38} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00000000032a8534: addq   $0x1,0x158(%rdx)
  0x00000000032a853c: movabs $0x76bf1f050,%r8   ;   {oop(&quot;The object is not initialized.&quot;)}
  0x00000000032a8546: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.util.zip.ZipFile::ensureOpen@32 (line 673)

  0x00000000032a8549: mov    %rax,0x28(%rsp)
  0x00000000032a854e: nop
  0x00000000032a854f: callq  0x00000000031d61a0  ; OopMap{[40]=Oop off=308}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.zip.ZipFile::ensureOpen@32 (line 673)
                                                ;   {optimized virtual_call}
  0x00000000032a8554: mov    0x28(%rsp),%rax
  0x00000000032a8559: jmpq   0x00000000032a8634  ;*athrow
                                                ; - java.util.zip.ZipFile::ensureOpen@35 (line 673)

  0x00000000032a855e: xchg   %ax,%ax
  0x00000000032a8560: jmpq   0x00000000032a85f2  ;   {no_reloc}
  0x00000000032a8565: add    %al,(%rax)
  0x00000000032a8567: add    %al,(%rax)
  0x00000000032a8569: add    %ch,%cl
  0x00000000032a856b: lea    (%rax),%eax
  0x00000000032a856d: add    %al,(%rax)         ;*new  ; - java.util.zip.ZipFile::ensureOpen@7 (line 669)

  0x00000000032a856f: mov    %rax,%r8
  0x00000000032a8572: movabs $0x1c396320,%rdx   ;   {metadata(method data for {method} {0x000000001c352d38} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;java/util/zip/ZipFile&apos;)}
  0x00000000032a857c: addq   $0x1,0x128(%rdx)
  0x00000000032a8584: movabs $0x76bf1f008,%r8   ;   {oop(&quot;zip file closed&quot;)}
  0x00000000032a858e: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.util.zip.ZipFile::ensureOpen@13 (line 669)

  0x00000000032a8591: mov    %rax,0x30(%rsp)
  0x00000000032a8596: nop
  0x00000000032a8597: callq  0x00000000031d61a0  ; OopMap{[48]=Oop off=380}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.zip.ZipFile::ensureOpen@13 (line 669)
                                                ;   {optimized virtual_call}
  0x00000000032a859c: mov    0x30(%rsp),%rax
  0x00000000032a85a1: jmpq   0x00000000032a8634
  0x00000000032a85a6: mov    %rax,0x8(%rsp)
  0x00000000032a85ab: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032a85b3: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=408}
                                                ;*synchronization entry
                                                ; - java.util.zip.ZipFile::ensureOpen@-1 (line 668)
                                                ;   {runtime_call}
  0x00000000032a85b8: jmpq   0x00000000032a8483
  0x00000000032a85bd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032a85c7: mov    $0xa050f00,%eax
  0x00000000032a85cc: callq  0x0000000003290ca0  ; OopMap{off=433}
                                                ;*new  ; - java.util.zip.ZipFile::ensureOpen@26 (line 673)
                                                ;   {runtime_call}
  0x00000000032a85d1: jmpq   0x00000000032a8518
  0x00000000032a85d6: mov    %rdx,%rdx
  0x00000000032a85d9: callq  0x000000000328db20  ; OopMap{off=446}
                                                ;*new  ; - java.util.zip.ZipFile::ensureOpen@26 (line 673)
                                                ;   {runtime_call}
  0x00000000032a85de: jmpq   0x00000000032a8527
  0x00000000032a85e3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032a85ed: mov    $0xa050f00,%eax
  0x00000000032a85f2: callq  0x0000000003290ca0  ; OopMap{off=471}
                                                ;*new  ; - java.util.zip.ZipFile::ensureOpen@7 (line 669)
                                                ;   {runtime_call}
  0x00000000032a85f7: jmpq   0x00000000032a8560
  0x00000000032a85fc: mov    %rdx,%rdx
  0x00000000032a85ff: callq  0x000000000328db20  ; OopMap{off=484}
                                                ;*new  ; - java.util.zip.ZipFile::ensureOpen@7 (line 669)
                                                ;   {runtime_call}
  0x00000000032a8604: jmpq   0x00000000032a856f
  0x00000000032a8609: nop
  0x00000000032a860a: nop
  0x00000000032a860b: mov    0x2a8(%r15),%rax
  0x00000000032a8612: movabs $0x0,%r10
  0x00000000032a861c: mov    %r10,0x2a8(%r15)
  0x00000000032a8623: movabs $0x0,%r10
  0x00000000032a862d: mov    %r10,0x2b0(%r15)
  0x00000000032a8634: add    $0x40,%rsp
  0x00000000032a8638: pop    %rbp
  0x00000000032a8639: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032a863e: hlt    
  0x00000000032a863f: hlt    
[Stub Code]
  0x00000000032a8640: nop                       ;   {no_reloc}
  0x00000000032a8641: nop
  0x00000000032a8642: nop
  0x00000000032a8643: nop
  0x00000000032a8644: nop
  0x00000000032a8645: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a864f: jmpq   0x00000000032a864f  ;   {runtime_call}
  0x00000000032a8654: nop
  0x00000000032a8655: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a865f: jmpq   0x00000000032a865f  ;   {runtime_call}
[Exception Handler]
  0x00000000032a8664: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032a8669: mov    %rsp,-0x28(%rsp)
  0x00000000032a866e: sub    $0x80,%rsp
  0x00000000032a8675: mov    %rax,0x78(%rsp)
  0x00000000032a867a: mov    %rcx,0x70(%rsp)
  0x00000000032a867f: mov    %rdx,0x68(%rsp)
  0x00000000032a8684: mov    %rbx,0x60(%rsp)
  0x00000000032a8689: mov    %rbp,0x50(%rsp)
  0x00000000032a868e: mov    %rsi,0x48(%rsp)
  0x00000000032a8693: mov    %rdi,0x40(%rsp)
  0x00000000032a8698: mov    %r8,0x38(%rsp)
  0x00000000032a869d: mov    %r9,0x30(%rsp)
  0x00000000032a86a2: mov    %r10,0x28(%rsp)
  0x00000000032a86a7: mov    %r11,0x20(%rsp)
  0x00000000032a86ac: mov    %r12,0x18(%rsp)
  0x00000000032a86b1: mov    %r13,0x10(%rsp)
  0x00000000032a86b6: mov    %r14,0x8(%rsp)
  0x00000000032a86bb: mov    %r15,(%rsp)
  0x00000000032a86bf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032a86c9: movabs $0x32a8669,%rdx    ;   {internal_word}
  0x00000000032a86d3: mov    %rsp,%r8
  0x00000000032a86d6: and    $0xfffffffffffffff0,%rsp
  0x00000000032a86da: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032a86df: hlt    
[Deopt Handler Code]
  0x00000000032a86e0: movabs $0x32a86e0,%r10    ;   {section_word}
  0x00000000032a86ea: push   %r10
  0x00000000032a86ec: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a86f1: hlt    
  0x00000000032a86f2: hlt    
  0x00000000032a86f3: hlt    
  0x00000000032a86f4: hlt    
  0x00000000032a86f5: hlt    
  0x00000000032a86f6: hlt    
  0x00000000032a86f7: hlt    
<nmethod compile_id='43' compiler='C1' level='3' entry='0x00000000032a8420' size='1576' address='0x00000000032a8290' relocation_offset='288' insts_offset='400' stub_offset='944' scopes_data_offset='1136' scopes_pcs_offset='1248' dependencies_offset='1568' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='1664' iicount='1664' stamp='0.576'/>
<writer thread='15136'/>
<task_queued compile_id='55' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='2096' backedge_count='874' iicount='2096' level='3' stamp='0.576' comment='tiered' hot_count='2096'/>
<writer thread='6664'/>
<task_queued compile_id='56' method='java/util/Vector size ()I' bytes='5' count='1024' iicount='1024' level='1' stamp='0.577' comment='tiered' hot_count='1024'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032ac790:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1c3bf8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00000000032ac8e0: mov    0x8(%rdx),%r10d
  0x00000000032ac8e4: shl    $0x3,%r10
  0x00000000032ac8e8: cmp    %r10,%rax
  0x00000000032ac8eb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032ac8f1: data16 xchg %ax,%ax
  0x00000000032ac8f4: nopl   0x0(%rax,%rax,1)
  0x00000000032ac8fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032ac900: mov    %eax,-0x6000(%rsp)
  0x00000000032ac907: push   %rbp
  0x00000000032ac908: sub    $0x60,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000000032ac90c: mov    %rdx,0x48(%rsp)
  0x00000000032ac911: mov    0x10(%rdx),%r11d   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00000000032ac915: mov    0xc(%r12,%r11,8),%ebx  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x00000000032acb79
  0x00000000032ac91a: mov    %r8d,%r10d
  0x00000000032ac91d: sub    %ebx,%r10d
  0x00000000032ac920: test   %r10d,%r10d
  0x00000000032ac923: jg     0x00000000032ac931  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000000032ac925: add    $0x60,%rsp
  0x00000000032ac929: pop    %rbp
  0x00000000032ac92a: test   %eax,-0x9bc930(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032ac930: retq   
  0x00000000032ac931: mov    %ebx,%r9d
  0x00000000032ac934: shl    %r9d               ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000032ac937: mov    %r9d,%r10d
  0x00000000032ac93a: sub    %r8d,%r10d
  0x00000000032ac93d: add    $0x2,%r10d
  0x00000000032ac941: test   %r10d,%r10d
  0x00000000032ac944: jl     0x00000000032ac94c  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000032ac946: add    $0x2,%r9d          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000032ac94a: jmp    0x00000000032ac94f
  0x00000000032ac94c: mov    %r8d,%r9d          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000032ac94f: test   %r9d,%r9d
  0x00000000032ac952: jle    0x00000000032acb33  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000032ac958: mov    $0x7ffffff7,%ebp
  0x00000000032ac95d: sub    %r9d,%ebp          ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000032ac960: test   %ebp,%ebp
  0x00000000032ac962: jl     0x00000000032acb55  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000032ac968: cmp    $0x80000,%r9d
  0x00000000032ac96f: ja     0x00000000032acaf5
  0x00000000032ac975: movslq %r9d,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000032ac978: shl    %r10
  0x00000000032ac97b: lea    (%r12,%r11,8),%r8  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00000000032ac97f: add    $0x17,%r10
  0x00000000032ac983: mov    %r10,%rdi
  0x00000000032ac986: and    $0xfffffffffffffff8,%rdi
  0x00000000032ac98a: cmp    $0x80000,%r9d
  0x00000000032ac991: ja     0x00000000032aca9d
  0x00000000032ac997: mov    0x60(%r15),%rbp
  0x00000000032ac99b: mov    %rbp,%rcx
  0x00000000032ac99e: add    %rdi,%rcx
  0x00000000032ac9a1: cmp    0x70(%r15),%rcx
  0x00000000032ac9a5: jae    0x00000000032aca9d
  0x00000000032ac9ab: mov    %rcx,0x60(%r15)
  0x00000000032ac9af: prefetchw 0xc0(%rcx)
  0x00000000032ac9b6: movq   $0x1,0x0(%rbp)
  0x00000000032ac9be: prefetchw 0x100(%rcx)
  0x00000000032ac9c5: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x00000000032ac9cc: mov    %r9d,0xc(%rbp)
  0x00000000032ac9d0: prefetchw 0x140(%rcx)
  0x00000000032ac9d7: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000032ac9de: cmp    %r9d,%ebx
  0x00000000032ac9e1: mov    %r9d,%esi
  0x00000000032ac9e4: cmovl  %ebx,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000032ac9e7: mov    %rbp,%rdx
  0x00000000032ac9ea: add    $0x10,%rdx
  0x00000000032ac9ee: shr    $0x3,%r10
  0x00000000032ac9f2: mov    %r10,%rcx
  0x00000000032ac9f5: add    $0xfffffffffffffffe,%rcx
  0x00000000032ac9f9: cmp    %esi,%ebx
  0x00000000032ac9fb: jb     0x00000000032acafd
  0x00000000032aca01: cmp    %esi,%r9d
  0x00000000032aca04: jb     0x00000000032acafd
  0x00000000032aca0a: test   %esi,%esi
  0x00000000032aca0c: jle    0x00000000032acb21
  0x00000000032aca12: lea    0x10(%r12,%r11,8),%rbx
  0x00000000032aca17: cmp    %r9d,%esi
  0x00000000032aca1a: jl     0x00000000032aca5d
  0x00000000032aca1c: add    $0xfffffffffffffff0,%rdi
  0x00000000032aca20: shr    $0x3,%rdi
  0x00000000032aca24: mov    %rbx,%rcx
  0x00000000032aca27: mov    %rdi,%r8
  0x00000000032aca2a: movabs $0x31e2ca0,%r10
  0x00000000032aca34: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000032aca37: mov    %rbp,%r10
  0x00000000032aca3a: shr    $0x3,%r10
  0x00000000032aca3e: mov    0x48(%rsp),%r11
  0x00000000032aca43: mov    %r10d,0x10(%r11)
  0x00000000032aca47: mov    %r11,%r10
  0x00000000032aca4a: shr    $0x9,%r10
  0x00000000032aca4e: mov    $0xef3d000,%r11d
  0x00000000032aca54: mov    %r12b,(%r11,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x00000000032aca58: jmpq   0x00000000032ac925
  0x00000000032aca5d: movslq %esi,%r8
  0x00000000032aca60: mov    %r8,%r11
  0x00000000032aca63: shl    %r11
  0x00000000032aca66: add    $0x10,%r11
  0x00000000032aca6a: mov    %r11,%r9
  0x00000000032aca6d: and    $0xfffffffffffffff9,%r9
  0x00000000032aca71: mov    %rbp,%rdi
  0x00000000032aca74: add    %r9,%rdi
  0x00000000032aca77: shr    $0x3,%r11
  0x00000000032aca7b: sub    %r11,%r10
  0x00000000032aca7e: mov    %r10,%rcx
  0x00000000032aca81: xor    %rax,%rax
  0x00000000032aca84: shl    $0x3,%rcx
  0x00000000032aca88: rep rex.W stos %al,%es:(%rdi)
  0x00000000032aca8b: mov    %rbx,%rcx
  0x00000000032aca8e: movabs $0x31e2980,%r10
  0x00000000032aca98: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000032aca9b: jmp    0x00000000032aca37
  0x00000000032aca9d: mov    %ebx,0x40(%rsp)
  0x00000000032acaa1: mov    %r11d,0x24(%rsp)
  0x00000000032acaa6: mov    %rdi,0x38(%rsp)
  0x00000000032acaab: mov    %r8,0x30(%rsp)
  0x00000000032acab0: mov    %r10,0x28(%rsp)
  0x00000000032acab5: mov    %r9d,0x20(%rsp)
  0x00000000032acaba: mov    %rdx,%rbp
  0x00000000032acabd: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032acac7: mov    %r9d,%r8d
  0x00000000032acaca: nop
  0x00000000032acacb: callq  0x00000000032935e0  ; OopMap{rbp=Oop [36]=NarrowOop [48]=Oop [72]=Oop off=496}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000000032acad0: mov    0x20(%rsp),%r9d
  0x00000000032acad5: mov    0x28(%rsp),%r10
  0x00000000032acada: mov    0x30(%rsp),%r8
  0x00000000032acadf: mov    0x38(%rsp),%rdi
  0x00000000032acae4: mov    %rax,%rbp
  0x00000000032acae7: mov    0x24(%rsp),%r11d
  0x00000000032acaec: mov    0x40(%rsp),%ebx
  0x00000000032acaf0: jmpq   0x00000000032ac9de
  0x00000000032acaf5: movslq %r9d,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000032acaf8: jmpq   0x00000000032ac978
  0x00000000032acafd: mov    %rdx,%rdi
  0x00000000032acb00: xor    %rax,%rax
  0x00000000032acb03: shl    $0x3,%rcx
  0x00000000032acb07: rep rex.W stos %al,%es:(%rdi)
  0x00000000032acb0a: mov    %r8,%rdx
  0x00000000032acb0d: xor    %r8d,%r8d
  0x00000000032acb10: mov    %rbp,%r9
  0x00000000032acb13: xor    %edi,%edi
  0x00000000032acb15: xchg   %ax,%ax
  0x00000000032acb17: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [72]=Oop off=572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00000000032acb1c: jmpq   0x00000000032aca37
  0x00000000032acb21: mov    %rdx,%rdi
  0x00000000032acb24: xor    %rax,%rax
  0x00000000032acb27: shl    $0x3,%rcx
  0x00000000032acb2b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000032acb2e: jmpq   0x00000000032aca37
  0x00000000032acb33: mov    $0xffffff65,%edx
  0x00000000032acb38: mov    0x48(%rsp),%rbp
  0x00000000032acb3d: mov    %r11d,0x20(%rsp)
  0x00000000032acb42: mov    %r8d,0x24(%rsp)
  0x00000000032acb47: mov    %r9d,0x34(%rsp)
  0x00000000032acb4c: data16 xchg %ax,%ax
  0x00000000032acb4f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [32]=NarrowOop off=628}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {runtime_call}
  0x00000000032acb54: int3                      ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000032acb55: mov    $0xffffff65,%edx
  0x00000000032acb5a: rex.W pushq 0x48(%rsp)
  0x00000000032acb5f: rex.W popq 0x20(%rsp)
  0x00000000032acb64: mov    %r11d,0x28(%rsp)
  0x00000000032acb69: mov    %r8d,0x2c(%rsp)
  0x00000000032acb6e: mov    %r9d,0x38(%rsp)
  0x00000000032acb73: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [40]=NarrowOop off=664}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {runtime_call}
  0x00000000032acb78: int3                      ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00000000032acb79: mov    $0xfffffff6,%edx
  0x00000000032acb7e: nop
  0x00000000032acb7f: callq  0x00000000031d57a0  ; OopMap{off=676}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x00000000032acb84: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000032acb85: mov    %rax,%rdx
  0x00000000032acb88: jmp    0x00000000032acb8d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00000000032acb8a: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)

  0x00000000032acb8d: add    $0x60,%rsp
  0x00000000032acb91: pop    %rbp
  0x00000000032acb92: jmpq   0x0000000003292260  ;   {runtime_call}
  0x00000000032acb97: hlt    
  0x00000000032acb98: hlt    
  0x00000000032acb99: hlt    
  0x00000000032acb9a: hlt    
  0x00000000032acb9b: hlt    
  0x00000000032acb9c: hlt    
  0x00000000032acb9d: hlt    
  0x00000000032acb9e: hlt    
  0x00000000032acb9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032acba0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032acba5: callq  0x00000000032acbaa
  0x00000000032acbaa: subq   $0x5,(%rsp)
  0x00000000032acbaf: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032acbb4: hlt    
  0x00000000032acbb5: hlt    
  0x00000000032acbb6: hlt    
  0x00000000032acbb7: hlt    
<nmethod compile_id='40' compiler='C2' level='4' entry='0x00000000032ac8e0' size='1912' address='0x00000000032ac790' relocation_offset='288' insts_offset='336' stub_offset='1040' scopes_data_offset='1096' scopes_pcs_offset='1328' dependencies_offset='1840' handler_table_offset='1848' nul_chk_table_offset='1896' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='76404' iicount='76404' stamp='0.582'/>
Decoding compiled method 0x00000000032abe10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1c4d30} &apos;append&apos; &apos;(C)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rdx:rdx   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    r8        = char
  #           [sp+0x80]  (sp of caller)
  0x00000000032abf60: mov    0x8(%rdx),%r10d
  0x00000000032abf64: shl    $0x3,%r10
  0x00000000032abf68: cmp    %r10,%rax
  0x00000000032abf6b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032abf71: data16 xchg %ax,%ax
  0x00000000032abf74: nopl   0x0(%rax,%rax,1)
  0x00000000032abf7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032abf80: mov    %eax,-0x6000(%rsp)
  0x00000000032abf87: push   %rbp
  0x00000000032abf88: sub    $0x70,%rsp         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x00000000032abf8c: mov    %r8d,0x28(%rsp)
  0x00000000032abf91: mov    %rdx,0x48(%rsp)
  0x00000000032abf96: mov    0x10(%rdx),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032abf9a: mov    0xc(%r12,%r9,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; implicit exception: dispatches to 0x00000000032ac285
  0x00000000032abf9f: mov    0xc(%rdx),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)

  0x00000000032abfa3: mov    %r11d,%ecx
  0x00000000032abfa6: sub    %r8d,%ecx
  0x00000000032abfa9: mov    %r11d,%ebx
  0x00000000032abfac: inc    %ebx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)

  0x00000000032abfae: inc    %ecx
  0x00000000032abfb0: test   %ecx,%ecx
  0x00000000032abfb2: jg     0x00000000032abff6  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032abfb4: mov    %r9,%rbp
  0x00000000032abfb7: shl    $0x3,%rbp          ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x00000000032abfbb: mov    0x48(%rsp),%r10
  0x00000000032abfc0: mov    %ebx,0xc(%r10)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)

  0x00000000032abfc4: test   %rbp,%rbp
  0x00000000032abfc7: je     0x00000000032ac1ca
  0x00000000032abfcd: mov    0xc(%rbp),%r10d
  0x00000000032abfd1: cmp    %r10d,%r11d
  0x00000000032abfd4: jae    0x00000000032ac1e1
  0x00000000032abfda: mov    0x28(%rsp),%r8d
  0x00000000032abfdf: mov    %r8w,0x10(%rbp,%r11,2)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)

  0x00000000032abfe5: mov    0x48(%rsp),%rax
  0x00000000032abfea: add    $0x70,%rsp
  0x00000000032abfee: pop    %rbp
  0x00000000032abfef: test   %eax,-0x9bbff5(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032abff5: retq   
  0x00000000032abff6: mov    %r8d,%r10d
  0x00000000032abff9: shl    %r10d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032abffc: mov    %r10d,%ecx
  0x00000000032abfff: sub    %r11d,%ecx
  0x00000000032ac002: inc    %ecx
  0x00000000032ac004: test   %ecx,%ecx
  0x00000000032ac006: jl     0x00000000032ac00e  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac008: add    $0x2,%r10d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac00c: jmp    0x00000000032ac011
  0x00000000032ac00e: mov    %ebx,%r10d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac011: test   %r10d,%r10d
  0x00000000032ac014: jle    0x00000000032ac237  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac01a: mov    $0x7ffffff7,%ebp
  0x00000000032ac01f: sub    %r10d,%ebp         ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac022: test   %ebp,%ebp
  0x00000000032ac024: jl     0x00000000032ac261  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac02a: cmp    $0x80000,%r10d
  0x00000000032ac031: ja     0x00000000032ac1f1
  0x00000000032ac037: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac03a: shl    %r11
  0x00000000032ac03d: lea    (%r12,%r9,8),%rbx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac041: add    $0x17,%r11
  0x00000000032ac045: mov    %r11,%rdi
  0x00000000032ac048: and    $0xfffffffffffffff8,%rdi
  0x00000000032ac04c: cmp    $0x80000,%r10d
  0x00000000032ac053: ja     0x00000000032ac16f
  0x00000000032ac059: mov    0x60(%r15),%rbp
  0x00000000032ac05d: mov    %rbp,%rcx
  0x00000000032ac060: add    %rdi,%rcx
  0x00000000032ac063: cmp    0x70(%r15),%rcx
  0x00000000032ac067: jae    0x00000000032ac16f
  0x00000000032ac06d: mov    %rcx,0x60(%r15)
  0x00000000032ac071: prefetchw 0xc0(%rcx)
  0x00000000032ac078: movq   $0x1,0x0(%rbp)
  0x00000000032ac080: prefetchw 0x100(%rcx)
  0x00000000032ac087: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x00000000032ac08e: mov    %r10d,0xc(%rbp)
  0x00000000032ac092: prefetchw 0x140(%rcx)
  0x00000000032ac099: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac0a0: cmp    %r10d,%r8d
  0x00000000032ac0a3: mov    %r10d,%esi
  0x00000000032ac0a6: cmovl  %r8d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac0aa: mov    %rbp,%rdx
  0x00000000032ac0ad: add    $0x10,%rdx
  0x00000000032ac0b1: shr    $0x3,%r11
  0x00000000032ac0b5: mov    %r11,%rcx
  0x00000000032ac0b8: add    $0xfffffffffffffffe,%rcx
  0x00000000032ac0bc: cmp    %esi,%r8d
  0x00000000032ac0bf: jb     0x00000000032ac1f9
  0x00000000032ac0c5: cmp    %esi,%r10d
  0x00000000032ac0c8: jb     0x00000000032ac1f9
  0x00000000032ac0ce: test   %esi,%esi
  0x00000000032ac0d0: jle    0x00000000032ac225
  0x00000000032ac0d6: lea    0x10(%r12,%r9,8),%r9
  0x00000000032ac0db: cmp    %r10d,%esi
  0x00000000032ac0de: jl     0x00000000032ac12f
  0x00000000032ac0e0: add    $0xfffffffffffffff0,%rdi
  0x00000000032ac0e4: shr    $0x3,%rdi
  0x00000000032ac0e8: mov    %r9,%rcx
  0x00000000032ac0eb: mov    %rdi,%r8
  0x00000000032ac0ee: movabs $0x31e2ca0,%r10
  0x00000000032ac0f8: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac0fb: mov    0x48(%rsp),%r10
  0x00000000032ac100: mov    0xc(%r10),%r11d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)

  0x00000000032ac104: mov    %rbp,%r10
  0x00000000032ac107: shr    $0x3,%r10
  0x00000000032ac10b: mov    0x48(%rsp),%r8
  0x00000000032ac110: mov    %r10d,0x10(%r8)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac114: mov    %r11d,%ebx
  0x00000000032ac117: inc    %ebx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)

  0x00000000032ac119: mov    %r8,%r10
  0x00000000032ac11c: shr    $0x9,%r10
  0x00000000032ac120: mov    $0xef3d000,%r8d
  0x00000000032ac126: mov    %r12b,(%r8,%r10,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac12a: jmpq   0x00000000032abfbb
  0x00000000032ac12f: movslq %esi,%r8
  0x00000000032ac132: mov    %r8,%r10
  0x00000000032ac135: shl    %r10
  0x00000000032ac138: add    $0x10,%r10
  0x00000000032ac13c: mov    %r10,%rcx
  0x00000000032ac13f: and    $0xfffffffffffffff9,%rcx
  0x00000000032ac143: mov    %rbp,%rdi
  0x00000000032ac146: add    %rcx,%rdi
  0x00000000032ac149: shr    $0x3,%r10
  0x00000000032ac14d: sub    %r10,%r11
  0x00000000032ac150: mov    %r11,%rcx
  0x00000000032ac153: xor    %rax,%rax
  0x00000000032ac156: shl    $0x3,%rcx
  0x00000000032ac15a: rep rex.W stos %al,%es:(%rdi)
  0x00000000032ac15d: mov    %r9,%rcx
  0x00000000032ac160: movabs $0x31e2980,%r10
  0x00000000032ac16a: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac16d: jmp    0x00000000032ac0fb
  0x00000000032ac16f: mov    %r8d,0x50(%rsp)
  0x00000000032ac174: mov    %r9d,0x2c(%rsp)
  0x00000000032ac179: mov    %rdi,0x40(%rsp)
  0x00000000032ac17e: mov    %rbx,0x38(%rsp)
  0x00000000032ac183: mov    %r11,0x30(%rsp)
  0x00000000032ac188: mov    %r10d,0x20(%rsp)
  0x00000000032ac18d: mov    %rdx,%rbp
  0x00000000032ac190: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032ac19a: mov    %r10d,%r8d
  0x00000000032ac19d: xchg   %ax,%ax
  0x00000000032ac19f: callq  0x00000000032935e0  ; OopMap{rbp=Oop [44]=NarrowOop [56]=Oop [72]=Oop off=580}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x00000000032ac1a4: mov    %rax,%rbp
  0x00000000032ac1a7: mov    0x20(%rsp),%r10d
  0x00000000032ac1ac: mov    0x30(%rsp),%r11
  0x00000000032ac1b1: mov    0x38(%rsp),%rbx
  0x00000000032ac1b6: mov    0x40(%rsp),%rdi
  0x00000000032ac1bb: mov    0x2c(%rsp),%r9d
  0x00000000032ac1c0: mov    0x50(%rsp),%r8d
  0x00000000032ac1c5: jmpq   0x00000000032ac0a0
  0x00000000032ac1ca: mov    $0xfffffff6,%edx
  0x00000000032ac1cf: mov    0x28(%rsp),%ebp
  0x00000000032ac1d3: mov    %r11d,0x20(%rsp)
  0x00000000032ac1d8: data16 xchg %ax,%ax
  0x00000000032ac1db: callq  0x00000000031d57a0  ; OopMap{off=640}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x00000000032ac1e0: int3   
  0x00000000032ac1e1: mov    $0xffffffe4,%edx
  0x00000000032ac1e6: mov    %r11d,0x2c(%rsp)
  0x00000000032ac1eb: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [72]=Oop off=656}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ;   {runtime_call}
  0x00000000032ac1f0: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)

  0x00000000032ac1f1: movslq %r10d,%r11         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac1f4: jmpq   0x00000000032ac03a
  0x00000000032ac1f9: mov    %rdx,%rdi
  0x00000000032ac1fc: xor    %rax,%rax
  0x00000000032ac1ff: shl    $0x3,%rcx
  0x00000000032ac203: rep rex.W stos %al,%es:(%rdi)
  0x00000000032ac206: mov    %rbx,%rdx
  0x00000000032ac209: xor    %r8d,%r8d
  0x00000000032ac20c: mov    %rbp,%r9
  0x00000000032ac20f: xor    %edi,%edi
  0x00000000032ac211: rex.W pushq 0x48(%rsp)
  0x00000000032ac216: rex.W popq 0x20(%rsp)
  0x00000000032ac21b: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [32]=Oop [72]=Oop off=704}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x00000000032ac220: jmpq   0x00000000032ac0fb
  0x00000000032ac225: mov    %rdx,%rdi
  0x00000000032ac228: xor    %rax,%rax
  0x00000000032ac22b: shl    $0x3,%rcx
  0x00000000032ac22f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac232: jmpq   0x00000000032ac0fb
  0x00000000032ac237: mov    $0xffffff65,%edx
  0x00000000032ac23c: mov    0x48(%rsp),%rbp
  0x00000000032ac241: mov    0x28(%rsp),%r8d
  0x00000000032ac246: mov    %r8d,0x20(%rsp)
  0x00000000032ac24b: mov    %r9d,0x24(%rsp)
  0x00000000032ac250: mov    %ebx,0x38(%rsp)
  0x00000000032ac254: mov    %r10d,0x40(%rsp)
  0x00000000032ac259: xchg   %ax,%ax
  0x00000000032ac25b: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [36]=NarrowOop off=768}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x00000000032ac260: int3                      ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac261: mov    $0xffffff65,%edx
  0x00000000032ac266: rex.W pushq 0x48(%rsp)
  0x00000000032ac26b: rex.W popq 0x20(%rsp)
  0x00000000032ac270: mov    %r9d,0x2c(%rsp)
  0x00000000032ac275: mov    %ebx,0x40(%rsp)
  0x00000000032ac279: mov    %r10d,0x44(%rsp)
  0x00000000032ac27e: nop
  0x00000000032ac27f: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [44]=NarrowOop off=804}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x00000000032ac284: int3                      ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac285: mov    $0xfffffff6,%edx
  0x00000000032ac28a: nop
  0x00000000032ac28b: callq  0x00000000031d57a0  ; OopMap{off=816}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ;   {runtime_call}
  0x00000000032ac290: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac291: mov    %rax,%rdx
  0x00000000032ac294: jmp    0x00000000032ac299  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac296: mov    %rax,%rdx          ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)

  0x00000000032ac299: add    $0x70,%rsp
  0x00000000032ac29d: pop    %rbp
  0x00000000032ac29e: jmpq   0x0000000003292260  ;   {runtime_call}
  0x00000000032ac2a3: hlt    
  0x00000000032ac2a4: hlt    
  0x00000000032ac2a5: hlt    
  0x00000000032ac2a6: hlt    
  0x00000000032ac2a7: hlt    
  0x00000000032ac2a8: hlt    
  0x00000000032ac2a9: hlt    
  0x00000000032ac2aa: hlt    
  0x00000000032ac2ab: hlt    
  0x00000000032ac2ac: hlt    
  0x00000000032ac2ad: hlt    
  0x00000000032ac2ae: hlt    
  0x00000000032ac2af: hlt    
  0x00000000032ac2b0: hlt    
  0x00000000032ac2b1: hlt    
  0x00000000032ac2b2: hlt    
  0x00000000032ac2b3: hlt    
  0x00000000032ac2b4: hlt    
  0x00000000032ac2b5: hlt    
  0x00000000032ac2b6: hlt    
  0x00000000032ac2b7: hlt    
  0x00000000032ac2b8: hlt    
  0x00000000032ac2b9: hlt    
  0x00000000032ac2ba: hlt    
  0x00000000032ac2bb: hlt    
  0x00000000032ac2bc: hlt    
  0x00000000032ac2bd: hlt    
  0x00000000032ac2be: hlt    
  0x00000000032ac2bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032ac2c0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032ac2c5: callq  0x00000000032ac2ca
  0x00000000032ac2ca: subq   $0x5,(%rsp)
  0x00000000032ac2cf: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032ac2d4: hlt    
  0x00000000032ac2d5: hlt    
  0x00000000032ac2d6: hlt    
  0x00000000032ac2d7: hlt    
<nmethod compile_id='38' compiler='C2' level='4' entry='0x00000000032abf60' size='2408' address='0x00000000032abe10' relocation_offset='288' insts_offset='336' stub_offset='1200' scopes_data_offset='1264' scopes_pcs_offset='1648' dependencies_offset='2336' handler_table_offset='2344' nul_chk_table_offset='2392' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='72466' iicount='72466' stamp='0.595'/>
Decoding compiled method 0x00000000032adc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1bff50} &apos;append&apos; &apos;(C)Ljava/lang/StringBuffer;&apos; in &apos;java/lang/StringBuffer&apos;
  # this:     rdx:rdx   = &apos;java/lang/StringBuffer&apos;
  # parm0:    r8        = char
  #           [sp+0x90]  (sp of caller)
  0x00000000032add60: mov    0x8(%rdx),%r10d
  0x00000000032add64: shl    $0x3,%r10
  0x00000000032add68: cmp    %r10,%rax
  0x00000000032add6b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032add71: data16 xchg %ax,%ax
  0x00000000032add74: nopl   0x0(%rax,%rax,1)
  0x00000000032add7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032add80: mov    %eax,-0x6000(%rsp)
  0x00000000032add87: push   %rbp
  0x00000000032add88: sub    $0x80,%rsp
  0x00000000032add8f: mov    %r8d,0x38(%rsp)
  0x00000000032add94: mov    %rdx,0x48(%rsp)
  0x00000000032add99: mov    (%rdx),%rax
  0x00000000032add9c: mov    %rax,%r10
  0x00000000032add9f: and    $0x7,%r10
  0x00000000032adda3: cmp    $0x5,%r10
  0x00000000032adda7: jne    0x00000000032ae072
  0x00000000032addad: mov    $0xf8001ac1,%r11d  ;   {metadata(&apos;java/lang/StringBuffer&apos;)}
  0x00000000032addb3: movabs $0x0,%r10
  0x00000000032addbd: lea    (%r10,%r11,8),%r10
  0x00000000032addc1: mov    0xa8(%r10),%r10
  0x00000000032addc8: mov    %r10,%r11
  0x00000000032addcb: or     %r15,%r11
  0x00000000032addce: mov    %r11,%r8
  0x00000000032addd1: xor    %rax,%r8
  0x00000000032addd4: test   $0xffffffffffffff87,%r8
  0x00000000032adddb: jne    0x00000000032ae0d9  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x00000000032adde1: mov    0x48(%rsp),%r10
  0x00000000032adde6: mov    0x10(%r10),%r9d    ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032addea: mov    %r12d,0x14(%r10)   ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)

  0x00000000032addee: mov    0xc(%r12,%r9,8),%r8d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; implicit exception: dispatches to 0x00000000032ae241
  0x00000000032addf3: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032addf7: mov    %r10d,%r11d
  0x00000000032addfa: sub    %r8d,%r11d
  0x00000000032addfd: mov    %r10d,%ebx
  0x00000000032ade00: inc    %ebx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade02: inc    %r11d
  0x00000000032ade05: test   %r11d,%r11d
  0x00000000032ade08: jg     0x00000000032ade67  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade0a: mov    %r9,%rbp
  0x00000000032ade0d: shl    $0x3,%rbp          ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade11: mov    0x48(%rsp),%r11
  0x00000000032ade16: mov    %ebx,0xc(%r11)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade1a: test   %rbp,%rbp
  0x00000000032ade1d: je     0x00000000032ae03e
  0x00000000032ade23: mov    0xc(%rbp),%r8d
  0x00000000032ade27: cmp    %r8d,%r10d
  0x00000000032ade2a: jae    0x00000000032ae051
  0x00000000032ade30: mov    0x38(%rsp),%r11d
  0x00000000032ade35: mov    %r11w,0x10(%rbp,%r10,2)
  0x00000000032ade3b: mov    $0x7,%r10d
  0x00000000032ade41: mov    0x48(%rsp),%r11
  0x00000000032ade46: and    (%r11),%r10
  0x00000000032ade49: cmp    $0x5,%r10
  0x00000000032ade4d: jne    0x00000000032ae104  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x00000000032ade53: mov    0x48(%rsp),%rax
  0x00000000032ade58: add    $0x80,%rsp
  0x00000000032ade5f: pop    %rbp
  0x00000000032ade60: test   %eax,-0x9bde66(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032ade66: retq   
  0x00000000032ade67: mov    %r8d,%r11d
  0x00000000032ade6a: shl    %r11d              ;*ishl
                                                ; - java.lang.AbstractStringBuilder::newCapacity@6 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade6d: mov    %r11d,%edi
  0x00000000032ade70: sub    %r10d,%edi
  0x00000000032ade73: inc    %edi
  0x00000000032ade75: test   %edi,%edi
  0x00000000032ade77: jl     0x00000000032ade7f  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade79: add    $0x2,%r11d         ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade7d: jmp    0x00000000032ade82
  0x00000000032ade7f: mov    %ebx,%r11d         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade82: test   %r11d,%r11d
  0x00000000032ade85: jle    0x00000000032ae1f3  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade8b: mov    $0x7ffffff7,%ebp
  0x00000000032ade90: sub    %r11d,%ebp         ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade93: test   %ebp,%ebp
  0x00000000032ade95: jl     0x00000000032ae21d  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ade9b: cmp    $0x80000,%r11d
  0x00000000032adea2: ja     0x00000000032ae1aa
  0x00000000032adea8: movslq %r11d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adeab: shl    %r10
  0x00000000032adeae: lea    (%r12,%r9,8),%rbx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adeb2: add    $0x17,%r10
  0x00000000032adeb6: mov    %r10,%rdi
  0x00000000032adeb9: and    $0xfffffffffffffff8,%rdi
  0x00000000032adebd: cmp    $0x80000,%r11d
  0x00000000032adec4: ja     0x00000000032adfe2
  0x00000000032adeca: mov    0x60(%r15),%rbp
  0x00000000032adece: mov    %rbp,%rcx
  0x00000000032aded1: add    %rdi,%rcx
  0x00000000032aded4: cmp    0x70(%r15),%rcx
  0x00000000032aded8: jae    0x00000000032adfe2
  0x00000000032adede: mov    %rcx,0x60(%r15)
  0x00000000032adee2: prefetchw 0xc0(%rcx)
  0x00000000032adee9: movq   $0x1,0x0(%rbp)
  0x00000000032adef1: prefetchw 0x100(%rcx)
  0x00000000032adef8: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x00000000032adeff: mov    %r11d,0xc(%rbp)
  0x00000000032adf03: prefetchw 0x140(%rcx)
  0x00000000032adf0a: prefetchw 0x180(%rcx)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adf11: cmp    %r11d,%r8d
  0x00000000032adf14: mov    %r11d,%esi
  0x00000000032adf17: cmovl  %r8d,%esi          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adf1b: mov    %rbp,%rdx
  0x00000000032adf1e: add    $0x10,%rdx
  0x00000000032adf22: shr    $0x3,%r10
  0x00000000032adf26: mov    %r10,%rcx
  0x00000000032adf29: add    $0xfffffffffffffffe,%rcx
  0x00000000032adf2d: cmp    %esi,%r8d
  0x00000000032adf30: jb     0x00000000032ae1b2
  0x00000000032adf36: cmp    %esi,%r11d
  0x00000000032adf39: jb     0x00000000032ae1b2
  0x00000000032adf3f: test   %esi,%esi
  0x00000000032adf41: jle    0x00000000032ae1e1
  0x00000000032adf47: lea    0x10(%r12,%r9,8),%r9
  0x00000000032adf4c: cmp    %r11d,%esi
  0x00000000032adf4f: jl     0x00000000032adfa2
  0x00000000032adf51: add    $0xfffffffffffffff0,%rdi
  0x00000000032adf55: shr    $0x3,%rdi
  0x00000000032adf59: mov    %r9,%rcx
  0x00000000032adf5c: mov    %rdi,%r8
  0x00000000032adf5f: movabs $0x31e2ca0,%r10
  0x00000000032adf69: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adf6c: mov    0x48(%rsp),%r10
  0x00000000032adf71: mov    0xc(%r10),%r10d    ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adf75: mov    %rbp,%r8
  0x00000000032adf78: shr    $0x3,%r8
  0x00000000032adf7c: mov    0x48(%rsp),%r11
  0x00000000032adf81: mov    %r8d,0x10(%r11)    ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adf85: mov    %r10d,%ebx
  0x00000000032adf88: inc    %ebx               ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adf8a: mov    0x48(%rsp),%r11
  0x00000000032adf8f: shr    $0x9,%r11
  0x00000000032adf93: mov    $0xef3d000,%r8d
  0x00000000032adf99: mov    %r12b,(%r8,%r11,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adf9d: jmpq   0x00000000032ade11
  0x00000000032adfa2: movslq %esi,%r8
  0x00000000032adfa5: mov    %r8,%r11
  0x00000000032adfa8: shl    %r11
  0x00000000032adfab: add    $0x10,%r11
  0x00000000032adfaf: mov    %r11,%rcx
  0x00000000032adfb2: and    $0xfffffffffffffff9,%rcx
  0x00000000032adfb6: mov    %rbp,%rdi
  0x00000000032adfb9: add    %rcx,%rdi
  0x00000000032adfbc: shr    $0x3,%r11
  0x00000000032adfc0: sub    %r11,%r10
  0x00000000032adfc3: mov    %r10,%rcx
  0x00000000032adfc6: xor    %rax,%rax
  0x00000000032adfc9: shl    $0x3,%rcx
  0x00000000032adfcd: rep rex.W stos %al,%es:(%rdi)
  0x00000000032adfd0: mov    %r9,%rcx
  0x00000000032adfd3: movabs $0x31e2980,%r10
  0x00000000032adfdd: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032adfe0: jmp    0x00000000032adf6c
  0x00000000032adfe2: mov    %r8d,0x60(%rsp)
  0x00000000032adfe7: mov    %r9d,0x3c(%rsp)
  0x00000000032adfec: mov    %rdi,0x40(%rsp)
  0x00000000032adff1: mov    %rbx,0x30(%rsp)
  0x00000000032adff6: mov    %r10,0x28(%rsp)
  0x00000000032adffb: mov    %r11d,0x20(%rsp)
  0x00000000032ae000: mov    0x48(%rsp),%rbp    ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ae005: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032ae00f: mov    %r11d,%r8d
  0x00000000032ae012: nop
  0x00000000032ae013: callq  0x00000000032935e0  ; OopMap{rbp=Oop [48]=Oop [60]=NarrowOop [72]=Oop off=696}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000032ae018: mov    %rax,%rbp
  0x00000000032ae01b: mov    0x20(%rsp),%r11d
  0x00000000032ae020: mov    0x28(%rsp),%r10
  0x00000000032ae025: mov    0x30(%rsp),%rbx
  0x00000000032ae02a: mov    0x40(%rsp),%rdi
  0x00000000032ae02f: mov    0x3c(%rsp),%r9d
  0x00000000032ae034: mov    0x60(%rsp),%r8d
  0x00000000032ae039: jmpq   0x00000000032adf11
  0x00000000032ae03e: mov    $0xfffffff6,%edx
  0x00000000032ae043: mov    %r11,%rbp
  0x00000000032ae046: mov    %r10d,0x24(%rsp)
  0x00000000032ae04b: callq  0x00000000031d57a0  ; OopMap{rbp=Oop off=752}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000032ae050: int3   
  0x00000000032ae051: mov    $0xffffffe4,%edx
  0x00000000032ae056: mov    %r11,0x28(%rsp)
  0x00000000032ae05b: mov    %r11,0x30(%rsp)
  0x00000000032ae060: mov    %r10d,0x3c(%rsp)
  0x00000000032ae065: xchg   %ax,%ax
  0x00000000032ae067: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [40]=Oop [48]=Oop off=780}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000032ae06c: int3                      ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ae06d: lock cmpxchg %r10,(%rdx)
  0x00000000032ae072: lea    0x70(%rsp),%rbx
  0x00000000032ae077: mov    (%rdx),%rax
  0x00000000032ae07a: test   $0x2,%rax
  0x00000000032ae080: jne    0x00000000032ae0a6
  0x00000000032ae082: or     $0x1,%rax
  0x00000000032ae086: mov    %rax,(%rbx)
  0x00000000032ae089: lock cmpxchg %rbx,(%rdx)
  0x00000000032ae08e: je     0x00000000032ae0bf
  0x00000000032ae094: sub    %rsp,%rax
  0x00000000032ae097: and    $0xfffffffffffff007,%rax
  0x00000000032ae09e: mov    %rax,(%rbx)
  0x00000000032ae0a1: jmpq   0x00000000032ae0bf
  0x00000000032ae0a6: movq   $0x3,(%rbx)
  0x00000000032ae0ad: mov    %rax,%rbx
  0x00000000032ae0b0: mov    0x16(%rbx),%rax
  0x00000000032ae0b4: test   %rax,%rax
  0x00000000032ae0b7: jne    0x00000000032ae0bf
  0x00000000032ae0b9: lock cmpxchg %r15,0x16(%rbx)
  0x00000000032ae0bf: je     0x00000000032adde1
  0x00000000032ae0c5: lea    0x70(%rsp),%r8
  0x00000000032ae0ca: mov    %rdx,0x28(%rsp)
  0x00000000032ae0cf: callq  0x0000000003293ae0  ; OopMap{[40]=Oop [72]=Oop off=884}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ;   {runtime_call}
  0x00000000032ae0d4: jmpq   0x00000000032adde1
  0x00000000032ae0d9: test   $0x7,%r8
  0x00000000032ae0e0: jne    0x00000000032ae06d
  0x00000000032ae0e2: test   $0x300,%r8
  0x00000000032ae0e9: jne    0x00000000032ae0f8
  0x00000000032ae0eb: and    $0x37f,%rax
  0x00000000032ae0f2: mov    %rax,%r11
  0x00000000032ae0f5: or     %r15,%r11
  0x00000000032ae0f8: lock cmpxchg %r11,(%rdx)
  0x00000000032ae0fd: jne    0x00000000032ae0c5
  0x00000000032ae0ff: jmpq   0x00000000032adde1
  0x00000000032ae104: lea    0x70(%rsp),%rax
  0x00000000032ae109: cmpq   $0x0,(%rax)
  0x00000000032ae110: je     0x00000000032ae18a
  0x00000000032ae116: mov    (%r11),%r10
  0x00000000032ae119: test   $0x2,%r10
  0x00000000032ae120: je     0x00000000032ae182
  0x00000000032ae122: mov    0x16(%r10),%rax
  0x00000000032ae126: xor    %r15,%rax
  0x00000000032ae129: or     0x26(%r10),%rax
  0x00000000032ae12d: jne    0x00000000032ae18a
  0x00000000032ae12f: mov    0x36(%r10),%rax
  0x00000000032ae133: or     0x3e(%r10),%rax
  0x00000000032ae137: jne    0x00000000032ae143
  0x00000000032ae139: movq   $0x0,0x16(%r10)
  0x00000000032ae141: jmp    0x00000000032ae18a
  0x00000000032ae143: cmpq   $0x0,0x46(%r10)
  0x00000000032ae14b: je     0x00000000032ae176
  0x00000000032ae14d: movq   $0x0,0x16(%r10)
  0x00000000032ae155: lock addl $0x0,(%rsp)
  0x00000000032ae15a: cmpq   $0x0,0x46(%r10)
  0x00000000032ae162: jne    0x00000000032ae17b
  0x00000000032ae164: movabs $0x0,%rax
  0x00000000032ae16e: lock cmpxchg %r15,0x16(%r10)
  0x00000000032ae174: jne    0x00000000032ae17b
  0x00000000032ae176: or     $0x1,%eax
  0x00000000032ae179: jmp    0x00000000032ae18a
  0x00000000032ae17b: test   $0x0,%eax
  0x00000000032ae180: jmp    0x00000000032ae18a
  0x00000000032ae182: mov    (%rax),%r10
  0x00000000032ae185: lock cmpxchg %r10,(%r11)
  0x00000000032ae18a: je     0x00000000032ade53
  0x00000000032ae190: mov    %r11,%rcx
  0x00000000032ae193: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x00000000032ae198: movabs $0x5590c5c0,%r10
  0x00000000032ae1a2: callq  *%r10              ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)

  0x00000000032ae1a5: jmpq   0x00000000032ade53
  0x00000000032ae1aa: movslq %r11d,%r10         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ae1ad: jmpq   0x00000000032adeab
  0x00000000032ae1b2: mov    %rdx,%rdi
  0x00000000032ae1b5: xor    %rax,%rax
  0x00000000032ae1b8: shl    $0x3,%rcx
  0x00000000032ae1bc: rep rex.W stos %al,%es:(%rdi)
  0x00000000032ae1bf: mov    %rbx,%rdx
  0x00000000032ae1c2: xor    %r8d,%r8d
  0x00000000032ae1c5: mov    %rbp,%r9
  0x00000000032ae1c8: xor    %edi,%edi
  0x00000000032ae1ca: rex.W pushq 0x48(%rsp)
  0x00000000032ae1cf: rex.W popq 0x20(%rsp)
  0x00000000032ae1d4: data16 xchg %ax,%ax
  0x00000000032ae1d7: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [32]=Oop [72]=Oop off=1148}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000032ae1dc: jmpq   0x00000000032adf6c
  0x00000000032ae1e1: mov    %rdx,%rdi
  0x00000000032ae1e4: xor    %rax,%rax
  0x00000000032ae1e7: shl    $0x3,%rcx
  0x00000000032ae1eb: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ae1ee: jmpq   0x00000000032adf6c  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ae1f3: mov    $0xffffff65,%edx
  0x00000000032ae1f8: mov    0x48(%rsp),%rbp
  0x00000000032ae1fd: mov    0x38(%rsp),%r10d
  0x00000000032ae202: mov    %r10d,0x30(%rsp)
  0x00000000032ae207: mov    %r9d,0x34(%rsp)
  0x00000000032ae20c: mov    %ebx,0x48(%rsp)
  0x00000000032ae210: mov    %r11d,0x50(%rsp)
  0x00000000032ae215: xchg   %ax,%ax
  0x00000000032ae217: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [52]=NarrowOop off=1212}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000032ae21c: int3                      ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ae21d: mov    $0xffffff65,%edx
  0x00000000032ae222: rex.W pushq 0x48(%rsp)
  0x00000000032ae227: rex.W popq 0x20(%rsp)
  0x00000000032ae22c: mov    %r9d,0x3c(%rsp)
  0x00000000032ae231: mov    %ebx,0x50(%rsp)
  0x00000000032ae235: mov    %r11d,0x54(%rsp)
  0x00000000032ae23a: nop
  0x00000000032ae23b: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [60]=NarrowOop off=1248}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000032ae240: int3   
  0x00000000032ae241: mov    $0xfffffff6,%edx
  0x00000000032ae246: mov    %r10,%rbp
  0x00000000032ae249: xchg   %ax,%ax
  0x00000000032ae24b: callq  0x00000000031d57a0  ; OopMap{rbp=Oop off=1264}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ;   {runtime_call}
  0x00000000032ae250: int3                      ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ae251: mov    %rax,%rbx
  0x00000000032ae254: jmp    0x00000000032ae259  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ae256: mov    %rax,%rbx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)

  0x00000000032ae259: mov    $0x7,%r10d
  0x00000000032ae25f: mov    0x48(%rsp),%r11
  0x00000000032ae264: and    (%r11),%r10
  0x00000000032ae267: cmp    $0x5,%r10
  0x00000000032ae26b: jne    0x00000000032ae27d
  0x00000000032ae26d: mov    %rbx,%rdx
  0x00000000032ae270: add    $0x80,%rsp
  0x00000000032ae277: pop    %rbp
  0x00000000032ae278: jmpq   0x0000000003292260  ;   {runtime_call}
  0x00000000032ae27d: lea    0x70(%rsp),%rax
  0x00000000032ae282: cmpq   $0x0,(%rax)
  0x00000000032ae289: je     0x00000000032ae303
  0x00000000032ae28f: mov    (%r11),%r10
  0x00000000032ae292: test   $0x2,%r10
  0x00000000032ae299: je     0x00000000032ae2fb
  0x00000000032ae29b: mov    0x16(%r10),%rax
  0x00000000032ae29f: xor    %r15,%rax
  0x00000000032ae2a2: or     0x26(%r10),%rax
  0x00000000032ae2a6: jne    0x00000000032ae303
  0x00000000032ae2a8: mov    0x36(%r10),%rax
  0x00000000032ae2ac: or     0x3e(%r10),%rax
  0x00000000032ae2b0: jne    0x00000000032ae2bc
  0x00000000032ae2b2: movq   $0x0,0x16(%r10)
  0x00000000032ae2ba: jmp    0x00000000032ae303
  0x00000000032ae2bc: cmpq   $0x0,0x46(%r10)
  0x00000000032ae2c4: je     0x00000000032ae2ef
  0x00000000032ae2c6: movq   $0x0,0x16(%r10)
  0x00000000032ae2ce: lock addl $0x0,(%rsp)
  0x00000000032ae2d3: cmpq   $0x0,0x46(%r10)
  0x00000000032ae2db: jne    0x00000000032ae2f4
  0x00000000032ae2dd: movabs $0x0,%rax
  0x00000000032ae2e7: lock cmpxchg %r15,0x16(%r10)
  0x00000000032ae2ed: jne    0x00000000032ae2f4
  0x00000000032ae2ef: or     $0x1,%eax
  0x00000000032ae2f2: jmp    0x00000000032ae303
  0x00000000032ae2f4: test   $0x0,%eax
  0x00000000032ae2f9: jmp    0x00000000032ae303
  0x00000000032ae2fb: mov    (%rax),%r10
  0x00000000032ae2fe: lock cmpxchg %r10,(%r11)
  0x00000000032ae303: je     0x00000000032ae26d
  0x00000000032ae309: mov    %r11,%rcx
  0x00000000032ae30c: lea    0x70(%rsp),%rdx    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)

  0x00000000032ae311: movabs $0x5590c5c0,%r10
  0x00000000032ae31b: callq  *%r10
  0x00000000032ae31e: jmpq   0x00000000032ae26d
  0x00000000032ae323: hlt    
  0x00000000032ae324: hlt    
  0x00000000032ae325: hlt    
  0x00000000032ae326: hlt    
  0x00000000032ae327: hlt    
  0x00000000032ae328: hlt    
  0x00000000032ae329: hlt    
  0x00000000032ae32a: hlt    
  0x00000000032ae32b: hlt    
  0x00000000032ae32c: hlt    
  0x00000000032ae32d: hlt    
  0x00000000032ae32e: hlt    
  0x00000000032ae32f: hlt    
  0x00000000032ae330: hlt    
  0x00000000032ae331: hlt    
  0x00000000032ae332: hlt    
  0x00000000032ae333: hlt    
  0x00000000032ae334: hlt    
  0x00000000032ae335: hlt    
  0x00000000032ae336: hlt    
  0x00000000032ae337: hlt    
  0x00000000032ae338: hlt    
  0x00000000032ae339: hlt    
  0x00000000032ae33a: hlt    
  0x00000000032ae33b: hlt    
  0x00000000032ae33c: hlt    
  0x00000000032ae33d: hlt    
  0x00000000032ae33e: hlt    
  0x00000000032ae33f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032ae340: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032ae345: callq  0x00000000032ae34a
  0x00000000032ae34a: subq   $0x5,(%rsp)
  0x00000000032ae34f: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032ae354: hlt    
  0x00000000032ae355: hlt    
  0x00000000032ae356: hlt    
  0x00000000032ae357: hlt    
<nmethod compile_id='39' compiler='C2' level='4' entry='0x00000000032add60' size='3288' address='0x00000000032adc10' relocation_offset='288' insts_offset='336' stub_offset='1840' scopes_data_offset='1920' scopes_pcs_offset='2432' dependencies_offset='3216' handler_table_offset='3224' nul_chk_table_offset='3272' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='72169' iicount='72169' stamp='0.612'/>
<writer thread='26124'/>
<task_queued compile_id='57' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='1152' iicount='1152' level='3' stamp='0.612' comment='tiered' hot_count='1152'/>
<writer thread='28320'/>
<task_queued compile_id='58' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='11' backedge_count='167016' iicount='11' osr_bci='2' stamp='0.612' comment='tiered' hot_count='166958'/>
<writer thread='26124'/>
<task_queued compile_id='59' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='256' iicount='256' level='1' stamp='0.613' comment='tiered' hot_count='256'/>
<writer thread='4332'/>
Decoding compiled method 0x00000000032a7e90:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c553ab0} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread&apos;
  0x00000000032a7fe0: int3   
  0x00000000032a7fe1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a7fec: data16 data16 xchg %ax,%ax
  0x00000000032a7ff0: mov    %eax,-0x6000(%rsp)
  0x00000000032a7ff7: push   %rbp
  0x00000000032a7ff8: sub    $0x40,%rsp
  0x00000000032a7ffc: mov    (%rdx),%ebp
  0x00000000032a7ffe: mov    0x8(%rdx),%rbx
  0x00000000032a8002: mov    %rdx,%rcx
  0x00000000032a8005: movabs $0x5590be80,%r10
  0x00000000032a800f: callq  *%r10
  0x00000000032a8012: mov    0x8(%rbx),%r11d    ; implicit exception: dispatches to 0x00000000032a807d
  0x00000000032a8016: cmp    $0xf800c143,%r11d  ;   {metadata(&apos;com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread&apos;)}
  0x00000000032a801d: jne    0x00000000032a806d  ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)

  0x00000000032a801f: jmp    0x00000000032a8030
  0x00000000032a8021: lock addl $0x1,0xc(%r12,%r10,8)  ;*invokevirtual getAndAddInt
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@8 (line 158)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)

  0x00000000032a8028: inc    %ebp               ; OopMap{rbx=Oop off=74}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@21 (line 17)

  0x00000000032a802a: test   %eax,-0x9b8030(%rip)        # 0x00000000028f0000
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)
                                                ;   {poll}
  0x00000000032a8030: mov    0x178(%rbx),%r10d  ;*getfield count
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@4 (line 17)

  0x00000000032a8037: cmp    %r10d,%ebp
  0x00000000032a803a: jge    0x00000000032a8055  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x00000000032a803c: mov    0x17c(%rbx),%r10d  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@11 (line 18)

  0x00000000032a8043: test   %r10d,%r10d
  0x00000000032a8046: jne    0x00000000032a8021
  0x00000000032a8048: mov    $0xfffffff6,%edx
  0x00000000032a804d: xchg   %ax,%ax
  0x00000000032a804f: callq  0x00000000031d57a0  ; OopMap{off=116}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x00000000032a8054: int3                      ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x00000000032a8055: mov    $0xffffff65,%edx
  0x00000000032a805a: mov    %rbx,0x20(%rsp)
  0x00000000032a805f: mov    %r10d,0x2c(%rsp)
  0x00000000032a8064: data16 xchg %ax,%ax
  0x00000000032a8067: callq  0x00000000031d57a0  ; OopMap{[32]=Oop off=140}
                                                ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)
                                                ;   {runtime_call}
  0x00000000032a806c: int3   
  0x00000000032a806d: mov    $0xffffff9d,%edx
  0x00000000032a8072: mov    %rbx,0x20(%rsp)
  0x00000000032a8077: callq  0x00000000031d57a0  ; OopMap{[32]=Oop off=156}
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)
                                                ;   {runtime_call}
  0x00000000032a807c: int3   
  0x00000000032a807d: mov    $0xffffff86,%edx
  0x00000000032a8082: nop
  0x00000000032a8083: callq  0x00000000031d57a0  ; OopMap{off=168}
                                                ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)
                                                ;   {runtime_call}
  0x00000000032a8088: int3                      ;*iload_1
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@2 (line 17)

  0x00000000032a8089: hlt    
  0x00000000032a808a: hlt    
  0x00000000032a808b: hlt    
  0x00000000032a808c: hlt    
  0x00000000032a808d: hlt    
  0x00000000032a808e: hlt    
  0x00000000032a808f: hlt    
  0x00000000032a8090: hlt    
  0x00000000032a8091: hlt    
  0x00000000032a8092: hlt    
  0x00000000032a8093: hlt    
  0x00000000032a8094: hlt    
  0x00000000032a8095: hlt    
  0x00000000032a8096: hlt    
  0x00000000032a8097: hlt    
  0x00000000032a8098: hlt    
  0x00000000032a8099: hlt    
  0x00000000032a809a: hlt    
  0x00000000032a809b: hlt    
  0x00000000032a809c: hlt    
  0x00000000032a809d: hlt    
  0x00000000032a809e: hlt    
  0x00000000032a809f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a80a0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032a80a5: callq  0x00000000032a80aa
  0x00000000032a80aa: subq   $0x5,(%rsp)
  0x00000000032a80af: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a80b4: hlt    
  0x00000000032a80b5: hlt    
  0x00000000032a80b6: hlt    
  0x00000000032a80b7: hlt    
<nmethod compile_id='58' compile_kind='osr' compiler='C2' level='4' entry='0x00000000032a7fe0' size='952' address='0x00000000032a7e90' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='584' scopes_pcs_offset='688' dependencies_offset='928' nul_chk_table_offset='936' oops_offset='552' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='192983' iicount='12' stamp='0.617'/>
<writer thread='28320'/>
<task_queued compile_id='60' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='193578' iicount='12' stamp='0.623' comment='tiered' hot_count='12'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032ad450:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rdx:rdx   = &apos;java/lang/String&apos;
  # parm0:    r8        = int
  # parm1:    r9        = int
  #           [sp+0x50]  (sp of caller)
  0x00000000032ad5e0: mov    0x8(%rdx),%r10d
  0x00000000032ad5e4: shl    $0x3,%r10
  0x00000000032ad5e8: cmp    %rax,%r10
  0x00000000032ad5eb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032ad5f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032ad5fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032ad600: mov    %eax,-0x6000(%rsp)
  0x00000000032ad607: push   %rbp
  0x00000000032ad608: sub    $0x40,%rsp
  0x00000000032ad60c: movabs $0x1c3414f8,%rax   ;   {metadata(method data for {method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad616: mov    0xdc(%rax),%esi
  0x00000000032ad61c: add    $0x8,%esi
  0x00000000032ad61f: mov    %esi,0xdc(%rax)
  0x00000000032ad625: movabs $0x1c155388,%rax   ;   {metadata({method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad62f: and    $0x1ff8,%esi
  0x00000000032ad635: cmp    $0x0,%esi
  0x00000000032ad638: je     0x00000000032ad848  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x00000000032ad63e: cmp    $0x10000,%r8d
  0x00000000032ad645: movabs $0x1c3414f8,%rax   ;   {metadata(method data for {method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad64f: movabs $0x108,%rsi
  0x00000000032ad659: jge    0x00000000032ad669
  0x00000000032ad65f: movabs $0x118,%rsi
  0x00000000032ad669: mov    (%rax,%rsi,1),%rdi
  0x00000000032ad66d: lea    0x1(%rdi),%rdi
  0x00000000032ad671: mov    %rdi,(%rax,%rsi,1)
  0x00000000032ad675: jge    0x00000000032ad81d  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x00000000032ad67b: mov    0xc(%rdx),%eax
  0x00000000032ad67e: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x00000000032ad682: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x00000000032ad85f
  0x00000000032ad685: dec    %edx
  0x00000000032ad687: movabs $0x1c3414f8,%rsi   ;   {metadata(method data for {method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad691: addq   $0x1,0x128(%rsi)
  0x00000000032ad699: movabs $0x1c33bf60,%rsi   ;   {metadata(method data for {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032ad6a3: mov    0xdc(%rsi),%edi
  0x00000000032ad6a9: add    $0x8,%edi
  0x00000000032ad6ac: mov    %edi,0xdc(%rsi)
  0x00000000032ad6b2: movabs $0x1c242b00,%rsi   ;   {metadata({method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032ad6bc: and    $0x7ffff8,%edi
  0x00000000032ad6c2: cmp    $0x0,%edi
  0x00000000032ad6c5: je     0x00000000032ad864
  0x00000000032ad6cb: cmp    %edx,%r9d
  0x00000000032ad6ce: movabs $0x1c33bf60,%rsi   ;   {metadata(method data for {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032ad6d8: movabs $0x108,%rdi
  0x00000000032ad6e2: jg     0x00000000032ad6f2
  0x00000000032ad6e8: movabs $0x118,%rdi
  0x00000000032ad6f2: mov    (%rsi,%rdi,1),%rbx
  0x00000000032ad6f6: lea    0x1(%rbx),%rbx
  0x00000000032ad6fa: mov    %rbx,(%rsi,%rdi,1)
  0x00000000032ad6fe: jg     0x00000000032ad719  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x00000000032ad704: movabs $0x1c33bf60,%rdx   ;   {metadata(method data for {method} {0x000000001c242b08} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032ad70e: incl   0x128(%rdx)
  0x00000000032ad714: jmpq   0x00000000032ad7be  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x00000000032ad719: mov    %rdx,%r9
  0x00000000032ad71c: jmpq   0x00000000032ad7be  ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x00000000032ad721: nopl   0x0(%rax)
  0x00000000032ad728: movslq %r9d,%rdx
  0x00000000032ad72b: cmp    0xc(%rax),%r9d
  0x00000000032ad72f: jae    0x00000000032ad87b
  0x00000000032ad735: movzwl 0x10(%rax,%rdx,2),%edx  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x00000000032ad73a: cmp    %r8d,%edx
  0x00000000032ad73d: movabs $0x1c3414f8,%rdx   ;   {metadata(method data for {method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad747: movabs $0x158,%rsi
  0x00000000032ad751: jne    0x00000000032ad761
  0x00000000032ad757: movabs $0x168,%rsi
  0x00000000032ad761: mov    (%rdx,%rsi,1),%rdi
  0x00000000032ad765: lea    0x1(%rdi),%rdi
  0x00000000032ad769: mov    %rdi,(%rdx,%rsi,1)
  0x00000000032ad76d: je     0x00000000032ad7fd  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x00000000032ad773: dec    %r9d
  0x00000000032ad776: movabs $0x1c3414f8,%rdx   ;   {metadata(method data for {method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad780: mov    0xe0(%rdx),%esi
  0x00000000032ad786: add    $0x8,%esi
  0x00000000032ad789: mov    %esi,0xe0(%rdx)
  0x00000000032ad78f: movabs $0x1c155388,%rdx   ;   {metadata({method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad799: and    $0xfff8,%esi
  0x00000000032ad79f: cmp    $0x0,%esi
  0x00000000032ad7a2: je     0x00000000032ad884  ; OopMap{rax=Oop off=456}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x00000000032ad7a8: test   %eax,-0x9bd6ae(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032ad7ae: movabs $0x1c3414f8,%rdx   ;   {metadata(method data for {method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad7b8: incl   0x178(%rdx)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x00000000032ad7be: cmp    $0x0,%r9d
  0x00000000032ad7c2: movabs $0x1c3414f8,%rdx   ;   {metadata(method data for {method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad7cc: movabs $0x138,%rsi
  0x00000000032ad7d6: jl     0x00000000032ad7e6
  0x00000000032ad7dc: movabs $0x148,%rsi
  0x00000000032ad7e6: mov    (%rdx,%rsi,1),%rdi
  0x00000000032ad7ea: lea    0x1(%rdi),%rdi
  0x00000000032ad7ee: mov    %rdi,(%rdx,%rsi,1)
  0x00000000032ad7f2: jl     0x00000000032ad80c
  0x00000000032ad7f8: jmpq   0x00000000032ad728  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x00000000032ad7fd: mov    %r9,%rax
  0x00000000032ad800: add    $0x40,%rsp
  0x00000000032ad804: pop    %rbp
  0x00000000032ad805: test   %eax,-0x9bd70b(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ad80b: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x00000000032ad80c: mov    $0xffffffff,%eax
  0x00000000032ad811: add    $0x40,%rsp
  0x00000000032ad815: pop    %rbp
  0x00000000032ad816: test   %eax,-0x9bd71c(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ad81c: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x00000000032ad81d: mov    %rdx,%rsi
  0x00000000032ad820: movabs $0x1c3414f8,%rdi   ;   {metadata(method data for {method} {0x000000001c155390} &apos;lastIndexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032ad82a: addq   $0x1,0x190(%rdi)
  0x00000000032ad832: nop
  0x00000000032ad833: nop
  0x00000000032ad834: nop
  0x00000000032ad835: nop
  0x00000000032ad836: nop
  0x00000000032ad837: callq  0x00000000031d61a0  ; OopMap{off=604}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x00000000032ad83c: add    $0x40,%rsp
  0x00000000032ad840: pop    %rbp
  0x00000000032ad841: test   %eax,-0x9bd747(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ad847: retq   
  0x00000000032ad848: mov    %rax,0x8(%rsp)
  0x00000000032ad84d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ad855: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=634}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x00000000032ad85a: jmpq   0x00000000032ad63e
  0x00000000032ad85f: callq  0x000000000328d680  ; OopMap{rax=Oop off=644}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x00000000032ad864: mov    %rsi,0x8(%rsp)
  0x00000000032ad869: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ad871: callq  0x0000000003291d60  ; OopMap{rax=Oop off=662}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x00000000032ad876: jmpq   0x00000000032ad6cb
  0x00000000032ad87b: mov    %r9,(%rsp)
  0x00000000032ad87f: callq  0x000000000328c940  ; OopMap{rax=Oop off=676}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x00000000032ad884: mov    %rdx,0x8(%rsp)
  0x00000000032ad889: movq   $0x28,(%rsp)
  0x00000000032ad891: callq  0x0000000003291d60  ; OopMap{rax=Oop off=694}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x00000000032ad896: jmpq   0x00000000032ad7a8
  0x00000000032ad89b: nop
  0x00000000032ad89c: nop
  0x00000000032ad89d: mov    0x2a8(%r15),%rax
  0x00000000032ad8a4: movabs $0x0,%r10
  0x00000000032ad8ae: mov    %r10,0x2a8(%r15)
  0x00000000032ad8b5: movabs $0x0,%r10
  0x00000000032ad8bf: mov    %r10,0x2b0(%r15)
  0x00000000032ad8c6: add    $0x40,%rsp
  0x00000000032ad8ca: pop    %rbp
  0x00000000032ad8cb: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032ad8d0: hlt    
  0x00000000032ad8d1: hlt    
  0x00000000032ad8d2: hlt    
  0x00000000032ad8d3: hlt    
  0x00000000032ad8d4: hlt    
  0x00000000032ad8d5: hlt    
  0x00000000032ad8d6: hlt    
  0x00000000032ad8d7: hlt    
  0x00000000032ad8d8: hlt    
  0x00000000032ad8d9: hlt    
  0x00000000032ad8da: hlt    
  0x00000000032ad8db: hlt    
  0x00000000032ad8dc: hlt    
  0x00000000032ad8dd: hlt    
  0x00000000032ad8de: hlt    
  0x00000000032ad8df: hlt    
[Stub Code]
  0x00000000032ad8e0: nop                       ;   {no_reloc}
  0x00000000032ad8e1: nop
  0x00000000032ad8e2: nop
  0x00000000032ad8e3: nop
  0x00000000032ad8e4: nop
  0x00000000032ad8e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032ad8ef: jmpq   0x00000000032ad8ef  ;   {runtime_call}
[Exception Handler]
  0x00000000032ad8f4: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032ad8f9: mov    %rsp,-0x28(%rsp)
  0x00000000032ad8fe: sub    $0x80,%rsp
  0x00000000032ad905: mov    %rax,0x78(%rsp)
  0x00000000032ad90a: mov    %rcx,0x70(%rsp)
  0x00000000032ad90f: mov    %rdx,0x68(%rsp)
  0x00000000032ad914: mov    %rbx,0x60(%rsp)
  0x00000000032ad919: mov    %rbp,0x50(%rsp)
  0x00000000032ad91e: mov    %rsi,0x48(%rsp)
  0x00000000032ad923: mov    %rdi,0x40(%rsp)
  0x00000000032ad928: mov    %r8,0x38(%rsp)
  0x00000000032ad92d: mov    %r9,0x30(%rsp)
  0x00000000032ad932: mov    %r10,0x28(%rsp)
  0x00000000032ad937: mov    %r11,0x20(%rsp)
  0x00000000032ad93c: mov    %r12,0x18(%rsp)
  0x00000000032ad941: mov    %r13,0x10(%rsp)
  0x00000000032ad946: mov    %r14,0x8(%rsp)
  0x00000000032ad94b: mov    %r15,(%rsp)
  0x00000000032ad94f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032ad959: movabs $0x32ad8f9,%rdx    ;   {internal_word}
  0x00000000032ad963: mov    %rsp,%r8
  0x00000000032ad966: and    $0xfffffffffffffff0,%rsp
  0x00000000032ad96a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032ad96f: hlt    
[Deopt Handler Code]
  0x00000000032ad970: movabs $0x32ad970,%r10    ;   {section_word}
  0x00000000032ad97a: push   %r10
  0x00000000032ad97c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032ad981: hlt    
  0x00000000032ad982: hlt    
  0x00000000032ad983: hlt    
  0x00000000032ad984: hlt    
  0x00000000032ad985: hlt    
  0x00000000032ad986: hlt    
  0x00000000032ad987: hlt    
<nmethod compile_id='50' compiler='C1' level='3' entry='0x00000000032ad5e0' size='1912' address='0x00000000032ad450' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1352' scopes_pcs_offset='1536' dependencies_offset='1888' nul_chk_table_offset='1896' method='java/lang/String lastIndexOf (II)I' bytes='52' count='718' backedge_count='53699' iicount='718' stamp='0.654'/>
Decoding compiled method 0x00000000032ad110:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c252890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032ad260: mov    0x8(%rdx),%r10d
  0x00000000032ad264: shl    $0x3,%r10
  0x00000000032ad268: cmp    %rax,%r10
  0x00000000032ad26b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032ad271: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032ad27c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032ad280: mov    %eax,-0x6000(%rsp)
  0x00000000032ad287: push   %rbp
  0x00000000032ad288: sub    $0x40,%rsp
  0x00000000032ad28c: movabs $0x1c46a480,%rax
  0x00000000032ad296: mov    0x8(%rax),%esi
  0x00000000032ad299: add    $0x8,%esi
  0x00000000032ad29c: mov    %esi,0x8(%rax)
  0x00000000032ad29f: movabs $0x1c252888,%rax   ;   {metadata({method} {0x000000001c252890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;)}
  0x00000000032ad2a9: and    $0x3ff8,%esi
  0x00000000032ad2af: cmp    $0x0,%esi
  0x00000000032ad2b2: je     0x00000000032ad2ce  ;*getstatic unsafe
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@0 (line 158)

  0x00000000032ad2b8: mov    $0x1,%eax
  0x00000000032ad2bd: lock xadd %eax,0xc(%rdx)
  0x00000000032ad2c2: add    $0x40,%rsp
  0x00000000032ad2c6: pop    %rbp
  0x00000000032ad2c7: test   %eax,-0x9bd1cd(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ad2cd: retq   
  0x00000000032ad2ce: mov    %rax,0x8(%rsp)
  0x00000000032ad2d3: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ad2db: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=128}
                                                ;*synchronization entry
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@-1 (line 158)
                                                ;   {runtime_call}
  0x00000000032ad2e0: jmp    0x00000000032ad2b8
  0x00000000032ad2e2: nop
  0x00000000032ad2e3: nop
  0x00000000032ad2e4: mov    0x2a8(%r15),%rax
  0x00000000032ad2eb: movabs $0x0,%r10
  0x00000000032ad2f5: mov    %r10,0x2a8(%r15)
  0x00000000032ad2fc: movabs $0x0,%r10
  0x00000000032ad306: mov    %r10,0x2b0(%r15)
  0x00000000032ad30d: add    $0x40,%rsp
  0x00000000032ad311: pop    %rbp
  0x00000000032ad312: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032ad317: hlt    
  0x00000000032ad318: hlt    
  0x00000000032ad319: hlt    
  0x00000000032ad31a: hlt    
  0x00000000032ad31b: hlt    
  0x00000000032ad31c: hlt    
  0x00000000032ad31d: hlt    
  0x00000000032ad31e: hlt    
  0x00000000032ad31f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032ad320: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032ad325: mov    %rsp,-0x28(%rsp)
  0x00000000032ad32a: sub    $0x80,%rsp
  0x00000000032ad331: mov    %rax,0x78(%rsp)
  0x00000000032ad336: mov    %rcx,0x70(%rsp)
  0x00000000032ad33b: mov    %rdx,0x68(%rsp)
  0x00000000032ad340: mov    %rbx,0x60(%rsp)
  0x00000000032ad345: mov    %rbp,0x50(%rsp)
  0x00000000032ad34a: mov    %rsi,0x48(%rsp)
  0x00000000032ad34f: mov    %rdi,0x40(%rsp)
  0x00000000032ad354: mov    %r8,0x38(%rsp)
  0x00000000032ad359: mov    %r9,0x30(%rsp)
  0x00000000032ad35e: mov    %r10,0x28(%rsp)
  0x00000000032ad363: mov    %r11,0x20(%rsp)
  0x00000000032ad368: mov    %r12,0x18(%rsp)
  0x00000000032ad36d: mov    %r13,0x10(%rsp)
  0x00000000032ad372: mov    %r14,0x8(%rsp)
  0x00000000032ad377: mov    %r15,(%rsp)
  0x00000000032ad37b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032ad385: movabs $0x32ad325,%rdx    ;   {internal_word}
  0x00000000032ad38f: mov    %rsp,%r8
  0x00000000032ad392: and    $0xfffffffffffffff0,%rsp
  0x00000000032ad396: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032ad39b: hlt    
[Deopt Handler Code]
  0x00000000032ad39c: movabs $0x32ad39c,%r10    ;   {section_word}
  0x00000000032ad3a6: push   %r10
  0x00000000032ad3a8: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032ad3ad: hlt    
  0x00000000032ad3ae: hlt    
  0x00000000032ad3af: hlt    
<nmethod compile_id='52' compiler='C1' level='2' entry='0x00000000032ad260' size='768' address='0x00000000032ad110' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='193127' iicount='193127' stamp='0.656'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032b1ad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c553ab0} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread&apos;
  #           [sp+0x30]  (sp of caller)
  0x00000000032b1c00: mov    0x8(%rdx),%r10d
  0x00000000032b1c04: shl    $0x3,%r10
  0x00000000032b1c08: cmp    %r10,%rax
  0x00000000032b1c0b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b1c11: data16 xchg %ax,%ax
  0x00000000032b1c14: nopl   0x0(%rax,%rax,1)
  0x00000000032b1c1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b1c20: mov    %eax,-0x6000(%rsp)
  0x00000000032b1c27: push   %rbp
  0x00000000032b1c28: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@-1 (line 17)

  0x00000000032b1c2c: mov    0x178(%rdx),%ebp   ;*getfield count
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@4 (line 17)

  0x00000000032b1c32: test   %ebp,%ebp
  0x00000000032b1c34: jle    0x00000000032b1c8d  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x00000000032b1c36: xor    %r11d,%r11d
  0x00000000032b1c39: nopl   0x0(%rax)          ;*aload_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@10 (line 18)

  0x00000000032b1c40: mov    0x17c(%rdx),%r8d   ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@11 (line 18)

  0x00000000032b1c47: test   %r8d,%r8d
  0x00000000032b1c4a: je     0x00000000032b1c81
  0x00000000032b1c4c: lock addl $0x1,0xc(%r12,%r8,8)  ;*invokevirtual getAndAddInt
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@8 (line 158)
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)

  0x00000000032b1c53: mov    0x178(%rdx),%r10d  ;*getfield count
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@4 (line 17)

  0x00000000032b1c5a: inc    %r11d              ; OopMap{rdx=Oop off=93}
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@21 (line 17)

  0x00000000032b1c5d: test   %eax,-0x9c1c63(%rip)        # 0x00000000028f0000
                                                ;*goto
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@21 (line 17)
                                                ;   {poll}
  0x00000000032b1c63: cmp    %r10d,%r11d
  0x00000000032b1c66: jl     0x00000000032b1c40  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x00000000032b1c68: mov    %rdx,%rbp
  0x00000000032b1c6b: mov    %r11d,0x4(%rsp)
  0x00000000032b1c70: mov    %r10d,0x8(%rsp)
  0x00000000032b1c75: mov    $0xffffff65,%edx
  0x00000000032b1c7a: nop
  0x00000000032b1c7b: callq  0x00000000031d57a0  ; OopMap{rbp=Oop off=128}
                                                ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)
                                                ;   {runtime_call}
  0x00000000032b1c80: int3                      ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x00000000032b1c81: mov    $0xfffffff6,%edx
  0x00000000032b1c86: nop
  0x00000000032b1c87: callq  0x00000000031d57a0  ; OopMap{off=140}
                                                ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)
                                                ;   {runtime_call}
  0x00000000032b1c8c: int3                      ;*invokevirtual getAndIncrement
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@14 (line 18)

  0x00000000032b1c8d: mov    %rdx,(%rsp)
  0x00000000032b1c91: mov    $0xffffff65,%edx
  0x00000000032b1c96: nop
  0x00000000032b1c97: callq  0x00000000031d57a0  ; OopMap{[0]=Oop off=156}
                                                ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)
                                                ;   {runtime_call}
  0x00000000032b1c9c: int3                      ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.AtomicThread::run@7 (line 17)

  0x00000000032b1c9d: hlt    
  0x00000000032b1c9e: hlt    
  0x00000000032b1c9f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032b1ca0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032b1ca5: callq  0x00000000032b1caa
  0x00000000032b1caa: subq   $0x5,(%rsp)
  0x00000000032b1caf: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b1cb4: hlt    
  0x00000000032b1cb5: hlt    
  0x00000000032b1cb6: hlt    
  0x00000000032b1cb7: hlt    
<nmethod compile_id='60' compiler='C2' level='4' entry='0x00000000032b1c00' size='920' address='0x00000000032b1ad0' relocation_offset='288' insts_offset='304' stub_offset='464' scopes_data_offset='512' scopes_pcs_offset='624' dependencies_offset='912' oops_offset='488' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='193726' iicount='12' stamp='0.659'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032aa350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1d01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  #           [sp+0x60]  (sp of caller)
  0x00000000032aa4a0: mov    0x8(%rdx),%r10d
  0x00000000032aa4a4: shl    $0x3,%r10
  0x00000000032aa4a8: cmp    %rax,%r10
  0x00000000032aa4ab: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032aa4b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032aa4bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032aa4c0: mov    %eax,-0x6000(%rsp)
  0x00000000032aa4c7: push   %rbp
  0x00000000032aa4c8: sub    $0x50,%rsp
  0x00000000032aa4cc: movabs $0x1c25f6d0,%rax
  0x00000000032aa4d6: mov    0x8(%rax),%esi
  0x00000000032aa4d9: add    $0x8,%esi
  0x00000000032aa4dc: mov    %esi,0x8(%rax)
  0x00000000032aa4df: movabs $0x1c1d01b0,%rax   ;   {metadata({method} {0x000000001c1d01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000032aa4e9: and    $0x3ff8,%esi
  0x00000000032aa4ef: cmp    $0x0,%esi
  0x00000000032aa4f2: je     0x00000000032aa562  ;*aload_0
                                                ; - sun.misc.Unsafe::getAndAddInt@0 (line 1034)

  0x00000000032aa4f8: mov    (%r8,%r9,1),%esi
  0x00000000032aa4fc: mov    %rdi,%rbx
  0x00000000032aa4ff: add    %esi,%ebx
  0x00000000032aa501: mov    %rsi,%rax
  0x00000000032aa504: lea    (%r8,%r9,1),%rcx
  0x00000000032aa508: lock cmpxchg %ebx,(%rcx)
  0x00000000032aa50c: mov    $0x1,%eax
  0x00000000032aa511: je     0x00000000032aa51c
  0x00000000032aa517: mov    $0x0,%eax          ;*invokevirtual compareAndSwapInt
                                                ; - sun.misc.Unsafe::getAndAddInt@18 (line 1035)

  0x00000000032aa51c: movabs $0x1c25f6d0,%rbx
  0x00000000032aa526: mov    0xc(%rbx),%ecx
  0x00000000032aa529: add    $0x8,%ecx
  0x00000000032aa52c: mov    %ecx,0xc(%rbx)
  0x00000000032aa52f: movabs $0x1c1d01b0,%rbx   ;   {metadata({method} {0x000000001c1d01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;)}
  0x00000000032aa539: and    $0x1fff8,%ecx
  0x00000000032aa53f: cmp    $0x0,%ecx
  0x00000000032aa542: je     0x00000000032aa576  ; OopMap{rdx=Oop r8=Oop off=168}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x00000000032aa548: test   %eax,-0x9ba44e(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032aa54e: cmp    $0x0,%eax
  0x00000000032aa551: je     0x00000000032aa4f8  ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x00000000032aa553: mov    %rsi,%rax
  0x00000000032aa556: add    $0x50,%rsp
  0x00000000032aa55a: pop    %rbp
  0x00000000032aa55b: test   %eax,-0x9ba461(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032aa561: retq   
  0x00000000032aa562: mov    %rax,0x8(%rsp)
  0x00000000032aa567: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032aa56f: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop off=212}
                                                ;*synchronization entry
                                                ; - sun.misc.Unsafe::getAndAddInt@-1 (line 1034)
                                                ;   {runtime_call}
  0x00000000032aa574: jmp    0x00000000032aa4f8
  0x00000000032aa576: mov    %rbx,0x8(%rsp)
  0x00000000032aa57b: movq   $0x15,(%rsp)
  0x00000000032aa583: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop off=232}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)
                                                ;   {runtime_call}
  0x00000000032aa588: jmp    0x00000000032aa548
  0x00000000032aa58a: nop
  0x00000000032aa58b: nop
  0x00000000032aa58c: mov    0x2a8(%r15),%rax
  0x00000000032aa593: movabs $0x0,%r10
  0x00000000032aa59d: mov    %r10,0x2a8(%r15)
  0x00000000032aa5a4: movabs $0x0,%r10
  0x00000000032aa5ae: mov    %r10,0x2b0(%r15)
  0x00000000032aa5b5: add    $0x50,%rsp
  0x00000000032aa5b9: pop    %rbp
  0x00000000032aa5ba: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032aa5bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032aa5c0: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032aa5c5: mov    %rsp,-0x28(%rsp)
  0x00000000032aa5ca: sub    $0x80,%rsp
  0x00000000032aa5d1: mov    %rax,0x78(%rsp)
  0x00000000032aa5d6: mov    %rcx,0x70(%rsp)
  0x00000000032aa5db: mov    %rdx,0x68(%rsp)
  0x00000000032aa5e0: mov    %rbx,0x60(%rsp)
  0x00000000032aa5e5: mov    %rbp,0x50(%rsp)
  0x00000000032aa5ea: mov    %rsi,0x48(%rsp)
  0x00000000032aa5ef: mov    %rdi,0x40(%rsp)
  0x00000000032aa5f4: mov    %r8,0x38(%rsp)
  0x00000000032aa5f9: mov    %r9,0x30(%rsp)
  0x00000000032aa5fe: mov    %r10,0x28(%rsp)
  0x00000000032aa603: mov    %r11,0x20(%rsp)
  0x00000000032aa608: mov    %r12,0x18(%rsp)
  0x00000000032aa60d: mov    %r13,0x10(%rsp)
  0x00000000032aa612: mov    %r14,0x8(%rsp)
  0x00000000032aa617: mov    %r15,(%rsp)
  0x00000000032aa61b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032aa625: movabs $0x32aa5c5,%rdx    ;   {internal_word}
  0x00000000032aa62f: mov    %rsp,%r8
  0x00000000032aa632: and    $0xfffffffffffffff0,%rsp
  0x00000000032aa636: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032aa63b: hlt    
[Deopt Handler Code]
  0x00000000032aa63c: movabs $0x32aa63c,%r10    ;   {section_word}
  0x00000000032aa646: push   %r10
  0x00000000032aa648: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032aa64d: hlt    
  0x00000000032aa64e: hlt    
  0x00000000032aa64f: hlt    
<nmethod compile_id='55' compiler='C1' level='2' entry='0x00000000032aa4a0' size='984' address='0x00000000032aa350' relocation_offset='288' insts_offset='336' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='848' dependencies_offset='976' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='191842' backedge_count='532076' iicount='191842' stamp='0.662'/>
<writer thread='31240'/>
<task_queued compile_id='61' compile_kind='osr' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='191842' backedge_count='532580' iicount='191842' osr_bci='0' stamp='0.662' comment='tiered' hot_count='532580'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032a9e50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c178388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;
  # this:     rdx:rdx   = &apos;java/lang/ref/Reference&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/ref/ReferenceQueue&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000032a9fc0: mov    0x8(%rdx),%r10d
  0x00000000032a9fc4: shl    $0x3,%r10
  0x00000000032a9fc8: cmp    %rax,%r10
  0x00000000032a9fcb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a9fd1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a9fdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a9fe0: mov    %eax,-0x6000(%rsp)
  0x00000000032a9fe7: push   %rbp
  0x00000000032a9fe8: sub    $0x30,%rsp
  0x00000000032a9fec: movabs $0x1c395358,%rsi   ;   {metadata(method data for {method} {0x000000001c178388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000000032a9ff6: mov    0xdc(%rsi),%edi
  0x00000000032a9ffc: add    $0x8,%edi
  0x00000000032a9fff: mov    %edi,0xdc(%rsi)
  0x00000000032aa005: movabs $0x1c178380,%rsi   ;   {metadata({method} {0x000000001c178388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000000032aa00f: and    $0x1ff8,%edi
  0x00000000032aa015: cmp    $0x0,%edi
  0x00000000032aa018: je     0x00000000032aa116  ;*aload_0
                                                ; - java.lang.ref.Reference::&lt;init&gt;@0 (line 306)

  0x00000000032aa01e: mov    %rdx,%rsi
  0x00000000032aa021: movabs $0x1c395358,%rdi   ;   {metadata(method data for {method} {0x000000001c178388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000000032aa02b: addq   $0x1,0x108(%rdi)
  0x00000000032aa033: movabs $0x1c281c10,%rsi   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032aa03d: mov    0xdc(%rsi),%edi
  0x00000000032aa043: add    $0x8,%edi
  0x00000000032aa046: mov    %edi,0xdc(%rsi)
  0x00000000032aa04c: movabs $0x1c150480,%rsi   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032aa056: and    $0x7ffff8,%edi
  0x00000000032aa05c: cmp    $0x0,%edi
  0x00000000032aa05f: je     0x00000000032aa12d
  0x00000000032aa065: mov    %r8,%r10
  0x00000000032aa068: shr    $0x3,%r10
  0x00000000032aa06c: mov    %r10d,0xc(%rdx)
  0x00000000032aa070: mov    %rdx,%rsi
  0x00000000032aa073: shr    $0x9,%rsi
  0x00000000032aa077: movabs $0xef3d000,%rdi
  0x00000000032aa081: movb   $0x0,(%rsi,%rdi,1)  ;*putfield referent
                                                ; - java.lang.ref.Reference::&lt;init&gt;@6 (line 307)

  0x00000000032aa085: cmp    $0x0,%r9
  0x00000000032aa089: movabs $0x1c395358,%rsi   ;   {metadata(method data for {method} {0x000000001c178388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000000032aa093: movabs $0x118,%rdi
  0x00000000032aa09d: jne    0x00000000032aa0ad
  0x00000000032aa0a3: movabs $0x128,%rdi
  0x00000000032aa0ad: mov    (%rsi,%rdi,1),%rbx
  0x00000000032aa0b1: lea    0x1(%rbx),%rbx
  0x00000000032aa0b5: mov    %rbx,(%rsi,%rdi,1)
  0x00000000032aa0b9: jne    0x00000000032aa0e5  ;*ifnonnull
                                                ; - java.lang.ref.Reference::&lt;init&gt;@11 (line 308)

  0x00000000032aa0bf: movabs $0x76b7873b8,%rsi  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/ref/ReferenceQueue&apos;)}
  0x00000000032aa0c9: mov    0x68(%rsi),%esi
  0x00000000032aa0cc: shl    $0x3,%rsi          ;*getstatic NULL
                                                ; - java.lang.ref.Reference::&lt;init&gt;@14 (line 308)

  0x00000000032aa0d0: movabs $0x1c395358,%rdi   ;   {metadata(method data for {method} {0x000000001c178388} &apos;&lt;init&gt;&apos; &apos;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V&apos; in &apos;java/lang/ref/Reference&apos;)}
  0x00000000032aa0da: incl   0x138(%rdi)
  0x00000000032aa0e0: jmpq   0x00000000032aa0e8  ;*goto
                                                ; - java.lang.ref.Reference::&lt;init&gt;@17 (line 308)

  0x00000000032aa0e5: mov    %r9,%rsi
  0x00000000032aa0e8: mov    %rsi,%r10
  0x00000000032aa0eb: shr    $0x3,%r10
  0x00000000032aa0ef: mov    %r10d,0x10(%rdx)
  0x00000000032aa0f3: shr    $0x9,%rdx
  0x00000000032aa0f7: movabs $0xef3d000,%rsi
  0x00000000032aa101: movb   $0x0,(%rdx,%rsi,1)
  0x00000000032aa105: lock addl $0x0,(%rsp)     ;*putfield queue
                                                ; - java.lang.ref.Reference::&lt;init&gt;@21 (line 308)

  0x00000000032aa10a: add    $0x30,%rsp
  0x00000000032aa10e: pop    %rbp
  0x00000000032aa10f: test   %eax,-0x9ba015(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032aa115: retq   
  0x00000000032aa116: mov    %rsi,0x8(%rsp)
  0x00000000032aa11b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032aa123: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop r9=Oop off=360}
                                                ;*synchronization entry
                                                ; - java.lang.ref.Reference::&lt;init&gt;@-1 (line 306)
                                                ;   {runtime_call}
  0x00000000032aa128: jmpq   0x00000000032aa01e
  0x00000000032aa12d: mov    %rsi,0x8(%rsp)
  0x00000000032aa132: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032aa13a: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop r9=Oop off=383}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.ref.Reference::&lt;init&gt;@1 (line 306)
                                                ;   {runtime_call}
  0x00000000032aa13f: jmpq   0x00000000032aa065
  0x00000000032aa144: nop
  0x00000000032aa145: nop
  0x00000000032aa146: mov    0x2a8(%r15),%rax
  0x00000000032aa14d: movabs $0x0,%r10
  0x00000000032aa157: mov    %r10,0x2a8(%r15)
  0x00000000032aa15e: movabs $0x0,%r10
  0x00000000032aa168: mov    %r10,0x2b0(%r15)
  0x00000000032aa16f: add    $0x30,%rsp
  0x00000000032aa173: pop    %rbp
  0x00000000032aa174: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032aa179: hlt    
  0x00000000032aa17a: hlt    
  0x00000000032aa17b: hlt    
  0x00000000032aa17c: hlt    
  0x00000000032aa17d: hlt    
  0x00000000032aa17e: hlt    
  0x00000000032aa17f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032aa180: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032aa185: mov    %rsp,-0x28(%rsp)
  0x00000000032aa18a: sub    $0x80,%rsp
  0x00000000032aa191: mov    %rax,0x78(%rsp)
  0x00000000032aa196: mov    %rcx,0x70(%rsp)
  0x00000000032aa19b: mov    %rdx,0x68(%rsp)
  0x00000000032aa1a0: mov    %rbx,0x60(%rsp)
  0x00000000032aa1a5: mov    %rbp,0x50(%rsp)
  0x00000000032aa1aa: mov    %rsi,0x48(%rsp)
  0x00000000032aa1af: mov    %rdi,0x40(%rsp)
  0x00000000032aa1b4: mov    %r8,0x38(%rsp)
  0x00000000032aa1b9: mov    %r9,0x30(%rsp)
  0x00000000032aa1be: mov    %r10,0x28(%rsp)
  0x00000000032aa1c3: mov    %r11,0x20(%rsp)
  0x00000000032aa1c8: mov    %r12,0x18(%rsp)
  0x00000000032aa1cd: mov    %r13,0x10(%rsp)
  0x00000000032aa1d2: mov    %r14,0x8(%rsp)
  0x00000000032aa1d7: mov    %r15,(%rsp)
  0x00000000032aa1db: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032aa1e5: movabs $0x32aa185,%rdx    ;   {internal_word}
  0x00000000032aa1ef: mov    %rsp,%r8
  0x00000000032aa1f2: and    $0xfffffffffffffff0,%rsp
  0x00000000032aa1f6: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032aa1fb: hlt    
[Deopt Handler Code]
  0x00000000032aa1fc: movabs $0x32aa1fc,%r10    ;   {section_word}
  0x00000000032aa206: push   %r10
  0x00000000032aa208: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032aa20d: hlt    
  0x00000000032aa20e: hlt    
  0x00000000032aa20f: hlt    
<nmethod compile_id='27' compiler='C1' level='3' entry='0x00000000032a9fc0' size='1224' address='0x00000000032a9e50' relocation_offset='288' insts_offset='368' stub_offset='816' scopes_data_offset='984' scopes_pcs_offset='1056' dependencies_offset='1216' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='1548' iicount='1548' stamp='0.666'/>
Decoding compiled method 0x00000000032a9750:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c236db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  #           [sp+0x90]  (sp of caller)
  0x00000000032a98e0: mov    0x8(%rdx),%r10d
  0x00000000032a98e4: shl    $0x3,%r10
  0x00000000032a98e8: cmp    %rax,%r10
  0x00000000032a98eb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a98f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a98fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a9900: mov    %eax,-0x6000(%rsp)
  0x00000000032a9907: push   %rbp
  0x00000000032a9908: sub    $0x80,%rsp
  0x00000000032a990f: movabs $0x1c342df8,%rsi   ;   {metadata(method data for {method} {0x000000001c236db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a9919: mov    0xdc(%rsi),%edi
  0x00000000032a991f: add    $0x8,%edi
  0x00000000032a9922: mov    %edi,0xdc(%rsi)
  0x00000000032a9928: movabs $0x1c236da8,%rsi   ;   {metadata({method} {0x000000001c236db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a9932: and    $0x1ff8,%edi
  0x00000000032a9938: cmp    $0x0,%edi
  0x00000000032a993b: je     0x00000000032a9b6b  ;*aload_0
                                                ; - java.util.HashMap::put@0 (line 611)

  0x00000000032a9941: movabs $0x1c342df8,%rsi   ;   {metadata(method data for {method} {0x000000001c236db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a994b: addq   $0x1,0x108(%rsi)
  0x00000000032a9953: movabs $0x1c33d8d8,%rsi   ;   {metadata(method data for {method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a995d: mov    0xdc(%rsi),%edi
  0x00000000032a9963: add    $0x8,%edi
  0x00000000032a9966: mov    %edi,0xdc(%rsi)
  0x00000000032a996c: movabs $0x1c2362b8,%rsi   ;   {metadata({method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a9976: and    $0x7ffff8,%edi
  0x00000000032a997c: cmp    $0x0,%edi
  0x00000000032a997f: je     0x00000000032a9b82
  0x00000000032a9985: cmp    $0x0,%r8
  0x00000000032a9989: movabs $0x1c33d8d8,%rsi   ;   {metadata(method data for {method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a9993: movabs $0x108,%rdi
  0x00000000032a999d: jne    0x00000000032a99ad
  0x00000000032a99a3: movabs $0x118,%rdi
  0x00000000032a99ad: mov    (%rsi,%rdi,1),%rbx
  0x00000000032a99b1: lea    0x1(%rbx),%rbx
  0x00000000032a99b5: mov    %rbx,(%rsi,%rdi,1)
  0x00000000032a99b9: jne    0x00000000032a99e8  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00000000032a99bf: movabs $0x1c33d8d8,%rsi   ;   {metadata(method data for {method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a99c9: incl   0x128(%rsi)
  0x00000000032a99cf: mov    $0x0,%esi
  0x00000000032a99d4: mov    %r9,0x68(%rsp)
  0x00000000032a99d9: mov    %r8,0x60(%rsp)
  0x00000000032a99de: mov    %rdx,0x58(%rsp)
  0x00000000032a99e3: jmpq   0x00000000032a9aa9  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00000000032a99e8: mov    %r9,0x68(%rsp)
  0x00000000032a99ed: mov    %rdx,0x58(%rsp)
  0x00000000032a99f2: cmp    (%r8),%rax         ; implicit exception: dispatches to 0x00000000032a9b99
  0x00000000032a99f5: mov    %r8,%rsi
  0x00000000032a99f8: movabs $0x1c33d8d8,%rdi   ;   {metadata(method data for {method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a9a02: mov    0x8(%rsi),%esi
  0x00000000032a9a05: shl    $0x3,%rsi
  0x00000000032a9a09: cmp    0x148(%rdi),%rsi
  0x00000000032a9a10: jne    0x00000000032a9a1f
  0x00000000032a9a12: addq   $0x1,0x150(%rdi)
  0x00000000032a9a1a: jmpq   0x00000000032a9a85
  0x00000000032a9a1f: cmp    0x158(%rdi),%rsi
  0x00000000032a9a26: jne    0x00000000032a9a35
  0x00000000032a9a28: addq   $0x1,0x160(%rdi)
  0x00000000032a9a30: jmpq   0x00000000032a9a85
  0x00000000032a9a35: cmpq   $0x0,0x148(%rdi)
  0x00000000032a9a40: jne    0x00000000032a9a59
  0x00000000032a9a42: mov    %rsi,0x148(%rdi)
  0x00000000032a9a49: movq   $0x1,0x150(%rdi)
  0x00000000032a9a54: jmpq   0x00000000032a9a85
  0x00000000032a9a59: cmpq   $0x0,0x158(%rdi)
  0x00000000032a9a64: jne    0x00000000032a9a7d
  0x00000000032a9a66: mov    %rsi,0x158(%rdi)
  0x00000000032a9a6d: movq   $0x1,0x160(%rdi)
  0x00000000032a9a78: jmpq   0x00000000032a9a85
  0x00000000032a9a7d: addq   $0x1,0x140(%rdi)
  0x00000000032a9a85: mov    %r8,%rdx           ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00000000032a9a88: mov    %r8,0x60(%rsp)
  0x00000000032a9a8d: movabs $0xffffffffffffffff,%rax
  0x00000000032a9a97: callq  0x00000000031d63e0  ; OopMap{[88]=Oop [104]=Oop [96]=Oop off=444}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {virtual_call}
  0x00000000032a9a9c: mov    %rax,%r8
  0x00000000032a9a9f: shr    $0x10,%r8d
  0x00000000032a9aa3: xor    %rax,%r8
  0x00000000032a9aa6: mov    %r8,%rsi           ;*ireturn
                                                ; - java.util.HashMap::hash@19 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)

  0x00000000032a9aa9: mov    0x68(%rsp),%rdi
  0x00000000032a9aae: mov    0x60(%rsp),%r9
  0x00000000032a9ab3: mov    0x58(%rsp),%rdx
  0x00000000032a9ab8: mov    %rdx,%r8
  0x00000000032a9abb: movabs $0x1c342df8,%rcx   ;   {metadata(method data for {method} {0x000000001c236db0} &apos;put&apos; &apos;(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032a9ac5: mov    0x8(%r8),%r8d
  0x00000000032a9ac9: shl    $0x3,%r8
  0x00000000032a9acd: cmp    0x120(%rcx),%r8
  0x00000000032a9ad4: jne    0x00000000032a9ae3
  0x00000000032a9ad6: addq   $0x1,0x128(%rcx)
  0x00000000032a9ade: jmpq   0x00000000032a9b49
  0x00000000032a9ae3: cmp    0x130(%rcx),%r8
  0x00000000032a9aea: jne    0x00000000032a9af9
  0x00000000032a9aec: addq   $0x1,0x138(%rcx)
  0x00000000032a9af4: jmpq   0x00000000032a9b49
  0x00000000032a9af9: cmpq   $0x0,0x120(%rcx)
  0x00000000032a9b04: jne    0x00000000032a9b1d
  0x00000000032a9b06: mov    %r8,0x120(%rcx)
  0x00000000032a9b0d: movq   $0x1,0x128(%rcx)
  0x00000000032a9b18: jmpq   0x00000000032a9b49
  0x00000000032a9b1d: cmpq   $0x0,0x130(%rcx)
  0x00000000032a9b28: jne    0x00000000032a9b41
  0x00000000032a9b2a: mov    %r8,0x130(%rcx)
  0x00000000032a9b31: movq   $0x1,0x138(%rcx)
  0x00000000032a9b3c: jmpq   0x00000000032a9b49
  0x00000000032a9b41: addq   $0x1,0x118(%rcx)
  0x00000000032a9b49: mov    %rsi,%r8
  0x00000000032a9b4c: mov    $0x0,%esi
  0x00000000032a9b51: mov    $0x1,%ecx          ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 611)

  0x00000000032a9b56: nop
  0x00000000032a9b57: callq  0x00000000031d61a0  ; OopMap{off=636}
                                                ;*invokevirtual putVal
                                                ; - java.util.HashMap::put@9 (line 611)
                                                ;   {optimized virtual_call}
  0x00000000032a9b5c: add    $0x80,%rsp
  0x00000000032a9b63: pop    %rbp
  0x00000000032a9b64: test   %eax,-0x9b9a6a(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032a9b6a: retq   
  0x00000000032a9b6b: mov    %rsi,0x8(%rsp)
  0x00000000032a9b70: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032a9b78: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop r9=Oop off=669}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::put@-1 (line 611)
                                                ;   {runtime_call}
  0x00000000032a9b7d: jmpq   0x00000000032a9941
  0x00000000032a9b82: mov    %rsi,0x8(%rsp)
  0x00000000032a9b87: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032a9b8f: callq  0x0000000003291d60  ; OopMap{rdx=Oop r8=Oop r9=Oop off=692}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x00000000032a9b94: jmpq   0x00000000032a9985
  0x00000000032a9b99: callq  0x000000000328d680  ; OopMap{r8=Oop [88]=Oop [104]=Oop off=702}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; - java.util.HashMap::put@2 (line 611)
                                                ;   {runtime_call}
  0x00000000032a9b9e: nop
  0x00000000032a9b9f: nop
  0x00000000032a9ba0: mov    0x2a8(%r15),%rax
  0x00000000032a9ba7: movabs $0x0,%r10
  0x00000000032a9bb1: mov    %r10,0x2a8(%r15)
  0x00000000032a9bb8: movabs $0x0,%r10
  0x00000000032a9bc2: mov    %r10,0x2b0(%r15)
  0x00000000032a9bc9: add    $0x80,%rsp
  0x00000000032a9bd0: pop    %rbp
  0x00000000032a9bd1: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032a9bd6: hlt    
  0x00000000032a9bd7: hlt    
  0x00000000032a9bd8: hlt    
  0x00000000032a9bd9: hlt    
  0x00000000032a9bda: hlt    
  0x00000000032a9bdb: hlt    
  0x00000000032a9bdc: hlt    
  0x00000000032a9bdd: hlt    
  0x00000000032a9bde: hlt    
  0x00000000032a9bdf: hlt    
[Stub Code]
  0x00000000032a9be0: nop                       ;   {no_reloc}
  0x00000000032a9be1: nop
  0x00000000032a9be2: nop
  0x00000000032a9be3: nop
  0x00000000032a9be4: nop
  0x00000000032a9be5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a9bef: jmpq   0x00000000032a9bef  ;   {runtime_call}
  0x00000000032a9bf4: nop
  0x00000000032a9bf5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032a9bff: jmpq   0x00000000032a9bff  ;   {runtime_call}
[Exception Handler]
  0x00000000032a9c04: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032a9c09: mov    %rsp,-0x28(%rsp)
  0x00000000032a9c0e: sub    $0x80,%rsp
  0x00000000032a9c15: mov    %rax,0x78(%rsp)
  0x00000000032a9c1a: mov    %rcx,0x70(%rsp)
  0x00000000032a9c1f: mov    %rdx,0x68(%rsp)
  0x00000000032a9c24: mov    %rbx,0x60(%rsp)
  0x00000000032a9c29: mov    %rbp,0x50(%rsp)
  0x00000000032a9c2e: mov    %rsi,0x48(%rsp)
  0x00000000032a9c33: mov    %rdi,0x40(%rsp)
  0x00000000032a9c38: mov    %r8,0x38(%rsp)
  0x00000000032a9c3d: mov    %r9,0x30(%rsp)
  0x00000000032a9c42: mov    %r10,0x28(%rsp)
  0x00000000032a9c47: mov    %r11,0x20(%rsp)
  0x00000000032a9c4c: mov    %r12,0x18(%rsp)
  0x00000000032a9c51: mov    %r13,0x10(%rsp)
  0x00000000032a9c56: mov    %r14,0x8(%rsp)
  0x00000000032a9c5b: mov    %r15,(%rsp)
  0x00000000032a9c5f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032a9c69: movabs $0x32a9c09,%rdx    ;   {internal_word}
  0x00000000032a9c73: mov    %rsp,%r8
  0x00000000032a9c76: and    $0xfffffffffffffff0,%rsp
  0x00000000032a9c7a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032a9c7f: hlt    
[Deopt Handler Code]
  0x00000000032a9c80: movabs $0x32a9c80,%r10    ;   {section_word}
  0x00000000032a9c8a: push   %r10
  0x00000000032a9c8c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a9c91: hlt    
  0x00000000032a9c92: hlt    
  0x00000000032a9c93: hlt    
  0x00000000032a9c94: hlt    
  0x00000000032a9c95: hlt    
  0x00000000032a9c96: hlt    
  0x00000000032a9c97: hlt    
<nmethod compile_id='18' compiler='C1' level='3' entry='0x00000000032a98e0' size='1752' address='0x00000000032a9750' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1368' scopes_pcs_offset='1520' dependencies_offset='1728' nul_chk_table_offset='1736' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1439' iicount='1439' stamp='0.673'/>
<writer thread='4332'/>
Decoding compiled method 0x00000000032afed0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c1d01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;
  0x00000000032b0020: int3   
  0x00000000032b0021: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b002c: data16 data16 xchg %ax,%ax
  0x00000000032b0030: mov    %eax,-0x6000(%rsp)
  0x00000000032b0037: push   %rbp
  0x00000000032b0038: sub    $0x50,%rsp
  0x00000000032b003c: mov    0x8(%rdx),%ebp
  0x00000000032b003f: mov    0x28(%rdx),%r14
  0x00000000032b0043: mov    0x20(%rdx),%r13
  0x00000000032b0047: mov    0x10(%rdx),%rbx
  0x00000000032b004b: mov    %rdx,%rcx
  0x00000000032b004e: movabs $0x5590be80,%r10
  0x00000000032b0058: callq  *%r10
  0x00000000032b005b: mov    0x8(%r14),%r10d    ; implicit exception: dispatches to 0x00000000032b00bd
  0x00000000032b005f: cmp    $0xf8001bd5,%r10d  ;   {metadata(&apos;sun/misc/Unsafe&apos;)}
  0x00000000032b0066: jne    0x00000000032b00a3  ;*aload_0
                                                ; - sun.misc.Unsafe::getAndAddInt@0 (line 1034)

  0x00000000032b0068: mov    %r13,%r10
  0x00000000032b006b: add    %rbx,%r10          ;*invokevirtual getIntVolatile
                                                ; - sun.misc.Unsafe::getAndAddInt@3 (line 1034)

  0x00000000032b006e: xchg   %ax,%ax
  0x00000000032b0070: mov    (%r10),%r9d
  0x00000000032b0073: mov    %r9d,%r8d
  0x00000000032b0076: add    %ebp,%r8d
  0x00000000032b0079: mov    %r9d,%eax
  0x00000000032b007c: lock cmpxchg %r8d,(%r10)
  0x00000000032b0081: sete   %r8b
  0x00000000032b0085: movzbl %r8b,%r8d          ; OopMap{r10=Derived_oop_r13 r13=Oop r14=Oop off=105}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x00000000032b0089: test   %eax,-0x9c008f(%rip)        # 0x00000000028f0000
                                                ;   {poll}
  0x00000000032b008f: test   %r8d,%r8d
  0x00000000032b0092: je     0x00000000032b0070  ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x00000000032b0094: mov    %r9d,%eax
  0x00000000032b0097: add    $0x50,%rsp
  0x00000000032b009b: pop    %rbp
  0x00000000032b009c: test   %eax,-0x9c00a2(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032b00a2: retq   
  0x00000000032b00a3: mov    $0xffffff9d,%edx
  0x00000000032b00a8: mov    %r14,0x20(%rsp)
  0x00000000032b00ad: mov    %r13,0x28(%rsp)
  0x00000000032b00b2: mov    %rbx,0x30(%rsp)
  0x00000000032b00b7: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [40]=Oop off=156}
                                                ;*aload_0
                                                ; - sun.misc.Unsafe::getAndAddInt@0 (line 1034)
                                                ;   {runtime_call}
  0x00000000032b00bc: int3   
  0x00000000032b00bd: mov    $0xffffff86,%edx
  0x00000000032b00c2: mov    %r13,0x20(%rsp)
  0x00000000032b00c7: mov    %rbx,0x28(%rsp)
  0x00000000032b00cc: data16 xchg %ax,%ax
  0x00000000032b00cf: callq  0x00000000031d57a0  ; OopMap{[32]=Oop off=180}
                                                ;*aload_0
                                                ; - sun.misc.Unsafe::getAndAddInt@0 (line 1034)
                                                ;   {runtime_call}
  0x00000000032b00d4: int3                      ;*aload_0
                                                ; - sun.misc.Unsafe::getAndAddInt@0 (line 1034)

  0x00000000032b00d5: hlt    
  0x00000000032b00d6: hlt    
  0x00000000032b00d7: hlt    
  0x00000000032b00d8: hlt    
  0x00000000032b00d9: hlt    
  0x00000000032b00da: hlt    
  0x00000000032b00db: hlt    
  0x00000000032b00dc: hlt    
  0x00000000032b00dd: hlt    
  0x00000000032b00de: hlt    
  0x00000000032b00df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032b00e0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032b00e5: callq  0x00000000032b00ea
  0x00000000032b00ea: subq   $0x5,(%rsp)
  0x00000000032b00ef: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b00f4: hlt    
  0x00000000032b00f5: hlt    
  0x00000000032b00f6: hlt    
  0x00000000032b00f7: hlt    
<nmethod compile_id='61' compile_kind='osr' compiler='C2' level='4' entry='0x00000000032b0020' size='832' address='0x00000000032afed0' relocation_offset='288' insts_offset='336' stub_offset='528' scopes_data_offset='568' scopes_pcs_offset='664' dependencies_offset='808' nul_chk_table_offset='816' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='191842' backedge_count='494069' iicount='191842' stamp='0.675'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032a9250:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c212370} &apos;size&apos; &apos;()I&apos; in &apos;java/util/Vector&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032a93a0: mov    0x8(%rdx),%r10d
  0x00000000032a93a4: shl    $0x3,%r10
  0x00000000032a93a8: cmp    %rax,%r10
  0x00000000032a93ab: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032a93b1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032a93bc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032a93c0: mov    %eax,-0x6000(%rsp)
  0x00000000032a93c7: push   %rbp
  0x00000000032a93c8: sub    $0x40,%rsp
  0x00000000032a93cc: lea    0x20(%rsp),%rsi
  0x00000000032a93d1: mov    %rdx,0x8(%rsi)
  0x00000000032a93d5: mov    (%rdx),%rax
  0x00000000032a93d8: mov    %rax,%rdi
  0x00000000032a93db: and    $0x7,%rdi
  0x00000000032a93df: cmp    $0x5,%rdi
  0x00000000032a93e3: jne    0x00000000032a946a
  0x00000000032a93e9: mov    0x8(%rdx),%edi
  0x00000000032a93ec: shl    $0x3,%rdi
  0x00000000032a93f0: mov    0xa8(%rdi),%rdi
  0x00000000032a93f7: or     %r15,%rdi
  0x00000000032a93fa: xor    %rax,%rdi
  0x00000000032a93fd: and    $0xffffffffffffff87,%rdi
  0x00000000032a9401: je     0x00000000032a9492
  0x00000000032a9407: test   $0x7,%rdi
  0x00000000032a940e: jne    0x00000000032a9457
  0x00000000032a9410: test   $0x300,%rdi
  0x00000000032a9417: jne    0x00000000032a9436
  0x00000000032a9419: and    $0x37f,%rax
  0x00000000032a9420: mov    %rax,%rdi
  0x00000000032a9423: or     %r15,%rdi
  0x00000000032a9426: lock cmpxchg %rdi,(%rdx)
  0x00000000032a942b: jne    0x00000000032a94d5
  0x00000000032a9431: jmpq   0x00000000032a9492
  0x00000000032a9436: mov    0x8(%rdx),%edi
  0x00000000032a9439: shl    $0x3,%rdi
  0x00000000032a943d: mov    0xa8(%rdi),%rdi
  0x00000000032a9444: or     %r15,%rdi
  0x00000000032a9447: lock cmpxchg %rdi,(%rdx)
  0x00000000032a944c: jne    0x00000000032a94d5
  0x00000000032a9452: jmpq   0x00000000032a9492
  0x00000000032a9457: mov    0x8(%rdx),%edi
  0x00000000032a945a: shl    $0x3,%rdi
  0x00000000032a945e: mov    0xa8(%rdi),%rdi
  0x00000000032a9465: lock cmpxchg %rdi,(%rdx)
  0x00000000032a946a: mov    (%rdx),%rax
  0x00000000032a946d: or     $0x1,%rax
  0x00000000032a9471: mov    %rax,(%rsi)
  0x00000000032a9474: lock cmpxchg %rsi,(%rdx)
  0x00000000032a9479: je     0x00000000032a9492
  0x00000000032a947f: sub    %rsp,%rax
  0x00000000032a9482: and    $0xfffffffffffff007,%rax
  0x00000000032a9489: mov    %rax,(%rsi)
  0x00000000032a948c: jne    0x00000000032a94d5  ;*aload_0
                                                ; - java.util.Vector::size@0 (line 315)

  0x00000000032a9492: mov    0x10(%rdx),%esi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)

  0x00000000032a9495: lea    0x20(%rsp),%rax
  0x00000000032a949a: mov    0x8(%rax),%rbx
  0x00000000032a949e: mov    (%rbx),%rdi
  0x00000000032a94a1: and    $0x7,%rdi
  0x00000000032a94a5: cmp    $0x5,%rdi
  0x00000000032a94a9: je     0x00000000032a94c6
  0x00000000032a94af: mov    (%rax),%rdi
  0x00000000032a94b2: test   %rdi,%rdi
  0x00000000032a94b5: je     0x00000000032a94c6
  0x00000000032a94bb: lock cmpxchg %rdi,(%rbx)
  0x00000000032a94c0: jne    0x00000000032a94e5  ;*ireturn
                                                ; - java.util.Vector::size@4 (line 315)

  0x00000000032a94c6: mov    %rsi,%rax
  0x00000000032a94c9: add    $0x40,%rsp
  0x00000000032a94cd: pop    %rbp
  0x00000000032a94ce: test   %eax,-0x9b93d4(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032a94d4: retq   
  0x00000000032a94d5: mov    %rdx,0x8(%rsp)
  0x00000000032a94da: mov    %rsi,(%rsp)
  0x00000000032a94de: callq  0x0000000003290060  ; OopMap{rdx=Oop [40]=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ;   {runtime_call}
  0x00000000032a94e3: jmp    0x00000000032a9492
  0x00000000032a94e5: lea    0x20(%rsp),%rax
  0x00000000032a94ea: mov    %rax,(%rsp)
  0x00000000032a94ee: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032a94f3: jmp    0x00000000032a94c6
  0x00000000032a94f5: nop
  0x00000000032a94f6: nop
  0x00000000032a94f7: mov    0x2a8(%r15),%rax
  0x00000000032a94fe: movabs $0x0,%r10
  0x00000000032a9508: mov    %r10,0x2a8(%r15)
  0x00000000032a950f: movabs $0x0,%r10
  0x00000000032a9519: mov    %r10,0x2b0(%r15)
  0x00000000032a9520: mov    %rax,%rbx
  0x00000000032a9523: lea    0x20(%rsp),%rax
  0x00000000032a9528: mov    0x8(%rax),%rsi
  0x00000000032a952c: mov    (%rsi),%rdi
  0x00000000032a952f: and    $0x7,%rdi
  0x00000000032a9533: cmp    $0x5,%rdi
  0x00000000032a9537: je     0x00000000032a9554
  0x00000000032a953d: mov    (%rax),%rdi
  0x00000000032a9540: test   %rdi,%rdi
  0x00000000032a9543: je     0x00000000032a9554
  0x00000000032a9549: lock cmpxchg %rdi,(%rsi)
  0x00000000032a954e: jne    0x00000000032a9561
  0x00000000032a9554: mov    %rbx,%rax
  0x00000000032a9557: add    $0x40,%rsp
  0x00000000032a955b: pop    %rbp
  0x00000000032a955c: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032a9561: lea    0x20(%rsp),%rax
  0x00000000032a9566: mov    %rax,(%rsp)
  0x00000000032a956a: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032a956f: jmp    0x00000000032a9554
  0x00000000032a9571: hlt    
  0x00000000032a9572: hlt    
  0x00000000032a9573: hlt    
  0x00000000032a9574: hlt    
  0x00000000032a9575: hlt    
  0x00000000032a9576: hlt    
  0x00000000032a9577: hlt    
  0x00000000032a9578: hlt    
  0x00000000032a9579: hlt    
  0x00000000032a957a: hlt    
  0x00000000032a957b: hlt    
  0x00000000032a957c: hlt    
  0x00000000032a957d: hlt    
  0x00000000032a957e: hlt    
  0x00000000032a957f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032a9580: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032a9585: mov    %rsp,-0x28(%rsp)
  0x00000000032a958a: sub    $0x80,%rsp
  0x00000000032a9591: mov    %rax,0x78(%rsp)
  0x00000000032a9596: mov    %rcx,0x70(%rsp)
  0x00000000032a959b: mov    %rdx,0x68(%rsp)
  0x00000000032a95a0: mov    %rbx,0x60(%rsp)
  0x00000000032a95a5: mov    %rbp,0x50(%rsp)
  0x00000000032a95aa: mov    %rsi,0x48(%rsp)
  0x00000000032a95af: mov    %rdi,0x40(%rsp)
  0x00000000032a95b4: mov    %r8,0x38(%rsp)
  0x00000000032a95b9: mov    %r9,0x30(%rsp)
  0x00000000032a95be: mov    %r10,0x28(%rsp)
  0x00000000032a95c3: mov    %r11,0x20(%rsp)
  0x00000000032a95c8: mov    %r12,0x18(%rsp)
  0x00000000032a95cd: mov    %r13,0x10(%rsp)
  0x00000000032a95d2: mov    %r14,0x8(%rsp)
  0x00000000032a95d7: mov    %r15,(%rsp)
  0x00000000032a95db: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032a95e5: movabs $0x32a9585,%rdx    ;   {internal_word}
  0x00000000032a95ef: mov    %rsp,%r8
  0x00000000032a95f2: and    $0xfffffffffffffff0,%rsp
  0x00000000032a95f6: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032a95fb: hlt    
[Deopt Handler Code]
  0x00000000032a95fc: movabs $0x32a95fc,%r10    ;   {section_word}
  0x00000000032a9606: push   %r10
  0x00000000032a9608: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032a960d: hlt    
  0x00000000032a960e: hlt    
  0x00000000032a960f: hlt    
<nmethod compile_id='56' compiler='C1' level='1' entry='0x00000000032a93a0' size='1112' address='0x00000000032a9250' relocation_offset='288' insts_offset='336' stub_offset='816' scopes_data_offset='968' scopes_pcs_offset='1008' dependencies_offset='1104' method='java/util/Vector size ()I' bytes='5' count='1025' iicount='1025' stamp='0.679'/>
Decoding compiled method 0x00000000032b17d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c18cc70} &apos;getName&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/reflect/Field&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000032b1920: mov    0x8(%rdx),%r10d
  0x00000000032b1924: shl    $0x3,%r10
  0x00000000032b1928: cmp    %rax,%r10
  0x00000000032b192b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b1931: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b193c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b1940: mov    %eax,-0x6000(%rsp)
  0x00000000032b1947: push   %rbp
  0x00000000032b1948: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.reflect.Field::getName@0 (line 171)

  0x00000000032b194c: mov    0x20(%rdx),%eax
  0x00000000032b194f: shl    $0x3,%rax          ;*getfield name
                                                ; - java.lang.reflect.Field::getName@1 (line 171)

  0x00000000032b1953: add    $0x30,%rsp
  0x00000000032b1957: pop    %rbp
  0x00000000032b1958: test   %eax,-0x9c185e(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b195e: retq   
  0x00000000032b195f: nop
  0x00000000032b1960: nop
  0x00000000032b1961: mov    0x2a8(%r15),%rax
  0x00000000032b1968: movabs $0x0,%r10
  0x00000000032b1972: mov    %r10,0x2a8(%r15)
  0x00000000032b1979: movabs $0x0,%r10
  0x00000000032b1983: mov    %r10,0x2b0(%r15)
  0x00000000032b198a: add    $0x30,%rsp
  0x00000000032b198e: pop    %rbp
  0x00000000032b198f: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032b1994: hlt    
  0x00000000032b1995: hlt    
  0x00000000032b1996: hlt    
  0x00000000032b1997: hlt    
  0x00000000032b1998: hlt    
  0x00000000032b1999: hlt    
  0x00000000032b199a: hlt    
  0x00000000032b199b: hlt    
  0x00000000032b199c: hlt    
  0x00000000032b199d: hlt    
  0x00000000032b199e: hlt    
  0x00000000032b199f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032b19a0: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032b19a5: mov    %rsp,-0x28(%rsp)
  0x00000000032b19aa: sub    $0x80,%rsp
  0x00000000032b19b1: mov    %rax,0x78(%rsp)
  0x00000000032b19b6: mov    %rcx,0x70(%rsp)
  0x00000000032b19bb: mov    %rdx,0x68(%rsp)
  0x00000000032b19c0: mov    %rbx,0x60(%rsp)
  0x00000000032b19c5: mov    %rbp,0x50(%rsp)
  0x00000000032b19ca: mov    %rsi,0x48(%rsp)
  0x00000000032b19cf: mov    %rdi,0x40(%rsp)
  0x00000000032b19d4: mov    %r8,0x38(%rsp)
  0x00000000032b19d9: mov    %r9,0x30(%rsp)
  0x00000000032b19de: mov    %r10,0x28(%rsp)
  0x00000000032b19e3: mov    %r11,0x20(%rsp)
  0x00000000032b19e8: mov    %r12,0x18(%rsp)
  0x00000000032b19ed: mov    %r13,0x10(%rsp)
  0x00000000032b19f2: mov    %r14,0x8(%rsp)
  0x00000000032b19f7: mov    %r15,(%rsp)
  0x00000000032b19fb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032b1a05: movabs $0x32b19a5,%rdx    ;   {internal_word}
  0x00000000032b1a0f: mov    %rsp,%r8
  0x00000000032b1a12: and    $0xfffffffffffffff0,%rsp
  0x00000000032b1a16: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032b1a1b: hlt    
[Deopt Handler Code]
  0x00000000032b1a1c: movabs $0x32b1a1c,%r10    ;   {section_word}
  0x00000000032b1a26: push   %r10
  0x00000000032b1a28: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b1a2d: hlt    
  0x00000000032b1a2e: hlt    
  0x00000000032b1a2f: hlt    
<nmethod compile_id='59' compiler='C1' level='1' entry='0x00000000032b1920' size='704' address='0x00000000032b17d0' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='314' iicount='314' stamp='0.682'/>
<writer thread='12152'/>
<task_queued compile_id='62' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='195025' iicount='195025' level='1' stamp='0.702' comment='tiered' hot_count='194548'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032b1510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c252890} &apos;getAndIncrement&apos; &apos;()I&apos; in &apos;java/util/concurrent/atomic/AtomicInteger&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032b1660: mov    0x8(%rdx),%r10d
  0x00000000032b1664: shl    $0x3,%r10
  0x00000000032b1668: cmp    %rax,%r10
  0x00000000032b166b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b1671: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b167c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b1680: mov    %eax,-0x6000(%rsp)
  0x00000000032b1687: push   %rbp
  0x00000000032b1688: sub    $0x40,%rsp         ;*getstatic unsafe
                                                ; - java.util.concurrent.atomic.AtomicInteger::getAndIncrement@0 (line 158)

  0x00000000032b168c: mov    $0x1,%eax
  0x00000000032b1691: lock xadd %eax,0xc(%rdx)
  0x00000000032b1696: add    $0x40,%rsp
  0x00000000032b169a: pop    %rbp
  0x00000000032b169b: test   %eax,-0x9c15a1(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b16a1: retq   
  0x00000000032b16a2: nop
  0x00000000032b16a3: nop
  0x00000000032b16a4: mov    0x2a8(%r15),%rax
  0x00000000032b16ab: movabs $0x0,%r10
  0x00000000032b16b5: mov    %r10,0x2a8(%r15)
  0x00000000032b16bc: movabs $0x0,%r10
  0x00000000032b16c6: mov    %r10,0x2b0(%r15)
  0x00000000032b16cd: add    $0x40,%rsp
  0x00000000032b16d1: pop    %rbp
  0x00000000032b16d2: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032b16d7: hlt    
  0x00000000032b16d8: hlt    
  0x00000000032b16d9: hlt    
  0x00000000032b16da: hlt    
  0x00000000032b16db: hlt    
  0x00000000032b16dc: hlt    
  0x00000000032b16dd: hlt    
  0x00000000032b16de: hlt    
  0x00000000032b16df: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032b16e0: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032b16e5: mov    %rsp,-0x28(%rsp)
  0x00000000032b16ea: sub    $0x80,%rsp
  0x00000000032b16f1: mov    %rax,0x78(%rsp)
  0x00000000032b16f6: mov    %rcx,0x70(%rsp)
  0x00000000032b16fb: mov    %rdx,0x68(%rsp)
  0x00000000032b1700: mov    %rbx,0x60(%rsp)
  0x00000000032b1705: mov    %rbp,0x50(%rsp)
  0x00000000032b170a: mov    %rsi,0x48(%rsp)
  0x00000000032b170f: mov    %rdi,0x40(%rsp)
  0x00000000032b1714: mov    %r8,0x38(%rsp)
  0x00000000032b1719: mov    %r9,0x30(%rsp)
  0x00000000032b171e: mov    %r10,0x28(%rsp)
  0x00000000032b1723: mov    %r11,0x20(%rsp)
  0x00000000032b1728: mov    %r12,0x18(%rsp)
  0x00000000032b172d: mov    %r13,0x10(%rsp)
  0x00000000032b1732: mov    %r14,0x8(%rsp)
  0x00000000032b1737: mov    %r15,(%rsp)
  0x00000000032b173b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032b1745: movabs $0x32b16e5,%rdx    ;   {internal_word}
  0x00000000032b174f: mov    %rsp,%r8
  0x00000000032b1752: and    $0xfffffffffffffff0,%rsp
  0x00000000032b1756: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032b175b: hlt    
[Deopt Handler Code]
  0x00000000032b175c: movabs $0x32b175c,%r10    ;   {section_word}
  0x00000000032b1766: push   %r10
  0x00000000032b1768: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b176d: hlt    
  0x00000000032b176e: hlt    
  0x00000000032b176f: hlt    
<nmethod compile_id='62' compiler='C1' level='1' entry='0x00000000032b1660' size='680' address='0x00000000032b1510' relocation_offset='288' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='196048' iicount='196048' stamp='0.705'/>
<make_not_entrant thread='23880' compile_id='52' compiler='C1' level='2' stamp='0.705'/>
<writer thread='8664'/>
<task_queued compile_id='63' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='191842' backedge_count='495716' iicount='191842' stamp='0.713' comment='tiered' hot_count='191842'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032b1e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1d01b8} &apos;getAndAddInt&apos; &apos;(Ljava/lang/Object;JI)I&apos; in &apos;sun/misc/Unsafe&apos;
  # this:     rdx:rdx   = &apos;sun/misc/Unsafe&apos;
  # parm0:    r8:r8     = &apos;java/lang/Object&apos;
  # parm1:    r9:r9     = long
  # parm2:    rdi       = int
  #           [sp+0x20]  (sp of caller)
  0x00000000032b1fc0: mov    0x8(%rdx),%r10d
  0x00000000032b1fc4: shl    $0x3,%r10
  0x00000000032b1fc8: cmp    %r10,%rax
  0x00000000032b1fcb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b1fd1: data16 xchg %ax,%ax
  0x00000000032b1fd4: nopl   0x0(%rax,%rax,1)
  0x00000000032b1fdc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b1fe0: sub    $0x18,%rsp
  0x00000000032b1fe7: mov    %rbp,0x10(%rsp)
  0x00000000032b1fec: mov    %r8,%r11
  0x00000000032b1fef: add    %r9,%r11
  0x00000000032b1ff2: mov    (%r11),%r10d
  0x00000000032b1ff5: mov    %edi,%ebx
  0x00000000032b1ff7: add    %r10d,%ebx
  0x00000000032b1ffa: mov    %r10d,%eax
  0x00000000032b1ffd: lock cmpxchg %ebx,(%r11)
  0x00000000032b2002: sete   %cl
  0x00000000032b2005: movzbl %cl,%ecx           ;*invokevirtual compareAndSwapInt
                                                ; - sun.misc.Unsafe::getAndAddInt@18 (line 1035)

  0x00000000032b2008: test   %ecx,%ecx
  0x00000000032b200a: jne    0x00000000032b2030  ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x00000000032b200c: nopl   0x0(%rax)
  0x00000000032b2010: mov    (%r11),%r10d
  0x00000000032b2013: mov    %r10d,%ebx
  0x00000000032b2016: add    %edi,%ebx
  0x00000000032b2018: mov    %r10d,%eax
  0x00000000032b201b: lock cmpxchg %ebx,(%r11)
  0x00000000032b2020: sete   %bl
  0x00000000032b2023: movzbl %bl,%ebx           ; OopMap{r11=Derived_oop_r8 r8=Oop rdx=Oop off=102}
                                                ;*ifeq
                                                ; - sun.misc.Unsafe::getAndAddInt@21 (line 1035)

  0x00000000032b2026: test   %eax,-0x9c202c(%rip)        # 0x00000000028f0000
                                                ;   {poll}
  0x00000000032b202c: test   %ebx,%ebx
  0x00000000032b202e: je     0x00000000032b2010  ;*iload
                                                ; - sun.misc.Unsafe::getAndAddInt@24 (line 1036)

  0x00000000032b2030: mov    %r10d,%eax
  0x00000000032b2033: add    $0x10,%rsp
  0x00000000032b2037: pop    %rbp
  0x00000000032b2038: test   %eax,-0x9c203e(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032b203e: retq   
  0x00000000032b203f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032b2040: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032b2045: callq  0x00000000032b204a
  0x00000000032b204a: subq   $0x5,(%rsp)
  0x00000000032b204f: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b2054: hlt    
  0x00000000032b2055: hlt    
  0x00000000032b2056: hlt    
  0x00000000032b2057: hlt    
<nmethod compile_id='63' compiler='C2' level='4' entry='0x00000000032b1fc0' size='616' address='0x00000000032b1e90' relocation_offset='288' insts_offset='304' stub_offset='432' scopes_data_offset='464' scopes_pcs_offset='512' dependencies_offset='608' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='191842' backedge_count='495716' iicount='191842' stamp='0.716'/>
<make_not_entrant thread='26572' compile_id='55' compiler='C1' level='2' stamp='0.716'/>
<writer thread='28320'/>
<uncommon_trap thread='28320' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' stamp='0.764'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12'/>
</uncommon_trap>
<make_not_entrant thread='28320' compile_id='58' compile_kind='osr' compiler='C2' level='4' stamp='0.764'/>
<writer thread='25548'/>
Decoding compiled method 0x00000000032bb350:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c2c9d58} &apos;normalize&apos; &apos;(Ljava/lang/String;)Ljava/lang/String;&apos; in &apos;java/io/WinNTFileSystem&apos;
  # this:     rdx:rdx   = &apos;java/io/WinNTFileSystem&apos;
  # parm0:    r8:r8     = &apos;java/lang/String&apos;
  #           [sp+0xb0]  (sp of caller)
  0x00000000032bb620: mov    0x8(%rdx),%r10d
  0x00000000032bb624: shl    $0x3,%r10
  0x00000000032bb628: cmp    %r10,%rax
  0x00000000032bb62b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032bb631: data16 xchg %ax,%ax
  0x00000000032bb634: nopl   0x0(%rax,%rax,1)
  0x00000000032bb63c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032bb640: mov    %eax,-0x6000(%rsp)
  0x00000000032bb647: push   %rbp
  0x00000000032bb648: sub    $0xa0,%rsp         ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb64f: mov    %rdx,%r11
  0x00000000032bb652: mov    %r8,%rcx
  0x00000000032bb655: mov    0xc(%r8),%ebx      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000032c028d
  0x00000000032bb659: mov    0xc(%r12,%rbx,8),%r10d  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000032c0299
  0x00000000032bb65e: movzwl 0xc(%rdx),%r9d     ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb663: test   %r10d,%r10d
  0x00000000032bb666: jle    0x00000000032bcd58  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb66c: movzwl 0xe(%rdx),%r8d     ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb671: test   %r10d,%r10d
  0x00000000032bb674: jbe    0x00000000032be858  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb67a: mov    %r10d,%edx
  0x00000000032bb67d: dec    %edx               ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb67f: cmp    %r10d,%edx
  0x00000000032bb682: jae    0x00000000032be858  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb688: mov    %edx,0x20(%rsp)
  0x00000000032bb68c: mov    %r9d,0x3c(%rsp)
  0x00000000032bb691: mov    %r11,0x50(%rsp)
  0x00000000032bb696: mov    %rcx,0x40(%rsp)
  0x00000000032bb69b: movslq %r10d,%rcx
  0x00000000032bb69e: mov    %r10d,%r11d
  0x00000000032bb6a1: shl    %r11d              ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@33 (line 179)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb6a4: shl    %rcx
  0x00000000032bb6a7: mov    %r11d,%r9d
  0x00000000032bb6aa: inc    %r9d               ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb6ad: mov    %r9d,0x28(%rsp)
  0x00000000032bb6b2: add    $0x17,%rcx         ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb6b6: add    $0x2,%r11d         ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb6ba: mov    %r11d,0x24(%rsp)
  0x00000000032bb6bf: mov    %rcx,%r9
  0x00000000032bb6c2: and    $0xfffffffffffffff8,%r9  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb6c6: shr    $0x3,%rcx
  0x00000000032bb6ca: lea    (%r12,%rbx,8),%r11
  0x00000000032bb6ce: mov    %r11,0x30(%rsp)
  0x00000000032bb6d3: mov    %ebx,0x48(%rsp)
  0x00000000032bb6d7: add    $0xfffffffffffffffe,%rcx
  0x00000000032bb6db: mov    $0xf80002da,%ebx   ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032bb6e0: movabs $0x0,%r11
  0x00000000032bb6ea: lea    (%r11,%rbx,8),%r11
  0x00000000032bb6ee: mov    %r11,0x58(%rsp)
  0x00000000032bb6f3: mov    $0x2,%r11d
  0x00000000032bb6f9: cmp    %r11d,%r10d
  0x00000000032bb6fc: mov    %r10d,%r11d
  0x00000000032bb6ff: mov    $0x2,%edi
  0x00000000032bb704: cmovg  %edi,%r11d         ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb708: mov    %r11d,0x2c(%rsp)
  0x00000000032bb70d: mov    $0x1,%ebx
  0x00000000032bb712: cmp    %ebx,%r10d
  0x00000000032bb715: mov    %r10d,0x4c(%rsp)
  0x00000000032bb71a: mov    $0x1,%r11d
  0x00000000032bb720: cmovg  %r11d,%r10d        ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb724: mov    %r10d,0x38(%rsp)
  0x00000000032bb729: mov    $0x1,%r10d
  0x00000000032bb72f: sub    0x4c(%rsp),%r10d   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb734: mov    %r10d,0x60(%rsp)
  0x00000000032bb739: mov    $0x80000000,%r11d
  0x00000000032bb73f: mov    0x4c(%rsp),%ebx
  0x00000000032bb743: cmp    %edx,%ebx
  0x00000000032bb745: mov    %edx,%ebx
  0x00000000032bb747: cmovl  %r11d,%ebx         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb74b: mov    %ebx,0x64(%rsp)
  0x00000000032bb74f: xor    %r11d,%r11d
  0x00000000032bb752: xor    %edi,%edi
  0x00000000032bb754: mov    $0x2,%ebx
  0x00000000032bb759: mov    $0x1,%r10d
  0x00000000032bb75f: mov    %ebx,0x88(%rsp)
  0x00000000032bb766: mov    %r10d,0x78(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb76b: test   %r11d,%r11d
  0x00000000032bb76e: jl     0x00000000032be87d
  0x00000000032bb774: cmp    0x4c(%rsp),%r11d
  0x00000000032bb779: jge    0x00000000032be8b9
  0x00000000032bb77f: mov    0x30(%rsp),%r10
  0x00000000032bb784: movzwl 0x10(%r10,%r11,2),%ebx
  0x00000000032bb78a: cmp    %r8d,%ebx
  0x00000000032bb78d: je     0x00000000032bcd49
  0x00000000032bb793: cmp    0x3c(%rsp),%ebx
  0x00000000032bb797: je     0x00000000032bb8a1  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb79d: cmp    $0x3a,%ebx
  0x00000000032bb7a0: je     0x00000000032bc298  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb7a6: inc    %r11d
  0x00000000032bb7a9: cmp    0x38(%rsp),%r11d
  0x00000000032bb7ae: jge    0x00000000032bb7b4  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb7b0: mov    %ebx,%edi
  0x00000000032bb7b2: jmp    0x00000000032bb76b
  0x00000000032bb7b4: mov    0x2c(%rsp),%r10d
  0x00000000032bb7b9: add    $0xfffffffd,%r10d
  0x00000000032bb7bd: cmp    %r10d,%r11d
  0x00000000032bb7c0: jge    0x00000000032bc000  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb7c6: jmp    0x00000000032bb80d
  0x00000000032bb7c8: cmp    0x3c(%rsp),%ebx
  0x00000000032bb7cc: jne    0x00000000032bb827
  0x00000000032bb7ce: jmp    0x00000000032bb7de
  0x00000000032bb7d0: cmp    0x3c(%rsp),%ebx
  0x00000000032bb7d4: jne    0x00000000032bb858  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb7da: add    $0x2,%r11d         ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb7de: mov    %ebx,%r10d
  0x00000000032bb7e1: mov    %edi,%ebx
  0x00000000032bb7e3: mov    %r10d,%edi
  0x00000000032bb7e6: jmpq   0x00000000032bb877
  0x00000000032bb7eb: cmp    0x3c(%rsp),%edi
  0x00000000032bb7ef: jne    0x00000000032bb83f  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb7f1: inc    %r11d              ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb7f4: jmpq   0x00000000032bb877
  0x00000000032bb7f9: nopl   0x0(%rax)          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb800: 
<writer thread='15136'/>
<uncommon_trap thread='15136' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='1' state='intrinsic recompiled' stamp='0.796'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='1'/>
</uncommon_trap>
<writer thread='25548'/>
add    $0x4,%r11d
                                                ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb804: cmp    %r10d,%r11d
  0x00000000032bb807: jge    0x00000000032bc000  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb80d: mov    0x30(%rsp),%rdi
  0x00000000032bb812: movzwl 0x10(%rdi,%r11,2),%edi  ;*synchronization entry
                                                ; -
<writer thread='22604'/>
<uncommon_trap thread='22604' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='2' state='intrinsic recompiled' stamp='0.797'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='2'/>
</uncommon_trap>
<writer thread='25548'/>
 java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb818: cmp    %r8d,%edi
  0x00000000032bb81b: je     0x00000000032bb8ad  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb821: cmp    0x3c(%rsp),%edi
  0x00000000032bb825: je     0x00000000032bb7c8  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb827: movslq %r11d,%rdx
  0x00000000032bb82a: mov    0x30(%rsp),%rbx
  0x00000000032bb82f: movzwl 0x12(%rbx,%rdx,2),%ebx  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb834: cmp    %r8d,%ebx
  0x00000000032bb837: je     0x00000000032bb8b8  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb839: cmp    0x3c(%rsp),%ebx
  0x00000000032bb83d: je     0x00000000032bb7eb  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb83f: mov    0x30(%rsp),%rdi
  0x00000000032bb844: movzwl 0x14(%rdi,%rdx,2),%edi  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb849: cmp    %r8d,%edi
  0x00000000032bb84c: je     0x00000000032bb8c7  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb84e: cmp    0x3c(%rsp),%edi
  0x00000000032bb852: je     0x00000000032bb7d0  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb858: mov    0x30(%rsp),%rbx
  0x00000000032bb85d: movzwl 0x16(%rbx,%rdx,2),%ebx  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb862: cmp    %r8d,%ebx
  0x00000000032bb865: je     0x00000000032bb8d7  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize
<writer thread='29140'/>
<uncommon_trap thread='29140' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='3' state='intrinsic recompiled' stamp='0.820'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='3'/>
</uncommon_trap>
<writer thread='31240'/>
<uncommon_trap thread='31240' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='4' state='intrinsic recompiled' stamp='0.820'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='4'/>
</uncommon_trap>
<writer thread='23816'/>
<uncommon_trap thread='23816' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='5' state='intrinsic recompiled' stamp='0.820'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='5'/>
</uncommon_trap>
<writer thread='25548'/>
@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb867: cmp    0x3c(%rsp),%ebx
  0x00000000032bb86b: jne    0x00000000032bb800  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@49 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb86d: cmp    0x3c(%rsp),%edi
  0x00000000032bb871: jne    0x00000000032bb800  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb873: add    $0x3,%r11d         ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb877: mov    %ebx,%ebp
  0x00000000032bb879: mov    %edi,%ebx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb87b: mov    $0xffffff65,%edx
  0x00000000032bb880: mov    0x40(%rsp),%r10
  0x00000000032bb885: mov    %r10,0x20(%rsp)
  0x00000000032bb88a: mov    %r8d,0x30(%rsp)
  0x00000000032bb88f: mov    %r11d,0x34(%rsp)
  0x00000000032bb894: mov    %ebx,0x38(%rsp)
  0x00000000032bb898: data16 xchg %ax,%ax
  0x00000000032bb89b: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [80]=Oop off=640}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)
                                                ;   {runtime_call}
  0x00000000032bb8a0: int3                      ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032bb8a1: cmp    0x3c(%rsp),%edi
  0x00000000032bb8a5: jne    0x00000000032bb79d  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb8ab: jmp    0x00000000032bb877
  0x00000000032bb8ad: cmp    0x3c(%rsp),%ebx
  0x00000000032bb8b1: jne    0x00000000032bb8e5
  0x00000000032bb8b3: jmpq   0x00000000032bf058
  0x00000000032bb8b8: cmp    0x3c(%rsp),%edi
  0x00000000032bb8bc: je     0x00000000032bf05c  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb8c2: inc    %r11d              ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb8c5: jmp    0x00000000032bb8e5
  0x00000000032bb8c7: cmp    0x3c(%rsp),%ebx
  0x00000000032bb8cb: je     0x00000000032bf054  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb8d1: add    $0x2,%r11d         ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb8d5: jmp    0x00000000032bb8e5
  0x00000000032bb8d7: cmp    0x3c(%rsp),%edi
  0x00000000032bb8db: je     0x00000000032bf061  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb8e1: add    $0x3,%r11d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb8e5: mov    0x4c(%rsp),%r10d
  0x00000000032bb8ea: test   %r10d,%r10d
  0x00000000032bb8ed: je     0x00000000032bec29  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb8f3: cmp    $0x3,%r11d
  0x00000000032bb8f7: jge    0x00000000032bec45  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb8fd: cmp    $0x80000,%r10d
  0x00000000032bb904: ja     0x00000000032bdbd0
  0x00000000032bb90a: mov    0x60(%r15),%r10
  0x00000000032bb90e: mov    %r10,%r11
  0x00000000032bb911: add    %r9,%r11
  0x00000000032bb914: cmp    0x70(%r15),%r11
  0x00000000032bb918: jae    0x00000000032bdbd0
  0x00000000032bb91e: mov    %r11,0x60(%r15)
  0x00000000032bb922: prefetchw 0xc0(%r11)
  0x00000000032bb92a: movq   $0x1,(%r10)
  0x00000000032bb931: prefetchw 0x100(%r11)
  0x00000000032bb939: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x00000000032bb941: mov    0x4c(%rsp),%r8d
  0x00000000032bb946: mov    %r8d,0xc(%r10)
  0x00000000032bb94a: prefetchw 0x140(%r11)
  0x00000000032bb952: mov    %r10,%rdi
  0x00000000032bb955: add    $0x10,%rdi
  0x00000000032bb959: xor    %rax,%rax
  0x00000000032bb95c: shl    $0x3,%rcx
  0x00000000032bb960: rep rex.W stos %al,%es:(%rdi)
  0x00000000032bb963: prefetchw 0x180(%r11)     ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb96b: xor    %r11d,%r11d        ;*getfield value
                                                ; - java.lang.StringBuffer::toString@9 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb96e: test   %r11d,%r11d
  0x00000000032bb971: jl     0x00000000032beb59  ;*getfield count
                                                ; - java.lang.StringBuffer::toString@14 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb977: cmp    0x4c(%rsp),%r11d
  0x00000000032bb97c: jge    0x00000000032beb8d  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb982: mov    %r11d,%ecx
  0x00000000032bb985: mov    0x30(%rsp),%r11
  0x00000000032bb98a: movzwl 0x10(%r11,%rcx,2),%r11d  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb990: cmp    $0x5c,%r11d
  0x00000000032bb994: je     0x00000000032bc23e
  0x00000000032bb99a: cmp    $0x2f,%r11d
  0x00000000032bb99e: je     0x00000000032bc23e  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb9a4: mov    0x30(%rsp),%r9
  0x00000000032bb9a9: mov    %ecx,%r11d         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb9ac: mov    0x4c(%rsp),%ecx
  0x00000000032bb9b0: sub    %r11d,%ecx
  0x00000000032bb9b3: mov    %r10,%rdi
  0x00000000032bb9b6: add    $0x10,%rdi         ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb9ba: mov    %r10,%rbx
  0x00000000032bb9bd: shr    $0x3,%rbx          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb9c1: cmp    $0x2,%ecx
  0x00000000032bb9c4: jl     0x00000000032bba5a  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bb9ca: test   %r11d,%r11d
  0x00000000032bb9cd: jl     0x00000000032bed6c  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb9d3: cmp    0x4c(%rsp),%r11d
  0x00000000032bb9d8: jge    0x00000000032bee15  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb9de: cmp    0x4c(%rsp),%r11d
  0x00000000032bb9e3: jae    0x00000000032bebc5  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb9e9: movzwl 0x10(%r9,%r11,2),%r8d  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bb9ef: cmp    $0x61,%r8d
  0x00000000032bb9f3: jge    0x00000000032bee4d
  0x00000000032bb9f9: cmp    $0x41,%r8d
  0x00000000032bb9fd: jl     0x00000000032beda1
  0x00000000032bba03: cmp    $0x5a,%r8d
  0x00000000032bba07: jg     0x00000000032bee8d  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bba0d: mov    %r8d,0x70(%rsp)
  0x00000000032bba12: mov    %rdi,0x30(%rsp)
  0x00000000032bba17: mov    %r11d,0x64(%rsp)
  0x00000000032bba1c: mov    %r10,0x68(%rsp)
  0x00000000032bba21: mov    %r11d,%ebp
  0x00000000032bba24: inc    %ebp               ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bba26: test   %ebp,%ebp
  0x00000000032bba28: jl     0x00000000032bede1  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bba2e: cmp    0x4c(%rsp),%ebp
  0x00000000032bba32: jge    0x00000000032beec9  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bba38: cmp    0x4c(%rsp),%ebp
  0x00000000032bba3c: jae    0x00000000032bebfd  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bba42: movslq %r11d,%r10
  0x00000000032bba45: movzwl 0x12(%r9,%r10,2),%r10d
  0x00000000032bba4b: cmp    $0x3a,%r10d
  0x00000000032bba4f: je     0x00000000032bc6de  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bba55: mov    0x68(%rsp),%r10    ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bba5a: mov    0x4c(%rsp),%r11d
  0x00000000032bba5f: cmp    $0x2,%r11d
  0x00000000032bba63: jl     0x00000000032bba96  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bba65: mov    0x48(%rsp),%r9d
  0x00000000032bba6a: movzwl 0x10(%r12,%r9,8),%r8d  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bba70: cmp    $0x5c,%r8d
  0x00000000032bba74: je     0x00000000032bcbaa  ;*getfield slash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@122 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bba7a: cmp    $0x2f,%r8d
  0x00000000032bba7e: je     0x00000000032bcbaa  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bba84: xor    %r8d,%r8d
  0x00000000032bba87: xor    %ebp,%ebp
  0x00000000032bba89: xor    %edx,%edx
  0x00000000032bba8b: mov    0x3c(%rsp),%r9d
  0x00000000032bba90: mov    0x78(%rsp),%ecx
  0x00000000032bba94: jmp    0x00000000032bbaa6
  0x00000000032bba96: xor    %r8d,%r8d
  0x00000000032bba99: xor    %ebp,%ebp
  0x00000000032bba9b: xor    %edx,%edx
  0x00000000032bba9d: mov    0x3c(%rsp),%r9d
  0x00000000032bbaa2: mov    0x78(%rsp),%ecx    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbaa6: cmp    %r11d,%ebp
  0x00000000032bbaa9: jge    0x00000000032bceb1  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbaaf: xor    %r8d,%r8d
  0x00000000032bbab2: xor    %edi,%edi
  0x00000000032bbab4: cmp    %r8d,%ecx
  0x00000000032bbab7: cmovl  %edi,%ecx
  0x00000000032bbaba: cmp    %r11d,%ecx
  0x00000000032bbabd: cmovg  %r11d,%ecx         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbac1: mov    %ebp,%esi
  0x00000000032bbac3: add    %edx,%esi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbac5: mov    %ebp,%edi
  0x00000000032bbac7: inc    %edi               ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbac9: test   %ebp,%ebp
  0x00000000032bbacb: jl     0x00000000032be94a  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbad1: mov    0x40(%rsp),%rax
  0x00000000032bbad6: mov    0xc(%rax),%r10d
  0x00000000032bbada: mov    0xc(%r12,%r10,8),%r8d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000032c0275
  0x00000000032bbadf: cmp    %r8d,%ebp
  0x00000000032bbae2: jge    0x00000000032be975  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbae8: shl    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbaec: cmp    %r8d,%ebp
  0x00000000032bbaef: jae    0x00000000032be734  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbaf5: mov    %edi,0x2c(%rsp)
  0x00000000032bbaf9: mov    %esi,0x4c(%rsp)
  0x00000000032bbafd: mov    %edx,0x28(%rsp)
  0x00000000032bbb01: mov    %ebx,0x48(%rsp)
  0x00000000032bbb05: mov    %ebp,%ebx
  0x00000000032bbb07: mov    %ecx,0x24(%rsp)
  0x00000000032bbb0b: mov    %r9d,0x34(%rsp)
  0x00000000032bbb10: mov    %r11d,0x30(%rsp)
  0x00000000032bbb15: movzwl 0x10(%r10,%rbp,2),%r11d
  0x00000000032bbb1b: mov    %r11d,0x60(%rsp)
  0x00000000032bbb20: mov    0x48(%rsp),%r9d
  0x00000000032bbb25: mov    0xc(%r12,%r9,8),%ebp  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb2a: mov    %esi,%r9d
  0x00000000032bbb2d: sub    %ebp,%r9d
  0x00000000032bbb30: mov    %esi,%r11d
  0x00000000032bbb33: inc    %r11d              ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb36: mov    %r11d,0x64(%rsp)
  0x00000000032bbb3b: inc    %r9d
  0x00000000032bbb3e: mov    %ebp,%r11d
  0x00000000032bbb41: shl    %r11d              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb44: mov    %r11d,%edi
  0x00000000032bbb47: sub    %esi,%edi
  0x00000000032bbb49: mov    0x48(%rsp),%ecx
  0x00000000032bbb4d: shl    $0x3,%rcx          ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb51: mov    %rcx,0x38(%rsp)
  0x00000000032bbb56: mov    0x48(%rsp),%edx
  0x00000000032bbb5a: lea    0x10(%r12,%rdx,8),%rcx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb5f: mov    %rcx,0x68(%rsp)
  0x00000000032bbb64: inc    %edi
  0x00000000032bbb66: add    $0x2,%r11d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb6a: mov    %r11d,%esi
  0x00000000032bbb6d: mov    0x60(%rsp),%r11d
  0x00000000032bbb72: cmp    $0x5c,%r11d
  0x00000000032bbb76: je     0x00000000032bc1b5  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb7c: cmp    $0x2f,%r11d
  0x00000000032bbb80: je     0x00000000032bc1b5  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb86: test   %r9d,%r9d
  0x00000000032bbb89: jg     0x00000000032bcbfc  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb8f: mov    %edx,%ebx          ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbb91: mov    0x38(%rsp),%r10
  0x00000000032bbb96: mov    0xc(%r10),%r8d
  0x00000000032bbb9a: mov    0x4c(%rsp),%ebp
  0x00000000032bbb9e: cmp    %r8d,%ebp
  0x00000000032bbba1: jae    0x00000000032bdee7  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::
<writer thread='8664'/>
<uncommon_trap thread='8664' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='6' state='intrinsic recompiled' stamp='0.835'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='6'/>
</uncommon_trap>
<writer thread='25548'/>
normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbba7: mov    0x60(%rsp),%r11d
  0x00000000032bbbac: mov    %r11w,0x10(%r10,%rbp,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbbb2: mov    0x34(%rsp),%r9d    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbbb7: mov    0x2c(%rsp),%edi
  0x00000000032bbbbb: cmp    0x24(%rsp),%edi
  0x00000000032bbbbf: jge    0x00000000032bbbd5  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbbc1: mov    0x30(%rsp),%r11d
  0x00000000032bbbc6: mov    0x24(%rsp),%ecx
  0x00000000032bbbca: mov    %edi,%ebp
  0x00000000032bbbcc: mov    0x28(%rsp),%edx
  0x00000000032bbbd0: jmpq   0x00000000032bbac1
  0x00000000032bbbd5: cmp    0x20(%rsp),%edi
  0x00000000032bbbd9: jge    0x00000000032bbe7e  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbbdf: jmpq   0x00000000032bbdca  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbbe4: mov    0x24(%rsp),%r11d
  0x00000000032bbbe9: cmp    %r8d,%r11d
  0x00000000032bbbec: jge    0x00000000032be5c4  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbbf2: cmp    %r8d,%r11d
  0x00000000032bbbf5: jae    0x00000000032be2c5  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbbfb: movslq %edx,%r11
  0x00000000032bbbfe: movzwl 0x12(%r10,%r11,2),%r10d  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbc04: cmp    $0x5c,%r10d
  0x00000000032bbc08: je     0x00000000032be323  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbc0e: cmp    $0x2f,%r10d
  0x00000000032bbc12: je     0x00000000032be339  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@49 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbc18: mov    0x24(%rsp),%r10d
  0x00000000032bbc1d: cmp    0x30(%rsp),%r10d
  0x00000000032bbc22: je     0x00000000032be612  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbc28: test   %ecx,%ecx
  0x00000000032bbc2a: jg     0x00000000032bc082  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbc30: mov    0x48(%rsp),%ebx
  0x00000000032bbc34: mov    0x38(%rsp),%r11
  0x00000000032bbc39: mov    0xc(%r11),%r10d
  0x00000000032bbc3d: mov    0x4c(%rsp),%ebp
  0x00000000032bbc41: cmp    %r10d,%ebp
  0x00000000032bbc44: jae    0x00000000032be36f  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbc4a: mov    0x34(%rsp),%r9d
  0x00000000032bbc4f: mov    %r9w,0x10(%r11,%rbp,2)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize
<writer thread='25072'/>
<uncommon_trap thread='25072' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='7' state='intrinsic recompiled' stamp='0.838'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='7'/>
</uncommon_trap>
<writer thread='25548'/>
@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbc55: jmpq   0x00000000032bbdba
  0x00000000032bbc5a: mov    %edi,%esi          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbc5c: mov    %esi,%r10d
  0x00000000032bbc5f: test   %esi,%esi
  0x00000000032bbc61: jle    0x00000000032beaac  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbc67: mov    %esi,%r9d
  0x00000000032bbc6a: mov    $0x7ffffff7,%r11d
  0x00000000032bbc70: sub    %esi,%r11d         ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbc73: test   %r11d,%r11d
  0x00000000032bbc76: jl     0x00000000032beafd  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbc7c: cmp    $0x80000,%esi
  0x00000000032bbc82: ja     0x00000000032be8f5
  0x00000000032bbc88: movslq %esi,%r10          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbc8b: mov    %esi,0x2c(%rsp)
  0x00000000032bbc8f: shl    %r10
  0x00000000032bbc92: add    $0x17,%r10         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbc96: mov    %r10,0x70(%rsp)
  0x00000000032bbc9b: and    $0xfffffffffffffff8,%r10
  0x00000000032bbc9f: mov    %r10,0x78(%rsp)
  0x00000000032bbca4: cmp    $0x80000,%esi
  0x00000000032bbcaa: ja     0x00000000032bdbb4
  0x00000000032bbcb0: mov    0x60(%r15),%r8
  0x00000000032bbcb4: mov    %r8,%r10
  0x00000000032bbcb7: mov    0x78(%rsp),%r11
  0x00000000032bbcbc: add    %r11,%r10
  0x00000000032bbcbf: cmp    0x70(%r15),%r10
  0x00000000032bbcc3: jae    0x00000000032bdbb4
  0x00000000032bbcc9: mov    %r10,0x60(%r15)
  0x00000000032bbccd: prefetchw 0xc0(%r10)
  0x00000000032bbcd5: movq   $0x1,(%r8)
  0x00000000032bbcdc: prefetchw 0x100(%r10)
  0x00000000032bbce4: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000000032bbcec: mov    %esi,0xc(%r8)
  0x00000000032bbcf0: prefetchw 0x140(%r10)
  0x00000000032bbcf8: prefetchw 0x180(%r10)
  0x00000000032bbd00: mov    %r8,0x80(%rsp)
  0x00000000032bbd08: cmp    0x2c(%rsp),%ebp
  0x00000000032bbd0c: mov    0x2c(%rsp),%esi
  0x00000000032bbd10: cmovl  %ebp,%esi          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd13: mov    %r8,%r10
  0x00000000032bbd16: add    $0x10,%r10         ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd1a: mov    %r10,%rbx
  0x00000000032bbd1d: mov    0x70(%rsp),%r10
  0x00000000032bbd22: shr    $0x3,%r10          ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd26: mov    %r8,%r11
  0x00000000032bbd29: shr    $0x3,%r11          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd2d: mov    %r11d,0x48(%rsp)
  0x00000000032bbd32: mov    %r10,%rcx
  0x00000000032bbd35: add    $0xfffffffffffffffe,%rcx  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd39: cmp    %esi,%ebp
  0x00000000032bbd3b: jb     0x00000000032be8fd  ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd41: mov    0x2c(%rsp),%ebp
  0x00000000032bbd45: cmp    %esi,%ebp
  0x00000000032bbd47: jb     0x00000000032be8fd  ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd4d: test   %esi,%esi
  0x00000000032bbd4f: jle    0x00000000032be929
  0x00000000032bbd55: cmp    %ebp,%esi
  0x00000000032bbd57: jl     0x00000000032bd5e7
  0x00000000032bbd5d: mov    0x78(%rsp),%r8
  0x00000000032bbd62: add    $0xfffffffffffffff0,%r8
  0x00000000032bbd66: shr    $0x3,%r8           ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd6a: mov    0x68(%rsp),%rcx
  0x00000000032bbd6f: mov    %rbx,%rdx
  0x00000000032bbd72: movabs $0x31e2ca0,%r10
  0x00000000032bbd7c: callq  *%r10              ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd7f: mov    0x80(%rsp),%r10
  0x00000000032bbd87: mov    %r10,0x38(%rsp)
  0x00000000032bbd8c: nopl   0x0(%rax)          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbd90: mov    0x38(%rsp),%r10
  0x00000000032bbd95: mov    0xc(%r10),%r11d
  0x00000000032bbd99: mov    0x4c(%rsp),%ebp
  0x00000000032bbd9d: cmp    %r11d,%ebp
  0x00000000032bbda0: jae    0x00000000032bdedd  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbda6: mov    0x60(%rsp),%r8d
  0x00000000032bbdab: mov    %r8w,0x10(%r10,%rbp,2)
  0x00000000032bbdb1: mov    0x34(%rsp),%r9d
  0x00000000032bbdb6: mov    0x48(%rsp),%ebx    ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbdba: mov    0x24(%rsp),%ebp
  0x00000000032bbdbe: cmp    0x20(%rsp),%ebp
  0x00000000032bbdc2: jge    0x00000000032bbe80  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbdc8: mov    %ebp,%edi          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbdca: mov    0x40(%rsp),%rax
  0x00000000032bbdcf: mov    0xc(%rax),%r11d    ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbdd3: mov    0xc(%r12,%r11,8),%r8d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000032c0275
  0x00000000032bbdd8: mov    %edi,%esi
  0x00000000032bbdda: add    0x28(%rsp),%esi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbdde: mov    %edi,%ebp
  0x00000000032bbde0: inc    %ebp               ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbde2: cmp    %r8d,%edi
  0x00000000032bbde5: jge    0x00000000032be1bf  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbdeb: lea    (%r12,%r11,8),%r10  ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbdef: cmp    %r8d,%edi
  0x00000000032bbdf2: jae    0x00000000032bdea6  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbdf8: mov    %edi,%edx
  0x00000000032bbdfa: mov    %esi,0x4c(%rsp)
  0x00000000032bbdfe: mov    %ebx,0x48(%rsp)
  0x00000000032bbe02: mov    %ebp,0x24(%rsp)
  0x00000000032bbe06: mov    %r9d,0x34(%rsp)
  0x00000000032bbe0b: movzwl 0x10(%r10,%rdi,2),%r9d  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbe11: mov    %r9d,0x60(%rsp)
  0x00000000032bbe16: mov    0xc(%r12,%rbx,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe1b: mov    %esi,%ecx
  0x00000000032bbe1d: sub    %ebp,%ecx
  0x00000000032bbe1f: lea    (%r12,%rbx,8),%r11  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbe23: mov    %r11,0x38(%rsp)
  0x00000000032bbe28: lea    0x10(%r12,%rbx,8),%r11  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe2d: mov    %r11,0x68(%rsp)
  0x00000000032bbe32: inc    %ecx               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe34: mov    %ebp,%r11d
  0x00000000032bbe37: shl    %r11d              ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@19 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe3a: mov    %r11d,%r9d
  0x00000000032bbe3d: sub    %esi,%r9d
  0x00000000032bbe40: mov    %esi,%edi
  0x00000000032bbe42: inc    %edi               ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe44: mov    %edi,0x64(%rsp)
  0x00000000032bbe48: inc    %r9d               ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe4b: add    $0x2,%r11d         ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbe4f: mov    %r11d,%esi
  0x00000000032bbe52: mov    0x60(%rsp),%ebx
  0x00000000032bbe56: cmp    $0x5c,%ebx
  0x00000000032bbe59: je     0x00000000032bbbe4  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe5f: cmp    $0x2f,%ebx
  0x00000000032bbe62: je     0x00000000032bbbe4  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe68: test   %ecx,%ecx
  0x00000000032bbe6a: jle    0x00000000032bbd90  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe70: test   %r9d,%r9d
  0x00000000032bbe73: jl     0x00000000032bbc5a  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbe79: jmpq   0x00000000032bbc5c
  0x00000000032bbe7e: mov    %edi,%ebp          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbe80: cmp    0x30(%rsp),%ebp
  0x00000000032bbe84: jge    0x00000000032bbf7c  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbe8a: xchg   %ax,%ax            ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbe8c: mov    %ebp,%esi
  0x00000000032bbe8e: add    0x28(%rsp),%esi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbe92: mov    %ebp,%edi
  0x00000000032bbe94: inc    %edi               ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbe96: test   %ebp,%ebp
  0x00000000032bbe98: jl     0x00000000032be945
<writer thread='27136'/>
<uncommon_trap thread='27136' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='8' state='intrinsic recompiled' stamp='0.847'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='8'/>
</uncommon_trap>
<writer thread='25548'/>
  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize
<writer thread='27088'/>
<uncommon_trap thread='27088' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='9' state='intrinsic recompiled' stamp='0.847'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='9'/>
</uncommon_trap>
<writer thread='30896'/>
<uncommon_trap thread='30896' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='10' state='intrinsic recompiled' stamp='0.847'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='10'/>
</uncommon_trap>
<writer thread='12152'/>
<uncommon_trap thread='12152' reason='unstable_if' action='reinterpret' compile_id='58' compile_kind='osr' compiler='C2' level='4' count='11' state='intrinsic recompiled' stamp='0.847'>
<jvms bci='7' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='198698' iicount='12' decompiles='1' unstable_if_traps='11'/>
</uncommon_trap>
<writer thread='25548'/>
@61 (line 89)

  0x00000000032bbe9e: mov    0x40(%rsp),%rax
  0x00000000032bbea3: mov    0xc(%rax),%r11d    ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbea7: mov    0xc(%r12,%r11,8),%r8d  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000032c0275
  0x00000000032bbeac: cmp    %r8d,%ebp
  0x00000000032bbeaf: jge    0x00000000032bec5d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbeb5: lea    (%r12,%r11,8),%r10  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbeb9: cmp    %r8d,%ebp
  0x00000000032bbebc: jae    0x00000000032be93b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbec2: mov    %edi,0x2c(%rsp)
  0x00000000032bbec6: mov    %esi,0x4c(%rsp)
  0x00000000032bbeca: mov    %ebx,0x48(%rsp)
  0x00000000032bbece: mov    %r9d,0x34(%rsp)
  0x00000000032bbed3: movzwl 0x10(%r10,%rbp,2),%r11d  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbed9: mov    %r11d,0x60(%rsp)
  0x00000000032bbede: mov    %ebp,%edx
  0x00000000032bbee0: mov    0xc(%r12,%rbx,8),%ebp  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbee5: mov    %esi,%ecx
  0x00000000032bbee7: sub    %ebp,%ecx
  0x00000000032bbee9: lea    (%r12,%rbx,8),%r11  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbeed: mov    %r11,0x20(%rsp)
  0x00000000032bbef2: lea    0x10(%r12,%rbx,8),%r11  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbef7: mov    %r11,0x38(%rsp)
  0x00000000032bbefc: inc    %ecx
  0x00000000032bbefe: mov    %ebp,%r11d
  0x00000000032bbf01: shl    %r11d              ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbf04: mov    %r11d,%r9d
  0x00000000032bbf07: sub    %esi,%r9d
  0x00000000032bbf0a: mov    %esi,%edi
  0x00000000032bbf0c: inc    %edi               ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbf0e: mov    %edi,0x64(%rsp)
  0x00000000032bbf12: inc    %r9d
  0x00000000032bbf15: add    $0x2,%r11d         ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbf19: mov    %r11d,%esi
  0x00000000032bbf1c: mov    0x60(%rsp),%ebx
  0x00000000032bbf20: cmp    $0x5c,%ebx
  0x00000000032bbf23: je     0x00000000032bc654
  0x00000000032bbf29: mov    %ebx,%r11d
  0x00000000032bbf2c: cmp    $0x2f,%r11d
  0x00000000032bbf30: je     0x00000000032bc654
  0x00000000032bbf36: test   %ecx,%ecx
  0x00000000032bbf38: jg     0x00000000032bcd68  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbf3e: mov    0x20(%rsp),%r10
  0x00000000032bbf43: mov    0xc(%r10),%r11d
  0x00000000032bbf47: mov    0x4c(%rsp),%ebp
  0x00000000032bbf4b: cmp    %r11d,%ebp
  0x00000000032bbf4e: jae    0x00000000032bdee7  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbf54: mov    0x60(%rsp),%r11d
  0x00000000032bbf59: mov    %r11w,0x10(%r10,%rbp,2)  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbf5f: mov    0x34(%rsp),%r9d
  0x00000000032bbf64: mov    0x48(%rsp),%ebx
  0x00000000032bbf68: mov    0x2c(%rsp),%r10d   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbf6d: cmp    0x30(%rsp),%r10d
  0x00000000032bbf72: jge    0x00000000032bbf7c  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbf74: mov    %r10d,%ebp
  0x00000000032bbf77: jmpq   0x00000000032bbe8c  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbf7c: lea    (%r12,%rbx,8),%rdx  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbf80: mov    %ebx,0x20(%rsp)
  0x00000000032bbf84: lea    0x90(%rsp),%rbp    ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bbf8c: xor    %r8d,%r8d
  0x00000000032bbf8f: mov    0x64(%rsp),%r9d
  0x00000000032bbf94: data16 xchg %ax,%ax
  0x00000000032bbf97: callq  0x00000000031d6620  ; OopMap{[32]=NarrowOop off=2428}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {static_call}
  0x00000000032bbf9c: mov    %rax,0x28(%rsp)
  0x00000000032bbfa1: mov    0x60(%r15),%rax
  0x00000000032bbfa5: mov    %rax,%r10
  0x00000000032bbfa8: add    $0x18,%r10
  0x00000000032bbfac: cmp    0x70(%r15),%r10
  0x00000000032bbfb0: jae    0x00000000032bdbf4
  0x00000000032bbfb6: mov    %r10,0x60(%r15)
  0x00000000032bbfba: prefetchw 0xc0(%r10)
  0x00000000032bbfc2: mov    0x58(%rsp),%r10
  0x00000000032bbfc7: mov    0xa8(%r10),%r10
  0x00000000032bbfce: mov    %r10,(%rax)
  0x00000000032bbfd1: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032bbfd8: mov    %r12d,0xc(%rax)
  0x00000000032bbfdc: mov    %r12,0x10(%rax)
  0x00000000032bbfe0: mov    0x28(%rsp),%r10
  0x00000000032bbfe5: shr    $0x3,%r10
  0x00000000032bbfe9: mov    %r10d,0xc(%rax)
  0x00000000032bbfed: mov    %rax,%r10
  0x00000000032bbff0: shr    $0x9,%r10
  0x00000000032bbff4: mov    $0xef3d000,%r11d
  0x00000000032bbffa: mov    %r12b,(%r11,%r10,1)  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bbffe: jmp    0x00000000032bc073  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc000: cmp    0x4c(%rsp),%r11d
  0x00000000032bc005: jge    0x00000000032bc061
  0x00000000032bc007: test   %r11d,%r11d
  0x00000000032bc00a: jl     0x00000000032be87f
  0x00000000032bc010: cmp    0x4c(%rsp),%r11d
  0x00000000032bc015: jge    0x00000000032be8bb  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc01b: mov    0x30(%rsp),%r10
  0x00000000032bc020: movzwl 0x10(%r10,%r11,2),%ebp  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc026: cmp    %r8d,%ebp
  0x00000000032bc029: je     0x00000000032bd30c
  0x00000000032bc02f: cmp    0x3c(%rsp),%ebp
  0x00000000032bc033: je     0x00000000032bcbed
  0x00000000032bc039: cmp    $0x3a,%ebp
  0x00000000032bc03c: je     0x00000000032bcec2  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc042: inc    %r11d              ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc045: cmp    0x4c(%rsp),%r11d
  0x00000000032bc04a: jge    0x00000000032bc050  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc04c: mov    %ebp,%ebx
  0x00000000032bc04e: jmp    0x00000000032bc007
  0x00000000032bc050: cmp    0x3c(%rsp),%ebp
  0x00000000032bc054: je     0x00000000032bf29a
  0x00000000032bc05a: mov    0x40(%rsp),%rcx
  0x00000000032bc05f: jmp    0x00000000032bc070
  0x00000000032bc061: cmp    0x3c(%rsp),%ebx
  0x00000000032bc065: je     0x00000000032bf298  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc06b: mov    0x40(%rsp),%rcx    ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc070: mov    %rcx,%rax          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc073: add    $0xa0,%rsp
  0x00000000032bc07a: pop    %rbp
  0x00000000032bc07b: test   %eax,-0x9cc081(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032bc081: retq                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032bc082: test   %r9d,%r9d
  0x00000000032bc085: jge    0x00000000032bc089  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc087: mov    %edi,%esi          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc089: mov    %esi,%r11d
  0x00000000032bc08c: test   %esi,%esi
  0x00000000032bc08e: jle    0x00000000032bf226  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc094: mov    $0x7ffffff7,%r9d
  0x00000000032bc09a: sub    %esi,%r9d          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc09d: test   %r9d,%r9d
  0x00000000032bc0a0: jl     0x00000000032bf2d7  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc0a6: cmp    $0x80000,%esi
  0x00000000032bc0ac: ja     0x00000000032beff0  ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc0b2: movslq %esi,%r8           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc0b5: shl    %r8
  0x00000000032bc0b8: add    $0x17,%r8          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc0bc: mov    %r8,%r10
  0x00000000032bc0bf: and    $0xfffffffffffffff8,%r10  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc0c3: cmp    $0x80000,%esi
  0x00000000032bc0c9: ja     0x00000000032be295
  0x00000000032bc0cf: mov    %r10,0x78(%rsp)
  0x00000000032bc0d4: mov    %r8,0x70(%rsp)
  0x00000000032bc0d9: mov    %esi,0x2c(%rsp)
  0x00000000032bc0dd: mov    0x60(%r15),%r8
  0x00000000032bc0e1: mov    %r8,%r10
  0x00000000032bc0e4: mov    0x78(%rsp),%r11
  0x00000000032bc0e9: add    %r11,%r10
  0x00000000032bc0ec: cmp    0x70(%r15),%r10
  0x00000000032bc0f0: jae    0x00000000032be2a3
  0x00000000032bc0f6: mov    %r10,0x60(%r15)
  0x00000000032bc0fa: prefetchw 0xc0(%r10)
  0x00000000032bc102: movq   $0x1,(%r8)
  0x00000000032bc109: prefetchw 0x100(%r10)
  0x00000000032bc111: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000000032bc119: mov    %esi,0xc(%r8)
  0x00000000032bc11d: prefetchw 0x140(%r10)
  0x00000000032bc125: prefetchw 0x180(%r10)
  0x00000000032bc12d: mov    %r8,0x80(%rsp)
  0x00000000032bc135: cmp    0x2c(%rsp),%ebp
  0x00000000032bc139: mov    0x2c(%rsp),%esi
  0x00000000032bc13d: cmovl  %ebp,%esi          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc140: mov    %r8,%rdx
  0x00000000032bc143: add    $0x10,%rdx         ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc147: mov    0x70(%rsp),%r10
  0x00000000032bc14c: shr    $0x3,%r10          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc150: mov    %r10,%rcx
  0x00000000032bc153: add    $0xfffffffffffffffe,%rcx
  0x00000000032bc157: cmp    %esi,%ebp
  0x00000000032bc159: jb     0x00000000032beff8
  0x00000000032bc15f: mov    0x2c(%rsp),%ebp
  0x00000000032bc163: cmp    %esi,%ebp
  0x00000000032bc165: jb     0x00000000032beff8  ;*synchronization entry
                                                ; - java.lang.StringBuffer::toString@-1 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc16b: test   %esi,%esi
  0x00000000032bc16d: jle    0x00000000032bf025  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc173: cmp    0x2c(%rsp),%esi
  0x00000000032bc177: jl     0x00000000032bdb6a  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc17d: mov    0x78(%rsp),%r8
  0x00000000032bc182: add    $0xfffffffffffffff0,%r8
  0x00000000032bc186: shr    $0x3,%r8           ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc18a: mov    0x68(%rsp),%rcx
  0x00000000032bc18f: movabs $0x31e2ca0,%r10
  0x00000000032bc199: callq  *%r10              ;*goto
                                                ; - java.io.WinNTFileSystem::normalizePrefix@25 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc19c: mov    0x80(%rsp),%r10
  0x00000000032bc1a4: mov    %r10,%rbx
  0x00000000032bc1a7: shr    $0x3,%rbx          ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc1ab: mov    %r10,0x38(%rsp)
  0x00000000032bc1b0: jmpq   0x00000000032bbc34
  0x00000000032bc1b5: mov    0x2c(%rsp),%r11d
  0x00000000032bc1ba: cmp    0x30(%rsp),%r11d
  0x00000000032bc1bf: jge    0x00000000032bf0bd  ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc1c5: test   %r11d,%r11d
  0x00000000032bc1c8: jl     0x00000000032bf085
  0x00000000032bc1ce: cmp    %r8d,%r11d
  0x00000000032bc1d1: jge    0x00000000032be5bf
  0x00000000032bc1d7: cmp    %r8d,%r11d
  0x00000000032bc1da: jae    0x00000000032be2c0  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc1e0: movslq %ebx,%r11
  0x00000000032bc1e3: movzwl 0x12(%r10,%r11,2),%r11d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc1e9: cmp    $0x5c,%r11d
  0x00000000032bc1ed: je     0x00000000032be319  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc1f3: cmp    $0x2f,%r11d
  0x00000000032bc1f7: je     0x00000000032be32f  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc1fd: mov    0x2c(%rsp),%r11d
  0x00000000032bc202: cmp    0x30(%rsp),%r11d
  0x00000000032bc207: je     0x00000000032be60d
  0x00000000032bc20d: test   %r9d,%r9d
  0x00000000032bc210: jg     0x00000000032bd13c  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc216: mov    %edx,%ebx          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc218: mov    0x38(%rsp),%r11
  0x00000000032bc21d: mov    0xc(%r11),%r8d
  0x00000000032bc221: mov    0x4c(%rsp),%ebp
  0x00000000032bc225: cmp    %r8d,%ebp
  0x00000000032bc228: jae    0x00000000032be365  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc22e: mov    0x34(%rsp),%r9d
  0x00000000032bc233: mov    %r9w,0x10(%r11,%rbp,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc239: jmpq   0x00000000032bbbb7  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc23e: mov    %ecx,%r11d
  0x00000000032bc241: inc    %r11d              ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc244: cmp    0x38(%rsp),%r11d
  0x00000000032bc249: jl     0x00000000032bb96e  ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc24f: cmp    0x64(%rsp),%r11d
  0x00000000032bc254: jge    0x00000000032bf7d5  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc25a: mov    0x30(%rsp),%r9
  0x00000000032bc25f: movzwl 0x10(%r9,%r11,2),%r8d  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc265: cmp    $0x5c,%r8d
  0x00000000032bc269: je     0x00000000032bc275
  0x00000000032bc26b: cmp    $0x2f,%r8d
  0x00000000032bc26f: jne    0x00000000032bb9ac  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc275: movslq %r11d,%r8
  0x00000000032bc278: movzwl 0x12(%r9,%r8,2),%ecx  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc27e: cmp    $0x5c,%ecx
  0x00000000032bc281: je     0x00000000032bdd1c  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc287: cmp    $0x2f,%ecx
  0x00000000032bc28a: je     0x00000000032bdd1c  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc290: inc    %r11d              ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc293: jmpq   0x00000000032bb9ac
  0x00000000032bc298: cmp    $0x1,%r11d
  0x00000000032bc29c: jle    0x00000000032bb7a6  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc2a2: mov    0x4c(%rsp),%r11d
  0x00000000032bc2a7: test   %r11d,%r11d
  0x00000000032bc2aa: je     0x00000000032bf6cd
  0x00000000032bc2b0: mov    %r11d,%r10d
  0x00000000032bc2b3: cmp    $0x80000,%r10d
  0x00000000032bc2ba: ja     0x00000000032be408
  0x00000000032bc2c0: mov    0x60(%r15),%r10
  0x00000000032bc2c4: mov    %r10,%r8
  0x00000000032bc2c7: mov    %r10,%r11
  0x00000000032bc2ca: add    %r9,%r11
  0x00000000032bc2cd: cmp    0x70(%r15),%r11
  0x00000000032bc2d1: jae    0x00000000032be408
  0x00000000032bc2d7: mov    %r11,0x60(%r15)
  0x00000000032bc2db: mov    %r10,%rdi
  0x00000000032bc2de: add    $0x10,%rdi
  0x00000000032bc2e2: movq   $0x1,(%r10)
  0x00000000032bc2e9: prefetchw 0xc0(%r11)
  0x00000000032bc2f1: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x00000000032bc2f9: mov    0x4c(%rsp),%r10d
  0x00000000032bc2fe: mov    %r10d,0xc(%r8)
  0x00000000032bc302: xor    %rax,%rax
  0x00000000032bc305: shl    $0x3,%rcx
  0x00000000032bc309: rep rex.W stos %al,%es:(%rdi)
  0x00000000032bc30c: prefetchw 0x100(%r11)
  0x00000000032bc314: prefetchw 0x140(%r11)
  0x00000000032bc31c: prefetchw 0x180(%r11)     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc324: mov    %r8,%r10           ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc327: mov    %r10,0x68(%rsp)    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc32c: xor    %r10d,%r10d
  0x00000000032bc32f: test   %r10d,%r10d
  0x00000000032bc332: jl     0x00000000032bf5c9
  0x00000000032bc338: cmp    0x4c(%rsp),%r10d
  0x00000000032bc33d: jge    0x00000000032bf5f9  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc343: mov    0x30(%rsp),%r11
  0x00000000032bc348: movzwl 0x10(%r11,%r10,2),%r11d  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc34e: cmp    $0x5c,%r11d
  0x00000000032bc352: je     0x00000000032bd0a2  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc358: cmp    $0x2f,%r11d
  0x00000000032bc35c: je     0x00000000032bd0a2  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc362: mov    %r10d,0x80(%rsp)   ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc36a: mov    0x4c(%rsp),%r9d
  0x00000000032bc36f: sub    0x80(%rsp),%r9d
  0x00000000032bc377: mov    0x68(%rsp),%r10
  0x00000000032bc37c: add    $0x10,%r10         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc380: mov    %r10,0x70(%rsp)
  0x00000000032bc385: mov    0x68(%rsp),%r10
  0x00000000032bc38a: shr    $0x3,%r10          ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@64 (line 120)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc38e: mov    %r10d,%r11d
  0x00000000032bc391: cmp    $0x2,%r9d
  0x00000000032bc395: jl     0x00000000032bc4d8  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc39b: mov    0x80(%rsp),%r8d
  0x00000000032bc3a3: test   %r8d,%r8d
  0x00000000032bc3a6: jl     0x00000000032bf747
  0x00000000032bc3ac: cmp    0x4c(%rsp),%r8d
  0x00000000032bc3b1: jge    0x00000000032bf7df
  0x00000000032bc3b7: cmp    0x4c(%rsp),%r8d
  0x00000000032bc3bc: jae    0x00000000032bf63f  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc3c2: mov    0x30(%rsp),%r10
  0x00000000032bc3c7: movzwl 0x10(%r10,%r8,2),%r8d  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc3cd: mov    %r8d,0x64(%rsp)
  0x00000000032bc3d2: cmp    $0x61,%r8d
  0x00000000032bc3d6: jge    0x00000000032bf805  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc3dc: cmp    $0x41,%r8d
  0x00000000032bc3e0: jl     0x00000000032bf76d  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc3e6: cmp    $0x5a,%r8d
  0x00000000032bc3ea: jg     0x00000000032bf83d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc3f0: mov    0x80(%rsp),%ebp
  0x00000000032bc3f7: inc    %ebp               ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc3f9: test   %ebp,%ebp
  0x00000000032bc3fb: jl     0x00000000032bf7a5
  0x00000000032bc401: cmp    0x4c(%rsp),%ebp
  0x00000000032bc405: jge    0x00000000032bf871
  0x00000000032bc40b: cmp    0x4c(%rsp),%ebp
  0x00000000032bc40f: jae    0x00000000032bf66d  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc415: movslq 0x80(%rsp),%r10
  0x00000000032bc41d: mov    0x30(%rsp),%r8
  0x00000000032bc422: movzwl 0x12(%r8,%r10,2),%r8d
  0x00000000032bc428: cmp    $0x3a,%r8d
  0x00000000032bc42c: jne    0x00000000032bc4d8  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc432: mov    0x60(%rsp),%r10d
  0x00000000032bc437: test   %r10d,%r10d
  0x00000000032bc43a: jg     0x00000000032bdf65  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc440: mov    0x68(%rsp),%r9
  0x00000000032bc445: mov    0x4c(%rsp),%r10d
  0x00000000032bc44a: mov    %r11d,%r8d
  0x00000000032bc44d: mov    %r9,%rbx           ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc450: mov    0x68(%rsp),%r9
  0x00000000032bc455: mov    0xc(%r9),%ecx      ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc459: mov    %ecx,0x74(%rsp)
  0x00000000032bc45d: test   %ecx,%ecx
  0x00000000032bc45f: jbe    0x00000000032bfbe1  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc465: mov    $0x2,%edx
  0x00000000032bc46a: sub    %ecx,%edx
  0x00000000032bc46c: mov    0x68(%rsp),%rdi
  0x00000000032bc471: add    $0x10,%rdi         ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc475: mov    0x64(%rsp),%ecx
  0x00000000032bc479: mov    %cx,(%rdi)         ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc47c: test   %edx,%edx
  0x00000000032bc47e: jg     0x00000000032be090  ;*iload_1
                                                ; - java.io.WinNTFileSystem::isSlash@0 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc484: mov    0x74(%rsp),%r11d
  0x00000000032bc489: cmp    $0x1,%r11d
  0x00000000032bc48d: jbe    0x00000000032bfc01  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc493: mov    $0x3a,%r11d
  0x00000000032bc499: mov    %r11w,0x12(%r9)    ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc49e: mov    0x80(%rsp),%ebx
  0x00000000032bc4a5: add    $0x3,%ebx
  0x00000000032bc4a8: xor    %ecx,%ecx
  0x00000000032bc4aa: xor    %edi,%edi
  0x00000000032bc4ac: cmp    %ecx,%ebx
  0x00000000032bc4ae: cmovl  %edi,%ebx
  0x00000000032bc4b1: cmp    %r10d,%ebx
  0x00000000032bc4b4: cmovg  %r10d,%ebx
  0x00000000032bc4b8: mov    0x80(%rsp),%esi
  0x00000000032bc4bf: neg    %esi               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc4c1: mov    0x80(%rsp),%ebp
  0x00000000032bc4c8: add    $0x2,%ebp          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc4cb: mov    0x3c(%rsp),%ecx
  0x00000000032bc4cf: mov    0x88(%rsp),%edi
  0x00000000032bc4d6: jmp    0x00000000032bc530  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc4d8: mov    0x4c(%rsp),%r10d
  0x00000000032bc4dd: cmp    $0x2,%r10d
  0x00000000032bc4e1: jl     0x00000000032bc51a  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc4e3: mov    0x48(%rsp),%r8d
  0x00000000032bc4e8: movzwl 0x10(%r12,%r8,8),%r9d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc4ee: cmp    $0x5c,%r9d
  0x00000000032bc4f2: je     0x00000000032bd454  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc4f8: cmp    $0x2f,%r9d
  0x00000000032bc4fc: je     0x00000000032bd454  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc502: xor    %edi,%edi
  0x00000000032bc504: xor    %ebp,%ebp
  0x00000000032bc506: xor    %esi,%esi
  0x00000000032bc508: mov    0x3c(%rsp),%ecx
  0x00000000032bc50c: mov    0x38(%rsp),%ebx
  0x00000000032bc510: mov    0x68(%rsp),%r9
  0x00000000032bc515: mov    %r11d,%r8d
  0x00000000032bc518: jmp    0x00000000032bc530
  0x00000000032bc51a: xor    %edi,%edi
  0x00000000032bc51c: xor    %ebp,%ebp
  0x00000000032bc51e: xor    %esi,%esi
  0x00000000032bc520: mov    0x3c(%rsp),%ecx
  0x00000000032bc524: mov    0x38(%rsp),%ebx
  0x00000000032bc528: mov    0x68(%rsp),%r9
  0x00000000032bc52d: mov    %r11d,%r8d         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc530: cmp    %r10d,%ebp
  0x00000000032bc533: jge    0x00000000032bd9cc  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc539: mov    %ebp,%edi
  0x00000000032bc53b: add    %esi,%edi          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc53d: mov    %ebp,%r11d
  0x00000000032bc540: inc    %r11d              ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc543: test   %ebp,%ebp
  0x00000000032bc545: jl     0x00000000032bf3ee  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc54b: mov    %r11d,0x2c(%rsp)
  0x00000000032bc550: mov    %edi,0x48(%rsp)
  0x00000000032bc554: mov    %esi,0x28(%rsp)
  0x00000000032bc558: mov    %r8d,%esi
  0x00000000032bc55b: mov    %ebp,%r8d
  0x00000000032bc55e: mov    %ebx,0x24(%rsp)
  0x00000000032bc562: mov    %ecx,0x34(%rsp)
  0x00000000032bc566: mov    %r10d,0x30(%rsp)
  0x00000000032bc56b: mov    0x40(%rsp),%r10
  0x00000000032bc570: mov    0xc(%r10),%r11d
  0x00000000032bc574: mov    0xc(%r12,%r11,8),%r9d  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000032c0281
  0x00000000032bc579: cmp    %r9d,%ebp
  0x00000000032bc57c: jge    0x00000000032be741  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc582: lea    (%r12,%r11,8),%r10  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc586: cmp    %r9d,%ebp
  0x00000000032bc589: jae    0x00000000032be639  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc58f: movzwl 0x10(%r10,%rbp,2),%r11d  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc595: mov    %r11d,0x4c(%rsp)
  0x00000000032bc59a: mov    0xc(%r12,%rsi,8),%ebp  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc59f: mov    %edi,%ebx
  0x00000000032bc5a1: sub    %ebp,%ebx
  0x00000000032bc5a3: mov    %edi,%r11d
  0x00000000032bc5a6: inc    %r11d              ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc5a9: mov    %r11d,0x60(%rsp)
  0x00000000032bc5ae: inc    %ebx               ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc5b0: mov    %ebp,%ecx
  0x00000000032bc5b2: shl    %ecx               ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc5b4: mov    %ecx,%eax
  0x00000000032bc5b6: sub    %edi,%ecx
  0x00000000032bc5b8: lea    (%r12,%rsi,8),%r11  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc5bc: mov    %r11,0x38(%rsp)
  0x00000000032bc5c1: lea    0x10(%r12,%rsi,8),%r11  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc5c6: mov    %r11,0x68(%rsp)
  0x00000000032bc5cb: inc    %ecx               ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc5cd: mov    %eax,%edi
  0x00000000032bc5cf: add    $0x2,%edi          ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc5d2: mov    %edi,%eax
  0x00000000032bc5d4: mov    0x4c(%rsp),%r11d
  0x00000000032bc5d9: cmp    $0x5c,%r11d
  0x00000000032bc5dd: je     0x00000000032bd01a
  0x00000000032bc5e3: cmp    $0x2f,%r11d
  0x00000000032bc5e7: je     0x00000000032bd01a  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc5ed: test   %ebx,%ebx
  0x00000000032bc5ef: jg     0x00000000032bd49d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc5f5: mov    0x38(%rsp),%r10
  0x00000000032bc5fa: mov    0xc(%r10),%r10d
  0x00000000032bc5fe: mov    0x48(%rsp),%r8d
  0x00000000032bc603: cmp    %r10d,%r8d
  0x00000000032bc606: jae    0x00000000032bf131  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc60c: mov    0x38(%rsp),%r10
  0x00000000032bc611: mov    0x4c(%rsp),%r9d
  0x00000000032bc616: mov    %r9w,0x10(%r10,%r8,2)  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc61c: mov    0x34(%rsp),%ecx
  0x00000000032bc620: mov    %esi,%r8d          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc623: mov    0x2c(%rsp),%r11d
  0x00000000032bc628: cmp    0x24(%rsp),%r11d
  0x00000000032bc62d: jge    0x00000000032bc644  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc62f: mov    0x30(%rsp),%r10d
  0x00000000032bc634: mov    0x24(%rsp),%ebx
  0x00000000032bc638: mov    %r11d,%ebp
  0x00000000032bc63b: mov    0x28(%rsp),%esi
  0x00000000032bc63f: jmpq   0x00000000032bc539
  0x00000000032bc644: cmp    0x20(%rsp),%r11d
  0x00000000032bc649: jge    0x00000000032bca15
  0x00000000032bc64f: jmpq   0x00000000032bc829
  0x00000000032bc654: mov    0x2c(%rsp),%r11d
  0x00000000032bc659: cmp    0x30(%rsp),%r11d
  0x00000000032bc65e: jge    0x00000000032bf0bd
  0x00000000032bc664: test   %r11d,%r11d
  0x00000000032bc667: jl     0x00000000032bf085
  0x00000000032bc66d: cmp    %r8d,%r11d
  0x00000000032bc670: jge    0x00000000032be5ce
  0x00000000032bc676: cmp    %r8d,%r11d
  0x00000000032bc679: jae    0x00000000032be2cf  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc67f: movslq %edx,%r11
  0x00000000032bc682: movzwl 0x12(%r10,%r11,2),%r10d  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc688: cmp    $0x5c,%r10d
  0x00000000032bc68c: je     0x00000000032be343
  0x00000000032bc692: cmp    $0x2f,%r10d
  0x00000000032bc696: je     0x00000000032be343
  0x00000000032bc69c: mov    0x2c(%rsp),%r10d
  0x00000000032bc6a1: cmp    0x30(%rsp),%r10d
  0x00000000032bc6a6: je     0x00000000032be617  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc6ac: test   %ecx,%ecx
  0x00000000032bc6ae: jg     0x00000000032bd31b  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc6b4: mov    0x48(%rsp),%ebx    ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc6b8: mov    0x20(%rsp),%r11
  0x00000000032bc6bd: mov    0xc(%r11),%r8d
  0x00000000032bc6c1: mov    0x4c(%rsp),%ebp
  0x00000000032bc6c5: cmp    %r8d,%ebp
  0x00000000032bc6c8: jae    0x00000000032be374  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc6ce: mov    0x34(%rsp),%r9d
  0x00000000032bc6d3: mov    %r9w,0x10(%r11,%rbp,2)  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc6d9: jmpq   0x00000000032bbf6d
  0x00000000032bc6de: mov    0x60(%rsp),%r10d
  0x00000000032bc6e3: test   %r10d,%r10d
  0x00000000032bc6e6: jg     0x00000000032bd634  ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc6ec: mov    0x68(%rsp),%r10    ;   {no_reloc}
  0x00000000032bc6f1: mov    0x4c(%rsp),%r11d
  0x00000000032bc6f6: mov    %r10,%r8           ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc6f9: mov    0x68(%rsp),%r10
  0x00000000032bc6fe: mov    0xc(%r10),%r9d     ;*iconst_1
                                                ; - java.io.WinNTFileSystem::isSlash@12 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc702: mov    %r9d,0x80(%rsp)
  0x00000000032bc70a: test   %r9d,%r9d
  0x00000000032bc70d: jbe    0x00000000032bf3a5  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc713: mov    $0x2,%r9d
  0x00000000032bc719: mov    0x80(%rsp),%ecx
  0x00000000032bc720: sub    %ecx,%r9d
  0x00000000032bc723: mov    0x68(%rsp),%rdi
  0x00000000032bc728: add    $0x10,%rdi         ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc72c: mov    0x70(%rsp),%edx
  0x00000000032bc730: mov    %dx,(%rdi)         ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc733: test   %r9d,%r9d
  0x00000000032bc736: jg     0x00000000032bd75d  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc73c: mov    0x80(%rsp),%r8d
  0x00000000032bc744: cmp    $0x1,%r8d
  0x00000000032bc748: jbe    0x00000000032bf3c5  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc74e: mov    $0x3a,%r8d
  0x00000000032bc754: mov    %r8w,0x12(%r10)    ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc759: mov    0x64(%rsp),%r8d
  0x00000000032bc75e: mov    %r8d,%ecx
  0x00000000032bc761: add    $0x3,%ecx          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc764: mov    %r8d,%edx
  0x00000000032bc767: neg    %edx               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc769: mov    %r8d,%ebp
  0x00000000032bc76c: add    $0x2,%ebp          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc76f: mov    0x3c(%rsp),%r9d
  0x00000000032bc774: mov    0x88(%rsp),%r8d
  0x00000000032bc77c: jmpq   0x00000000032bbaa6  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc781: mov    0x24(%rsp),%ebx
  0x00000000032bc785: cmp    %r9d,%ebx
  0x00000000032bc788: jge    0x00000000032bef02
  0x00000000032bc78e: cmp    %r9d,%ebx
  0x00000000032bc791: jae    0x00000000032bec6c  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc797: movslq %eax,%r11
  0x00000000032bc79a: movzwl 0x12(%r10,%r11,2),%r10d  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc7a0: cmp    $0x5c,%r10d
  0x00000000032bc7a4: je     0x00000000032becc3  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc7aa: cmp    $0x2f,%r10d
  0x00000000032bc7ae: je     0x00000000032becd9  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc7b4: cmp    0x30(%rsp),%ebx
  0x00000000032bc7b8: je     0x00000000032bef4a  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc7be: test   %ecx,%ecx
  0x00000000032bc7c0: jg     0x00000000032bced1  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc7c6: mov    %esi,%r8d
  0x00000000032bc7c9: mov    0x38(%rsp),%r10
  0x00000000032bc7ce: mov    0xc(%r10),%r9d
  0x00000000032bc7d2: mov    0x48(%rsp),%ebp
  0x00000000032bc7d6: cmp    %r9d,%ebp
  0x00000000032bc7d9: jae    0x00000000032bed13  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc7df: mov    0x34(%rsp),%ecx
  0x00000000032bc7e3: mov    %cx,0x10(%r10,%rbp,2)  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x00000000032bc7e9: jmp    0x00000000032bc818
  0x00000000032bc7eb: nopl   0x0(%rax,%rax,1)
  0x00000000032bc7f0: mov    %esi,%r8d          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc7f3: mov    0x38(%rsp),%r10
  0x00000000032bc7f8: mov    0xc(%r10),%r9d
  0x00000000032bc7fc: mov    0x48(%rsp),%ebp
  0x00000000032bc800: cmp    %r9d,%ebp
  0x00000000032bc803: jae    0x00000000032be685  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc809: mov    0x4c(%rsp),%r11d
  0x00000000032bc80e: mov    %r11w,0x10(%r10,%rbp,2)  ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x00000000032bc814: mov    0x34(%rsp),%ecx    ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc818: mov    0x24(%rsp),%ebp
  0x00000000032bc81c: cmp    0x20(%rsp),%ebp
  0x00000000032bc820: jge    0x00000000032bca18  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc826: mov    %ebp,%r11d         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc829: mov    0x40(%rsp),%rbx
  0x00000000032bc82e: mov    0xc(%rbx),%r10d    ;*if_icmple
                                                ; - java.io.WinNTFileSystem::normalize@104 (line 92)

  0x00000000032bc832: mov    0xc(%r12,%r10,8),%r9d  ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000032c0281
  0x00000000032bc837: mov    %r11d,%edi
  0x00000000032bc83a: add    0x28(%rsp),%edi    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc83e: mov    %r11d,%ebp
  0x00000000032bc841: inc    %ebp               ;*invokespecial isLetter
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc843: cmp    %r9d,%r11d
  0x00000000032bc846: jge    0x00000000032be757  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc84c: shl    $0x3,%r10          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::isSlash@-1 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc850: cmp    %r9d,%r11d
  0x00000000032bc853: jae    0x00000000032be64c  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc859: mov    %r11d,%eax
  0x00000000032bc85c: mov    %edi,0x48(%rsp)
  0x00000000032bc860: mov    %r8d,%esi
  0x00000000032bc863: mov    %ebp,0x24(%rsp)
  0x00000000032bc867: mov    %ecx,0x34(%rsp)
  0x00000000032bc86b: movzwl 0x10(%r10,%r11,2),%r8d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc871: mov    %r8d,0x4c(%rsp)
  0x00000000032bc876: mov    0xc(%r12,%rsi,8),%ebp  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc87b: mov    %edi,%ecx
  0x00000000032bc87d: sub    %ebp,%ecx
  0x00000000032bc87f: lea    (%r12,%rsi,8),%r11  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc883: mov    %r11,0x38(%rsp)
  0x00000000032bc888: lea    0x10(%r12,%rsi,8),%r11  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc88d: mov    %r11,0x68(%rsp)
  0x00000000032bc892: inc    %ecx               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc894: mov    %ebp,%r11d
  0x00000000032bc897: shl    %r11d              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc89a: mov    %r11d,%r8d
  0x00000000032bc89d: sub    %edi,%r8d
  0x00000000032bc8a0: inc    %edi               ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc8a2: mov    %edi,0x60(%rsp)
  0x00000000032bc8a6: inc    %r8d               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc8a9: add    $0x2,%r11d         ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc8ad: mov    %r11d,%edi
  0x00000000032bc8b0: mov    0x4c(%rsp),%r11d
  0x00000000032bc8b5: cmp    $0x5c,%r11d
  0x00000000032bc8b9: je     0x00000000032bc781
  0x00000000032bc8bf: cmp    $0x2f,%r11d
  0x00000000032bc8c3: je     0x00000000032bc781  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc8c9: test   %ecx,%ecx
  0x00000000032bc8cb: jle    0x00000000032bc7f0  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc8d1: test   %r8d,%r8d
  0x00000000032bc8d4: jge    0x00000000032bc8da  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc8d6: mov    0x60(%rsp),%edi    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc8da: mov    %edi,%r10d
  0x00000000032bc8dd: test   %edi,%edi
  0x00000000032bc8df: jle    0x00000000032bf513  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc8e5: mov    %edi,%eax
  0x00000000032bc8e7: mov    $0x7ffffff7,%r11d
  0x00000000032bc8ed: sub    %edi,%r11d         ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc8f0: test   %r11d,%r11d
  0x00000000032bc8f3: jl     0x00000000032bf569  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bc8f9: cmp    $0x80000,%edi
  0x00000000032bc8ff: ja     0x00000000032bf325  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc905: movslq %edi,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc908: mov    %edi,0x2c(%rsp)
  0x00000000032bc90c: shl    %r11
  0x00000000032bc90f: add    $0x17,%r11         ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc913: mov    %r11,0x70(%rsp)
  0x00000000032bc918: mov    %r11,%r10
  0x00000000032bc91b: and    $0xfffffffffffffff8,%r10  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc91f: mov    %r10,0x78(%rsp)
  0x00000000032bc924: cmp    $0x80000,%edi
  0x00000000032bc92a: ja     0x00000000032be3ed
  0x00000000032bc930: mov    0x60(%r15),%r10
  0x00000000032bc934: mov    %r10,%r8
  0x00000000032bc937: mov    0x78(%rsp),%r11
  0x00000000032bc93c: add    %r11,%r10
  0x00000000032bc93f: cmp    0x70(%r15),%r10
  0x00000000032bc943: jae    0x00000000032be3ed
  0x00000000032bc949: mov    %r10,0x60(%r15)
  0x00000000032bc94d: prefetchw 0xc0(%r10)
  0x00000000032bc955: movq   $0x1,(%r8)
  0x00000000032bc95c: prefetchw 0x100(%r10)
  0x00000000032bc964: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000000032bc96c: mov    %edi,0xc(%r8)
  0x00000000032bc970: prefetchw 0x140(%r10)
  0x00000000032bc978: prefetchw 0x180(%r10)     ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc980: mov    %r8,%r10
  0x00000000032bc983: mov    %r10,0x80(%rsp)
  0x00000000032bc98b: cmp    0x2c(%rsp),%ebp
  0x00000000032bc98f: mov    0x2c(%rsp),%esi
  0x00000000032bc993: cmovl  %ebp,%esi          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc996: add    $0x10,%r10         ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc99a: mov    %r10,%r9
  0x00000000032bc99d: mov    0x70(%rsp),%r10
  0x00000000032bc9a2: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc9a6: mov    %r10,%rbx
  0x00000000032bc9a9: mov    %r10,%rcx
  0x00000000032bc9ac: add    $0xfffffffffffffffe,%rcx
  0x00000000032bc9b0: cmp    %esi,%ebp
  0x00000000032bc9b2: jb     0x00000000032bf32d
  0x00000000032bc9b8: mov    0x2c(%rsp),%r11d
  0x00000000032bc9bd: cmp    %esi,%r11d
  0x00000000032bc9c0: jb     0x00000000032bf32d  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc9c6: test   %esi,%esi
  0x00000000032bc9c8: jle    0x00000000032bf359
  0x00000000032bc9ce: cmp    %r11d,%esi
  0x00000000032bc9d1: jl     0x00000000032bdf15
  0x00000000032bc9d7: mov    0x78(%rsp),%r10
  0x00000000032bc9dc: add    $0xfffffffffffffff0,%r10
  0x00000000032bc9e0: shr    $0x3,%r10          ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@28 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc9e4: mov    0x68(%rsp),%rcx
  0x00000000032bc9e9: mov    %r9,%rdx
  0x00000000032bc9ec: mov    %r10,%r8
  0x00000000032bc9ef: movabs $0x31e2ca0,%r10
  0x00000000032bc9f9: callq  *%r10              ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bc9fc: mov    0x80(%rsp),%r10
  0x00000000032bca04: mov    %r10,%r8
  0x00000000032bca07: shr    $0x3,%r8           ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bca0b: mov    %r10,0x38(%rsp)
  0x00000000032bca10: jmpq   0x00000000032bc7f3
  0x00000000032bca15: mov    %r11d,%ebp
  0x00000000032bca18: cmp    0x30(%rsp),%ebp
  0x00000000032bca1c: jge    0x00000000032bcb18  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca22: xchg   %ax,%ax            ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca24: mov    %ebp,%edi
  0x00000000032bca26: add    0x28(%rsp),%edi    ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca2a: mov    %ebp,%r11d
  0x00000000032bca2d: inc    %r11d              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca30: test   %ebp,%ebp
  0x00000000032bca32: jl     0x00000000032bf3e9  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca38: mov    0x40(%rsp),%rbx
  0x00000000032bca3d: mov    0xc(%rbx),%r10d
  0x00000000032bca41: mov    0xc(%r12,%r10,8),%r9d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ; implicit exception: dispatches to 0x00000000032c0281
  0x00000000032bca46: cmp    %r9d,%ebp
  0x00000000032bca49: jge    0x00000000032be75f  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca4f: shl    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca53: cmp    %r9d,%ebp
  0x00000000032bca56: jae    0x00000000032be654  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca5c: mov    %r11d,0x2c(%rsp)
  0x00000000032bca61: mov    %edi,0x48(%rsp)
  0x00000000032bca65: mov    %r8d,%esi
  0x00000000032bca68: mov    %ecx,0x34(%rsp)
  0x00000000032bca6c: movzwl 0x10(%r10,%rbp,2),%r8d
  0x00000000032bca72: mov    %r8d,0x4c(%rsp)
  0x00000000032bca77: mov    %ebp,%edi
  0x00000000032bca79: mov    %esi,%r8d
  0x00000000032bca7c: mov    0xc(%r12,%r8,8),%ebp  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca81: mov    0x48(%rsp),%r8d
  0x00000000032bca86: sub    %ebp,%r8d
  0x00000000032bca89: lea    (%r12,%rsi,8),%r11  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca8d: mov    %r11,0x20(%rsp)
  0x00000000032bca92: lea    0x10(%r12,%rsi,8),%r11  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bca97: mov    %r11,0x38(%rsp)
  0x00000000032bca9c: inc    %r8d
  0x00000000032bca9f: mov    %ebp,%ecx
  0x00000000032bcaa1: shl    %ecx               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcaa3: mov    %ecx,%ebx
  0x00000000032bcaa5: sub    0x48(%rsp),%ebx
  0x00000000032bcaa9: mov    0x48(%rsp),%r11d
  0x00000000032bcaae: inc    %r11d              ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcab1: mov    %r11d,0x60(%rsp)
  0x00000000032bcab6: inc    %ebx               ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcab8: add    $0x2,%ecx          ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcabb: mov    %ecx,%eax
  0x00000000032bcabd: mov    0x4c(%rsp),%ecx
  0x00000000032bcac1: cmp    $0x5c,%ecx
  0x00000000032bcac4: je     0x00000000032bd284  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcaca: cmp    $0x2f,%ecx
  0x00000000032bcacd: je     0x00000000032bd284  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcad3: test   %r8d,%r8d
  0x00000000032bcad6: jg     0x00000000032bd895  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcadc: mov    %esi,%r8d          ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcadf: mov    0x20(%rsp),%r10
  0x00000000032bcae4: mov    0xc(%r10),%r9d
  0x00000000032bcae8: mov    0x48(%rsp),%ebp
  0x00000000032bcaec: cmp    %r9d,%ebp
  0x00000000032bcaef: jae    0x00000000032be68f  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcaf5: mov    0x4c(%rsp),%r9d
  0x00000000032bcafa: mov    %r9w,0x10(%r10,%rbp,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcb00: mov    0x34(%rsp),%ecx
  0x00000000032bcb04: mov    0x2c(%rsp),%r11d   ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcb09: cmp    0x30(%rsp),%r11d
  0x00000000032bcb0e: jge    0x00000000032bcb18  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcb10: mov    %r11d,%ebp
  0x00000000032bcb13: jmpq   0x00000000032bca24  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcb18: mov    0x60(%rsp),%r11d
  0x00000000032bcb1d: mov    %r11d,0x24(%rsp)   ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcb22: lea    (%r12,%r8,8),%rdx  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcb26: mov    %r8d,0x20(%rsp)
  0x00000000032bcb2b: lea    0x90(%rsp),%rbp    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcb33: xor    %r8d,%r8d
  0x00000000032bcb36: mov    0x24(%rsp),%r9d
  0x00000000032bcb3b: callq  0x00000000031d6620  ; OopMap{[32]=NarrowOop off=5408}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {static_call}
  0x00000000032bcb40: mov    %rax,0x28(%rsp)
  0x00000000032bcb45: mov    0x60(%r15),%rax
  0x00000000032bcb49: mov    %rax,%r10
  0x00000000032bcb4c: add    $0x18,%r10
  0x00000000032bcb50: cmp    0x70(%r15),%r10
  0x00000000032bcb54: jae    0x00000000032be42c
  0x00000000032bcb5a: mov    %r10,0x60(%r15)
  0x00000000032bcb5e: prefetchw 0xc0(%r10)
  0x00000000032bcb66: mov    0x58(%rsp),%r10
  0x00000000032bcb6b: mov    0xa8(%r10),%r10
  0x00000000032bcb72: mov    %r10,(%rax)
  0x00000000032bcb75: movl   $0xf80002da,0x8(%rax)  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032bcb7c: mov    %r12d,0xc(%rax)
  0x00000000032bcb80: mov    %r12,0x10(%rax)    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcb84: mov    0x28(%rsp),%r10
  0x00000000032bcb89: mov    %r10,%r11
  0x00000000032bcb8c: shr    $0x3,%r11
  0x00000000032bcb90: mov    %r11d,0xc(%rax)    ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000032bcb94: mov    %rax,%r10
  0x00000000032bcb97: shr    $0x9,%r10
  0x00000000032bcb9b: mov    $0xef3d000,%r11d
  0x00000000032bcba1: mov    %r12b,(%r11,%r10,1)  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcba5: jmpq   0x00000000032bc073  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcbaa: cmp    $0x1,%r11d
  0x00000000032bcbae: jle    0x00000000032bf699  ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcbb4: cmp    $0x1,%r11d
  0x00000000032bcbb8: jbe    0x00000000032bf36b  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcbbe: movzwl 0x12(%r12,%r9,8),%r9d  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcbc4: cmp    $0x5c,%r9d
  0x00000000032bcbc8: je     0x00000000032bd100  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcbce: cmp    $0x2f,%r9d
  0x00000000032bcbd2: je     0x00000000032bd100  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcbd8: xor    %r8d,%r8d
  0x00000000032bcbdb: xor    %ebp,%ebp
  0x00000000032bcbdd: xor    %edx,%edx
  0x00000000032bcbdf: mov    0x3c(%rsp),%r9d
  0x00000000032bcbe4: mov    0x78(%rsp),%ecx
  0x00000000032bcbe8: jmpq   0x00000000032bbaa6
  0x00000000032bcbed: cmp    0x3c(%rsp),%ebx
  0x00000000032bcbf1: jne    0x00000000032bc039  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcbf7: jmpq   0x00000000032bb87b
  0x00000000032bcbfc: test   %edi,%edi
  0x00000000032bcbfe: jge    0x00000000032bcc04  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcc00: mov    0x64(%rsp),%esi    ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcc04: mov    %esi,%r10d
  0x00000000032bcc07: test   %esi,%esi
  0x00000000032bcc09: jle    0x00000000032beab6  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcc0f: mov    %esi,%r9d
  0x00000000032bcc12: mov    $0x7ffffff7,%r10d
  0x00000000032bcc18: sub    %esi,%r10d         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcc1b: mov    %r10d,%r11d
  0x00000000032bcc1e: test   %r10d,%r10d
  0x00000000032bcc21: jl     0x00000000032beb07  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcc27: cmp    $0x80000,%esi
  0x00000000032bcc2d: ja     0x00000000032bf4cc  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcc33: movslq %esi,%r11          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcc36: mov    %esi,0x48(%rsp)
  0x00000000032bcc3a: shl    %r11
  0x00000000032bcc3d: add    $0x17,%r11
  0x00000000032bcc41: mov    %r11,0x70(%rsp)
  0x00000000032bcc46: mov    %r11,%r10
  0x00000000032bcc49: and    $0xfffffffffffffff8,%r10  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcc4d: mov    %r10,0x78(%rsp)
  0x00000000032bcc52: cmp    $0x80000,%esi
  0x00000000032bcc58: ja     0x00000000032be719
  0x00000000032bcc5e: mov    0x60(%r15),%r10
  0x00000000032bcc62: mov    %r10,%r8
  0x00000000032bcc65: mov    %r10,%r11
  0x00000000032bcc68: mov    0x78(%rsp),%r10
  0x00000000032bcc6d: add    %r10,%r11
  0x00000000032bcc70: cmp    0x70(%r15),%r11
  0x00000000032bcc74: jae    0x00000000032be719
  0x00000000032bcc7a: mov    %r11,0x60(%r15)
  0x00000000032bcc7e: prefetchw 0xc0(%r11)
  0x00000000032bcc86: mov    %r8,%r10
  0x00000000032bcc89: movq   $0x1,(%r10)
  0x00000000032bcc90: prefetchw 0x100(%r11)
  0x00000000032bcc98: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x00000000032bcca0: mov    %esi,0xc(%r8)
  0x00000000032bcca4: prefetchw 0x140(%r11)
  0x00000000032bccac: prefetchw 0x180(%r11)     ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bccb4: mov    %r8,%r10           ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bccb7: mov    %r10,0x80(%rsp)
  0x00000000032bccbf: cmp    0x48(%rsp),%ebp
  0x00000000032bccc3: mov    0x48(%rsp),%esi
  0x00000000032bccc7: cmovl  %ebp,%esi          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bccca: add    $0x10,%r10
  0x00000000032bccce: mov    %r10,%r9
  0x00000000032bccd1: mov    0x70(%rsp),%r10
  0x00000000032bccd6: shr    $0x3,%r10
  0x00000000032bccda: mov    %r10,%rbx
  0x00000000032bccdd: mov    %r10,%rcx
  0x00000000032bcce0: add    $0xfffffffffffffffe,%rcx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcce4: cmp    %esi,%ebp
  0x00000000032bcce6: jb     0x00000000032bf4d4
  0x00000000032bccec: mov    0x48(%rsp),%r10d
  0x00000000032bccf1: cmp    %esi,%r10d
  0x00000000032bccf4: jb     0x00000000032bf4d4  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bccfa: test   %esi,%esi
  0x00000000032bccfc: jle    0x00000000032bf501  ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcd02: cmp    %r10d,%esi
  0x00000000032bcd05: jl     0x00000000032be1f5  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcd0b: mov    0x78(%rsp),%r10
  0x00000000032bcd10: add    $0xfffffffffffffff0,%r10
  0x00000000032bcd14: shr    $0x3,%r10          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcd18: mov    0x68(%rsp),%rcx
  0x00000000032bcd1d: mov    %r9,%rdx
  0x00000000032bcd20: mov    %r10,%r8
  0x00000000032bcd23: movabs $0x31e2ca0,%r10
  0x00000000032bcd2d: callq  *%r10              ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcd30: mov    0x80(%rsp),%r10
  0x00000000032bcd38: mov    %r10,%rbx
  0x00000000032bcd3b: shr    $0x3,%rbx          ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcd3f: mov    %r10,0x38(%rsp)
  0x00000000032bcd44: jmpq   0x00000000032bbb91
  0x00000000032bcd49: cmp    0x3c(%rsp),%edi
  0x00000000032bcd4d: jne    0x00000000032bb8e5  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcd53: jmpq   0x00000000032bf065
  0x00000000032bcd58: test   %r9d,%r9d
  0x00000000032bcd5b: jne    0x00000000032bc070  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcd61: xor    %ebp,%ebp
  0x00000000032bcd63: jmpq   0x00000000032bf2ae
  0x00000000032bcd68: test   %r9d,%r9d
  0x00000000032bcd6b: jge    0x00000000032bcd6f
  0x00000000032bcd6d: mov    %edi,%esi
  0x00000000032bcd6f: mov    %esi,%r10d
  0x00000000032bcd72: test   %esi,%esi
  0x00000000032bcd74: jle    0x00000000032beab6  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcd7a: mov    $0x7ffffff7,%r8d
  0x00000000032bcd80: sub    %esi,%r8d          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcd83: test   %r8d,%r8d
  0x00000000032bcd86: jl     0x00000000032beb0d
  0x00000000032bcd8c: cmp    $0x80000,%esi
  0x00000000032bcd92: ja     0x00000000032bf700
  0x00000000032bcd98: movslq %esi,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcd9b: shl    %r8
  0x00000000032bcd9e: add    $0x17,%r8          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcda2: mov    %r8,%r11
  0x00000000032bcda5: and    $0xfffffffffffffff8,%r11  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcda9: cmp    $0x80000,%esi
  0x00000000032bcdaf: ja     0x00000000032be7db
  0x00000000032bcdb5: mov    %r11,0x78(%rsp)
  0x00000000032bcdba: mov    %r8,0x70(%rsp)
  0x00000000032bcdbf: mov    %esi,0x68(%rsp)
  0x00000000032bcdc3: mov    0x60(%r15),%r10
  0x00000000032bcdc7: mov    %r10,%r8
  0x00000000032bcdca: add    %r11,%r10
  0x00000000032bcdcd: cmp    0x70(%r15),%r10
  0x00000000032bcdd1: jae    0x00000000032be7e9
  0x00000000032bcdd7: mov    %r10,0x60(%r15)
  0x00000000032bcddb: prefetchw 0xc0(%r10)
  0x00000000032bcde3: movq   $0x1,(%r8)
  0x00000000032bcdea: prefetchw 0x100(%r10)
  0x00000000032bcdf2: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000000032bcdfa: mov    %esi,0xc(%r8)
  0x00000000032bcdfe: prefetchw 0x140(%r10)
  0x00000000032bce06: prefetchw 0x180(%r10)     ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce0e: mov    %r8,%r10           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce11: mov    %r10,0x80(%rsp)
  0x00000000032bce19: cmp    0x68(%rsp),%ebp
  0x00000000032bce1d: mov    0x68(%rsp),%esi
  0x00000000032bce21: cmovl  %ebp,%esi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce24: add    $0x10,%r10         ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce28: mov    %r10,%r9
  0x00000000032bce2b: mov    0x80(%rsp),%r10
  0x00000000032bce33: mov    %r10,%r11
  0x00000000032bce36: shr    $0x3,%r11          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce3a: mov    %r11d,0x48(%rsp)
  0x00000000032bce3f: mov    0x70(%rsp),%r10
  0x00000000032bce44: shr    $0x3,%r10
  0x00000000032bce48: mov    %r10,%rbx
  0x00000000032bce4b: mov    %r10,%rcx
  0x00000000032bce4e: add    $0xfffffffffffffffe,%rcx  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce52: cmp    %esi,%ebp
  0x00000000032bce54: jb     0x00000000032bf708
  0x00000000032bce5a: mov    0x68(%rsp),%r11d
  0x00000000032bce5f: cmp    %esi,%r11d
  0x00000000032bce62: jb     0x00000000032bf708
  0x00000000032bce68: test   %esi,%esi
  0x00000000032bce6a: jle    0x00000000032bf735  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce70: cmp    0x68(%rsp),%esi
  0x00000000032bce74: jl     0x00000000032be245  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce7a: mov    0x78(%rsp),%r10
  0x00000000032bce7f: add    $0xfffffffffffffff0,%r10
  0x00000000032bce83: shr    $0x3,%r10          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce87: mov    0x38(%rsp),%rcx
  0x00000000032bce8c: mov    %r9,%rdx
  0x00000000032bce8f: mov    %r10,%r8
  0x00000000032bce92: movabs $0x31e2ca0,%r10
  0x00000000032bce9c: callq  *%r10              ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bce9f: mov    0x80(%rsp),%r10
  0x00000000032bcea7: mov    %r10,0x20(%rsp)
  0x00000000032bceac: jmpq   0x00000000032bbf3e
  0x00000000032bceb1: mov    %r10,%rbx
  0x00000000032bceb4: shr    $0x3,%rbx
  0x00000000032bceb8: mov    %r8d,0x64(%rsp)
  0x00000000032bcebd: jmpq   0x00000000032bbf7c
  0x00000000032bcec2: cmp    $0x1,%r11d
  0x00000000032bcec6: jle    0x00000000032bc042  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcecc: jmpq   0x00000000032bc2a2
  0x00000000032bced1: test   %r8d,%r8d
  0x00000000032bced4: jge    0x00000000032bceda  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bced6: mov    0x60(%rsp),%edi    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bceda: mov    %edi,%r10d
  0x00000000032bcedd: test   %edi,%edi
  0x00000000032bcedf: jle    0x00000000032bfb18  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcee5: mov    $0x7ffffff7,%r8d
  0x00000000032bceeb: sub    %edi,%r8d          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bceee: test   %r8d,%r8d
  0x00000000032bcef1: jl     0x00000000032bfb69  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bcef7: cmp    $0x80000,%edi
  0x00000000032bcefd: ja     0x00000000032bf920  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcf03: movslq %edi,%r8           ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcf06: shl    %r8
  0x00000000032bcf09: add    $0x17,%r8          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcf0d: mov    %r8,%r11
  0x00000000032bcf10: and    $0xfffffffffffffff8,%r11  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcf14: cmp    $0x80000,%edi
  0x00000000032bcf1a: ja     0x00000000032bea81
  0x00000000032bcf20: mov    %r11,0x78(%rsp)
  0x00000000032bcf25: mov    %r8,0x70(%rsp)
  0x00000000032bcf2a: mov    %edi,0x2c(%rsp)
  0x00000000032bcf2e: mov    0x60(%r15),%r10
  0x00000000032bcf32: mov    %r10,%r8
  0x00000000032bcf35: mov    %r10,%r11
  0x00000000032bcf38: mov    0x78(%rsp),%r10
  0x00000000032bcf3d: add    %r10,%r11
  0x00000000032bcf40: cmp    0x70(%r15),%r11
  0x00000000032bcf44: jae    0x00000000032bea8f
  0x00000000032bcf4a: mov    %r11,0x60(%r15)
  0x00000000032bcf4e: prefetchw 0xc0(%r11)
  0x00000000032bcf56: mov    %r8,%r10
  0x00000000032bcf59: movq   $0x1,(%r10)
  0x00000000032bcf60: prefetchw 0x100(%r11)
  0x00000000032bcf68: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x00000000032bcf70: mov    %edi,0xc(%r8)
  0x00000000032bcf74: prefetchw 0x140(%r11)
  0x00000000032bcf7c: prefetchw 0x180(%r11)     ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcf84: mov    %r8,%r10
  0x00000000032bcf87: mov    %r10,0x80(%rsp)
  0x00000000032bcf8f: cmp    0x2c(%rsp),%ebp
  0x00000000032bcf93: mov    0x2c(%rsp),%esi
  0x00000000032bcf97: cmovl  %ebp,%esi          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcf9a: add    $0x10,%r10
  0x00000000032bcf9e: mov    %r10,%r11
  0x00000000032bcfa1: mov    0x70(%rsp),%r10
  0x00000000032bcfa6: shr    $0x3,%r10
  0x00000000032bcfaa: mov    %r10,%rbx
  0x00000000032bcfad: mov    %r10,%rcx
  0x00000000032bcfb0: add    $0xfffffffffffffffe,%rcx
  0x00000000032bcfb4: cmp    %esi,%ebp
  0x00000000032bcfb6: jb     0x00000000032bf928
  0x00000000032bcfbc: mov    0x2c(%rsp),%r10d
  0x00000000032bcfc1: cmp    %esi,%r10d
  0x00000000032bcfc4: jb     0x00000000032bf928  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcfca: test   %esi,%esi
  0x00000000032bcfcc: jle    0x00000000032bf955
  0x00000000032bcfd2: cmp    0x2c(%rsp),%esi
  0x00000000032bcfd6: jl     0x00000000032be39d
  0x00000000032bcfdc: mov    0x78(%rsp),%r10
  0x00000000032bcfe1: add    $0xfffffffffffffff0,%r10
  0x00000000032bcfe5: shr    $0x3,%r10          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bcfe9: mov    0x68(%rsp),%rcx
  0x00000000032bcfee: mov    %r11,%rdx
  0x00000000032bcff1: mov    %r10,%r8
  0x00000000032bcff4: movabs $0x31e2ca0,%r10
  0x00000000032bcffe: callq  *%r10              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd001: mov    0x80(%rsp),%r10
  0x00000000032bd009: mov    %r10,%r8
  0x00000000032bd00c: shr    $0x3,%r8           ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd010: mov    %r10,0x38(%rsp)
  0x00000000032bd015: jmpq   0x00000000032bc7c9  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd01a: mov    0x2c(%rsp),%r11d
  0x00000000032bd01f: cmp    0x30(%rsp),%r11d
  0x00000000032bd024: jge    0x00000000032bf9c1  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd02a: test   %r11d,%r11d
  0x00000000032bd02d: jl     0x00000000032bf98d
  0x00000000032bd033: cmp    %r9d,%r11d
  0x00000000032bd036: jge    0x00000000032beefd
  0x00000000032bd03c: cmp    %r9d,%r11d
  0x00000000032bd03f: jae    0x00000000032bec67  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd045: movslq %r8d,%r11
  0x00000000032bd048: movzwl 0x12(%r10,%r11,2),%r11d  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd04e: cmp    $0x5c,%r11d
  0x00000000032bd052: je     0x00000000032becb9  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd058: cmp    $0x2f,%r11d
  0x00000000032bd05c: je     0x00000000032beccf  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd062: mov    0x2c(%rsp),%r11d
  0x00000000032bd067: cmp    0x30(%rsp),%r11d
  0x00000000032bd06c: je     0x00000000032bef45  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd072: test   %ebx,%ebx
  0x00000000032bd074: jg     0x00000000032bda20  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd07a: mov    %esi,%r8d
  0x00000000032bd07d: mov    0x38(%rsp),%r10
  0x00000000032bd082: mov    0xc(%r10),%r11d
  0x00000000032bd086: mov    0x48(%rsp),%ebp
  0x00000000032bd08a: cmp    %r11d,%ebp
  0x00000000032bd08d: jae    0x00000000032bed09  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd093: mov    0x34(%rsp),%ecx
  0x00000000032bd097: mov    %cx,0x10(%r10,%rbp,2)  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd09d: jmpq   0x00000000032bc623  ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd0a2: inc    %r10d              ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd0a5: cmp    0x38(%rsp),%r10d
  0x00000000032bd0aa: jl     0x00000000032bc32f  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd0b0: cmp    0x64(%rsp),%r10d
  0x00000000032bd0b5: jge    0x00000000032be56d
  0x00000000032bd0bb: mov    0x30(%rsp),%r11
  0x00000000032bd0c0: movzwl 0x10(%r11,%r10,2),%r11d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd0c6: cmp    $0x5c,%r11d
  0x00000000032bd0ca: je     0x00000000032bd0d6  ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd0cc: cmp    $0x2f,%r11d
  0x00000000032bd0d0: jne    0x00000000032bc362  ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd0d6: movslq %r10d,%r11
  0x00000000032bd0d9: mov    0x30(%rsp),%r8
  0x00000000032bd0de: movzwl 0x12(%r8,%r11,2),%r8d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd0e4: cmp    $0x5c,%r8d
  0x00000000032bd0e8: je     0x00000000032be55e  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd0ee: cmp    $0x2f,%r8d
  0x00000000032bd0f2: je     0x00000000032be55e  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd0f8: inc    %r10d              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd0fb: jmpq   0x00000000032bc362  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd100: mov    0x60(%rsp),%r9d
  0x00000000032bd105: test   %r9d,%r9d
  0x00000000032bd108: jg     0x00000000032bdc09  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd10e: mov    0xc(%r10),%r9d
  0x00000000032bd112: test   %r9d,%r9d
  0x00000000032bd115: jbe    0x00000000032bf967  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd11b: mov    0x3c(%rsp),%r9d
  0x00000000032bd120: mov    %r9w,0x10(%r10)    ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd125: mov    $0x1,%r8d
  0x00000000032bd12b: mov    $0x2,%ecx
  0x00000000032bd130: mov    $0x1,%ebp
  0x00000000032bd135: xor    %edx,%edx
  0x00000000032bd137: jmpq   0x00000000032bbaa6
  0x00000000032bd13c: test   %edi,%edi
  0x00000000032bd13e: jge    0x00000000032bd144  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd140: mov    0x64(%rsp),%esi
  0x00000000032bd144: mov    %esi,%r11d
  0x00000000032bd147: test   %esi,%esi
  0x00000000032bd149: jle    0x00000000032bf21c  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd14f: mov    $0x7ffffff7,%r9d
  0x00000000032bd155: sub    %esi,%r9d          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd158: test   %r9d,%r9d
  0x00000000032bd15b: jl     0x00000000032bf2cd  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd161: cmp    $0x80000,%esi
  0x00000000032bd167: ja     0x00000000032bfacd  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd16d: movslq %esi,%r8           ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd170: shl    %r8
  0x00000000032bd173: add    $0x17,%r8          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd177: mov    %r8,%r10
  0x00000000032bd17a: and    $0xfffffffffffffff8,%r10  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd17e: cmp    $0x80000,%esi
  0x00000000032bd184: ja     0x00000000032bed41
  0x00000000032bd18a: mov    %r10,0x78(%rsp)
  0x00000000032bd18f: mov    %r8,0x70(%rsp)
  0x00000000032bd194: mov    %esi,0x48(%rsp)
  0x00000000032bd198: mov    0x60(%r15),%r10
  0x00000000032bd19c: mov    %r10,%r8
  0x00000000032bd19f: mov    %r10,%r11
  0x00000000032bd1a2: mov    0x78(%rsp),%r10
  0x00000000032bd1a7: add    %r10,%r11
  0x00000000032bd1aa: cmp    0x70(%r15),%r11
  0x00000000032bd1ae: jae    0x00000000032bed4f
  0x00000000032bd1b4: mov    %r11,0x60(%r15)
  0x00000000032bd1b8: prefetchw 0xc0(%r11)
  0x00000000032bd1c0: mov    %r8,%r10
  0x00000000032bd1c3: movq   $0x1,(%r10)
  0x00000000032bd1ca: prefetchw 0x100(%r11)
  0x00000000032bd1d2: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x00000000032bd1da: mov    %esi,0xc(%r8)
  0x00000000032bd1de: prefetchw 0x140(%r11)
  0x00000000032bd1e6: prefetchw 0x180(%r11)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd1ee: mov    %r8,%r10           ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd1f1: mov    %r10,0x80(%rsp)
  0x00000000032bd1f9: cmp    0x48(%rsp),%ebp
  0x00000000032bd1fd: mov    0x48(%rsp),%esi
  0x00000000032bd201: cmovl  %ebp,%esi          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd204: add    $0x10,%r10         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd208: mov    %r10,%r9
  0x00000000032bd20b: mov    0x70(%rsp),%r10
  0x00000000032bd210: shr    $0x3,%r10
  0x00000000032bd214: mov    %r10,%rbx
  0x00000000032bd217: mov    %r10,%rcx
  0x00000000032bd21a: add    $0xfffffffffffffffe,%rcx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd21e: cmp    %esi,%ebp
  0x00000000032bd220: jb     0x00000000032bfad5
  0x00000000032bd226: mov    0x48(%rsp),%r10d
  0x00000000032bd22b: cmp    %esi,%r10d
  0x00000000032bd22e: jb     0x00000000032bfad5
  0x00000000032bd234: test   %esi,%esi
  0x00000000032bd236: jle    0x00000000032bfb01
  0x00000000032bd23c: cmp    0x48(%rsp),%esi
  0x00000000032bd240: jl     0x00000000032be6c9  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd246: mov    0x78(%rsp),%r10
  0x00000000032bd24b: add    $0xfffffffffffffff0,%r10
  0x00000000032bd24f: shr    $0x3,%r10          ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd253: mov    0x68(%rsp),%rcx
  0x00000000032bd258: mov    %r9,%rdx
  0x00000000032bd25b: mov    %r10,%r8
  0x00000000032bd25e: movabs $0x31e2ca0,%r10
  0x00000000032bd268: callq  *%r10
  0x00000000032bd26b: mov    0x80(%rsp),%r10
  0x00000000032bd273: mov    %r10,%rbx
  0x00000000032bd276: shr    $0x3,%rbx          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd27a: mov    %r10,0x38(%rsp)
  0x00000000032bd27f: jmpq   0x00000000032bc218
  0x00000000032bd284: mov    0x2c(%rsp),%r11d
  0x00000000032bd289: cmp    0x30(%rsp),%r11d
  0x00000000032bd28e: jge    0x00000000032bf9c1
  0x00000000032bd294: test   %r11d,%r11d
  0x00000000032bd297: jl     0x00000000032bf98d  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd29d: cmp    %r9d,%r11d
  0x00000000032bd2a0: jge    0x00000000032bef0c  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd2a6: cmp    %r9d,%r11d
  0x00000000032bd2a9: jae    0x00000000032bec76  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd2af: movslq %edi,%r11
  0x00000000032bd2b2: movzwl 0x12(%r10,%r11,2),%r10d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd2b8: cmp    $0x5c,%r10d
  0x00000000032bd2bc: je     0x00000000032bece3
  0x00000000032bd2c2: cmp    $0x2f,%r10d
  0x00000000032bd2c6: je     0x00000000032bece3  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd2cc: mov    0x2c(%rsp),%r11d
  0x00000000032bd2d1: cmp    0x30(%rsp),%r11d
  0x00000000032bd2d6: je     0x00000000032bef4f  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd2dc: test   %r8d,%r8d
  0x00000000032bd2df: jg     0x00000000032bdd6f  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd2e5: mov    %esi,%r8d          ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd2e8: mov    0x20(%rsp),%r10
  0x00000000032bd2ed: mov    0xc(%r10),%ecx
  0x00000000032bd2f1: mov    0x48(%rsp),%ebp
  0x00000000032bd2f5: cmp    %ecx,%ebp
  0x00000000032bd2f7: jae    0x00000000032bed18  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd2fd: mov    0x34(%rsp),%ecx
  0x00000000032bd301: mov    %cx,0x10(%r10,%rbp,2)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd307: jmpq   0x00000000032bcb09
  0x00000000032bd30c: cmp    0x3c(%rsp),%ebx
  0x00000000032bd310: jne    0x00000000032bb8e5  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd316: jmpq   0x00000000032bf067
  0x00000000032bd31b: test   %r9d,%r9d
  0x00000000032bd31e: jge    0x00000000032bd322
  0x00000000032bd320: mov    %edi,%esi          ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd322: mov    %esi,%r11d
  0x00000000032bd325: test   %esi,%esi
  0x00000000032bd327: jle    0x00000000032bf22b  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd32d: mov    $0x7ffffff7,%r9d
  0x00000000032bd333: sub    %esi,%r9d          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd336: test   %r9d,%r9d
  0x00000000032bd339: jl     0x00000000032bf2dc
  0x00000000032bd33f: cmp    $0x80000,%esi
  0x00000000032bd345: ja     0x00000000032bfc25
  0x00000000032bd34b: movslq %esi,%rbx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd34e: shl    %rbx
  0x00000000032bd351: add    $0x17,%rbx         ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd355: mov    %rbx,%r9
  0x00000000032bd358: and    $0xfffffffffffffff8,%r9  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd35c: cmp    $0x80000,%esi
  0x00000000032bd362: ja     0x00000000032bef75
  0x00000000032bd368: mov    0x60(%r15),%rcx
  0x00000000032bd36c: mov    %rcx,%r8
  0x00000000032bd36f: add    %r9,%r8
  0x00000000032bd372: cmp    0x70(%r15),%r8
  0x00000000032bd376: jae    0x00000000032bef75
  0x00000000032bd37c: mov    %r8,0x60(%r15)
  0x00000000032bd380: prefetchw 0xc0(%r8)
  0x00000000032bd388: movq   $0x1,(%rcx)
  0x00000000032bd38f: prefetchw 0x100(%r8)
  0x00000000032bd397: movl   $0xf8000041,0x8(%rcx)  ;   {metadata({type array char})}
  0x00000000032bd39e: mov    %esi,0xc(%rcx)
  0x00000000032bd3a1: prefetchw 0x140(%r8)
  0x00000000032bd3a9: prefetchw 0x180(%r8)
  0x00000000032bd3b1: mov    %esi,0x48(%rsp)
  0x00000000032bd3b5: mov    %rbx,0x68(%rsp)
  0x00000000032bd3ba: mov    %r9,0x70(%rsp)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd3bf: cmp    0x48(%rsp),%ebp
  0x00000000032bd3c3: mov    0x48(%rsp),%esi
  0x00000000032bd3c7: cmovl  %ebp,%esi          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd3ca: mov    %rcx,%r10
  0x00000000032bd3cd: add    $0x10,%r10         ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd3d1: mov    %r10,%rbx
  0x00000000032bd3d4: mov    %rcx,0x78(%rsp)
  0x00000000032bd3d9: mov    0x68(%rsp),%r10
  0x00000000032bd3de: shr    $0x3,%r10          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd3e2: mov    %r10,%r11
  0x00000000032bd3e5: mov    %r10,%rcx
  0x00000000032bd3e8: add    $0xfffffffffffffffe,%rcx  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd3ec: cmp    %esi,%ebp
  0x00000000032bd3ee: jb     0x00000000032bfc2d
  0x00000000032bd3f4: mov    0x48(%rsp),%r10d
  0x00000000032bd3f9: cmp    %esi,%r10d
  0x00000000032bd3fc: jb     0x00000000032bfc2d
  0x00000000032bd402: test   %esi,%esi
  0x00000000032bd404: jle    0x00000000032bfc59
  0x00000000032bd40a: cmp    0x48(%rsp),%esi
  0x00000000032bd40e: jl     0x00000000032be791  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd414: mov    0x70(%rsp),%r10
  0x00000000032bd419: add    $0xfffffffffffffff0,%r10
  0x00000000032bd41d: shr    $0x3,%r10          ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd421: mov    0x38(%rsp),%rcx
  0x00000000032bd426: mov    %rbx,%rdx
  0x00000000032bd429: mov    %r10,%r8
  0x00000000032bd42c: movabs $0x31e2ca0,%r10
  0x00000000032bd436: callq  *%r10
  0x00000000032bd439: mov    0x78(%rsp),%r10
  0x00000000032bd43e: mov    %r10,%rbx
  0x00000000032bd441: shr    $0x3,%rbx          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd445: mov    %r10,0x20(%rsp)
  0x00000000032bd44a: mov    0x2c(%rsp),%r10d
  0x00000000032bd44f: jmpq   0x00000000032bc6b8  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@74 (line 90)

  0x00000000032bd454: cmp    $0x1,%r10d
  0x00000000032bd458: jle    0x00000000032bfcb7
  0x00000000032bd45e: cmp    $0x1,%r10d
  0x00000000032bd462: jbe    0x00000000032bfbad  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd468: movzwl 0x12(%r12,%r8,8),%r9d  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd46e: cmp    $0x5c,%r9d
  0x00000000032bd472: je     0x00000000032bd9dc  ;*goto
                                                ; - java.io.WinNTFileSystem::normalize@218 (line 157)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd478: cmp    $0x2f,%r9d
  0x00000000032bd47c: je     0x00000000032bd9dc  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd482: xor    %edi,%edi
  0x00000000032bd484: xor    %ebp,%ebp
  0x00000000032bd486: xor    %esi,%esi
  0x00000000032bd488: mov    0x3c(%rsp),%ecx
  0x00000000032bd48c: mov    0x38(%rsp),%ebx
  0x00000000032bd490: mov    0x68(%rsp),%r9
  0x00000000032bd495: mov    %r11d,%r8d
  0x00000000032bd498: jmpq   0x00000000032bc530
  0x00000000032bd49d: test   %ecx,%ecx
  0x00000000032bd49f: jge    0x00000000032bd4a5  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd4a1: mov    0x60(%rsp),%eax    ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd4a5: test   %eax,%eax
  0x00000000032bd4a7: jle    0x00000000032bfdac  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd4ad: mov    $0x7ffffff7,%r11d
  0x00000000032bd4b3: sub    %eax,%r11d         ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd4b6: test   %r11d,%r11d
  0x00000000032bd4b9: jl     0x00000000032bf573  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd4bf: cmp    $0x80000,%eax
  0x00000000032bd4c5: ja     0x00000000032bfc6b  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd4cb: mov    %eax,0x64(%rsp)
  0x00000000032bd4cf: movslq %eax,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd4d2: shl    %r10
  0x00000000032bd4d5: add    $0x17,%r10         ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd4d9: mov    %r10,0x70(%rsp)
  0x00000000032bd4de: and    $0xfffffffffffffff8,%r10  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd4e2: mov    %r10,0x78(%rsp)
  0x00000000032bd4e7: mov    0x64(%rsp),%r10d
  0x00000000032bd4ec: cmp    $0x80000,%r10d
  0x00000000032bd4f3: ja     0x00000000032bf037
  0x00000000032bd4f9: mov    0x60(%r15),%r10
  0x00000000032bd4fd: mov    %r10,%r8
  0x00000000032bd500: mov    0x78(%rsp),%r11
  0x00000000032bd505: add    %r11,%r10
  0x00000000032bd508: cmp    0x70(%r15),%r10
  0x00000000032bd50c: jae    0x00000000032bf037
  0x00000000032bd512: mov    %r10,0x60(%r15)
  0x00000000032bd516: prefetchw 0xc0(%r10)
  0x00000000032bd51e: movq   $0x1,(%r8)
  0x00000000032bd525: prefetchw 0x100(%r10)
  0x00000000032bd52d: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000000032bd535: mov    0x64(%rsp),%r11d
  0x00000000032bd53a: mov    %r11d,0xc(%r8)
  0x00000000032bd53e: prefetchw 0x140(%r10)
  0x00000000032bd546: prefetchw 0x180(%r10)     ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd54e: mov    %r8,%r10
  0x00000000032bd551: mov    %r10,0x80(%rsp)
  0x00000000032bd559: cmp    0x64(%rsp),%ebp
  0x00000000032bd55d: mov    0x64(%rsp),%esi
  0x00000000032bd561: cmovl  %ebp,%esi          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd564: add    $0x10,%r10         ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd568: mov    %r10,%r9
  0x00000000032bd56b: mov    0x70(%rsp),%r10
  0x00000000032bd570: shr    $0x3,%r10          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd574: mov    %r10,%rbx
  0x00000000032bd577: mov    %r10,%rcx
  0x00000000032bd57a: add    $0xfffffffffffffffe,%rcx
  0x00000000032bd57e: cmp    %esi,%ebp
  0x00000000032bd580: jb     0x00000000032bfc77
  0x00000000032bd586: mov    0x64(%rsp),%r11d
  0x00000000032bd58b: cmp    %esi,%r11d
  0x00000000032bd58e: jb     0x00000000032bfc77  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd594: test   %esi,%esi
  0x00000000032bd596: jle    0x00000000032bfca5
  0x00000000032bd59c: cmp    0x64(%rsp),%esi
  0x00000000032bd5a0: jl     0x00000000032be808
  0x00000000032bd5a6: mov    0x78(%rsp),%r10
  0x00000000032bd5ab: add    $0xfffffffffffffff0,%r10
  0x00000000032bd5af: shr    $0x3,%r10          ;*getfield toStringCache
                                                ; - java.lang.StringBuffer::toString@28 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd5b3: mov    0x68(%rsp),%rcx
  0x00000000032bd5b8: mov    %r9,%rdx
  0x00000000032bd5bb: mov    %r10,%r8
  0x00000000032bd5be: movabs $0x31e2ca0,%r10
  0x00000000032bd5c8: callq  *%r10              ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd5cb: mov    0x80(%rsp),%r10
  0x00000000032bd5d3: mov    %r10,%r8
  0x00000000032bd5d6: shr    $0x3,%r8           ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd5da: mov    %r10,0x38(%rsp)
  0x00000000032bd5df: mov    %r8d,%esi
  0x00000000032bd5e2: jmpq   0x00000000032bc5f5
  0x00000000032bd5e7: movslq %esi,%r8           ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd5ea: mov    %r8,%r11
  0x00000000032bd5ed: shl    %r11
  0x00000000032bd5f0: add    $0x10,%r11         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd5f4: mov    %r11,%r9
  0x00000000032bd5f7: and    $0xfffffffffffffff9,%r9
  0x00000000032bd5fb: mov    0x80(%rsp),%rdi
  0x00000000032bd603: add    %r9,%rdi
  0x00000000032bd606: shr    $0x3,%r11
  0x00000000032bd60a: sub    %r11,%r10
  0x00000000032bd60d: mov    %r10,%rcx
  0x00000000032bd610: xor    %rax,%rax
  0x00000000032bd613: shl    $0x3,%rcx
  0x00000000032bd617: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd61a: mov    0x68(%rsp),%rcx
  0x00000000032bd61f: mov    %rbx,%rdx
  0x00000000032bd622: movabs $0x31e2980,%r10
  0x00000000032bd62c: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd62f: jmpq   0x00000000032bbd7f
  0x00000000032bd634: mov    0x28(%rsp),%r11d
  0x00000000032bd639: test   %r11d,%r11d
  0x00000000032bd63c: jl     0x00000000032bd648  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd63e: mov    0x24(%rsp),%r11d
  0x00000000032bd643: mov    %r11d,0x78(%rsp)   ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd648: mov    0x78(%rsp),%r9d
  0x00000000032bd64d: test   %r9d,%r9d
  0x00000000032bd650: jle    0x00000000032bfe35  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd656: mov    $0x7ffffff7,%ebp
  0x00000000032bd65b: sub    0x78(%rsp),%ebp    ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd65f: test   %ebp,%ebp
  0x00000000032bd661: jl     0x00000000032bfe89  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd667: cmp    $0x80000,%r9d
  0x00000000032bd66e: ja     0x00000000032bfce5  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd674: movslq 0x78(%rsp),%rbx    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd679: shl    %rbx
  0x00000000032bd67c: add    $0x17,%rbx         ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@115 (line 124)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd680: mov    %rbx,%rdi
  0x00000000032bd683: and    $0xfffffffffffffff8,%rdi  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd687: cmp    $0x80000,%r9d
  0x00000000032bd68e: ja     0x00000000032bf188
  0x00000000032bd694: mov    0x60(%r15),%r8
  0x00000000032bd698: mov    %r8,%r10
  0x00000000032bd69b: add    %rdi,%r10
  0x00000000032bd69e: cmp    0x70(%r15),%r10
  0x00000000032bd6a2: jae    0x00000000032bf188
  0x00000000032bd6a8: mov    %r10,0x60(%r15)
  0x00000000032bd6ac: prefetchw 0xc0(%r10)
  0x00000000032bd6b4: movq   $0x1,(%r8)
  0x00000000032bd6bb: prefetchw 0x100(%r10)
  0x00000000032bd6c3: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000000032bd6cb: mov    %r9d,0xc(%r8)
  0x00000000032bd6cf: prefetchw 0x140(%r10)
  0x00000000032bd6d7: prefetchw 0x180(%r10)
  0x00000000032bd6df: mov    0x4c(%rsp),%r11d
  0x00000000032bd6e4: cmp    %r9d,%r11d
  0x00000000032bd6e7: mov    %r9d,%esi
  0x00000000032bd6ea: cmovl  %r11d,%esi         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd6ee: mov    %r8,%rdx
  0x00000000032bd6f1: add    $0x10,%rdx         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd6f5: shr    $0x3,%rbx          ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd6f9: mov    %rbx,%rcx
  0x00000000032bd6fc: add    $0xfffffffffffffffe,%rcx  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::newCapacity@-1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd700: cmp    %esi,%r11d
  0x00000000032bd703: jb     0x00000000032bfcf7  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd709: cmp    %esi,%r9d
  0x00000000032bd70c: jb     0x00000000032bfcf7  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd712: test   %esi,%esi
  0x00000000032bd714: jle    0x00000000032bfd80
  0x00000000032bd71a: cmp    %r9d,%esi
  0x00000000032bd71d: jl     0x00000000032be982  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd723: mov    %r8,%rbx
  0x00000000032bd726: mov    %r11d,%ebp
  0x00000000032bd729: add    $0xfffffffffffffff0,%rdi
  0x00000000032bd72d: shr    $0x3,%rdi          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd731: mov    0x30(%rsp),%rcx
  0x00000000032bd736: mov    %rdi,%r8
  0x00000000032bd739: movabs $0x31e2ca0,%r10
  0x00000000032bd743: callq  *%r10              ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd746: mov    %ebp,%r11d
  0x00000000032bd749: mov    %rbx,%r8           ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd74c: mov    %r8,%rbx
  0x00000000032bd74f: shr    $0x3,%rbx          ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd753: mov    %r8,0x68(%rsp)
  0x00000000032bd758: jmpq   0x00000000032bc6f9
  0x00000000032bd75d: mov    %ecx,%r13d
  0x00000000032bd760: shl    %r13d              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd763: test   %r13d,%r13d
  0x00000000032bd766: jl     0x00000000032bd76e  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd768: add    $0x2,%r13d
  0x00000000032bd76c: jmp    0x00000000032bd774
  0x00000000032bd76e: mov    $0x2,%r13d         ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd774: test   %r13d,%r13d
  0x00000000032bd777: jle    0x00000000032bfe65  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd77d: mov    $0x7ffffff7,%ebp
  0x00000000032bd782: sub    %r13d,%ebp         ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd785: test   %ebp,%ebp
  0x00000000032bd787: jl     0x00000000032bfebd  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd78d: cmp    $0x80000,%r13d
  0x00000000032bd794: ja     0x00000000032bfcef  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd79a: movslq %r13d,%rbx         ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd79d: shl    %rbx
  0x00000000032bd7a0: add    $0x17,%rbx         ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)

  0x00000000032bd7a4: mov    %rbx,%rax
  0x00000000032bd7a7: and    $0xfffffffffffffff8,%rax  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd7ab: cmp    $0x80000,%r13d
  0x00000000032bd7b2: ja     0x00000000032bf1bd
  0x00000000032bd7b8: mov    0x60(%r15),%rdx
  0x00000000032bd7bc: mov    %rdx,%r9
  0x00000000032bd7bf: add    %rax,%r9
  0x00000000032bd7c2: cmp    0x70(%r15),%r9
  0x00000000032bd7c6: jae    0x00000000032bf1bd
  0x00000000032bd7cc: mov    %r9,0x60(%r15)
  0x00000000032bd7d0: prefetchw 0xc0(%r9)
  0x00000000032bd7d8: movq   $0x1,(%rdx)
  0x00000000032bd7df: prefetchw 0x100(%r9)
  0x00000000032bd7e7: movl   $0xf8000041,0x8(%rdx)  ;   {metadata({type array char})}
  0x00000000032bd7ee: mov    %r13d,0xc(%rdx)
  0x00000000032bd7f2: prefetchw 0x140(%r9)
  0x00000000032bd7fa: prefetchw 0x180(%r9)
  0x00000000032bd802: mov    0x80(%rsp),%r9d
  0x00000000032bd80a: cmp    %r13d,%r9d
  0x00000000032bd80d: mov    %r13d,%esi
  0x00000000032bd810: cmovl  %r9d,%esi          ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd814: mov    %rdx,%rbp
  0x00000000032bd817: add    $0x10,%rbp         ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd81b: shr    $0x3,%rbx          ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd81f: mov    %rbx,%rcx
  0x00000000032bd822: add    $0xfffffffffffffffe,%rcx
  0x00000000032bd826: mov    0x80(%rsp),%r9d
  0x00000000032bd82e: cmp    %esi,%r9d
  0x00000000032bd831: jb     0x00000000032bfd2d
  0x00000000032bd837: cmp    %esi,%r13d
  0x00000000032bd83a: jb     0x00000000032bfd2d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd840: test   %esi,%esi
  0x00000000032bd842: jle    0x00000000032bfd92  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd848: cmp    %r13d,%esi
  0x00000000032bd84b: jl     0x00000000032be9d6  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd851: mov    %rbp,%r8
  0x00000000032bd854: mov    %rdx,%r14
  0x00000000032bd857: mov    %r11d,%ebp
  0x00000000032bd85a: add    $0xfffffffffffffff0,%rax
  0x00000000032bd85e: shr    $0x3,%rax          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd862: mov    %rdi,%rcx
  0x00000000032bd865: mov    %r8,%rdx
  0x00000000032bd868: mov    %rax,%r8
  0x00000000032bd86b: movabs $0x31e2ca0,%r10
  0x00000000032bd875: callq  *%r10              ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd878: mov    %ebp,%r11d
  0x00000000032bd87b: mov    %r14,%rdx          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd87e: mov    %rdx,%rbx
  0x00000000032bd881: shr    $0x3,%rbx          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd885: mov    %rdx,%r10
  0x00000000032bd888: mov    %r13d,0x80(%rsp)
  0x00000000032bd890: jmpq   0x00000000032bc73c
  0x00000000032bd895: test   %ebx,%ebx
  0x00000000032bd897: jge    0x00000000032bd89d
  0x00000000032bd899: mov    0x60(%rsp),%eax    ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd89d: mov    %eax,%r10d
  0x00000000032bd8a0: test   %eax,%eax
  0x00000000032bd8a2: jle    0x00000000032bf51d  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd8a8: mov    $0x7ffffff7,%r8d
  0x00000000032bd8ae: sub    %eax,%r8d          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd8b1: test   %r8d,%r8d
  0x00000000032bd8b4: jl     0x00000000032bf579
  0x00000000032bd8ba: cmp    $0x80000,%eax
  0x00000000032bd8c0: ja     0x00000000032bfda4  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd8c6: movslq %eax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd8c9: shl    %r8
  0x00000000032bd8cc: add    $0x17,%r8
  0x00000000032bd8d0: mov    %r8,%r11
  0x00000000032bd8d3: and    $0xfffffffffffffff8,%r11  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd8d7: cmp    $0x80000,%eax
  0x00000000032bd8dd: ja     0x00000000032bf26d
  0x00000000032bd8e3: mov    %r11,0x70(%rsp)
  0x00000000032bd8e8: mov    %r8,0x68(%rsp)
  0x00000000032bd8ed: mov    %eax,0x64(%rsp)
  0x00000000032bd8f1: mov    0x60(%r15),%r10
  0x00000000032bd8f5: mov    %r10,%r8
  0x00000000032bd8f8: add    %r11,%r10
  0x00000000032bd8fb: cmp    0x70(%r15),%r10
  0x00000000032bd8ff: jae    0x00000000032bf27b
  0x00000000032bd905: mov    %r10,0x60(%r15)
  0x00000000032bd909: prefetchw 0xc0(%r10)
  0x00000000032bd911: movq   $0x1,(%r8)
  0x00000000032bd918: prefetchw 0x100(%r10)
  0x00000000032bd920: movl   $0xf8000041,0x8(%r8)  ;   {metadata({type array char})}
  0x00000000032bd928: mov    %eax,0xc(%r8)
  0x00000000032bd92c: prefetchw 0x140(%r10)
  0x00000000032bd934: prefetchw 0x180(%r10)     ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd93c: mov    %r8,%r10           ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd93f: mov    %r10,0x78(%rsp)
  0x00000000032bd944: cmp    0x64(%rsp),%ebp
  0x00000000032bd948: mov    0x64(%rsp),%esi
  0x00000000032bd94c: cmovl  %ebp,%esi          ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd94f: add    $0x10,%r10
  0x00000000032bd953: mov    %r10,%r9
  0x00000000032bd956: mov    0x68(%rsp),%r10
  0x00000000032bd95b: shr    $0x3,%r10
  0x00000000032bd95f: mov    %r10,%rbx
  0x00000000032bd962: mov    %r10,%rcx
  0x00000000032bd965: add    $0xfffffffffffffffe,%rcx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd969: cmp    %esi,%ebp
  0x00000000032bd96b: jb     0x00000000032bfdb4
  0x00000000032bd971: mov    0x64(%rsp),%r11d
  0x00000000032bd976: cmp    %esi,%r11d
  0x00000000032bd979: jb     0x00000000032bfdb4
  0x00000000032bd97f: test   %esi,%esi
  0x00000000032bd981: jle    0x00000000032bfddd
  0x00000000032bd987: cmp    0x64(%rsp),%esi
  0x00000000032bd98b: jl     0x00000000032bea34  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd991: mov    0x70(%rsp),%r10
  0x00000000032bd996: add    $0xfffffffffffffff0,%r10
  0x00000000032bd99a: shr    $0x3,%r10          ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd99e: mov    0x38(%rsp),%rcx
  0x00000000032bd9a3: mov    %r9,%rdx
  0x00000000032bd9a6: mov    %r10,%r8
  0x00000000032bd9a9: movabs $0x31e2ca0,%r10
  0x00000000032bd9b3: callq  *%r10
  0x00000000032bd9b6: mov    0x78(%rsp),%r10
  0x00000000032bd9bb: mov    %r10,%r8
  0x00000000032bd9be: shr    $0x3,%r8           ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bd9c2: mov    %r10,0x20(%rsp)
  0x00000000032bd9c7: jmpq   0x00000000032bcadf
  0x00000000032bd9cc: mov    %r9,%r8
  0x00000000032bd9cf: shr    $0x3,%r8
  0x00000000032bd9d3: mov    %edi,0x24(%rsp)
  0x00000000032bd9d7: jmpq   0x00000000032bcb22  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd9dc: mov    0x60(%rsp),%r9d
  0x00000000032bd9e1: test   %r9d,%r9d
  0x00000000032bd9e4: jg     0x00000000032be441  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd9ea: mov    %r11d,%r8d         ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd9ed: mov    0x68(%rsp),%r9
  0x00000000032bd9f2: mov    0xc(%r9),%ecx
  0x00000000032bd9f6: test   %ecx,%ecx
  0x00000000032bd9f8: jbe    0x00000000032bfee9  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bd9fe: mov    0x3c(%rsp),%ecx
  0x00000000032bda02: mov    %cx,0x10(%r9)      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bda07: mov    0x2c(%rsp),%r11d
  0x00000000032bda0c: mov    $0x1,%edi
  0x00000000032bda11: mov    $0x1,%ebp
  0x00000000032bda16: xor    %esi,%esi
  0x00000000032bda18: mov    %r11d,%ebx
  0x00000000032bda1b: jmpq   0x00000000032bc530
  0x00000000032bda20: test   %ecx,%ecx
  0x00000000032bda22: jge    0x00000000032bda28  ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bda24: mov    0x60(%rsp),%eax    ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bda28: mov    %eax,%r10d
  0x00000000032bda2b: test   %eax,%eax
  0x00000000032bda2d: jle    0x00000000032bfb13  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bda33: mov    $0x7ffffff7,%r10d
  0x00000000032bda39: sub    %eax,%r10d         ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bda3c: mov    %r10d,%r9d
  0x00000000032bda3f: test   %r10d,%r10d
  0x00000000032bda42: jl     0x00000000032bfb59  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bda48: cmp    $0x80000,%eax
  0x00000000032bda4e: ja     0x00000000032bff09  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bda54: movslq %eax,%r11          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bda57: mov    %eax,0x4c(%rsp)
  0x00000000032bda5b: shl    %r11
  0x00000000032bda5e: add    $0x17,%r11         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bda62: mov    %r11,0x70(%rsp)
  0x00000000032bda67: mov    %r11,%r10
  0x00000000032bda6a: and    $0xfffffffffffffff8,%r10  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bda6e: mov    %r10,0x78(%rsp)
  0x00000000032bda73: cmp    $0x80000,%eax
  0x00000000032bda79: ja     0x00000000032bf6e5
  0x00000000032bda7f: mov    0x60(%r15),%r10
  0x00000000032bda83: mov    %r10,%r8
  0x00000000032bda86: mov    %r10,%r11
  0x00000000032bda89: mov    0x78(%rsp),%r10
  0x00000000032bda8e: add    %r10,%r11
  0x00000000032bda91: cmp    0x70(%r15),%r11
  0x00000000032bda95: jae    0x00000000032bf6e5
  0x00000000032bda9b: mov    %r11,0x60(%r15)
  0x00000000032bda9f: prefetchw 0xc0(%r11)
  0x00000000032bdaa7: mov    %r8,%r10
  0x00000000032bdaaa: movq   $0x1,(%r10)
  0x00000000032bdab1: prefetchw 0x100(%r11)
  0x00000000032bdab9: movl   $0xf8000041,0x8(%r10)  ;   {metadata({type array char})}
  0x00000000032bdac1: mov    %eax,0xc(%r8)
  0x00000000032bdac5: prefetchw 0x140(%r11)
  0x00000000032bdacd: prefetchw 0x180(%r11)     ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdad5: mov    %r8,%r10           ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdad8: mov    %r10,0x80(%rsp)
  0x00000000032bdae0: cmp    0x4c(%rsp),%ebp
  0x00000000032bdae4: mov    0x4c(%rsp),%esi
  0x00000000032bdae8: cmovl  %ebp,%esi          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdaeb: add    $0x10,%r10         ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdaef: mov    %r10,%r9
  0x00000000032bdaf2: mov    0x70(%rsp),%r10
  0x00000000032bdaf7: shr    $0x3,%r10          ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdafb: mov    %r10,%rbx
  0x00000000032bdafe: mov    %r10,%rcx
  0x00000000032bdb01: add    $0xfffffffffffffffe,%rcx
  0x00000000032bdb05: cmp    %esi,%ebp
  0x00000000032bdb07: jb     0x00000000032bff11
  0x00000000032bdb0d: mov    0x4c(%rsp),%r10d
  0x00000000032bdb12: cmp    %esi,%r10d
  0x00000000032bdb15: jb     0x00000000032bff11  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdb1b: test   %esi,%esi
  0x00000000032bdb1d: jle    0x00000000032bff3d
  0x00000000032bdb23: cmp    %r10d,%esi
  0x00000000032bdb26: jl     0x00000000032befa0  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdb2c: mov    0x78(%rsp),%r10
  0x00000000032bdb31: add    $0xfffffffffffffff0,%r10
  0x00000000032bdb35: shr    $0x3,%r10          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdb39: mov    0x68(%rsp),%rcx
  0x00000000032bdb3e: mov    %r9,%rdx
  0x00000000032bdb41: mov    %r10,%r8
  0x00000000032bdb44: movabs $0x31e2ca0,%r10
  0x00000000032bdb4e: callq  *%r10              ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdb51: mov    0x80(%rsp),%r10
  0x00000000032bdb59: mov    %r10,%r8
  0x00000000032bdb5c: shr    $0x3,%r8           ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdb60: mov    %r10,0x38(%rsp)
  0x00000000032bdb65: jmpq   0x00000000032bd07d
  0x00000000032bdb6a: movslq %esi,%r8           ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdb6d: mov    %r8,%r11
  0x00000000032bdb70: shl    %r11
  0x00000000032bdb73: add    $0x10,%r11         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdb77: mov    %r11,%r9
  0x00000000032bdb7a: and    $0xfffffffffffffff9,%r9
  0x00000000032bdb7e: mov    0x80(%rsp),%rdi
  0x00000000032bdb86: add    %r9,%rdi
  0x00000000032bdb89: shr    $0x3,%r11
  0x00000000032bdb8d: sub    %r11,%r10
  0x00000000032bdb90: mov    %r10,%rcx
  0x00000000032bdb93: xor    %rax,%rax
  0x00000000032bdb96: shl    $0x3,%rcx
  0x00000000032bdb9a: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdb9d: mov    0x68(%rsp),%rcx
  0x00000000032bdba2: movabs $0x31e2980,%r10
  0x00000000032bdbac: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdbaf: jmpq   0x00000000032bc19c  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdbb4: movabs $0x7c0000208,%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bdbbe: mov    %esi,%r8d
  0x00000000032bdbc1: xchg   %ax,%ax
  0x00000000032bdbc3: callq  0x00000000032935e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=9640}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bdbc8: mov    %rax,%r8
  0x00000000032bdbcb: jmpq   0x00000000032bbd00
  0x00000000032bdbd0: movabs $0x7c0000208,%rdx  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bdbda: mov    0x4c(%rsp),%r8d
  0x00000000032bdbdf: mov    0x50(%rsp),%rbp
  0x00000000032bdbe4: data16 xchg %ax,%ax
  0x00000000032bdbe7: callq  0x00000000032936e0  ; OopMap{rbp=Oop [48]=Oop [64]=Oop [72]=NarrowOop [80]=Oop off=9676}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bdbec: mov    %rax,%r10
  0x00000000032bdbef: jmpq   0x00000000032bb96b  ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdbf4: movabs $0x7c00016d0,%rdx  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032bdbfe: nop
  0x00000000032bdbff: callq  0x0000000003294ee0  ; OopMap{[32]=NarrowOop [40]=Oop off=9700}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bdc04: jmpq   0x00000000032bbfe0
  0x00000000032bdc09: mov    0x28(%rsp),%r8d
  0x00000000032bdc0e: test   %r8d,%r8d
  0x00000000032bdc11: jl     0x00000000032bdc19  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdc13: mov    0x24(%rsp),%ebx
  0x00000000032bdc17: jmp    0x00000000032bdc1e
  0x00000000032bdc19: mov    $0x1,%ebx          ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdc1e: test   %ebx,%ebx
  0x00000000032bdc20: jle    0x00000000032bfff3  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalize@93 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdc26: mov    $0x7ffffff7,%ebp
  0x00000000032bdc2b: sub    %ebx,%ebp          ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdc2d: test   %ebp,%ebp
  0x00000000032bdc2f: jl     0x00000000032c001d  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdc35: cmp    $0x80000,%ebx
  0x00000000032bdc3b: ja     0x00000000032bff4f  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdc41: movslq %ebx,%r9           ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdc44: shl    %r9
  0x00000000032bdc47: add    $0x17,%r9          ;*invokevirtual toString
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdc4b: mov    %r9,%rax
  0x00000000032bdc4e: and    $0xfffffffffffffff8,%rax  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdc52: cmp    $0x80000,%ebx
  0x00000000032bdc58: ja     0x00000000032bf8a1
  0x00000000032bdc5e: mov    0x60(%r15),%rdx
  0x00000000032bdc62: mov    %rdx,%r8
  0x00000000032bdc65: add    %rax,%r8
  0x00000000032bdc68: cmp    0x70(%r15),%r8
  0x00000000032bdc6c: jae    0x00000000032bf8a1
  0x00000000032bdc72: mov    %r8,0x60(%r15)
  0x00000000032bdc76: prefetchw 0xc0(%r8)
  0x00000000032bdc7e: movq   $0x1,(%rdx)
  0x00000000032bdc85: prefetchw 0x100(%r8)
  0x00000000032bdc8d: movl   $0xf8000041,0x8(%rdx)  ;   {metadata({type array char})}
  0x00000000032bdc94: mov    %ebx,0xc(%rdx)
  0x00000000032bdc97: prefetchw 0x140(%r8)
  0x00000000032bdc9f: prefetchw 0x180(%r8)
  0x00000000032bdca7: cmp    %ebx,%r11d
  0x00000000032bdcaa: mov    %ebx,%esi
  0x00000000032bdcac: cmovl  %r11d,%esi         ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdcb0: mov    %rdx,%r8
  0x00000000032bdcb3: add    $0x10,%r8          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdcb7: shr    $0x3,%r9           ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdcbb: mov    %r9,%rcx
  0x00000000032bdcbe: add    $0xfffffffffffffffe,%rcx
  0x00000000032bdcc2: cmp    %esi,%r11d
  0x00000000032bdcc5: jb     0x00000000032bff57
  0x00000000032bdccb: cmp    %esi,%ebx
  0x00000000032bdccd: jb     0x00000000032bff57  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdcd3: test   %esi,%esi
  0x00000000032bdcd5: jle    0x00000000032bff9d
  0x00000000032bdcdb: cmp    %ebx,%esi
  0x00000000032bdcdd: jl     0x00000000032bf0d9  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdce3: mov    %rdx,%rbx
  0x00000000032bdce6: mov    %r11d,%ebp
  0x00000000032bdce9: add    $0xfffffffffffffff0,%rax
  0x00000000032bdced: shr    $0x3,%rax          ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdcf1: mov    %rdi,%rcx
  0x00000000032bdcf4: mov    %r8,%rdx
  0x00000000032bdcf7: mov    %rax,%r8
  0x00000000032bdcfa: movabs $0x31e2ca0,%r10
  0x00000000032bdd04: callq  *%r10              ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdd07: mov    %ebp,%r11d
  0x00000000032bdd0a: mov    %rbx,%rdx          ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdd0d: mov    %rdx,%rbx
  0x00000000032bdd10: shr    $0x3,%rbx          ;*getfield value
                                                ; - java.lang.String::charAt@23 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdd14: mov    %rdx,%r10
  0x00000000032bdd17: jmpq   0x00000000032bd10e  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@100 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdd1c: add    $0x2,%r11d         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdd20: cmp    0x64(%rsp),%r11d
  0x00000000032bdd25: jl     0x00000000032bc25a  ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::toString@20 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdd2b: cmp    0x4c(%rsp),%r11d
  0x00000000032bdd30: jge    0x00000000032bb9ac
  0x00000000032bdd36: test   %r11d,%r11d
  0x00000000032bdd39: jl     0x00000000032beb59
  0x00000000032bdd3f: cmp    0x4c(%rsp),%r11d
  0x00000000032bdd44: jge    0x00000000032beb8d  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdd4a: movzwl 0x10(%r9,%r11,2),%r8d  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdd50: cmp    $0x5c,%r8d
  0x00000000032bdd54: je     0x00000000032bdd60
  0x00000000032bdd56: cmp    $0x2f,%r8d
  0x00000000032bdd5a: jne    0x00000000032bb9ac  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdd60: inc    %r11d              ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdd63: cmp    0x4c(%rsp),%r11d
  0x00000000032bdd68: jl     0x00000000032bdd36  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdd6a: jmpq   0x00000000032bb9ac
  0x00000000032bdd6f: test   %ebx,%ebx
  0x00000000032bdd71: jge    0x00000000032bdd77
  0x00000000032bdd73: mov    0x60(%rsp),%eax    ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdd77: mov    %eax,%r10d
  0x00000000032bdd7a: test   %eax,%eax
  0x00000000032bdd7c: jle    0x00000000032bfb1d  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdd82: mov    $0x7ffffff7,%r8d
  0x00000000032bdd88: sub    %eax,%r8d          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdd8b: test   %r8d,%r8d
  0x00000000032bdd8e: jl     0x00000000032bfb6e
  0x00000000032bdd94: cmp    $0x80000,%eax
  0x00000000032bdd9a: ja     0x00000000032bffaf  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdda0: movslq %eax,%rbx          ;*iload_2
                                                ; - java.lang.AbstractStringBuilder::newCapacity@18 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdda3: shl    %rbx
  0x00000000032bdda6: add    $0x17,%rbx
  0x00000000032bddaa: mov    %rbx,%r9
  0x00000000032bddad: and    $0xfffffffffffffff8,%r9  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bddb1: cmp    $0x80000,%eax
  0x00000000032bddb7: ja     0x00000000032bf8f6
  0x00000000032bddbd: mov    0x60(%r15),%rcx
  0x00000000032bddc1: mov    %rcx,%r8
  0x00000000032bddc4: add    %r9,%r8
  0x00000000032bddc7: cmp    0x70(%r15),%r8
  0x00000000032bddcb: jae    0x00000000032bf8f6
  0x00000000032bddd1: mov    %r8,0x60(%r15)
  0x00000000032bddd5: prefetchw 0xc0(%r8)
  0x00000000032bdddd: movq   $0x1,(%rcx)
  0x00000000032bdde4: prefetchw 0x100(%r8)
  0x00000000032bddec: movl   $0xf8000041,0x8(%rcx)  ;   {metadata({type array char})}
  0x00000000032bddf3: mov    %eax,0xc(%rcx)
  0x00000000032bddf6: prefetchw 0x140(%r8)
  0x00000000032bddfe: prefetchw 0x180(%r8)
  0x00000000032bde06: mov    %eax,0x4c(%rsp)
  0x00000000032bde0a: mov    %rbx,0x68(%rsp)
  0x00000000032bde0f: mov    %r9,0x70(%rsp)     ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bde14: cmp    0x4c(%rsp),%ebp
  0x00000000032bde18: mov    0x4c(%rsp),%esi
  0x00000000032bde1c: cmovl  %ebp,%esi          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bde1f: mov    %rcx,%r10
  0x00000000032bde22: add    $0x10,%r10         ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bde26: mov    %r10,%rbx
  0x00000000032bde29: mov    %rcx,0x78(%rsp)
  0x00000000032bde2e: mov    0x68(%rsp),%r10
  0x00000000032bde33: shr    $0x3,%r10
  0x00000000032bde37: mov    %r10,%rcx
  0x00000000032bde3a: add    $0xfffffffffffffffe,%rcx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bde3e: cmp    %esi,%ebp
  0x00000000032bde40: jb     0x00000000032bffb7
  0x00000000032bde46: mov    0x4c(%rsp),%r11d
  0x00000000032bde4b: cmp    %esi,%r11d
  0x00000000032bde4e: jb     0x00000000032bffb7
  0x00000000032bde54: test   %esi,%esi
  0x00000000032bde56: jle    0x00000000032bffe1
  0x00000000032bde5c: cmp    0x4c(%rsp),%esi
  0x00000000032bde60: jl     0x00000000032bf13e  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bde66: mov    0x70(%rsp),%r10
  0x00000000032bde6b: add    $0xfffffffffffffff0,%r10
  0x00000000032bde6f: shr    $0x3,%r10          ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bde73: mov    0x38(%rsp),%rcx
  0x00000000032bde78: mov    %rbx,%rdx
  0x00000000032bde7b: mov    %r10,%r8
  0x00000000032bde7e: movabs $0x31e2ca0,%r10
  0x00000000032bde88: callq  *%r10
  0x00000000032bde8b: mov    0x78(%rsp),%r10
  0x00000000032bde90: mov    %r10,%r8
  0x00000000032bde93: shr    $0x3,%r8           ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bde97: mov    %r10,0x20(%rsp)
  0x00000000032bde9c: mov    0x2c(%rsp),%r11d
  0x00000000032bdea1: jmpq   0x00000000032bd2e8
  0x00000000032bdea6: mov    0x30(%rsp),%r11d   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdeab: mov    %edi,%ecx
  0x00000000032bdead: mov    %ebp,%edi
  0x00000000032bdeaf: mov    %ecx,%ebp          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdeb1: mov    $0xffffffe4,%edx
  0x00000000032bdeb6: mov    %rax,0x20(%rsp)
  0x00000000032bdebb: mov    %r11d,0x28(%rsp)
  0x00000000032bdec0: mov    %edi,0x2c(%rsp)
  0x00000000032bdec4: mov    %r9d,0x30(%rsp)
  0x00000000032bdec9: mov    %r10,0x38(%rsp)
  0x00000000032bdece: mov    %esi,0x34(%rsp)
  0x00000000032bded2: mov    %ebx,0x40(%rsp)
  0x00000000032bded6: nop
  0x00000000032bded7: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [56]=Oop [64]=NarrowOop [80]=Oop off=10428}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bdedc: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032bdedd: mov    0x24(%rsp),%r11d
  0x00000000032bdee2: mov    %r11d,0x2c(%rsp)   ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdee7: mov    $0xffffffe4,%edx   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdeec: mov    0x40(%rsp),%r11
  0x00000000032bdef1: mov    %r11,0x20(%rsp)
  0x00000000032bdef6: mov    0x30(%rsp),%r8d
  0x00000000032bdefb: mov    %r8d,0x28(%rsp)
  0x00000000032bdf00: mov    0x34(%rsp),%r11d
  0x00000000032bdf05: mov    %r11d,0x30(%rsp)
  0x00000000032bdf0a: mov    %r10,0x48(%rsp)
  0x00000000032bdf0f: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=10484}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bdf14: int3   
  0x00000000032bdf15: movslq %esi,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdf18: mov    %r8,%r10
  0x00000000032bdf1b: shl    %r10
  0x00000000032bdf1e: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdf22: mov    %r10,%r11
  0x00000000032bdf25: and    $0xfffffffffffffff9,%r11
  0x00000000032bdf29: mov    0x80(%rsp),%rdi
  0x00000000032bdf31: add    %r11,%rdi
  0x00000000032bdf34: shr    $0x3,%r10
  0x00000000032bdf38: mov    %rbx,%r11
  0x00000000032bdf3b: sub    %r10,%r11
  0x00000000032bdf3e: mov    %r11,%rcx
  0x00000000032bdf41: xor    %rax,%rax
  0x00000000032bdf44: shl    $0x3,%rcx
  0x00000000032bdf48: rep rex.W stos %al,%es:(%rdi)  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdf4b: mov    0x68(%rsp),%rcx
  0x00000000032bdf50: mov    %r9,%rdx
  0x00000000032bdf53: movabs $0x31e2980,%r10
  0x00000000032bdf5d: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdf60: jmpq   0x00000000032bc9fc
  0x00000000032bdf65: mov    0x28(%rsp),%r11d
  0x00000000032bdf6a: test   %r11d,%r11d
  0x00000000032bdf6d: jl     0x00000000032bdf79  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdf6f: mov    0x24(%rsp),%r11d
  0x00000000032bdf74: mov    %r11d,0x78(%rsp)   ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalizePrefix@62 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdf79: mov    0x78(%rsp),%r8d
  0x00000000032bdf7e: test   %r8d,%r8d
  0x00000000032bdf81: jle    0x00000000032c00fb  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdf87: mov    $0x7ffffff7,%ebp
  0x00000000032bdf8c: sub    0x78(%rsp),%ebp    ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalizePrefix@62 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdf90: test   %ebp,%ebp
  0x00000000032bdf92: jl     0x00000000032c014d  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bdf98: cmp    $0x80000,%r8d
  0x00000000032bdf9f: ja     0x00000000032c004d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdfa5: movslq 0x78(%rsp),%r11    ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdfaa: shl    %r11
  0x00000000032bdfad: add    $0x17,%r11         ;*ifnonnull
                                                ; - java.lang.StringBuffer::toString@4 (line 668)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdfb1: mov    %r11,%r9
  0x00000000032bdfb4: and    $0xfffffffffffffff8,%r9  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bdfb8: cmp    $0x80000,%r8d
  0x00000000032bdfbf: ja     0x00000000032bfa3e
  0x00000000032bdfc5: mov    0x60(%r15),%rbx
  0x00000000032bdfc9: mov    %rbx,%r10
  0x00000000032bdfcc: add    %r9,%r10
  0x00000000032bdfcf: cmp    0x70(%r15),%r10
  0x00000000032bdfd3: jae    0x00000000032bfa3e
  0x00000000032bdfd9: mov    %r10,0x60(%r15)
  0x00000000032bdfdd: prefetchw 0xc0(%r10)
  0x00000000032bdfe5: movq   $0x1,(%rbx)
  0x00000000032bdfec: prefetchw 0x100(%r10)
  0x00000000032bdff4: movl   $0xf8000041,0x8(%rbx)  ;   {metadata({type array char})}
  0x00000000032bdffb: mov    %r8d,0xc(%rbx)
  0x00000000032bdfff: prefetchw 0x140(%r10)
  0x00000000032be007: prefetchw 0x180(%r10)
  0x00000000032be00f: mov    0x4c(%rsp),%r10d
  0x00000000032be014: cmp    %r8d,%r10d
  0x00000000032be017: mov    %r8d,%esi
  0x00000000032be01a: cmovl  %r10d,%esi         ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be01e: mov    %rbx,%rdi
  0x00000000032be021: add    $0x10,%rdi         ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be025: shr    $0x3,%r11          ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be029: mov    %r11,%rcx
  0x00000000032be02c: add    $0xfffffffffffffffe,%rcx
  0x00000000032be030: cmp    %esi,%r10d
  0x00000000032be033: jb     0x00000000032c005f
  0x00000000032be039: cmp    %esi,%r8d
  0x00000000032be03c: jb     0x00000000032c005f
  0x00000000032be042: test   %esi,%esi
  0x00000000032be044: jle    0x00000000032c00da
  0x00000000032be04a: cmp    %r8d,%esi
  0x00000000032be04d: jl     0x00000000032bf41d  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be053: mov    %rbx,%rbp
  0x00000000032be056: mov    %r10d,%ebx
  0x00000000032be059: add    $0xfffffffffffffff0,%r9
  0x00000000032be05d: shr    $0x3,%r9           ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be061: mov    0x70(%rsp),%rcx
  0x00000000032be066: mov    %rdi,%rdx
  0x00000000032be069: mov    %r9,%r8
  0x00000000032be06c: movabs $0x31e2ca0,%r10
  0x00000000032be076: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be079: mov    %ebx,%r10d
  0x00000000032be07c: mov    %rbp,%rbx          ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be07f: mov    %rbx,%r8
  0x00000000032be082: shr    $0x3,%r8           ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@102 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be086: mov    %rbx,0x68(%rsp)
  0x00000000032be08b: jmpq   0x00000000032bc450
  0x00000000032be090: mov    0x74(%rsp),%r8d
  0x00000000032be095: mov    %r8d,%r13d
  0x00000000032be098: shl    %r13d              ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be09b: test   %r13d,%r13d
  0x00000000032be09e: jl     0x00000000032be0a6  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be0a0: add    $0x2,%r13d
  0x00000000032be0a4: jmp    0x00000000032be0ac
  0x00000000032be0a6: mov    $0x2,%r13d         ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be0ac: test   %r13d,%r13d
  0x00000000032be0af: jle    0x00000000032c0129
  0x00000000032be0b5: mov    $0x7ffffff7,%ebp
  0x00000000032be0ba: sub    %r13d,%ebp
  0x00000000032be0bd: test   %ebp,%ebp
  0x00000000032be0bf: jl     0x00000000032c0181  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be0c5: cmp    $0x80000,%r13d
  0x00000000032be0cc: ja     0x00000000032c0057  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be0d2: movslq %r13d,%rdx         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be0d5: shl    %rdx
  0x00000000032be0d8: add    $0x17,%rdx         ;*invokestatic copyOfRange
                                                ; - java.lang.StringBuffer::toString@17 (line 669)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be0dc: mov    %rdx,%r8
  0x00000000032be0df: and    $0xfffffffffffffff8,%r8  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be0e3: cmp    $0x80000,%r13d
  0x00000000032be0ea: ja     0x00000000032bfa71
  0x00000000032be0f0: mov    0x60(%r15),%rbp
  0x00000000032be0f4: mov    %rbp,%r11
  0x00000000032be0f7: add    %r8,%r11
  0x00000000032be0fa: cmp    0x70(%r15),%r11
  0x00000000032be0fe: jae    0x00000000032bfa71
  0x00000000032be104: mov    %r11,0x60(%r15)
  0x00000000032be108: prefetchw 0xc0(%r11)
  0x00000000032be110: movq   $0x1,0x0(%rbp)
  0x00000000032be118: prefetchw 0x100(%r11)
  0x00000000032be120: movl   $0xf8000041,0x8(%rbp)  ;   {metadata({type array char})}
  0x00000000032be127: mov    %r13d,0xc(%rbp)
  0x00000000032be12b: prefetchw 0x140(%r11)
  0x00000000032be133: prefetchw 0x180(%r11)     ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be13b: mov    0x74(%rsp),%r11d
  0x00000000032be140: cmp    %r13d,%r11d
  0x00000000032be143: mov    %r13d,%esi
  0x00000000032be146: cmovl  %r11d,%esi         ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be14a: mov    %rbp,%rax
  0x00000000032be14d: add    $0x10,%rax         ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be151: shr    $0x3,%rdx          ;*iadd
                                                ; - java.lang.AbstractStringBuilder::append@6 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be155: mov    %rdx,%rcx
  0x00000000032be158: add    $0xfffffffffffffffe,%rcx
  0x00000000032be15c: mov    0x74(%rsp),%r11d
  0x00000000032be161: cmp    %esi,%r11d
  0x00000000032be164: jb     0x00000000032c0091
  0x00000000032be16a: cmp    %esi,%r13d
  0x00000000032be16d: jb     0x00000000032c0091
  0x00000000032be173: test   %esi,%esi
  0x00000000032be175: jle    0x00000000032c00e9
  0x00000000032be17b: cmp    %r13d,%esi
  0x00000000032be17e: jl     0x00000000032bf474  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be184: mov    %rbp,%r14
  0x00000000032be187: mov    %r10d,%ebp
  0x00000000032be18a: add    $0xfffffffffffffff0,%r8
  0x00000000032be18e: shr    $0x3,%r8           ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be192: mov    %rdi,%rcx
  0x00000000032be195: mov    %rax,%rdx
  0x00000000032be198: movabs $0x31e2ca0,%r10
  0x00000000032be1a2: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be1a5: mov    %ebp,%r10d
  0x00000000032be1a8: mov    %r14,%rbp          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be1ab: mov    %rbp,%r8
  0x00000000032be1ae: shr    $0x3,%r8           ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be1b2: mov    %rbp,%r9
  0x00000000032be1b5: mov    %r13d,0x74(%rsp)
  0x00000000032be1ba: jmpq   0x00000000032bc484
  0x00000000032be1bf: mov    0x30(%rsp),%r11d   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be1c4: mov    %edi,%ecx
  0x00000000032be1c6: mov    %ebp,%edi
  0x00000000032be1c8: mov    %ecx,%ebp          ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be1ca: mov    $0xffffff65,%edx
  0x00000000032be1cf: mov    %r11d,0x28(%rsp)
  0x00000000032be1d4: mov    %edi,0x2c(%rsp)
  0x00000000032be1d8: mov    %r9d,0x30(%rsp)
  0x00000000032be1dd: mov    %rax,0x38(%rsp)
  0x00000000032be1e2: mov    %r8d,0x40(%rsp)
  0x00000000032be1e7: mov    %esi,0x44(%rsp)
  0x00000000032be1eb: mov    %ebx,0x48(%rsp)
  0x00000000032be1ef: callq  0x00000000031d57a0  ; OopMap{[56]=Oop [72]=NarrowOop [80]=Oop off=11220}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be1f4: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032be1f5: movslq %esi,%r8           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be1f8: mov    %r8,%r10
  0x00000000032be1fb: shl    %r10
  0x00000000032be1fe: add    $0x10,%r10
  0x00000000032be202: mov    %r10,%r11
  0x00000000032be205: and    $0xfffffffffffffff9,%r11
  0x00000000032be209: mov    0x80(%rsp),%rdi
  0x00000000032be211: add    %r11,%rdi
  0x00000000032be214: shr    $0x3,%r10
  0x00000000032be218: mov    %rbx,%r11
  0x00000000032be21b: sub    %r10,%r11
  0x00000000032be21e: mov    %r11,%rcx
  0x00000000032be221: xor    %rax,%rax
  0x00000000032be224: shl    $0x3,%rcx
  0x00000000032be228: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be22b: mov    0x68(%rsp),%rcx
  0x00000000032be230: mov    %r9,%rdx
  0x00000000032be233: movabs $0x31e2980,%r10
  0x00000000032be23d: callq  *%r10              ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be240: jmpq   0x00000000032bcd30
  0x00000000032be245: movslq %esi,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be248: mov    %r8,%r10
  0x00000000032be24b: shl    %r10
  0x00000000032be24e: add    $0x10,%r10         ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be252: mov    %r10,%r11
  0x00000000032be255: and    $0xfffffffffffffff9,%r11
  0x00000000032be259: mov    0x80(%rsp),%rdi
  0x00000000032be261: add    %r11,%rdi
  0x00000000032be264: shr    $0x3,%r10
  0x00000000032be268: mov    %rbx,%r11
  0x00000000032be26b: sub    %r10,%r11
  0x00000000032be26e: mov    %r11,%rcx
  0x00000000032be271: xor    %rax,%rax
  0x00000000032be274: shl    $0x3,%rcx
  0x00000000032be278: rep rex.W stos %al,%es:(%rdi)  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be27b: mov    0x38(%rsp),%rcx
  0x00000000032be280: mov    %r9,%rdx
  0x00000000032be283: movabs $0x31e2980,%r10
  0x00000000032be28d: callq  *%r10              ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be290: jmpq   0x00000000032bce9f
  0x00000000032be295: mov    %esi,0x2c(%rsp)
  0x00000000032be299: mov    %r8,0x70(%rsp)
  0x00000000032be29e: mov    %r10,0x78(%rsp)    ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be2a3: movabs $0x7c0000208,%rdx  ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032be2ad: mov    0x2c(%rsp),%r8d
  0x00000000032be2b2: nop
  0x00000000032be2b3: callq  0x00000000032935e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=11416}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be2b8: mov    %rax,%r8
  0x00000000032be2bb: jmpq   0x00000000032bc12d
  0x00000000032be2c0: mov    %r11d,0x24(%rsp)   ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be2c5: mov    0x24(%rsp),%r8d
  0x00000000032be2ca: mov    %r8d,0x2c(%rsp)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be2cf: mov    $0xffffffe4,%edx
  0x00000000032be2d4: mov    0x40(%rsp),%rbp
  0x00000000032be2d9: mov    0x30(%rsp),%r11d
  0x00000000032be2de: mov    %r11d,0x20(%rsp)
  0x00000000032be2e3: mov    0x34(%rsp),%r11d
  0x00000000032be2e8: mov    %r11d,0x28(%rsp)
  0x00000000032be2ed: mov    %r10,0x30(%rsp)
  0x00000000032be2f2: mov    0x4c(%rsp),%r11d
  0x00000000032be2f7: mov    %r11d,0x38(%rsp)
  0x00000000032be2fc: mov    0x48(%rsp),%r10d
  0x00000000032be301: mov    %r10d,0x3c(%rsp)
  0x00000000032be306: mov    0x50(%rsp),%r10
  0x00000000032be30b: mov    %r10,0x48(%rsp)
  0x00000000032be310: data16 xchg %ax,%ax
  0x00000000032be313: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [48]=Oop [60]=NarrowOop [72]=Oop [80]=Oop off=11512}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be318: int3   
  0x00000000032be319: mov    0x2c(%rsp),%r10d
  0x00000000032be31e: mov    %r10d,0x24(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be323: mov    0x24(%rsp),%r11d
  0x00000000032be328: mov    %r11d,0x2c(%rsp)
  0x00000000032be32d: jmp    0x00000000032be343
  0x00000000032be32f: mov    0x2c(%rsp),%r10d
  0x00000000032be334: mov    %r10d,0x24(%rsp)   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be339: mov    0x24(%rsp),%r11d
  0x00000000032be33e: mov    %r11d,0x2c(%rsp)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be343: mov    $0xffffff65,%edx
  0x00000000032be348: mov    0x30(%rsp),%r11d
  0x00000000032be34d: mov    %r11d,0x20(%rsp)
  0x00000000032be352: mov    0x2c(%rsp),%r10d
  0x00000000032be357: mov    %r10d,0x24(%rsp)
  0x00000000032be35c: data16 xchg %ax,%ax
  0x00000000032be35f: callq  0x00000000031d57a0  ; OopMap{[64]=Oop [72]=NarrowOop [80]=Oop off=11588}
                                                ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be364: int3   
  0x00000000032be365: mov    0x2c(%rsp),%r8d
  0x00000000032be36a: mov    %r8d,0x24(%rsp)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be36f: mov    0x24(%rsp),%r10d   ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be374: mov    $0xffffffe4,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be379: mov    0x40(%rsp),%r8
  0x00000000032be37e: mov    %r8,0x20(%rsp)
  0x00000000032be383: mov    0x30(%rsp),%r8d
  0x00000000032be388: mov    %r8d,0x28(%rsp)
  0x00000000032be38d: mov    %r10d,0x2c(%rsp)
  0x00000000032be392: mov    %r11,0x48(%rsp)
  0x00000000032be397: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=11644}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be39c: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000032be39d: movslq %esi,%r8           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be3a0: mov    %r8,%r10
  0x00000000032be3a3: shl    %r10
  0x00000000032be3a6: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be3aa: mov    %r10,%r9
  0x00000000032be3ad: and    $0xfffffffffffffff9,%r9
  0x00000000032be3b1: mov    0x80(%rsp),%rdi
  0x00000000032be3b9: add    %r9,%rdi
  0x00000000032be3bc: shr    $0x3,%r10
  0x00000000032be3c0: mov    %rbx,%r9
  0x00000000032be3c3: sub    %r10,%r9
  0x00000000032be3c6: mov    %r9,%rcx
  0x00000000032be3c9: xor    %rax,%rax
  0x00000000032be3cc: shl    $0x3,%rcx
  0x00000000032be3d0: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be3d3: mov    0x68(%rsp),%rcx
  0x00000000032be3d8: mov    %r11,%rdx
  0x00000000032be3db: movabs $0x31e2980,%r10
  0x00000000032be3e5: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be3e8: jmpq   0x00000000032bd001  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be3ed: movabs $0x7c0000208,%rdx  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032be3f7: mov    %edi,%r8d
  0x00000000032be3fa: nop
  0x00000000032be3fb: callq  0x00000000032935e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=11744}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032be400: mov    %rax,%r8
  0x00000000032be403: jmpq   0x00000000032bc980
  0x00000000032be408: movabs $0x7c0000208,%rdx  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032be412: mov    0x4c(%rsp),%r8d
  0x00000000032be417: mov    0x50(%rsp),%rbp
  0x00000000032be41c: data16 xchg %ax,%ax
  0x00000000032be41f: callq  0x00000000032936e0  ; OopMap{rbp=Oop [48]=Oop [64]=Oop [72]=NarrowOop [80]=Oop off=11780}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032be424: mov    %rax,%r8
  0x00000000032be427: jmpq   0x00000000032bc324  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be42c: movabs $0x7c00016d0,%rdx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032be436: nop
  0x00000000032be437: callq  0x0000000003294ee0  ; OopMap{[32]=NarrowOop [40]=Oop off=11804}
                                                ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032be43c: jmpq   0x00000000032bcb84
  0x00000000032be441: mov    0x28(%rsp),%r11d
  0x00000000032be446: test   %r11d,%r11d
  0x00000000032be449: jl     0x00000000032be451  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be44b: mov    0x24(%rsp),%ebx
  0x00000000032be44f: jmp    0x00000000032be456
  0x00000000032be451: mov    $0x1,%ebx          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be456: test   %ebx,%ebx
  0x00000000032be458: jle    0x00000000032c0214  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be45e: mov    $0x7ffffff7,%ebp
  0x00000000032be463: sub    %ebx,%ebp          ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be465: test   %ebp,%ebp
  0x00000000032be467: jl     0x00000000032c0241  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be46d: cmp    $0x80000,%ebx
  0x00000000032be473: ja     0x00000000032c01ad  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be479: movslq %ebx,%r9           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be47c: shl    %r9
  0x00000000032be47f: add    $0x17,%r9
  0x00000000032be483: mov    %r9,%rdi
  0x00000000032be486: and    $0xfffffffffffffff8,%rdi  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be48a: cmp    $0x80000,%ebx
  0x00000000032be490: ja     0x00000000032bfdef
  0x00000000032be496: mov    0x60(%r15),%rdx
  0x00000000032be49a: mov    %rdx,%r11
  0x00000000032be49d: add    %rdi,%r11
  0x00000000032be4a0: cmp    0x70(%r15),%r11
  0x00000000032be4a4: jae    0x00000000032bfdef
  0x00000000032be4aa: mov    %r11,0x60(%r15)
  0x00000000032be4ae: prefetchw 0xc0(%r11)
  0x00000000032be4b6: movq   $0x1,(%rdx)
  0x00000000032be4bd: prefetchw 0x100(%r11)
  0x00000000032be4c5: movl   $0xf8000041,0x8(%rdx)  ;   {metadata({type array char})}
  0x00000000032be4cc: mov    %ebx,0xc(%rdx)
  0x00000000032be4cf: prefetchw 0x140(%r11)
  0x00000000032be4d7: prefetchw 0x180(%r11)     ;*ireturn
                                                ; - java.io.WinNTFileSystem::isSlash@17 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be4df: cmp    %ebx,%r10d
  0x00000000032be4e2: mov    %ebx,%esi
  0x00000000032be4e4: cmovl  %r10d,%esi         ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be4e8: mov    %rdx,%rax
  0x00000000032be4eb: add    $0x10,%rax
  0x00000000032be4ef: mov    %rdx,%r8
  0x00000000032be4f2: shr    $0x3,%r8           ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@99 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be4f6: shr    $0x3,%r9           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be4fa: mov    %r9,%rcx
  0x00000000032be4fd: add    $0xfffffffffffffffe,%rcx
  0x00000000032be501: cmp    %esi,%r10d
  0x00000000032be504: jb     0x00000000032c01b5
  0x00000000032be50a: cmp    %esi,%ebx
  0x00000000032be50c: jb     0x00000000032c01b5
  0x00000000032be512: test   %esi,%esi
  0x00000000032be514: jle    0x00000000032c0202
  0x00000000032be51a: cmp    %ebx,%esi
  0x00000000032be51c: jl     0x00000000032bf9e1  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be522: mov    %rdx,%rbx
  0x00000000032be525: mov    %r8d,%r13d
  0x00000000032be528: mov    %r10d,%ebp
  0x00000000032be52b: add    $0xfffffffffffffff0,%rdi
  0x00000000032be52f: shr    $0x3,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be533: mov    0x70(%rsp),%rcx
  0x00000000032be538: mov    %rax,%rdx
  0x00000000032be53b: mov    %rdi,%r8
  0x00000000032be53e: movabs $0x31e2ca0,%r10
  0x00000000032be548: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be54b: mov    %ebp,%r10d
  0x00000000032be54e: mov    %r13d,%r8d
  0x00000000032be551: mov    %rbx,%rdx          ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be554: mov    %rdx,0x68(%rsp)
  0x00000000032be559: jmpq   0x00000000032bd9ed  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be55e: add    $0x2,%r10d         ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be562: cmp    0x64(%rsp),%r10d
  0x00000000032be567: jl     0x00000000032bd0bb  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be56d: cmp    0x4c(%rsp),%r10d
  0x00000000032be572: jge    0x00000000032be5b2  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be574: test   %r10d,%r10d
  0x00000000032be577: jl     0x00000000032bf5c9  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be57d: cmp    0x4c(%rsp),%r10d
  0x00000000032be582: jge    0x00000000032bf5f9  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be588: mov    %r10d,%r11d
  0x00000000032be58b: mov    0x30(%rsp),%r10
  0x00000000032be590: movzwl 0x10(%r10,%r11,2),%r10d  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be596: cmp    $0x5c,%r10d
  0x00000000032be59a: je     0x00000000032bf629
  0x00000000032be5a0: cmp    $0x2f,%r10d
  0x00000000032be5a4: je     0x00000000032bf629  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be5aa: mov    %r11d,%r10d
  0x00000000032be5ad: jmpq   0x00000000032bc362  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be5b2: mov    %r10d,0x80(%rsp)
  0x00000000032be5ba: jmpq   0x00000000032bc36a
  0x00000000032be5bf: mov    %r11d,0x24(%rsp)   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be5c4: mov    0x24(%rsp),%r10d
  0x00000000032be5c9: mov    %r10d,0x2c(%rsp)   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be5ce: mov    $0xffffff65,%edx
  0x00000000032be5d3: mov    0x40(%rsp),%rbp
  0x00000000032be5d8: mov    0x30(%rsp),%r11d
  0x00000000032be5dd: mov    %r11d,0x20(%rsp)
  0x00000000032be5e2: mov    0x34(%rsp),%r11d
  0x00000000032be5e7: mov    %r11d,0x28(%rsp)
  0x00000000032be5ec: mov    %r8d,0x3c(%rsp)
  0x00000000032be5f1: mov    0x4c(%rsp),%r11d
  0x00000000032be5f6: mov    %r11d,0x40(%rsp)
  0x00000000032be5fb: mov    0x48(%rsp),%r10d
  0x00000000032be600: mov    %r10d,0x44(%rsp)
  0x00000000032be605: xchg   %ax,%ax
  0x00000000032be607: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=12268}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be60c: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032be60d: mov    %r11d,0x24(%rsp)   ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be612: mov    0x24(%rsp),%r10d   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be617: mov    $0xffffff65,%edx
  0x00000000032be61c: mov    0x40(%rsp),%rbp
  0x00000000032be621: mov    0x34(%rsp),%r8d
  0x00000000032be626: mov    %r8d,0x28(%rsp)
  0x00000000032be62b: mov    %r10d,0x2c(%rsp)
  0x00000000032be630: data16 xchg %ax,%ax
  0x00000000032be633: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [72]=NarrowOop [80]=Oop off=12312}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@115 (line 124)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be638: int3                      ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032be639: mov    0x2c(%rsp),%r9d
  0x00000000032be63e: mov    %ebp,%r11d
  0x00000000032be641: mov    0x40(%rsp),%rbx
  0x00000000032be646: mov    %r9d,%ebp
  0x00000000032be649: mov    %esi,%r8d          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be64c: mov    %ebp,%edx
  0x00000000032be64e: mov    %r11d,%ebp
  0x00000000032be651: mov    %edx,%r11d         ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be654: mov    $0xffffffe4,%edx
  0x00000000032be659: mov    %rbx,0x20(%rsp)
  0x00000000032be65e: mov    0x30(%rsp),%r9d
  0x00000000032be663: mov    %r9d,0x28(%rsp)
  0x00000000032be668: mov    %r11d,0x2c(%rsp)
  0x00000000032be66d: mov    %ecx,0x30(%rsp)
  0x00000000032be671: mov    %r10,0x38(%rsp)
  0x00000000032be676: mov    %edi,0x34(%rsp)
  0x00000000032be67a: mov    %r8d,0x40(%rsp)
  0x00000000032be67f: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [56]=Oop [64]=NarrowOop [80]=Oop off=12388}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032be684: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000032be685: mov    0x24(%rsp),%r11d
  0x00000000032be68a: mov    %r11d,0x2c(%rsp)   ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be68f: mov    $0xffffffe4,%edx   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be694: mov    0x40(%rsp),%r11
  0x00000000032be699: mov    %r11,0x20(%rsp)
  0x00000000032be69e: mov    0x30(%rsp),%r8d
  0x00000000032be6a3: mov    %r8d,0x28(%rsp)
  0x00000000032be6a8: mov    0x34(%rsp),%r11d
  0x00000000032be6ad: mov    %r11d,0x30(%rsp)
  0x00000000032be6b2: mov    0x4c(%rsp),%r8d
  0x00000000032be6b7: mov    %r8d,0x34(%rsp)
  0x00000000032be6bc: mov    %r10,0x48(%rsp)
  0x00000000032be6c1: xchg   %ax,%ax
  0x00000000032be6c3: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=12456}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032be6c8: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032be6c9: movslq %esi,%r8
  0x00000000032be6cc: mov    %r8,%r10
  0x00000000032be6cf: shl    %r10
  0x00000000032be6d2: add    $0x10,%r10
  0x00000000032be6d6: mov    %r10,%r11
  0x00000000032be6d9: and    $0xfffffffffffffff9,%r11
  0x00000000032be6dd: mov    0x80(%rsp),%rdi
  0x00000000032be6e5: add    %r11,%rdi
  0x00000000032be6e8: shr    $0x3,%r10
  0x00000000032be6ec: mov    %rbx,%r11
  0x00000000032be6ef: sub    %r10,%r11
  0x00000000032be6f2: mov    %r11,%rcx
  0x00000000032be6f5: xor    %rax,%rax
  0x00000000032be6f8: shl    $0x3,%rcx
  0x00000000032be6fc: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be6ff: mov    0x68(%rsp),%rcx
  0x00000000032be704: mov    %r9,%rdx
  0x00000000032be707: movabs $0x31e2980,%r10
  0x00000000032be711: callq  *%r10              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be714: jmpq   0x00000000032bd26b  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be719: movabs $0x7c0000208,%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032be723: mov    %esi,%r8d
  0x00000000032be726: nop
  0x00000000032be727: callq  0x00000000032935e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=12556}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be72c: mov    %rax,%r8
  0x00000000032be72f: jmpq   0x00000000032bccb4
  0x00000000032be734: mov    %ebp,%r8d
  0x00000000032be737: mov    %edi,%ebp
  0x00000000032be739: mov    %r8d,%edi
  0x00000000032be73c: jmpq   0x00000000032bdeab
  0x00000000032be741: mov    0x2c(%rsp),%r8d
  0x00000000032be746: mov    %ebp,%r10d
  0x00000000032be749: mov    0x40(%rsp),%rbx
  0x00000000032be74e: mov    %r8d,%ebp
  0x00000000032be751: mov    %esi,%r8d
  0x00000000032be754: mov    %r10d,%r11d        ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be757: mov    %ebp,%edx
  0x00000000032be759: mov    %r11d,%ebp
  0x00000000032be75c: mov    %edx,%r11d         ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be75f: mov    $0xffffff65,%edx
  0x00000000032be764: mov    0x30(%rsp),%esi
  0x00000000032be768: mov    %esi,0x28(%rsp)
  0x00000000032be76c: mov    %r11d,0x2c(%rsp)
  0x00000000032be771: mov    %ecx,0x30(%rsp)
  0x00000000032be775: mov    %rbx,0x38(%rsp)
  0x00000000032be77a: mov    %r9d,0x40(%rsp)
  0x00000000032be77f: mov    %edi,0x44(%rsp)
  0x00000000032be783: mov    %r8d,0x48(%rsp)
  0x00000000032be788: data16 xchg %ax,%ax
  0x00000000032be78b: callq  0x00000000031d57a0  ; OopMap{[56]=Oop [72]=NarrowOop [80]=Oop off=12656}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032be790: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000032be791: movslq %esi,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be794: mov    %r8,%r10
  0x00000000032be797: shl    %r10
  0x00000000032be79a: add    $0x10,%r10         ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be79e: mov    %r10,%r9
  0x00000000032be7a1: and    $0xfffffffffffffff9,%r9
  0x00000000032be7a5: mov    0x78(%rsp),%rdi
  0x00000000032be7aa: add    %r9,%rdi
  0x00000000032be7ad: shr    $0x3,%r10
  0x00000000032be7b1: sub    %r10,%r11
  0x00000000032be7b4: mov    %r11,%rcx
  0x00000000032be7b7: xor    %rax,%rax
  0x00000000032be7ba: shl    $0x3,%rcx
  0x00000000032be7be: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be7c1: mov    0x38(%rsp),%rcx
  0x00000000032be7c6: mov    %rbx,%rdx
  0x00000000032be7c9: movabs $0x31e2980,%r10
  0x00000000032be7d3: callq  *%r10              ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be7d6: jmpq   0x00000000032bd439
  0x00000000032be7db: mov    %esi,0x68(%rsp)
  0x00000000032be7df: mov    %r8,0x70(%rsp)
  0x00000000032be7e4: mov    %r11,0x78(%rsp)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be7e9: movabs $0x7c0000208,%rdx  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032be7f3: mov    0x68(%rsp),%r8d
  0x00000000032be7f8: data16 xchg %ax,%ax
  0x00000000032be7fb: callq  0x00000000032935e0  ; OopMap{[32]=Oop [56]=Derived_oop_[32] [64]=Oop [80]=Oop off=12768}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be800: mov    %rax,%r8
  0x00000000032be803: jmpq   0x00000000032bce0e
  0x00000000032be808: movslq %esi,%r8           ;*new  ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be80b: mov    %r8,%r10
  0x00000000032be80e: shl    %r10
  0x00000000032be811: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be815: mov    %r10,%r11
  0x00000000032be818: and    $0xfffffffffffffff9,%r11
  0x00000000032be81c: mov    0x80(%rsp),%rdi
  0x00000000032be824: add    %r11,%rdi
  0x00000000032be827: shr    $0x3,%r10
  0x00000000032be82b: mov    %rbx,%r11
  0x00000000032be82e: sub    %r10,%r11
  0x00000000032be831: mov    %r11,%rcx
  0x00000000032be834: xor    %rax,%rax
  0x00000000032be837: shl    $0x3,%rcx
  0x00000000032be83b: rep rex.W stos %al,%es:(%rdi)  ;*new
                                                ; - java.lang.StringBuffer::toString@23 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be83e: mov    0x68(%rsp),%rcx
  0x00000000032be843: mov    %r9,%rdx
  0x00000000032be846: movabs $0x31e2980,%r10
  0x00000000032be850: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be853: jmpq   0x00000000032bd5cb
  0x00000000032be858: mov    $0xffffff86,%edx   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032be85d: mov    %rcx,%rbp
  0x00000000032be860: mov    %r10d,0x20(%rsp)
  0x00000000032be865: mov    %r9d,0x24(%rsp)
  0x00000000032be86a: mov    %r8d,0x28(%rsp)
  0x00000000032be86f: mov    %r11,0x30(%rsp)
  0x00000000032be874: data16 xchg %ax,%ax
  0x00000000032be877: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [48]=Oop off=12892}
                                                ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)
                                                ;   {runtime_call}
  0x00000000032be87c: int3   
  0x00000000032be87d: mov    %edi,%ebx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be87f: mov    $0xffffff65,%edx
  0x00000000032be884: mov    0x40(%rsp),%rbp
  0x00000000032be889: mov    0x4c(%rsp),%r9d
  0x00000000032be88e: mov    %r9d,0x20(%rsp)
  0x00000000032be893: mov    0x3c(%rsp),%r10d
  0x00000000032be898: mov    %r10d,0x24(%rsp)
  0x00000000032be89d: mov    %r8d,0x28(%rsp)
  0x00000000032be8a2: mov    %ebx,0x2c(%rsp)
  0x00000000032be8a6: mov    %r11d,0x34(%rsp)
  0x00000000032be8ab: mov    %r11d,0x40(%rsp)
  0x00000000032be8b0: data16 xchg %ax,%ax
  0x00000000032be8b3: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop off=12952}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x00000000032be8b8: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000032be8b9: mov    %edi,%ebx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be8bb: mov    $0xffffff65,%edx
  0x00000000032be8c0: mov    0x40(%rsp),%rbp
  0x00000000032be8c5: mov    0x4c(%rsp),%r10d
  0x00000000032be8ca: mov    %r10d,0x20(%rsp)
  0x00000000032be8cf: mov    0x3c(%rsp),%r9d
  0x00000000032be8d4: mov    %r9d,0x24(%rsp)
  0x00000000032be8d9: mov    %r8d,0x28(%rsp)
  0x00000000032be8de: mov    %ebx,0x2c(%rsp)
  0x00000000032be8e2: mov    %r11d,0x34(%rsp)
  0x00000000032be8e7: mov    %r11d,0x40(%rsp)
  0x00000000032be8ec: data16 xchg %ax,%ax
  0x00000000032be8ef: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop off=13012}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)
                                                ;   {runtime_call}
  0x00000000032be8f4: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000032be8f5: movslq %esi,%r10          ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be8f8: jmpq   0x00000000032bbc8b
  0x00000000032be8fd: mov    %rbx,%rdi
  0x00000000032be900: xor    %rax,%rax
  0x00000000032be903: shl    $0x3,%rcx
  0x00000000032be907: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be90a: mov    0x38(%rsp),%rbp
  0x00000000032be90f: mov    %rbp,%rdx
  0x00000000032be912: xor    %r8d,%r8d
  0x00000000032be915: mov    0x80(%rsp),%r9
  0x00000000032be91d: xor    %edi,%edi
  0x00000000032be91f: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [72]=NarrowOop [80]=Oop [128]=Oop off=13060}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be924: jmpq   0x00000000032bbd7f
  0x00000000032be929: mov    %rbx,%rdi
  0x00000000032be92c: xor    %rax,%rax
  0x00000000032be92f: shl    $0x3,%rcx
  0x00000000032be933: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be936: jmpq   0x00000000032bbd7f
  0x00000000032be93b: mov    0x30(%rsp),%r11d
  0x00000000032be940: jmpq   0x00000000032bdeb1
  0x00000000032be945: mov    0x30(%rsp),%r11d   ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be94a: mov    $0xffffff65,%edx
  0x00000000032be94f: mov    0x40(%rsp),%r10
  0x00000000032be954: mov    %r11d,0x28(%rsp)
  0x00000000032be959: mov    %edi,0x2c(%rsp)
  0x00000000032be95d: mov    %r9d,0x30(%rsp)
  0x00000000032be962: mov    %r10,0x38(%rsp)
  0x00000000032be967: mov    %esi,0x40(%rsp)
  0x00000000032be96b: mov    %ebx,0x44(%rsp)
  0x00000000032be96f: callq  0x00000000031d57a0  ; OopMap{[56]=Oop [68]=NarrowOop [80]=Oop off=13140}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032be974: int3   
  0x00000000032be975: mov    %ebp,%r10d
  0x00000000032be978: mov    %edi,%ebp
  0x00000000032be97a: mov    %r10d,%edi
  0x00000000032be97d: jmpq   0x00000000032be1c4
  0x00000000032be982: mov    %r8,%rbp
  0x00000000032be985: mov    %rbx,%r10
  0x00000000032be988: mov    %r11d,%ebx
  0x00000000032be98b: movslq %esi,%r8           ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be98e: mov    %r8,%r11
  0x00000000032be991: shl    %r11
  0x00000000032be994: add    $0x10,%r11         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be998: mov    %r11,%rcx
  0x00000000032be99b: and    $0xfffffffffffffff9,%rcx
  0x00000000032be99f: mov    %rbp,%rdi
  0x00000000032be9a2: add    %rcx,%rdi
  0x00000000032be9a5: shr    $0x3,%r11
  0x00000000032be9a9: sub    %r11,%r10
  0x00000000032be9ac: mov    %r10,%rcx
  0x00000000032be9af: xor    %rax,%rax
  0x00000000032be9b2: shl    $0x3,%rcx
  0x00000000032be9b6: rep rex.W stos %al,%es:(%rdi)  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be9b9: mov    0x30(%rsp),%rcx
  0x00000000032be9be: movabs $0x31e2980,%r10
  0x00000000032be9c8: callq  *%r10              ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@12 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be9cb: mov    %ebx,%r11d
  0x00000000032be9ce: mov    %rbp,%r8
  0x00000000032be9d1: jmpq   0x00000000032bd74c
  0x00000000032be9d6: mov    %rbp,%r9
  0x00000000032be9d9: mov    %r13d,%ebp
  0x00000000032be9dc: mov    %rdi,%r10
  0x00000000032be9df: mov    %r11d,%r13d
  0x00000000032be9e2: movslq %esi,%r8           ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be9e5: mov    %r8,%r11
  0x00000000032be9e8: shl    %r11
  0x00000000032be9eb: add    $0x10,%r11         ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032be9ef: mov    %r11,%rcx
  0x00000000032be9f2: and    $0xfffffffffffffff9,%rcx
  0x00000000032be9f6: mov    %rdx,%rdi
  0x00000000032be9f9: add    %rcx,%rdi
  0x00000000032be9fc: mov    %rdx,%r14
  0x00000000032be9ff: shr    $0x3,%r11
  0x00000000032bea03: sub    %r11,%rbx
  0x00000000032bea06: mov    %rbx,%rcx
  0x00000000032bea09: xor    %rax,%rax
  0x00000000032bea0c: shl    $0x3,%rcx
  0x00000000032bea10: rep rex.W stos %al,%es:(%rdi)  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bea13: mov    %r10,%rcx
  0x00000000032bea16: mov    %r9,%rdx
  0x00000000032bea19: movabs $0x31e2980,%r10
  0x00000000032bea23: callq  *%r10              ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bea26: mov    %r13d,%r11d
  0x00000000032bea29: mov    %ebp,%r13d
  0x00000000032bea2c: mov    %r14,%rdx
  0x00000000032bea2f: jmpq   0x00000000032bd87e
  0x00000000032bea34: movslq %esi,%r8
  0x00000000032bea37: mov    %r8,%r10
  0x00000000032bea3a: shl    %r10
  0x00000000032bea3d: add    $0x10,%r10         ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bea41: mov    %r10,%r11
  0x00000000032bea44: and    $0xfffffffffffffff9,%r11
  0x00000000032bea48: mov    0x78(%rsp),%rdi
  0x00000000032bea4d: add    %r11,%rdi
  0x00000000032bea50: shr    $0x3,%r10
  0x00000000032bea54: mov    %rbx,%r11
  0x00000000032bea57: sub    %r10,%r11
  0x00000000032bea5a: mov    %r11,%rcx
  0x00000000032bea5d: xor    %rax,%rax
  0x00000000032bea60: shl    $0x3,%rcx
  0x00000000032bea64: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bea67: mov    0x38(%rsp),%rcx
  0x00000000032bea6c: mov    %r9,%rdx
  0x00000000032bea6f: movabs $0x31e2980,%r10
  0x00000000032bea79: callq  *%r10              ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bea7c: jmpq   0x00000000032bd9b6
  0x00000000032bea81: mov    %edi,0x2c(%rsp)
  0x00000000032bea85: mov    %r8,0x70(%rsp)
  0x00000000032bea8a: mov    %r11,0x78(%rsp)    ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bea8f: movabs $0x7c0000208,%rdx  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bea99: mov    0x2c(%rsp),%r8d
  0x00000000032bea9e: nop
  0x00000000032bea9f: callq  0x00000000032935e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=13444}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032beaa4: mov    %rax,%r8
  0x00000000032beaa7: jmpq   0x00000000032bcf84
  0x00000000032beaac: mov    0x24(%rsp),%r11d
  0x00000000032beab1: mov    %r11d,0x2c(%rsp)   ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032beab6: mov    $0xffffff65,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032beabb: mov    0x40(%rsp),%rbp
  0x00000000032beac0: mov    0x30(%rsp),%r8d
  0x00000000032beac5: mov    %r8d,0x20(%rsp)
  0x00000000032beaca: mov    0x2c(%rsp),%r11d
  0x00000000032beacf: mov    %r11d,0x24(%rsp)
  0x00000000032bead4: mov    0x34(%rsp),%r8d
  0x00000000032bead9: mov    %r8d,0x28(%rsp)
  0x00000000032beade: mov    0x48(%rsp),%r8d
  0x00000000032beae3: mov    %r10d,0x3c(%rsp)
  0x00000000032beae8: mov    0x4c(%rsp),%r11d
  0x00000000032beaed: mov    %r11d,0x40(%rsp)
  0x00000000032beaf2: mov    %r8d,0x44(%rsp)
  0x00000000032beaf7: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=13532}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032beafc: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032beafd: mov    0x24(%rsp),%r8d
  0x00000000032beb02: mov    %r8d,0x2c(%rsp)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032beb07: mov    %r9d,%r10d
  0x00000000032beb0a: mov    %r11d,%r8d         ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032beb0d: mov    $0xffffff65,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::newCapacity@4 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032beb12: mov    0x40(%rsp),%rbp
  0x00000000032beb17: mov    0x30(%rsp),%r9d
  0x00000000032beb1c: mov    %r9d,0x20(%rsp)
  0x00000000032beb21: mov    0x2c(%rsp),%r11d
  0x00000000032beb26: mov    %r11d,0x24(%rsp)
  0x00000000032beb2b: mov    0x34(%rsp),%r9d
  0x00000000032beb30: mov    %r9d,0x28(%rsp)
  0x00000000032beb35: mov    0x48(%rsp),%r9d
  0x00000000032beb3a: mov    %r10d,0x38(%rsp)
  0x00000000032beb3f: mov    0x4c(%rsp),%r11d
  0x00000000032beb44: mov    %r11d,0x3c(%rsp)
  0x00000000032beb49: mov    %r9d,0x40(%rsp)
  0x00000000032beb4e: mov    %r8d,0x44(%rsp)
  0x00000000032beb53: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=13624}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032beb58: int3                      ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032beb59: mov    $0xffffff65,%edx
  0x00000000032beb5e: mov    0x40(%rsp),%rbp
  0x00000000032beb63: mov    0x4c(%rsp),%r8d
  0x00000000032beb68: mov    %r8d,0x20(%rsp)
  0x00000000032beb6d: mov    0x3c(%rsp),%r9d
  0x00000000032beb72: mov    %r9d,0x24(%rsp)
  0x00000000032beb77: mov    %r11d,0x40(%rsp)
  0x00000000032beb7c: mov    %r11d,0x44(%rsp)
  0x00000000032beb81: mov    %r10,0x60(%rsp)
  0x00000000032beb86: nop
  0x00000000032beb87: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [96]=Oop off=13676}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032beb8c: int3                      ;*arraylength
                                                ; - java.util.Arrays::copyOf@9 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032beb8d: mov    $0xffffff65,%edx
  0x00000000032beb92: mov    0x40(%rsp),%rbp
  0x00000000032beb97: mov    0x4c(%rsp),%r9d
  0x00000000032beb9c: mov    0x3c(%rsp),%r8d
  0x00000000032beba1: mov    %r8d,0x24(%rsp)
  0x00000000032beba6: mov    %r9d,0x30(%rsp)
  0x00000000032bebab: mov    %r11d,0x40(%rsp)
  0x00000000032bebb0: mov    %r11d,0x44(%rsp)
  0x00000000032bebb5: mov    %r9d,0x48(%rsp)
  0x00000000032bebba: mov    %r10,0x68(%rsp)
  0x00000000032bebbf: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=13732}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bebc4: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bebc5: mov    $0xffffffe4,%edx
  0x00000000032bebca: mov    0x40(%rsp),%rbp
  0x00000000032bebcf: mov    0x4c(%rsp),%r8d
  0x00000000032bebd4: mov    %r8d,0x20(%rsp)
  0x00000000032bebd9: mov    0x3c(%rsp),%r9d
  0x00000000032bebde: mov    %r9d,0x24(%rsp)
  0x00000000032bebe3: mov    %r11d,0x38(%rsp)
  0x00000000032bebe8: mov    0x48(%rsp),%r8d
  0x00000000032bebed: mov    %r8d,0x3c(%rsp)
  0x00000000032bebf2: mov    %r10,0x48(%rsp)
  0x00000000032bebf7: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [60]=NarrowOop [72]=Oop [80]=Oop off=13788}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bebfc: int3                      ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bebfd: mov    $0xffffffe4,%edx
  0x00000000032bec02: mov    0x40(%rsp),%r10
  0x00000000032bec07: mov    %r10,0x20(%rsp)
  0x00000000032bec0c: mov    0x4c(%rsp),%r10d
  0x00000000032bec11: mov    %r10d,0x28(%rsp)
  0x00000000032bec16: mov    0x3c(%rsp),%r11d
  0x00000000032bec1b: mov    %r11d,0x2c(%rsp)
  0x00000000032bec20: data16 xchg %ax,%ax
  0x00000000032bec23: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [72]=NarrowOop [80]=Oop [104]=Oop off=13832}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bec28: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032bec29: mov    $0xffffff65,%edx
  0x00000000032bec2e: mov    0x40(%rsp),%rbp
  0x00000000032bec33: mov    %r11d,0x24(%rsp)
  0x00000000032bec38: mov    %r10d,0x28(%rsp)
  0x00000000032bec3d: xchg   %ax,%ax
  0x00000000032bec3f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop off=13860}
                                                ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bec44: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 82)

  0x00000000032bec45: mov    $0xffffff65,%edx
  0x00000000032bec4a: mov    0x40(%rsp),%rbp
  0x00000000032bec4f: mov    %r11d,0x28(%rsp)
  0x00000000032bec54: data16 xchg %ax,%ax
  0x00000000032bec57: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop off=13884}
                                                ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@8 (line 104)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bec5c: int3   
  0x00000000032bec5d: mov    0x30(%rsp),%r11d
  0x00000000032bec62: jmpq   0x00000000032be1ca
  0x00000000032bec67: mov    %r11d,0x24(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bec6c: mov    0x24(%rsp),%r8d
  0x00000000032bec71: mov    %r8d,0x2c(%rsp)    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bec76: mov    $0xffffffe4,%edx   ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bec7b: mov    0x40(%rsp),%rbp
  0x00000000032bec80: mov    0x30(%rsp),%r11d
  0x00000000032bec85: mov    %r11d,0x20(%rsp)
  0x00000000032bec8a: mov    0x34(%rsp),%r11d
  0x00000000032bec8f: mov    %r11d,0x28(%rsp)
  0x00000000032bec94: mov    %r10,0x30(%rsp)
  0x00000000032bec99: mov    0x48(%rsp),%r11d
  0x00000000032bec9e: mov    %r11d,0x38(%rsp)
  0x00000000032beca3: mov    %esi,0x3c(%rsp)
  0x00000000032beca7: mov    0x50(%rsp),%r10
  0x00000000032becac: mov    %r10,0x48(%rsp)
  0x00000000032becb1: xchg   %ax,%ax
  0x00000000032becb3: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [48]=Oop [60]=NarrowOop [72]=Oop [80]=Oop off=13976}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032becb8: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032becb9: mov    0x2c(%rsp),%r10d
  0x00000000032becbe: mov    %r10d,0x24(%rsp)
  0x00000000032becc3: mov    0x24(%rsp),%r11d
  0x00000000032becc8: mov    %r11d,0x2c(%rsp)
  0x00000000032beccd: jmp    0x00000000032bece3
  0x00000000032beccf: mov    0x2c(%rsp),%r10d
  0x00000000032becd4: mov    %r10d,0x24(%rsp)
  0x00000000032becd9: mov    0x24(%rsp),%r11d
  0x00000000032becde: mov    %r11d,0x2c(%rsp)   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bece3: mov    $0xffffff65,%edx
  0x00000000032bece8: mov    0x30(%rsp),%r10d
  0x00000000032beced: mov    %r10d,0x20(%rsp)
  0x00000000032becf2: mov    0x2c(%rsp),%r11d
  0x00000000032becf7: mov    %r11d,0x24(%rsp)
  0x00000000032becfc: mov    %esi,0x30(%rsp)
  0x00000000032bed00: data16 xchg %ax,%ax
  0x00000000032bed03: callq  0x00000000031d57a0  ; OopMap{[48]=NarrowOop [64]=Oop [80]=Oop off=14056}
                                                ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@103 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bed08: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032bed09: mov    0x2c(%rsp),%r11d
  0x00000000032bed0e: mov    %r11d,0x24(%rsp)
  0x00000000032bed13: mov    0x24(%rsp),%r11d   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bed18: mov    $0xffffffe4,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bed1d: mov    0x40(%rsp),%r8
  0x00000000032bed22: mov    %r8,0x20(%rsp)
  0x00000000032bed27: mov    0x30(%rsp),%r9d
  0x00000000032bed2c: mov    %r9d,0x28(%rsp)
  0x00000000032bed31: mov    %r11d,0x2c(%rsp)
  0x00000000032bed36: mov    %r10,0x48(%rsp)
  0x00000000032bed3b: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=14112}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bed40: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032bed41: mov    %esi,0x48(%rsp)
  0x00000000032bed45: mov    %r8,0x70(%rsp)
  0x00000000032bed4a: mov    %r10,0x78(%rsp)    ;*putfield toStringCache
                                                ; - java.lang.StringBuffer::append@2 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bed4f: movabs $0x7c0000208,%rdx  ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bed59: mov    0x48(%rsp),%r8d
  0x00000000032bed5e: nop
  0x00000000032bed5f: callq  0x00000000032935e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=14148}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bed64: mov    %rax,%r8
  0x00000000032bed67: jmpq   0x00000000032bd1ee  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bed6c: mov    $0xffffff65,%edx
  0x00000000032bed71: mov    0x40(%rsp),%rbp
  0x00000000032bed76: mov    0x4c(%rsp),%r8d
  0x00000000032bed7b: mov    %r8d,0x20(%rsp)
  0x00000000032bed80: mov    0x3c(%rsp),%r9d
  0x00000000032bed85: mov    %r9d,0x24(%rsp)
  0x00000000032bed8a: mov    %r11d,0x40(%rsp)
  0x00000000032bed8f: mov    %r11d,0x44(%rsp)
  0x00000000032bed94: mov    %r10,0x60(%rsp)
  0x00000000032bed99: xchg   %ax,%ax
  0x00000000032bed9b: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [96]=Oop off=14208}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032beda0: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032beda1: mov    $0xffffff65,%edx
  0x00000000032beda6: mov    0x40(%rsp),%rbp
  0x00000000032bedab: mov    0x4c(%rsp),%r9d
  0x00000000032bedb0: mov    %r9d,0x20(%rsp)
  0x00000000032bedb5: mov    0x3c(%rsp),%ecx
  0x00000000032bedb9: mov    %ecx,0x24(%rsp)
  0x00000000032bedbd: mov    %r11d,0x34(%rsp)
  0x00000000032bedc2: mov    0x50(%rsp),%r11
  0x00000000032bedc7: mov    %r11,0x40(%rsp)
  0x00000000032bedcc: mov    %r8d,0x4c(%rsp)
  0x00000000032bedd1: mov    %r8d,0x50(%rsp)
  0x00000000032bedd6: mov    %r10,0x58(%rsp)
  0x00000000032beddb: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [88]=Oop off=14272}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bede0: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bede1: mov    $0xffffff65,%edx
  0x00000000032bede6: mov    0x40(%rsp),%r10
  0x00000000032bedeb: mov    %r10,0x20(%rsp)
  0x00000000032bedf0: mov    0x4c(%rsp),%r11d
  0x00000000032bedf5: mov    0x3c(%rsp),%r10d
  0x00000000032bedfa: mov    %r10d,0x2c(%rsp)
  0x00000000032bedff: mov    %r11d,0x38(%rsp)
  0x00000000032bee04: mov    0x64(%rsp),%r10d
  0x00000000032bee09: mov    %r10d,0x3c(%rsp)
  0x00000000032bee0e: nop
  0x00000000032bee0f: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=14324}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bee14: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bee15: mov    $0xffffff65,%edx
  0x00000000032bee1a: mov    0x40(%rsp),%rbp
  0x00000000032bee1f: mov    0x4c(%rsp),%r9d
  0x00000000032bee24: mov    0x3c(%rsp),%r8d
  0x00000000032bee29: mov    %r8d,0x24(%rsp)
  0x00000000032bee2e: mov    %r9d,0x30(%rsp)
  0x00000000032bee33: mov    %r11d,0x40(%rsp)
  0x00000000032bee38: mov    %r11d,0x44(%rsp)
  0x00000000032bee3d: mov    %r9d,0x48(%rsp)
  0x00000000032bee42: mov    %r10,0x68(%rsp)
  0x00000000032bee47: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=14380}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bee4c: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bee4d: mov    $0xffffff65,%edx
  0x00000000032bee52: mov    0x40(%rsp),%rbp
  0x00000000032bee57: mov    0x4c(%rsp),%ecx
  0x00000000032bee5b: mov    0x3c(%rsp),%r9d
  0x00000000032bee60: mov    %r9d,0x24(%rsp)
  0x00000000032bee65: mov    %ecx,0x30(%rsp)
  0x00000000032bee69: mov    %r11d,0x34(%rsp)
  0x00000000032bee6e: mov    0x50(%rsp),%r11
  0x00000000032bee73: mov    %r11,0x40(%rsp)
  0x00000000032bee78: mov    %r8d,0x4c(%rsp)
  0x00000000032bee7d: mov    %r8d,0x50(%rsp)
  0x00000000032bee82: mov    %r10,0x58(%rsp)
  0x00000000032bee87: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [88]=Oop off=14444}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bee8c: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bee8d: mov    $0xffffff65,%edx
  0x00000000032bee92: mov    0x40(%rsp),%rbp
  0x00000000032bee97: mov    0x4c(%rsp),%ecx
  0x00000000032bee9b: mov    0x3c(%rsp),%r9d
  0x00000000032beea0: mov    %r9d,0x24(%rsp)
  0x00000000032beea5: mov    %ecx,0x30(%rsp)
  0x00000000032beea9: mov    %r11d,0x34(%rsp)
  0x00000000032beeae: mov    0x50(%rsp),%r11
  0x00000000032beeb3: mov    %r11,0x40(%rsp)
  0x00000000032beeb8: mov    %r8d,0x4c(%rsp)
  0x00000000032beebd: mov    %r10,0x50(%rsp)
  0x00000000032beec2: nop
  0x00000000032beec3: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=14504}
                                                ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032beec8: int3                      ;*iload_1
                                                ; - java.util.Arrays::copyOf@0 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032beec9: mov    $0xffffff65,%edx
  0x00000000032beece: mov    0x40(%rsp),%r10
  0x00000000032beed3: mov    %r10,0x20(%rsp)
  0x00000000032beed8: mov    0x4c(%rsp),%r10d
  0x00000000032beedd: mov    %r10d,0x28(%rsp)
  0x00000000032beee2: mov    0x3c(%rsp),%r11d
  0x00000000032beee7: mov    %r11d,0x2c(%rsp)
  0x00000000032beeec: mov    0x64(%rsp),%r11d
  0x00000000032beef1: mov    %r11d,0x3c(%rsp)
  0x00000000032beef6: nop
  0x00000000032beef7: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=14556}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032beefc: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032beefd: mov    %r11d,0x24(%rsp)   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bef02: mov    0x24(%rsp),%r11d
  0x00000000032bef07: mov    %r11d,0x2c(%rsp)   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bef0c: mov    $0xffffff65,%edx
  0x00000000032bef11: mov    0x40(%rsp),%rbp
  0x00000000032bef16: mov    0x30(%rsp),%r10d
  0x00000000032bef1b: mov    %r10d,0x20(%rsp)
  0x00000000032bef20: mov    0x34(%rsp),%r10d
  0x00000000032bef25: mov    %r10d,0x28(%rsp)
  0x00000000032bef2a: mov    %r9d,0x3c(%rsp)
  0x00000000032bef2f: mov    0x48(%rsp),%r10d
  0x00000000032bef34: mov    %r10d,0x40(%rsp)
  0x00000000032bef39: mov    %esi,0x44(%rsp)
  0x00000000032bef3d: xchg   %ax,%ax
  0x00000000032bef3f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=14628}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bef44: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032bef45: mov    %r11d,0x24(%rsp)   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bef4a: mov    0x24(%rsp),%r11d   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bef4f: mov    $0xffffff65,%edx   ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bef54: mov    0x40(%rsp),%rbp
  0x00000000032bef59: mov    0x34(%rsp),%r10d
  0x00000000032bef5e: mov    %r10d,0x28(%rsp)
  0x00000000032bef63: mov    %r11d,0x2c(%rsp)
  0x00000000032bef68: mov    %esi,0x38(%rsp)
  0x00000000032bef6c: data16 xchg %ax,%ax
  0x00000000032bef6f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [56]=NarrowOop [80]=Oop off=14676}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@115 (line 124)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bef74: int3   
  0x00000000032bef75: mov    %r9,0x70(%rsp)
  0x00000000032bef7a: mov    %rbx,0x68(%rsp)
  0x00000000032bef7f: mov    %esi,0x48(%rsp)    ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bef83: movabs $0x7c0000208,%rdx  ;*ireturn
                                                ; - java.lang.AbstractStringBuilder::newCapacity@38 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bef8d: mov    %esi,%r8d
  0x00000000032bef90: data16 xchg %ax,%ax
  0x00000000032bef93: callq  0x00000000032935e0  ; OopMap{[32]=Oop [56]=Derived_oop_[32] [64]=Oop [80]=Oop off=14712}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bef98: mov    %rax,%rcx
  0x00000000032bef9b: jmpq   0x00000000032bd3bf
  0x00000000032befa0: movslq %esi,%r8           ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032befa3: mov    %r8,%r10
  0x00000000032befa6: shl    %r10
  0x00000000032befa9: add    $0x10,%r10         ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalize@84 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032befad: mov    %r10,%r11
  0x00000000032befb0: and    $0xfffffffffffffff9,%r11
  0x00000000032befb4: mov    0x80(%rsp),%rdi
  0x00000000032befbc: add    %r11,%rdi
  0x00000000032befbf: shr    $0x3,%r10
  0x00000000032befc3: mov    %rbx,%r11
  0x00000000032befc6: sub    %r10,%r11
  0x00000000032befc9: mov    %r11,%rcx
  0x00000000032befcc: xor    %rax,%rax
  0x00000000032befcf: shl    $0x3,%rcx
  0x00000000032befd3: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial &lt;init&gt;
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032befd6: mov    0x68(%rsp),%rcx
  0x00000000032befdb: mov    %r9,%rdx
  0x00000000032befde: movabs $0x31e2980,%r10
  0x00000000032befe8: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032befeb: jmpq   0x00000000032bdb51
  0x00000000032beff0: movslq %esi,%r8           ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032beff3: jmpq   0x00000000032bc0b5
  0x00000000032beff8: mov    %rdx,%rdi
  0x00000000032beffb: xor    %rax,%rax
  0x00000000032beffe: shl    $0x3,%rcx
  0x00000000032bf002: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf005: mov    0x38(%rsp),%rbp
  0x00000000032bf00a: mov    %rbp,%rdx
  0x00000000032bf00d: xor    %r8d,%r8d
  0x00000000032bf010: mov    0x80(%rsp),%r9
  0x00000000032bf018: xor    %edi,%edi
  0x00000000032bf01a: nop
  0x00000000032bf01b: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=14848}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf020: jmpq   0x00000000032bc19c
  0x00000000032bf025: mov    %rdx,%rdi
  0x00000000032bf028: xor    %rax,%rax
  0x00000000032bf02b: shl    $0x3,%rcx
  0x00000000032bf02f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf032: jmpq   0x00000000032bc19c  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf037: movabs $0x7c0000208,%rdx  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bf041: mov    0x64(%rsp),%r8d
  0x00000000032bf046: nop
  0x00000000032bf047: callq  0x00000000032935e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=14892}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf04c: mov    %rax,%r8
  0x00000000032bf04f: jmpq   0x00000000032bd54e
  0x00000000032bf054: add    $0x2,%r11d         ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@16 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf058: mov    %ebx,%edi
  0x00000000032bf05a: jmp    0x00000000032bf065
  0x00000000032bf05c: inc    %r11d
  0x00000000032bf05f: jmp    0x00000000032bf065
  0x00000000032bf061: add    $0x3,%r11d         ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf065: mov    %edi,%ebx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf067: mov    $0xffffff65,%edx
  0x00000000032bf06c: mov    %r11d,%ebp
  0x00000000032bf06f: mov    %ebx,0x2c(%rsp)
  0x00000000032bf073: mov    0x3c(%rsp),%r11d
  0x00000000032bf078: mov    %r11d,0x30(%rsp)
  0x00000000032bf07d: xchg   %ax,%ax
  0x00000000032bf07f: callq  0x00000000031d57a0  ; OopMap{[64]=Oop [80]=Oop off=14948}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@49 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf084: int3                      ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf085: mov    $0xffffff65,%edx
  0x00000000032bf08a: mov    0x40(%rsp),%rbp
  0x00000000032bf08f: mov    0x30(%rsp),%r10d
  0x00000000032bf094: mov    %r10d,0x20(%rsp)
  0x00000000032bf099: mov    0x34(%rsp),%r10d
  0x00000000032bf09e: mov    %r10d,0x28(%rsp)
  0x00000000032bf0a3: mov    0x4c(%rsp),%r10d
  0x00000000032bf0a8: mov    %r10d,0x3c(%rsp)
  0x00000000032bf0ad: mov    0x48(%rsp),%r11d
  0x00000000032bf0b2: mov    %r11d,0x40(%rsp)
  0x00000000032bf0b7: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=15004}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf0bc: int3                      ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf0bd: mov    $0xffffff65,%edx
  0x00000000032bf0c2: mov    0x40(%rsp),%rbp
  0x00000000032bf0c7: mov    0x34(%rsp),%r11d
  0x00000000032bf0cc: mov    %r11d,0x28(%rsp)
  0x00000000032bf0d1: xchg   %ax,%ax
  0x00000000032bf0d3: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [72]=NarrowOop [80]=Oop off=15032}
                                                ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf0d8: int3                      ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032bf0d9: mov    %r8,%r13
  0x00000000032bf0dc: mov    %rdi,%r10
  0x00000000032bf0df: mov    %r11d,%ebx
  0x00000000032bf0e2: movslq %esi,%r8           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf0e5: mov    %r8,%r11
  0x00000000032bf0e8: shl    %r11
  0x00000000032bf0eb: add    $0x10,%r11         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf0ef: mov    %r11,%rcx
  0x00000000032bf0f2: and    $0xfffffffffffffff9,%rcx
  0x00000000032bf0f6: mov    %rdx,%rdi
  0x00000000032bf0f9: add    %rcx,%rdi
  0x00000000032bf0fc: mov    %rdx,%rbp
  0x00000000032bf0ff: shr    $0x3,%r11
  0x00000000032bf103: sub    %r11,%r9
  0x00000000032bf106: mov    %r9,%rcx
  0x00000000032bf109: xor    %rax,%rax
  0x00000000032bf10c: shl    $0x3,%rcx
  0x00000000032bf110: rep rex.W stos %al,%es:(%rdi)  ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@2 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf113: mov    %r10,%rcx
  0x00000000032bf116: mov    %r13,%rdx
  0x00000000032bf119: movabs $0x31e2980,%r10
  0x00000000032bf123: callq  *%r10              ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf126: mov    %ebx,%r11d
  0x00000000032bf129: mov    %rbp,%rdx
  0x00000000032bf12c: jmpq   0x00000000032bdd0d
  0x00000000032bf131: mov    %r8d,%ebp
  0x00000000032bf134: mov    0x38(%rsp),%r10
  0x00000000032bf139: jmpq   0x00000000032be68f
  0x00000000032bf13e: movslq %esi,%r8
  0x00000000032bf141: mov    %r8,%r11
  0x00000000032bf144: shl    %r11
  0x00000000032bf147: add    $0x10,%r11
  0x00000000032bf14b: mov    %r11,%r9
  0x00000000032bf14e: and    $0xfffffffffffffff9,%r9
  0x00000000032bf152: mov    0x78(%rsp),%rdi
  0x00000000032bf157: add    %r9,%rdi
  0x00000000032bf15a: shr    $0x3,%r11
  0x00000000032bf15e: sub    %r11,%r10
  0x00000000032bf161: mov    %r10,%rcx
  0x00000000032bf164: xor    %rax,%rax
  0x00000000032bf167: shl    $0x3,%rcx
  0x00000000032bf16b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf16e: mov    0x38(%rsp),%rcx
  0x00000000032bf173: mov    %rbx,%rdx
  0x00000000032bf176: movabs $0x31e2980,%r10
  0x00000000032bf180: callq  *%r10              ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf183: jmpq   0x00000000032bde8b
  0x00000000032bf188: mov    %rdi,0x78(%rsp)
  0x00000000032bf18d: mov    %rbx,0x28(%rsp)
  0x00000000032bf192: mov    %r9d,%ebp          ;*goto
                                                ; - java.io.WinNTFileSystem::isSlash@13 (line 53)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@111 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf195: movabs $0x7c0000208,%rdx  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bf19f: mov    %r9d,%r8d
  0x00000000032bf1a2: nop
  0x00000000032bf1a3: callq  0x00000000032935e0  ; OopMap{[48]=Derived_oop_[104] [64]=Oop [80]=Oop [104]=Oop off=15240}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf1a8: mov    %ebp,%r9d
  0x00000000032bf1ab: mov    0x28(%rsp),%rbx
  0x00000000032bf1b0: mov    0x78(%rsp),%rdi
  0x00000000032bf1b5: mov    %rax,%r8
  0x00000000032bf1b8: jmpq   0x00000000032bd6df
  0x00000000032bf1bd: mov    %rax,0x70(%rsp)
  0x00000000032bf1c2: mov    %rbx,0x68(%rsp)
  0x00000000032bf1c7: mov    %r13d,0x24(%rsp)
  0x00000000032bf1cc: mov    %rdi,0x48(%rsp)
  0x00000000032bf1d1: mov    %r8,0x30(%rsp)
  0x00000000032bf1d6: mov    %r10,0x28(%rsp)
  0x00000000032bf1db: mov    %r11d,%ebp         ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf1de: movabs $0x7c0000208,%rdx  ;*iadd
                                                ; - java.lang.AbstractStringBuilder::newCapacity@8 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bf1e8: mov    %r13d,%r8d
  0x00000000032bf1eb: callq  0x00000000032935e0  ; OopMap{[40]=Oop [48]=Oop [64]=Oop [72]=Derived_oop_[40] [80]=Oop off=15312}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf1f0: mov    %rax,%r9
  0x00000000032bf1f3: mov    %ebp,%r11d
  0x00000000032bf1f6: mov    0x28(%rsp),%r10
  0x00000000032bf1fb: mov    0x30(%rsp),%r8
  0x00000000032bf200: mov    0x48(%rsp),%rdi
  0x00000000032bf205: mov    0x24(%rsp),%r13d
  0x00000000032bf20a: mov    0x68(%rsp),%rbx
  0x00000000032bf20f: mov    0x70(%rsp),%rax
  0x00000000032bf214: mov    %r9,%rdx
  0x00000000032bf217: jmpq   0x00000000032bd802
  0x00000000032bf21c: mov    0x2c(%rsp),%r8d
  0x00000000032bf221: mov    %r8d,0x24(%rsp)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf226: mov    0x24(%rsp),%r10d   ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf22b: mov    $0xffffff65,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf230: mov    0x40(%rsp),%rbp
  0x00000000032bf235: mov    0x30(%rsp),%r8d
  0x00000000032bf23a: mov    %r8d,0x20(%rsp)
  0x00000000032bf23f: mov    %r10d,0x24(%rsp)
  0x00000000032bf244: mov    0x34(%rsp),%r8d
  0x00000000032bf249: mov    %r8d,0x2c(%rsp)
  0x00000000032bf24e: mov    0x48(%rsp),%r8d
  0x00000000032bf253: mov    %r11d,0x3c(%rsp)
  0x00000000032bf258: mov    0x4c(%rsp),%r11d
  0x00000000032bf25d: mov    %r11d,0x40(%rsp)
  0x00000000032bf262: mov    %r8d,0x44(%rsp)
  0x00000000032bf267: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=15436}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf26c: int3   
  0x00000000032bf26d: mov    %eax,0x64(%rsp)
  0x00000000032bf271: mov    %r8,0x68(%rsp)
  0x00000000032bf276: mov    %r11,0x70(%rsp)    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf27b: movabs $0x7c0000208,%rdx  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bf285: mov    0x64(%rsp),%r8d
  0x00000000032bf28a: nop
  0x00000000032bf28b: callq  0x00000000032935e0  ; OopMap{[32]=Oop [56]=Derived_oop_[32] [64]=Oop [80]=Oop off=15472}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf290: mov    %rax,%r8
  0x00000000032bf293: jmpq   0x00000000032bd93c
  0x00000000032bf298: mov    %ebx,%ebp          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf29a: mov    0x40(%rsp),%rcx
  0x00000000032bf29f: mov    0x50(%rsp),%r11
  0x00000000032bf2a4: mov    0x4c(%rsp),%r10d
  0x00000000032bf2a9: mov    0x3c(%rsp),%r9d    ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf2ae: mov    $0xffffff65,%edx
  0x00000000032bf2b3: mov    %rcx,0x20(%rsp)
  0x00000000032bf2b8: mov    %r10d,0x28(%rsp)
  0x00000000032bf2bd: mov    %r9d,0x2c(%rsp)
  0x00000000032bf2c2: mov    %r11,0x30(%rsp)
  0x00000000032bf2c7: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [48]=Oop off=15532}
                                                ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalize@128 (line 96)
                                                ;   {runtime_call}
  0x00000000032bf2cc: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032bf2cd: mov    0x2c(%rsp),%r8d
  0x00000000032bf2d2: mov    %r8d,0x24(%rsp)    ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf2d7: mov    0x24(%rsp),%r10d   ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf2dc: mov    $0xffffff65,%edx   ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf2e1: mov    0x40(%rsp),%rbp
  0x00000000032bf2e6: mov    0x30(%rsp),%r8d
  0x00000000032bf2eb: mov    %r8d,0x20(%rsp)
  0x00000000032bf2f0: mov    %r10d,0x24(%rsp)
  0x00000000032bf2f5: mov    0x34(%rsp),%r8d
  0x00000000032bf2fa: mov    %r8d,0x2c(%rsp)
  0x00000000032bf2ff: mov    0x48(%rsp),%r8d
  0x00000000032bf304: mov    %r11d,0x38(%rsp)
  0x00000000032bf309: mov    0x4c(%rsp),%r11d
  0x00000000032bf30e: mov    %r11d,0x3c(%rsp)
  0x00000000032bf313: mov    %r8d,0x40(%rsp)
  0x00000000032bf318: mov    %r9d,0x44(%rsp)
  0x00000000032bf31d: xchg   %ax,%ax
  0x00000000032bf31f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=15620}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf324: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000032bf325: movslq %edi,%r11          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf328: jmpq   0x00000000032bc908  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf32d: mov    %r9,%rdi
  0x00000000032bf330: xor    %rax,%rax
  0x00000000032bf333: shl    $0x3,%rcx
  0x00000000032bf337: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf33a: mov    0x38(%rsp),%rbp
  0x00000000032bf33f: mov    %rbp,%rdx
  0x00000000032bf342: xor    %r8d,%r8d
  0x00000000032bf345: mov    0x80(%rsp),%r9
  0x00000000032bf34d: xor    %edi,%edi
  0x00000000032bf34f: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=15668}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf354: jmpq   0x00000000032bc9fc
  0x00000000032bf359: mov    %r9,%rdi
  0x00000000032bf35c: xor    %rax,%rax
  0x00000000032bf35f: shl    $0x3,%rcx
  0x00000000032bf363: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf366: jmpq   0x00000000032bc9fc  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf36b: mov    $0xffffffe4,%edx
  0x00000000032bf370: mov    0x40(%rsp),%rbp
  0x00000000032bf375: mov    %r11d,0x20(%rsp)
  0x00000000032bf37a: mov    0x3c(%rsp),%r8d
  0x00000000032bf37f: mov    %r8d,0x24(%rsp)
  0x00000000032bf384: mov    0x50(%rsp),%r11
  0x00000000032bf389: mov    %r11,0x30(%rsp)
  0x00000000032bf38e: mov    %r11,0x38(%rsp)
  0x00000000032bf393: mov    %r9d,0x40(%rsp)
  0x00000000032bf398: mov    %r10,0x48(%rsp)
  0x00000000032bf39d: xchg   %ax,%ax
  0x00000000032bf39f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [48]=Oop [56]=Oop [64]=NarrowOop [72]=Oop off=15748}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf3a4: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalizePrefix@6 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf3a5: mov    $0xffffffe4,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf3aa: mov    0x40(%rsp),%rbp
  0x00000000032bf3af: mov    %r11d,0x20(%rsp)
  0x00000000032bf3b4: mov    0x3c(%rsp),%r8d
  0x00000000032bf3b9: mov    %r8d,0x24(%rsp)
  0x00000000032bf3be: nop
  0x00000000032bf3bf: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=15780}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf3c4: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf3c5: mov    $0xffffffe4,%edx   ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf3ca: mov    0x40(%rsp),%rbp
  0x00000000032bf3cf: mov    %r11d,0x20(%rsp)
  0x00000000032bf3d4: mov    0x3c(%rsp),%r8d
  0x00000000032bf3d9: mov    %r8d,0x24(%rsp)
  0x00000000032bf3de: mov    %r10,0x40(%rsp)
  0x00000000032bf3e3: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=15816}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf3e8: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000032bf3e9: mov    0x30(%rsp),%r10d   ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf3ee: mov    $0xffffff65,%edx
  0x00000000032bf3f3: mov    0x40(%rsp),%r9
  0x00000000032bf3f8: mov    %r10d,0x28(%rsp)
  0x00000000032bf3fd: mov    %r11d,0x2c(%rsp)
  0x00000000032bf402: mov    %ecx,0x30(%rsp)
  0x00000000032bf406: mov    %r9,0x38(%rsp)
  0x00000000032bf40b: mov    %edi,0x40(%rsp)
  0x00000000032bf40f: mov    %r8d,0x44(%rsp)
  0x00000000032bf414: data16 xchg %ax,%ax
  0x00000000032bf417: callq  0x00000000031d57a0  ; OopMap{[56]=Oop [68]=NarrowOop [80]=Oop off=15868}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf41c: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000032bf41d: mov    %rdi,%r9
  0x00000000032bf420: mov    %rbx,%rbp
  0x00000000032bf423: mov    %r10d,%ebx
  0x00000000032bf426: movslq %esi,%r8           ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf429: mov    %r8,%r10
  0x00000000032bf42c: shl    %r10
  0x00000000032bf42f: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf433: mov    %r10,%rcx
  0x00000000032bf436: and    $0xfffffffffffffff9,%rcx
  0x00000000032bf43a: mov    %rbp,%rdi
  0x00000000032bf43d: add    %rcx,%rdi
  0x00000000032bf440: shr    $0x3,%r10
  0x00000000032bf444: sub    %r10,%r11
  0x00000000032bf447: mov    %r11,%rcx
  0x00000000032bf44a: xor    %rax,%rax
  0x00000000032bf44d: shl    $0x3,%rcx
  0x00000000032bf451: rep rex.W stos %al,%es:(%rdi)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@6 (line 611)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf454: mov    0x70(%rsp),%rcx
  0x00000000032bf459: mov    %r9,%rdx
  0x00000000032bf45c: movabs $0x31e2980,%r10
  0x00000000032bf466: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf469: mov    %ebx,%r10d
  0x00000000032bf46c: mov    %rbp,%rbx
  0x00000000032bf46f: jmpq   0x00000000032be07f
  0x00000000032bf474: mov    %rax,%r9
  0x00000000032bf477: mov    %r13d,%ebx
  0x00000000032bf47a: mov    %rdi,%r11
  0x00000000032bf47d: mov    %r10d,%r13d
  0x00000000032bf480: movslq %esi,%r8           ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf483: mov    %r8,%r10
  0x00000000032bf486: shl    %r10
  0x00000000032bf489: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf48d: mov    %r10,%rcx
  0x00000000032bf490: and    $0xfffffffffffffff9,%rcx
  0x00000000032bf494: mov    %rbp,%rdi
  0x00000000032bf497: add    %rcx,%rdi
  0x00000000032bf49a: shr    $0x3,%r10
  0x00000000032bf49e: sub    %r10,%rdx
  0x00000000032bf4a1: mov    %rdx,%rcx
  0x00000000032bf4a4: xor    %rax,%rax
  0x00000000032bf4a7: shl    $0x3,%rcx
  0x00000000032bf4ab: rep rex.W stos %al,%es:(%rdi)  ;*areturn
                                                ; - java.lang.StringBuffer::toString@35 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf4ae: mov    %r11,%rcx
  0x00000000032bf4b1: mov    %r9,%rdx
  0x00000000032bf4b4: movabs $0x31e2980,%r10
  0x00000000032bf4be: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf4c1: mov    %r13d,%r10d
  0x00000000032bf4c4: mov    %ebx,%r13d
  0x00000000032bf4c7: jmpq   0x00000000032be1ab
  0x00000000032bf4cc: movslq %esi,%r11          ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf4cf: jmpq   0x00000000032bcc36  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf4d4: mov    %r9,%rdi
  0x00000000032bf4d7: xor    %rax,%rax
  0x00000000032bf4da: shl    $0x3,%rcx
  0x00000000032bf4de: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf4e1: mov    0x38(%rsp),%rbp
  0x00000000032bf4e6: mov    %rbp,%rdx
  0x00000000032bf4e9: xor    %r8d,%r8d
  0x00000000032bf4ec: mov    0x80(%rsp),%r9
  0x00000000032bf4f4: xor    %edi,%edi
  0x00000000032bf4f6: nop
  0x00000000032bf4f7: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=16092}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf4fc: jmpq   0x00000000032bcd30
  0x00000000032bf501: mov    %r9,%rdi
  0x00000000032bf504: xor    %rax,%rax
  0x00000000032bf507: shl    $0x3,%rcx
  0x00000000032bf50b: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf50e: jmpq   0x00000000032bcd30
  0x00000000032bf513: mov    0x24(%rsp),%r11d
  0x00000000032bf518: mov    %r11d,0x2c(%rsp)   ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf51d: mov    $0xffffff65,%edx   ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf522: mov    0x40(%rsp),%rbp
  0x00000000032bf527: mov    0x30(%rsp),%r8d
  0x00000000032bf52c: mov    %r8d,0x20(%rsp)
  0x00000000032bf531: mov    0x2c(%rsp),%r11d
  0x00000000032bf536: mov    %r11d,0x24(%rsp)
  0x00000000032bf53b: mov    0x34(%rsp),%r8d
  0x00000000032bf540: mov    %r8d,0x28(%rsp)
  0x00000000032bf545: mov    0x4c(%rsp),%r11d
  0x00000000032bf54a: mov    %r11d,0x2c(%rsp)
  0x00000000032bf54f: mov    %r10d,0x3c(%rsp)
  0x00000000032bf554: mov    0x48(%rsp),%r10d
  0x00000000032bf559: mov    %r10d,0x40(%rsp)
  0x00000000032bf55e: mov    %esi,0x44(%rsp)
  0x00000000032bf562: nop
  0x00000000032bf563: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=16200}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf568: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032bf569: mov    0x24(%rsp),%r8d
  0x00000000032bf56e: mov    %r8d,0x2c(%rsp)    ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf573: mov    %eax,%r10d
  0x00000000032bf576: mov    %r11d,%r8d         ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf579: mov    $0xffffff65,%edx   ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf57e: mov    0x40(%rsp),%rbp
  0x00000000032bf583: mov    0x30(%rsp),%r9d
  0x00000000032bf588: mov    %r9d,0x20(%rsp)
  0x00000000032bf58d: mov    0x2c(%rsp),%r11d
  0x00000000032bf592: mov    %r11d,0x24(%rsp)
  0x00000000032bf597: mov    0x34(%rsp),%r9d
  0x00000000032bf59c: mov    %r9d,0x28(%rsp)
  0x00000000032bf5a1: mov    0x4c(%rsp),%r11d
  0x00000000032bf5a6: mov    %r11d,0x2c(%rsp)
  0x00000000032bf5ab: mov    %r10d,0x38(%rsp)
  0x00000000032bf5b0: mov    0x48(%rsp),%r10d
  0x00000000032bf5b5: mov    %r10d,0x3c(%rsp)
  0x00000000032bf5ba: mov    %esi,0x40(%rsp)
  0x00000000032bf5be: mov    %r8d,0x44(%rsp)
  0x00000000032bf5c3: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=16296}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf5c8: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf5c9: mov    $0xffffff65,%edx
  0x00000000032bf5ce: mov    0x40(%rsp),%rbp
  0x00000000032bf5d3: mov    0x4c(%rsp),%r8d
  0x00000000032bf5d8: mov    0x3c(%rsp),%r11d
  0x00000000032bf5dd: mov    %r11d,0x24(%rsp)
  0x00000000032bf5e2: mov    %r8d,0x30(%rsp)
  0x00000000032bf5e7: mov    %r10d,0x40(%rsp)
  0x00000000032bf5ec: mov    %r10d,0x44(%rsp)
  0x00000000032bf5f1: xchg   %ax,%ax
  0x00000000032bf5f3: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=16344}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf5f8: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf5f9: mov    $0xffffff65,%edx
  0x00000000032bf5fe: mov    0x40(%rsp),%rbp
  0x00000000032bf603: mov    0x4c(%rsp),%r11d
  0x00000000032bf608: mov    %r11d,0x20(%rsp)
  0x00000000032bf60d: mov    0x3c(%rsp),%r8d
  0x00000000032bf612: mov    %r8d,0x24(%rsp)
  0x00000000032bf617: mov    %r10d,0x40(%rsp)
  0x00000000032bf61c: mov    %r10d,0x44(%rsp)
  0x00000000032bf621: xchg   %ax,%ax
  0x00000000032bf623: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=16392}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf628: int3                      ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf629: mov    %r11d,%r10d
  0x00000000032bf62c: inc    %r10d              ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf62f: cmp    0x4c(%rsp),%r10d
  0x00000000032bf634: jl     0x00000000032be574  ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf63a: jmpq   0x00000000032be5b2  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf63f: mov    $0xffffffe4,%edx
  0x00000000032bf644: mov    0x40(%rsp),%rbp
  0x00000000032bf649: mov    0x4c(%rsp),%r11d
  0x00000000032bf64e: mov    0x3c(%rsp),%r10d
  0x00000000032bf653: mov    %r10d,0x24(%rsp)
  0x00000000032bf658: mov    %r11d,0x30(%rsp)
  0x00000000032bf65d: mov    0x48(%rsp),%r10d
  0x00000000032bf662: mov    %r10d,0x3c(%rsp)
  0x00000000032bf667: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [60]=NarrowOop [80]=Oop [104]=Oop off=16460}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf66c: int3                      ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf66d: mov    $0xffffffe4,%edx
  0x00000000032bf672: mov    0x40(%rsp),%r10
  0x00000000032bf677: mov    %r10,0x20(%rsp)
  0x00000000032bf67c: mov    0x4c(%rsp),%r10d
  0x00000000032bf681: mov    %r10d,0x28(%rsp)
  0x00000000032bf686: mov    0x3c(%rsp),%r11d
  0x00000000032bf68b: mov    %r11d,0x2c(%rsp)
  0x00000000032bf690: data16 xchg %ax,%ax
  0x00000000032bf693: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [72]=NarrowOop [80]=Oop [104]=Oop off=16504}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf698: int3                      ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf699: mov    $0xffffff65,%edx
  0x00000000032bf69e: mov    0x40(%rsp),%rbp
  0x00000000032bf6a3: mov    0x3c(%rsp),%r8d
  0x00000000032bf6a8: mov    %r8d,0x24(%rsp)
  0x00000000032bf6ad: mov    %r11d,0x30(%rsp)
  0x00000000032bf6b2: mov    0x50(%rsp),%r11
  0x00000000032bf6b7: mov    %r11,0x40(%rsp)
  0x00000000032bf6bc: mov    %r11,0x48(%rsp)
  0x00000000032bf6c1: mov    %r10,0x50(%rsp)
  0x00000000032bf6c6: nop
  0x00000000032bf6c7: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [72]=Oop [80]=Oop off=16556}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf6cc: int3   
  0x00000000032bf6cd: mov    $0xffffff65,%edx
  0x00000000032bf6d2: mov    0x40(%rsp),%rbp
  0x00000000032bf6d7: mov    %r11d,%r10d
  0x00000000032bf6da: mov    %r10d,0x24(%rsp)
  0x00000000032bf6df: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop off=16580}
                                                ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf6e4: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf6e5: movabs $0x7c0000208,%rdx  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bf6ef: mov    %eax,%r8d
  0x00000000032bf6f2: nop
  0x00000000032bf6f3: callq  0x00000000032935e0  ; OopMap{[56]=Oop [64]=Oop [80]=Oop [104]=Derived_oop_[56] off=16600}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf6f8: mov    %rax,%r8
  0x00000000032bf6fb: jmpq   0x00000000032bdad5
  0x00000000032bf700: movslq %esi,%r8           ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf703: jmpq   0x00000000032bcd9b  ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@11 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf708: mov    %r9,%rdi
  0x00000000032bf70b: xor    %rax,%rax
  0x00000000032bf70e: shl    $0x3,%rcx
  0x00000000032bf712: rep rex.W stos %al,%es:(%rdi)  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@25 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf715: mov    0x20(%rsp),%rbp
  0x00000000032bf71a: mov    %rbp,%rdx
  0x00000000032bf71d: xor    %r8d,%r8d
  0x00000000032bf720: mov    0x80(%rsp),%r9
  0x00000000032bf728: xor    %edi,%edi
  0x00000000032bf72a: nop
  0x00000000032bf72b: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [72]=NarrowOop [80]=Oop [128]=Oop off=16656}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf730: jmpq   0x00000000032bce9f
  0x00000000032bf735: mov    %r9,%rdi
  0x00000000032bf738: xor    %rax,%rax
  0x00000000032bf73b: shl    $0x3,%rcx
  0x00000000032bf73f: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf742: jmpq   0x00000000032bce9f  ;*synchronization entry
                                                ; - java.lang.StringBuffer::append@-1 (line 380)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf747: mov    $0xffffff65,%edx
  0x00000000032bf74c: mov    0x40(%rsp),%rbp
  0x00000000032bf751: mov    0x4c(%rsp),%r10d
  0x00000000032bf756: mov    %r10d,0x20(%rsp)
  0x00000000032bf75b: mov    0x3c(%rsp),%r11d
  0x00000000032bf760: mov    %r11d,0x24(%rsp)
  0x00000000032bf765: xchg   %ax,%ax
  0x00000000032bf767: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=16716}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf76c: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf76d: mov    $0xffffff65,%edx
  0x00000000032bf772: mov    0x40(%rsp),%rbp
  0x00000000032bf777: mov    0x4c(%rsp),%r11d
  0x00000000032bf77c: mov    0x3c(%rsp),%r10d
  0x00000000032bf781: mov    %r10d,0x24(%rsp)
  0x00000000032bf786: mov    %r11d,0x30(%rsp)
  0x00000000032bf78b: mov    0x50(%rsp),%r10
  0x00000000032bf790: mov    %r10,0x40(%rsp)
  0x00000000032bf795: mov    %r8d,0x4c(%rsp)
  0x00000000032bf79a: mov    %r8d,0x50(%rsp)
  0x00000000032bf79f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [104]=Oop off=16772}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@15 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf7a4: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf7a5: mov    $0xffffff65,%edx
  0x00000000032bf7aa: mov    0x40(%rsp),%r10
  0x00000000032bf7af: mov    %r10,0x20(%rsp)
  0x00000000032bf7b4: mov    0x4c(%rsp),%r11d
  0x00000000032bf7b9: mov    0x3c(%rsp),%r10d
  0x00000000032bf7be: mov    %r10d,0x2c(%rsp)
  0x00000000032bf7c3: mov    %r11d,0x38(%rsp)
  0x00000000032bf7c8: mov    %r8d,0x58(%rsp)
  0x00000000032bf7cd: xchg   %ax,%ax
  0x00000000032bf7cf: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=16820}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf7d4: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032bf7d5: mov    0x30(%rsp),%r9
  0x00000000032bf7da: jmpq   0x00000000032bdd2b  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf7df: mov    $0xffffff65,%edx
  0x00000000032bf7e4: mov    0x40(%rsp),%rbp
  0x00000000032bf7e9: mov    0x4c(%rsp),%r10d
  0x00000000032bf7ee: mov    %r10d,0x20(%rsp)
  0x00000000032bf7f3: mov    0x3c(%rsp),%r11d
  0x00000000032bf7f8: mov    %r11d,0x24(%rsp)
  0x00000000032bf7fd: xchg   %ax,%ax
  0x00000000032bf7ff: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=16868}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@40 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf804: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf805: mov    $0xffffff65,%edx
  0x00000000032bf80a: mov    0x40(%rsp),%rbp
  0x00000000032bf80f: mov    0x4c(%rsp),%r11d
  0x00000000032bf814: mov    0x3c(%rsp),%r10d
  0x00000000032bf819: mov    %r10d,0x24(%rsp)
  0x00000000032bf81e: mov    %r11d,0x30(%rsp)
  0x00000000032bf823: mov    0x50(%rsp),%r10
  0x00000000032bf828: mov    %r10,0x40(%rsp)
  0x00000000032bf82d: mov    %r8d,0x4c(%rsp)
  0x00000000032bf832: mov    %r8d,0x50(%rsp)
  0x00000000032bf837: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [104]=Oop off=16924}
                                                ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::isLetter@3 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf83c: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf83d: mov    $0xffffff65,%edx
  0x00000000032bf842: mov    0x40(%rsp),%rbp
  0x00000000032bf847: mov    0x4c(%rsp),%r11d
  0x00000000032bf84c: mov    0x3c(%rsp),%r10d
  0x00000000032bf851: mov    %r10d,0x24(%rsp)
  0x00000000032bf856: mov    %r11d,0x30(%rsp)
  0x00000000032bf85b: mov    0x50(%rsp),%r10
  0x00000000032bf860: mov    %r10,0x40(%rsp)
  0x00000000032bf865: mov    %r8d,0x4c(%rsp)
  0x00000000032bf86a: nop
  0x00000000032bf86b: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [104]=Oop off=16976}
                                                ;*if_icmpgt
                                                ; - java.io.WinNTFileSystem::isLetter@21 (line 57)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@46 (line 180)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf870: int3                      ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf871: mov    $0xffffff65,%edx
  0x00000000032bf876: mov    0x40(%rsp),%r10
  0x00000000032bf87b: mov    %r10,0x20(%rsp)
  0x00000000032bf880: mov    0x4c(%rsp),%r10d
  0x00000000032bf885: mov    %r10d,0x28(%rsp)
  0x00000000032bf88a: mov    0x3c(%rsp),%r11d
  0x00000000032bf88f: mov    %r11d,0x2c(%rsp)
  0x00000000032bf894: mov    %r8d,0x4c(%rsp)
  0x00000000032bf899: xchg   %ax,%ax
  0x00000000032bf89b: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=17024}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf8a0: int3                      ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)

  0x00000000032bf8a1: mov    %rax,0x60(%rsp)
  0x00000000032bf8a6: mov    %r9,0x48(%rsp)
  0x00000000032bf8ab: mov    %rdi,0x30(%rsp)
  0x00000000032bf8b0: mov    %r10,0x28(%rsp)
  0x00000000032bf8b5: mov    %ebx,0x24(%rsp)
  0x00000000032bf8b9: mov    %r11d,%ebp         ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf8bc: movabs $0x7c0000208,%rdx  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bf8c6: mov    %ebx,%r8d
  0x00000000032bf8c9: xchg   %ax,%ax
  0x00000000032bf8cb: callq  0x00000000032935e0  ; OopMap{[40]=Oop [48]=Derived_oop_[40] [64]=Oop [80]=Oop off=17072}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf8d0: mov    %rax,%r8
  0x00000000032bf8d3: mov    %ebp,%r11d
  0x00000000032bf8d6: mov    0x24(%rsp),%ebx
  0x00000000032bf8da: mov    0x28(%rsp),%r10
  0x00000000032bf8df: mov    0x30(%rsp),%rdi
  0x00000000032bf8e4: mov    0x48(%rsp),%r9
  0x00000000032bf8e9: mov    0x60(%rsp),%rax
  0x00000000032bf8ee: mov    %r8,%rdx
  0x00000000032bf8f1: jmpq   0x00000000032bdca7
  0x00000000032bf8f6: mov    %r9,0x70(%rsp)
  0x00000000032bf8fb: mov    %rbx,0x68(%rsp)
  0x00000000032bf900: mov    %eax,0x4c(%rsp)    ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf904: movabs $0x7c0000208,%rdx  ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bf90e: mov    %eax,%r8d
  0x00000000032bf911: xchg   %ax,%ax
  0x00000000032bf913: callq  0x00000000032935e0  ; OopMap{[32]=Oop [56]=Derived_oop_[32] [64]=Oop [80]=Oop off=17144}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf918: mov    %rax,%rcx
  0x00000000032bf91b: jmpq   0x00000000032bde14
  0x00000000032bf920: movslq %edi,%r8           ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf923: jmpq   0x00000000032bcf06
  0x00000000032bf928: mov    %r11,%rdi
  0x00000000032bf92b: xor    %rax,%rax
  0x00000000032bf92e: shl    $0x3,%rcx
  0x00000000032bf932: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf935: mov    0x38(%rsp),%rbp
  0x00000000032bf93a: mov    %rbp,%rdx
  0x00000000032bf93d: xor    %r8d,%r8d
  0x00000000032bf940: mov    0x80(%rsp),%r9
  0x00000000032bf948: xor    %edi,%edi
  0x00000000032bf94a: nop
  0x00000000032bf94b: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=17200}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf950: jmpq   0x00000000032bd001
  0x00000000032bf955: mov    %r11,%rdi
  0x00000000032bf958: xor    %rax,%rax
  0x00000000032bf95b: shl    $0x3,%rcx
  0x00000000032bf95f: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf962: jmpq   0x00000000032bd001  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bf967: mov    $0xffffffe4,%edx   ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf96c: mov    0x40(%rsp),%rbp
  0x00000000032bf971: mov    %r11d,0x20(%rsp)
  0x00000000032bf976: mov    0x3c(%rsp),%r8d
  0x00000000032bf97b: mov    %r8d,0x28(%rsp)
  0x00000000032bf980: mov    %r10,0x40(%rsp)
  0x00000000032bf985: xchg   %ax,%ax
  0x00000000032bf987: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=17260}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bf98c: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf98d: mov    $0xffffff65,%edx
  0x00000000032bf992: mov    0x40(%rsp),%rbp
  0x00000000032bf997: mov    0x30(%rsp),%r11d
  0x00000000032bf99c: mov    %r11d,0x20(%rsp)
  0x00000000032bf9a1: mov    0x34(%rsp),%r11d
  0x00000000032bf9a6: mov    %r11d,0x28(%rsp)
  0x00000000032bf9ab: mov    0x48(%rsp),%r11d
  0x00000000032bf9b0: mov    %r11d,0x3c(%rsp)
  0x00000000032bf9b5: mov    %esi,0x40(%rsp)
  0x00000000032bf9b9: xchg   %ax,%ax
  0x00000000032bf9bb: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=17312}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@97 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf9c0: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf9c1: mov    $0xffffff65,%edx
  0x00000000032bf9c6: mov    0x40(%rsp),%rbp
  0x00000000032bf9cb: mov    0x34(%rsp),%r10d
  0x00000000032bf9d0: mov    %r10d,0x28(%rsp)
  0x00000000032bf9d5: mov    %esi,0x38(%rsp)
  0x00000000032bf9d9: xchg   %ax,%ax
  0x00000000032bf9db: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [56]=NarrowOop [80]=Oop off=17344}
                                                ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@90 (line 123)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bf9e0: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000032bf9e1: mov    %rax,%r11
  0x00000000032bf9e4: mov    %r8d,%r13d
  0x00000000032bf9e7: mov    %r10d,%ebx
  0x00000000032bf9ea: movslq %esi,%r8           ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf9ed: mov    %r8,%r10
  0x00000000032bf9f0: shl    %r10
  0x00000000032bf9f3: add    $0x10,%r10         ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bf9f7: mov    %r10,%rcx
  0x00000000032bf9fa: and    $0xfffffffffffffff9,%rcx
  0x00000000032bf9fe: mov    %rdx,%rdi
  0x00000000032bfa01: add    %rcx,%rdi
  0x00000000032bfa04: mov    %rdx,%rbp
  0x00000000032bfa07: shr    $0x3,%r10
  0x00000000032bfa0b: sub    %r10,%r9
  0x00000000032bfa0e: mov    %r9,%rcx
  0x00000000032bfa11: xor    %rax,%rax
  0x00000000032bfa14: shl    $0x3,%rcx
  0x00000000032bfa18: rep rex.W stos %al,%es:(%rdi)  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 609)
                                                ; - java.lang.StringBuffer::toString@32 (line 671)
                                                ; - java.io.WinNTFileSystem::normalize@223 (line 159)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfa1b: mov    0x70(%rsp),%rcx
  0x00000000032bfa20: mov    %r11,%rdx
  0x00000000032bfa23: movabs $0x31e2980,%r10
  0x00000000032bfa2d: callq  *%r10              ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfa30: mov    %ebx,%r10d
  0x00000000032bfa33: mov    %r13d,%r8d
  0x00000000032bfa36: mov    %rbp,%rdx
  0x00000000032bfa39: jmpq   0x00000000032be554
  0x00000000032bfa3e: mov    %r9,0x30(%rsp)
  0x00000000032bfa43: mov    %r11,0x28(%rsp)
  0x00000000032bfa48: mov    0x78(%rsp),%ebp    ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfa4c: movabs $0x7c0000208,%rdx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bfa56: nop
  0x00000000032bfa57: callq  0x00000000032935e0  ; OopMap{[64]=Oop [80]=Oop [104]=Oop [112]=Derived_oop_[104] off=17468}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfa5c: mov    %ebp,%r8d
  0x00000000032bfa5f: mov    0x28(%rsp),%r11
  0x00000000032bfa64: mov    0x30(%rsp),%r9
  0x00000000032bfa69: mov    %rax,%rbx
  0x00000000032bfa6c: jmpq   0x00000000032be00f
  0x00000000032bfa71: mov    %r8,0x68(%rsp)
  0x00000000032bfa76: mov    %rdx,0x60(%rsp)
  0x00000000032bfa7b: mov    %r13d,0x24(%rsp)
  0x00000000032bfa80: mov    %rdi,0x48(%rsp)
  0x00000000032bfa85: mov    %rbx,0x30(%rsp)
  0x00000000032bfa8a: mov    %r9,0x28(%rsp)
  0x00000000032bfa8f: mov    %r10d,%ebp         ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfa92: movabs $0x7c0000208,%rdx  ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@22 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bfa9c: mov    %r13d,%r8d
  0x00000000032bfa9f: callq  0x00000000032935e0  ; OopMap{[40]=Oop [48]=Oop [64]=Oop [72]=Derived_oop_[40] [80]=Oop off=17540}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfaa4: mov    %ebp,%r10d
  0x00000000032bfaa7: mov    0x28(%rsp),%r9
  0x00000000032bfaac: mov    0x30(%rsp),%rbx
  0x00000000032bfab1: mov    0x48(%rsp),%rdi
  0x00000000032bfab6: mov    0x24(%rsp),%r13d
  0x00000000032bfabb: mov    0x60(%rsp),%rdx
  0x00000000032bfac0: mov    0x68(%rsp),%r8
  0x00000000032bfac5: mov    %rax,%rbp
  0x00000000032bfac8: jmpq   0x00000000032be13b
  0x00000000032bfacd: movslq %esi,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::newCapacity@1 (line 150)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfad0: jmpq   0x00000000032bd170  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfad5: mov    %r9,%rdi
  0x00000000032bfad8: xor    %rax,%rax
  0x00000000032bfadb: shl    $0x3,%rcx
  0x00000000032bfadf: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfae2: mov    0x38(%rsp),%rbp
  0x00000000032bfae7: mov    %rbp,%rdx
  0x00000000032bfaea: xor    %r8d,%r8d
  0x00000000032bfaed: mov    0x80(%rsp),%r9
  0x00000000032bfaf5: xor    %edi,%edi
  0x00000000032bfaf7: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=17628}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bfafc: jmpq   0x00000000032bd26b
  0x00000000032bfb01: mov    %r9,%rdi
  0x00000000032bfb04: xor    %rax,%rax
  0x00000000032bfb07: shl    $0x3,%rcx
  0x00000000032bfb0b: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfb0e: jmpq   0x00000000032bd26b
  0x00000000032bfb13: mov    %r11d,0x24(%rsp)   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfb18: mov    0x24(%rsp),%r11d   ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfb1d: mov    $0xffffff65,%edx   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfb22: mov    0x40(%rsp),%rbp
  0x00000000032bfb27: mov    0x30(%rsp),%r9d
  0x00000000032bfb2c: mov    %r9d,0x20(%rsp)
  0x00000000032bfb31: mov    %r11d,0x24(%rsp)
  0x00000000032bfb36: mov    0x34(%rsp),%r11d
  0x00000000032bfb3b: mov    %r11d,0x2c(%rsp)
  0x00000000032bfb40: mov    %r10d,0x3c(%rsp)
  0x00000000032bfb45: mov    0x48(%rsp),%r11d
  0x00000000032bfb4a: mov    %r11d,0x40(%rsp)
  0x00000000032bfb4f: mov    %esi,0x44(%rsp)
  0x00000000032bfb53: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [68]=NarrowOop [80]=Oop off=17720}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfb58: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032bfb59: mov    0x2c(%rsp),%r10d
  0x00000000032bfb5e: mov    %r10d,0x24(%rsp)
  0x00000000032bfb63: mov    %eax,%r10d
  0x00000000032bfb66: mov    %r9d,%r8d          ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfb69: mov    0x24(%rsp),%r11d   ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfb6e: mov    $0xffffff65,%edx   ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfb73: mov    0x40(%rsp),%rbp
  0x00000000032bfb78: mov    0x30(%rsp),%ecx
  0x00000000032bfb7c: mov    %ecx,0x20(%rsp)
  0x00000000032bfb80: mov    %r11d,0x24(%rsp)
  0x00000000032bfb85: mov    0x34(%rsp),%r11d
  0x00000000032bfb8a: mov    %r11d,0x2c(%rsp)
  0x00000000032bfb8f: mov    %r10d,0x38(%rsp)
  0x00000000032bfb94: mov    0x48(%rsp),%r11d
  0x00000000032bfb99: mov    %r11d,0x3c(%rsp)
  0x00000000032bfb9e: mov    %esi,0x40(%rsp)
  0x00000000032bfba2: mov    %r8d,0x44(%rsp)
  0x00000000032bfba7: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=NarrowOop [80]=Oop off=17804}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfbac: int3                      ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfbad: mov    $0xffffffe4,%edx
  0x00000000032bfbb2: mov    0x40(%rsp),%rbp
  0x00000000032bfbb7: mov    %r10d,0x20(%rsp)
  0x00000000032bfbbc: mov    0x3c(%rsp),%r10d
  0x00000000032bfbc1: mov    %r10d,0x24(%rsp)
  0x00000000032bfbc6: mov    0x50(%rsp),%r10
  0x00000000032bfbcb: mov    %r10,0x30(%rsp)
  0x00000000032bfbd0: mov    %r10,0x38(%rsp)
  0x00000000032bfbd5: mov    %r8d,0x40(%rsp)
  0x00000000032bfbda: nop
  0x00000000032bfbdb: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [48]=Oop [56]=Oop [64]=NarrowOop [104]=Oop off=17856}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfbe0: int3                      ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfbe1: mov    $0xffffffe4,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfbe6: mov    0x40(%rsp),%rbp
  0x00000000032bfbeb: mov    %r10d,0x20(%rsp)
  0x00000000032bfbf0: mov    0x3c(%rsp),%r11d
  0x00000000032bfbf5: mov    %r11d,0x24(%rsp)
  0x00000000032bfbfa: nop
  0x00000000032bfbfb: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=17888}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfc00: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfc01: mov    $0xffffffe4,%edx   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfc06: mov    0x40(%rsp),%rbp
  0x00000000032bfc0b: mov    %r10d,0x20(%rsp)
  0x00000000032bfc10: mov    0x3c(%rsp),%r11d
  0x00000000032bfc15: mov    %r11d,0x24(%rsp)
  0x00000000032bfc1a: mov    %r9,0x40(%rsp)
  0x00000000032bfc1f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop off=17924}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfc24: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032bfc25: movslq %esi,%rbx          ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfc28: jmpq   0x00000000032bd34e  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfc2d: mov    %rbx,%rdi
  0x00000000032bfc30: xor    %rax,%rax
  0x00000000032bfc33: shl    $0x3,%rcx
  0x00000000032bfc37: rep rex.W stos %al,%es:(%rdi)  ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@13 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfc3a: mov    0x20(%rsp),%rbp
  0x00000000032bfc3f: mov    %rbp,%rdx
  0x00000000032bfc42: xor    %r8d,%r8d
  0x00000000032bfc45: mov    0x78(%rsp),%r9
  0x00000000032bfc4a: xor    %edi,%edi
  0x00000000032bfc4c: data16 xchg %ax,%ax
  0x00000000032bfc4f: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [120]=Oop off=17972}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bfc54: jmpq   0x00000000032bd439
  0x00000000032bfc59: mov    %rbx,%rdi
  0x00000000032bfc5c: xor    %rax,%rax
  0x00000000032bfc5f: shl    $0x3,%rcx
  0x00000000032bfc63: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfc66: jmpq   0x00000000032bd439
  0x00000000032bfc6b: mov    %eax,0x64(%rsp)
  0x00000000032bfc6f: movslq %eax,%r10          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfc72: jmpq   0x00000000032bd4d2  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfc77: mov    %r9,%rdi
  0x00000000032bfc7a: xor    %rax,%rax
  0x00000000032bfc7d: shl    $0x3,%rcx
  0x00000000032bfc81: rep rex.W stos %al,%es:(%rdi)  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfc84: mov    0x38(%rsp),%rbp
  0x00000000032bfc89: mov    %rbp,%rdx
  0x00000000032bfc8c: xor    %r8d,%r8d
  0x00000000032bfc8f: mov    0x80(%rsp),%r9
  0x00000000032bfc97: xor    %edi,%edi
  0x00000000032bfc99: xchg   %ax,%ax
  0x00000000032bfc9b: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=18048}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfca0: jmpq   0x00000000032bd5cb
  0x00000000032bfca5: mov    %r9,%rdi
  0x00000000032bfca8: xor    %rax,%rax
  0x00000000032bfcab: shl    $0x3,%rcx
  0x00000000032bfcaf: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfcb2: jmpq   0x00000000032bd5cb  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfcb7: mov    $0xffffff65,%edx
  0x00000000032bfcbc: mov    0x40(%rsp),%rbp
  0x00000000032bfcc1: mov    0x3c(%rsp),%r8d
  0x00000000032bfcc6: mov    %r8d,0x24(%rsp)
  0x00000000032bfccb: mov    %r10d,0x30(%rsp)
  0x00000000032bfcd0: mov    0x50(%rsp),%r10
  0x00000000032bfcd5: mov    %r10,0x40(%rsp)
  0x00000000032bfcda: mov    %r10,0x48(%rsp)
  0x00000000032bfcdf: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [64]=Oop [72]=Oop [104]=Oop off=18116}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@108 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfce4: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000032bfce5: movslq 0x78(%rsp),%rbx    ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfcea: jmpq   0x00000000032bd679
  0x00000000032bfcef: movslq %r13d,%rbx         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfcf2: jmpq   0x00000000032bd79d  ;*ifeq
                                                ; - java.io.WinNTFileSystem::normalizePrefix@114 (line 193)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfcf7: mov    %r8,0x28(%rsp)
  0x00000000032bfcfc: mov    %r11d,%ebp
  0x00000000032bfcff: mov    %rdx,%rdi
  0x00000000032bfd02: xor    %rax,%rax
  0x00000000032bfd05: shl    $0x3,%rcx
  0x00000000032bfd09: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfd0c: mov    0x68(%rsp),%rdx
  0x00000000032bfd11: xor    %r8d,%r8d
  0x00000000032bfd14: mov    0x28(%rsp),%r9
  0x00000000032bfd19: xor    %edi,%edi
  0x00000000032bfd1b: callq  0x000000000329e6a0  ; OopMap{[40]=Oop [64]=Oop [80]=Oop [104]=Oop off=18176}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bfd20: mov    %ebp,%r11d
  0x00000000032bfd23: mov    0x28(%rsp),%r8
  0x00000000032bfd28: jmpq   0x00000000032bd74c  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfd2d: mov    %rdx,0x30(%rsp)
  0x00000000032bfd32: mov    %r13d,0x28(%rsp)
  0x00000000032bfd37: mov    %r10,%rbx
  0x00000000032bfd3a: mov    %r11d,0x24(%rsp)
  0x00000000032bfd3f: mov    %rbp,%rdi
  0x00000000032bfd42: xor    %rax,%rax
  0x00000000032bfd45: shl    $0x3,%rcx
  0x00000000032bfd49: rep rex.W stos %al,%es:(%rdi)  ;*isub
                                                ; - java.lang.AbstractStringBuilder::newCapacity@12 (line 151)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfd4c: mov    %r8,%rdx
  0x00000000032bfd4f: xor    %r8d,%r8d
  0x00000000032bfd52: mov    0x30(%rsp),%r9
  0x00000000032bfd57: xor    %edi,%edi
  0x00000000032bfd59: mov    0x50(%rsp),%r10
  0x00000000032bfd5e: mov    %r10,%rbp
  0x00000000032bfd61: mov    %rbx,0x48(%rsp)
  0x00000000032bfd66: nop
  0x00000000032bfd67: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [48]=Oop [64]=Oop [72]=Oop [80]=Oop off=18252}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bfd6c: mov    0x24(%rsp),%r11d
  0x00000000032bfd71: mov    0x28(%rsp),%r13d
  0x00000000032bfd76: mov    0x30(%rsp),%rdx
  0x00000000032bfd7b: jmpq   0x00000000032bd87e
  0x00000000032bfd80: mov    %rdx,%rdi
  0x00000000032bfd83: xor    %rax,%rax
  0x00000000032bfd86: shl    $0x3,%rcx
  0x00000000032bfd8a: rep rex.W stos %al,%es:(%rdi)  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfd8d: jmpq   0x00000000032bd74c
  0x00000000032bfd92: mov    %rbp,%rdi
  0x00000000032bfd95: xor    %rax,%rax
  0x00000000032bfd98: shl    $0x3,%rcx
  0x00000000032bfd9c: rep rex.W stos %al,%es:(%rdi)  ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfd9f: jmpq   0x00000000032bd87e
  0x00000000032bfda4: movslq %eax,%r8           ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfda7: jmpq   0x00000000032bd8c9
  0x00000000032bfdac: mov    %eax,%r10d
  0x00000000032bfdaf: jmpq   0x00000000032bf51d  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfdb4: mov    %r9,%rdi
  0x00000000032bfdb7: xor    %rax,%rax
  0x00000000032bfdba: shl    $0x3,%rcx
  0x00000000032bfdbe: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfdc1: mov    0x20(%rsp),%rbp
  0x00000000032bfdc6: mov    %rbp,%rdx
  0x00000000032bfdc9: xor    %r8d,%r8d
  0x00000000032bfdcc: mov    0x78(%rsp),%r9
  0x00000000032bfdd1: xor    %edi,%edi
  0x00000000032bfdd3: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [120]=Oop off=18360}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfdd8: jmpq   0x00000000032bd9b6
  0x00000000032bfddd: mov    %r9,%rdi
  0x00000000032bfde0: xor    %rax,%rax
  0x00000000032bfde3: shl    $0x3,%rcx
  0x00000000032bfde7: rep rex.W stos %al,%es:(%rdi)  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfdea: jmpq   0x00000000032bd9b6
  0x00000000032bfdef: mov    %rdi,0x48(%rsp)
  0x00000000032bfdf4: mov    %r9,0x30(%rsp)
  0x00000000032bfdf9: mov    %ebx,0x24(%rsp)
  0x00000000032bfdfd: mov    %r10d,%ebp         ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfe00: movabs $0x7c0000208,%rdx  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {metadata({type array char})}
  0x00000000032bfe0a: mov    %ebx,%r8d
  0x00000000032bfe0d: mov    0x3c(%rsp),%r10d
  0x00000000032bfe12: mov    %r10d,0x38(%rsp)
  0x00000000032bfe17: callq  0x00000000032935e0  ; OopMap{[64]=Oop [80]=Oop [104]=Oop [112]=Derived_oop_[104] off=18428}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bfe1c: mov    %ebp,%r10d
  0x00000000032bfe1f: mov    0x24(%rsp),%ebx
  0x00000000032bfe23: mov    0x30(%rsp),%r9
  0x00000000032bfe28: mov    0x48(%rsp),%rdi
  0x00000000032bfe2d: mov    %rax,%rdx
  0x00000000032bfe30: jmpq   0x00000000032be4df  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfe35: mov    $0xffffff65,%edx   ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfe3a: mov    0x40(%rsp),%rbp
  0x00000000032bfe3f: mov    0x4c(%rsp),%r10d
  0x00000000032bfe44: mov    %r10d,0x20(%rsp)
  0x00000000032bfe49: mov    0x3c(%rsp),%r11d
  0x00000000032bfe4e: mov    %r11d,0x24(%rsp)
  0x00000000032bfe53: mov    0x68(%rsp),%r10
  0x00000000032bfe58: mov    %r10,0x48(%rsp)
  0x00000000032bfe5d: xchg   %ax,%ax
  0x00000000032bfe5f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [72]=Oop [80]=Oop [104]=Oop off=18500}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bfe64: int3                      ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfe65: mov    $0xffffff65,%edx   ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfe6a: mov    0x40(%rsp),%rbp
  0x00000000032bfe6f: mov    %r11d,0x20(%rsp)
  0x00000000032bfe74: mov    0x3c(%rsp),%r8d
  0x00000000032bfe79: mov    %r8d,0x24(%rsp)
  0x00000000032bfe7e: mov    %r13d,0x40(%rsp)
  0x00000000032bfe83: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=18536}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bfe88: int3                      ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfe89: mov    $0xffffff65,%edx   ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfe8e: mov    0x40(%rsp),%r10
  0x00000000032bfe93: mov    %r10,0x20(%rsp)
  0x00000000032bfe98: mov    0x3c(%rsp),%r11d
  0x00000000032bfe9d: mov    %r11d,0x2c(%rsp)
  0x00000000032bfea2: mov    0x50(%rsp),%r10
  0x00000000032bfea7: mov    %r10,0x38(%rsp)
  0x00000000032bfeac: mov    0x68(%rsp),%r10
  0x00000000032bfeb1: mov    %r10,0x50(%rsp)
  0x00000000032bfeb6: nop
  0x00000000032bfeb7: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop [104]=Oop off=18588}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bfebc: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfebd: mov    $0xffffff65,%edx   ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfec2: mov    0x40(%rsp),%r8
  0x00000000032bfec7: mov    %r8,0x20(%rsp)
  0x00000000032bfecc: mov    %r11d,0x28(%rsp)
  0x00000000032bfed1: mov    0x3c(%rsp),%r8d
  0x00000000032bfed6: mov    %r8d,0x2c(%rsp)
  0x00000000032bfedb: mov    %r13d,0x34(%rsp)
  0x00000000032bfee0: data16 xchg %ax,%ax
  0x00000000032bfee3: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=18632}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bfee8: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfee9: mov    $0xffffffe4,%edx   ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfeee: mov    0x40(%rsp),%rbp
  0x00000000032bfef3: mov    %r10d,0x20(%rsp)
  0x00000000032bfef8: mov    0x3c(%rsp),%r10d
  0x00000000032bfefd: mov    %r10d,0x28(%rsp)
  0x00000000032bff02: nop
  0x00000000032bff03: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=18664}
                                                ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bff08: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032bff09: movslq %eax,%r11          ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bff0c: jmpq   0x00000000032bda57  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bff11: mov    %r9,%rdi
  0x00000000032bff14: xor    %rax,%rax
  0x00000000032bff17: shl    $0x3,%rcx
  0x00000000032bff1b: rep rex.W stos %al,%es:(%rdi)  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@96 (line 192)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bff1e: mov    0x38(%rsp),%rbp
  0x00000000032bff23: mov    %rbp,%rdx
  0x00000000032bff26: xor    %r8d,%r8d
  0x00000000032bff29: mov    0x80(%rsp),%r9
  0x00000000032bff31: xor    %edi,%edi
  0x00000000032bff33: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [128]=Oop off=18712}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bff38: jmpq   0x00000000032bdb51
  0x00000000032bff3d: mov    %r9,%rdi
  0x00000000032bff40: xor    %rax,%rax
  0x00000000032bff43: shl    $0x3,%rcx
  0x00000000032bff47: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bff4a: jmpq   0x00000000032bdb51
  0x00000000032bff4f: movslq %ebx,%r9           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bff52: jmpq   0x00000000032bdc44
  0x00000000032bff57: mov    %rdx,0x28(%rsp)
  0x00000000032bff5c: mov    %r11d,%ebp
  0x00000000032bff5f: mov    %r8,%rdi
  0x00000000032bff62: xor    %rax,%rax
  0x00000000032bff65: shl    $0x3,%rcx
  0x00000000032bff69: rep rex.W stos %al,%es:(%rdi)  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bff6c: mov    %r10,%rdx
  0x00000000032bff6f: xor    %r8d,%r8d
  0x00000000032bff72: mov    0x28(%rsp),%r9
  0x00000000032bff77: xor    %edi,%edi
  0x00000000032bff79: mov    0x3c(%rsp),%r11d
  0x00000000032bff7e: mov    %r11d,0x38(%rsp)
  0x00000000032bff83: mov    %r10,0x48(%rsp)
  0x00000000032bff88: data16 xchg %ax,%ax
  0x00000000032bff8b: callq  0x000000000329e6a0  ; OopMap{[40]=Oop [64]=Oop [72]=Oop [80]=Oop off=18800}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032bff90: mov    %ebp,%r11d
  0x00000000032bff93: mov    0x28(%rsp),%rdx
  0x00000000032bff98: jmpq   0x00000000032bdd0d
  0x00000000032bff9d: mov    %r8,%rdi
  0x00000000032bffa0: xor    %rax,%rax
  0x00000000032bffa3: shl    $0x3,%rcx
  0x00000000032bffa7: rep rex.W stos %al,%es:(%rdi)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bffaa: jmpq   0x00000000032bdd0d
  0x00000000032bffaf: movslq %eax,%rbx          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bffb2: jmpq   0x00000000032bdda3  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bffb7: mov    %rbx,%rdi
  0x00000000032bffba: xor    %rax,%rax
  0x00000000032bffbd: shl    $0x3,%rcx
  0x00000000032bffc1: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bffc4: mov    0x20(%rsp),%rbp
  0x00000000032bffc9: mov    %rbp,%rdx
  0x00000000032bffcc: xor    %r8d,%r8d
  0x00000000032bffcf: mov    0x78(%rsp),%r9
  0x00000000032bffd4: xor    %edi,%edi
  0x00000000032bffd6: nop
  0x00000000032bffd7: callq  0x000000000329e6a0  ; OopMap{rbp=Oop [64]=Oop [80]=Oop [120]=Oop off=18876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032bffdc: jmpq   0x00000000032bde8b
  0x00000000032bffe1: mov    %rbx,%rdi
  0x00000000032bffe4: xor    %rax,%rax
  0x00000000032bffe7: shl    $0x3,%rcx
  0x00000000032bffeb: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic min
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bffee: jmpq   0x00000000032bde8b  ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032bfff3: mov    $0xffffff65,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032bfff8: mov    0x40(%rsp),%rbp
  0x00000000032bfffd: mov    %r11d,0x20(%rsp)
  0x00000000032c0002: mov    0x3c(%rsp),%r8d
  0x00000000032c0007: mov    %r8d,0x28(%rsp)
  0x00000000032c000c: mov    %ebx,0x40(%rsp)
  0x00000000032c0010: mov    %r10,0x48(%rsp)
  0x00000000032c0015: xchg   %ax,%ax
  0x00000000032c0017: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [72]=Oop [80]=Oop off=18940}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032c001c: int3                      ;*if_icmplt
                                                ; - java.io.WinNTFileSystem::normalizePrefix@90 (line 191)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c001d: mov    $0xffffff65,%edx   ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c0022: mov    0x40(%rsp),%r8
  0x00000000032c0027: mov    %r8,0x20(%rsp)
  0x00000000032c002c: mov    %r11d,0x28(%rsp)
  0x00000000032c0031: mov    0x3c(%rsp),%r8d
  0x00000000032c0036: mov    %r8d,0x30(%rsp)
  0x00000000032c003b: mov    %ebx,0x34(%rsp)
  0x00000000032c003f: mov    %r10,0x48(%rsp)
  0x00000000032c0044: data16 xchg %ax,%ax
  0x00000000032c0047: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop off=18988}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032c004c: int3                      ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@31 (line 87)

  0x00000000032c004d: movslq 0x78(%rsp),%r11
  0x00000000032c0052: jmpq   0x00000000032bdfaa
  0x00000000032c0057: movslq %r13d,%rdx         ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c005a: jmpq   0x00000000032be0d5  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c005f: mov    %rbx,0x28(%rsp)
  0x00000000032c0064: mov    %r10d,%ebp
  0x00000000032c0067: xor    %rax,%rax
  0x00000000032c006a: shl    $0x3,%rcx
  0x00000000032c006e: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c0071: mov    0x68(%rsp),%rdx
  0x00000000032c0076: xor    %r8d,%r8d
  0x00000000032c0079: mov    %rbx,%r9
  0x00000000032c007c: xor    %edi,%edi
  0x00000000032c007e: nop
  0x00000000032c007f: callq  0x000000000329e6a0  ; OopMap{[40]=Oop [64]=Oop [80]=Oop [104]=Oop off=19044}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c0084: mov    %ebp,%r10d
  0x00000000032c0087: mov    0x28(%rsp),%rbx
  0x00000000032c008c: jmpq   0x00000000032be07f  ;*if_icmpeq
                                                ; - java.io.WinNTFileSystem::isSlash@3 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c0091: mov    %rbp,0x28(%rsp)
  0x00000000032c0096: mov    %r13d,0x24(%rsp)
  0x00000000032c009b: mov    %rbx,%r11
  0x00000000032c009e: mov    %r9,%rbx
  0x00000000032c00a1: mov    %r10d,%ebp
  0x00000000032c00a4: mov    %rax,%rdi
  0x00000000032c00a7: xor    %rax,%rax
  0x00000000032c00aa: shl    $0x3,%rcx
  0x00000000032c00ae: rep rex.W stos %al,%es:(%rdi)  ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c00b1: mov    %r11,%rdx
  0x00000000032c00b4: xor    %r8d,%r8d
  0x00000000032c00b7: mov    0x28(%rsp),%r9
  0x00000000032c00bc: xor    %edi,%edi
  0x00000000032c00be: mov    %rbx,0x60(%rsp)
  0x00000000032c00c3: callq  0x000000000329e6a0  ; OopMap{[40]=Oop [64]=Oop [80]=Oop [96]=Oop off=19112}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c00c8: mov    %ebp,%r10d
  0x00000000032c00cb: mov    0x24(%rsp),%r13d
  0x00000000032c00d0: mov    0x28(%rsp),%rbp
  0x00000000032c00d5: jmpq   0x00000000032be1ab
  0x00000000032c00da: xor    %rax,%rax
  0x00000000032c00dd: shl    $0x3,%rcx
  0x00000000032c00e1: rep rex.W stos %al,%es:(%rdi)
  0x00000000032c00e4: jmpq   0x00000000032be07f
  0x00000000032c00e9: mov    %rax,%rdi
  0x00000000032c00ec: xor    %rax,%rax
  0x00000000032c00ef: shl    $0x3,%rcx
  0x00000000032c00f3: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c00f6: jmpq   0x00000000032be1ab  ;*invokespecial ensureCapacityInternal
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c00fb: mov    $0xffffff65,%edx   ;*castore
                                                ; - java.lang.AbstractStringBuilder::append@26 (line 650)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c0100: mov    0x40(%rsp),%rbp
  0x00000000032c0105: mov    0x4c(%rsp),%r10d
  0x00000000032c010a: mov    %r10d,0x20(%rsp)
  0x00000000032c010f: mov    0x3c(%rsp),%r11d
  0x00000000032c0114: mov    %r11d,0x24(%rsp)
  0x00000000032c0119: mov    0x68(%rsp),%r10
  0x00000000032c011e: mov    %r10,0x48(%rsp)
  0x00000000032c0123: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [72]=Oop [80]=Oop [104]=Oop off=19208}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c0128: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c0129: mov    $0xffffff65,%edx   ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c012e: mov    0x40(%rsp),%rbp
  0x00000000032c0133: mov    %r10d,0x20(%rsp)
  0x00000000032c0138: mov    0x3c(%rsp),%r11d
  0x00000000032c013d: mov    %r11d,0x24(%rsp)
  0x00000000032c0142: mov    %r13d,0x40(%rsp)
  0x00000000032c0147: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [80]=Oop [104]=Oop off=19244}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c014c: int3                      ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::normalizePrefix@62 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c014d: mov    $0xffffff65,%edx   ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c0152: mov    0x40(%rsp),%r10
  0x00000000032c0157: mov    %r10,0x20(%rsp)
  0x00000000032c015c: mov    0x3c(%rsp),%r11d
  0x00000000032c0161: mov    %r11d,0x2c(%rsp)
  0x00000000032c0166: mov    0x50(%rsp),%r10
  0x00000000032c016b: mov    %r10,0x38(%rsp)
  0x00000000032c0170: mov    0x68(%rsp),%r10
  0x00000000032c0175: mov    %r10,0x50(%rsp)
  0x00000000032c017a: nop
  0x00000000032c017b: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [56]=Oop [80]=Oop [104]=Oop off=19296}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c0180: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c0181: mov    $0xffffff65,%edx   ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c0186: mov    0x40(%rsp),%r11
  0x00000000032c018b: mov    %r11,0x20(%rsp)
  0x00000000032c0190: mov    %r10d,0x28(%rsp)
  0x00000000032c0195: mov    0x3c(%rsp),%r11d
  0x00000000032c019a: mov    %r11d,0x2c(%rsp)
  0x00000000032c019f: mov    %r13d,0x34(%rsp)
  0x00000000032c01a4: data16 xchg %ax,%ax
  0x00000000032c01a7: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [80]=Oop [104]=Oop off=19340}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c01ac: int3                      ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@28 (line 87)

  0x00000000032c01ad: movslq %ebx,%r9           ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c01b0: jmpq   0x00000000032be47c  ;*invokespecial isSlash
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c01b5: mov    %rdx,0x30(%rsp)
  0x00000000032c01ba: mov    %r8d,0x24(%rsp)
  0x00000000032c01bf: mov    %r10d,%ebp
  0x00000000032c01c2: mov    %rax,%rdi
  0x00000000032c01c5: xor    %rax,%rax
  0x00000000032c01c8: shl    $0x3,%rcx
  0x00000000032c01cc: rep rex.W stos %al,%es:(%rdi)  ;*if_icmpne
                                                ; - java.io.WinNTFileSystem::isSlash@9 (line 53)
                                                ; - java.io.WinNTFileSystem::normalize@81 (line 122)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c01cf: mov    0x68(%rsp),%rdx
  0x00000000032c01d4: xor    %r8d,%r8d
  0x00000000032c01d7: mov    0x30(%rsp),%r9
  0x00000000032c01dc: xor    %edi,%edi
  0x00000000032c01de: mov    0x3c(%rsp),%r11d
  0x00000000032c01e3: mov    %r11d,0x38(%rsp)
  0x00000000032c01e8: data16 xchg %ax,%ax
  0x00000000032c01eb: callq  0x000000000329e6a0  ; OopMap{[36]=NarrowOop [48]=Oop [64]=Oop [80]=Oop [104]=Oop off=19408}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c01f0: mov    %ebp,%r10d
  0x00000000032c01f3: mov    0x24(%rsp),%r8d
  0x00000000032c01f8: mov    0x30(%rsp),%rdx
  0x00000000032c01fd: jmpq   0x00000000032be554
  0x00000000032c0202: mov    %rax,%rdi
  0x00000000032c0205: xor    %rax,%rax
  0x00000000032c0208: shl    $0x3,%rcx
  0x00000000032c020c: rep rex.W stos %al,%es:(%rdi)  ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@214 (line 155)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c020f: jmpq   0x00000000032be554  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c0214: mov    $0xffffff65,%edx   ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c0219: mov    0x40(%rsp),%rbp
  0x00000000032c021e: mov    %r10d,0x20(%rsp)
  0x00000000032c0223: mov    0x3c(%rsp),%r10d
  0x00000000032c0228: mov    %r10d,0x28(%rsp)
  0x00000000032c022d: mov    0x68(%rsp),%r10
  0x00000000032c0232: mov    %ebx,0x40(%rsp)
  0x00000000032c0236: mov    %r10,0x48(%rsp)
  0x00000000032c023b: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [72]=Oop [80]=Oop [104]=Oop off=19488}
                                                ;*ifle
                                                ; - java.lang.AbstractStringBuilder::newCapacity@19 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c0240: int3                      ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@57 (line 181)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c0241: mov    $0xffffff65,%edx   ;*isub
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@6 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@75 (line 187)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c0246: mov    0x40(%rsp),%r11
  0x00000000032c024b: mov    %r11,0x20(%rsp)
  0x00000000032c0250: mov    %r10d,0x28(%rsp)
  0x00000000032c0255: mov    0x3c(%rsp),%r10d
  0x00000000032c025a: mov    %r10d,0x30(%rsp)
  0x00000000032c025f: mov    0x68(%rsp),%r10
  0x00000000032c0264: mov    %ebx,0x34(%rsp)
  0x00000000032c0268: mov    %r10,0x48(%rsp)
  0x00000000032c026d: xchg   %ax,%ax
  0x00000000032c026f: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [72]=Oop [80]=Oop [104]=Oop off=19540}
                                                ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c0274: int3                      ;*ifge
                                                ; - java.lang.AbstractStringBuilder::newCapacity@26 (line 154)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c0275: mov    $0xfffffff6,%edx
  0x00000000032c027a: nop
  0x00000000032c027b: callq  0x00000000031d57a0  ; OopMap{off=19552}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032c0280: int3                      ;*invokespecial append
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@68 (line 186)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c0281: mov    $0xfffffff6,%edx   ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c0286: nop
  0x00000000032c0287: callq  0x00000000031d57a0  ; OopMap{off=19564}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)
                                                ;   {runtime_call}
  0x00000000032c028c: int3                      ;*if_icmpge
                                                ; - java.io.WinNTFileSystem::normalize@25 (line 86)

  0x00000000032c028d: mov    $0xfffffff6,%edx
  0x00000000032c0292: nop
  0x00000000032c0293: callq  0x00000000031d57a0  ; OopMap{off=19576}
                                                ;*invokevirtual length
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x00000000032c0298: int3   
  0x00000000032c0299: mov    $0xfffffff6,%edx
  0x00000000032c029e: nop
  0x00000000032c029f: callq  0x00000000031d57a0  ; OopMap{off=19588}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 82)
                                                ;   {runtime_call}
  0x00000000032c02a4: int3   
  0x00000000032c02a5: jmp    0x00000000032c02f5
  0x00000000032c02a7: jmp    0x00000000032c02f5  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c02a9: jmp    0x00000000032c02f5  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02ab: jmp    0x00000000032c02f5  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c02ad: jmp    0x00000000032c02fa  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02af: jmp    0x00000000032c02f5  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c02b1: jmp    0x00000000032c02f5  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02b3: jmp    0x00000000032c02f5
  0x00000000032c02b5: jmp    0x00000000032c02fa  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c02b7: jmp    0x00000000032c02fa  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02b9: jmp    0x00000000032c02f5  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02bb: jmp    0x00000000032c02fa
  0x00000000032c02bd: jmp    0x00000000032c02f5  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c02bf: jmp    0x00000000032c02f5  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02c1: jmp    0x00000000032c02fa  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02c3: jmp    0x00000000032c02f5  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c02c5: jmp    0x00000000032c02fa  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02c7: jmp    0x00000000032c02f5  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02c9: jmp    0x00000000032c02f5  ;*invokestatic copyOf
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02cb: jmp    0x00000000032c02fa  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalize@-1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02cd: jmp    0x00000000032c02fa  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02cf: jmp    0x00000000032c02f5  ;*invokespecial normalizePrefix
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c02d1: jmp    0x00000000032c02fa  ;*aload_0
                                                ; - java.io.WinNTFileSystem::normalizePrefix@9 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@111 (line 93)

  0x00000000032c02d3: jmp    0x00000000032c02fa
  0x00000000032c02d5: jmp    0x00000000032c02f5  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02d7: jmp    0x00000000032c02f5  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02d9: jmp    0x00000000032c02fa  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02db: jmp    0x00000000032c02fa  ;*invokevirtual append
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02dd: jmp    0x00000000032c02fa  ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02df: jmp    0x00000000032c02f5  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@7 (line 649)
                                                ; - java.lang.StringBuffer::append@7 (line 381)
                                                ; - java.io.WinNTFileSystem::normalize@203 (line 152)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02e1: jmp    0x00000000032c02fa
  0x00000000032c02e3: jmp    0x00000000032c02fa  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02e5: jmp    0x00000000032c02fa  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02e7: jmp    0x00000000032c02f5  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02e9: jmp    0x00000000032c02f5  ;*invokespecial &lt;init&gt;
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuffer::&lt;init&gt;@2 (line 128)
                                                ; - java.io.WinNTFileSystem::normalize@24 (line 107)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02eb: jmp    0x00000000032c02f5  ;*synchronization entry
                                                ; - java.io.WinNTFileSystem::normalizePrefix@-1 (line 176)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02ed: jmp    0x00000000032c02fa  ;*invokevirtual charAt
                                                ; - java.io.WinNTFileSystem::normalize@73 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02ef: jmp    0x00000000032c02fa  ;*invokespecial normalize
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02f1: jmp    0x00000000032c02fa  ;*areturn
                                                ; - java.lang.StringBuffer::append@12 (line 382)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@125 (line 200)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02f3: jmp    0x00000000032c02fa
  0x00000000032c02f5: mov    %rax,%rdx
  0x00000000032c02f8: jmp    0x00000000032c02fd  ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)
                                                ; - java.io.WinNTFileSystem::normalizePrefix@13 (line 177)
                                                ; - java.io.WinNTFileSystem::normalize@38 (line 111)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02fa: mov    %rax,%rdx          ;*ifne
                                                ; - java.io.WinNTFileSystem::normalize@1 (line 103)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)

  0x00000000032c02fd: add    $0xa0,%rsp
  0x00000000032c0304: pop    %rbp
  0x00000000032c0305: jmpq   0x0000000003292260  ;*aload_1
                                                ; - java.io.WinNTFileSystem::normalize@67 (line 121)
                                                ; - java.io.WinNTFileSystem::normalize@61 (line 89)
                                                ;   {runtime_call}
  0x00000000032c030a: hlt    
  0x00000000032c030b: hlt    
  0x00000000032c030c: hlt    
  0x00000000032c030d: hlt    
  0x00000000032c030e: hlt    
  0x00000000032c030f: hlt    
  0x00000000032c0310: hlt    
  0x00000000032c0311: hlt    
  0x00000000032c0312: hlt    
  0x00000000032c0313: hlt    
  0x00000000032c0314: hlt    
  0x00000000032c0315: hlt    
  0x00000000032c0316: hlt    
  0x00000000032c0317: hlt    
  0x00000000032c0318: hlt    
  0x00000000032c0319: hlt    
  0x00000000032c031a: hlt    
  0x00000000032c031b: hlt    
  0x00000000032c031c: hlt    
  0x00000000032c031d: hlt    
  0x00000000032c031e: hlt    
  0x00000000032c031f: hlt    
[Stub Code]
  0x00000000032c0320: movabs $0x0,%rbx          ;   {no_reloc}
  0x00000000032c032a: jmpq   0x00000000032c032a  ;   {runtime_call}
  0x00000000032c032f: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032c0339: jmpq   0x00000000032c0339  ;   {runtime_call}
[Exception Handler]
  0x00000000032c033e: jmpq   0x000000000328d0e0  ;   {runtime_call}
[Deopt Handler Code]
  0x00000000032c0343: callq  0x00000000032c0348
  0x00000000032c0348: subq   $0x5,(%rsp)
  0x00000000032c034d: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032c0352: hlt    
  0x00000000032c0353: hlt    
  0x00000000032c0354: hlt    
  0x00000000032c0355: hlt    
  0x00000000032c0356: hlt    
  0x00000000032c0357: hlt    
<nmethod compile_id='4' compiler='C2' level='4' entry='0x00000000032bb620' size='57088' address='0x00000000032bb350' relocation_offset='288' insts_offset='720' stub_offset='20432' scopes_data_offset='20648' scopes_pcs_offset='36416' dependencies_offset='56000' handler_table_offset='56008' nul_chk_table_offset='57016' oops_offset='20488' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='1510' backedge_count='48460' iicount='1510' stamp='1.087'/>
<writer thread='26124'/>
<task_queued compile_id='64' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='32' count='1408' iicount='1408' throwouts='17' level='3' stamp='1.088' comment='tiered' hot_count='1408'/>
<task_queued compile_id='65' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='1152' iicount='1152' level='3' stamp='1.088' comment='tiered' hot_count='1152'/>
<task_queued compile_id='66' compile_kind='osr' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='734' backedge_count='54272' iicount='734' osr_bci='69' stamp='1.088' comment='tiered' hot_count='54272'/>
<task_queued compile_id='67' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='4864' iicount='4864' level='3' stamp='1.088' comment='tiered' hot_count='4864'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032b06d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000000032b0860: mov    0x8(%rdx),%r10d
  0x00000000032b0864: shl    $0x3,%r10
  0x00000000032b0868: cmp    %rax,%r10
  0x00000000032b086b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b0871: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b087c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b0880: mov    %eax,-0x6000(%rsp)
  0x00000000032b0887: push   %rbp
  0x00000000032b0888: sub    $0x50,%rsp
  0x00000000032b088c: mov    %rdx,%rbx
  0x00000000032b088f: movabs $0x1c397fe0,%rdx   ;   {metadata(method data for {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b0899: mov    0xdc(%rdx),%esi
  0x00000000032b089f: add    $0x8,%esi
  0x00000000032b08a2: mov    %esi,0xdc(%rdx)
  0x00000000032b08a8: movabs $0x1c34d4f0,%rdx   ;   {metadata({method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b08b2: and    $0x1ff8,%esi
  0x00000000032b08b8: cmp    $0x0,%esi
  0x00000000032b08bb: je     0x00000000032b0b58  ;*aload_0
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@0 (line 828)

  0x00000000032b08c1: mov    0x18(%rbx),%edx
  0x00000000032b08c4: shl    $0x3,%rdx          ;*getfield jar
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@1 (line 828)

  0x00000000032b08c8: cmp    $0x0,%rdx
  0x00000000032b08cc: movabs $0x1c397fe0,%rdx   ;   {metadata(method data for {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b08d6: movabs $0x108,%rsi
  0x00000000032b08e0: jne    0x00000000032b08f0
  0x00000000032b08e6: movabs $0x118,%rsi
  0x00000000032b08f0: mov    (%rdx,%rsi,1),%rdi
  0x00000000032b08f4: lea    0x1(%rdi),%rdi
  0x00000000032b08f8: mov    %rdi,(%rdx,%rsi,1)
  0x00000000032b08fc: jne    0x00000000032b0a1c  ;*ifnonnull
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@4 (line 828)

  0x00000000032b0902: movabs $0x7c003ee30,%rdx  ;   {metadata(&apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00000000032b090c: mov    0x60(%r15),%rax
  0x00000000032b0910: lea    0x10(%rax),%rdi
  0x00000000032b0914: cmp    0x70(%r15),%rdi
  0x00000000032b0918: ja     0x00000000032b0b6f
  0x00000000032b091e: mov    %rdi,0x60(%r15)
  0x00000000032b0922: mov    0xa8(%rdx),%rcx
  0x00000000032b0929: mov    %rcx,(%rax)
  0x00000000032b092c: mov    %rdx,%rcx
  0x00000000032b092f: shr    $0x3,%rcx
  0x00000000032b0933: mov    %ecx,0x8(%rax)
  0x00000000032b0936: xor    %rcx,%rcx
  0x00000000032b0939: mov    %ecx,0xc(%rax)
  0x00000000032b093c: xor    %rcx,%rcx          ;*new  ; - sun.misc.URLClassPath$JarLoader::ensureOpen@7 (line 830)

  0x00000000032b093f: mov    %rax,%rdx
  0x00000000032b0942: movabs $0x1c397fe0,%rsi   ;   {metadata(method data for {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b094c: addq   $0x1,0x128(%rsi)
  0x00000000032b0954: movabs $0x1c471fc0,%rdx   ;   {metadata(method data for {method} {0x000000001c356370} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)V&apos; in &apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00000000032b095e: mov    0xdc(%rdx),%esi
  0x00000000032b0964: add    $0x8,%esi
  0x00000000032b0967: mov    %esi,0xdc(%rdx)
  0x00000000032b096d: movabs $0x1c356368,%rdx   ;   {metadata({method} {0x000000001c356370} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)V&apos; in &apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00000000032b0977: and    $0x7ffff8,%esi
  0x00000000032b097d: cmp    $0x0,%esi
  0x00000000032b0980: je     0x00000000032b0b7c
  0x00000000032b0986: mov    %rbx,%r10
  0x00000000032b0989: shr    $0x3,%r10
  0x00000000032b098d: mov    %r10d,0xc(%rax)
  0x00000000032b0991: mov    %rax,%rdx
  0x00000000032b0994: shr    $0x9,%rdx
  0x00000000032b0998: movabs $0xef3d000,%rsi
  0x00000000032b09a2: movb   $0x0,(%rdx,%rsi,1)  ;*putfield this$0
                                                ; - sun.misc.URLClassPath$JarLoader$1::&lt;init&gt;@2 (line 831)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@12 (line 830)

  0x00000000032b09a6: mov    %rax,%rdx
  0x00000000032b09a9: movabs $0x1c471fc0,%rsi   ;   {metadata(method data for {method} {0x000000001c356370} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath$JarLoader;)V&apos; in &apos;sun/misc/URLClassPath$JarLoader$1&apos;)}
  0x00000000032b09b3: addq   $0x1,0x108(%rsi)
  0x00000000032b09bb: movabs $0x1c281c10,%rdx   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032b09c5: mov    0xdc(%rdx),%esi
  0x00000000032b09cb: add    $0x8,%esi
  0x00000000032b09ce: mov    %esi,0xdc(%rdx)
  0x00000000032b09d4: movabs $0x1c150480,%rdx   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032b09de: and    $0x7ffff8,%esi
  0x00000000032b09e4: cmp    $0x0,%esi
  0x00000000032b09e7: je     0x00000000032b0b93
  0x00000000032b09ed: movabs $0x1c397fe0,%rdx   ;   {metadata(method data for {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b09f7: addq   $0x1,0x138(%rdx)
  0x00000000032b09ff: mov    %rax,%rdx          ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@15 (line 830)

  0x00000000032b0a02: nop
  0x00000000032b0a03: nop
  0x00000000032b0a04: nop
  0x00000000032b0a05: nop
  0x00000000032b0a06: nop
  0x00000000032b0a07: callq  0x00000000031d6620  ; OopMap{off=428}
                                                ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@15 (line 830)
                                                ;   {static_call}
  0x00000000032b0a0c: movabs $0x1c397fe0,%rax   ;   {metadata(method data for {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b0a16: incl   0x148(%rax)        ;*goto
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@19 (line 866)

  0x00000000032b0a1c: add    $0x50,%rsp
  0x00000000032b0a20: pop    %rbp
  0x00000000032b0a21: test   %eax,-0x9c0927(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b0a27: retq                      ;*return
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@31 (line 868)

  0x00000000032b0a28: mov    0x2a8(%r15),%rax
  0x00000000032b0a2f: xor    %r10,%r10
  0x00000000032b0a32: mov    %r10,0x2a8(%r15)
  0x00000000032b0a39: xor    %r10,%r10
  0x00000000032b0a3c: mov    %r10,0x2b0(%r15)
  0x00000000032b0a43: mov    %rax,%rsi
  0x00000000032b0a46: movabs $0x1c397fe0,%rdi   ;   {metadata(method data for {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b0a50: movabs $0x7c0047040,%r10  ;   {metadata(&apos;java/security/PrivilegedActionException&apos;)}
  0x00000000032b0a5a: mov    %r10,0x168(%rdi)
  0x00000000032b0a61: addq   $0x1,0x170(%rdi)
  0x00000000032b0a69: mov    0x20(%rax),%eax
  0x00000000032b0a6c: shl    $0x3,%rax          ;*getfield exception
                                                ; - java.security.PrivilegedActionException::getException@1 (line 86)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@24 (line 865)

  0x00000000032b0a70: cmp    $0x0,%rax
  0x00000000032b0a74: jne    0x00000000032b0a8f
  0x00000000032b0a76: movabs $0x1c397fe0,%rdi   ;   {metadata(method data for {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b0a80: orl    $0x100,0x188(%rdi)
  0x00000000032b0a8a: jmpq   0x00000000032b0b50
  0x00000000032b0a8f: movabs $0x7c0046b30,%rbx  ;   {metadata(&apos;java/io/IOException&apos;)}
  0x00000000032b0a99: mov    0x8(%rax),%edi
  0x00000000032b0a9c: shl    $0x3,%rdi
  0x00000000032b0aa0: cmp    0x40(%rdi),%rbx
  0x00000000032b0aa4: jne    0x00000000032b0b34
  0x00000000032b0aaa: movabs $0x1c397fe0,%rdi   ;   {metadata(method data for {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b0ab4: mov    0x8(%rax),%ebx
  0x00000000032b0ab7: shl    $0x3,%rbx
  0x00000000032b0abb: cmp    0x198(%rdi),%rbx
  0x00000000032b0ac2: jne    0x00000000032b0ad1
  0x00000000032b0ac4: addq   $0x1,0x1a0(%rdi)
  0x00000000032b0acc: jmpq   0x00000000032b0b50
  0x00000000032b0ad1: cmp    0x1a8(%rdi),%rbx
  0x00000000032b0ad8: jne    0x00000000032b0ae7
  0x00000000032b0ada: addq   $0x1,0x1b0(%rdi)
  0x00000000032b0ae2: jmpq   0x00000000032b0b50
  0x00000000032b0ae7: cmpq   $0x0,0x198(%rdi)
  0x00000000032b0af2: jne    0x00000000032b0b0b
  0x00000000032b0af4: mov    %rbx,0x198(%rdi)
  0x00000000032b0afb: movq   $0x1,0x1a0(%rdi)
  0x00000000032b0b06: jmpq   0x00000000032b0b50
  0x00000000032b0b0b: cmpq   $0x0,0x1a8(%rdi)
  0x00000000032b0b16: jne    0x00000000032b0b2f
  0x00000000032b0b18: mov    %rbx,0x1a8(%rdi)
  0x00000000032b0b1f: movq   $0x1,0x1b0(%rdi)
  0x00000000032b0b2a: jmpq   0x00000000032b0b50
  0x00000000032b0b2f: jmpq   0x00000000032b0b50
  0x00000000032b0b34: movabs $0x1c397fe0,%rdi   ;   {metadata(method data for {method} {0x000000001c34d4f8} &apos;ensureOpen&apos; &apos;()V&apos; in &apos;sun/misc/URLClassPath$JarLoader&apos;)}
  0x00000000032b0b3e: subq   $0x1,0x190(%rdi)
  0x00000000032b0b46: jmpq   0x00000000032b0baa
  0x00000000032b0b4b: jmpq   0x00000000032b0b50  ;*checkcast
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@27 (line 865)

  0x00000000032b0b50: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x00000000032b0bb3
  0x00000000032b0b53: jmpq   0x00000000032b0be3
  0x00000000032b0b58: mov    %rdx,0x8(%rsp)
  0x00000000032b0b5d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b0b65: callq  0x0000000003291d60  ; OopMap{rbx=Oop off=778}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@-1 (line 828)
                                                ;   {runtime_call}
  0x00000000032b0b6a: jmpq   0x00000000032b08c1
  0x00000000032b0b6f: mov    %rdx,%rdx
  0x00000000032b0b72: callq  0x000000000328de00  ; OopMap{rbx=Oop off=791}
                                                ;*new  ; - sun.misc.URLClassPath$JarLoader::ensureOpen@7 (line 830)
                                                ;   {runtime_call}
  0x00000000032b0b77: jmpq   0x00000000032b093f
  0x00000000032b0b7c: mov    %rdx,0x8(%rsp)
  0x00000000032b0b81: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b0b89: callq  0x0000000003291d60  ; OopMap{rbx=Oop rax=Oop off=814}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$JarLoader$1::&lt;init&gt;@-1 (line 831)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@12 (line 830)
                                                ;   {runtime_call}
  0x00000000032b0b8e: jmpq   0x00000000032b0986
  0x00000000032b0b93: mov    %rdx,0x8(%rsp)
  0x00000000032b0b98: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b0ba0: callq  0x0000000003291d60  ; OopMap{rax=Oop off=837}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - sun.misc.URLClassPath$JarLoader$1::&lt;init&gt;@6 (line 831)
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@12 (line 830)
                                                ;   {runtime_call}
  0x00000000032b0ba5: jmpq   0x00000000032b09ed
  0x00000000032b0baa: mov    %rax,(%rsp)
  0x00000000032b0bae: callq  0x000000000328f880  ; OopMap{off=851}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@27 (line 865)
                                                ;   {runtime_call}
  0x00000000032b0bb3: callq  0x000000000328d680  ; OopMap{rax=Oop off=856}
                                                ;*athrow
                                                ; - sun.misc.URLClassPath$JarLoader::ensureOpen@30 (line 865)
                                                ;   {runtime_call}
  0x00000000032b0bb8: nop
  0x00000000032b0bb9: nop
  0x00000000032b0bba: mov    0x2a8(%r15),%rax
  0x00000000032b0bc1: movabs $0x0,%r10
  0x00000000032b0bcb: mov    %r10,0x2a8(%r15)
  0x00000000032b0bd2: movabs $0x0,%r10
  0x00000000032b0bdc: mov    %r10,0x2b0(%r15)
  0x00000000032b0be3: add    $0x50,%rsp
  0x00000000032b0be7: pop    %rbp
  0x00000000032b0be8: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032b0bed: hlt    
  0x00000000032b0bee: hlt    
  0x00000000032b0bef: hlt    
  0x00000000032b0bf0: hlt    
  0x00000000032b0bf1: hlt    
  0x00000000032b0bf2: hlt    
  0x00000000032b0bf3: hlt    
  0x00000000032b0bf4: hlt    
  0x00000000032b0bf5: hlt    
  0x00000000032b0bf6: hlt    
  0x00000000032b0bf7: hlt    
  0x00000000032b0bf8: hlt    
  0x00000000032b0bf9: hlt    
  0x00000000032b0bfa: hlt    
  0x00000000032b0bfb: hlt    
  0x00000000032b0bfc: hlt    
  0x00000000032b0bfd: hlt    
  0x00000000032b0bfe: hlt    
  0x00000000032b0bff: hlt    
[Stub Code]
  0x00000000032b0c00: nop                       ;   {no_reloc}
  0x00000000032b0c01: nop
  0x00000000032b0c02: nop
  0x00000000032b0c03: nop
  0x00000000032b0c04: nop
  0x00000000032b0c05: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b0c0f: jmpq   0x00000000032b0c0f  ;   {runtime_call}
[Exception Handler]
  0x00000000032b0c14: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032b0c19: mov    %rsp,-0x28(%rsp)
  0x00000000032b0c1e: sub    $0x80,%rsp
  0x00000000032b0c25: mov    %rax,0x78(%rsp)
  0x00000000032b0c2a: mov    %rcx,0x70(%rsp)
  0x00000000032b0c2f: mov    %rdx,0x68(%rsp)
  0x00000000032b0c34: mov    %rbx,0x60(%rsp)
  0x00000000032b0c39: mov    %rbp,0x50(%rsp)
  0x00000000032b0c3e: mov    %rsi,0x48(%rsp)
  0x00000000032b0c43: mov    %rdi,0x40(%rsp)
  0x00000000032b0c48: mov    %r8,0x38(%rsp)
  0x00000000032b0c4d: mov    %r9,0x30(%rsp)
  0x00000000032b0c52: mov    %r10,0x28(%rsp)
  0x00000000032b0c57: mov    %r11,0x20(%rsp)
  0x00000000032b0c5c: mov    %r12,0x18(%rsp)
  0x00000000032b0c61: mov    %r13,0x10(%rsp)
  0x00000000032b0c66: mov    %r14,0x8(%rsp)
  0x00000000032b0c6b: mov    %r15,(%rsp)
  0x00000000032b0c6f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032b0c79: movabs $0x32b0c19,%rdx    ;   {internal_word}
  0x00000000032b0c83: mov    %rsp,%r8
  0x00000000032b0c86: and    $0xfffffffffffffff0,%rsp
  0x00000000032b0c8a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032b0c8f: hlt    
[Deopt Handler Code]
  0x00000000032b0c90: movabs $0x32b0c90,%r10    ;   {section_word}
  0x00000000032b0c9a: push   %r10
  0x00000000032b0c9c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b0ca1: hlt    
  0x00000000032b0ca2: hlt    
  0x00000000032b0ca3: hlt    
  0x00000000032b0ca4: hlt    
  0x00000000032b0ca5: hlt    
  0x00000000032b0ca6: hlt    
  0x00000000032b0ca7: hlt    
<nmethod compile_id='64' compiler='C1' level='3' entry='0x00000000032b0860' size='2064' address='0x00000000032b06d0' relocation_offset='288' insts_offset='400' stub_offset='1328' scopes_data_offset='1536' scopes_pcs_offset='1688' dependencies_offset='1992' handler_table_offset='2000' nul_chk_table_offset='2048' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='32' count='1417' iicount='1417' throwouts='17' stamp='1.094'/>
<writer thread='26124'/>
Decoding compiled method 0x00000000032b0310:
Code:
[Entry Point]
  # {method} {0x000000001c169628} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;
  #           [sp+0x70]  (sp of caller)
  0x00000000032b0480: mov    0x8(%rdx),%r10d
  0x00000000032b0484: shl    $0x3,%r10
  0x00000000032b0488: cmp    %r10,%rax
  0x00000000032b048b: je     0x00000000032b0498
  0x00000000032b0491: jmpq   0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b0496: xchg   %ax,%ax
[Verified Entry Point]
  0x00000000032b0498: mov    %eax,-0x6000(%rsp)
  0x00000000032b049f: push   %rbp
  0x00000000032b04a0: mov    %rsp,%rbp
  0x00000000032b04a3: sub    $0x60,%rsp
  0x00000000032b04a7: movabs $0x76b780c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00000000032b04b1: mov    %r14,0x50(%rsp)
  0x00000000032b04b6: lea    0x50(%rsp),%r14
  0x00000000032b04bb: mov    %r14,%rdx          ; OopMap{[80]=Oop off=62}
  0x00000000032b04be: movabs $0x32b04be,%r10    ;   {section_word}
  0x00000000032b04c8: mov    %r10,0x1e0(%r15)
  0x00000000032b04cf: mov    %rsp,0x1d8(%r15)
  0x00000000032b04d6: cmpb   $0x0,0x52c3b2a4(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000032b04dd: je     0x00000000032b051d
  0x00000000032b04e3: push   %rdx
  0x00000000032b04e4: movabs $0x1c169620,%rdx   ;   {metadata({method} {0x000000001c169628} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;)}
  0x00000000032b04ee: mov    %r15,%rcx
  0x00000000032b04f1: sub    $0x20,%rsp
  0x00000000032b04f5: test   $0xf,%esp
  0x00000000032b04fb: je     0x00000000032b0513
  0x00000000032b0501: sub    $0x8,%rsp
  0x00000000032b0505: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032b050a: add    $0x8,%rsp
  0x00000000032b050e: jmpq   0x00000000032b0518
  0x00000000032b0513: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032b0518: add    $0x20,%rsp
  0x00000000032b051c: pop    %rdx
  0x00000000032b051d: lea    0x1f8(%r15),%rcx
  0x00000000032b0524: movl   $0x4,0x270(%r15)
  0x00000000032b052f: callq  0x00000000556c0980  ;   {runtime_call}
  0x00000000032b0534: vzeroupper 
  0x00000000032b0537: movl   $0x5,0x270(%r15)
  0x00000000032b0542: mov    %r15d,%ecx
  0x00000000032b0545: shr    $0x4,%ecx
  0x00000000032b0548: and    $0xffc,%ecx
  0x00000000032b054e: movabs $0x2900000,%r10    ;   {external_word}
  0x00000000032b0558: mov    %ecx,(%r10,%rcx,1)
  0x00000000032b055c: cmpl   $0x0,0x52c3bdea(%rip)        # 0x0000000055eec350
                                                ;   {external_word}
  0x00000000032b0566: jne    0x00000000032b057a
  0x00000000032b056c: cmpl   $0x0,0x30(%r15)
  0x00000000032b0574: je     0x00000000032b059b
  0x00000000032b057a: mov    %rax,-0x8(%rbp)
  0x00000000032b057e: mov    %r15,%rcx
  0x00000000032b0581: mov    %rsp,%r12
  0x00000000032b0584: sub    $0x20,%rsp
  0x00000000032b0588: and    $0xfffffffffffffff0,%rsp
  0x00000000032b058c: callq  0x00000000559236e0  ;   {runtime_call}
  0x00000000032b0591: mov    %r12,%rsp
  0x00000000032b0594: xor    %r12,%r12
  0x00000000032b0597: mov    -0x8(%rbp),%rax
  0x00000000032b059b: movl   $0x8,0x270(%r15)
  0x00000000032b05a6: cmpl   $0x1,0x29c(%r15)
  0x00000000032b05b1: je     0x00000000032b0649
  0x00000000032b05b7: cmpb   $0x0,0x52c3b1c3(%rip)        # 0x0000000055eeb781
                                                ;   {external_word}
  0x00000000032b05be: je     0x00000000032b0604
  0x00000000032b05c4: mov    %rax,-0x8(%rbp)
  0x00000000032b05c8: movabs $0x1c169620,%rdx   ;   {metadata({method} {0x000000001c169628} &apos;nanoTime&apos; &apos;()J&apos; in &apos;java/lang/System&apos;)}
  0x00000000032b05d2: mov    %r15,%rcx
  0x00000000032b05d5: sub    $0x20,%rsp
  0x00000000032b05d9: test   $0xf,%esp
  0x00000000032b05df: je     0x00000000032b05f7
  0x00000000032b05e5: sub    $0x8,%rsp
  0x00000000032b05e9: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032b05ee: add    $0x8,%rsp
  0x00000000032b05f2: jmpq   0x00000000032b05fc
  0x00000000032b05f7: callq  0x000000005590c580  ;   {runtime_call}
  0x00000000032b05fc: add    $0x20,%rsp
  0x00000000032b0600: mov    -0x8(%rbp),%rax
  0x00000000032b0604: movabs $0x0,%r10
  0x00000000032b060e: mov    %r10,0x1d8(%r15)
  0x00000000032b0615: movabs $0x0,%r10
  0x00000000032b061f: mov    %r10,0x1e0(%r15)
  0x00000000032b0626: mov    0x38(%r15),%rcx
  0x00000000032b062a: movl   $0x0,0x100(%rcx)
  0x00000000032b0634: leaveq 
  0x00000000032b0635: cmpq   $0x0,0x8(%r15)
  0x00000000032b063d: jne    0x00000000032b0644
  0x00000000032b0643: retq   
  0x00000000032b0644: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00000000032b0649: mov    %rax,-0x8(%rbp)
  0x00000000032b064d: mov    %rsp,%r12
  0x00000000032b0650: sub    $0x20,%rsp
  0x00000000032b0654: and    $0xfffffffffffffff0,%rsp
  0x00000000032b0658: callq  0x000000005590c5a0  ;   {runtime_call}
  0x00000000032b065d: mov    %r12,%rsp
  0x00000000032b0660: xor    %r12,%r12
  0x00000000032b0663: mov    -0x8(%rbp),%rax
  0x00000000032b0667: jmpq   0x00000000032b05b7
  0x00000000032b066c: hlt    
  0x00000000032b066d: hlt    
  0x00000000032b066e: hlt    
  0x00000000032b066f: hlt    
<nmethod compile_id='68' compile_kind='c2n' level='0' entry='0x00000000032b0480' size='864' address='0x00000000032b0310' relocation_offset='288' consts_offset='864' insts_offset='368' method='java/lang/System nanoTime ()J' bytes='0' count='640' iicount='640' stamp='1.097'/>
<task_queued compile_id='69' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='1152' iicount='1152' level='3' stamp='1.097' comment='tiered' hot_count='1152'/>
<task_queued compile_id='70' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='1152' iicount='1152' level='3' stamp='1.097' comment='tiered' hot_count='1152'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032b7d50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000032b7ec0: mov    %eax,-0x6000(%rsp)
  0x00000000032b7ec7: push   %rbp
  0x00000000032b7ec8: sub    $0x30,%rsp
  0x00000000032b7ecc: movabs $0x1c33d8d8,%rsi   ;   {metadata(method data for {method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032b7ed6: mov    0xdc(%rsi),%edi
  0x00000000032b7edc: add    $0x8,%edi
  0x00000000032b7edf: mov    %edi,0xdc(%rsi)
  0x00000000032b7ee5: movabs $0x1c2362b8,%rsi   ;   {metadata({method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032b7eef: and    $0x1ff8,%edi
  0x00000000032b7ef5: cmp    $0x0,%edi
  0x00000000032b7ef8: je     0x00000000032b800c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 338)

  0x00000000032b7efe: cmp    $0x0,%rdx
  0x00000000032b7f02: movabs $0x1c33d8d8,%rsi   ;   {metadata(method data for {method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032b7f0c: movabs $0x108,%rdi
  0x00000000032b7f16: jne    0x00000000032b7f26
  0x00000000032b7f1c: movabs $0x118,%rdi
  0x00000000032b7f26: mov    (%rsi,%rdi,1),%rbx
  0x00000000032b7f2a: lea    0x1(%rbx),%rbx
  0x00000000032b7f2e: mov    %rbx,(%rsi,%rdi,1)
  0x00000000032b7f32: jne    0x00000000032b7f52  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)

  0x00000000032b7f38: movabs $0x1c33d8d8,%rdx   ;   {metadata(method data for {method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032b7f42: incl   0x128(%rdx)
  0x00000000032b7f48: mov    $0x0,%esi
  0x00000000032b7f4d: jmpq   0x00000000032b7ffd  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)

  0x00000000032b7f52: cmp    (%rdx),%rax        ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ; implicit exception: dispatches to 0x00000000032b8023
  0x00000000032b7f55: mov    %rdx,%rsi
  0x00000000032b7f58: movabs $0x1c33d8d8,%rdi   ;   {metadata(method data for {method} {0x000000001c2362c0} &apos;hash&apos; &apos;(Ljava/lang/Object;)I&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032b7f62: mov    0x8(%rsi),%esi
  0x00000000032b7f65: shl    $0x3,%rsi
  0x00000000032b7f69: cmp    0x148(%rdi),%rsi
  0x00000000032b7f70: jne    0x00000000032b7f7f
  0x00000000032b7f72: addq   $0x1,0x150(%rdi)
  0x00000000032b7f7a: jmpq   0x00000000032b7fe5
  0x00000000032b7f7f: cmp    0x158(%rdi),%rsi
  0x00000000032b7f86: jne    0x00000000032b7f95
  0x00000000032b7f88: addq   $0x1,0x160(%rdi)
  0x00000000032b7f90: jmpq   0x00000000032b7fe5
  0x00000000032b7f95: cmpq   $0x0,0x148(%rdi)
  0x00000000032b7fa0: jne    0x00000000032b7fb9
  0x00000000032b7fa2: mov    %rsi,0x148(%rdi)
  0x00000000032b7fa9: movq   $0x1,0x150(%rdi)
  0x00000000032b7fb4: jmpq   0x00000000032b7fe5
  0x00000000032b7fb9: cmpq   $0x0,0x158(%rdi)
  0x00000000032b7fc4: jne    0x00000000032b7fdd
  0x00000000032b7fc6: mov    %rsi,0x158(%rdi)
  0x00000000032b7fcd: movq   $0x1,0x160(%rdi)
  0x00000000032b7fd8: jmpq   0x00000000032b7fe5
  0x00000000032b7fdd: addq   $0x1,0x140(%rdi)
  0x00000000032b7fe5: movabs $0xffffffffffffffff,%rax
  0x00000000032b7fef: callq  0x00000000031d63e0  ; OopMap{off=308}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {virtual_call}
  0x00000000032b7ff4: mov    %rax,%rsi
  0x00000000032b7ff7: shr    $0x10,%esi
  0x00000000032b7ffa: xor    %rax,%rsi
  0x00000000032b7ffd: mov    %rsi,%rax
  0x00000000032b8000: add    $0x30,%rsp
  0x00000000032b8004: pop    %rbp
  0x00000000032b8005: test   %eax,-0x9c7f0b(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b800b: retq   
  0x00000000032b800c: mov    %rsi,0x8(%rsp)
  0x00000000032b8011: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b8019: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=350}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ;   {runtime_call}
  0x00000000032b801e: jmpq   0x00000000032b7efe
  0x00000000032b8023: callq  0x000000000328d680  ; OopMap{rdx=Oop off=360}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {runtime_call}
  0x00000000032b8028: nop
  0x00000000032b8029: nop
  0x00000000032b802a: mov    0x2a8(%r15),%rax
  0x00000000032b8031: movabs $0x0,%r10
  0x00000000032b803b: mov    %r10,0x2a8(%r15)
  0x00000000032b8042: movabs $0x0,%r10
  0x00000000032b804c: mov    %r10,0x2b0(%r15)
  0x00000000032b8053: add    $0x30,%rsp
  0x00000000032b8057: pop    %rbp
  0x00000000032b8058: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032b805d: hlt    
  0x00000000032b805e: hlt    
  0x00000000032b805f: hlt    
[Stub Code]
  0x00000000032b8060: nop                       ;   {no_reloc}
  0x00000000032b8061: nop
  0x00000000032b8062: nop
  0x00000000032b8063: nop
  0x00000000032b8064: nop
  0x00000000032b8065: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b806f: jmpq   0x00000000032b806f  ;   {runtime_call}
[Exception Handler]
  0x00000000032b8074: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032b8079: mov    %rsp,-0x28(%rsp)
  0x00000000032b807e: sub    $0x80,%rsp
  0x00000000032b8085: mov    %rax,0x78(%rsp)
  0x00000000032b808a: mov    %rcx,0x70(%rsp)
  0x00000000032b808f: mov    %rdx,0x68(%rsp)
  0x00000000032b8094: mov    %rbx,0x60(%rsp)
  0x00000000032b8099: mov    %rbp,0x50(%rsp)
  0x00000000032b809e: mov    %rsi,0x48(%rsp)
  0x00000000032b80a3: mov    %rdi,0x40(%rsp)
  0x00000000032b80a8: mov    %r8,0x38(%rsp)
  0x00000000032b80ad: mov    %r9,0x30(%rsp)
  0x00000000032b80b2: mov    %r10,0x28(%rsp)
  0x00000000032b80b7: mov    %r11,0x20(%rsp)
  0x00000000032b80bc: mov    %r12,0x18(%rsp)
  0x00000000032b80c1: mov    %r13,0x10(%rsp)
  0x00000000032b80c6: mov    %r14,0x8(%rsp)
  0x00000000032b80cb: mov    %r15,(%rsp)
  0x00000000032b80cf: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032b80d9: movabs $0x32b8079,%rdx    ;   {internal_word}
  0x00000000032b80e3: mov    %rsp,%r8
  0x00000000032b80e6: and    $0xfffffffffffffff0,%rsp
  0x00000000032b80ea: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032b80ef: hlt    
[Deopt Handler Code]
  0x00000000032b80f0: movabs $0x32b80f0,%r10    ;   {section_word}
  0x00000000032b80fa: push   %r10
  0x00000000032b80fc: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b8101: hlt    
  0x00000000032b8102: hlt    
  0x00000000032b8103: hlt    
  0x00000000032b8104: hlt    
  0x00000000032b8105: hlt    
  0x00000000032b8106: hlt    
  0x00000000032b8107: hlt    
<nmethod compile_id='67' compiler='C1' level='3' entry='0x00000000032b7ec0' size='1176' address='0x00000000032b7d50' relocation_offset='288' insts_offset='368' stub_offset='784' scopes_data_offset='960' scopes_pcs_offset='1008' dependencies_offset='1152' nul_chk_table_offset='1160' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='4865' iicount='4865' stamp='1.099'/>
<writer thread='25548'/>
Decoding compiled method 0x00000000032b7050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c1557a0} &apos;indexOf&apos; &apos;([CII[CIII)I&apos; in &apos;java/lang/String&apos;
  0x00000000032b71a0: int3   
  0x00000000032b71a1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b71ac: data16 data16 xchg %ax,%ax
  0x00000000032b71b0: mov    %eax,-0x6000(%rsp)
  0x00000000032b71b7: push   %rbp
  0x00000000032b71b8: sub    $0x70,%rsp
  0x00000000032b71bc: mov    0x18(%rdx),%r13d
  0x00000000032b71c0: mov    0x20(%rdx),%r14d
  0x00000000032b71c4: mov    0x60(%rdx),%rbp
  0x00000000032b71c8: mov    0x48(%rdx),%r10
  0x00000000032b71cc: mov    %r10,0x20(%rsp)
  0x00000000032b71d1: mov    0x28(%rdx),%ebx
  0x00000000032b71d4: mov    0x58(%rdx),%r11d
  0x00000000032b71d8: mov    %r11d,0x30(%rsp)
  0x00000000032b71dd: mov    0x40(%rdx),%r10d
  0x00000000032b71e1: mov    %r10d,0x38(%rsp)
  0x00000000032b71e6: mov    0x38(%rdx),%r11d
  0x00000000032b71ea: mov    %r11d,0x3c(%rsp)
  0x00000000032b71ef: mov    %rdx,%rcx
  0x00000000032b71f2: movabs $0x5590be80,%r10
  0x00000000032b71fc: callq  *%r10
  0x00000000032b71ff: test   %rbp,%rbp
  0x00000000032b7202: je     0x00000000032b740a
  0x00000000032b7208: mov    0x8(%rbp),%r10d
  0x00000000032b720c: cmp    $0xf8000041,%r10d  ;   {metadata({type array char})}
  0x00000000032b7213: jne    0x00000000032b75bd
  0x00000000032b7219: mov    %rbp,%r11
  0x00000000032b721c: mov    0x20(%rsp),%r8
  0x00000000032b7221: test   %r8,%r8
  0x00000000032b7224: je     0x00000000032b7412
  0x00000000032b722a: mov    0x8(%r8),%r9d
  0x00000000032b722e: cmp    $0xf8000041,%r9d   ;   {metadata({type array char})}
  0x00000000032b7235: jne    0x00000000032b75c2  ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000000032b723b: mov    %r8,%rdx
  0x00000000032b723e: add    $0xc,%rdx          ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x00000000032b7242: movslq 0x38(%rsp),%rsi
  0x00000000032b7247: mov    0x38(%rsp),%edi
  0x00000000032b724b: inc    %edi               ;*iadd
                                                ; - java.lang.String::indexOf@116 (line 1779)

  0x00000000032b724d: jmpq   0x00000000032b7310  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=178}
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)

  0x00000000032b7252: test   %eax,-0x9c7258(%rip)        # 0x00000000028f0000
                                                ;*goto
                                                ; - java.lang.String::indexOf@88 (line 1772)
                                                ;   {poll}
  0x00000000032b7258: mov    %eax,%ecx
  0x00000000032b725a: mov    %ecx,%eax
  0x00000000032b725c: inc    %eax               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000000032b725e: cmp    %r14d,%eax
  0x00000000032b7261: jg     0x00000000032b727a  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x00000000032b7263: cmp    %r9d,%eax
  0x00000000032b7266: jae    0x00000000032b741f  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00000000032b726c: movslq %ecx,%r10
  0x00000000032b726f: movzwl 0x12(%r11,%r10,2),%r13d
  0x00000000032b7275: cmp    %ebx,%r13d
  0x00000000032b7278: jne    0x00000000032b7252  ;*iload
                                                ; - java.lang.String::indexOf@91 (line 1776)

  0x00000000032b727a: mov    %eax,%r13d
  0x00000000032b727d: inc    %r13d              ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x00000000032b7280: movslq %eax,%r9           ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00000000032b7283: cmp    %r14d,%eax
  0x00000000032b7286: jg     0x00000000032b72ea  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x00000000032b7288: vmovd  %edi,%xmm1
  0x00000000032b728c: mov    %eax,%ecx
  0x00000000032b728e: add    0x3c(%rsp),%ecx    ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x00000000032b7292: mov    %ecx,0x54(%rsp)
  0x00000000032b7296: cmp    %ecx,%r13d
  0x00000000032b7299: jge    0x00000000032b72df  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x00000000032b729b: mov    0xc(%r11),%ecx     ; implicit exception: dispatches to 0x00000000032b76a9
  0x00000000032b729f: cmp    %ecx,%r13d
  0x00000000032b72a2: jae    0x00000000032b74d5  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x00000000032b72a8: test   %r8,%r8
  0x00000000032b72ab: je     0x00000000032b7539  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x00000000032b72b1: vmovq  %r8,%xmm2
  0x00000000032b72b6: movzwl 0x12(%r11,%r9,2),%r10d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x00000000032b72bc: vmovd  %r10d,%xmm0
  0x00000000032b72c1: mov    (%rdx),%r10d
  0x00000000032b72c4: cmp    %r10d,%edi
  0x00000000032b72c7: jae    0x00000000032b7549
  0x00000000032b72cd: movzwl 0x12(%r8,%rsi,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x00000000032b72d3: vmovd  %xmm0,%ecx
  0x00000000032b72d7: cmp    %ebp,%ecx
  0x00000000032b72d9: je     0x00000000032b7619  ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x00000000032b72df: cmp    0x54(%rsp),%r13d
  0x00000000032b72e4: je     0x00000000032b73be  ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=330}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x00000000032b72ea: test   %eax,-0x9c72f0(%rip)        # 0x00000000028f0000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x00000000032b72f0: cmp    %r14d,%r13d
  0x00000000032b72f3: jg     0x00000000032b73fc  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x00000000032b72f9: mov    0xc(%r11),%r10d    ; implicit exception: dispatches to 0x00000000032b7699
  0x00000000032b72fd: cmp    %r10d,%r13d
  0x00000000032b7300: jae    0x00000000032b7479  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00000000032b7306: movzwl 0x12(%r11,%r9,2),%ecx
  0x00000000032b730c: cmp    %ebx,%ecx
  0x00000000032b730e: je     0x00000000032b7344
  0x00000000032b7310: mov    %r13d,%ecx
  0x00000000032b7313: inc    %ecx               ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000000032b7315: cmp    %r14d,%ecx
  0x00000000032b7318: jg     0x00000000032b7403  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@76 (line 1772)

  0x00000000032b731e: mov    0xc(%r11),%r9d     ; implicit exception: dispatches to 0x00000000032b7689
  0x00000000032b7322: cmp    %r9d,%ecx
  0x00000000032b7325: jae    0x00000000032b7421  ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)

  0x00000000032b732b: movslq %r13d,%r10
  0x00000000032b732e: movzwl 0x12(%r11,%r10,2),%r10d
  0x00000000032b7334: cmp    %ebx,%r10d
  0x00000000032b7337: jne    0x00000000032b725a  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@85 (line 1772)

  0x00000000032b733d: mov    %ecx,%eax
  0x00000000032b733f: jmpq   0x00000000032b727a
  0x00000000032b7344: vmovd  %edi,%xmm1         ;*iload
                                                ; - java.lang.String::indexOf@91 (line 1776)

  0x00000000032b7348: movslq %r13d,%rdi         ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00000000032b734b: mov    %r13d,%ecx
  0x00000000032b734e: inc    %ecx               ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x00000000032b7350: mov    %ecx,%eax
  0x00000000032b7352: cmp    %r14d,%r13d
  0x00000000032b7355: jg     0x00000000032b73ce  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@95 (line 1776)

  0x00000000032b7357: mov    %r13d,%ecx
  0x00000000032b735a: add    0x3c(%rsp),%ecx    ;*iadd
                                                ; - java.lang.String::indexOf@101 (line 1777)

  0x00000000032b735e: mov    %ecx,0x54(%rsp)
  0x00000000032b7362: mov    %eax,%ecx
  0x00000000032b7364: cmp    0x54(%rsp),%ecx
  0x00000000032b7368: jge    0x00000000032b73b3  ;*if_icmpge
                                                ; - java.lang.String::indexOf@123 (line 1779)

  0x00000000032b736a: cmp    %r10d,%ecx
  0x00000000032b736d: jae    0x00000000032b7669  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x00000000032b7373: test   %r8,%r8
  0x00000000032b7376: je     0x00000000032b7539  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x00000000032b737c: vmovq  %r8,%xmm2
  0x00000000032b7381: movzwl 0x12(%r11,%rdi,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)

  0x00000000032b7387: vmovd  %r8d,%xmm0
  0x00000000032b738c: mov    (%rdx),%r9d
  0x00000000032b738f: vmovd  %xmm1,%ecx
  0x00000000032b7393: cmp    %r9d,%ecx
  0x00000000032b7396: jae    0x00000000032b7674
  0x00000000032b739c: vmovq  %xmm2,%r8
  0x00000000032b73a1: movzwl 0x12(%r8,%rsi,2),%ebp  ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x00000000032b73a7: vmovd  %xmm0,%ecx
  0x00000000032b73ab: cmp    %ebp,%ecx
  0x00000000032b73ad: je     0x00000000032b767f  ;*iload
                                                ; - java.lang.String::indexOf@146 (line 1782)

  0x00000000032b73b3: mov    %eax,%ecx
  0x00000000032b73b5: cmp    0x54(%rsp),%ecx
  0x00000000032b73b9: jne    0x00000000032b73ce  ;*if_icmpne
                                                ; - java.lang.String::indexOf@150 (line 1782)

  0x00000000032b73bb: mov    %r13d,%eax
  0x00000000032b73be: sub    0x30(%rsp),%eax    ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000000032b73c2: add    $0x70,%rsp
  0x00000000032b73c6: pop    %rbp
  0x00000000032b73c7: test   %eax,-0x9c73cd(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032b73cd: retq                      ; OopMap{r11=Oop r8=Oop rdx=Derived_oop_r8 off=558}
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)

  0x00000000032b73ce: test   %eax,-0x9c73d4(%rip)        # 0x00000000028f0000
                                                ;*goto
                                                ; - java.lang.String::indexOf@161 (line 1769)
                                                ;   {poll}
  0x00000000032b73d4: mov    %eax,%r13d
  0x00000000032b73d7: cmp    %r14d,%eax
  0x00000000032b73da: jg     0x00000000032b73fc  ;*if_icmpgt
                                                ; - java.lang.String::indexOf@57 (line 1769)

  0x00000000032b73dc: cmp    %r10d,%eax
  0x00000000032b73df: jae    0x00000000032b7479  ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00000000032b73e5: movzwl 0x12(%r11,%rdi,2),%ecx
  0x00000000032b73eb: cmp    %ebx,%ecx
  0x00000000032b73ed: je     0x00000000032b7348  ;*if_icmpeq
                                                ; - java.lang.String::indexOf@66 (line 1771)

  0x00000000032b73f3: vmovd  %xmm1,%edi
  0x00000000032b73f7: jmpq   0x00000000032b7310
  0x00000000032b73fc: mov    $0xffffffff,%eax
  0x00000000032b7401: jmp    0x00000000032b73c2
  0x00000000032b7403: mov    %ecx,%eax
  0x00000000032b7405: jmpq   0x00000000032b727a
  0x00000000032b740a: xor    %r11d,%r11d
  0x00000000032b740d: jmpq   0x00000000032b721c
  0x00000000032b7412: mov    $0xc,%edx
  0x00000000032b7417: xor    %r8d,%r8d
  0x00000000032b741a: jmpq   0x00000000032b7242
  0x00000000032b741f: mov    %eax,%ecx
  0x00000000032b7421: mov    $0xffffffe4,%edx
  0x00000000032b7426: mov    %rax,-0x8(%rsp)
  0x00000000032b742b: mov    0x30(%rsp),%eax
  0x00000000032b742f: mov    %eax,0x20(%rsp)
  0x00000000032b7433: mov    -0x8(%rsp),%rax
  0x00000000032b7438: mov    %r8,0x28(%rsp)
  0x00000000032b743d: mov    %rax,-0x8(%rsp)
  0x00000000032b7442: mov    0x38(%rsp),%eax
  0x00000000032b7446: mov    %eax,0x24(%rsp)
  0x00000000032b744a: mov    -0x8(%rsp),%rax
  0x00000000032b744f: mov    %rax,-0x8(%rsp)
  0x00000000032b7454: mov    0x3c(%rsp),%eax
  0x00000000032b7458: mov    %eax,0x30(%rsp)
  0x00000000032b745c: mov    -0x8(%rsp),%rax
  0x00000000032b7461: mov    %ebx,0x34(%rsp)
  0x00000000032b7465: mov    %r14d,0x38(%rsp)
  0x00000000032b746a: mov    %r11,0x40(%rsp)
  0x00000000032b746f: mov    %ecx,0x48(%rsp)
  0x00000000032b7473: callq  0x00000000031d57a0  ; OopMap{[40]=Oop [64]=Oop off=728}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x00000000032b7478: int3   
  0x00000000032b7479: mov    $0xffffffe4,%edx
  0x00000000032b747e: mov    %rax,-0x8(%rsp)
  0x00000000032b7483: mov    0x30(%rsp),%eax
  0x00000000032b7487: mov    %eax,0x20(%rsp)
  0x00000000032b748b: mov    -0x8(%rsp),%rax
  0x00000000032b7490: mov    %r8,0x28(%rsp)
  0x00000000032b7495: mov    %rax,-0x8(%rsp)
  0x00000000032b749a: mov    0x38(%rsp),%eax
  0x00000000032b749e: mov    %eax,0x24(%rsp)
  0x00000000032b74a2: mov    -0x8(%rsp),%rax
  0x00000000032b74a7: mov    %rax,-0x8(%rsp)
  0x00000000032b74ac: mov    0x3c(%rsp),%eax
  0x00000000032b74b0: mov    %eax,0x30(%rsp)
  0x00000000032b74b4: mov    -0x8(%rsp),%rax
  0x00000000032b74b9: mov    %ebx,0x34(%rsp)
  0x00000000032b74bd: mov    %r14d,0x38(%rsp)
  0x00000000032b74c2: mov    %r11,0x40(%rsp)
  0x00000000032b74c7: mov    %r13d,0x48(%rsp)
  0x00000000032b74cc: data16 xchg %ax,%ax
  0x00000000032b74cf: callq  0x00000000031d57a0  ; OopMap{[40]=Oop [64]=Oop off=820}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x00000000032b74d4: int3                      ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)

  0x00000000032b74d5: mov    %eax,%ebp
  0x00000000032b74d7: mov    $0xffffffe4,%edx
  0x00000000032b74dc: mov    %rax,-0x8(%rsp)
  0x00000000032b74e1: mov    0x30(%rsp),%eax
  0x00000000032b74e5: mov    %eax,0x28(%rsp)
  0x00000000032b74e9: mov    -0x8(%rsp),%rax
  0x00000000032b74ee: mov    %r8,0x30(%rsp)
  0x00000000032b74f3: mov    %rax,-0x8(%rsp)
  0x00000000032b74f8: mov    0x38(%rsp),%eax
  0x00000000032b74fc: mov    %eax,0x2c(%rsp)
  0x00000000032b7500: mov    -0x8(%rsp),%rax
  0x00000000032b7505: mov    %rax,-0x8(%rsp)
  0x00000000032b750a: mov    0x3c(%rsp),%eax
  0x00000000032b750e: mov    %eax,0x38(%rsp)
  0x00000000032b7512: mov    -0x8(%rsp),%rax
  0x00000000032b7517: mov    %ebx,0x3c(%rsp)
  0x00000000032b751b: mov    %r14d,0x40(%rsp)
  0x00000000032b7520: mov    %r11,0x48(%rsp)
  0x00000000032b7525: mov    %r13d,0x50(%rsp)
  0x00000000032b752a: vmovss %xmm1,0x58(%rsp)
  0x00000000032b7530: data16 xchg %ax,%ax
  0x00000000032b7533: callq  0x00000000031d57a0  ; OopMap{[48]=Oop [72]=Oop off=920}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x00000000032b7538: int3   
  0x00000000032b7539: mov    $0xfffffff6,%edx
  0x00000000032b753e: vmovd  %xmm1,%ebp
  0x00000000032b7542: nop
  0x00000000032b7543: callq  0x00000000031d57a0  ; OopMap{off=936}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x00000000032b7548: int3   
  0x00000000032b7549: mov    %eax,%ebp
  0x00000000032b754b: mov    $0xffffffe4,%edx
  0x00000000032b7550: mov    %r11,0x20(%rsp)
  0x00000000032b7555: mov    %rax,-0x8(%rsp)
  0x00000000032b755a: mov    0x30(%rsp),%eax
  0x00000000032b755e: mov    %eax,0x28(%rsp)
  0x00000000032b7562: mov    -0x8(%rsp),%rax
  0x00000000032b7567: mov    %rax,-0x8(%rsp)
  0x00000000032b756c: mov    0x38(%rsp),%eax
  0x00000000032b7570: mov    %eax,0x2c(%rsp)
  0x00000000032b7574: mov    -0x8(%rsp),%rax
  0x00000000032b7579: mov    %rax,-0x8(%rsp)
  0x00000000032b757e: mov    0x3c(%rsp),%eax
  0x00000000032b7582: mov    %eax,0x38(%rsp)
  0x00000000032b7586: mov    -0x8(%rsp),%rax
  0x00000000032b758b: mov    %ebx,0x3c(%rsp)
  0x00000000032b758f: mov    %r14d,0x40(%rsp)
  0x00000000032b7594: mov    %r13d,0x44(%rsp)
  0x00000000032b7599: vmovsd %xmm2,0x48(%rsp)
  0x00000000032b759f: mov    0x54(%rsp),%r10d
  0x00000000032b75a4: mov    %r10d,0x50(%rsp)
  0x00000000032b75a9: vmovss %xmm0,0x58(%rsp)
  0x00000000032b75af: vmovss %xmm1,0x5c(%rsp)
  0x00000000032b75b5: xchg   %ax,%ax
  0x00000000032b75b7: callq  0x00000000031d57a0  ; OopMap{[32]=Oop [72]=Oop off=1052}
                                                ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)
                                                ;   {runtime_call}
  0x00000000032b75bc: int3                      ;*caload
                                                ; - java.lang.String::indexOf@133 (line 1779)

  0x00000000032b75bd: mov    0x20(%rsp),%r8
  0x00000000032b75c2: mov    $0xffffff9d,%edx
  0x00000000032b75c7: mov    %rax,-0x8(%rsp)
  0x00000000032b75cc: mov    0x30(%rsp),%eax
  0x00000000032b75d0: mov    %eax,0x20(%rsp)
  0x00000000032b75d4: mov    -0x8(%rsp),%rax
  0x00000000032b75d9: mov    %r8,0x28(%rsp)
  0x00000000032b75de: mov    %rax,-0x8(%rsp)
  0x00000000032b75e3: mov    0x38(%rsp),%eax
  0x00000000032b75e7: mov    %eax,0x24(%rsp)
  0x00000000032b75eb: mov    -0x8(%rsp),%rax
  0x00000000032b75f0: mov    %rax,-0x8(%rsp)
  0x00000000032b75f5: mov    0x3c(%rsp),%eax
  0x00000000032b75f9: mov    %eax,0x30(%rsp)
  0x00000000032b75fd: mov    -0x8(%rsp),%rax
  0x00000000032b7602: mov    %ebx,0x34(%rsp)
  0x00000000032b7606: mov    %r14d,0x38(%rsp)
  0x00000000032b760b: mov    %r13d,0x3c(%rsp)
  0x00000000032b7610: data16 xchg %ax,%ax
  0x00000000032b7613: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [40]=Oop off=1144}
                                                ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)
                                                ;   {runtime_call}
  0x00000000032b7618: int3                      ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000000032b7619: mov    %eax,0x20(%rsp)    ;*aload_0
                                                ; - java.lang.String::indexOf@126 (line 1779)

  0x00000000032b761d: mov    $0xffffff65,%edx
  0x00000000032b7622: mov    %r11,0x28(%rsp)
  0x00000000032b7627: mov    %rax,-0x8(%rsp)
  0x00000000032b762c: mov    0x30(%rsp),%eax
  0x00000000032b7630: mov    %eax,0x24(%rsp)
  0x00000000032b7634: mov    -0x8(%rsp),%rax
  0x00000000032b7639: vmovsd %xmm2,0x30(%rsp)
  0x00000000032b763f: mov    %ebx,0x40(%rsp)
  0x00000000032b7643: mov    %r14d,0x44(%rsp)
  0x00000000032b7648: mov    %r13d,0x48(%rsp)
  0x00000000032b764d: mov    0x54(%rsp),%r10d
  0x00000000032b7652: mov    %r10d,0x4c(%rsp)
  0x00000000032b7657: vmovss %xmm1,0x50(%rsp)
  0x00000000032b765d: vmovss %xmm0,0x54(%rsp)
  0x00000000032b7663: callq  0x00000000031d57a0  ; OopMap{[40]=Oop [48]=Oop off=1224}
                                                ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)
                                                ;   {runtime_call}
  0x00000000032b7668: int3                      ;*if_icmpne
                                                ; - java.lang.String::indexOf@134 (line 1779)

  0x00000000032b7669: mov    %r13d,%ebp
  0x00000000032b766c: mov    %ecx,%r13d
  0x00000000032b766f: jmpq   0x00000000032b74d7
  0x00000000032b7674: mov    %r13d,%ebp
  0x00000000032b7677: mov    %eax,%r13d
  0x00000000032b767a: jmpq   0x00000000032b754b
  0x00000000032b767f: mov    %r13d,0x20(%rsp)
  0x00000000032b7684: mov    %eax,%r13d
  0x00000000032b7687: jmp    0x00000000032b761d
  0x00000000032b7689: mov    $0xfffffff6,%edx
  0x00000000032b768e: mov    %ecx,%ebp
  0x00000000032b7690: data16 xchg %ax,%ax
  0x00000000032b7693: callq  0x00000000031d57a0  ; OopMap{off=1272}
                                                ;*caload
                                                ; - java.lang.String::indexOf@82 (line 1772)
                                                ;   {runtime_call}
  0x00000000032b7698: int3   
  0x00000000032b7699: mov    $0xfffffff6,%edx
  0x00000000032b769e: mov    %r13d,%ebp
  0x00000000032b76a1: xchg   %ax,%ax
  0x00000000032b76a3: callq  0x00000000031d57a0  ; OopMap{off=1288}
                                                ;*caload
                                                ; - java.lang.String::indexOf@63 (line 1771)
                                                ;   {runtime_call}
  0x00000000032b76a8: int3   
  0x00000000032b76a9: mov    $0xfffffff6,%edx
  0x00000000032b76ae: mov    %r13d,%ebp
  0x00000000032b76b1: xchg   %ax,%ax
  0x00000000032b76b3: callq  0x00000000031d57a0  ; OopMap{off=1304}
                                                ;*caload
                                                ; - java.lang.String::indexOf@129 (line 1779)
                                                ;   {runtime_call}
  0x00000000032b76b8: int3                      ;*iinc
                                                ; - java.lang.String::indexOf@69 (line 1772)

  0x00000000032b76b9: hlt    
  0x00000000032b76ba: hlt    
  0x00000000032b76bb: hlt    
  0x00000000032b76bc: hlt    
  0x00000000032b76bd: hlt    
  0x00000000032b76be: hlt    
  0x00000000032b76bf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032b76c0: jmpq   0x000000000328d0e0  ;   {no_reloc}
[Deopt Handler Code]
  0x00000000032b76c5: callq  0x00000000032b76ca
  0x00000000032b76ca: subq   $0x5,(%rsp)
  0x00000000032b76cf: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b76d4: hlt    
  0x00000000032b76d5: hlt    
  0x00000000032b76d6: hlt    
  0x00000000032b76d7: hlt    
<nmethod compile_id='66' compile_kind='osr' compiler='C2' level='4' entry='0x00000000032b71a0' size='3280' address='0x00000000032b7050' relocation_offset='288' insts_offset='336' stub_offset='1648' scopes_data_offset='1688' scopes_pcs_offset='2232' dependencies_offset='3240' nul_chk_table_offset='3248' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='735' backedge_count='54435' iicount='735' stamp='1.107'/>
<writer thread='26124'/>
<task_queued compile_id='71' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='1024' iicount='1024' level='3' stamp='1.107' comment='tiered' hot_count='1024'/>
<task_queued compile_id='72' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='197' count='1024' backedge_count='318' iicount='1024' level='3' stamp='1.107' comment='tiered' hot_count='1024'/>
<task_queued compile_id='73' method='java/util/ArrayList get (I)Ljava/lang/Object;' bytes='11' count='1024' iicount='1024' level='3' stamp='1.107' comment='tiered' hot_count='1024'/>
<task_queued compile_id='74' method='java/util/ArrayList rangeCheck (I)V' bytes='22' count='1024' iicount='1024' level='3' stamp='1.107' comment='tiered' hot_count='1024'/>
<task_queued compile_id='75' method='java/util/ArrayList elementData (I)Ljava/lang/Object;' bytes='7' count='1024' iicount='1024' level='3' stamp='1.107' comment='tiered' hot_count='1024'/>
<task_queued compile_id='76' method='java/util/ArrayList size ()I' bytes='5' count='1664' iicount='1664' level='1' stamp='1.107' comment='tiered' hot_count='1664'/>
<task_queued compile_id='77' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='2688' iicount='2688' level='3' stamp='1.107' comment='tiered' hot_count='2688'/>
<task_queued compile_id='78' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='1024' iicount='1024' level='3' stamp='1.107' comment='tiered' hot_count='1024'/>
<task_queued compile_id='79' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='1408' iicount='1408' level='3' stamp='1.107' comment='tiered' hot_count='1408'/>
<task_queued compile_id='80' method='java/util/jar/JarFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='22' count='1408' iicount='1408' level='3' stamp='1.107' comment='tiered' hot_count='1408'/>
<task_queued compile_id='81' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='1408' iicount='1408' level='3' stamp='1.107' comment='tiered' hot_count='1408'/>
<task_queued compile_id='82' method='java/net/URL getPort ()I' bytes='5' count='384' iicount='384' level='1' stamp='1.107' comment='tiered' hot_count='384'/>
<task_queued compile_id='83' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='1664' iicount='1664' level='3' stamp='1.107' comment='tiered' hot_count='1664'/>
<task_queued compile_id='84' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='1536' iicount='1536' level='3' stamp='1.108' comment='tiered' hot_count='1536'/>
<writer thread='7552'/>
<task_queued compile_id='85' method='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject add ()V' bytes='11' count='896' iicount='896' level='3' stamp='1.108' comment='tiered' hot_count='896'/>
<writer thread='31168'/>
<task_queued compile_id='86' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='896' iicount='896' level='3' stamp='1.110' comment='tiered' hot_count='896'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032b2f50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;
  # this:     rdx:rdx   = &apos;sun/misc/URLClassPath&apos;
  # parm0:    r8        = int
  #           [sp+0x150]  (sp of caller)
  0x00000000032b3300: mov    0x8(%rdx),%r10d
  0x00000000032b3304: shl    $0x3,%r10
  0x00000000032b3308: cmp    %rax,%r10
  0x00000000032b330b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b3311: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b331c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b3320: mov    %eax,-0x6000(%rsp)
  0x00000000032b3327: push   %rbp
  0x00000000032b3328: sub    $0x140,%rsp
  0x00000000032b332f: mov    %rdx,0x98(%rsp)
  0x00000000032b3337: mov    %r8d,0x94(%rsp)
  0x00000000032b333f: lea    0xe8(%rsp),%rsi
  0x00000000032b3347: mov    %rdx,0x8(%rsi)
  0x00000000032b334b: mov    (%rdx),%rax
  0x00000000032b334e: mov    %rax,%rdi
  0x00000000032b3351: and    $0x7,%rdi
  0x00000000032b3355: cmp    $0x5,%rdi
  0x00000000032b3359: jne    0x00000000032b33e0
  0x00000000032b335f: mov    0x8(%rdx),%edi
  0x00000000032b3362: shl    $0x3,%rdi
  0x00000000032b3366: mov    0xa8(%rdi),%rdi
  0x00000000032b336d: or     %r15,%rdi
  0x00000000032b3370: xor    %rax,%rdi
  0x00000000032b3373: and    $0xffffffffffffff87,%rdi
  0x00000000032b3377: je     0x00000000032b3408
  0x00000000032b337d: test   $0x7,%rdi
  0x00000000032b3384: jne    0x00000000032b33cd
  0x00000000032b3386: test   $0x300,%rdi
  0x00000000032b338d: jne    0x00000000032b33ac
  0x00000000032b338f: and    $0x37f,%rax
  0x00000000032b3396: mov    %rax,%rdi
  0x00000000032b3399: or     %r15,%rdi
  0x00000000032b339c: lock cmpxchg %rdi,(%rdx)
  0x00000000032b33a1: jne    0x00000000032b5357
  0x00000000032b33a7: jmpq   0x00000000032b3408
  0x00000000032b33ac: mov    0x8(%rdx),%edi
  0x00000000032b33af: shl    $0x3,%rdi
  0x00000000032b33b3: mov    0xa8(%rdi),%rdi
  0x00000000032b33ba: or     %r15,%rdi
  0x00000000032b33bd: lock cmpxchg %rdi,(%rdx)
  0x00000000032b33c2: jne    0x00000000032b5357
  0x00000000032b33c8: jmpq   0x00000000032b3408
  0x00000000032b33cd: mov    0x8(%rdx),%edi
  0x00000000032b33d0: shl    $0x3,%rdi
  0x00000000032b33d4: mov    0xa8(%rdi),%rdi
  0x00000000032b33db: lock cmpxchg %rdi,(%rdx)
  0x00000000032b33e0: mov    (%rdx),%rax
  0x00000000032b33e3: or     $0x1,%rax
  0x00000000032b33e7: mov    %rax,(%rsi)
  0x00000000032b33ea: lock cmpxchg %rsi,(%rdx)
  0x00000000032b33ef: je     0x00000000032b3408
  0x00000000032b33f5: sub    %rsp,%rax
  0x00000000032b33f8: and    $0xfffffffffffff007,%rax
  0x00000000032b33ff: mov    %rax,(%rsi)
  0x00000000032b3402: jne    0x00000000032b5357
  0x00000000032b3408: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b3412: mov    0xdc(%rax),%esi
  0x00000000032b3418: add    $0x8,%esi
  0x00000000032b341b: mov    %esi,0xdc(%rax)
  0x00000000032b3421: movabs $0x1c338e08,%rax   ;   {metadata({method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b342b: and    $0x1ff8,%esi
  0x00000000032b3431: cmp    $0x0,%esi
  0x00000000032b3434: je     0x00000000032b536a  ;*aload_0
                                                ; - sun.misc.URLClassPath::getLoader@0 (line 467)

  0x00000000032b343a: movsbl 0xc(%rdx),%eax     ;*getfield closed
                                                ; - sun.misc.URLClassPath::getLoader@1 (line 467)

  0x00000000032b343e: cmp    $0x0,%eax
  0x00000000032b3441: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b344b: movabs $0x108,%rsi
  0x00000000032b3455: je     0x00000000032b3465
  0x00000000032b345b: movabs $0x118,%rsi
  0x00000000032b3465: mov    (%rax,%rsi,1),%rdi
  0x00000000032b3469: lea    0x1(%rdi),%rdi
  0x00000000032b346d: mov    %rdi,(%rax,%rsi,1)
  0x00000000032b3471: jne    0x00000000032b4fbc  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@4 (line 467)

  0x00000000032b3477: nop
  0x00000000032b3478: mov    0x18(%rdx),%esi
  0x00000000032b347b: shl    $0x3,%rsi          ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@10 (line 472)

  0x00000000032b347f: cmp    (%rsi),%rax        ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 472)
                                                ; implicit exception: dispatches to 0x00000000032b5381
  0x00000000032b3482: mov    %rsi,%rax
  0x00000000032b3485: movabs $0x1c3ede68,%rdi   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b348f: addq   $0x1,0x138(%rdi)
  0x00000000032b3497: mov    0x10(%rsi),%edi    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 472)

  0x00000000032b349a: mov    %r8,%rax
  0x00000000032b349d: inc    %eax
  0x00000000032b349f: cmp    %eax,%edi
  0x00000000032b34a1: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b34ab: movabs $0x158,%rbx
  0x00000000032b34b5: jge    0x00000000032b34c5
  0x00000000032b34bb: movabs $0x168,%rbx
  0x00000000032b34c5: mov    (%rax,%rbx,1),%rcx
  0x00000000032b34c9: lea    0x1(%rcx),%rcx
  0x00000000032b34cd: mov    %rcx,(%rax,%rbx,1)
  0x00000000032b34d1: jge    0x00000000032b4cce  ;*if_icmpge
                                                ; - sun.misc.URLClassPath::getLoader@19 (line 472)

  0x00000000032b34d7: mov    0x14(%rdx),%esi
  0x00000000032b34da: shl    $0x3,%rsi          ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@23 (line 475)

  0x00000000032b34de: lea    0xf8(%rsp),%rdi
  0x00000000032b34e6: mov    %rsi,0x8(%rdi)
  0x00000000032b34ea: mov    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000032b5386
  0x00000000032b34ed: mov    %rax,%rbx
  0x00000000032b34f0: and    $0x7,%rbx
  0x00000000032b34f4: cmp    $0x5,%rbx
  0x00000000032b34f8: jne    0x00000000032b357f
  0x00000000032b34fe: mov    0x8(%rsi),%ebx
  0x00000000032b3501: shl    $0x3,%rbx
  0x00000000032b3505: mov    0xa8(%rbx),%rbx
  0x00000000032b350c: or     %r15,%rbx
  0x00000000032b350f: xor    %rax,%rbx
  0x00000000032b3512: and    $0xffffffffffffff87,%rbx
  0x00000000032b3516: je     0x00000000032b35a7
  0x00000000032b351c: test   $0x7,%rbx
  0x00000000032b3523: jne    0x00000000032b356c
  0x00000000032b3525: test   $0x300,%rbx
  0x00000000032b352c: jne    0x00000000032b354b
  0x00000000032b352e: and    $0x37f,%rax
  0x00000000032b3535: mov    %rax,%rbx
  0x00000000032b3538: or     %r15,%rbx
  0x00000000032b353b: lock cmpxchg %rbx,(%rsi)
  0x00000000032b3540: jne    0x00000000032b538b
  0x00000000032b3546: jmpq   0x00000000032b35a7
  0x00000000032b354b: mov    0x8(%rsi),%ebx
  0x00000000032b354e: shl    $0x3,%rbx
  0x00000000032b3552: mov    0xa8(%rbx),%rbx
  0x00000000032b3559: or     %r15,%rbx
  0x00000000032b355c: lock cmpxchg %rbx,(%rsi)
  0x00000000032b3561: jne    0x00000000032b538b
  0x00000000032b3567: jmpq   0x00000000032b35a7
  0x00000000032b356c: mov    0x8(%rsi),%ebx
  0x00000000032b356f: shl    $0x3,%rbx
  0x00000000032b3573: mov    0xa8(%rbx),%rbx
  0x00000000032b357a: lock cmpxchg %rbx,(%rsi)
  0x00000000032b357f: mov    (%rsi),%rax
  0x00000000032b3582: or     $0x1,%rax
  0x00000000032b3586: mov    %rax,(%rdi)
  0x00000000032b3589: lock cmpxchg %rdi,(%rsi)
  0x00000000032b358e: je     0x00000000032b35a7
  0x00000000032b3594: sub    %rsp,%rax
  0x00000000032b3597: and    $0xfffffffffffff007,%rax
  0x00000000032b359e: mov    %rax,(%rdi)
  0x00000000032b35a1: jne    0x00000000032b538b  ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 475)

  0x00000000032b35a7: mov    0x14(%rdx),%edi
  0x00000000032b35aa: shl    $0x3,%rdi          ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@30 (line 476)

  0x00000000032b35ae: cmp    (%rdi),%rax        ;*invokevirtual empty
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ; implicit exception: dispatches to 0x00000000032b539e
  0x00000000032b35b1: mov    %rdi,%rax
  0x00000000032b35b4: movabs $0x1c3ede68,%rbx   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b35be: addq   $0x1,0x188(%rbx)
  0x00000000032b35c6: movabs $0x1c47ee98,%rax   ;   {metadata(method data for {method} {0x000000001c218860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b35d0: mov    0xdc(%rax),%ebx
  0x00000000032b35d6: add    $0x8,%ebx
  0x00000000032b35d9: mov    %ebx,0xdc(%rax)
  0x00000000032b35df: movabs $0x1c218858,%rax   ;   {metadata({method} {0x000000001c218860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b35e9: and    $0x7ffff8,%ebx
  0x00000000032b35ef: cmp    $0x0,%ebx
  0x00000000032b35f2: je     0x00000000032b53a3
  0x00000000032b35f8: mov    %rdi,%rax
  0x00000000032b35fb: movabs $0x1c47ee98,%rbx   ;   {metadata(method data for {method} {0x000000001c218860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3605: mov    0x8(%rax),%eax
  0x00000000032b3608: shl    $0x3,%rax
  0x00000000032b360c: cmp    0x110(%rbx),%rax
  0x00000000032b3613: jne    0x00000000032b3622
  0x00000000032b3615: addq   $0x1,0x118(%rbx)
  0x00000000032b361d: jmpq   0x00000000032b3688
  0x00000000032b3622: cmp    0x120(%rbx),%rax
  0x00000000032b3629: jne    0x00000000032b3638
  0x00000000032b362b: addq   $0x1,0x128(%rbx)
  0x00000000032b3633: jmpq   0x00000000032b3688
  0x00000000032b3638: cmpq   $0x0,0x110(%rbx)
  0x00000000032b3643: jne    0x00000000032b365c
  0x00000000032b3645: mov    %rax,0x110(%rbx)
  0x00000000032b364c: movq   $0x1,0x118(%rbx)
  0x00000000032b3657: jmpq   0x00000000032b3688
  0x00000000032b365c: cmpq   $0x0,0x120(%rbx)
  0x00000000032b3667: jne    0x00000000032b3680
  0x00000000032b3669: mov    %rax,0x120(%rbx)
  0x00000000032b3670: movq   $0x1,0x128(%rbx)
  0x00000000032b367b: jmpq   0x00000000032b3688
  0x00000000032b3680: addq   $0x1,0x108(%rbx)
  0x00000000032b3688: lea    0x108(%rsp),%rbx
  0x00000000032b3690: mov    %rdi,0x8(%rbx)
  0x00000000032b3694: mov    (%rdi),%rax
  0x00000000032b3697: mov    %rax,%rcx
  0x00000000032b369a: and    $0x7,%rcx
  0x00000000032b369e: cmp    $0x5,%rcx
  0x00000000032b36a2: jne    0x00000000032b3729
  0x00000000032b36a8: mov    0x8(%rdi),%ecx
  0x00000000032b36ab: shl    $0x3,%rcx
  0x00000000032b36af: mov    0xa8(%rcx),%rcx
  0x00000000032b36b6: or     %r15,%rcx
  0x00000000032b36b9: xor    %rax,%rcx
  0x00000000032b36bc: and    $0xffffffffffffff87,%rcx
  0x00000000032b36c0: je     0x00000000032b3751
  0x00000000032b36c6: test   $0x7,%rcx
  0x00000000032b36cd: jne    0x00000000032b3716
  0x00000000032b36cf: test   $0x300,%rcx
  0x00000000032b36d6: jne    0x00000000032b36f5
  0x00000000032b36d8: and    $0x37f,%rax
  0x00000000032b36df: mov    %rax,%rcx
  0x00000000032b36e2: or     %r15,%rcx
  0x00000000032b36e5: lock cmpxchg %rcx,(%rdi)
  0x00000000032b36ea: jne    0x00000000032b53ba
  0x00000000032b36f0: jmpq   0x00000000032b3751
  0x00000000032b36f5: mov    0x8(%rdi),%ecx
  0x00000000032b36f8: shl    $0x3,%rcx
  0x00000000032b36fc: mov    0xa8(%rcx),%rcx
  0x00000000032b3703: or     %r15,%rcx
  0x00000000032b3706: lock cmpxchg %rcx,(%rdi)
  0x00000000032b370b: jne    0x00000000032b53ba
  0x00000000032b3711: jmpq   0x00000000032b3751
  0x00000000032b3716: mov    0x8(%rdi),%ecx
  0x00000000032b3719: shl    $0x3,%rcx
  0x00000000032b371d: mov    0xa8(%rcx),%rcx
  0x00000000032b3724: lock cmpxchg %rcx,(%rdi)
  0x00000000032b3729: mov    (%rdi),%rax
  0x00000000032b372c: or     $0x1,%rax
  0x00000000032b3730: mov    %rax,(%rbx)
  0x00000000032b3733: lock cmpxchg %rbx,(%rdi)
  0x00000000032b3738: je     0x00000000032b3751
  0x00000000032b373e: sub    %rsp,%rax
  0x00000000032b3741: and    $0xfffffffffffff007,%rax
  0x00000000032b3748: mov    %rax,(%rbx)
  0x00000000032b374b: jne    0x00000000032b53ba  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000032b3751: mov    0x10(%rdi),%edi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000032b3754: lea    0x108(%rsp),%rax
  0x00000000032b375c: mov    0x8(%rax),%rcx
  0x00000000032b3760: mov    (%rcx),%rbx
  0x00000000032b3763: and    $0x7,%rbx
  0x00000000032b3767: cmp    $0x5,%rbx
  0x00000000032b376b: je     0x00000000032b3788
  0x00000000032b3771: mov    (%rax),%rbx
  0x00000000032b3774: test   %rbx,%rbx
  0x00000000032b3777: je     0x00000000032b3788
  0x00000000032b377d: lock cmpxchg %rbx,(%rcx)
  0x00000000032b3782: jne    0x00000000032b53cd  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000032b3788: cmp    $0x0,%edi
  0x00000000032b378b: movabs $0x1c47ee98,%rax   ;   {metadata(method data for {method} {0x000000001c218860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3795: movabs $0x138,%rdi
  0x00000000032b379f: jne    0x00000000032b37af
  0x00000000032b37a5: movabs $0x148,%rdi
  0x00000000032b37af: mov    (%rax,%rdi,1),%rbx
  0x00000000032b37b3: lea    0x1(%rbx),%rbx
  0x00000000032b37b7: mov    %rbx,(%rax,%rdi,1)
  0x00000000032b37bb: jne    0x00000000032b37db  ;*ifne
                                                ; - java.util.Stack::empty@4 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000032b37c1: movabs $0x1c47ee98,%rax   ;   {metadata(method data for {method} {0x000000001c218860} &apos;empty&apos; &apos;()Z&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b37cb: incl   0x158(%rax)
  0x00000000032b37d1: mov    $0x1,%eax
  0x00000000032b37d6: jmpq   0x00000000032b37e0  ;*goto
                                                ; - java.util.Stack::empty@8 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000032b37db: mov    $0x0,%eax          ;*ireturn
                                                ; - java.util.Stack::empty@12 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000032b37e0: and    $0x1,%eax
  0x00000000032b37e3: cmp    $0x0,%eax
  0x00000000032b37e6: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b37f0: movabs $0x1a8,%rdi
  0x00000000032b37fa: je     0x00000000032b380a
  0x00000000032b3800: movabs $0x1b8,%rdi
  0x00000000032b380a: mov    (%rax,%rdi,1),%rbx
  0x00000000032b380e: lea    0x1(%rbx),%rbx
  0x00000000032b3812: mov    %rbx,(%rax,%rdi,1)
  0x00000000032b3816: jne    0x00000000032b4f3b  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@36 (line 476)

  0x00000000032b381c: mov    0x14(%rdx),%edi
  0x00000000032b381f: shl    $0x3,%rdi          ;*getfield urls
                                                ; - sun.misc.URLClassPath::getLoader@44 (line 479)

  0x00000000032b3823: cmp    (%rdi),%rax        ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ; implicit exception: dispatches to 0x00000000032b53e3
  0x00000000032b3826: mov    %rdi,%rax
  0x00000000032b3829: movabs $0x1c3ede68,%rbx   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b3833: movabs $0x7c00169b0,%r10  ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00000000032b383d: mov    %r10,0x1d0(%rbx)
  0x00000000032b3844: addq   $0x1,0x1d8(%rbx)
  0x00000000032b384c: lea    0x108(%rsp),%rbx
  0x00000000032b3854: mov    %rdi,0x8(%rbx)
  0x00000000032b3858: mov    (%rdi),%rax
  0x00000000032b385b: mov    %rax,%rcx
  0x00000000032b385e: and    $0x7,%rcx
  0x00000000032b3862: cmp    $0x5,%rcx
  0x00000000032b3866: jne    0x00000000032b38ed
  0x00000000032b386c: mov    0x8(%rdi),%ecx
  0x00000000032b386f: shl    $0x3,%rcx
  0x00000000032b3873: mov    0xa8(%rcx),%rcx
  0x00000000032b387a: or     %r15,%rcx
  0x00000000032b387d: xor    %rax,%rcx
  0x00000000032b3880: and    $0xffffffffffffff87,%rcx
  0x00000000032b3884: je     0x00000000032b3915
  0x00000000032b388a: test   $0x7,%rcx
  0x00000000032b3891: jne    0x00000000032b38da
  0x00000000032b3893: test   $0x300,%rcx
  0x00000000032b389a: jne    0x00000000032b38b9
  0x00000000032b389c: and    $0x37f,%rax
  0x00000000032b38a3: mov    %rax,%rcx
  0x00000000032b38a6: or     %r15,%rcx
  0x00000000032b38a9: lock cmpxchg %rcx,(%rdi)
  0x00000000032b38ae: jne    0x00000000032b53e8
  0x00000000032b38b4: jmpq   0x00000000032b3915
  0x00000000032b38b9: mov    0x8(%rdi),%ecx
  0x00000000032b38bc: shl    $0x3,%rcx
  0x00000000032b38c0: mov    0xa8(%rcx),%rcx
  0x00000000032b38c7: or     %r15,%rcx
  0x00000000032b38ca: lock cmpxchg %rcx,(%rdi)
  0x00000000032b38cf: jne    0x00000000032b53e8
  0x00000000032b38d5: jmpq   0x00000000032b3915
  0x00000000032b38da: mov    0x8(%rdi),%ecx
  0x00000000032b38dd: shl    $0x3,%rcx
  0x00000000032b38e1: mov    0xa8(%rcx),%rcx
  0x00000000032b38e8: lock cmpxchg %rcx,(%rdi)
  0x00000000032b38ed: mov    (%rdi),%rax
  0x00000000032b38f0: or     $0x1,%rax
  0x00000000032b38f4: mov    %rax,(%rbx)
  0x00000000032b38f7: lock cmpxchg %rbx,(%rdi)
  0x00000000032b38fc: je     0x00000000032b3915
  0x00000000032b3902: sub    %rsp,%rax
  0x00000000032b3905: and    $0xfffffffffffff007,%rax
  0x00000000032b390c: mov    %rax,(%rbx)
  0x00000000032b390f: jne    0x00000000032b53e8  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3915: movabs $0x1c4809b0,%rax   ;   {metadata(method data for {method} {0x000000001c218710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b391f: mov    0xdc(%rax),%ebx
  0x00000000032b3925: add    $0x8,%ebx
  0x00000000032b3928: mov    %ebx,0xdc(%rax)
  0x00000000032b392e: movabs $0x1c218708,%rax   ;   {metadata({method} {0x000000001c218710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3938: and    $0x7ffff8,%ebx
  0x00000000032b393e: cmp    $0x0,%ebx
  0x00000000032b3941: je     0x00000000032b53fb
  0x00000000032b3947: mov    %rdi,%rax
  0x00000000032b394a: movabs $0x1c4809b0,%rbx   ;   {metadata(method data for {method} {0x000000001c218710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3954: mov    0x8(%rax),%eax
  0x00000000032b3957: shl    $0x3,%rax
  0x00000000032b395b: cmp    0x110(%rbx),%rax
  0x00000000032b3962: jne    0x00000000032b3971
  0x00000000032b3964: addq   $0x1,0x118(%rbx)
  0x00000000032b396c: jmpq   0x00000000032b39d7
  0x00000000032b3971: cmp    0x120(%rbx),%rax
  0x00000000032b3978: jne    0x00000000032b3987
  0x00000000032b397a: addq   $0x1,0x128(%rbx)
  0x00000000032b3982: jmpq   0x00000000032b39d7
  0x00000000032b3987: cmpq   $0x0,0x110(%rbx)
  0x00000000032b3992: jne    0x00000000032b39ab
  0x00000000032b3994: mov    %rax,0x110(%rbx)
  0x00000000032b399b: movq   $0x1,0x118(%rbx)
  0x00000000032b39a6: jmpq   0x00000000032b39d7
  0x00000000032b39ab: cmpq   $0x0,0x120(%rbx)
  0x00000000032b39b6: jne    0x00000000032b39cf
  0x00000000032b39b8: mov    %rax,0x120(%rbx)
  0x00000000032b39bf: movq   $0x1,0x128(%rbx)
  0x00000000032b39ca: jmpq   0x00000000032b39d7
  0x00000000032b39cf: addq   $0x1,0x108(%rbx)
  0x00000000032b39d7: lea    0x118(%rsp),%rbx
  0x00000000032b39df: mov    %rdi,0x8(%rbx)
  0x00000000032b39e3: mov    (%rdi),%rax
  0x00000000032b39e6: mov    %rax,%rcx
  0x00000000032b39e9: and    $0x7,%rcx
  0x00000000032b39ed: cmp    $0x5,%rcx
  0x00000000032b39f1: jne    0x00000000032b3a78
  0x00000000032b39f7: mov    0x8(%rdi),%ecx
  0x00000000032b39fa: shl    $0x3,%rcx
  0x00000000032b39fe: mov    0xa8(%rcx),%rcx
  0x00000000032b3a05: or     %r15,%rcx
  0x00000000032b3a08: xor    %rax,%rcx
  0x00000000032b3a0b: and    $0xffffffffffffff87,%rcx
  0x00000000032b3a0f: je     0x00000000032b3aa0
  0x00000000032b3a15: test   $0x7,%rcx
  0x00000000032b3a1c: jne    0x00000000032b3a65
  0x00000000032b3a1e: test   $0x300,%rcx
  0x00000000032b3a25: jne    0x00000000032b3a44
  0x00000000032b3a27: and    $0x37f,%rax
  0x00000000032b3a2e: mov    %rax,%rcx
  0x00000000032b3a31: or     %r15,%rcx
  0x00000000032b3a34: lock cmpxchg %rcx,(%rdi)
  0x00000000032b3a39: jne    0x00000000032b5412
  0x00000000032b3a3f: jmpq   0x00000000032b3aa0
  0x00000000032b3a44: mov    0x8(%rdi),%ecx
  0x00000000032b3a47: shl    $0x3,%rcx
  0x00000000032b3a4b: mov    0xa8(%rcx),%rcx
  0x00000000032b3a52: or     %r15,%rcx
  0x00000000032b3a55: lock cmpxchg %rcx,(%rdi)
  0x00000000032b3a5a: jne    0x00000000032b5412
  0x00000000032b3a60: jmpq   0x00000000032b3aa0
  0x00000000032b3a65: mov    0x8(%rdi),%ecx
  0x00000000032b3a68: shl    $0x3,%rcx
  0x00000000032b3a6c: mov    0xa8(%rcx),%rcx
  0x00000000032b3a73: lock cmpxchg %rcx,(%rdi)
  0x00000000032b3a78: mov    (%rdi),%rax
  0x00000000032b3a7b: or     $0x1,%rax
  0x00000000032b3a7f: mov    %rax,(%rbx)
  0x00000000032b3a82: lock cmpxchg %rbx,(%rdi)
  0x00000000032b3a87: je     0x00000000032b3aa0
  0x00000000032b3a8d: sub    %rsp,%rax
  0x00000000032b3a90: and    $0xfffffffffffff007,%rax
  0x00000000032b3a97: mov    %rax,(%rbx)
  0x00000000032b3a9a: jne    0x00000000032b5412  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3aa0: mov    0x10(%rdi),%ebx    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3aa3: lea    0x118(%rsp),%rax
  0x00000000032b3aab: mov    0x8(%rax),%r9
  0x00000000032b3aaf: mov    (%r9),%rcx
  0x00000000032b3ab2: and    $0x7,%rcx
  0x00000000032b3ab6: cmp    $0x5,%rcx
  0x00000000032b3aba: je     0x00000000032b3ad7
  0x00000000032b3ac0: mov    (%rax),%rcx
  0x00000000032b3ac3: test   %rcx,%rcx
  0x00000000032b3ac6: je     0x00000000032b3ad7
  0x00000000032b3acc: lock cmpxchg %rcx,(%r9)
  0x00000000032b3ad1: jne    0x00000000032b5425  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3ad7: mov    %rdi,%rax
  0x00000000032b3ada: movabs $0x1c4809b0,%rcx   ;   {metadata(method data for {method} {0x000000001c218710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3ae4: movabs $0x7c00169b0,%r10  ;   {metadata(&apos;java/util/Stack&apos;)}
  0x00000000032b3aee: mov    %r10,0x140(%rcx)
  0x00000000032b3af5: addq   $0x1,0x148(%rcx)
  0x00000000032b3afd: lea    0x118(%rsp),%rcx
  0x00000000032b3b05: mov    %rdi,0x8(%rcx)
  0x00000000032b3b09: mov    (%rdi),%rax
  0x00000000032b3b0c: mov    %rax,%r9
  0x00000000032b3b0f: and    $0x7,%r9
  0x00000000032b3b13: cmp    $0x5,%r9
  0x00000000032b3b17: jne    0x00000000032b3ba1
  0x00000000032b3b1d: mov    0x8(%rdi),%r9d
  0x00000000032b3b21: shl    $0x3,%r9
  0x00000000032b3b25: mov    0xa8(%r9),%r9
  0x00000000032b3b2c: or     %r15,%r9
  0x00000000032b3b2f: xor    %rax,%r9
  0x00000000032b3b32: and    $0xffffffffffffff87,%r9
  0x00000000032b3b36: je     0x00000000032b3bc9
  0x00000000032b3b3c: test   $0x7,%r9
  0x00000000032b3b43: jne    0x00000000032b3b8d
  0x00000000032b3b45: test   $0x300,%r9
  0x00000000032b3b4c: jne    0x00000000032b3b6b
  0x00000000032b3b4e: and    $0x37f,%rax
  0x00000000032b3b55: mov    %rax,%r9
  0x00000000032b3b58: or     %r15,%r9
  0x00000000032b3b5b: lock cmpxchg %r9,(%rdi)
  0x00000000032b3b60: jne    0x00000000032b543b
  0x00000000032b3b66: jmpq   0x00000000032b3bc9
  0x00000000032b3b6b: mov    0x8(%rdi),%r9d
  0x00000000032b3b6f: shl    $0x3,%r9
  0x00000000032b3b73: mov    0xa8(%r9),%r9
  0x00000000032b3b7a: or     %r15,%r9
  0x00000000032b3b7d: lock cmpxchg %r9,(%rdi)
  0x00000000032b3b82: jne    0x00000000032b543b
  0x00000000032b3b88: jmpq   0x00000000032b3bc9
  0x00000000032b3b8d: mov    0x8(%rdi),%r9d
  0x00000000032b3b91: shl    $0x3,%r9
  0x00000000032b3b95: mov    0xa8(%r9),%r9
  0x00000000032b3b9c: lock cmpxchg %r9,(%rdi)
  0x00000000032b3ba1: mov    (%rdi),%rax
  0x00000000032b3ba4: or     $0x1,%rax
  0x00000000032b3ba8: mov    %rax,(%rcx)
  0x00000000032b3bab: lock cmpxchg %rcx,(%rdi)
  0x00000000032b3bb0: je     0x00000000032b3bc9
  0x00000000032b3bb6: sub    %rsp,%rax
  0x00000000032b3bb9: and    $0xfffffffffffff007,%rax
  0x00000000032b3bc0: mov    %rax,(%rcx)
  0x00000000032b3bc3: jne    0x00000000032b543b  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3bc9: movabs $0x1c481360,%rax   ;   {metadata(method data for {method} {0x000000001c2187c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3bd3: mov    0xdc(%rax),%ecx
  0x00000000032b3bd9: add    $0x8,%ecx
  0x00000000032b3bdc: mov    %ecx,0xdc(%rax)
  0x00000000032b3be2: movabs $0x1c2187b8,%rax   ;   {metadata({method} {0x000000001c2187c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3bec: and    $0x7ffff8,%ecx
  0x00000000032b3bf2: cmp    $0x0,%ecx
  0x00000000032b3bf5: je     0x00000000032b544e
  0x00000000032b3bfb: mov    %rdi,%rax
  0x00000000032b3bfe: movabs $0x1c481360,%rcx   ;   {metadata(method data for {method} {0x000000001c2187c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3c08: mov    0x8(%rax),%eax
  0x00000000032b3c0b: shl    $0x3,%rax
  0x00000000032b3c0f: cmp    0x110(%rcx),%rax
  0x00000000032b3c16: jne    0x00000000032b3c25
  0x00000000032b3c18: addq   $0x1,0x118(%rcx)
  0x00000000032b3c20: jmpq   0x00000000032b3c8b
  0x00000000032b3c25: cmp    0x120(%rcx),%rax
  0x00000000032b3c2c: jne    0x00000000032b3c3b
  0x00000000032b3c2e: addq   $0x1,0x128(%rcx)
  0x00000000032b3c36: jmpq   0x00000000032b3c8b
  0x00000000032b3c3b: cmpq   $0x0,0x110(%rcx)
  0x00000000032b3c46: jne    0x00000000032b3c5f
  0x00000000032b3c48: mov    %rax,0x110(%rcx)
  0x00000000032b3c4f: movq   $0x1,0x118(%rcx)
  0x00000000032b3c5a: jmpq   0x00000000032b3c8b
  0x00000000032b3c5f: cmpq   $0x0,0x120(%rcx)
  0x00000000032b3c6a: jne    0x00000000032b3c83
  0x00000000032b3c6c: mov    %rax,0x120(%rcx)
  0x00000000032b3c73: movq   $0x1,0x128(%rcx)
  0x00000000032b3c7e: jmpq   0x00000000032b3c8b
  0x00000000032b3c83: addq   $0x1,0x108(%rcx)
  0x00000000032b3c8b: lea    0x128(%rsp),%rcx
  0x00000000032b3c93: mov    %rdi,0x8(%rcx)
  0x00000000032b3c97: mov    (%rdi),%rax
  0x00000000032b3c9a: mov    %rax,%r9
  0x00000000032b3c9d: and    $0x7,%r9
  0x00000000032b3ca1: cmp    $0x5,%r9
  0x00000000032b3ca5: jne    0x00000000032b3d2f
  0x00000000032b3cab: mov    0x8(%rdi),%r9d
  0x00000000032b3caf: shl    $0x3,%r9
  0x00000000032b3cb3: mov    0xa8(%r9),%r9
  0x00000000032b3cba: or     %r15,%r9
  0x00000000032b3cbd: xor    %rax,%r9
  0x00000000032b3cc0: and    $0xffffffffffffff87,%r9
  0x00000000032b3cc4: je     0x00000000032b3d57
  0x00000000032b3cca: test   $0x7,%r9
  0x00000000032b3cd1: jne    0x00000000032b3d1b
  0x00000000032b3cd3: test   $0x300,%r9
  0x00000000032b3cda: jne    0x00000000032b3cf9
  0x00000000032b3cdc: and    $0x37f,%rax
  0x00000000032b3ce3: mov    %rax,%r9
  0x00000000032b3ce6: or     %r15,%r9
  0x00000000032b3ce9: lock cmpxchg %r9,(%rdi)
  0x00000000032b3cee: jne    0x00000000032b5465
  0x00000000032b3cf4: jmpq   0x00000000032b3d57
  0x00000000032b3cf9: mov    0x8(%rdi),%r9d
  0x00000000032b3cfd: shl    $0x3,%r9
  0x00000000032b3d01: mov    0xa8(%r9),%r9
  0x00000000032b3d08: or     %r15,%r9
  0x00000000032b3d0b: lock cmpxchg %r9,(%rdi)
  0x00000000032b3d10: jne    0x00000000032b5465
  0x00000000032b3d16: jmpq   0x00000000032b3d57
  0x00000000032b3d1b: mov    0x8(%rdi),%r9d
  0x00000000032b3d1f: shl    $0x3,%r9
  0x00000000032b3d23: mov    0xa8(%r9),%r9
  0x00000000032b3d2a: lock cmpxchg %r9,(%rdi)
  0x00000000032b3d2f: mov    (%rdi),%rax
  0x00000000032b3d32: or     $0x1,%rax
  0x00000000032b3d36: mov    %rax,(%rcx)
  0x00000000032b3d39: lock cmpxchg %rcx,(%rdi)
  0x00000000032b3d3e: je     0x00000000032b3d57
  0x00000000032b3d44: sub    %rsp,%rax
  0x00000000032b3d47: and    $0xfffffffffffff007,%rax
  0x00000000032b3d4e: mov    %rax,(%rcx)
  0x00000000032b3d51: jne    0x00000000032b5465  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3d57: mov    0x10(%rdi),%ecx    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3d5a: lea    0x128(%rsp),%rax
  0x00000000032b3d62: mov    0x8(%rax),%r11
  0x00000000032b3d66: mov    (%r11),%r9
  0x00000000032b3d69: and    $0x7,%r9
  0x00000000032b3d6d: cmp    $0x5,%r9
  0x00000000032b3d71: je     0x00000000032b3d8e
  0x00000000032b3d77: mov    (%rax),%r9
  0x00000000032b3d7a: test   %r9,%r9
  0x00000000032b3d7d: je     0x00000000032b3d8e
  0x00000000032b3d83: lock cmpxchg %r9,(%r11)
  0x00000000032b3d88: jne    0x00000000032b5478  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3d8e: cmp    $0x0,%ecx
  0x00000000032b3d91: movabs $0x1c481360,%rax   ;   {metadata(method data for {method} {0x000000001c2187c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3d9b: movabs $0x138,%r9
  0x00000000032b3da5: jne    0x00000000032b3db5
  0x00000000032b3dab: movabs $0x148,%r9
  0x00000000032b3db5: mov    (%rax,%r9,1),%r11
  0x00000000032b3db9: lea    0x1(%r11),%r11
  0x00000000032b3dbd: mov    %r11,(%rax,%r9,1)
  0x00000000032b3dc1: mov    %ebx,0x90(%rsp)
  0x00000000032b3dc8: je     0x00000000032b5091  ;*ifne
                                                ; - java.util.Stack::peek@6 (line 101)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3dce: mov    %rsi,0xa0(%rsp)
  0x00000000032b3dd6: mov    %rdi,%rax
  0x00000000032b3dd9: movabs $0x1c481360,%r9    ;   {metadata(method data for {method} {0x000000001c2187c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3de3: mov    0x8(%rax),%eax
  0x00000000032b3de6: shl    $0x3,%rax
  0x00000000032b3dea: cmp    0x170(%r9),%rax
  0x00000000032b3df1: jne    0x00000000032b3e00
  0x00000000032b3df3: addq   $0x1,0x178(%r9)
  0x00000000032b3dfb: jmpq   0x00000000032b3e66
  0x00000000032b3e00: cmp    0x180(%r9),%rax
  0x00000000032b3e07: jne    0x00000000032b3e16
  0x00000000032b3e09: addq   $0x1,0x188(%r9)
  0x00000000032b3e11: jmpq   0x00000000032b3e66
  0x00000000032b3e16: cmpq   $0x0,0x170(%r9)
  0x00000000032b3e21: jne    0x00000000032b3e3a
  0x00000000032b3e23: mov    %rax,0x170(%r9)
  0x00000000032b3e2a: movq   $0x1,0x178(%r9)
  0x00000000032b3e35: jmpq   0x00000000032b3e66
  0x00000000032b3e3a: cmpq   $0x0,0x180(%r9)
  0x00000000032b3e45: jne    0x00000000032b3e5e
  0x00000000032b3e47: mov    %rax,0x180(%r9)
  0x00000000032b3e4e: movq   $0x1,0x188(%r9)
  0x00000000032b3e59: jmpq   0x00000000032b3e66
  0x00000000032b3e5e: addq   $0x1,0x168(%r9)
  0x00000000032b3e66: dec    %ecx
  0x00000000032b3e68: mov    %rcx,%r8
  0x00000000032b3e6b: mov    %rdi,%rdx          ;*invokevirtual elementAt
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3e6e: mov    %rdi,0x88(%rsp)
  0x00000000032b3e76: nop
  0x00000000032b3e77: callq  0x00000000031d61a0  ; OopMap{[160]=Oop [152]=Oop [136]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=2940}
                                                ;*invokevirtual elementAt
                                                ; - java.util.Stack::peek@21 (line 103)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {optimized virtual_call}
  0x00000000032b3e7c: mov    %rax,0xa8(%rsp)
  0x00000000032b3e84: lea    0x118(%rsp),%rax
  0x00000000032b3e8c: mov    0x8(%rax),%rdx
  0x00000000032b3e90: mov    (%rdx),%r8
  0x00000000032b3e93: and    $0x7,%r8
  0x00000000032b3e97: cmp    $0x5,%r8
  0x00000000032b3e9b: je     0x00000000032b3eb8
  0x00000000032b3ea1: mov    (%rax),%r8
  0x00000000032b3ea4: test   %r8,%r8
  0x00000000032b3ea7: je     0x00000000032b3eb8
  0x00000000032b3ead: lock cmpxchg %r8,(%rdx)
  0x00000000032b3eb2: jne    0x00000000032b548e  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3eb8: mov    0x88(%rsp),%rdi
  0x00000000032b3ec0: movabs $0x1c4809b0,%r8    ;   {metadata(method data for {method} {0x000000001c218710} &apos;pop&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b3eca: mov    0x8(%rdi),%edi
  0x00000000032b3ecd: shl    $0x3,%rdi
  0x00000000032b3ed1: cmp    0x170(%r8),%rdi
  0x00000000032b3ed8: jne    0x00000000032b3ee7
  0x00000000032b3eda: addq   $0x1,0x178(%r8)
  0x00000000032b3ee2: jmpq   0x00000000032b3f4d
  0x00000000032b3ee7: cmp    0x180(%r8),%rdi
  0x00000000032b3eee: jne    0x00000000032b3efd
  0x00000000032b3ef0: addq   $0x1,0x188(%r8)
  0x00000000032b3ef8: jmpq   0x00000000032b3f4d
  0x00000000032b3efd: cmpq   $0x0,0x170(%r8)
  0x00000000032b3f08: jne    0x00000000032b3f21
  0x00000000032b3f0a: mov    %rdi,0x170(%r8)
  0x00000000032b3f11: movq   $0x1,0x178(%r8)
  0x00000000032b3f1c: jmpq   0x00000000032b3f4d
  0x00000000032b3f21: cmpq   $0x0,0x180(%r8)
  0x00000000032b3f2c: jne    0x00000000032b3f45
  0x00000000032b3f2e: mov    %rdi,0x180(%r8)
  0x00000000032b3f35: movq   $0x1,0x188(%r8)
  0x00000000032b3f40: jmpq   0x00000000032b3f4d
  0x00000000032b3f45: addq   $0x1,0x168(%r8)
  0x00000000032b3f4d: mov    0x90(%rsp),%ebx
  0x00000000032b3f54: dec    %ebx
  0x00000000032b3f56: mov    %rbx,%r8
  0x00000000032b3f59: mov    0x88(%rsp),%rdx    ;*invokevirtual removeElementAt
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3f61: nop
  0x00000000032b3f62: nop
  0x00000000032b3f63: nop
  0x00000000032b3f64: nop
  0x00000000032b3f65: nop
  0x00000000032b3f66: nop
  0x00000000032b3f67: callq  0x00000000031d61a0  ; OopMap{[160]=Oop [152]=Oop [168]=Oop [240]=Oop [256]=Oop [272]=Oop off=3180}
                                                ;*invokevirtual removeElementAt
                                                ; - java.util.Stack::pop@14 (line 85)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {optimized virtual_call}
  0x00000000032b3f6c: lea    0x108(%rsp),%rax
  0x00000000032b3f74: mov    0x8(%rax),%rsi
  0x00000000032b3f78: mov    (%rsi),%rdx
  0x00000000032b3f7b: and    $0x7,%rdx
  0x00000000032b3f7f: cmp    $0x5,%rdx
  0x00000000032b3f83: je     0x00000000032b3fa0
  0x00000000032b3f89: mov    (%rax),%rdx
  0x00000000032b3f8c: test   %rdx,%rdx
  0x00000000032b3f8f: je     0x00000000032b3fa0
  0x00000000032b3f95: lock cmpxchg %rdx,(%rsi)
  0x00000000032b3f9a: jne    0x00000000032b54a4  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b3fa0: mov    0xa8(%rsp),%rax
  0x00000000032b3fa8: cmp    $0x0,%rax
  0x00000000032b3fac: jne    0x00000000032b3fc7
  0x00000000032b3fae: movabs $0x1c3ede68,%rdx   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b3fb8: orl    $0x100,0x1f0(%rdx)
  0x00000000032b3fc2: jmpq   0x00000000032b4087
  0x00000000032b3fc7: movabs $0x7c000f070,%rdi  ;   {metadata(&apos;java/net/URL&apos;)}
  0x00000000032b3fd1: mov    0x8(%rax),%esi
  0x00000000032b3fd4: shl    $0x3,%rsi
  0x00000000032b3fd8: cmp    %rsi,%rdi
  0x00000000032b3fdb: jne    0x00000000032b406b
  0x00000000032b3fe1: movabs $0x1c3ede68,%rdx   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b3feb: mov    0x8(%rax),%edi
  0x00000000032b3fee: shl    $0x3,%rdi
  0x00000000032b3ff2: cmp    0x200(%rdx),%rdi
  0x00000000032b3ff9: jne    0x00000000032b4008
  0x00000000032b3ffb: addq   $0x1,0x208(%rdx)
  0x00000000032b4003: jmpq   0x00000000032b4087
  0x00000000032b4008: cmp    0x210(%rdx),%rdi
  0x00000000032b400f: jne    0x00000000032b401e
  0x00000000032b4011: addq   $0x1,0x218(%rdx)
  0x00000000032b4019: jmpq   0x00000000032b4087
  0x00000000032b401e: cmpq   $0x0,0x200(%rdx)
  0x00000000032b4029: jne    0x00000000032b4042
  0x00000000032b402b: mov    %rdi,0x200(%rdx)
  0x00000000032b4032: movq   $0x1,0x208(%rdx)
  0x00000000032b403d: jmpq   0x00000000032b4087
  0x00000000032b4042: cmpq   $0x0,0x210(%rdx)
  0x00000000032b404d: jne    0x00000000032b4066
  0x00000000032b404f: mov    %rdi,0x210(%rdx)
  0x00000000032b4056: movq   $0x1,0x218(%rdx)
  0x00000000032b4061: jmpq   0x00000000032b4087
  0x00000000032b4066: jmpq   0x00000000032b4087
  0x00000000032b406b: movabs $0x1c3ede68,%rdx   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4075: subq   $0x1,0x1f8(%rdx)
  0x00000000032b407d: jmpq   0x00000000032b54ba
  0x00000000032b4082: jmpq   0x00000000032b4087
  0x00000000032b4087: mov    %rax,%rsi          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 479)

  0x00000000032b408a: lea    0xf8(%rsp),%rax
  0x00000000032b4092: mov    0x8(%rax),%rdi
  0x00000000032b4096: mov    (%rdi),%rdx
  0x00000000032b4099: and    $0x7,%rdx
  0x00000000032b409d: cmp    $0x5,%rdx
  0x00000000032b40a1: je     0x00000000032b40be
  0x00000000032b40a7: mov    (%rax),%rdx
  0x00000000032b40aa: test   %rdx,%rdx
  0x00000000032b40ad: je     0x00000000032b40be
  0x00000000032b40b3: lock cmpxchg %rdx,(%rdi)
  0x00000000032b40b8: jne    0x00000000032b54c3  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@55 (line 481)

  0x00000000032b40be: movabs $0x1c3ede68,%rdx   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b40c8: incl   0x228(%rdx)        ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@56 (line 481)

  0x00000000032b40ce: movabs $0x1c3ede68,%rdi   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b40d8: addq   $0x1,0x240(%rdi)
  0x00000000032b40e0: mov    %rsi,%rdx          ;*invokestatic urlNoFragString
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 485)

  0x00000000032b40e3: mov    %rsi,0xb0(%rsp)
  0x00000000032b40eb: nop
  0x00000000032b40ec: nop
  0x00000000032b40ed: nop
  0x00000000032b40ee: nop
  0x00000000032b40ef: callq  0x00000000031d6620  ; OopMap{[152]=Oop [176]=Oop [240]=Oop off=3572}
                                                ;*invokestatic urlNoFragString
                                                ; - sun.misc.URLClassPath::getLoader@67 (line 485)
                                                ;   {static_call}
  0x00000000032b40f4: mov    0x98(%rsp),%rdx
  0x00000000032b40fc: mov    0x1c(%rdx),%esi
  0x00000000032b40ff: shl    $0x3,%rsi          ;*getfield lmap
                                                ; - sun.misc.URLClassPath::getLoader@72 (line 486)

  0x00000000032b4103: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000032b54d9
  0x00000000032b4106: mov    %rsi,%r8
  0x00000000032b4109: movabs $0x1c3ede68,%rdi   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4113: mov    0x8(%r8),%r8d
  0x00000000032b4117: shl    $0x3,%r8
  0x00000000032b411b: cmp    0x258(%rdi),%r8
  0x00000000032b4122: jne    0x00000000032b4131
  0x00000000032b4124: addq   $0x1,0x260(%rdi)
  0x00000000032b412c: jmpq   0x00000000032b4197
  0x00000000032b4131: cmp    0x268(%rdi),%r8
  0x00000000032b4138: jne    0x00000000032b4147
  0x00000000032b413a: addq   $0x1,0x270(%rdi)
  0x00000000032b4142: jmpq   0x00000000032b4197
  0x00000000032b4147: cmpq   $0x0,0x258(%rdi)
  0x00000000032b4152: jne    0x00000000032b416b
  0x00000000032b4154: mov    %r8,0x258(%rdi)
  0x00000000032b415b: movq   $0x1,0x260(%rdi)
  0x00000000032b4166: jmpq   0x00000000032b4197
  0x00000000032b416b: cmpq   $0x0,0x268(%rdi)
  0x00000000032b4176: jne    0x00000000032b418f
  0x00000000032b4178: mov    %r8,0x268(%rdi)
  0x00000000032b417f: movq   $0x1,0x270(%rdi)
  0x00000000032b418a: jmpq   0x00000000032b4197
  0x00000000032b418f: addq   $0x1,0x250(%rdi)
  0x00000000032b4197: mov    %rax,%r8
  0x00000000032b419a: mov    %rsi,%rdx          ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)

  0x00000000032b419d: mov    %rax,0xb8(%rsp)
  0x00000000032b41a5: movabs $0xffffffffffffffff,%rax
  0x00000000032b41af: callq  0x00000000031d63e0  ; OopMap{[176]=Oop [184]=Oop [152]=Oop [240]=Oop off=3764}
                                                ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {virtual_call}
  0x00000000032b41b4: cmp    $0x0,%eax
  0x00000000032b41b7: movabs $0x1c3ede68,%rdx   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b41c1: movabs $0x280,%rsi
  0x00000000032b41cb: je     0x00000000032b41db
  0x00000000032b41d1: movabs $0x290,%rsi
  0x00000000032b41db: mov    (%rdx,%rsi,1),%rdi
  0x00000000032b41df: lea    0x1(%rdi),%rdi
  0x00000000032b41e3: mov    %rdi,(%rdx,%rsi,1)
  0x00000000032b41e7: jne    0x00000000032b4bf9  ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@79 (line 486)

  0x00000000032b41ed: mov    0xb0(%rsp),%rbx
  0x00000000032b41f5: mov    0x98(%rsp),%rdx
  0x00000000032b41fd: mov    %rdx,%rsi
  0x00000000032b4200: movabs $0x1c3ede68,%rdi   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b420a: addq   $0x1,0x2b8(%rdi)
  0x00000000032b4212: movabs $0x1c481f70,%rsi   ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b421c: mov    0xdc(%rsi),%edi
  0x00000000032b4222: add    $0x8,%edi
  0x00000000032b4225: mov    %edi,0xdc(%rsi)
  0x00000000032b422b: movabs $0x1c338ec0,%rsi   ;   {metadata({method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4235: and    $0x7ffff8,%edi
  0x00000000032b423b: cmp    $0x0,%edi
  0x00000000032b423e: je     0x00000000032b54de
  0x00000000032b4244: mov    %rdx,%r8
  0x00000000032b4247: movabs $0x7c003de80,%rdx  ;   {metadata(&apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000032b4251: mov    0x60(%r15),%rax
  0x00000000032b4255: lea    0x18(%rax),%rdi
  0x00000000032b4259: cmp    0x70(%r15),%rdi
  0x00000000032b425d: ja     0x00000000032b54f5
  0x00000000032b4263: mov    %rdi,0x60(%r15)
  0x00000000032b4267: mov    0xa8(%rdx),%rcx
  0x00000000032b426e: mov    %rcx,(%rax)
  0x00000000032b4271: mov    %rdx,%rcx
  0x00000000032b4274: shr    $0x3,%rcx
  0x00000000032b4278: mov    %ecx,0x8(%rax)
  0x00000000032b427b: xor    %rcx,%rcx
  0x00000000032b427e: mov    %ecx,0xc(%rax)
  0x00000000032b4281: xor    %rcx,%rcx
  0x00000000032b4284: mov    %rcx,0x10(%rax)    ;*new  ; - sun.misc.URLClassPath::getLoader@0 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000032b4288: mov    %rax,%rdx
  0x00000000032b428b: movabs $0x1c481f70,%rsi   ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4295: addq   $0x1,0x108(%rsi)
  0x00000000032b429d: movabs $0x1c482170,%rdx   ;   {metadata(method data for {method} {0x000000001c34bc00} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000032b42a7: mov    0xdc(%rdx),%esi
  0x00000000032b42ad: add    $0x8,%esi
  0x00000000032b42b0: mov    %esi,0xdc(%rdx)
  0x00000000032b42b6: movabs $0x1c34bbf8,%rdx   ;   {metadata({method} {0x000000001c34bc00} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000032b42c0: and    $0x7ffff8,%esi
  0x00000000032b42c6: cmp    $0x0,%esi
  0x00000000032b42c9: je     0x00000000032b5502
  0x00000000032b42cf: mov    %r8,%r10
  0x00000000032b42d2: shr    $0x3,%r10
  0x00000000032b42d6: mov    %r10d,0x10(%rax)
  0x00000000032b42da: mov    %rax,%rdx
  0x00000000032b42dd: shr    $0x9,%rdx
  0x00000000032b42e1: movabs $0xef3d000,%rsi
  0x00000000032b42eb: movb   $0x0,(%rdx,%rsi,1)  ;*putfield this$0
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@2 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000032b42ef: mov    %rbx,%r10
  0x00000000032b42f2: shr    $0x3,%r10
  0x00000000032b42f6: mov    %r10d,0xc(%rax)
  0x00000000032b42fa: mov    %rax,%rdx
  0x00000000032b42fd: shr    $0x9,%rdx
  0x00000000032b4301: movb   $0x0,(%rdx,%rsi,1)  ;*putfield val$url
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@7 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000032b4305: mov    %rax,%rdx
  0x00000000032b4308: movabs $0x1c482170,%rsi   ;   {metadata(method data for {method} {0x000000001c34bc00} &apos;&lt;init&gt;&apos; &apos;(Lsun/misc/URLClassPath;Ljava/net/URL;)V&apos; in &apos;sun/misc/URLClassPath$3&apos;)}
  0x00000000032b4312: addq   $0x1,0x108(%rsi)
  0x00000000032b431a: movabs $0x1c281c10,%rdx   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032b4324: mov    0xdc(%rdx),%esi
  0x00000000032b432a: add    $0x8,%esi
  0x00000000032b432d: mov    %esi,0xdc(%rdx)
  0x00000000032b4333: movabs $0x1c150480,%rdx   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032b433d: and    $0x7ffff8,%esi
  0x00000000032b4343: cmp    $0x0,%esi
  0x00000000032b4346: je     0x00000000032b5519
  0x00000000032b434c: movabs $0x1c481f70,%rdx   ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4356: addq   $0x1,0x118(%rdx)
  0x00000000032b435e: mov    %rax,%rdx          ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath::getLoader@9 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000032b4361: nop
  0x00000000032b4362: nop
  0x00000000032b4363: nop
  0x00000000032b4364: nop
  0x00000000032b4365: nop
  0x00000000032b4366: nop
  0x00000000032b4367: callq  0x00000000031d6620  ; OopMap{[184]=Oop [152]=Oop [240]=Oop off=4204}
                                                ;*invokestatic doPrivileged
                                                ; - sun.misc.URLClassPath::getLoader@9 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {static_call}
  0x00000000032b436c: cmp    $0x0,%rax
  0x00000000032b4370: jne    0x00000000032b438b
  0x00000000032b4372: movabs $0x1c481f70,%rdi   ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b437c: orl    $0x100,0x120(%rdi)
  0x00000000032b4386: jmpq   0x00000000032b444c
  0x00000000032b438b: movabs $0x7c003e0a0,%rbx  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00000000032b4395: mov    0x8(%rax),%edi
  0x00000000032b4398: shl    $0x3,%rdi
  0x00000000032b439c: cmp    0x30(%rdi),%rbx
  0x00000000032b43a0: jne    0x00000000032b4430
  0x00000000032b43a6: movabs $0x1c481f70,%rdi   ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b43b0: mov    0x8(%rax),%ebx
  0x00000000032b43b3: shl    $0x3,%rbx
  0x00000000032b43b7: cmp    0x130(%rdi),%rbx
  0x00000000032b43be: jne    0x00000000032b43cd
  0x00000000032b43c0: addq   $0x1,0x138(%rdi)
  0x00000000032b43c8: jmpq   0x00000000032b444c
  0x00000000032b43cd: cmp    0x140(%rdi),%rbx
  0x00000000032b43d4: jne    0x00000000032b43e3
  0x00000000032b43d6: addq   $0x1,0x148(%rdi)
  0x00000000032b43de: jmpq   0x00000000032b444c
  0x00000000032b43e3: cmpq   $0x0,0x130(%rdi)
  0x00000000032b43ee: jne    0x00000000032b4407
  0x00000000032b43f0: mov    %rbx,0x130(%rdi)
  0x00000000032b43f7: movq   $0x1,0x138(%rdi)
  0x00000000032b4402: jmpq   0x00000000032b444c
  0x00000000032b4407: cmpq   $0x0,0x140(%rdi)
  0x00000000032b4412: jne    0x00000000032b442b
  0x00000000032b4414: mov    %rbx,0x140(%rdi)
  0x00000000032b441b: movq   $0x1,0x148(%rdi)
  0x00000000032b4426: jmpq   0x00000000032b444c
  0x00000000032b442b: jmpq   0x00000000032b444c
  0x00000000032b4430: movabs $0x1c481f70,%rdi   ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b443a: subq   $0x1,0x128(%rdi)
  0x00000000032b4442: jmpq   0x00000000032b5530
  0x00000000032b4447: jmpq   0x00000000032b444c
  0x00000000032b444c: mov    %rax,%rsi          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@12 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000032b444f: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000032b5539
  0x00000000032b4452: mov    %rsi,%rdx
  0x00000000032b4455: movabs $0x1c3ede68,%rdi   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b445f: mov    0x8(%rdx),%edx
  0x00000000032b4462: shl    $0x3,%rdx
  0x00000000032b4466: cmp    0x2d0(%rdi),%rdx
  0x00000000032b446d: jne    0x00000000032b447c
  0x00000000032b446f: addq   $0x1,0x2d8(%rdi)
  0x00000000032b4477: jmpq   0x00000000032b44e2
  0x00000000032b447c: cmp    0x2e0(%rdi),%rdx
  0x00000000032b4483: jne    0x00000000032b4492
  0x00000000032b4485: addq   $0x1,0x2e8(%rdi)
  0x00000000032b448d: jmpq   0x00000000032b44e2
  0x00000000032b4492: cmpq   $0x0,0x2d0(%rdi)
  0x00000000032b449d: jne    0x00000000032b44b6
  0x00000000032b449f: mov    %rdx,0x2d0(%rdi)
  0x00000000032b44a6: movq   $0x1,0x2d8(%rdi)
  0x00000000032b44b1: jmpq   0x00000000032b44e2
  0x00000000032b44b6: cmpq   $0x0,0x2e0(%rdi)
  0x00000000032b44c1: jne    0x00000000032b44da
  0x00000000032b44c3: mov    %rdx,0x2e0(%rdi)
  0x00000000032b44ca: movq   $0x1,0x2e8(%rdi)
  0x00000000032b44d5: jmpq   0x00000000032b44e2
  0x00000000032b44da: addq   $0x1,0x2c8(%rdi)
  0x00000000032b44e2: mov    %rsi,%rdx          ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 495)

  0x00000000032b44e5: mov    %rsi,0xc0(%rsp)
  0x00000000032b44ed: movabs $0xffffffffffffffff,%rax
  0x00000000032b44f7: callq  0x00000000031d63e0  ; OopMap{[184]=Oop [152]=Oop [192]=Oop [240]=Oop off=4604}
                                                ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 495)
                                                ;   {virtual_call}
  0x00000000032b44fc: cmp    $0x0,%rax
  0x00000000032b4500: movabs $0x1c3ede68,%r8    ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b450a: movabs $0x2f8,%rdx
  0x00000000032b4514: je     0x00000000032b4524
  0x00000000032b451a: movabs $0x308,%rdx
  0x00000000032b4524: mov    (%r8,%rdx,1),%rsi
  0x00000000032b4528: lea    0x1(%rsi),%rsi
  0x00000000032b452c: mov    %rsi,(%r8,%rdx,1)
  0x00000000032b4530: je     0x00000000032b4564  ;*ifnull
                                                ; - sun.misc.URLClassPath::getLoader@101 (line 496)

  0x00000000032b4536: mov    0x98(%rsp),%rdx
  0x00000000032b453e: movabs $0x1c3ede68,%r8    ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4548: addq   $0x1,0x318(%r8)
  0x00000000032b4550: mov    %rax,%r8
  0x00000000032b4553: mov    0x98(%rsp),%rdx    ;*invokespecial push
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 497)

  0x00000000032b455b: nop
  0x00000000032b455c: nop
  0x00000000032b455d: nop
  0x00000000032b455e: nop
  0x00000000032b455f: callq  0x00000000031d61a0  ; OopMap{[184]=Oop [152]=Oop [192]=Oop [240]=Oop off=4708}
                                                ;*invokespecial push
                                                ; - sun.misc.URLClassPath::getLoader@107 (line 497)
                                                ;   {optimized virtual_call}
  0x00000000032b4564: movabs $0x1c3ede68,%r8    ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b456e: incl   0x328(%r8)         ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@110 (line 502)

  0x00000000032b4575: mov    0x98(%rsp),%rdx
  0x00000000032b457d: mov    0x18(%rdx),%r8d
  0x00000000032b4581: shl    $0x3,%r8           ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@120 (line 504)

  0x00000000032b4585: cmp    (%r8),%rax         ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 504)
                                                ; implicit exception: dispatches to 0x00000000032b553e
  0x00000000032b4588: mov    %r8,%r9
  0x00000000032b458b: movabs $0x1c3ede68,%rsi   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4595: movabs $0x7c0017908,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00000000032b459f: mov    %r10,0x360(%rsi)
  0x00000000032b45a6: addq   $0x1,0x368(%rsi)
  0x00000000032b45ae: mov    0x10(%r8),%r8d     ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 504)

  0x00000000032b45b2: mov    %rdx,%r9
  0x00000000032b45b5: movabs $0x1c3ede68,%rsi   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b45bf: addq   $0x1,0x388(%rsi)
  0x00000000032b45c7: mov    0xb8(%rsp),%r9
  0x00000000032b45cf: mov    %rdx,%rsi
  0x00000000032b45d2: mov    %rsi,%rdx          ;*invokespecial validateLookupCache
                                                ; - sun.misc.URLClassPath::getLoader@127 (line 504)

  0x00000000032b45d5: nop
  0x00000000032b45d6: nop
  0x00000000032b45d7: callq  0x00000000031d61a0  ; OopMap{[184]=Oop [192]=Oop [152]=Oop [240]=Oop off=4828}
                                                ;*invokespecial validateLookupCache
                                                ; - sun.misc.URLClassPath::getLoader@127 (line 504)
                                                ;   {optimized virtual_call}
  0x00000000032b45dc: mov    0x98(%rsp),%rdx
  0x00000000032b45e4: mov    0x18(%rdx),%esi
  0x00000000032b45e7: shl    $0x3,%rsi          ;*getfield loaders
                                                ; - sun.misc.URLClassPath::getLoader@131 (line 505)

  0x00000000032b45eb: cmp    (%rsi),%rax        ;*invokevirtual add
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ; implicit exception: dispatches to 0x00000000032b5543
  0x00000000032b45ee: mov    %rsi,%r8
  0x00000000032b45f1: movabs $0x1c3ede68,%rdi   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b45fb: movabs $0x7c0017908,%r10  ;   {metadata(&apos;java/util/ArrayList&apos;)}
  0x00000000032b4605: mov    %r10,0x3a0(%rdi)
  0x00000000032b460c: addq   $0x1,0x3a8(%rdi)
  0x00000000032b4614: movabs $0x1c396e80,%r8    ;   {metadata(method data for {method} {0x000000001c21db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b461e: mov    0xdc(%r8),%edi
  0x00000000032b4625: add    $0x8,%edi
  0x00000000032b4628: mov    %edi,0xdc(%r8)
  0x00000000032b462f: movabs $0x1c21db68,%r8    ;   {metadata({method} {0x000000001c21db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4639: and    $0x7ffff8,%edi
  0x00000000032b463f: cmp    $0x0,%edi
  0x00000000032b4642: je     0x00000000032b5548
  0x00000000032b4648: mov    0x10(%rsi),%r8d    ;*getfield size
                                                ; - java.util.ArrayList::add@2 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b464c: inc    %r8d
  0x00000000032b464f: mov    %rsi,%rdi
  0x00000000032b4652: movabs $0x1c396e80,%rbx   ;   {metadata(method data for {method} {0x000000001c21db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b465c: addq   $0x1,0x108(%rbx)
  0x00000000032b4664: movabs $0x1c397010,%rdi   ;   {metadata(method data for {method} {0x000000001c21d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b466e: mov    0xdc(%rdi),%ebx
  0x00000000032b4674: add    $0x8,%ebx
  0x00000000032b4677: mov    %ebx,0xdc(%rdi)
  0x00000000032b467d: movabs $0x1c21d0e0,%rdi   ;   {metadata({method} {0x000000001c21d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4687: and    $0x7ffff8,%ebx
  0x00000000032b468d: cmp    $0x0,%ebx
  0x00000000032b4690: je     0x00000000032b555f
  0x00000000032b4696: mov    0x14(%rsi),%edi
  0x00000000032b4699: shl    $0x3,%rdi          ;*getfield elementData
                                                ; - java.util.ArrayList::ensureCapacityInternal@1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b469d: movabs $0x76b786d90,%r10  ;   {oop(a &apos;java/lang/Object&apos;[0] )}
  0x00000000032b46a7: cmp    %r10,%rdi
  0x00000000032b46aa: movabs $0x1c397010,%rbx   ;   {metadata(method data for {method} {0x000000001c21d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b46b4: movabs $0x108,%rax
  0x00000000032b46be: jne    0x00000000032b46ce
  0x00000000032b46c4: movabs $0x118,%rax
  0x00000000032b46ce: mov    (%rbx,%rax,1),%rcx
  0x00000000032b46d2: lea    0x1(%rcx),%rcx
  0x00000000032b46d6: mov    %rcx,(%rbx,%rax,1)
  0x00000000032b46da: jne    0x00000000032b4775  ;*if_acmpne
                                                ; - java.util.ArrayList::ensureCapacityInternal@7 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b46e0: movabs $0x1c397010,%rbx   ;   {metadata(method data for {method} {0x000000001c21d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b46ea: addq   $0x1,0x128(%rbx)
  0x00000000032b46f2: movabs $0x1c387b08,%rbx   ;   {metadata(method data for {method} {0x000000001c242850} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032b46fc: mov    0xdc(%rbx),%eax
  0x00000000032b4702: add    $0x8,%eax
  0x00000000032b4705: mov    %eax,0xdc(%rbx)
  0x00000000032b470b: movabs $0x1c242848,%rbx   ;   {metadata({method} {0x000000001c242850} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032b4715: and    $0x7ffff8,%eax
  0x00000000032b471b: cmp    $0x0,%eax
  0x00000000032b471e: je     0x00000000032b5576
  0x00000000032b4724: cmp    $0xa,%r8d
  0x00000000032b4728: movabs $0x1c387b08,%rbx   ;   {metadata(method data for {method} {0x000000001c242850} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032b4732: movabs $0x108,%rax
  0x00000000032b473c: jg     0x00000000032b474c
  0x00000000032b4742: movabs $0x118,%rax
  0x00000000032b474c: mov    (%rbx,%rax,1),%rcx
  0x00000000032b4750: lea    0x1(%rcx),%rcx
  0x00000000032b4754: mov    %rcx,(%rbx,%rax,1)
  0x00000000032b4758: jg     0x00000000032b4775  ;*if_icmplt
                                                ; - java.lang.Math::max@2 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b475e: movabs $0x1c387b08,%r8    ;   {metadata(method data for {method} {0x000000001c242850} &apos;max&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00000000032b4768: incl   0x128(%r8)
  0x00000000032b476f: mov    $0xa,%r8d          ;*goto
                                                ; - java.lang.Math::max@6 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b4775: mov    %rsi,%rbx
  0x00000000032b4778: movabs $0x1c397010,%rax   ;   {metadata(method data for {method} {0x000000001c21d0e8} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4782: addq   $0x1,0x138(%rax)
  0x00000000032b478a: movabs $0x1c3971a0,%rbx   ;   {metadata(method data for {method} {0x000000001c21d198} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4794: mov    0xdc(%rbx),%eax
  0x00000000032b479a: add    $0x8,%eax
  0x00000000032b479d: mov    %eax,0xdc(%rbx)
  0x00000000032b47a3: movabs $0x1c21d190,%rbx   ;   {metadata({method} {0x000000001c21d198} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b47ad: and    $0x7ffff8,%eax
  0x00000000032b47b3: cmp    $0x0,%eax
  0x00000000032b47b6: je     0x00000000032b558d
  0x00000000032b47bc: mov    0xc(%rsi),%ebx     ;*getfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@2 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b47bf: inc    %ebx
  0x00000000032b47c1: mov    %ebx,0xc(%rsi)     ;*putfield modCount
                                                ; - java.util.ArrayList::ensureExplicitCapacity@7 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b47c4: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ; implicit exception: dispatches to 0x00000000032b55a4
  0x00000000032b47c7: mov    %r8,%rbx
  0x00000000032b47ca: sub    %edi,%ebx
  0x00000000032b47cc: cmp    $0x0,%ebx
  0x00000000032b47cf: movabs $0x1c3971a0,%rdi   ;   {metadata(method data for {method} {0x000000001c21d198} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b47d9: movabs $0x108,%rbx
  0x00000000032b47e3: jle    0x00000000032b47f3
  0x00000000032b47e9: movabs $0x118,%rbx
  0x00000000032b47f3: mov    (%rdi,%rbx,1),%rax
  0x00000000032b47f7: lea    0x1(%rax),%rax
  0x00000000032b47fb: mov    %rax,(%rdi,%rbx,1)
  0x00000000032b47ff: jg     0x00000000032b4812  ;*ifle
                                                ; - java.util.ArrayList::ensureExplicitCapacity@17 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b4805: mov    %rsi,0xc8(%rsp)
  0x00000000032b480d: jmpq   0x00000000032b483c  ;*return
                                                ; - java.util.ArrayList::ensureExplicitCapacity@25 (line 236)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b4812: mov    %rsi,%rdi
  0x00000000032b4815: movabs $0x1c3971a0,%rbx   ;   {metadata(method data for {method} {0x000000001c21d198} &apos;ensureExplicitCapacity&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b481f: addq   $0x1,0x128(%rbx)
  0x00000000032b4827: mov    %rsi,%rdx          ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b482a: mov    %rsi,0xc8(%rsp)
  0x00000000032b4832: nop
  0x00000000032b4833: nop
  0x00000000032b4834: nop
  0x00000000032b4835: nop
  0x00000000032b4836: nop
  0x00000000032b4837: callq  0x00000000031d61a0  ; OopMap{[184]=Oop [192]=Oop [152]=Oop [200]=Oop [240]=Oop off=5436}
                                                ;*invokespecial grow
                                                ; - java.util.ArrayList::ensureExplicitCapacity@22 (line 235)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {optimized virtual_call}
  0x00000000032b483c: mov    0xc8(%rsp),%rsi
  0x00000000032b4844: mov    0xc0(%rsp),%r9
  0x00000000032b484c: mov    0x14(%rsi),%eax
  0x00000000032b484f: shl    $0x3,%rax          ;*getfield elementData
                                                ; - java.util.ArrayList::add@11 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b4853: mov    0x10(%rsi),%edx    ;*getfield size
                                                ; - java.util.ArrayList::add@16 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b4856: mov    %rdx,%r8
  0x00000000032b4859: inc    %r8d
  0x00000000032b485c: mov    %r8d,0x10(%rsi)    ;*putfield size
                                                ; - java.util.ArrayList::add@22 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b4860: movslq %edx,%r8
  0x00000000032b4863: lea    0x10(%rax,%r8,4),%r8
  0x00000000032b4868: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00000000032b55a9
  0x00000000032b486b: jae    0x00000000032b55b3
  0x00000000032b4871: cmp    $0x0,%r9
  0x00000000032b4875: jne    0x00000000032b4890
  0x00000000032b4877: movabs $0x1c396e80,%rdx   ;   {metadata(method data for {method} {0x000000001c21db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4881: orl    $0x100,0x110(%rdx)
  0x00000000032b488b: jmpq   0x00000000032b4976
  0x00000000032b4890: mov    0x8(%rax),%eax     ; implicit exception: dispatches to 0x00000000032b55bc
  0x00000000032b4893: shl    $0x3,%rax
  0x00000000032b4897: mov    0x8(%r9),%edx
  0x00000000032b489b: shl    $0x3,%rdx
  0x00000000032b489f: mov    0xf0(%rax),%rax
  0x00000000032b48a6: cmp    %rax,%rdx
  0x00000000032b48a9: je     0x00000000032b48d7
  0x00000000032b48af: mov    0xc(%rax),%esi
  0x00000000032b48b2: cmp    (%rdx,%rsi,1),%rax
  0x00000000032b48b6: je     0x00000000032b48d7
  0x00000000032b48bc: cmp    $0x18,%esi
  0x00000000032b48bf: jne    0x00000000032b495f
  0x00000000032b48c5: push   %rdx
  0x00000000032b48c6: push   %rax
  0x00000000032b48c7: callq  0x000000000328fce0  ;   {runtime_call}
  0x00000000032b48cc: pop    %rdx
  0x00000000032b48cd: pop    %rax
  0x00000000032b48ce: cmp    $0x0,%eax
  0x00000000032b48d1: je     0x00000000032b495f
  0x00000000032b48d7: movabs $0x1c396e80,%rdx   ;   {metadata(method data for {method} {0x000000001c21db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b48e1: mov    0x8(%r9),%eax
  0x00000000032b48e5: shl    $0x3,%rax
  0x00000000032b48e9: cmp    0x120(%rdx),%rax
  0x00000000032b48f0: jne    0x00000000032b48ff
  0x00000000032b48f2: addq   $0x1,0x128(%rdx)
  0x00000000032b48fa: jmpq   0x00000000032b4976
  0x00000000032b48ff: cmp    0x130(%rdx),%rax
  0x00000000032b4906: jne    0x00000000032b4915
  0x00000000032b4908: addq   $0x1,0x138(%rdx)
  0x00000000032b4910: jmpq   0x00000000032b4976
  0x00000000032b4915: cmpq   $0x0,0x120(%rdx)
  0x00000000032b4920: jne    0x00000000032b4939
  0x00000000032b4922: mov    %rax,0x120(%rdx)
  0x00000000032b4929: movq   $0x1,0x128(%rdx)
  0x00000000032b4934: jmpq   0x00000000032b4976
  0x00000000032b4939: cmpq   $0x0,0x130(%rdx)
  0x00000000032b4944: jne    0x00000000032b495d
  0x00000000032b4946: mov    %rax,0x130(%rdx)
  0x00000000032b494d: movq   $0x1,0x138(%rdx)
  0x00000000032b4958: jmpq   0x00000000032b4976
  0x00000000032b495d: jmp    0x00000000032b4976
  0x00000000032b495f: movabs $0x1c396e80,%rdx   ;   {metadata(method data for {method} {0x000000001c21db70} &apos;add&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4969: subq   $0x1,0x118(%rdx)
  0x00000000032b4971: jmpq   0x00000000032b55c1
  0x00000000032b4976: mov    %r9,%r10
  0x00000000032b4979: shr    $0x3,%r10
  0x00000000032b497d: mov    %r10d,(%r8)
  0x00000000032b4980: shr    $0x9,%r8
  0x00000000032b4984: movabs $0xef3d000,%rax
  0x00000000032b498e: movb   $0x0,(%r8,%rax,1)  ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)

  0x00000000032b4993: mov    0xb8(%rsp),%rax
  0x00000000032b499b: mov    0x98(%rsp),%rdx
  0x00000000032b49a3: jmpq   0x00000000032b4ae6  ;*pop
                                                ; - sun.misc.URLClassPath::getLoader@139 (line 505)

  0x00000000032b49a8: mov    0x2a8(%r15),%rax
  0x00000000032b49af: xor    %r10,%r10
  0x00000000032b49b2: mov    %r10,0x2a8(%r15)
  0x00000000032b49b9: xor    %r10,%r10
  0x00000000032b49bc: mov    %r10,0x2b0(%r15)
  0x00000000032b49c3: mov    %rax,%rdx
  0x00000000032b49c6: movabs $0x1c481f70,%r8    ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b49d0: movabs $0x7c0047040,%r10  ;   {metadata(&apos;java/security/PrivilegedActionException&apos;)}
  0x00000000032b49da: mov    %r10,0x160(%r8)
  0x00000000032b49e1: addq   $0x1,0x168(%r8)
  0x00000000032b49e9: mov    0x20(%rax),%eax
  0x00000000032b49ec: shl    $0x3,%rax          ;*getfield exception
                                                ; - java.security.PrivilegedActionException::getException@1 (line 86)
                                                ; - sun.misc.URLClassPath::getLoader@18 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000032b49f0: cmp    $0x0,%rax
  0x00000000032b49f4: jne    0x00000000032b4a10
  0x00000000032b49f6: movabs $0x1c481f70,%r8    ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4a00: orl    $0x100,0x180(%r8)
  0x00000000032b4a0b: jmpq   0x00000000032b4ad3
  0x00000000032b4a10: movabs $0x7c0046b30,%r9   ;   {metadata(&apos;java/io/IOException&apos;)}
  0x00000000032b4a1a: mov    0x8(%rax),%r8d
  0x00000000032b4a1e: shl    $0x3,%r8
  0x00000000032b4a22: cmp    0x40(%r8),%r9
  0x00000000032b4a26: jne    0x00000000032b4ab7
  0x00000000032b4a2c: movabs $0x1c481f70,%r8    ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4a36: mov    0x8(%rax),%r9d
  0x00000000032b4a3a: shl    $0x3,%r9
  0x00000000032b4a3e: cmp    0x190(%r8),%r9
  0x00000000032b4a45: jne    0x00000000032b4a54
  0x00000000032b4a47: addq   $0x1,0x198(%r8)
  0x00000000032b4a4f: jmpq   0x00000000032b4ad3
  0x00000000032b4a54: cmp    0x1a0(%r8),%r9
  0x00000000032b4a5b: jne    0x00000000032b4a6a
  0x00000000032b4a5d: addq   $0x1,0x1a8(%r8)
  0x00000000032b4a65: jmpq   0x00000000032b4ad3
  0x00000000032b4a6a: cmpq   $0x0,0x190(%r8)
  0x00000000032b4a75: jne    0x00000000032b4a8e
  0x00000000032b4a77: mov    %r9,0x190(%r8)
  0x00000000032b4a7e: movq   $0x1,0x198(%r8)
  0x00000000032b4a89: jmpq   0x00000000032b4ad3
  0x00000000032b4a8e: cmpq   $0x0,0x1a0(%r8)
  0x00000000032b4a99: jne    0x00000000032b4ab2
  0x00000000032b4a9b: mov    %r9,0x1a0(%r8)
  0x00000000032b4aa2: movq   $0x1,0x1a8(%r8)
  0x00000000032b4aad: jmpq   0x00000000032b4ad3
  0x00000000032b4ab2: jmpq   0x00000000032b4ad3
  0x00000000032b4ab7: movabs $0x1c481f70,%r8    ;   {metadata(method data for {method} {0x000000001c338ec8} &apos;getLoader&apos; &apos;(Ljava/net/URL;)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4ac1: subq   $0x1,0x188(%r8)
  0x00000000032b4ac9: jmpq   0x00000000032b55ca
  0x00000000032b4ace: jmpq   0x00000000032b4ad3  ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@21 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000032b4ad3: cmp    (%rax),%rax        ; OopMap{[184]=Oop [152]=Oop [240]=Oop rax=Oop off=6102}
                                                ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@24 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ; implicit exception: dispatches to 0x00000000032b55d3
  0x00000000032b4ad6: movabs $0x32b4ad6,%rdx    ;   {section_word}
  0x00000000032b4ae0: callq  0x000000000328c760  ;   {runtime_call}
  0x00000000032b4ae5: nop                       ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@24 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)

  0x00000000032b4ae6: mov    0x1c(%rdx),%esi
  0x00000000032b4ae9: shl    $0x3,%rsi          ;*getfield lmap
                                                ; - sun.misc.URLClassPath::getLoader@141 (line 506)

  0x00000000032b4aed: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000032b55d8
  0x00000000032b4af0: mov    %rsi,%r8
  0x00000000032b4af3: movabs $0x1c3ede68,%rdi   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4afd: mov    0x8(%r8),%r8d
  0x00000000032b4b01: shl    $0x3,%r8
  0x00000000032b4b05: cmp    0x3d0(%rdi),%r8
  0x00000000032b4b0c: jne    0x00000000032b4b1b
  0x00000000032b4b0e: addq   $0x1,0x3d8(%rdi)
  0x00000000032b4b16: jmpq   0x00000000032b4b81
  0x00000000032b4b1b: cmp    0x3e0(%rdi),%r8
  0x00000000032b4b22: jne    0x00000000032b4b31
  0x00000000032b4b24: addq   $0x1,0x3e8(%rdi)
  0x00000000032b4b2c: jmpq   0x00000000032b4b81
  0x00000000032b4b31: cmpq   $0x0,0x3d0(%rdi)
  0x00000000032b4b3c: jne    0x00000000032b4b55
  0x00000000032b4b3e: mov    %r8,0x3d0(%rdi)
  0x00000000032b4b45: movq   $0x1,0x3d8(%rdi)
  0x00000000032b4b50: jmpq   0x00000000032b4b81
  0x00000000032b4b55: cmpq   $0x0,0x3e0(%rdi)
  0x00000000032b4b60: jne    0x00000000032b4b79
  0x00000000032b4b62: mov    %r8,0x3e0(%rdi)
  0x00000000032b4b69: movq   $0x1,0x3e8(%rdi)
  0x00000000032b4b74: jmpq   0x00000000032b4b81
  0x00000000032b4b79: addq   $0x1,0x3c8(%rdi)
  0x00000000032b4b81: mov    %rax,%r8
  0x00000000032b4b84: mov    %rsi,%rdx          ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)

  0x00000000032b4b87: nop
  0x00000000032b4b88: nop
  0x00000000032b4b89: nop
  0x00000000032b4b8a: nop
  0x00000000032b4b8b: nop
  0x00000000032b4b8c: nop
  0x00000000032b4b8d: movabs $0xffffffffffffffff,%rax
  0x00000000032b4b97: callq  0x00000000031d63e0  ; OopMap{[152]=Oop [240]=Oop off=6300}
                                                ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {virtual_call}
  0x00000000032b4b9c: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4ba6: mov    0xe0(%rax),%edx
  0x00000000032b4bac: add    $0x8,%edx
  0x00000000032b4baf: mov    %edx,0xe0(%rax)
  0x00000000032b4bb5: movabs $0x1c338e08,%rax   ;   {metadata({method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4bbf: and    $0xfff8,%edx
  0x00000000032b4bc5: cmp    $0x0,%edx
  0x00000000032b4bc8: je     0x00000000032b55dd  ; OopMap{[152]=Oop [240]=Oop off=6350}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@151 (line 507)

  0x00000000032b4bce: test   %eax,-0x9c4ad4(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032b4bd4: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4bde: incl   0x3f8(%rax)
  0x00000000032b4be4: mov    0x94(%rsp),%r8d
  0x00000000032b4bec: mov    0x98(%rsp),%rdx
  0x00000000032b4bf4: jmpq   0x00000000032b3478  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@151 (line 507)

  0x00000000032b4bf9: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4c03: mov    0xe0(%rax),%edx
  0x00000000032b4c09: add    $0x8,%edx
  0x00000000032b4c0c: mov    %edx,0xe0(%rax)
  0x00000000032b4c12: movabs $0x1c338e08,%rax   ;   {metadata({method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4c1c: and    $0xfff8,%edx
  0x00000000032b4c22: cmp    $0x0,%edx
  0x00000000032b4c25: je     0x00000000032b55f4  ; OopMap{[152]=Oop [240]=Oop off=6443}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 487)

  0x00000000032b4c2b: test   %eax,-0x9c4b31(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032b4c31: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4c3b: incl   0x2a0(%rax)
  0x00000000032b4c41: mov    0x94(%rsp),%r8d
  0x00000000032b4c49: mov    0x98(%rsp),%rdx
  0x00000000032b4c51: jmpq   0x00000000032b3478  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 487)

  0x00000000032b4c56: mov    0x2a8(%r15),%rax
  0x00000000032b4c5d: xor    %r10,%r10
  0x00000000032b4c60: mov    %r10,0x2a8(%r15)
  0x00000000032b4c67: xor    %r10,%r10
  0x00000000032b4c6a: mov    %r10,0x2b0(%r15)
  0x00000000032b4c71: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4c7b: mov    0xe0(%rax),%edx
  0x00000000032b4c81: add    $0x8,%edx
  0x00000000032b4c84: mov    %edx,0xe0(%rax)
  0x00000000032b4c8a: movabs $0x1c338e08,%rax   ;   {metadata({method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4c94: and    $0xfff8,%edx
  0x00000000032b4c9a: cmp    $0x0,%edx
  0x00000000032b4c9d: je     0x00000000032b560b  ; OopMap{[152]=Oop [240]=Oop off=6563}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 501)

  0x00000000032b4ca3: test   %eax,-0x9c4ba9(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032b4ca9: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4cb3: incl   0x340(%rax)
  0x00000000032b4cb9: mov    0x94(%rsp),%r8d
  0x00000000032b4cc1: mov    0x98(%rsp),%rdx
  0x00000000032b4cc9: jmpq   0x00000000032b3478  ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 501)

  0x00000000032b4cce: movabs $0x1c3ede68,%rax   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4cd8: incl   0x410(%rax)        ;*ifeq
                                                ; - sun.misc.URLClassPath::getLoader@157 (line 508)

  0x00000000032b4cde: mov    0x94(%rsp),%r8d
  0x00000000032b4ce6: mov    %rsi,%rax
  0x00000000032b4ce9: movabs $0x1c3ede68,%rdx   ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4cf3: addq   $0x1,0x510(%rdx)
  0x00000000032b4cfb: movabs $0x1c3ee410,%rax   ;   {metadata(method data for {method} {0x000000001c21da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4d05: mov    0xdc(%rax),%edx
  0x00000000032b4d0b: add    $0x8,%edx
  0x00000000032b4d0e: mov    %edx,0xdc(%rax)
  0x00000000032b4d14: movabs $0x1c21da10,%rax   ;   {metadata({method} {0x000000001c21da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4d1e: and    $0x7ffff8,%edx
  0x00000000032b4d24: cmp    $0x0,%edx
  0x00000000032b4d27: je     0x00000000032b5622
  0x00000000032b4d2d: mov    %rsi,%rax
  0x00000000032b4d30: movabs $0x1c3ee410,%rdx   ;   {metadata(method data for {method} {0x000000001c21da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4d3a: addq   $0x1,0x108(%rdx)
  0x00000000032b4d42: movabs $0x1c3ee5a0,%rax   ;   {metadata(method data for {method} {0x000000001c21e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4d4c: mov    0xdc(%rax),%edx
  0x00000000032b4d52: add    $0x8,%edx
  0x00000000032b4d55: mov    %edx,0xdc(%rax)
  0x00000000032b4d5b: movabs $0x1c21e2f0,%rax   ;   {metadata({method} {0x000000001c21e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4d65: and    $0x7ffff8,%edx
  0x00000000032b4d6b: cmp    $0x0,%edx
  0x00000000032b4d6e: je     0x00000000032b5639
  0x00000000032b4d74: cmp    %edi,%r8d
  0x00000000032b4d77: movabs $0x1c3ee5a0,%rax   ;   {metadata(method data for {method} {0x000000001c21e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4d81: movabs $0x108,%rdx
  0x00000000032b4d8b: jl     0x00000000032b4d9b
  0x00000000032b4d91: movabs $0x118,%rdx
  0x00000000032b4d9b: mov    (%rax,%rdx,1),%rdi
  0x00000000032b4d9f: lea    0x1(%rdi),%rdi
  0x00000000032b4da3: mov    %rdi,(%rax,%rdx,1)
  0x00000000032b4da7: jge    0x00000000032b5009  ;*if_icmplt
                                                ; - java.util.ArrayList::rangeCheck@5 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000032b4dad: mov    %rsi,%rax
  0x00000000032b4db0: movabs $0x1c3ee410,%rdx   ;   {metadata(method data for {method} {0x000000001c21da18} &apos;get&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4dba: addq   $0x1,0x128(%rdx)
  0x00000000032b4dc2: movabs $0x1c3ee708,%rax   ;   {metadata(method data for {method} {0x000000001c21d978} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4dcc: mov    0xdc(%rax),%edx
  0x00000000032b4dd2: add    $0x8,%edx
  0x00000000032b4dd5: mov    %edx,0xdc(%rax)
  0x00000000032b4ddb: movabs $0x1c21d970,%rax   ;   {metadata({method} {0x000000001c21d978} &apos;elementData&apos; &apos;(I)Ljava/lang/Object;&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b4de5: and    $0x7ffff8,%edx
  0x00000000032b4deb: cmp    $0x0,%edx
  0x00000000032b4dee: je     0x00000000032b5650
  0x00000000032b4df4: mov    0x14(%rsi),%eax
  0x00000000032b4df7: shl    $0x3,%rax          ;*getfield elementData
                                                ; - java.util.ArrayList::elementData@1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000032b4dfb: movslq %r8d,%rdx
  0x00000000032b4dfe: cmp    0xc(%rax),%r8d     ; implicit exception: dispatches to 0x00000000032b5667
  0x00000000032b4e02: jae    0x00000000032b5671
  0x00000000032b4e08: mov    0x10(%rax,%rdx,4),%eax
  0x00000000032b4e0c: shl    $0x3,%rax          ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000032b4e10: cmp    $0x0,%rax
  0x00000000032b4e14: jne    0x00000000032b4e30
  0x00000000032b4e16: movabs $0x1c3ede68,%r8    ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4e20: orl    $0x100,0x528(%r8)
  0x00000000032b4e2b: jmpq   0x00000000032b4ef2
  0x00000000032b4e30: movabs $0x7c003e0a0,%rsi  ;   {metadata(&apos;sun/misc/URLClassPath$Loader&apos;)}
  0x00000000032b4e3a: mov    0x8(%rax),%r8d
  0x00000000032b4e3e: shl    $0x3,%r8
  0x00000000032b4e42: cmp    0x30(%r8),%rsi
  0x00000000032b4e46: jne    0x00000000032b4ed6
  0x00000000032b4e4c: movabs $0x1c3ede68,%r8    ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4e56: mov    0x8(%rax),%esi
  0x00000000032b4e59: shl    $0x3,%rsi
  0x00000000032b4e5d: cmp    0x538(%r8),%rsi
  0x00000000032b4e64: jne    0x00000000032b4e73
  0x00000000032b4e66: addq   $0x1,0x540(%r8)
  0x00000000032b4e6e: jmpq   0x00000000032b4ef2
  0x00000000032b4e73: cmp    0x548(%r8),%rsi
  0x00000000032b4e7a: jne    0x00000000032b4e89
  0x00000000032b4e7c: addq   $0x1,0x550(%r8)
  0x00000000032b4e84: jmpq   0x00000000032b4ef2
  0x00000000032b4e89: cmpq   $0x0,0x538(%r8)
  0x00000000032b4e94: jne    0x00000000032b4ead
  0x00000000032b4e96: mov    %rsi,0x538(%r8)
  0x00000000032b4e9d: movq   $0x1,0x540(%r8)
  0x00000000032b4ea8: jmpq   0x00000000032b4ef2
  0x00000000032b4ead: cmpq   $0x0,0x548(%r8)
  0x00000000032b4eb8: jne    0x00000000032b4ed1
  0x00000000032b4eba: mov    %rsi,0x548(%r8)
  0x00000000032b4ec1: movq   $0x1,0x550(%r8)
  0x00000000032b4ecc: jmpq   0x00000000032b4ef2
  0x00000000032b4ed1: jmpq   0x00000000032b4ef2
  0x00000000032b4ed6: movabs $0x1c3ede68,%r8    ;   {metadata(method data for {method} {0x000000001c338e10} &apos;getLoader&apos; &apos;(I)Lsun/misc/URLClassPath$Loader;&apos; in &apos;sun/misc/URLClassPath&apos;)}
  0x00000000032b4ee0: subq   $0x1,0x530(%r8)
  0x00000000032b4ee8: jmpq   0x00000000032b567a
  0x00000000032b4eed: jmpq   0x00000000032b4ef2
  0x00000000032b4ef2: mov    %rax,%rdx          ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 511)

  0x00000000032b4ef5: lea    0xe8(%rsp),%rax
  0x00000000032b4efd: mov    0x8(%rax),%rsi
  0x00000000032b4f01: mov    (%rsi),%r8
  0x00000000032b4f04: and    $0x7,%r8
  0x00000000032b4f08: cmp    $0x5,%r8
  0x00000000032b4f0c: je     0x00000000032b4f29
  0x00000000032b4f12: mov    (%rax),%r8
  0x00000000032b4f15: test   %r8,%r8
  0x00000000032b4f18: je     0x00000000032b4f29
  0x00000000032b4f1e: lock cmpxchg %r8,(%rsi)
  0x00000000032b4f23: jne    0x00000000032b5683
  0x00000000032b4f29: mov    %rdx,%rax
  0x00000000032b4f2c: add    $0x140,%rsp
  0x00000000032b4f33: pop    %rbp
  0x00000000032b4f34: test   %eax,-0x9c4e3a(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b4f3a: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@196 (line 511)

  0x00000000032b4f3b: lea    0xf8(%rsp),%rax
  0x00000000032b4f43: mov    0x8(%rax),%r8
  0x00000000032b4f47: mov    (%r8),%rdx
  0x00000000032b4f4a: and    $0x7,%rdx
  0x00000000032b4f4e: cmp    $0x5,%rdx
  0x00000000032b4f52: je     0x00000000032b4f6f
  0x00000000032b4f58: mov    (%rax),%rdx
  0x00000000032b4f5b: test   %rdx,%rdx
  0x00000000032b4f5e: je     0x00000000032b4f6f
  0x00000000032b4f64: lock cmpxchg %rdx,(%r8)
  0x00000000032b4f69: jne    0x00000000032b5699  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@41 (line 477)

  0x00000000032b4f6f: lea    0xe8(%rsp),%rax
  0x00000000032b4f77: mov    0x8(%rax),%r8
  0x00000000032b4f7b: mov    (%r8),%rdx
  0x00000000032b4f7e: and    $0x7,%rdx
  0x00000000032b4f82: cmp    $0x5,%rdx
  0x00000000032b4f86: je     0x00000000032b4fa3
  0x00000000032b4f8c: mov    (%rax),%rdx
  0x00000000032b4f8f: test   %rdx,%rdx
  0x00000000032b4f92: je     0x00000000032b4fa3
  0x00000000032b4f98: lock cmpxchg %rdx,(%r8)
  0x00000000032b4f9d: jne    0x00000000032b56af
  0x00000000032b4fa3: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000032b4fad: add    $0x140,%rsp
  0x00000000032b4fb4: pop    %rbp
  0x00000000032b4fb5: test   %eax,-0x9c4ebb(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b4fbb: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@42 (line 477)

  0x00000000032b4fbc: lea    0xe8(%rsp),%rax
  0x00000000032b4fc4: mov    0x8(%rax),%r8
  0x00000000032b4fc8: mov    (%r8),%rdx
  0x00000000032b4fcb: and    $0x7,%rdx
  0x00000000032b4fcf: cmp    $0x5,%rdx
  0x00000000032b4fd3: je     0x00000000032b4ff0
  0x00000000032b4fd9: mov    (%rax),%rdx
  0x00000000032b4fdc: test   %rdx,%rdx
  0x00000000032b4fdf: je     0x00000000032b4ff0
  0x00000000032b4fe5: lock cmpxchg %rdx,(%r8)
  0x00000000032b4fea: jne    0x00000000032b56c5
  0x00000000032b4ff0: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00000000032b4ffa: add    $0x140,%rsp
  0x00000000032b5001: pop    %rbp
  0x00000000032b5002: test   %eax,-0x9c4f08(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b5008: retq                      ;*areturn
                                                ; - sun.misc.URLClassPath::getLoader@8 (line 468)

  0x00000000032b5009: nopl   0x0(%rax)
  0x00000000032b5010: jmpq   0x00000000032b56ea  ;   {no_reloc}
  0x00000000032b5015: add    %al,(%rax)
  0x00000000032b5017: add    %al,(%rax)
  0x00000000032b5019: add    %ch,%cl
  0x00000000032b501b: (bad)  
  0x00000000032b501c: (bad)  
  0x00000000032b501d: add    %al,(%rax)         ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000032b501f: mov    %rsi,%rdx
  0x00000000032b5022: movabs $0x1c3ee5a0,%rdi   ;   {metadata(method data for {method} {0x000000001c21e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b502c: addq   $0x1,0x128(%rdi)
  0x00000000032b5034: mov    %r8,%rdi
  0x00000000032b5037: mov    %rdi,%r8
  0x00000000032b503a: mov    %rsi,%rdx          ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000032b503d: mov    %rsi,0xd8(%rsp)
  0x00000000032b5045: mov    %rax,0xd0(%rsp)
  0x00000000032b504d: nop
  0x00000000032b504e: nop
  0x00000000032b504f: callq  0x00000000031d61a0  ; OopMap{[208]=Oop [216]=Oop [240]=Oop off=7508}
                                                ;*invokespecial outOfBoundsMsg
                                                ; - java.util.ArrayList::rangeCheck@14 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {optimized virtual_call}
  0x00000000032b5054: mov    0xd0(%rsp),%r8
  0x00000000032b505c: movabs $0x1c3ee5a0,%rdx   ;   {metadata(method data for {method} {0x000000001c21e2f8} &apos;rangeCheck&apos; &apos;(I)V&apos; in &apos;java/util/ArrayList&apos;)}
  0x00000000032b5066: addq   $0x1,0x138(%rdx)
  0x00000000032b506e: mov    %rax,%r8
  0x00000000032b5071: mov    0xd0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000032b5079: nop
  0x00000000032b507a: nop
  0x00000000032b507b: nop
  0x00000000032b507c: nop
  0x00000000032b507d: nop
  0x00000000032b507e: nop
  0x00000000032b507f: callq  0x00000000031d61a0  ; OopMap{[208]=Oop [216]=Oop [240]=Oop off=7556}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.ArrayList::rangeCheck@17 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {optimized virtual_call}
  0x00000000032b5084: mov    0xd0(%rsp),%rax
  0x00000000032b508c: jmpq   0x00000000032b581e  ;*athrow
                                                ; - java.util.ArrayList::rangeCheck@20 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)

  0x00000000032b5091: mov    %rdi,0x88(%rsp)
  0x00000000032b5099: mov    %rsi,0xa0(%rsp)
  0x00000000032b50a1: nopl   0x0(%rax)
  0x00000000032b50a8: jmpq   0x00000000032b5710  ;   {no_reloc}
  0x00000000032b50ad: add    %al,(%rax)
  0x00000000032b50af: add    %al,(%rax)
  0x00000000032b50b1: add    %ch,%cl
  0x00000000032b50b3: movslq (%rsi),%eax
  0x00000000032b50b5: add    %al,(%rax)         ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b50b7: mov    %rax,%rdx
  0x00000000032b50ba: movabs $0x1c481360,%rsi   ;   {metadata(method data for {method} {0x000000001c2187c0} &apos;peek&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/util/Stack&apos;)}
  0x00000000032b50c4: addq   $0x1,0x158(%rsi)
  0x00000000032b50cc: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b50cf: mov    %rax,0xe0(%rsp)
  0x00000000032b50d7: callq  0x00000000031d61a0  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [224]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=7644}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Stack::peek@13 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {optimized virtual_call}
  0x00000000032b50dc: mov    0xe0(%rsp),%rax    ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=7652}
                                                ;*athrow
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b50e4: movabs $0x32b50e4,%rdx    ;   {section_word}
  0x00000000032b50ee: callq  0x000000000328c760  ;   {runtime_call}
  0x00000000032b50f3: nop                       ;*athrow
                                                ; - java.util.Stack::peek@16 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b50f4: mov    0x2a8(%r15),%rax
  0x00000000032b50fb: xor    %r10,%r10
  0x00000000032b50fe: mov    %r10,0x2a8(%r15)
  0x00000000032b5105: xor    %r10,%r10
  0x00000000032b5108: mov    %r10,0x2b0(%r15)
  0x00000000032b510f: mov    %rax,%rdx
  0x00000000032b5112: lea    0x128(%rsp),%rax
  0x00000000032b511a: mov    0x8(%rax),%rdi
  0x00000000032b511e: mov    (%rdi),%rsi
  0x00000000032b5121: and    $0x7,%rsi
  0x00000000032b5125: cmp    $0x5,%rsi
  0x00000000032b5129: je     0x00000000032b5146
  0x00000000032b512f: mov    (%rax),%rsi
  0x00000000032b5132: test   %rsi,%rsi
  0x00000000032b5135: je     0x00000000032b5146
  0x00000000032b513b: lock cmpxchg %rsi,(%rdi)
  0x00000000032b5140: jne    0x00000000032b5727  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b5146: mov    %rdx,%rax          ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop rax=Oop off=7753}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b5149: movabs $0x32b5149,%rdx    ;   {section_word}
  0x00000000032b5153: callq  0x000000000328c760  ;   {runtime_call}
  0x00000000032b5158: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b5159: mov    0x2a8(%r15),%rax
  0x00000000032b5160: xor    %r10,%r10
  0x00000000032b5163: mov    %r10,0x2a8(%r15)
  0x00000000032b516a: xor    %r10,%r10
  0x00000000032b516d: mov    %r10,0x2b0(%r15)
  0x00000000032b5174: mov    %rax,%rdx
  0x00000000032b5177: lea    0x118(%rsp),%rax
  0x00000000032b517f: mov    0x8(%rax),%rdi
  0x00000000032b5183: mov    (%rdi),%rsi
  0x00000000032b5186: and    $0x7,%rsi
  0x00000000032b518a: cmp    $0x5,%rsi
  0x00000000032b518e: je     0x00000000032b51ab
  0x00000000032b5194: mov    (%rax),%rsi
  0x00000000032b5197: test   %rsi,%rsi
  0x00000000032b519a: je     0x00000000032b51ab
  0x00000000032b51a0: lock cmpxchg %rsi,(%rdi)
  0x00000000032b51a5: jne    0x00000000032b573d  ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b51ab: mov    %rdx,%rax          ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop rax=Oop off=7854}
                                                ;*invokevirtual peek
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b51ae: movabs $0x32b51ae,%rdx    ;   {section_word}
  0x00000000032b51b8: callq  0x000000000328c760  ;   {runtime_call}
  0x00000000032b51bd: nop                       ;*invokevirtual peek
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b51be: mov    0x2a8(%r15),%rax
  0x00000000032b51c5: xor    %r10,%r10
  0x00000000032b51c8: mov    %r10,0x2a8(%r15)
  0x00000000032b51cf: xor    %r10,%r10
  0x00000000032b51d2: mov    %r10,0x2b0(%r15)
  0x00000000032b51d9: mov    %rax,%rdx
  0x00000000032b51dc: lea    0x118(%rsp),%rax
  0x00000000032b51e4: mov    0x8(%rax),%rbx
  0x00000000032b51e8: mov    (%rbx),%rsi
  0x00000000032b51eb: and    $0x7,%rsi
  0x00000000032b51ef: cmp    $0x5,%rsi
  0x00000000032b51f3: je     0x00000000032b5210
  0x00000000032b51f9: mov    (%rax),%rsi
  0x00000000032b51fc: test   %rsi,%rsi
  0x00000000032b51ff: je     0x00000000032b5210
  0x00000000032b5205: lock cmpxchg %rsi,(%rbx)
  0x00000000032b520a: jne    0x00000000032b5753  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b5210: mov    %rdx,%rax          ; OopMap{[160]=Oop [152]=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop rax=Oop off=7955}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b5213: movabs $0x32b5213,%rdx    ;   {section_word}
  0x00000000032b521d: callq  0x000000000328c760  ;   {runtime_call}
  0x00000000032b5222: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b5223: mov    0x2a8(%r15),%rax
  0x00000000032b522a: xor    %r10,%r10
  0x00000000032b522d: mov    %r10,0x2a8(%r15)
  0x00000000032b5234: xor    %r10,%r10
  0x00000000032b5237: mov    %r10,0x2b0(%r15)
  0x00000000032b523e: mov    %rax,%rdx
  0x00000000032b5241: lea    0x108(%rsp),%rax
  0x00000000032b5249: mov    0x8(%rax),%rdi
  0x00000000032b524d: mov    (%rdi),%rsi
  0x00000000032b5250: and    $0x7,%rsi
  0x00000000032b5254: cmp    $0x5,%rsi
  0x00000000032b5258: je     0x00000000032b5275
  0x00000000032b525e: mov    (%rax),%rsi
  0x00000000032b5261: test   %rsi,%rsi
  0x00000000032b5264: je     0x00000000032b5275
  0x00000000032b526a: lock cmpxchg %rsi,(%rdi)
  0x00000000032b526f: jne    0x00000000032b5769  ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b5275: mov    %rdx,%rax          ; OopMap{[160]=Oop [152]=Oop [240]=Oop [256]=Oop rax=Oop off=8056}
                                                ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b5278: movabs $0x32b5278,%rdx    ;   {section_word}
  0x00000000032b5282: callq  0x000000000328c760  ;   {runtime_call}
  0x00000000032b5287: nop                       ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)

  0x00000000032b5288: mov    0x94(%rsp),%r8d
  0x00000000032b5290: mov    0x98(%rsp),%rsi
  0x00000000032b5298: mov    0x2a8(%r15),%rax
  0x00000000032b529f: xor    %r10,%r10
  0x00000000032b52a2: mov    %r10,0x2a8(%r15)
  0x00000000032b52a9: xor    %r10,%r10
  0x00000000032b52ac: mov    %r10,0x2b0(%r15)
  0x00000000032b52b3: mov    %rax,%rdx
  0x00000000032b52b6: lea    0x108(%rsp),%rax
  0x00000000032b52be: mov    0x8(%rax),%rcx
  0x00000000032b52c2: mov    (%rcx),%rbx
  0x00000000032b52c5: and    $0x7,%rbx
  0x00000000032b52c9: cmp    $0x5,%rbx
  0x00000000032b52cd: je     0x00000000032b52ea
  0x00000000032b52d3: mov    (%rax),%rbx
  0x00000000032b52d6: test   %rbx,%rbx
  0x00000000032b52d9: je     0x00000000032b52ea
  0x00000000032b52df: lock cmpxchg %rbx,(%rcx)
  0x00000000032b52e4: jne    0x00000000032b577f  ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000032b52ea: mov    %rdx,%rax          ; OopMap{rdi=Oop rsi=Oop [152]=Oop [240]=Oop [256]=Oop rax=Oop off=8173}
                                                ;*invokevirtual size
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000032b52ed: movabs $0x32b52ed,%rdx    ;   {section_word}
  0x00000000032b52f7: callq  0x000000000328c760  ;   {runtime_call}
  0x00000000032b52fc: nop                       ;*invokevirtual size
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)

  0x00000000032b52fd: mov    0x2a8(%r15),%rax
  0x00000000032b5304: xor    %r10,%r10
  0x00000000032b5307: mov    %r10,0x2a8(%r15)
  0x00000000032b530e: xor    %r10,%r10
  0x00000000032b5311: mov    %r10,0x2b0(%r15)
  0x00000000032b5318: mov    %rax,%rsi
  0x00000000032b531b: lea    0xf8(%rsp),%rax
  0x00000000032b5323: mov    0x8(%rax),%rbx
  0x00000000032b5327: mov    (%rbx),%rdi
  0x00000000032b532a: and    $0x7,%rdi
  0x00000000032b532e: cmp    $0x5,%rdi
  0x00000000032b5332: je     0x00000000032b534f
  0x00000000032b5338: mov    (%rax),%rdi
  0x00000000032b533b: test   %rdi,%rdi
  0x00000000032b533e: je     0x00000000032b534f
  0x00000000032b5344: lock cmpxchg %rdi,(%rbx)
  0x00000000032b5349: jne    0x00000000032b5795  ;*monitorexit
                                                ; - sun.misc.URLClassPath::getLoader@62 (line 481)

  0x00000000032b534f: mov    %rsi,%rax
  0x00000000032b5352: jmpq   0x00000000032b581e
  0x00000000032b5357: mov    %rdx,0x8(%rsp)
  0x00000000032b535c: mov    %rsi,(%rsp)
  0x00000000032b5360: callq  0x0000000003290060  ; OopMap{rdx=Oop [152]=Oop [240]=Oop off=8293}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 467)
                                                ;   {runtime_call}
  0x00000000032b5365: jmpq   0x00000000032b3408
  0x00000000032b536a: mov    %rax,0x8(%rsp)
  0x00000000032b536f: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b5377: callq  0x0000000003291d60  ; OopMap{rdx=Oop [152]=Oop [240]=Oop off=8316}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 467)
                                                ;   {runtime_call}
  0x00000000032b537c: jmpq   0x00000000032b343a
  0x00000000032b5381: callq  0x000000000328d680  ; OopMap{rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8326}
                                                ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@13 (line 472)
                                                ;   {runtime_call}
  0x00000000032b5386: callq  0x000000000328d680  ; OopMap{rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8331}
                                                ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 475)
                                                ;   {runtime_call}
  0x00000000032b538b: mov    %rsi,0x8(%rsp)
  0x00000000032b5390: mov    %rdi,(%rsp)
  0x00000000032b5394: callq  0x0000000003290060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop [240]=Oop [256]=Oop off=8345}
                                                ;*monitorenter
                                                ; - sun.misc.URLClassPath::getLoader@28 (line 475)
                                                ;   {runtime_call}
  0x00000000032b5399: jmpq   0x00000000032b35a7
  0x00000000032b539e: callq  0x000000000328d680  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop off=8355}
                                                ;*invokevirtual empty
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ;   {runtime_call}
  0x00000000032b53a3: mov    %rax,0x8(%rsp)
  0x00000000032b53a8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b53b0: callq  0x0000000003291d60  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop off=8373}
                                                ;*synchronization entry
                                                ; - java.util.Stack::empty@-1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ;   {runtime_call}
  0x00000000032b53b5: jmpq   0x00000000032b35f8
  0x00000000032b53ba: mov    %rdi,0x8(%rsp)
  0x00000000032b53bf: mov    %rbx,(%rsp)
  0x00000000032b53c3: callq  0x0000000003290060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop off=8392}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::empty@1 (line 113)
                                                ; - sun.misc.URLClassPath::getLoader@33 (line 476)
                                                ;   {runtime_call}
  0x00000000032b53c8: jmpq   0x00000000032b3751
  0x00000000032b53cd: lea    0x108(%rsp),%rax
  0x00000000032b53d5: mov    %rax,(%rsp)
  0x00000000032b53d9: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b53de: jmpq   0x00000000032b3788
  0x00000000032b53e3: callq  0x000000000328d680  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop off=8424}
                                                ;*invokevirtual pop
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000032b53e8: mov    %rdi,0x8(%rsp)
  0x00000000032b53ed: mov    %rbx,(%rsp)
  0x00000000032b53f1: callq  0x0000000003290060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop off=8438}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000032b53f6: jmpq   0x00000000032b3915
  0x00000000032b53fb: mov    %rax,0x8(%rsp)
  0x00000000032b5400: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b5408: callq  0x0000000003291d60  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop off=8461}
                                                ;*synchronization entry
                                                ; - java.util.Stack::pop@-1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000032b540d: jmpq   0x00000000032b3947
  0x00000000032b5412: mov    %rdi,0x8(%rsp)
  0x00000000032b5417: mov    %rbx,(%rsp)
  0x00000000032b541b: callq  0x0000000003290060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=8480}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::pop@1 (line 82)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000032b5420: jmpq   0x00000000032b3aa0
  0x00000000032b5425: lea    0x118(%rsp),%rax
  0x00000000032b542d: mov    %rax,(%rsp)
  0x00000000032b5431: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b5436: jmpq   0x00000000032b3ad7
  0x00000000032b543b: mov    %rdi,0x8(%rsp)
  0x00000000032b5440: mov    %rcx,(%rsp)
  0x00000000032b5444: callq  0x0000000003290060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=8521}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000032b5449: jmpq   0x00000000032b3bc9
  0x00000000032b544e: mov    %rax,0x8(%rsp)
  0x00000000032b5453: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b545b: callq  0x0000000003291d60  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=8544}
                                                ;*synchronization entry
                                                ; - java.util.Stack::peek@-1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000032b5460: jmpq   0x00000000032b3bfb
  0x00000000032b5465: mov    %rdi,0x8(%rsp)
  0x00000000032b546a: mov    %rcx,(%rsp)
  0x00000000032b546e: callq  0x0000000003290060  ; OopMap{rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop [304]=Oop off=8563}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ; - java.util.Stack::peek@1 (line 99)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000032b5473: jmpq   0x00000000032b3d57
  0x00000000032b5478: lea    0x128(%rsp),%rax
  0x00000000032b5480: mov    %rax,(%rsp)
  0x00000000032b5484: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b5489: jmpq   0x00000000032b3d8e
  0x00000000032b548e: lea    0x118(%rsp),%rax
  0x00000000032b5496: mov    %rax,(%rsp)
  0x00000000032b549a: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b549f: jmpq   0x00000000032b3eb8
  0x00000000032b54a4: lea    0x108(%rsp),%rax
  0x00000000032b54ac: mov    %rax,(%rsp)
  0x00000000032b54b0: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b54b5: jmpq   0x00000000032b3fa0
  0x00000000032b54ba: mov    %rax,(%rsp)
  0x00000000032b54be: callq  0x000000000328f880  ; OopMap{[160]=Oop [152]=Oop [240]=Oop [256]=Oop off=8643}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@50 (line 479)
                                                ;   {runtime_call}
  0x00000000032b54c3: lea    0xf8(%rsp),%rax
  0x00000000032b54cb: mov    %rax,(%rsp)
  0x00000000032b54cf: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b54d4: jmpq   0x00000000032b40be
  0x00000000032b54d9: callq  0x000000000328d680  ; OopMap{[176]=Oop rax=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8670}
                                                ;*invokevirtual containsKey
                                                ; - sun.misc.URLClassPath::getLoader@76 (line 486)
                                                ;   {runtime_call}
  0x00000000032b54de: mov    %rsi,0x8(%rsp)
  0x00000000032b54e3: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b54eb: callq  0x0000000003291d60  ; OopMap{[184]=Oop rdx=Oop [152]=Oop rbx=Oop [240]=Oop off=8688}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath::getLoader@-1 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000032b54f0: jmpq   0x00000000032b4244
  0x00000000032b54f5: mov    %rdx,%rdx
  0x00000000032b54f8: callq  0x000000000328de00  ; OopMap{[184]=Oop rbx=Oop r8=Oop [152]=Oop [240]=Oop off=8701}
                                                ;*new  ; - sun.misc.URLClassPath::getLoader@0 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000032b54fd: jmpq   0x00000000032b4288
  0x00000000032b5502: mov    %rdx,0x8(%rsp)
  0x00000000032b5507: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b550f: callq  0x0000000003291d60  ; OopMap{[184]=Oop rbx=Oop r8=Oop [152]=Oop rax=Oop [240]=Oop off=8724}
                                                ;*synchronization entry
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@-1 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000032b5514: jmpq   0x00000000032b42cf
  0x00000000032b5519: mov    %rdx,0x8(%rsp)
  0x00000000032b551e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b5526: callq  0x0000000003291d60  ; OopMap{[184]=Oop r8=Oop [152]=Oop rax=Oop [240]=Oop off=8747}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - sun.misc.URLClassPath$3::&lt;init&gt;@11 (line 520)
                                                ; - sun.misc.URLClassPath::getLoader@6 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000032b552b: jmpq   0x00000000032b434c
  0x00000000032b5530: mov    %rax,(%rsp)
  0x00000000032b5534: callq  0x000000000328f880  ; OopMap{[184]=Oop [152]=Oop [240]=Oop off=8761}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@12 (line 519)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000032b5539: callq  0x000000000328d680  ; OopMap{[184]=Oop [152]=Oop rsi=Oop [240]=Oop off=8766}
                                                ;*invokevirtual getClassPath
                                                ; - sun.misc.URLClassPath::getLoader@94 (line 495)
                                                ;   {runtime_call}
  0x00000000032b553e: callq  0x000000000328d680  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop r8=Oop [240]=Oop off=8771}
                                                ;*invokevirtual size
                                                ; - sun.misc.URLClassPath::getLoader@123 (line 504)
                                                ;   {runtime_call}
  0x00000000032b5543: callq  0x000000000328d680  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8776}
                                                ;*invokevirtual add
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b5548: mov    %r8,0x8(%rsp)
  0x00000000032b554d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b5555: callq  0x0000000003291d60  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8794}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::add@-1 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b555a: jmpq   0x00000000032b4648
  0x00000000032b555f: mov    %rdi,0x8(%rsp)
  0x00000000032b5564: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b556c: callq  0x0000000003291d60  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8817}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureCapacityInternal@-1 (line 223)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b5571: jmpq   0x00000000032b4696
  0x00000000032b5576: mov    %rbx,0x8(%rsp)
  0x00000000032b557b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b5583: callq  0x0000000003291d60  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop off=8840}
                                                ;*synchronization entry
                                                ; - java.lang.Math::max@-1 (line 1252)
                                                ; - java.util.ArrayList::ensureCapacityInternal@13 (line 224)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b5588: jmpq   0x00000000032b4724
  0x00000000032b558d: mov    %rbx,0x8(%rsp)
  0x00000000032b5592: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b559a: callq  0x0000000003291d60  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop rdi=Oop [240]=Oop off=8863}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::ensureExplicitCapacity@-1 (line 231)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b559f: jmpq   0x00000000032b47bc
  0x00000000032b55a4: callq  0x000000000328d680  ; OopMap{[184]=Oop [192]=Oop rdx=Oop [152]=Oop rsi=Oop [240]=Oop off=8873}
                                                ;*arraylength
                                                ; - java.util.ArrayList::ensureExplicitCapacity@15 (line 234)
                                                ; - java.util.ArrayList::ensureCapacityInternal@19 (line 227)
                                                ; - java.util.ArrayList::add@7 (line 458)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b55a9: callq  0x000000000328d680  ; OopMap{[184]=Oop [152]=Oop r9=Oop rax=Oop [240]=Oop off=8878}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b55ae: callq  0x000000000328d680  ; OopMap{[184]=Oop [152]=Oop r9=Oop rax=Oop [240]=Oop off=8883}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b55b3: mov    %rdx,(%rsp)
  0x00000000032b55b7: callq  0x000000000328c940  ; OopMap{[184]=Oop [152]=Oop r9=Oop rax=Oop [240]=Oop off=8892}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b55bc: callq  0x000000000328d680  ; OopMap{[184]=Oop [152]=Oop r9=Oop [240]=Oop off=8897}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b55c1: mov    %r9,(%rsp)
  0x00000000032b55c5: callq  0x000000000328f640  ; OopMap{[184]=Oop [152]=Oop r9=Oop [240]=Oop off=8906}
                                                ;*aastore
                                                ; - java.util.ArrayList::add@26 (line 459)
                                                ; - sun.misc.URLClassPath::getLoader@136 (line 505)
                                                ;   {runtime_call}
  0x00000000032b55ca: mov    %rax,(%rsp)
  0x00000000032b55ce: callq  0x000000000328f880  ; OopMap{[184]=Oop [152]=Oop [240]=Oop off=8915}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@21 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000032b55d3: callq  0x000000000328d680  ; OopMap{[184]=Oop [152]=Oop rax=Oop [240]=Oop off=8920}
                                                ;*athrow
                                                ; - sun.misc.URLClassPath::getLoader@24 (line 535)
                                                ; - sun.misc.URLClassPath::getLoader@87 (line 492)
                                                ;   {runtime_call}
  0x00000000032b55d8: callq  0x000000000328d680  ; OopMap{rdx=Oop [152]=Oop rax=Oop r9=Oop rsi=Oop [240]=Oop off=8925}
                                                ;*invokevirtual put
                                                ; - sun.misc.URLClassPath::getLoader@147 (line 506)
                                                ;   {runtime_call}
  0x00000000032b55dd: mov    %rax,0x8(%rsp)
  0x00000000032b55e2: movq   $0x97,(%rsp)
  0x00000000032b55ea: callq  0x0000000003291d60  ; OopMap{[152]=Oop [240]=Oop off=8943}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@151 (line 507)
                                                ;   {runtime_call}
  0x00000000032b55ef: jmpq   0x00000000032b4bce
  0x00000000032b55f4: mov    %rax,0x8(%rsp)
  0x00000000032b55f9: movq   $0x52,(%rsp)
  0x00000000032b5601: callq  0x0000000003291d60  ; OopMap{[152]=Oop [240]=Oop off=8966}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@82 (line 487)
                                                ;   {runtime_call}
  0x00000000032b5606: jmpq   0x00000000032b4c2b
  0x00000000032b560b: mov    %rax,0x8(%rsp)
  0x00000000032b5610: movq   $0x73,(%rsp)
  0x00000000032b5618: callq  0x0000000003291d60  ; OopMap{[152]=Oop [240]=Oop off=8989}
                                                ;*goto
                                                ; - sun.misc.URLClassPath::getLoader@115 (line 501)
                                                ;   {runtime_call}
  0x00000000032b561d: jmpq   0x00000000032b4ca3
  0x00000000032b5622: mov    %rax,0x8(%rsp)
  0x00000000032b5627: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b562f: callq  0x0000000003291d60  ; OopMap{rsi=Oop [240]=Oop off=9012}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::get@-1 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000032b5634: jmpq   0x00000000032b4d2d
  0x00000000032b5639: mov    %rax,0x8(%rsp)
  0x00000000032b563e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b5646: callq  0x0000000003291d60  ; OopMap{rsi=Oop [240]=Oop off=9035}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::rangeCheck@-1 (line 652)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000032b564b: jmpq   0x00000000032b4d74
  0x00000000032b5650: mov    %rax,0x8(%rsp)
  0x00000000032b5655: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b565d: callq  0x0000000003291d60  ; OopMap{rsi=Oop [240]=Oop off=9058}
                                                ;*synchronization entry
                                                ; - java.util.ArrayList::elementData@-1 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000032b5662: jmpq   0x00000000032b4df4
  0x00000000032b5667: callq  0x000000000328d680  ; OopMap{rax=Oop [240]=Oop off=9068}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000032b566c: callq  0x000000000328d680  ; OopMap{rax=Oop [240]=Oop off=9073}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000032b5671: mov    %r8,(%rsp)
  0x00000000032b5675: callq  0x000000000328c940  ; OopMap{rax=Oop [240]=Oop off=9082}
                                                ;*aaload
                                                ; - java.util.ArrayList::elementData@5 (line 418)
                                                ; - java.util.ArrayList::get@7 (line 431)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000032b567a: mov    %rax,(%rsp)
  0x00000000032b567e: callq  0x000000000328f880  ; OopMap{[240]=Oop off=9091}
                                                ;*checkcast
                                                ; - sun.misc.URLClassPath::getLoader@193 (line 511)
                                                ;   {runtime_call}
  0x00000000032b5683: lea    0xe8(%rsp),%rax
  0x00000000032b568b: mov    %rax,(%rsp)
  0x00000000032b568f: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b5694: jmpq   0x00000000032b4f29
  0x00000000032b5699: lea    0xf8(%rsp),%rax
  0x00000000032b56a1: mov    %rax,(%rsp)
  0x00000000032b56a5: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b56aa: jmpq   0x00000000032b4f6f
  0x00000000032b56af: lea    0xe8(%rsp),%rax
  0x00000000032b56b7: mov    %rax,(%rsp)
  0x00000000032b56bb: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b56c0: jmpq   0x00000000032b4fa3
  0x00000000032b56c5: lea    0xe8(%rsp),%rax
  0x00000000032b56cd: mov    %rax,(%rsp)
  0x00000000032b56d1: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b56d6: jmpq   0x00000000032b4ff0
  0x00000000032b56db: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032b56e5: mov    $0xa050f00,%eax
  0x00000000032b56ea: callq  0x0000000003290ca0  ; OopMap{rsi=Oop [240]=Oop off=9199}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000032b56ef: jmpq   0x00000000032b5010
  0x00000000032b56f4: mov    %rdx,%rdx
  0x00000000032b56f7: callq  0x000000000328db20  ; OopMap{rsi=Oop [240]=Oop off=9212}
                                                ;*new  ; - java.util.ArrayList::rangeCheck@8 (line 653)
                                                ; - java.util.ArrayList::get@2 (line 429)
                                                ; - sun.misc.URLClassPath::getLoader@190 (line 511)
                                                ;   {runtime_call}
  0x00000000032b56fc: jmpq   0x00000000032b501f
  0x00000000032b5701: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032b570b: mov    $0xa050f00,%eax
  0x00000000032b5710: callq  0x0000000003290ca0  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=9237}
                                                ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000032b5715: jmpq   0x00000000032b50a8
  0x00000000032b571a: mov    %rdx,%rdx
  0x00000000032b571d: callq  0x000000000328db20  ; OopMap{[136]=Oop [160]=Oop [152]=Oop [240]=Oop [256]=Oop [272]=Oop [288]=Oop off=9250}
                                                ;*new  ; - java.util.Stack::peek@9 (line 102)
                                                ; - java.util.Stack::pop@6 (line 84)
                                                ; - sun.misc.URLClassPath::getLoader@47 (line 479)
                                                ;   {runtime_call}
  0x00000000032b5722: jmpq   0x00000000032b50b7
  0x00000000032b5727: lea    0x128(%rsp),%rax
  0x00000000032b572f: mov    %rax,(%rsp)
  0x00000000032b5733: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b5738: jmpq   0x00000000032b5146
  0x00000000032b573d: lea    0x118(%rsp),%rax
  0x00000000032b5745: mov    %rax,(%rsp)
  0x00000000032b5749: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b574e: jmpq   0x00000000032b51ab
  0x00000000032b5753: lea    0x118(%rsp),%rax
  0x00000000032b575b: mov    %rax,(%rsp)
  0x00000000032b575f: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b5764: jmpq   0x00000000032b5210
  0x00000000032b5769: lea    0x108(%rsp),%rax
  0x00000000032b5771: mov    %rax,(%rsp)
  0x00000000032b5775: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b577a: jmpq   0x00000000032b5275
  0x00000000032b577f: lea    0x108(%rsp),%rax
  0x00000000032b5787: mov    %rax,(%rsp)
  0x00000000032b578b: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b5790: jmpq   0x00000000032b52ea
  0x00000000032b5795: lea    0xf8(%rsp),%rax
  0x00000000032b579d: mov    %rax,(%rsp)
  0x00000000032b57a1: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b57a6: jmpq   0x00000000032b534f
  0x00000000032b57ab: mov    0x90(%rsp),%ebx
  0x00000000032b57b2: jmpq   0x00000000032b5159
  0x00000000032b57b7: mov    0x90(%rsp),%ebx
  0x00000000032b57be: jmpq   0x00000000032b5159
  0x00000000032b57c3: mov    0x90(%rsp),%ebx
  0x00000000032b57ca: jmpq   0x00000000032b5159
  0x00000000032b57cf: mov    0x90(%rsp),%ebx
  0x00000000032b57d6: jmpq   0x00000000032b5159
  0x00000000032b57db: mov    0x90(%rsp),%ebx
  0x00000000032b57e2: jmpq   0x00000000032b5159
  0x00000000032b57e7: mov    0x90(%rsp),%ebx
  0x00000000032b57ee: jmpq   0x00000000032b5159
  0x00000000032b57f3: nop
  0x00000000032b57f4: nop
  0x00000000032b57f5: mov    0x2a8(%r15),%rax
  0x00000000032b57fc: movabs $0x0,%r10
  0x00000000032b5806: mov    %r10,0x2a8(%r15)
  0x00000000032b580d: movabs $0x0,%r10
  0x00000000032b5817: mov    %r10,0x2b0(%r15)
  0x00000000032b581e: mov    %rax,%rbx
  0x00000000032b5821: lea    0xe8(%rsp),%rax
  0x00000000032b5829: mov    0x8(%rax),%rsi
  0x00000000032b582d: mov    (%rsi),%rdi
  0x00000000032b5830: and    $0x7,%rdi
  0x00000000032b5834: cmp    $0x5,%rdi
  0x00000000032b5838: je     0x00000000032b5855
  0x00000000032b583e: mov    (%rax),%rdi
  0x00000000032b5841: test   %rdi,%rdi
  0x00000000032b5844: je     0x00000000032b5855
  0x00000000032b584a: lock cmpxchg %rdi,(%rsi)
  0x00000000032b584f: jne    0x00000000032b5865
  0x00000000032b5855: mov    %rbx,%rax
  0x00000000032b5858: add    $0x140,%rsp
  0x00000000032b585f: pop    %rbp
  0x00000000032b5860: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032b5865: lea    0xe8(%rsp),%rax
  0x00000000032b586d: mov    %rax,(%rsp)
  0x00000000032b5871: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032b5876: jmp    0x00000000032b5855
  0x00000000032b5878: hlt    
  0x00000000032b5879: hlt    
  0x00000000032b587a: hlt    
  0x00000000032b587b: hlt    
  0x00000000032b587c: hlt    
  0x00000000032b587d: hlt    
  0x00000000032b587e: hlt    
  0x00000000032b587f: hlt    
[Stub Code]
  0x00000000032b5880: nop                       ;   {no_reloc}
  0x00000000032b5881: nop
  0x00000000032b5882: nop
  0x00000000032b5883: nop
  0x00000000032b5884: nop
  0x00000000032b5885: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b588f: jmpq   0x00000000032b588f  ;   {runtime_call}
  0x00000000032b5894: nop
  0x00000000032b5895: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b589f: jmpq   0x00000000032b589f  ;   {runtime_call}
  0x00000000032b58a4: nop
  0x00000000032b58a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b58af: jmpq   0x00000000032b58af  ;   {runtime_call}
  0x00000000032b58b4: nop
  0x00000000032b58b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b58bf: jmpq   0x00000000032b58bf  ;   {runtime_call}
  0x00000000032b58c4: nop
  0x00000000032b58c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b58cf: jmpq   0x00000000032b58cf  ;   {runtime_call}
  0x00000000032b58d4: nop
  0x00000000032b58d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b58df: jmpq   0x00000000032b58df  ;   {runtime_call}
  0x00000000032b58e4: nop
  0x00000000032b58e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b58ef: jmpq   0x00000000032b58ef  ;   {runtime_call}
  0x00000000032b58f4: nop
  0x00000000032b58f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b58ff: jmpq   0x00000000032b58ff  ;   {runtime_call}
  0x00000000032b5904: nop
  0x00000000032b5905: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b590f: jmpq   0x00000000032b590f  ;   {runtime_call}
  0x00000000032b5914: nop
  0x00000000032b5915: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b591f: jmpq   0x00000000032b591f  ;   {runtime_call}
  0x00000000032b5924: nop
  0x00000000032b5925: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b592f: jmpq   0x00000000032b592f  ;   {runtime_call}
  0x00000000032b5934: nop
  0x00000000032b5935: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b593f: jmpq   0x00000000032b593f  ;   {runtime_call}
  0x00000000032b5944: nop
  0x00000000032b5945: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b594f: jmpq   0x00000000032b594f  ;   {runtime_call}
[Exception Handler]
  0x00000000032b5954: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032b5959: mov    %rsp,-0x28(%rsp)
  0x00000000032b595e: sub    $0x80,%rsp
  0x00000000032b5965: mov    %rax,0x78(%rsp)
  0x00000000032b596a: mov    %rcx,0x70(%rsp)
  0x00000000032b596f: mov    %rdx,0x68(%rsp)
  0x00000000032b5974: mov    %rbx,0x60(%rsp)
  0x00000000032b5979: mov    %rbp,0x50(%rsp)
  0x00000000032b597e: mov    %rsi,0x48(%rsp)
  0x00000000032b5983: mov    %rdi,0x40(%rsp)
  0x00000000032b5988: mov    %r8,0x38(%rsp)
  0x00000000032b598d: mov    %r9,0x30(%rsp)
  0x00000000032b5992: mov    %r10,0x28(%rsp)
  0x00000000032b5997: mov    %r11,0x20(%rsp)
  0x00000000032b599c: mov    %r12,0x18(%rsp)
  0x00000000032b59a1: mov    %r13,0x10(%rsp)
  0x00000000032b59a6: mov    %r14,0x8(%rsp)
  0x00000000032b59ab: mov    %r15,(%rsp)
  0x00000000032b59af: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032b59b9: movabs $0x32b5959,%rdx    ;   {internal_word}
  0x00000000032b59c3: mov    %rsp,%r8
  0x00000000032b59c6: and    $0xfffffffffffffff0,%rsp
  0x00000000032b59ca: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032b59cf: hlt    
[Deopt Handler Code]
  0x00000000032b59d0: movabs $0x32b59d0,%r10    ;   {section_word}
  0x00000000032b59da: push   %r10
  0x00000000032b59dc: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b59e1: hlt    
  0x00000000032b59e2: hlt    
  0x00000000032b59e3: hlt    
  0x00000000032b59e4: hlt    
  0x00000000032b59e5: hlt    
  0x00000000032b59e6: hlt    
  0x00000000032b59e7: hlt    
<nmethod compile_id='72' compiler='C1' level='3' entry='0x00000000032b3300' size='16584' address='0x00000000032b2f50' relocation_offset='288' insts_offset='944' stub_offset='10544' scopes_data_offset='11072' scopes_pcs_offset='12912' dependencies_offset='15840' handler_table_offset='15856' nul_chk_table_offset='16448' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='197' count='1054' backedge_count='318' iicount='1054' stamp='1.162'/>
<writer thread='7552'/>
<task_queued compile_id='87' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread run ()V' bytes='46' count='12' backedge_count='161792' iicount='12' osr_bci='7' stamp='1.162' comment='tiered' hot_count='161792'/>
<writer thread='31168'/>
<task_queued compile_id='88' method='java/io/BufferedInputStream read ()I' bytes='49' count='1024' iicount='1024' level='3' stamp='1.162' comment='tiered' hot_count='1024'/>
<task_queued compile_id='89' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='565' backedge_count='8192' iicount='565' level='3' stamp='1.163' comment='tiered' hot_count='565'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032b2bd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5540d8} &apos;add&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032b2d20: mov    0x8(%rdx),%r10d
  0x00000000032b2d24: shl    $0x3,%r10
  0x00000000032b2d28: cmp    %rax,%r10
  0x00000000032b2d2b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b2d31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b2d3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b2d40: mov    %eax,-0x6000(%rsp)
  0x00000000032b2d47: push   %rbp
  0x00000000032b2d48: sub    $0x40,%rsp
  0x00000000032b2d4c: movabs $0x1c5547c8,%rsi
  0x00000000032b2d56: mov    0x8(%rsi),%edi
  0x00000000032b2d59: add    $0x8,%edi
  0x00000000032b2d5c: mov    %edi,0x8(%rsi)
  0x00000000032b2d5f: movabs $0x1c5540d0,%rsi   ;   {metadata({method} {0x000000001c5540d8} &apos;add&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject&apos;)}
  0x00000000032b2d69: and    $0x3ff8,%edi
  0x00000000032b2d6f: cmp    $0x0,%edi
  0x00000000032b2d72: je     0x00000000032b2d99  ;*aload_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest$SynchronizedObject::add@0 (line 26)

  0x00000000032b2d78: mov    0x10(%rdx),%rsi    ;*getfield x
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest$SynchronizedObject::add@2 (line 26)

  0x00000000032b2d7c: movabs $0x1,%r10
  0x00000000032b2d86: add    %r10,%rsi
  0x00000000032b2d89: mov    %rsi,0x10(%rdx)    ;*putfield x
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest$SynchronizedObject::add@7 (line 26)

  0x00000000032b2d8d: add    $0x40,%rsp
  0x00000000032b2d91: pop    %rbp
  0x00000000032b2d92: test   %eax,-0x9c2c98(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b2d98: retq   
  0x00000000032b2d99: mov    %rsi,0x8(%rsp)
  0x00000000032b2d9e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b2da6: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=139}
                                                ;*synchronization entry
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest$SynchronizedObject::add@-1 (line 26)
                                                ;   {runtime_call}
  0x00000000032b2dab: jmp    0x00000000032b2d78
  0x00000000032b2dad: nop
  0x00000000032b2dae: nop
  0x00000000032b2daf: mov    0x2a8(%r15),%rax
  0x00000000032b2db6: movabs $0x0,%r10
  0x00000000032b2dc0: mov    %r10,0x2a8(%r15)
  0x00000000032b2dc7: movabs $0x0,%r10
  0x00000000032b2dd1: mov    %r10,0x2b0(%r15)
  0x00000000032b2dd8: add    $0x40,%rsp
  0x00000000032b2ddc: pop    %rbp
  0x00000000032b2ddd: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032b2de2: hlt    
  0x00000000032b2de3: hlt    
  0x00000000032b2de4: hlt    
  0x00000000032b2de5: hlt    
  0x00000000032b2de6: hlt    
  0x00000000032b2de7: hlt    
  0x00000000032b2de8: hlt    
  0x00000000032b2de9: hlt    
  0x00000000032b2dea: hlt    
  0x00000000032b2deb: hlt    
  0x00000000032b2dec: hlt    
  0x00000000032b2ded: hlt    
  0x00000000032b2dee: hlt    
  0x00000000032b2def: hlt    
  0x00000000032b2df0: hlt    
  0x00000000032b2df1: hlt    
  0x00000000032b2df2: hlt    
  0x00000000032b2df3: hlt    
  0x00000000032b2df4: hlt    
  0x00000000032b2df5: hlt    
  0x00000000032b2df6: hlt    
  0x00000000032b2df7: hlt    
  0x00000000032b2df8: hlt    
  0x00000000032b2df9: hlt    
  0x00000000032b2dfa: hlt    
  0x00000000032b2dfb: hlt    
  0x00000000032b2dfc: hlt    
  0x00000000032b2dfd: hlt    
  0x00000000032b2dfe: hlt    
  0x00000000032b2dff: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032b2e00: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032b2e05: mov    %rsp,-0x28(%rsp)
  0x00000000032b2e0a: sub    $0x80,%rsp
  0x00000000032b2e11: mov    %rax,0x78(%rsp)
  0x00000000032b2e16: mov    %rcx,0x70(%rsp)
  0x00000000032b2e1b: mov    %rdx,0x68(%rsp)
  0x00000000032b2e20: mov    %rbx,0x60(%rsp)
  0x00000000032b2e25: mov    %rbp,0x50(%rsp)
  0x00000000032b2e2a: mov    %rsi,0x48(%rsp)
  0x00000000032b2e2f: mov    %rdi,0x40(%rsp)
  0x00000000032b2e34: mov    %r8,0x38(%rsp)
  0x00000000032b2e39: mov    %r9,0x30(%rsp)
  0x00000000032b2e3e: mov    %r10,0x28(%rsp)
  0x00000000032b2e43: mov    %r11,0x20(%rsp)
  0x00000000032b2e48: mov    %r12,0x18(%rsp)
  0x00000000032b2e4d: mov    %r13,0x10(%rsp)
  0x00000000032b2e52: mov    %r14,0x8(%rsp)
  0x00000000032b2e57: mov    %r15,(%rsp)
  0x00000000032b2e5b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032b2e65: movabs $0x32b2e05,%rdx    ;   {internal_word}
  0x00000000032b2e6f: mov    %rsp,%r8
  0x00000000032b2e72: and    $0xfffffffffffffff0,%rsp
  0x00000000032b2e76: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032b2e7b: hlt    
[Deopt Handler Code]
  0x00000000032b2e7c: movabs $0x32b2e7c,%r10    ;   {section_word}
  0x00000000032b2e86: push   %r10
  0x00000000032b2e88: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b2e8d: hlt    
  0x00000000032b2e8e: hlt    
  0x00000000032b2e8f: hlt    
<nmethod compile_id='85' compiler='C1' level='2' entry='0x00000000032b2d20' size='856' address='0x00000000032b2bd0' relocation_offset='288' insts_offset='336' stub_offset='560' scopes_data_offset='720' scopes_pcs_offset='752' dependencies_offset='848' oops_offset='704' method='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject add ()V' bytes='11' count='222401' iicount='222415' stamp='1.165'/>
<writer thread='31168'/>
<task_queued compile_id='90' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='896' iicount='896' level='3' stamp='1.165' comment='tiered' hot_count='896'/>
<writer thread='7552'/>
<task_queued compile_id='91' method='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject add ()V' bytes='11' count='224037' iicount='224037' level='1' stamp='1.165' comment='tiered' hot_count='224037'/>
<writer thread='31168'/>
<task_queued compile_id='92' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='896' backedge_count='7' iicount='896' level='3' stamp='1.165' comment='tiered' hot_count='896'/>
<task_queued compile_id='93' method='java/io/DataInputStream readShort ()S' bytes='40' count='1024' iicount='1024' level='3' stamp='1.166' comment='tiered' hot_count='1024'/>
<task_queued compile_id='94' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1408' iicount='1408' level='3' stamp='1.167' comment='tiered' hot_count='1408'/>
<task_queued compile_id='95' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1024' iicount='1024' level='3' stamp='1.167' comment='tiered' hot_count='1024'/>
<task_queued compile_id='96' method='sun/instrument/TransformerManager getSnapshotTransformerList ()[Lsun/instrument/TransformerManager$TransformerInfo;' bytes='5' count='256' iicount='256' level='1' stamp='1.168' comment='tiered' hot_count='256'/>
<writer thread='26572'/>
Decoding compiled method 0x00000000032b2150:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c554630} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;
  0x00000000032b22c0: int3   
  0x00000000032b22c1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b22cc: data16 data16 xchg %ax,%ax
  0x00000000032b22d0: mov    %eax,-0x6000(%rsp)
  0x00000000032b22d7: push   %rbp
  0x00000000032b22d8: sub    $0x50,%rsp
  0x00000000032b22dc: mov    0x28(%rdx),%r14
  0x00000000032b22e0: mov    0x20(%rdx),%r10
  0x00000000032b22e4: lea    0x40(%rsp),%r11
  0x00000000032b22e9: mov    %r10,(%r11)
  0x00000000032b22ec: mov    0x8(%rdx),%ebx
  0x00000000032b22ef: mov    0x10(%rdx),%r13
  0x00000000032b22f3: mov    0x18(%rdx),%rbp
  0x00000000032b22f7: mov    %rdx,%rcx
  0x00000000032b22fa: movabs $0x5590be80,%r10
  0x00000000032b2304: callq  *%r10
  0x00000000032b2307: test   %rbp,%rbp
  0x00000000032b230a: je     0x00000000032b23f6
  0x00000000032b2310: mov    0x8(%rbp),%r11d
  0x00000000032b2314: cmp    $0xf800d605,%r11d  ;   {metadata(&apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032b231b: jne    0x00000000032b24df
  0x00000000032b2321: mov    %rbp,%r8
  0x00000000032b2324: test   %r13,%r13
  0x00000000032b2327: je     0x00000000032b23fe
  0x00000000032b232d: mov    0x8(%r13),%r10d
  0x00000000032b2331: cmp    $0xf80003df,%r10d  ;   {metadata(&apos;java/lang/Class&apos;)}
  0x00000000032b2338: jne    0x00000000032b24df
  0x00000000032b233e: test   %r8,%r8
  0x00000000032b2341: je     0x00000000032b2406
  0x00000000032b2347: mov    $0x7,%ebp
  0x00000000032b234c: jmp    0x00000000032b2388
  0x00000000032b234e: xchg   %ax,%ax
  0x00000000032b2350: mov    %rbp,0x38(%rsp)
  0x00000000032b2355: mov    %r8,0x30(%rsp)
  0x00000000032b235a: mov    %r13,0x28(%rsp)
  0x00000000032b235f: mov    %ebx,%ebp
  0x00000000032b2361: mov    %r14,0x20(%rsp)    ;*iload_2
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@7 (line 17)

  0x00000000032b2366: lea    (%r12,%r11,8),%rdx  ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@16 (line 18)

  0x00000000032b236a: nop
  0x00000000032b236b: callq  0x00000000031d61a0  ; OopMap{[32]=Oop [40]=Oop [48]=Oop off=176}
                                                ;*invokevirtual add
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@19 (line 18)
                                                ;   {optimized virtual_call}
  0x00000000032b2370: mov    %ebp,%ebx
  0x00000000032b2372: inc    %ebx               ;*iinc
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@22 (line 17)

  0x00000000032b2374: mov    0x28(%rsp),%r13
  0x00000000032b2379: mov    0x30(%rsp),%r8
  0x00000000032b237e: mov    0x38(%rsp),%rbp
  0x00000000032b2383: mov    0x20(%rsp),%r14    ;*iload_2
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@7 (line 17)

  0x00000000032b2388: mov    0x178(%r8),%r10d
  0x00000000032b238f: cmp    %r10d,%ebx
  0x00000000032b2392: jge    0x00000000032b23bd  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@12 (line 17)

  0x00000000032b2394: mov    0x180(%r8),%r11d   ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@16 (line 18)

  0x00000000032b239b: test   %r11d,%r11d
  0x00000000032b239e: jne    0x00000000032b2350
  0x00000000032b23a0: mov    $0xfffffff6,%edx
  0x00000000032b23a5: mov    %r8,%rbp
  0x00000000032b23a8: mov    %ebx,0x20(%rsp)
  0x00000000032b23ac: mov    %r13,0x28(%rsp)
  0x00000000032b23b1: mov    %r14,0x30(%rsp)
  0x00000000032b23b6: nop
  0x00000000032b23b7: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [40]=Oop [48]=Oop off=252}
                                                ;*invokevirtual add
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@19 (line 18)
                                                ;   {runtime_call}
  0x00000000032b23bc: int3                      ;*invokevirtual add
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@19 (line 18)

  0x00000000032b23bd: mov    0x17c(%r8),%r11d   ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@29 (line 20)

  0x00000000032b23c4: test   %r11d,%r11d
  0x00000000032b23c7: je     0x00000000032b2425  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@12 (line 17)

  0x00000000032b23c9: lea    (%r12,%r11,8),%rdx  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@29 (line 20)

  0x00000000032b23cd: mov    %r13,0x20(%rsp)
  0x00000000032b23d2: mov    %r14,0x30(%rsp)
  0x00000000032b23d7: callq  0x00000000031d61a0  ; OopMap{[32]=Oop [48]=Oop off=284}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@32 (line 20)
                                                ;   {optimized virtual_call}
  0x00000000032b23dc: mov    0x30(%rsp),%r11
  0x00000000032b23e1: and    (%r11),%rbp
  0x00000000032b23e4: cmp    $0x5,%rbp
  0x00000000032b23e8: jne    0x00000000032b2439  ;*monitorexit
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@36 (line 21)

  0x00000000032b23ea: add    $0x50,%rsp
  0x00000000032b23ee: pop    %rbp
  0x00000000032b23ef: test   %eax,-0x9c23f5(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032b23f5: retq   
  0x00000000032b23f6: xor    %r8d,%r8d
  0x00000000032b23f9: jmpq   0x00000000032b2324
  0x00000000032b23fe: xor    %r13d,%r13d
  0x00000000032b2401: jmpq   0x00000000032b233e
  0x00000000032b2406: mov    $0xffffff86,%edx
  0x00000000032b240b: mov    %r8,%rbp
  0x00000000032b240e: mov    %ebx,0x20(%rsp)
  0x00000000032b2412: mov    %r13,0x28(%rsp)
  0x00000000032b2417: mov    %r14,0x30(%rsp)
  0x00000000032b241c: data16 xchg %ax,%ax
  0x00000000032b241f: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [40]=Oop [48]=Oop off=356}
                                                ;*iload_2
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@7 (line 17)
                                                ;   {runtime_call}
  0x00000000032b2424: int3   
  0x00000000032b2425: mov    $0xfffffff6,%edx
  0x00000000032b242a: mov    %r13,%rbp
  0x00000000032b242d: mov    %r14,0x20(%rsp)
  0x00000000032b2432: nop
  0x00000000032b2433: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [32]=Oop off=376}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@32 (line 20)
                                                ;   {runtime_call}
  0x00000000032b2438: int3                      ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@32 (line 20)

  0x00000000032b2439: lea    0x40(%rsp),%rax
  0x00000000032b243e: cmpq   $0x0,(%rax)
  0x00000000032b2445: je     0x00000000032b24bf
  0x00000000032b244b: mov    (%r11),%r10
  0x00000000032b244e: test   $0x2,%r10
  0x00000000032b2455: je     0x00000000032b24b7
  0x00000000032b2457: mov    0x16(%r10),%rax
  0x00000000032b245b: xor    %r15,%rax
  0x00000000032b245e: or     0x26(%r10),%rax
  0x00000000032b2462: jne    0x00000000032b24bf
  0x00000000032b2464: mov    0x36(%r10),%rax
  0x00000000032b2468: or     0x3e(%r10),%rax
  0x00000000032b246c: jne    0x00000000032b2478
  0x00000000032b246e: movq   $0x0,0x16(%r10)
  0x00000000032b2476: jmp    0x00000000032b24bf
  0x00000000032b2478: cmpq   $0x0,0x46(%r10)
  0x00000000032b2480: je     0x00000000032b24ab
  0x00000000032b2482: movq   $0x0,0x16(%r10)
  0x00000000032b248a: lock addl $0x0,(%rsp)
  0x00000000032b248f: cmpq   $0x0,0x46(%r10)
  0x00000000032b2497: jne    0x00000000032b24b0
  0x00000000032b2499: movabs $0x0,%rax
  0x00000000032b24a3: lock cmpxchg %r15,0x16(%r10)
  0x00000000032b24a9: jne    0x00000000032b24b0
  0x00000000032b24ab: or     $0x1,%eax
  0x00000000032b24ae: jmp    0x00000000032b24bf
  0x00000000032b24b0: test   $0x0,%eax
  0x00000000032b24b5: jmp    0x00000000032b24bf
  0x00000000032b24b7: mov    (%rax),%r10
  0x00000000032b24ba: lock cmpxchg %r10,(%r11)
  0x00000000032b24bf: je     0x00000000032b23ea
  0x00000000032b24c5: mov    %r11,%rcx
  0x00000000032b24c8: lea    0x40(%rsp),%rdx    ;*iload_2
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@7 (line 17)

  0x00000000032b24cd: movabs $0x5590c5c0,%r10
  0x00000000032b24d7: callq  *%r10              ;*monitorexit
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@36 (line 21)

  0x00000000032b24da: jmpq   0x00000000032b23ea
  0x00000000032b24df: mov    $0xffffff9d,%edx
  0x00000000032b24e4: mov    %ebx,0x20(%rsp)
  0x00000000032b24e8: mov    %r13,0x28(%rsp)
  0x00000000032b24ed: mov    %r14,0x30(%rsp)
  0x00000000032b24f2: nop
  0x00000000032b24f3: callq  0x00000000031d57a0  ; OopMap{rbp=Oop [40]=Oop [48]=Oop off=568}
                                                ;*iload_2
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@7 (line 17)
                                                ;   {runtime_call}
  0x00000000032b24f8: int3                      ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@32 (line 20)

  0x00000000032b24f9: mov    %rax,%rbx
  0x00000000032b24fc: jmp    0x00000000032b2510  ;*invokevirtual add
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@19 (line 18)

  0x00000000032b24fe: mov    %rax,%rbx
  0x00000000032b2501: rex.W pushq 0x20(%rsp)
  0x00000000032b2506: rex.W popq 0x30(%rsp)
  0x00000000032b250b: mov    0x38(%rsp),%rbp
  0x00000000032b2510: mov    0x30(%rsp),%r11
  0x00000000032b2515: and    (%r11),%rbp
  0x00000000032b2518: cmp    $0x5,%rbp
  0x00000000032b251c: jne    0x00000000032b252b  ;*monitorexit
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@42 (line 21)

  0x00000000032b251e: mov    %rbx,%rdx
  0x00000000032b2521: add    $0x50,%rsp
  0x00000000032b2525: pop    %rbp
  0x00000000032b2526: jmpq   0x0000000003292260  ;   {runtime_call}
  0x00000000032b252b: lea    0x40(%rsp),%rax
  0x00000000032b2530: cmpq   $0x0,(%rax)
  0x00000000032b2537: je     0x00000000032b25b1
  0x00000000032b253d: mov    (%r11),%r10
  0x00000000032b2540: test   $0x2,%r10
  0x00000000032b2547: je     0x00000000032b25a9
  0x00000000032b2549: mov    0x16(%r10),%rax
  0x00000000032b254d: xor    %r15,%rax
  0x00000000032b2550: or     0x26(%r10),%rax
  0x00000000032b2554: jne    0x00000000032b25b1
  0x00000000032b2556: mov    0x36(%r10),%rax
  0x00000000032b255a: or     0x3e(%r10),%rax
  0x00000000032b255e: jne    0x00000000032b256a
  0x00000000032b2560: movq   $0x0,0x16(%r10)
  0x00000000032b2568: jmp    0x00000000032b25b1
  0x00000000032b256a: cmpq   $0x0,0x46(%r10)
  0x00000000032b2572: je     0x00000000032b259d
  0x00000000032b2574: movq   $0x0,0x16(%r10)
  0x00000000032b257c: lock addl $0x0,(%rsp)
  0x00000000032b2581: cmpq   $0x0,0x46(%r10)
  0x00000000032b2589: jne    0x00000000032b25a2
  0x00000000032b258b: movabs $0x0,%rax
  0x00000000032b2595: lock cmpxchg %r15,0x16(%r10)
  0x00000000032b259b: jne    0x00000000032b25a2
  0x00000000032b259d: or     $0x1,%eax
  0x00000000032b25a0: jmp    0x00000000032b25b1
  0x00000000032b25a2: test   $0x0,%eax
  0x00000000032b25a7: jmp    0x00000000032b25b1
  0x00000000032b25a9: mov    (%rax),%r10
  0x00000000032b25ac: lock cmpxchg %r10,(%r11)
  0x00000000032b25b1: je     0x00000000032b251e
  0x00000000032b25b7: mov    0x30(%rsp),%rcx
  0x00000000032b25bc: lea    0x40(%rsp),%rdx    ;*iload_2
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@7 (line 17)

  0x00000000032b25c1: movabs $0x5590c5c0,%r10
  0x00000000032b25cb: callq  *%r10              ;*monitorexit
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@42 (line 21)

  0x00000000032b25ce: jmpq   0x00000000032b251e
  0x00000000032b25d3: hlt    
  0x00000000032b25d4: hlt    
  0x00000000032b25d5: hlt    
  0x00000000032b25d6: hlt    
  0x00000000032b25d7: hlt    
  0x00000000032b25d8: hlt    
  0x00000000032b25d9: hlt    
  0x00000000032b25da: hlt    
  0x00000000032b25db: hlt    
  0x00000000032b25dc: hlt    
  0x00000000032b25dd: hlt    
  0x00000000032b25de: hlt    
  0x00000000032b25df: hlt    
[Stub Code]
  0x00000000032b25e0: movabs $0x0,%rbx          ;   {no_reloc}
  0x00000000032b25ea: jmpq   0x00000000032b25ea  ;   {runtime_call}
  0x00000000032b25ef: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b25f9: jmpq   0x00000000032b25f9  ;   {runtime_call}
[Exception Handler]
  0x00000000032b25fe: jmpq   0x000000000328d0e0  ;   {runtime_call}
[Deopt Handler Code]
  0x00000000032b2603: callq  0x00000000032b2608
  0x00000000032b2608: subq   $0x5,(%rsp)
  0x00000000032b260d: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b2612: hlt    
  0x00000000032b2613: hlt    
  0x00000000032b2614: hlt    
  0x00000000032b2615: hlt    
  0x00000000032b2616: hlt    
  0x00000000032b2617: hlt    
<nmethod compile_id='87' compile_kind='osr' compiler='C2' level='4' entry='0x00000000032b22c0' size='1912' address='0x00000000032b2150' relocation_offset='288' insts_offset='368' stub_offset='1168' scopes_data_offset='1272' scopes_pcs_offset='1424' dependencies_offset='1856' handler_table_offset='1864' oops_offset='1224' method='com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread run ()V' bytes='46' count='12' backedge_count='458989' iicount='12' stamp='1.173'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032cad10:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;
  # parm0:    rdx:rdx   = &apos;java/io/DataInput&apos;
  #           [sp+0x110]  (sp of caller)
  0x00000000032cb0e0: mov    %eax,-0x6000(%rsp)
  0x00000000032cb0e7: push   %rbp
  0x00000000032cb0e8: sub    $0x100,%rsp
  0x00000000032cb0ef: movabs $0x1c48cad0,%rsi   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb0f9: mov    0xdc(%rsi),%edi
  0x00000000032cb0ff: add    $0x8,%edi
  0x00000000032cb102: mov    %edi,0xdc(%rsi)
  0x00000000032cb108: movabs $0x1c48c3c8,%rsi   ;   {metadata({method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb112: and    $0x1ff8,%edi
  0x00000000032cb118: cmp    $0x0,%edi
  0x00000000032cb11b: je     0x00000000032ccc89  ;*aload_0
                                                ; - java.io.DataInputStream::readUTF@0 (line 589)

  0x00000000032cb121: cmp    $0x0,%rdx
  0x00000000032cb125: je     0x00000000032cb14b
  0x00000000032cb12b: movabs $0x7c0065a08,%rax  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x00000000032cb135: mov    0x8(%rdx),%ebx
  0x00000000032cb138: shl    $0x3,%rbx
  0x00000000032cb13c: cmp    0x40(%rbx),%rax
  0x00000000032cb140: jne    0x00000000032ccca0
  0x00000000032cb146: jmpq   0x00000000032cb14b
  0x00000000032cb14b: mov    %rdx,%rsi
  0x00000000032cb14e: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000032ccca5
  0x00000000032cb151: mov    %rdx,%rsi
  0x00000000032cb154: movabs $0x1c48cad0,%rdi   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb15e: addq   $0x1,0x118(%rdi)
  0x00000000032cb166: mov    %rdx,%rsi
  0x00000000032cb169: mov    %rsi,%rdx          ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)

  0x00000000032cb16c: mov    %rsi,0x68(%rsp)
  0x00000000032cb171: nop
  0x00000000032cb172: nop
  0x00000000032cb173: nop
  0x00000000032cb174: nop
  0x00000000032cb175: nop
  0x00000000032cb176: nop
  0x00000000032cb177: callq  0x00000000031d61a0  ; OopMap{[104]=Oop off=156}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {optimized virtual_call}
  0x00000000032cb17c: mov    0x68(%rsp),%r11
  0x00000000032cb181: cmp    $0x0,%r11
  0x00000000032cb185: jne    0x00000000032cb1a0
  0x00000000032cb187: movabs $0x1c48cad0,%rsi   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb191: orl    $0x100,0x130(%rsi)
  0x00000000032cb19b: jmpq   0x00000000032cb262
  0x00000000032cb1a0: movabs $0x7c0065a08,%rdi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x00000000032cb1aa: mov    0x8(%r11),%edx
  0x00000000032cb1ae: shl    $0x3,%rdx
  0x00000000032cb1b2: cmp    %rdx,%rdi
  0x00000000032cb1b5: jne    0x00000000032cb246
  0x00000000032cb1bb: movabs $0x1c48cad0,%rsi   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb1c5: mov    0x8(%r11),%edi
  0x00000000032cb1c9: shl    $0x3,%rdi
  0x00000000032cb1cd: cmp    0x140(%rsi),%rdi
  0x00000000032cb1d4: jne    0x00000000032cb1e3
  0x00000000032cb1d6: addq   $0x1,0x148(%rsi)
  0x00000000032cb1de: jmpq   0x00000000032cb267
  0x00000000032cb1e3: cmp    0x150(%rsi),%rdi
  0x00000000032cb1ea: jne    0x00000000032cb1f9
  0x00000000032cb1ec: addq   $0x1,0x158(%rsi)
  0x00000000032cb1f4: jmpq   0x00000000032cb267
  0x00000000032cb1f9: cmpq   $0x0,0x140(%rsi)
  0x00000000032cb204: jne    0x00000000032cb21d
  0x00000000032cb206: mov    %rdi,0x140(%rsi)
  0x00000000032cb20d: movq   $0x1,0x148(%rsi)
  0x00000000032cb218: jmpq   0x00000000032cb267
  0x00000000032cb21d: cmpq   $0x0,0x150(%rsi)
  0x00000000032cb228: jne    0x00000000032cb241
  0x00000000032cb22a: mov    %rdi,0x150(%rsi)
  0x00000000032cb231: movq   $0x1,0x158(%rsi)
  0x00000000032cb23c: jmpq   0x00000000032cb267
  0x00000000032cb241: jmpq   0x00000000032cb267
  0x00000000032cb246: movabs $0x1c48cad0,%rsi   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb250: subq   $0x1,0x138(%rsi)
  0x00000000032cb258: jmpq   0x00000000032cb262
  0x00000000032cb25d: jmpq   0x00000000032cb267
  0x00000000032cb262: xor    %rbx,%rbx
  0x00000000032cb265: jmp    0x00000000032cb271
  0x00000000032cb267: movabs $0x1,%rbx          ;*instanceof
                                                ; - java.io.DataInputStream::readUTF@12 (line 592)

  0x00000000032cb271: cmp    $0x0,%ebx
  0x00000000032cb274: movabs $0x1c48cad0,%rbx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb27e: movabs $0x168,%rdx
  0x00000000032cb288: je     0x00000000032cb298
  0x00000000032cb28e: movabs $0x178,%rdx
  0x00000000032cb298: mov    (%rbx,%rdx,1),%rsi
  0x00000000032cb29c: lea    0x1(%rsi),%rsi
  0x00000000032cb2a0: mov    %rsi,(%rbx,%rdx,1)
  0x00000000032cb2a4: je     0x00000000032cb533  ;*ifeq
                                                ; - java.io.DataInputStream::readUTF@15 (line 592)

  0x00000000032cb2aa: cmp    $0x0,%r11
  0x00000000032cb2ae: jne    0x00000000032cb2c9
  0x00000000032cb2b0: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb2ba: orl    $0x100,0x180(%rdx)
  0x00000000032cb2c4: jmpq   0x00000000032cb38b
  0x00000000032cb2c9: movabs $0x7c0065a08,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x00000000032cb2d3: mov    0x8(%r11),%ebx
  0x00000000032cb2d7: shl    $0x3,%rbx
  0x00000000032cb2db: cmp    %rbx,%rsi
  0x00000000032cb2de: jne    0x00000000032cb36f
  0x00000000032cb2e4: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb2ee: mov    0x8(%r11),%esi
  0x00000000032cb2f2: shl    $0x3,%rsi
  0x00000000032cb2f6: cmp    0x190(%rdx),%rsi
  0x00000000032cb2fd: jne    0x00000000032cb30c
  0x00000000032cb2ff: addq   $0x1,0x198(%rdx)
  0x00000000032cb307: jmpq   0x00000000032cb38b
  0x00000000032cb30c: cmp    0x1a0(%rdx),%rsi
  0x00000000032cb313: jne    0x00000000032cb322
  0x00000000032cb315: addq   $0x1,0x1a8(%rdx)
  0x00000000032cb31d: jmpq   0x00000000032cb38b
  0x00000000032cb322: cmpq   $0x0,0x190(%rdx)
  0x00000000032cb32d: jne    0x00000000032cb346
  0x00000000032cb32f: mov    %rsi,0x190(%rdx)
  0x00000000032cb336: movq   $0x1,0x198(%rdx)
  0x00000000032cb341: jmpq   0x00000000032cb38b
  0x00000000032cb346: cmpq   $0x0,0x1a0(%rdx)
  0x00000000032cb351: jne    0x00000000032cb36a
  0x00000000032cb353: mov    %rsi,0x1a0(%rdx)
  0x00000000032cb35a: movq   $0x1,0x1a8(%rdx)
  0x00000000032cb365: jmpq   0x00000000032cb38b
  0x00000000032cb36a: jmpq   0x00000000032cb38b
  0x00000000032cb36f: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb379: subq   $0x1,0x188(%rdx)
  0x00000000032cb381: jmpq   0x00000000032cccaa
  0x00000000032cb386: jmpq   0x00000000032cb38b
  0x00000000032cb38b: mov    %r11,%r8           ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)

  0x00000000032cb38e: mov    0x10(%r8),%ebx     ; implicit exception: dispatches to 0x00000000032cccb3
  0x00000000032cb392: shl    $0x3,%rbx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)

  0x00000000032cb396: mov    0xc(%rbx),%ebx     ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ; implicit exception: dispatches to 0x00000000032cccb8
  0x00000000032cb399: cmp    %eax,%ebx
  0x00000000032cb39b: movabs $0x1c48cad0,%rbx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb3a5: movabs $0x1b8,%rdx
  0x00000000032cb3af: jge    0x00000000032cb3bf
  0x00000000032cb3b5: movabs $0x1c8,%rdx
  0x00000000032cb3bf: mov    (%rbx,%rdx,1),%rsi
  0x00000000032cb3c3: lea    0x1(%rsi),%rsi
  0x00000000032cb3c7: mov    %rsi,(%rbx,%rdx,1)
  0x00000000032cb3cb: jl     0x00000000032cb3d9  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@31 (line 594)

  0x00000000032cb3d1: mov    %rax,%r13
  0x00000000032cb3d4: jmpq   0x00000000032cb50e  ;*aload
                                                ; - java.io.DataInputStream::readUTF@54 (line 598)

  0x00000000032cb3d9: mov    %rax,%r9
  0x00000000032cb3dc: shl    %r9d
  0x00000000032cb3df: mov    %r9,%rbx
  0x00000000032cb3e2: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x00000000032cb3ec: mov    %rax,%r13
  0x00000000032cb3ef: movslq %ebx,%rbx
  0x00000000032cb3f2: mov    %rbx,%rdi
  0x00000000032cb3f5: cmp    $0xffffff,%rbx
  0x00000000032cb3fc: ja     0x00000000032cccbd
  0x00000000032cb402: movabs $0x17,%rsi
  0x00000000032cb40c: lea    (%rsi,%rbx,1),%rsi
  0x00000000032cb410: and    $0xfffffffffffffff8,%rsi
  0x00000000032cb414: mov    0x60(%r15),%rax
  0x00000000032cb418: lea    (%rax,%rsi,1),%rsi
  0x00000000032cb41c: cmp    0x70(%r15),%rsi
  0x00000000032cb420: ja     0x00000000032cccbd
  0x00000000032cb426: mov    %rsi,0x60(%r15)
  0x00000000032cb42a: sub    %rax,%rsi
  0x00000000032cb42d: movq   $0x1,(%rax)
  0x00000000032cb434: mov    %rdx,%rcx
  0x00000000032cb437: shr    $0x3,%rcx
  0x00000000032cb43b: mov    %ecx,0x8(%rax)
  0x00000000032cb43e: mov    %ebx,0xc(%rax)
  0x00000000032cb441: sub    $0x10,%rsi
  0x00000000032cb445: je     0x00000000032cb45c
  0x00000000032cb44b: xor    %rbx,%rbx
  0x00000000032cb44e: shr    $0x3,%rsi
  0x00000000032cb452: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032cb457: dec    %rsi
  0x00000000032cb45a: jne    0x00000000032cb452  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)

  0x00000000032cb45c: mov    %rax,%r10
  0x00000000032cb45f: shr    $0x3,%r10
  0x00000000032cb463: mov    %r10d,0x10(%r8)
  0x00000000032cb467: mov    %r8,%rbx
  0x00000000032cb46a: shr    $0x9,%rbx
  0x00000000032cb46e: movabs $0xef3d000,%r14
  0x00000000032cb478: movb   $0x0,(%rbx,%r14,1)  ;*putfield bytearr
                                                ; - java.io.DataInputStream::readUTF@41 (line 595)

  0x00000000032cb47d: mov    %r9,%rbx
  0x00000000032cb480: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032cb48a: movslq %ebx,%rbx
  0x00000000032cb48d: mov    %rbx,%rdi
  0x00000000032cb490: cmp    $0xffffff,%rbx
  0x00000000032cb497: ja     0x00000000032cccc7
  0x00000000032cb49d: movabs $0x17,%rsi
  0x00000000032cb4a7: lea    (%rsi,%rbx,2),%rsi
  0x00000000032cb4ab: and    $0xfffffffffffffff8,%rsi
  0x00000000032cb4af: mov    0x60(%r15),%rax
  0x00000000032cb4b3: lea    (%rax,%rsi,1),%rsi
  0x00000000032cb4b7: cmp    0x70(%r15),%rsi
  0x00000000032cb4bb: ja     0x00000000032cccc7
  0x00000000032cb4c1: mov    %rsi,0x60(%r15)
  0x00000000032cb4c5: sub    %rax,%rsi
  0x00000000032cb4c8: movq   $0x1,(%rax)
  0x00000000032cb4cf: mov    %rdx,%rcx
  0x00000000032cb4d2: shr    $0x3,%rcx
  0x00000000032cb4d6: mov    %ecx,0x8(%rax)
  0x00000000032cb4d9: mov    %ebx,0xc(%rax)
  0x00000000032cb4dc: sub    $0x10,%rsi
  0x00000000032cb4e0: je     0x00000000032cb4f7
  0x00000000032cb4e6: xor    %rbx,%rbx
  0x00000000032cb4e9: shr    $0x3,%rsi
  0x00000000032cb4ed: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032cb4f2: dec    %rsi
  0x00000000032cb4f5: jne    0x00000000032cb4ed  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)

  0x00000000032cb4f7: mov    %rax,%r10
  0x00000000032cb4fa: shr    $0x3,%r10
  0x00000000032cb4fe: mov    %r10d,0x14(%r8)
  0x00000000032cb502: mov    %r8,%rbx
  0x00000000032cb505: shr    $0x9,%rbx
  0x00000000032cb509: movb   $0x0,(%rbx,%r14,1)  ;*putfield chararr
                                                ; - java.io.DataInputStream::readUTF@51 (line 596)

  0x00000000032cb50e: mov    0x14(%r8),%ebx
  0x00000000032cb512: shl    $0x3,%rbx          ;*getfield chararr
                                                ; - java.io.DataInputStream::readUTF@56 (line 598)

  0x00000000032cb516: mov    0x10(%r8),%edx
  0x00000000032cb51a: shl    $0x3,%rdx          ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@62 (line 599)

  0x00000000032cb51e: movabs $0x1c48cad0,%rsi   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb528: incl   0x1d8(%rsi)
  0x00000000032cb52e: jmpq   0x00000000032cb633  ;*goto
                                                ; - java.io.DataInputStream::readUTF@66 (line 600)

  0x00000000032cb533: mov    %rax,%r13
  0x00000000032cb536: mov    %r13,%rbx
  0x00000000032cb539: movabs $0x7c00007a8,%rdx  ;   {metadata({type array byte})}
  0x00000000032cb543: movslq %ebx,%rbx
  0x00000000032cb546: mov    %rbx,%rdi
  0x00000000032cb549: cmp    $0xffffff,%rbx
  0x00000000032cb550: ja     0x00000000032cccd1
  0x00000000032cb556: movabs $0x17,%rsi
  0x00000000032cb560: lea    (%rsi,%rbx,1),%rsi
  0x00000000032cb564: and    $0xfffffffffffffff8,%rsi
  0x00000000032cb568: mov    0x60(%r15),%rax
  0x00000000032cb56c: lea    (%rax,%rsi,1),%rsi
  0x00000000032cb570: cmp    0x70(%r15),%rsi
  0x00000000032cb574: ja     0x00000000032cccd1
  0x00000000032cb57a: mov    %rsi,0x60(%r15)
  0x00000000032cb57e: sub    %rax,%rsi
  0x00000000032cb581: movq   $0x1,(%rax)
  0x00000000032cb588: mov    %rdx,%rcx
  0x00000000032cb58b: shr    $0x3,%rcx
  0x00000000032cb58f: mov    %ecx,0x8(%rax)
  0x00000000032cb592: mov    %ebx,0xc(%rax)
  0x00000000032cb595: sub    $0x10,%rsi
  0x00000000032cb599: je     0x00000000032cb5b0
  0x00000000032cb59f: xor    %rbx,%rbx
  0x00000000032cb5a2: shr    $0x3,%rsi
  0x00000000032cb5a6: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032cb5ab: dec    %rsi
  0x00000000032cb5ae: jne    0x00000000032cb5a6
  0x00000000032cb5b0: mov    %rax,%r8           ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)

  0x00000000032cb5b3: mov    %r13,%rbx
  0x00000000032cb5b6: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032cb5c0: movslq %ebx,%rbx
  0x00000000032cb5c3: mov    %rbx,%rdi
  0x00000000032cb5c6: cmp    $0xffffff,%rbx
  0x00000000032cb5cd: ja     0x00000000032cccdb
  0x00000000032cb5d3: movabs $0x17,%rsi
  0x00000000032cb5dd: lea    (%rsi,%rbx,2),%rsi
  0x00000000032cb5e1: and    $0xfffffffffffffff8,%rsi
  0x00000000032cb5e5: mov    0x60(%r15),%rax
  0x00000000032cb5e9: lea    (%rax,%rsi,1),%rsi
  0x00000000032cb5ed: cmp    0x70(%r15),%rsi
  0x00000000032cb5f1: ja     0x00000000032cccdb
  0x00000000032cb5f7: mov    %rsi,0x60(%r15)
  0x00000000032cb5fb: sub    %rax,%rsi
  0x00000000032cb5fe: movq   $0x1,(%rax)
  0x00000000032cb605: mov    %rdx,%rcx
  0x00000000032cb608: shr    $0x3,%rcx
  0x00000000032cb60c: mov    %ecx,0x8(%rax)
  0x00000000032cb60f: mov    %ebx,0xc(%rax)
  0x00000000032cb612: sub    $0x10,%rsi
  0x00000000032cb616: je     0x00000000032cb62d
  0x00000000032cb61c: xor    %rbx,%rbx
  0x00000000032cb61f: shr    $0x3,%rsi
  0x00000000032cb623: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032cb628: dec    %rsi
  0x00000000032cb62b: jne    0x00000000032cb623  ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)

  0x00000000032cb62d: mov    %rax,%rbx
  0x00000000032cb630: mov    %r8,%rdx           ;*iconst_0
                                                ; - java.io.DataInputStream::readUTF@77 (line 606)

  0x00000000032cb633: mov    %rbx,0x80(%rsp)
  0x00000000032cb63b: cmp    $0x0,%r11
  0x00000000032cb63f: je     0x00000000032cb666
  0x00000000032cb645: movabs $0x7c0065a08,%rsi  ;   {metadata(&apos;java/io/DataInputStream&apos;)}
  0x00000000032cb64f: mov    0x8(%r11),%edi
  0x00000000032cb653: shl    $0x3,%rdi
  0x00000000032cb657: cmp    0x40(%rdi),%rsi
  0x00000000032cb65b: jne    0x00000000032ccce5
  0x00000000032cb661: jmpq   0x00000000032cb666
  0x00000000032cb666: mov    %r11,%r8
  0x00000000032cb669: mov    %r11,%r8
  0x00000000032cb66c: movabs $0x1c48cad0,%r9    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb676: addq   $0x1,0x200(%r9)
  0x00000000032cb67e: mov    %rdx,%r8
  0x00000000032cb681: mov    $0x0,%r9d
  0x00000000032cb687: mov    %r13,%rdi
  0x00000000032cb68a: mov    %rdx,0x78(%rsp)
  0x00000000032cb68f: mov    %r11,%rdx          ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)

  0x00000000032cb692: mov    %r13d,0x70(%rsp)
  0x00000000032cb697: callq  0x00000000031d61a0  ; OopMap{[120]=Oop [128]=Oop off=1468}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {optimized virtual_call}
  0x00000000032cb69c: mov    $0x0,%edx
  0x00000000032cb6a1: mov    $0x0,%esi
  0x00000000032cb6a6: mov    0x80(%rsp),%rbx
  0x00000000032cb6ae: mov    0x78(%rsp),%rdi
  0x00000000032cb6b3: mov    0x70(%rsp),%eax
  0x00000000032cb6b7: jmpq   0x00000000032cb775  ;*iload
                                                ; - java.io.DataInputStream::readUTF@92 (line 611)

  0x00000000032cb6bc: nopl   0x0(%rax)
  0x00000000032cb6c0: movslq %esi,%rcx
  0x00000000032cb6c3: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x00000000032cccea
  0x00000000032cb6c6: jae    0x00000000032cccf4
  0x00000000032cb6cc: movsbl 0x10(%rdi,%rcx,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)

  0x00000000032cb6d1: and    $0xff,%ecx
  0x00000000032cb6d7: cmp    $0x7f,%ecx
  0x00000000032cb6da: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb6e4: movabs $0x240,%r9
  0x00000000032cb6ee: jle    0x00000000032cb6fe
  0x00000000032cb6f4: movabs $0x250,%r9
  0x00000000032cb6fe: mov    (%r8,%r9,1),%r11
  0x00000000032cb702: lea    0x1(%r11),%r11
  0x00000000032cb706: mov    %r11,(%r8,%r9,1)
  0x00000000032cb70a: jg     0x00000000032cb7b5  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@112 (line 613)

  0x00000000032cb710: inc    %esi
  0x00000000032cb712: mov    %rdx,%r8
  0x00000000032cb715: inc    %r8d
  0x00000000032cb718: movslq %edx,%r9
  0x00000000032cb71b: cmp    0xc(%rbx),%edx     ; implicit exception: dispatches to 0x00000000032cccfd
  0x00000000032cb71e: jae    0x00000000032ccd07
  0x00000000032cb724: mov    %cx,0x10(%rbx,%r9,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)

  0x00000000032cb72a: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb734: mov    0xe0(%rdx),%ecx
  0x00000000032cb73a: add    $0x8,%ecx
  0x00000000032cb73d: mov    %ecx,0xe0(%rdx)
  0x00000000032cb743: movabs $0x1c48c3c8,%rdx   ;   {metadata({method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb74d: and    $0xfff8,%ecx
  0x00000000032cb753: cmp    $0x0,%ecx
  0x00000000032cb756: je     0x00000000032ccd10  ; OopMap{rbx=Oop rdi=Oop off=1660}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x00000000032cb75c: test   %eax,-0x9db662(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032cb762: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb76c: incl   0x278(%rdx)
  0x00000000032cb772: mov    %r8,%rdx           ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)

  0x00000000032cb775: cmp    %eax,%esi
  0x00000000032cb777: movabs $0x1c48cad0,%rcx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb781: movabs $0x220,%r8
  0x00000000032cb78b: jge    0x00000000032cb79b
  0x00000000032cb791: movabs $0x230,%r8
  0x00000000032cb79b: mov    (%rcx,%r8,1),%r9
  0x00000000032cb79f: lea    0x1(%r9),%r9
  0x00000000032cb7a3: mov    %r9,(%rcx,%r8,1)
  0x00000000032cb7a7: jl     0x00000000032cb6c0  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@95 (line 611)

  0x00000000032cb7ad: mov    %rdx,%r11
  0x00000000032cb7b0: jmpq   0x00000000032cb7c8  ;*iload
                                                ; - java.io.DataInputStream::readUTF@134 (line 618)

  0x00000000032cb7b5: movabs $0x1c48cad0,%rcx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb7bf: incl   0x260(%rcx)
  0x00000000032cb7c5: mov    %rdx,%r11          ;*goto
                                                ; - java.io.DataInputStream::readUTF@115 (line 613)

  0x00000000032cb7c8: cmp    %eax,%esi
  0x00000000032cb7ca: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb7d4: movabs $0x290,%rcx
  0x00000000032cb7de: jge    0x00000000032cb7ee
  0x00000000032cb7e4: movabs $0x2a0,%rcx
  0x00000000032cb7ee: mov    (%rdx,%rcx,1),%r8
  0x00000000032cb7f2: lea    0x1(%r8),%r8
  0x00000000032cb7f6: mov    %r8,(%rdx,%rcx,1)
  0x00000000032cb7fa: jge    0x00000000032cbb5b  ;*if_icmpge
                                                ; - java.io.DataInputStream::readUTF@137 (line 618)

  0x00000000032cb800: movslq %esi,%rdx
  0x00000000032cb803: cmp    0xc(%rdi),%esi     ; implicit exception: dispatches to 0x00000000032ccd27
  0x00000000032cb806: jae    0x00000000032ccd31
  0x00000000032cb80c: movsbl 0x10(%rdi,%rdx,1),%edx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)

  0x00000000032cb811: and    $0xff,%edx
  0x00000000032cb817: mov    %rdx,%rcx
  0x00000000032cb81a: sar    $0x4,%ecx
  0x00000000032cb81d: cmp    $0x0,%ecx
  0x00000000032cb820: jl     0x00000000032cb82f
  0x00000000032cb826: cmp    $0x7,%ecx
  0x00000000032cb829: jle    0x00000000032cbae0
  0x00000000032cb82f: cmp    $0xc,%ecx
  0x00000000032cb832: je     0x00000000032cb84f
  0x00000000032cb838: cmp    $0xd,%ecx
  0x00000000032cb83b: je     0x00000000032cb84f
  0x00000000032cb841: cmp    $0xe,%ecx
  0x00000000032cb844: je     0x00000000032cb8ed
  0x00000000032cb84a: jmpq   0x00000000032cbb4f  ;*tableswitch
                                                ; - java.io.DataInputStream::readUTF@154 (line 620)

  0x00000000032cb84f: add    $0x2,%esi
  0x00000000032cb852: cmp    %eax,%esi
  0x00000000032cb854: movabs $0x1c48cad0,%rcx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb85e: movabs $0x3d8,%r8
  0x00000000032cb868: jle    0x00000000032cb878
  0x00000000032cb86e: movabs $0x3e8,%r8
  0x00000000032cb878: mov    (%rcx,%r8,1),%r9
  0x00000000032cb87c: lea    0x1(%r9),%r9
  0x00000000032cb880: mov    %r9,(%rcx,%r8,1)
  0x00000000032cb884: jg     0x00000000032ccc31  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@250 (line 629)

  0x00000000032cb88a: mov    %rsi,%rcx
  0x00000000032cb88d: dec    %ecx
  0x00000000032cb88f: movslq %ecx,%r8
  0x00000000032cb892: cmp    0xc(%rdi),%ecx
  0x00000000032cb895: jae    0x00000000032ccd3a
  0x00000000032cb89b: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)

  0x00000000032cb8a1: mov    %rcx,%r8
  0x00000000032cb8a4: and    $0xc0,%r8d
  0x00000000032cb8ab: cmp    $0x80,%r8d
  0x00000000032cb8b2: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb8bc: movabs $0x408,%r9
  0x00000000032cb8c6: je     0x00000000032cb8d6
  0x00000000032cb8cc: movabs $0x418,%r9
  0x00000000032cb8d6: mov    (%r8,%r9,1),%r13
  0x00000000032cb8da: lea    0x1(%r13),%r13
  0x00000000032cb8de: mov    %r13,(%r8,%r9,1)
  0x00000000032cb8e2: je     0x00000000032cba6c
  0x00000000032cb8e8: jmpq   0x00000000032cc6e1  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@280 (line 633)

  0x00000000032cb8ed: add    $0x3,%esi
  0x00000000032cb8f0: cmp    %eax,%esi
  0x00000000032cb8f2: movabs $0x1c48cad0,%rcx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb8fc: movabs $0x4f0,%r8
  0x00000000032cb906: jle    0x00000000032cb916
  0x00000000032cb90c: movabs $0x500,%r8
  0x00000000032cb916: mov    (%rcx,%r8,1),%r9
  0x00000000032cb91a: lea    0x1(%r9),%r9
  0x00000000032cb91e: mov    %r9,(%rcx,%r8,1)
  0x00000000032cb922: jg     0x00000000032cc689  ;*if_icmple
                                                ; - java.io.DataInputStream::readUTF@342 (line 642)

  0x00000000032cb928: mov    %rsi,%rcx
  0x00000000032cb92b: sub    $0x2,%ecx
  0x00000000032cb92e: movslq %ecx,%r8
  0x00000000032cb931: cmp    0xc(%rdi),%ecx
  0x00000000032cb934: jae    0x00000000032ccd43
  0x00000000032cb93a: movsbl 0x10(%rdi,%r8,1),%ecx  ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)

  0x00000000032cb940: mov    %rsi,%r9
  0x00000000032cb943: dec    %r9d
  0x00000000032cb946: mov    %r9d,0x74(%rsp)
  0x00000000032cb94b: movslq %r9d,%r8
  0x00000000032cb94e: cmp    0xc(%rdi),%r9d
  0x00000000032cb952: jae    0x00000000032ccd4c
  0x00000000032cb958: movsbl 0x10(%rdi,%r8,1),%r8d  ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)

  0x00000000032cb95e: mov    %rcx,%r13
  0x00000000032cb961: and    $0xc0,%r13d
  0x00000000032cb968: cmp    $0x80,%r13d
  0x00000000032cb96f: movabs $0x1c48cad0,%r13   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb979: movabs $0x520,%r14
  0x00000000032cb983: jne    0x00000000032cb993
  0x00000000032cb989: movabs $0x530,%r14
  0x00000000032cb993: mov    0x0(%r13,%r14,1),%r9
  0x00000000032cb998: lea    0x1(%r9),%r9
  0x00000000032cb99c: mov    %r9,0x0(%r13,%r14,1)
  0x00000000032cb9a1: jne    0x00000000032cc139  ;*if_icmpne
                                                ; - java.io.DataInputStream::readUTF@380 (line 647)

  0x00000000032cb9a7: mov    %r8,%r9
  0x00000000032cb9aa: and    $0xc0,%r9d
  0x00000000032cb9b1: cmp    $0x80,%r9d
  0x00000000032cb9b8: movabs $0x1c48cad0,%r9    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cb9c2: movabs $0x540,%r13
  0x00000000032cb9cc: je     0x00000000032cb9dc
  0x00000000032cb9d2: movabs $0x550,%r13
  0x00000000032cb9dc: mov    (%r9,%r13,1),%r14
  0x00000000032cb9e0: lea    0x1(%r14),%r14
  0x00000000032cb9e4: mov    %r14,(%r9,%r13,1)
  0x00000000032cb9e8: jne    0x00000000032cc139  ;*if_icmpeq
                                                ; - java.io.DataInputStream::readUTF@392 (line 647)

  0x00000000032cb9ee: mov    %r11,%r9
  0x00000000032cb9f1: inc    %r9d
  0x00000000032cb9f4: and    $0xf,%edx
  0x00000000032cb9f7: shl    $0xc,%edx
  0x00000000032cb9fa: and    $0x3f,%ecx
  0x00000000032cb9fd: shl    $0x6,%ecx
  0x00000000032cba00: or     %rcx,%rdx
  0x00000000032cba03: and    $0x3f,%r8d
  0x00000000032cba07: or     %r8,%rdx
  0x00000000032cba0a: movslq %r11d,%rcx
  0x00000000032cba0d: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x00000000032ccd55
  0x00000000032cba11: jae    0x00000000032ccd5f
  0x00000000032cba17: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)

  0x00000000032cba1c: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cba26: mov    0xe0(%rdx),%ecx
  0x00000000032cba2c: add    $0x8,%ecx
  0x00000000032cba2f: mov    %ecx,0xe0(%rdx)
  0x00000000032cba35: movabs $0x1c48c3c8,%rdx   ;   {metadata({method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cba3f: and    $0xfff8,%ecx
  0x00000000032cba45: cmp    $0x0,%ecx
  0x00000000032cba48: je     0x00000000032ccd68  ; OopMap{rbx=Oop rdi=Oop off=2414}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x00000000032cba4e: test   %eax,-0x9db954(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032cba54: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cba5e: incl   0x610(%rdx)
  0x00000000032cba64: mov    %r9,%r11
  0x00000000032cba67: jmpq   0x00000000032cb7c8  ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)

  0x00000000032cba6c: mov    %r11,%r8
  0x00000000032cba6f: inc    %r8d
  0x00000000032cba72: and    $0x1f,%edx
  0x00000000032cba75: shl    $0x6,%edx
  0x00000000032cba78: and    $0x3f,%ecx
  0x00000000032cba7b: or     %rcx,%rdx
  0x00000000032cba7e: movslq %r11d,%rcx
  0x00000000032cba81: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x00000000032ccd7f
  0x00000000032cba85: jae    0x00000000032ccd89
  0x00000000032cba8b: mov    %dx,0x10(%rbx,%rcx,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)

  0x00000000032cba90: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cba9a: mov    0xe0(%rdx),%ecx
  0x00000000032cbaa0: add    $0x8,%ecx
  0x00000000032cbaa3: mov    %ecx,0xe0(%rdx)
  0x00000000032cbaa9: movabs $0x1c48c3c8,%rdx   ;   {metadata({method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbab3: and    $0xfff8,%ecx
  0x00000000032cbab9: cmp    $0x0,%ecx
  0x00000000032cbabc: je     0x00000000032ccd92  ; OopMap{rbx=Oop rdi=Oop off=2530}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x00000000032cbac2: test   %eax,-0x9db9c8(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032cbac8: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbad2: incl   0x4d8(%rdx)
  0x00000000032cbad8: mov    %r8,%r11
  0x00000000032cbadb: jmpq   0x00000000032cb7c8  ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)

  0x00000000032cbae0: inc    %esi
  0x00000000032cbae2: mov    %r11,%rcx
  0x00000000032cbae5: inc    %ecx
  0x00000000032cbae7: movslq %r11d,%r8
  0x00000000032cbaea: cmp    0xc(%rbx),%r11d    ; implicit exception: dispatches to 0x00000000032ccda9
  0x00000000032cbaee: jae    0x00000000032ccdb3
  0x00000000032cbaf4: mov    %dx,0x10(%rbx,%r8,2)  ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)

  0x00000000032cbafa: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbb04: mov    0xe0(%rdx),%r8d
  0x00000000032cbb0b: add    $0x8,%r8d
  0x00000000032cbb0f: mov    %r8d,0xe0(%rdx)
  0x00000000032cbb16: movabs $0x1c48c3c8,%rdx   ;   {metadata({method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbb20: and    $0xfff8,%r8d
  0x00000000032cbb27: cmp    $0x0,%r8d
  0x00000000032cbb2b: je     0x00000000032ccdbc  ; OopMap{rbx=Oop rdi=Oop off=2641}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x00000000032cbb31: test   %eax,-0x9dba37(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032cbb37: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbb41: incl   0x3c0(%rdx)
  0x00000000032cbb47: mov    %rcx,%r11
  0x00000000032cbb4a: jmpq   0x00000000032cb7c8  ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)

  0x00000000032cbb4f: mov    %esi,0x98(%rsp)
  0x00000000032cbb56: jmpq   0x00000000032cbbeb  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)

  0x00000000032cbb5b: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032cbb65: mov    0x60(%r15),%rax
  0x00000000032cbb69: lea    0x18(%rax),%rdi
  0x00000000032cbb6d: cmp    0x70(%r15),%rdi
  0x00000000032cbb71: ja     0x00000000032ccdd3
  0x00000000032cbb77: mov    %rdi,0x60(%r15)
  0x00000000032cbb7b: mov    0xa8(%rdx),%rcx
  0x00000000032cbb82: mov    %rcx,(%rax)
  0x00000000032cbb85: mov    %rdx,%rcx
  0x00000000032cbb88: shr    $0x3,%rcx
  0x00000000032cbb8c: mov    %ecx,0x8(%rax)
  0x00000000032cbb8f: xor    %rcx,%rcx
  0x00000000032cbb92: mov    %ecx,0xc(%rax)
  0x00000000032cbb95: xor    %rcx,%rcx
  0x00000000032cbb98: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)

  0x00000000032cbb9c: mov    %rax,%r8
  0x00000000032cbb9f: movabs $0x1c48cad0,%r9    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbba9: addq   $0x1,0x6d8(%r9)
  0x00000000032cbbb1: mov    %rbx,%r8
  0x00000000032cbbb4: mov    $0x0,%r9d
  0x00000000032cbbba: mov    %r11,%rdi
  0x00000000032cbbbd: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)

  0x00000000032cbbc0: mov    %rax,0x88(%rsp)
  0x00000000032cbbc8: nop
  0x00000000032cbbc9: nop
  0x00000000032cbbca: nop
  0x00000000032cbbcb: nop
  0x00000000032cbbcc: nop
  0x00000000032cbbcd: nop
  0x00000000032cbbce: nop
  0x00000000032cbbcf: callq  0x00000000031d61a0  ; OopMap{[136]=Oop off=2804}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@497 (line 661)
                                                ;   {optimized virtual_call}
  0x00000000032cbbd4: mov    0x88(%rsp),%rax
  0x00000000032cbbdc: add    $0x100,%rsp
  0x00000000032cbbe3: pop    %rbp
  0x00000000032cbbe4: test   %eax,-0x9dbaea(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032cbbea: retq                      ;*areturn
                                                ; - java.io.DataInputStream::readUTF@500 (line 661)

  0x00000000032cbbeb: nopl   0x0(%rax,%rax,1)
  0x00000000032cbbf0: jmpq   0x00000000032ccdef  ;   {no_reloc}
  0x00000000032cbbf5: add    %al,(%rax)
  0x00000000032cbbf7: add    %al,(%rax)
  0x00000000032cbbf9: add    %ch,%cl
  0x00000000032cbbfb: cli    
  0x00000000032cbbfc: adc    %eax,(%rax)
  0x00000000032cbbfe: add    %dl,0x1210e9(%rax)  ;*new
                                                ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {no_reloc}
  0x00000000032cbc04: add    %al,(%rax)
  0x00000000032cbc06: add    %al,(%rax)
  0x00000000032cbc08: add    %al,(%rax)
  0x00000000032cbc0a: mov    %rax,0xa0(%rsp)
  0x00000000032cbc12: mov    0x60(%r15),%rax
  0x00000000032cbc16: lea    0x18(%rax),%rdi
  0x00000000032cbc1a: cmp    0x70(%r15),%rdi
  0x00000000032cbc1e: ja     0x00000000032cce1f
  0x00000000032cbc24: mov    %rdi,0x60(%r15)
  0x00000000032cbc28: mov    0xa8(%rdx),%rcx
  0x00000000032cbc2f: mov    %rcx,(%rax)
  0x00000000032cbc32: mov    %rdx,%rcx
  0x00000000032cbc35: shr    $0x3,%rcx
  0x00000000032cbc39: mov    %ecx,0x8(%rax)
  0x00000000032cbc3c: xor    %rcx,%rcx
  0x00000000032cbc3f: mov    %ecx,0xc(%rax)
  0x00000000032cbc42: xor    %rcx,%rcx
  0x00000000032cbc45: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)

  0x00000000032cbc49: mov    %rax,%rbx
  0x00000000032cbc4c: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbc56: addq   $0x1,0x628(%rdx)
  0x00000000032cbc5e: movabs $0x1c387de8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cbc68: mov    0xdc(%rbx),%edx
  0x00000000032cbc6e: add    $0x8,%edx
  0x00000000032cbc71: mov    %edx,0xdc(%rbx)
  0x00000000032cbc77: movabs $0x1c1c7640,%rbx   ;   {metadata({method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cbc81: and    $0x7ffff8,%edx
  0x00000000032cbc87: cmp    $0x0,%edx
  0x00000000032cbc8a: je     0x00000000032cce2c
  0x00000000032cbc90: mov    %rax,%rbx
  0x00000000032cbc93: movabs $0x1c387de8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cbc9d: addq   $0x1,0x108(%rdx)
  0x00000000032cbca5: movabs $0x1c37d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032cbcaf: mov    0xdc(%rbx),%edx
  0x00000000032cbcb5: add    $0x8,%edx
  0x00000000032cbcb8: mov    %edx,0xdc(%rbx)
  0x00000000032cbcbe: movabs $0x1c1c3970,%rbx   ;   {metadata({method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032cbcc8: and    $0x7ffff8,%edx
  0x00000000032cbcce: cmp    $0x0,%edx
  0x00000000032cbcd1: je     0x00000000032cce43
  0x00000000032cbcd7: mov    %rax,%rbx
  0x00000000032cbcda: movabs $0x1c37d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032cbce4: addq   $0x1,0x108(%rdx)
  0x00000000032cbcec: movabs $0x1c281c10,%rbx   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032cbcf6: mov    0xdc(%rbx),%edx
  0x00000000032cbcfc: add    $0x8,%edx
  0x00000000032cbcff: mov    %edx,0xdc(%rbx)
  0x00000000032cbd05: movabs $0x1c150480,%rbx   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032cbd0f: and    $0x7ffff8,%edx
  0x00000000032cbd15: cmp    $0x0,%edx
  0x00000000032cbd18: je     0x00000000032cce5a
  0x00000000032cbd1e: mov    $0x10,%ebx
  0x00000000032cbd23: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032cbd2d: mov    %rax,%r13
  0x00000000032cbd30: movslq %ebx,%rbx
  0x00000000032cbd33: mov    %rbx,%rdi
  0x00000000032cbd36: cmp    $0xffffff,%rbx
  0x00000000032cbd3d: ja     0x00000000032cce71
  0x00000000032cbd43: movabs $0x17,%rsi
  0x00000000032cbd4d: lea    (%rsi,%rbx,2),%rsi
  0x00000000032cbd51: and    $0xfffffffffffffff8,%rsi
  0x00000000032cbd55: mov    0x60(%r15),%rax
  0x00000000032cbd59: lea    (%rax,%rsi,1),%rsi
  0x00000000032cbd5d: cmp    0x70(%r15),%rsi
  0x00000000032cbd61: ja     0x00000000032cce71
  0x00000000032cbd67: mov    %rsi,0x60(%r15)
  0x00000000032cbd6b: sub    %rax,%rsi
  0x00000000032cbd6e: movq   $0x1,(%rax)
  0x00000000032cbd75: mov    %rdx,%rcx
  0x00000000032cbd78: shr    $0x3,%rcx
  0x00000000032cbd7c: mov    %ecx,0x8(%rax)
  0x00000000032cbd7f: mov    %ebx,0xc(%rax)
  0x00000000032cbd82: sub    $0x10,%rsi
  0x00000000032cbd86: je     0x00000000032cbd9d
  0x00000000032cbd8c: xor    %rbx,%rbx
  0x00000000032cbd8f: shr    $0x3,%rsi
  0x00000000032cbd93: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032cbd98: dec    %rsi
  0x00000000032cbd9b: jne    0x00000000032cbd93  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x00000000032cbd9d: mov    %rax,%r10
  0x00000000032cbda0: shr    $0x3,%r10
  0x00000000032cbda4: mov    %r10d,0x10(%r13)
  0x00000000032cbda8: mov    %r13,%rax
  0x00000000032cbdab: shr    $0x9,%rax
  0x00000000032cbdaf: movabs $0xef3d000,%r8
  0x00000000032cbdb9: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)

  0x00000000032cbdbe: mov    %r13,%rax
  0x00000000032cbdc1: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbdcb: mov    0x8(%rax),%eax
  0x00000000032cbdce: shl    $0x3,%rax
  0x00000000032cbdd2: cmp    0x640(%r8),%rax
  0x00000000032cbdd9: jne    0x00000000032cbde8
  0x00000000032cbddb: addq   $0x1,0x648(%r8)
  0x00000000032cbde3: jmpq   0x00000000032cbe4e
  0x00000000032cbde8: cmp    0x650(%r8),%rax
  0x00000000032cbdef: jne    0x00000000032cbdfe
  0x00000000032cbdf1: addq   $0x1,0x658(%r8)
  0x00000000032cbdf9: jmpq   0x00000000032cbe4e
  0x00000000032cbdfe: cmpq   $0x0,0x640(%r8)
  0x00000000032cbe09: jne    0x00000000032cbe22
  0x00000000032cbe0b: mov    %rax,0x640(%r8)
  0x00000000032cbe12: movq   $0x1,0x648(%r8)
  0x00000000032cbe1d: jmpq   0x00000000032cbe4e
  0x00000000032cbe22: cmpq   $0x0,0x650(%r8)
  0x00000000032cbe2d: jne    0x00000000032cbe46
  0x00000000032cbe2f: mov    %rax,0x650(%r8)
  0x00000000032cbe36: movq   $0x1,0x658(%r8)
  0x00000000032cbe41: jmpq   0x00000000032cbe4e
  0x00000000032cbe46: addq   $0x1,0x638(%r8)
  0x00000000032cbe4e: movabs $0x1c3411d0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cbe58: mov    0xdc(%r8),%edx
  0x00000000032cbe5f: add    $0x8,%edx
  0x00000000032cbe62: mov    %edx,0xdc(%r8)
  0x00000000032cbe69: movabs $0x1c1c7958,%r8    ;   {metadata({method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cbe73: and    $0x7ffff8,%edx
  0x00000000032cbe79: cmp    $0x0,%edx
  0x00000000032cbe7c: je     0x00000000032cce7b
  0x00000000032cbe82: mov    %r13,%rax
  0x00000000032cbe85: movabs $0x1c3411d0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cbe8f: addq   $0x1,0x108(%r8)
  0x00000000032cbe97: movabs $0x76bf1f138,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x00000000032cbea1: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)

  0x00000000032cbea4: mov    %r13,0x90(%rsp)
  0x00000000032cbeac: nop
  0x00000000032cbead: nop
  0x00000000032cbeae: nop
  0x00000000032cbeaf: callq  0x00000000031d61a0  ; OopMap{[144]=Oop [160]=Oop off=3540}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {optimized virtual_call}
  0x00000000032cbeb4: mov    0x90(%rsp),%rax
  0x00000000032cbebc: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbec6: mov    0x8(%rax),%eax
  0x00000000032cbec9: shl    $0x3,%rax
  0x00000000032cbecd: cmp    0x670(%r8),%rax
  0x00000000032cbed4: jne    0x00000000032cbee3
  0x00000000032cbed6: addq   $0x1,0x678(%r8)
  0x00000000032cbede: jmpq   0x00000000032cbf49
  0x00000000032cbee3: cmp    0x680(%r8),%rax
  0x00000000032cbeea: jne    0x00000000032cbef9
  0x00000000032cbeec: addq   $0x1,0x688(%r8)
  0x00000000032cbef4: jmpq   0x00000000032cbf49
  0x00000000032cbef9: cmpq   $0x0,0x670(%r8)
  0x00000000032cbf04: jne    0x00000000032cbf1d
  0x00000000032cbf06: mov    %rax,0x670(%r8)
  0x00000000032cbf0d: movq   $0x1,0x678(%r8)
  0x00000000032cbf18: jmpq   0x00000000032cbf49
  0x00000000032cbf1d: cmpq   $0x0,0x680(%r8)
  0x00000000032cbf28: jne    0x00000000032cbf41
  0x00000000032cbf2a: mov    %rax,0x680(%r8)
  0x00000000032cbf31: movq   $0x1,0x688(%r8)
  0x00000000032cbf3c: jmpq   0x00000000032cbf49
  0x00000000032cbf41: addq   $0x1,0x668(%r8)
  0x00000000032cbf49: movabs $0x1c464bd0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cbf53: mov    0xdc(%r8),%edx
  0x00000000032cbf5a: add    $0x8,%edx
  0x00000000032cbf5d: mov    %edx,0xdc(%r8)
  0x00000000032cbf64: movabs $0x1c1c7e18,%r8    ;   {metadata({method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cbf6e: and    $0x7ffff8,%edx
  0x00000000032cbf74: cmp    $0x0,%edx
  0x00000000032cbf77: je     0x00000000032cce92
  0x00000000032cbf7d: mov    0x90(%rsp),%rax
  0x00000000032cbf85: movabs $0x1c464bd0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cbf8f: addq   $0x1,0x108(%r8)
  0x00000000032cbf97: mov    0x98(%rsp),%r8d
  0x00000000032cbf9f: mov    0x90(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)

  0x00000000032cbfa7: callq  0x00000000031d61a0  ; OopMap{[144]=Oop [160]=Oop off=3788}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {optimized virtual_call}
  0x00000000032cbfac: mov    0x90(%rsp),%rax
  0x00000000032cbfb4: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cbfbe: mov    0x8(%rax),%eax
  0x00000000032cbfc1: shl    $0x3,%rax
  0x00000000032cbfc5: cmp    0x6a0(%rdx),%rax
  0x00000000032cbfcc: jne    0x00000000032cbfdb
  0x00000000032cbfce: addq   $0x1,0x6a8(%rdx)
  0x00000000032cbfd6: jmpq   0x00000000032cc041
  0x00000000032cbfdb: cmp    0x6b0(%rdx),%rax
  0x00000000032cbfe2: jne    0x00000000032cbff1
  0x00000000032cbfe4: addq   $0x1,0x6b8(%rdx)
  0x00000000032cbfec: jmpq   0x00000000032cc041
  0x00000000032cbff1: cmpq   $0x0,0x6a0(%rdx)
  0x00000000032cbffc: jne    0x00000000032cc015
  0x00000000032cbffe: mov    %rax,0x6a0(%rdx)
  0x00000000032cc005: movq   $0x1,0x6a8(%rdx)
  0x00000000032cc010: jmpq   0x00000000032cc041
  0x00000000032cc015: cmpq   $0x0,0x6b0(%rdx)
  0x00000000032cc020: jne    0x00000000032cc039
  0x00000000032cc022: mov    %rax,0x6b0(%rdx)
  0x00000000032cc029: movq   $0x1,0x6b8(%rdx)
  0x00000000032cc034: jmpq   0x00000000032cc041
  0x00000000032cc039: addq   $0x1,0x698(%rdx)
  0x00000000032cc041: movabs $0x1c387f18,%rdx   ;   {metadata(method data for {method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc04b: mov    0xdc(%rdx),%esi
  0x00000000032cc051: add    $0x8,%esi
  0x00000000032cc054: mov    %esi,0xdc(%rdx)
  0x00000000032cc05a: movabs $0x1c1c8d08,%rdx   ;   {metadata({method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc064: and    $0x7ffff8,%esi
  0x00000000032cc06a: cmp    $0x0,%esi
  0x00000000032cc06d: je     0x00000000032ccea9
  0x00000000032cc073: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032cc07d: mov    0x60(%r15),%rax
  0x00000000032cc081: lea    0x18(%rax),%rdi
  0x00000000032cc085: cmp    0x70(%r15),%rdi
  0x00000000032cc089: ja     0x00000000032ccec0
  0x00000000032cc08f: mov    %rdi,0x60(%r15)
  0x00000000032cc093: mov    0xa8(%rdx),%rcx
  0x00000000032cc09a: mov    %rcx,(%rax)
  0x00000000032cc09d: mov    %rdx,%rcx
  0x00000000032cc0a0: shr    $0x3,%rcx
  0x00000000032cc0a4: mov    %ecx,0x8(%rax)
  0x00000000032cc0a7: xor    %rcx,%rcx
  0x00000000032cc0aa: mov    %ecx,0xc(%rax)
  0x00000000032cc0ad: xor    %rcx,%rcx
  0x00000000032cc0b0: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x00000000032cc0b4: mov    0x90(%rsp),%r8
  0x00000000032cc0bc: mov    0x10(%r8),%r9d
  0x00000000032cc0c0: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x00000000032cc0c4: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x00000000032cc0c8: mov    %rax,%r8
  0x00000000032cc0cb: movabs $0x1c387f18,%rdx   ;   {metadata(method data for {method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc0d5: addq   $0x1,0x108(%rdx)
  0x00000000032cc0dd: mov    %r9,%r8
  0x00000000032cc0e0: mov    $0x0,%r9d
  0x00000000032cc0e6: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)

  0x00000000032cc0e9: mov    %rax,0xa8(%rsp)
  0x00000000032cc0f1: nop
  0x00000000032cc0f2: nop
  0x00000000032cc0f3: nop
  0x00000000032cc0f4: nop
  0x00000000032cc0f5: nop
  0x00000000032cc0f6: nop
  0x00000000032cc0f7: callq  0x00000000031d61a0  ; OopMap{[160]=Oop [168]=Oop off=4124}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {optimized virtual_call}
  0x00000000032cc0fc: mov    0xa0(%rsp),%rax
  0x00000000032cc104: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc10e: addq   $0x1,0x6c8(%r8)
  0x00000000032cc116: mov    0xa8(%rsp),%r8
  0x00000000032cc11e: mov    0xa0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)

  0x00000000032cc126: nop
  0x00000000032cc127: callq  0x00000000031d61a0  ; OopMap{[160]=Oop off=4172}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@485 (line 656)
                                                ;   {optimized virtual_call}
  0x00000000032cc12c: mov    0xa0(%rsp),%rax
  0x00000000032cc134: jmpq   0x00000000032cd11e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@488 (line 656)

  0x00000000032cc139: mov    %esi,0x9c(%rsp)
  0x00000000032cc140: jmpq   0x00000000032ccedc  ;   {no_reloc}
  0x00000000032cc145: add    %al,(%rax)
  0x00000000032cc147: add    %al,(%rax)
  0x00000000032cc149: add    %ch,%cl
  0x00000000032cc14b: xchg   %eax,%edi
  0x00000000032cc14c: or     $0xe9900000,%eax   ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {no_reloc}
  0x00000000032cc151: lods   %ds:(%rsi),%eax
  0x00000000032cc152: or     $0x0,%eax
  0x00000000032cc157: add    %al,(%rax)
  0x00000000032cc159: add    %cl,-0x77(%rax)
  0x00000000032cc15c: test   %ah,(%rax,%rdi,4)
  0x00000000032cc15f: add    %al,(%rax)
  0x00000000032cc161: add    %cl,-0x75(%rcx)
  0x00000000032cc164: rex.RXB (bad) 
  0x00000000032cc166: lea    0x18(%rax),%rdi
  0x00000000032cc16a: cmp    0x70(%r15),%rdi
  0x00000000032cc16e: ja     0x00000000032ccf0c
  0x00000000032cc174: mov    %rdi,0x60(%r15)
  0x00000000032cc178: mov    0xa8(%rdx),%rcx
  0x00000000032cc17f: mov    %rcx,(%rax)
  0x00000000032cc182: mov    %rdx,%rcx
  0x00000000032cc185: shr    $0x3,%rcx
  0x00000000032cc189: mov    %ecx,0x8(%rax)
  0x00000000032cc18c: xor    %rcx,%rcx
  0x00000000032cc18f: mov    %ecx,0xc(%rax)
  0x00000000032cc192: xor    %rcx,%rcx
  0x00000000032cc195: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)

  0x00000000032cc199: mov    %rax,%rbx
  0x00000000032cc19c: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc1a6: addq   $0x1,0x560(%rdx)
  0x00000000032cc1ae: movabs $0x1c387de8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc1b8: mov    0xdc(%rbx),%edx
  0x00000000032cc1be: add    $0x8,%edx
  0x00000000032cc1c1: mov    %edx,0xdc(%rbx)
  0x00000000032cc1c7: movabs $0x1c1c7640,%rbx   ;   {metadata({method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc1d1: and    $0x7ffff8,%edx
  0x00000000032cc1d7: cmp    $0x0,%edx
  0x00000000032cc1da: je     0x00000000032ccf19
  0x00000000032cc1e0: mov    %rax,%rbx
  0x00000000032cc1e3: movabs $0x1c387de8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc1ed: addq   $0x1,0x108(%rdx)
  0x00000000032cc1f5: movabs $0x1c37d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032cc1ff: mov    0xdc(%rbx),%edx
  0x00000000032cc205: add    $0x8,%edx
  0x00000000032cc208: mov    %edx,0xdc(%rbx)
  0x00000000032cc20e: movabs $0x1c1c3970,%rbx   ;   {metadata({method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032cc218: and    $0x7ffff8,%edx
  0x00000000032cc21e: cmp    $0x0,%edx
  0x00000000032cc221: je     0x00000000032ccf30
  0x00000000032cc227: mov    %rax,%rbx
  0x00000000032cc22a: movabs $0x1c37d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032cc234: addq   $0x1,0x108(%rdx)
  0x00000000032cc23c: movabs $0x1c281c10,%rbx   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032cc246: mov    0xdc(%rbx),%edx
  0x00000000032cc24c: add    $0x8,%edx
  0x00000000032cc24f: mov    %edx,0xdc(%rbx)
  0x00000000032cc255: movabs $0x1c150480,%rbx   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032cc25f: and    $0x7ffff8,%edx
  0x00000000032cc265: cmp    $0x0,%edx
  0x00000000032cc268: je     0x00000000032ccf47
  0x00000000032cc26e: mov    $0x10,%ebx
  0x00000000032cc273: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032cc27d: mov    %rax,%r14
  0x00000000032cc280: movslq %ebx,%rbx
  0x00000000032cc283: mov    %rbx,%rdi
  0x00000000032cc286: cmp    $0xffffff,%rbx
  0x00000000032cc28d: ja     0x00000000032ccf5e
  0x00000000032cc293: movabs $0x17,%rsi
  0x00000000032cc29d: lea    (%rsi,%rbx,2),%rsi
  0x00000000032cc2a1: and    $0xfffffffffffffff8,%rsi
  0x00000000032cc2a5: mov    0x60(%r15),%rax
  0x00000000032cc2a9: lea    (%rax,%rsi,1),%rsi
  0x00000000032cc2ad: cmp    0x70(%r15),%rsi
  0x00000000032cc2b1: ja     0x00000000032ccf5e
  0x00000000032cc2b7: mov    %rsi,0x60(%r15)
  0x00000000032cc2bb: sub    %rax,%rsi
  0x00000000032cc2be: movq   $0x1,(%rax)
  0x00000000032cc2c5: mov    %rdx,%rcx
  0x00000000032cc2c8: shr    $0x3,%rcx
  0x00000000032cc2cc: mov    %ecx,0x8(%rax)
  0x00000000032cc2cf: mov    %ebx,0xc(%rax)
  0x00000000032cc2d2: sub    $0x10,%rsi
  0x00000000032cc2d6: je     0x00000000032cc2ed
  0x00000000032cc2dc: xor    %rbx,%rbx
  0x00000000032cc2df: shr    $0x3,%rsi
  0x00000000032cc2e3: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032cc2e8: dec    %rsi
  0x00000000032cc2eb: jne    0x00000000032cc2e3  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x00000000032cc2ed: mov    %rax,%r10
  0x00000000032cc2f0: shr    $0x3,%r10
  0x00000000032cc2f4: mov    %r10d,0x10(%r14)
  0x00000000032cc2f8: mov    %r14,%rax
  0x00000000032cc2fb: shr    $0x9,%rax
  0x00000000032cc2ff: movabs $0xef3d000,%r8
  0x00000000032cc309: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)

  0x00000000032cc30e: mov    %r14,%rax
  0x00000000032cc311: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc31b: mov    0x8(%rax),%eax
  0x00000000032cc31e: shl    $0x3,%rax
  0x00000000032cc322: cmp    0x578(%r8),%rax
  0x00000000032cc329: jne    0x00000000032cc338
  0x00000000032cc32b: addq   $0x1,0x580(%r8)
  0x00000000032cc333: jmpq   0x00000000032cc39e
  0x00000000032cc338: cmp    0x588(%r8),%rax
  0x00000000032cc33f: jne    0x00000000032cc34e
  0x00000000032cc341: addq   $0x1,0x590(%r8)
  0x00000000032cc349: jmpq   0x00000000032cc39e
  0x00000000032cc34e: cmpq   $0x0,0x578(%r8)
  0x00000000032cc359: jne    0x00000000032cc372
  0x00000000032cc35b: mov    %rax,0x578(%r8)
  0x00000000032cc362: movq   $0x1,0x580(%r8)
  0x00000000032cc36d: jmpq   0x00000000032cc39e
  0x00000000032cc372: cmpq   $0x0,0x588(%r8)
  0x00000000032cc37d: jne    0x00000000032cc396
  0x00000000032cc37f: mov    %rax,0x588(%r8)
  0x00000000032cc386: movq   $0x1,0x590(%r8)
  0x00000000032cc391: jmpq   0x00000000032cc39e
  0x00000000032cc396: addq   $0x1,0x570(%r8)
  0x00000000032cc39e: movabs $0x1c3411d0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc3a8: mov    0xdc(%r8),%edx
  0x00000000032cc3af: add    $0x8,%edx
  0x00000000032cc3b2: mov    %edx,0xdc(%r8)
  0x00000000032cc3b9: movabs $0x1c1c7958,%r8    ;   {metadata({method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc3c3: and    $0x7ffff8,%edx
  0x00000000032cc3c9: cmp    $0x0,%edx
  0x00000000032cc3cc: je     0x00000000032ccf68
  0x00000000032cc3d2: mov    %r14,%rax
  0x00000000032cc3d5: movabs $0x1c3411d0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc3df: addq   $0x1,0x108(%r8)
  0x00000000032cc3e7: movabs $0x76bf1f138,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x00000000032cc3f1: mov    %r14,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)

  0x00000000032cc3f4: mov    %r14,0xb0(%rsp)
  0x00000000032cc3fc: nop
  0x00000000032cc3fd: nop
  0x00000000032cc3fe: nop
  0x00000000032cc3ff: callq  0x00000000031d61a0  ; OopMap{[176]=Oop [184]=Oop off=4900}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {optimized virtual_call}
  0x00000000032cc404: mov    0xb0(%rsp),%rax
  0x00000000032cc40c: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc416: mov    0x8(%rax),%eax
  0x00000000032cc419: shl    $0x3,%rax
  0x00000000032cc41d: cmp    0x5a8(%r8),%rax
  0x00000000032cc424: jne    0x00000000032cc433
  0x00000000032cc426: addq   $0x1,0x5b0(%r8)
  0x00000000032cc42e: jmpq   0x00000000032cc499
  0x00000000032cc433: cmp    0x5b8(%r8),%rax
  0x00000000032cc43a: jne    0x00000000032cc449
  0x00000000032cc43c: addq   $0x1,0x5c0(%r8)
  0x00000000032cc444: jmpq   0x00000000032cc499
  0x00000000032cc449: cmpq   $0x0,0x5a8(%r8)
  0x00000000032cc454: jne    0x00000000032cc46d
  0x00000000032cc456: mov    %rax,0x5a8(%r8)
  0x00000000032cc45d: movq   $0x1,0x5b0(%r8)
  0x00000000032cc468: jmpq   0x00000000032cc499
  0x00000000032cc46d: cmpq   $0x0,0x5b8(%r8)
  0x00000000032cc478: jne    0x00000000032cc491
  0x00000000032cc47a: mov    %rax,0x5b8(%r8)
  0x00000000032cc481: movq   $0x1,0x5c0(%r8)
  0x00000000032cc48c: jmpq   0x00000000032cc499
  0x00000000032cc491: addq   $0x1,0x5a0(%r8)
  0x00000000032cc499: movabs $0x1c464bd0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc4a3: mov    0xdc(%r8),%edx
  0x00000000032cc4aa: add    $0x8,%edx
  0x00000000032cc4ad: mov    %edx,0xdc(%r8)
  0x00000000032cc4b4: movabs $0x1c1c7e18,%r8    ;   {metadata({method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc4be: and    $0x7ffff8,%edx
  0x00000000032cc4c4: cmp    $0x0,%edx
  0x00000000032cc4c7: je     0x00000000032ccf7f
  0x00000000032cc4cd: mov    0xb0(%rsp),%rax
  0x00000000032cc4d5: movabs $0x1c464bd0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc4df: addq   $0x1,0x108(%r8)
  0x00000000032cc4e7: mov    0x74(%rsp),%r8d
  0x00000000032cc4ec: mov    0xb0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)

  0x00000000032cc4f4: nop
  0x00000000032cc4f5: nop
  0x00000000032cc4f6: nop
  0x00000000032cc4f7: callq  0x00000000031d61a0  ; OopMap{[176]=Oop [184]=Oop off=5148}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {optimized virtual_call}
  0x00000000032cc4fc: mov    0xb0(%rsp),%rax
  0x00000000032cc504: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc50e: mov    0x8(%rax),%eax
  0x00000000032cc511: shl    $0x3,%rax
  0x00000000032cc515: cmp    0x5d8(%rdx),%rax
  0x00000000032cc51c: jne    0x00000000032cc52b
  0x00000000032cc51e: addq   $0x1,0x5e0(%rdx)
  0x00000000032cc526: jmpq   0x00000000032cc591
  0x00000000032cc52b: cmp    0x5e8(%rdx),%rax
  0x00000000032cc532: jne    0x00000000032cc541
  0x00000000032cc534: addq   $0x1,0x5f0(%rdx)
  0x00000000032cc53c: jmpq   0x00000000032cc591
  0x00000000032cc541: cmpq   $0x0,0x5d8(%rdx)
  0x00000000032cc54c: jne    0x00000000032cc565
  0x00000000032cc54e: mov    %rax,0x5d8(%rdx)
  0x00000000032cc555: movq   $0x1,0x5e0(%rdx)
  0x00000000032cc560: jmpq   0x00000000032cc591
  0x00000000032cc565: cmpq   $0x0,0x5e8(%rdx)
  0x00000000032cc570: jne    0x00000000032cc589
  0x00000000032cc572: mov    %rax,0x5e8(%rdx)
  0x00000000032cc579: movq   $0x1,0x5f0(%rdx)
  0x00000000032cc584: jmpq   0x00000000032cc591
  0x00000000032cc589: addq   $0x1,0x5d0(%rdx)
  0x00000000032cc591: movabs $0x1c387f18,%rdx   ;   {metadata(method data for {method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc59b: mov    0xdc(%rdx),%esi
  0x00000000032cc5a1: add    $0x8,%esi
  0x00000000032cc5a4: mov    %esi,0xdc(%rdx)
  0x00000000032cc5aa: movabs $0x1c1c8d08,%rdx   ;   {metadata({method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc5b4: and    $0x7ffff8,%esi
  0x00000000032cc5ba: cmp    $0x0,%esi
  0x00000000032cc5bd: je     0x00000000032ccf96
  0x00000000032cc5c3: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032cc5cd: mov    0x60(%r15),%rax
  0x00000000032cc5d1: lea    0x18(%rax),%rdi
  0x00000000032cc5d5: cmp    0x70(%r15),%rdi
  0x00000000032cc5d9: ja     0x00000000032ccfad
  0x00000000032cc5df: mov    %rdi,0x60(%r15)
  0x00000000032cc5e3: mov    0xa8(%rdx),%rcx
  0x00000000032cc5ea: mov    %rcx,(%rax)
  0x00000000032cc5ed: mov    %rdx,%rcx
  0x00000000032cc5f0: shr    $0x3,%rcx
  0x00000000032cc5f4: mov    %ecx,0x8(%rax)
  0x00000000032cc5f7: xor    %rcx,%rcx
  0x00000000032cc5fa: mov    %ecx,0xc(%rax)
  0x00000000032cc5fd: xor    %rcx,%rcx
  0x00000000032cc600: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x00000000032cc604: mov    0xb0(%rsp),%r8
  0x00000000032cc60c: mov    0x10(%r8),%r9d
  0x00000000032cc610: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x00000000032cc614: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x00000000032cc618: mov    %rax,%r8
  0x00000000032cc61b: movabs $0x1c387f18,%rdx   ;   {metadata(method data for {method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc625: addq   $0x1,0x108(%rdx)
  0x00000000032cc62d: mov    %r9,%r8
  0x00000000032cc630: mov    $0x0,%r9d
  0x00000000032cc636: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)

  0x00000000032cc639: mov    %rax,0xc0(%rsp)
  0x00000000032cc641: nop
  0x00000000032cc642: nop
  0x00000000032cc643: nop
  0x00000000032cc644: nop
  0x00000000032cc645: nop
  0x00000000032cc646: nop
  0x00000000032cc647: callq  0x00000000031d61a0  ; OopMap{[184]=Oop [192]=Oop off=5484}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {optimized virtual_call}
  0x00000000032cc64c: mov    0xb8(%rsp),%rax
  0x00000000032cc654: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc65e: addq   $0x1,0x600(%r8)
  0x00000000032cc666: mov    0xc0(%rsp),%r8
  0x00000000032cc66e: mov    0xb8(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)

  0x00000000032cc676: nop
  0x00000000032cc677: callq  0x00000000031d61a0  ; OopMap{[184]=Oop off=5532}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@421 (line 648)
                                                ;   {optimized virtual_call}
  0x00000000032cc67c: mov    0xb8(%rsp),%rax
  0x00000000032cc684: jmpq   0x00000000032cd11e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@424 (line 648)

  0x00000000032cc689: nopl   0x0(%rax)
  0x00000000032cc690: jmpq   0x00000000032ccfc9  ;   {no_reloc}
  0x00000000032cc695: add    %al,(%rax)
  0x00000000032cc697: add    %al,(%rax)
  0x00000000032cc699: add    %ch,%cl
  0x00000000032cc69b: xor    $0x9,%al
  0x00000000032cc69d: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)

  0x00000000032cc69f: mov    %rax,%r8
  0x00000000032cc6a2: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc6ac: addq   $0x1,0x510(%rdx)
  0x00000000032cc6b4: movabs $0x76bf1f0b8,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x00000000032cc6be: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)

  0x00000000032cc6c1: mov    %rax,0xc8(%rsp)
  0x00000000032cc6c9: nop
  0x00000000032cc6ca: nop
  0x00000000032cc6cb: nop
  0x00000000032cc6cc: nop
  0x00000000032cc6cd: nop
  0x00000000032cc6ce: nop
  0x00000000032cc6cf: callq  0x00000000031d61a0  ; OopMap{[200]=Oop off=5620}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@351 (line 643)
                                                ;   {optimized virtual_call}
  0x00000000032cc6d4: mov    0xc8(%rsp),%rax
  0x00000000032cc6dc: jmpq   0x00000000032cd11e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@354 (line 643)

  0x00000000032cc6e1: mov    %esi,0xd8(%rsp)
  0x00000000032cc6e8: jmpq   0x00000000032ccfef  ;   {no_reloc}
  0x00000000032cc6ed: add    %al,(%rax)
  0x00000000032cc6ef: add    %al,(%rax)
  0x00000000032cc6f1: add    %ch,%cl
  0x00000000032cc6f3: add    (%rcx),%cl
  0x00000000032cc6f5: add    %al,(%rax)         ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)

  0x00000000032cc6f7: nop
  0x00000000032cc6f8: jmpq   0x00000000032cd015  ;   {no_reloc}
  0x00000000032cc6fd: add    %al,(%rax)
  0x00000000032cc6ff: add    %al,(%rax)
  0x00000000032cc701: add    %cl,-0x77(%rax)
  0x00000000032cc704: test   %ah,(%rax,%riz,8)
  0x00000000032cc707: add    %al,(%rax)
  0x00000000032cc709: add    %cl,-0x75(%rcx)
  0x00000000032cc70c: rex.RXB (bad) 
  0x00000000032cc70e: lea    0x18(%rax),%rdi
  0x00000000032cc712: cmp    0x70(%r15),%rdi
  0x00000000032cc716: ja     0x00000000032cd01f
  0x00000000032cc71c: mov    %rdi,0x60(%r15)
  0x00000000032cc720: mov    0xa8(%rdx),%rcx
  0x00000000032cc727: mov    %rcx,(%rax)
  0x00000000032cc72a: mov    %rdx,%rcx
  0x00000000032cc72d: shr    $0x3,%rcx
  0x00000000032cc731: mov    %ecx,0x8(%rax)
  0x00000000032cc734: xor    %rcx,%rcx
  0x00000000032cc737: mov    %ecx,0xc(%rax)
  0x00000000032cc73a: xor    %rcx,%rcx
  0x00000000032cc73d: mov    %rcx,0x10(%rax)    ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)

  0x00000000032cc741: mov    %rax,%rbx
  0x00000000032cc744: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc74e: addq   $0x1,0x428(%rdx)
  0x00000000032cc756: movabs $0x1c387de8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc760: mov    0xdc(%rbx),%edx
  0x00000000032cc766: add    $0x8,%edx
  0x00000000032cc769: mov    %edx,0xdc(%rbx)
  0x00000000032cc76f: movabs $0x1c1c7640,%rbx   ;   {metadata({method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc779: and    $0x7ffff8,%edx
  0x00000000032cc77f: cmp    $0x0,%edx
  0x00000000032cc782: je     0x00000000032cd02c
  0x00000000032cc788: mov    %rax,%rbx
  0x00000000032cc78b: movabs $0x1c387de8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc795: addq   $0x1,0x108(%rdx)
  0x00000000032cc79d: movabs $0x1c37d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032cc7a7: mov    0xdc(%rbx),%edx
  0x00000000032cc7ad: add    $0x8,%edx
  0x00000000032cc7b0: mov    %edx,0xdc(%rbx)
  0x00000000032cc7b6: movabs $0x1c1c3970,%rbx   ;   {metadata({method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032cc7c0: and    $0x7ffff8,%edx
  0x00000000032cc7c6: cmp    $0x0,%edx
  0x00000000032cc7c9: je     0x00000000032cd043
  0x00000000032cc7cf: mov    %rax,%rbx
  0x00000000032cc7d2: movabs $0x1c37d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032cc7dc: addq   $0x1,0x108(%rdx)
  0x00000000032cc7e4: movabs $0x1c281c10,%rbx   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032cc7ee: mov    0xdc(%rbx),%edx
  0x00000000032cc7f4: add    $0x8,%edx
  0x00000000032cc7f7: mov    %edx,0xdc(%rbx)
  0x00000000032cc7fd: movabs $0x1c150480,%rbx   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032cc807: and    $0x7ffff8,%edx
  0x00000000032cc80d: cmp    $0x0,%edx
  0x00000000032cc810: je     0x00000000032cd05a
  0x00000000032cc816: mov    $0x10,%ebx
  0x00000000032cc81b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032cc825: mov    %rax,%r13
  0x00000000032cc828: movslq %ebx,%rbx
  0x00000000032cc82b: mov    %rbx,%rdi
  0x00000000032cc82e: cmp    $0xffffff,%rbx
  0x00000000032cc835: ja     0x00000000032cd071
  0x00000000032cc83b: movabs $0x17,%rsi
  0x00000000032cc845: lea    (%rsi,%rbx,2),%rsi
  0x00000000032cc849: and    $0xfffffffffffffff8,%rsi
  0x00000000032cc84d: mov    0x60(%r15),%rax
  0x00000000032cc851: lea    (%rax,%rsi,1),%rsi
  0x00000000032cc855: cmp    0x70(%r15),%rsi
  0x00000000032cc859: ja     0x00000000032cd071
  0x00000000032cc85f: mov    %rsi,0x60(%r15)
  0x00000000032cc863: sub    %rax,%rsi
  0x00000000032cc866: movq   $0x1,(%rax)
  0x00000000032cc86d: mov    %rdx,%rcx
  0x00000000032cc870: shr    $0x3,%rcx
  0x00000000032cc874: mov    %ecx,0x8(%rax)
  0x00000000032cc877: mov    %ebx,0xc(%rax)
  0x00000000032cc87a: sub    $0x10,%rsi
  0x00000000032cc87e: je     0x00000000032cc895
  0x00000000032cc884: xor    %rbx,%rbx
  0x00000000032cc887: shr    $0x3,%rsi
  0x00000000032cc88b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032cc890: dec    %rsi
  0x00000000032cc893: jne    0x00000000032cc88b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x00000000032cc895: mov    %rax,%r10
  0x00000000032cc898: shr    $0x3,%r10
  0x00000000032cc89c: mov    %r10d,0x10(%r13)
  0x00000000032cc8a0: mov    %r13,%rax
  0x00000000032cc8a3: shr    $0x9,%rax
  0x00000000032cc8a7: movabs $0xef3d000,%r8
  0x00000000032cc8b1: movb   $0x0,(%rax,%r8,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)

  0x00000000032cc8b6: mov    %r13,%rax
  0x00000000032cc8b9: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc8c3: mov    0x8(%rax),%eax
  0x00000000032cc8c6: shl    $0x3,%rax
  0x00000000032cc8ca: cmp    0x440(%r8),%rax
  0x00000000032cc8d1: jne    0x00000000032cc8e0
  0x00000000032cc8d3: addq   $0x1,0x448(%r8)
  0x00000000032cc8db: jmpq   0x00000000032cc946
  0x00000000032cc8e0: cmp    0x450(%r8),%rax
  0x00000000032cc8e7: jne    0x00000000032cc8f6
  0x00000000032cc8e9: addq   $0x1,0x458(%r8)
  0x00000000032cc8f1: jmpq   0x00000000032cc946
  0x00000000032cc8f6: cmpq   $0x0,0x440(%r8)
  0x00000000032cc901: jne    0x00000000032cc91a
  0x00000000032cc903: mov    %rax,0x440(%r8)
  0x00000000032cc90a: movq   $0x1,0x448(%r8)
  0x00000000032cc915: jmpq   0x00000000032cc946
  0x00000000032cc91a: cmpq   $0x0,0x450(%r8)
  0x00000000032cc925: jne    0x00000000032cc93e
  0x00000000032cc927: mov    %rax,0x450(%r8)
  0x00000000032cc92e: movq   $0x1,0x458(%r8)
  0x00000000032cc939: jmpq   0x00000000032cc946
  0x00000000032cc93e: addq   $0x1,0x438(%r8)
  0x00000000032cc946: movabs $0x1c3411d0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc950: mov    0xdc(%r8),%edx
  0x00000000032cc957: add    $0x8,%edx
  0x00000000032cc95a: mov    %edx,0xdc(%r8)
  0x00000000032cc961: movabs $0x1c1c7958,%r8    ;   {metadata({method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc96b: and    $0x7ffff8,%edx
  0x00000000032cc971: cmp    $0x0,%edx
  0x00000000032cc974: je     0x00000000032cd07b
  0x00000000032cc97a: mov    %r13,%rax
  0x00000000032cc97d: movabs $0x1c3411d0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7960} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cc987: addq   $0x1,0x108(%r8)
  0x00000000032cc98f: movabs $0x76bf1f138,%r8   ;   {oop(&quot;malformed input around byte &quot;)}
  0x00000000032cc999: mov    %r13,%rdx          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)

  0x00000000032cc99c: mov    %r13,0xd0(%rsp)
  0x00000000032cc9a4: nop
  0x00000000032cc9a5: nop
  0x00000000032cc9a6: nop
  0x00000000032cc9a7: callq  0x00000000031d61a0  ; OopMap{[208]=Oop [224]=Oop off=6348}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {optimized virtual_call}
  0x00000000032cc9ac: mov    0xd0(%rsp),%rax
  0x00000000032cc9b4: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cc9be: mov    0x8(%rax),%eax
  0x00000000032cc9c1: shl    $0x3,%rax
  0x00000000032cc9c5: cmp    0x470(%r8),%rax
  0x00000000032cc9cc: jne    0x00000000032cc9db
  0x00000000032cc9ce: addq   $0x1,0x478(%r8)
  0x00000000032cc9d6: jmpq   0x00000000032cca41
  0x00000000032cc9db: cmp    0x480(%r8),%rax
  0x00000000032cc9e2: jne    0x00000000032cc9f1
  0x00000000032cc9e4: addq   $0x1,0x488(%r8)
  0x00000000032cc9ec: jmpq   0x00000000032cca41
  0x00000000032cc9f1: cmpq   $0x0,0x470(%r8)
  0x00000000032cc9fc: jne    0x00000000032cca15
  0x00000000032cc9fe: mov    %rax,0x470(%r8)
  0x00000000032cca05: movq   $0x1,0x478(%r8)
  0x00000000032cca10: jmpq   0x00000000032cca41
  0x00000000032cca15: cmpq   $0x0,0x480(%r8)
  0x00000000032cca20: jne    0x00000000032cca39
  0x00000000032cca22: mov    %rax,0x480(%r8)
  0x00000000032cca29: movq   $0x1,0x488(%r8)
  0x00000000032cca34: jmpq   0x00000000032cca41
  0x00000000032cca39: addq   $0x1,0x468(%r8)
  0x00000000032cca41: movabs $0x1c464bd0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cca4b: mov    0xdc(%r8),%edx
  0x00000000032cca52: add    $0x8,%edx
  0x00000000032cca55: mov    %edx,0xdc(%r8)
  0x00000000032cca5c: movabs $0x1c1c7e18,%r8    ;   {metadata({method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cca66: and    $0x7ffff8,%edx
  0x00000000032cca6c: cmp    $0x0,%edx
  0x00000000032cca6f: je     0x00000000032cd092
  0x00000000032cca75: mov    0xd0(%rsp),%rax
  0x00000000032cca7d: movabs $0x1c464bd0,%r8    ;   {metadata(method data for {method} {0x000000001c1c7e20} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032cca87: addq   $0x1,0x108(%r8)
  0x00000000032cca8f: mov    0xd8(%rsp),%r8d
  0x00000000032cca97: mov    0xd0(%rsp),%rdx    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)

  0x00000000032cca9f: callq  0x00000000031d61a0  ; OopMap{[208]=Oop [224]=Oop off=6596}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {optimized virtual_call}
  0x00000000032ccaa4: mov    0xd0(%rsp),%rax
  0x00000000032ccaac: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032ccab6: mov    0x8(%rax),%eax
  0x00000000032ccab9: shl    $0x3,%rax
  0x00000000032ccabd: cmp    0x4a0(%rdx),%rax
  0x00000000032ccac4: jne    0x00000000032ccad3
  0x00000000032ccac6: addq   $0x1,0x4a8(%rdx)
  0x00000000032ccace: jmpq   0x00000000032ccb39
  0x00000000032ccad3: cmp    0x4b0(%rdx),%rax
  0x00000000032ccada: jne    0x00000000032ccae9
  0x00000000032ccadc: addq   $0x1,0x4b8(%rdx)
  0x00000000032ccae4: jmpq   0x00000000032ccb39
  0x00000000032ccae9: cmpq   $0x0,0x4a0(%rdx)
  0x00000000032ccaf4: jne    0x00000000032ccb0d
  0x00000000032ccaf6: mov    %rax,0x4a0(%rdx)
  0x00000000032ccafd: movq   $0x1,0x4a8(%rdx)
  0x00000000032ccb08: jmpq   0x00000000032ccb39
  0x00000000032ccb0d: cmpq   $0x0,0x4b0(%rdx)
  0x00000000032ccb18: jne    0x00000000032ccb31
  0x00000000032ccb1a: mov    %rax,0x4b0(%rdx)
  0x00000000032ccb21: movq   $0x1,0x4b8(%rdx)
  0x00000000032ccb2c: jmpq   0x00000000032ccb39
  0x00000000032ccb31: addq   $0x1,0x498(%rdx)
  0x00000000032ccb39: movabs $0x1c387f18,%rdx   ;   {metadata(method data for {method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032ccb43: mov    0xdc(%rdx),%esi
  0x00000000032ccb49: add    $0x8,%esi
  0x00000000032ccb4c: mov    %esi,0xdc(%rdx)
  0x00000000032ccb52: movabs $0x1c1c8d08,%rdx   ;   {metadata({method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032ccb5c: and    $0x7ffff8,%esi
  0x00000000032ccb62: cmp    $0x0,%esi
  0x00000000032ccb65: je     0x00000000032cd0a9
  0x00000000032ccb6b: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00000000032ccb75: mov    0x60(%r15),%rax
  0x00000000032ccb79: lea    0x18(%rax),%rdi
  0x00000000032ccb7d: cmp    0x70(%r15),%rdi
  0x00000000032ccb81: ja     0x00000000032cd0c0
  0x00000000032ccb87: mov    %rdi,0x60(%r15)
  0x00000000032ccb8b: mov    0xa8(%rdx),%rcx
  0x00000000032ccb92: mov    %rcx,(%rax)
  0x00000000032ccb95: mov    %rdx,%rcx
  0x00000000032ccb98: shr    $0x3,%rcx
  0x00000000032ccb9c: mov    %ecx,0x8(%rax)
  0x00000000032ccb9f: xor    %rcx,%rcx
  0x00000000032ccba2: mov    %ecx,0xc(%rax)
  0x00000000032ccba5: xor    %rcx,%rcx
  0x00000000032ccba8: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000000032ccbac: mov    0xd0(%rsp),%r8
  0x00000000032ccbb4: mov    0x10(%r8),%r9d
  0x00000000032ccbb8: shl    $0x3,%r9           ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000000032ccbbc: mov    0xc(%r8),%edi      ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000000032ccbc0: mov    %rax,%r8
  0x00000000032ccbc3: movabs $0x1c387f18,%rdx   ;   {metadata(method data for {method} {0x000000001c1c8d10} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032ccbcd: addq   $0x1,0x108(%rdx)
  0x00000000032ccbd5: mov    %r9,%r8
  0x00000000032ccbd8: mov    $0x0,%r9d
  0x00000000032ccbde: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)

  0x00000000032ccbe1: mov    %rax,0xe8(%rsp)
  0x00000000032ccbe9: nop
  0x00000000032ccbea: nop
  0x00000000032ccbeb: nop
  0x00000000032ccbec: nop
  0x00000000032ccbed: nop
  0x00000000032ccbee: nop
  0x00000000032ccbef: callq  0x00000000031d61a0  ; OopMap{[224]=Oop [232]=Oop off=6932}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {optimized virtual_call}
  0x00000000032ccbf4: mov    0xe0(%rsp),%rax
  0x00000000032ccbfc: movabs $0x1c48cad0,%r8    ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032ccc06: addq   $0x1,0x4c8(%r8)
  0x00000000032ccc0e: mov    0xe8(%rsp),%r8
  0x00000000032ccc16: mov    0xe0(%rsp),%rdx    ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)

  0x00000000032ccc1e: nop
  0x00000000032ccc1f: callq  0x00000000031d61a0  ; OopMap{[224]=Oop off=6980}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@307 (line 634)
                                                ;   {optimized virtual_call}
  0x00000000032ccc24: mov    0xe0(%rsp),%rax
  0x00000000032ccc2c: jmpq   0x00000000032cd11e  ;*athrow
                                                ; - java.io.DataInputStream::readUTF@310 (line 634)

  0x00000000032ccc31: nopl   0x0(%rax)
  0x00000000032ccc38: jmpq   0x00000000032cd0dc  ;   {no_reloc}
  0x00000000032ccc3d: add    %al,(%rax)
  0x00000000032ccc3f: add    %al,(%rax)
  0x00000000032ccc41: add    %ch,%cl
  0x00000000032ccc43: lahf   
  0x00000000032ccc44: add    $0x0,%al
  0x00000000032ccc46: add    %cl,-0x40(%rbx,%rcx,4)  ;*new
                                                ; - java.io.DataInputStream::readUTF@253 (line 630)

  0x00000000032ccc4a: movabs $0x1c48cad0,%rdx   ;   {metadata(method data for {method} {0x000000001c48c3d0} &apos;readUTF&apos; &apos;(Ljava/io/DataInput;)Ljava/lang/String;&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032ccc54: addq   $0x1,0x3f8(%rdx)
  0x00000000032ccc5c: movabs $0x76bf1f0b8,%r8   ;   {oop(&quot;malformed input: partial character at end&quot;)}
  0x00000000032ccc66: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)

  0x00000000032ccc69: mov    %rax,0xf0(%rsp)
  0x00000000032ccc71: nop
  0x00000000032ccc72: nop
  0x00000000032ccc73: nop
  0x00000000032ccc74: nop
  0x00000000032ccc75: nop
  0x00000000032ccc76: nop
  0x00000000032ccc77: callq  0x00000000031d61a0  ; OopMap{[240]=Oop off=7068}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readUTF@259 (line 630)
                                                ;   {optimized virtual_call}
  0x00000000032ccc7c: mov    0xf0(%rsp),%rax
  0x00000000032ccc84: jmpq   0x00000000032cd11e
  0x00000000032ccc89: mov    %rsi,0x8(%rsp)
  0x00000000032ccc8e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ccc96: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=7099}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readUTF@-1 (line 589)
                                                ;   {runtime_call}
  0x00000000032ccc9b: jmpq   0x00000000032cb121
  0x00000000032ccca0: callq  0x000000000328fac0  ; OopMap{rdx=Oop off=7109}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x00000000032ccca5: callq  0x000000000328d680  ; OopMap{rdx=Oop off=7114}
                                                ;*invokeinterface readUnsignedShort
                                                ; - java.io.DataInputStream::readUTF@1 (line 589)
                                                ;   {runtime_call}
  0x00000000032cccaa: mov    %r11,(%rsp)
  0x00000000032cccae: callq  0x000000000328f880  ; OopMap{r11=Oop off=7123}
                                                ;*checkcast
                                                ; - java.io.DataInputStream::readUTF@19 (line 593)
                                                ;   {runtime_call}
  0x00000000032cccb3: callq  0x000000000328d680  ; OopMap{r11=Oop r8=Oop off=7128}
                                                ;*getfield bytearr
                                                ; - java.io.DataInputStream::readUTF@26 (line 594)
                                                ;   {runtime_call}
  0x00000000032cccb8: callq  0x000000000328d680  ; OopMap{r11=Oop r8=Oop off=7133}
                                                ;*arraylength
                                                ; - java.io.DataInputStream::readUTF@29 (line 594)
                                                ;   {runtime_call}
  0x00000000032cccbd: callq  0x000000000328e700  ; OopMap{r11=Oop r8=Oop off=7138}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@39 (line 595)
                                                ;   {runtime_call}
  0x00000000032cccc2: jmpq   0x00000000032cb45c
  0x00000000032cccc7: callq  0x000000000328e700  ; OopMap{r11=Oop r8=Oop off=7148}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@49 (line 596)
                                                ;   {runtime_call}
  0x00000000032ccccc: jmpq   0x00000000032cb4f7
  0x00000000032cccd1: callq  0x000000000328e700  ; OopMap{r11=Oop off=7158}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@70 (line 601)
                                                ;   {runtime_call}
  0x00000000032cccd6: jmpq   0x00000000032cb5b0
  0x00000000032cccdb: callq  0x000000000328e700  ; OopMap{r11=Oop r8=Oop off=7168}
                                                ;*newarray
                                                ; - java.io.DataInputStream::readUTF@74 (line 602)
                                                ;   {runtime_call}
  0x00000000032ccce0: jmpq   0x00000000032cb62d
  0x00000000032ccce5: callq  0x000000000328fac0  ; OopMap{r11=Oop rdx=Oop [128]=Oop off=7178}
                                                ;*invokeinterface readFully
                                                ; - java.io.DataInputStream::readUTF@87 (line 609)
                                                ;   {runtime_call}
  0x00000000032cccea: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7183}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x00000000032cccef: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7188}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x00000000032cccf4: mov    %rsi,(%rsp)
  0x00000000032cccf8: callq  0x000000000328c940  ; OopMap{rbx=Oop rdi=Oop off=7197}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@101 (line 612)
                                                ;   {runtime_call}
  0x00000000032cccfd: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7202}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x00000000032ccd02: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7207}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x00000000032ccd07: mov    %rdx,(%rsp)
  0x00000000032ccd0b: callq  0x000000000328c940  ; OopMap{rbx=Oop rdi=Oop off=7216}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@130 (line 615)
                                                ;   {runtime_call}
  0x00000000032ccd10: mov    %rdx,0x8(%rsp)
  0x00000000032ccd15: movq   $0x83,(%rsp)
  0x00000000032ccd1d: callq  0x0000000003291d60  ; OopMap{rbx=Oop rdi=Oop off=7234}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@131 (line 615)
                                                ;   {runtime_call}
  0x00000000032ccd22: jmpq   0x00000000032cb75c
  0x00000000032ccd27: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7244}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x00000000032ccd2c: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7249}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x00000000032ccd31: mov    %rsi,(%rsp)
  0x00000000032ccd35: callq  0x000000000328c940  ; OopMap{rbx=Oop rdi=Oop off=7258}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@143 (line 619)
                                                ;   {runtime_call}
  0x00000000032ccd3a: mov    %rcx,(%rsp)
  0x00000000032ccd3e: callq  0x000000000328c940  ; OopMap{rbx=Oop rdi=Oop off=7267}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@268 (line 632)
                                                ;   {runtime_call}
  0x00000000032ccd43: mov    %rcx,(%rsp)
  0x00000000032ccd47: callq  0x000000000328c940  ; OopMap{rbx=Oop rdi=Oop off=7276}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@360 (line 645)
                                                ;   {runtime_call}
  0x00000000032ccd4c: mov    %r9,(%rsp)
  0x00000000032ccd50: callq  0x000000000328c940  ; OopMap{rbx=Oop rdi=Oop off=7285}
                                                ;*baload
                                                ; - java.io.DataInputStream::readUTF@368 (line 646)
                                                ;   {runtime_call}
  0x00000000032ccd55: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7290}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x00000000032ccd5a: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7295}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x00000000032ccd5f: mov    %r11,(%rsp)
  0x00000000032ccd63: callq  0x000000000328c940  ; OopMap{rbx=Oop rdi=Oop off=7304}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@457 (line 650)
                                                ;   {runtime_call}
  0x00000000032ccd68: mov    %rdx,0x8(%rsp)
  0x00000000032ccd6d: movq   $0x1ca,(%rsp)
  0x00000000032ccd75: callq  0x0000000003291d60  ; OopMap{rbx=Oop rdi=Oop off=7322}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@458 (line 653)
                                                ;   {runtime_call}
  0x00000000032ccd7a: jmpq   0x00000000032cba4e
  0x00000000032ccd7f: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7332}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x00000000032ccd84: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7337}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x00000000032ccd89: mov    %r11,(%rsp)
  0x00000000032ccd8d: callq  0x000000000328c940  ; OopMap{rbx=Oop rdi=Oop off=7346}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@332 (line 636)
                                                ;   {runtime_call}
  0x00000000032ccd92: mov    %rdx,0x8(%rsp)
  0x00000000032ccd97: movq   $0x14d,(%rsp)
  0x00000000032ccd9f: callq  0x0000000003291d60  ; OopMap{rbx=Oop rdi=Oop off=7364}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@333 (line 638)
                                                ;   {runtime_call}
  0x00000000032ccda4: jmpq   0x00000000032cbac2
  0x00000000032ccda9: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7374}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x00000000032ccdae: callq  0x000000000328d680  ; OopMap{rbx=Oop rdi=Oop off=7379}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x00000000032ccdb3: mov    %r11,(%rsp)
  0x00000000032ccdb7: callq  0x000000000328c940  ; OopMap{rbx=Oop rdi=Oop off=7388}
                                                ;*castore
                                                ; - java.io.DataInputStream::readUTF@240 (line 624)
                                                ;   {runtime_call}
  0x00000000032ccdbc: mov    %rdx,0x8(%rsp)
  0x00000000032ccdc1: movq   $0xf1,(%rsp)
  0x00000000032ccdc9: callq  0x0000000003291d60  ; OopMap{rbx=Oop rdi=Oop off=7406}
                                                ;*goto
                                                ; - java.io.DataInputStream::readUTF@241 (line 625)
                                                ;   {runtime_call}
  0x00000000032ccdce: jmpq   0x00000000032cbb31
  0x00000000032ccdd3: mov    %rdx,%rdx
  0x00000000032ccdd6: callq  0x000000000328de00  ; OopMap{rbx=Oop off=7419}
                                                ;*new  ; - java.io.DataInputStream::readUTF@489 (line 661)
                                                ;   {runtime_call}
  0x00000000032ccddb: jmpq   0x00000000032cbb9c
  0x00000000032ccde0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032ccdea: mov    $0xa050f00,%eax
  0x00000000032ccdef: callq  0x0000000003290ca0  ; OopMap{off=7444}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x00000000032ccdf4: jmpq   0x00000000032cbbf0
  0x00000000032ccdf9: mov    %rdx,%rdx
  0x00000000032ccdfc: callq  0x000000000328db20  ; OopMap{off=7457}
                                                ;*new  ; - java.io.DataInputStream::readUTF@461 (line 656)
                                                ;   {runtime_call}
  0x00000000032cce01: jmpq   0x00000000032cbbff
  0x00000000032cce06: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032cce10: mov    $0xa050f00,%eax
  0x00000000032cce15: callq  0x0000000003290ca0  ; OopMap{rax=Oop off=7482}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x00000000032cce1a: jmpq   0x00000000032cbc00
  0x00000000032cce1f: mov    %rdx,%rdx
  0x00000000032cce22: callq  0x000000000328de00  ; OopMap{[160]=Oop off=7495}
                                                ;*new  ; - java.io.DataInputStream::readUTF@465 (line 656)
                                                ;   {runtime_call}
  0x00000000032cce27: jmpq   0x00000000032cbc49
  0x00000000032cce2c: mov    %rbx,0x8(%rsp)
  0x00000000032cce31: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cce39: callq  0x0000000003291d60  ; OopMap{[160]=Oop rax=Oop off=7518}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000000032cce3e: jmpq   0x00000000032cbc90
  0x00000000032cce43: mov    %rbx,0x8(%rsp)
  0x00000000032cce48: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cce50: callq  0x0000000003291d60  ; OopMap{[160]=Oop rax=Oop off=7541}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000000032cce55: jmpq   0x00000000032cbcd7
  0x00000000032cce5a: mov    %rbx,0x8(%rsp)
  0x00000000032cce5f: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cce67: callq  0x0000000003291d60  ; OopMap{[160]=Oop rax=Oop off=7564}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000000032cce6c: jmpq   0x00000000032cbd1e
  0x00000000032cce71: callq  0x000000000328e700  ; OopMap{[160]=Oop r13=Oop off=7574}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@469 (line 656)
                                                ;   {runtime_call}
  0x00000000032cce76: jmpq   0x00000000032cbd9d
  0x00000000032cce7b: mov    %r8,0x8(%rsp)
  0x00000000032cce80: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cce88: callq  0x0000000003291d60  ; OopMap{[160]=Oop r13=Oop off=7597}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@474 (line 656)
                                                ;   {runtime_call}
  0x00000000032cce8d: jmpq   0x00000000032cbe82
  0x00000000032cce92: mov    %r8,0x8(%rsp)
  0x00000000032cce97: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cce9f: callq  0x0000000003291d60  ; OopMap{[144]=Oop [160]=Oop off=7620}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@479 (line 656)
                                                ;   {runtime_call}
  0x00000000032ccea4: jmpq   0x00000000032cbf7d
  0x00000000032ccea9: mov    %rdx,0x8(%rsp)
  0x00000000032cceae: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cceb6: callq  0x0000000003291d60  ; OopMap{[144]=Oop [160]=Oop off=7643}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x00000000032ccebb: jmpq   0x00000000032cc073
  0x00000000032ccec0: mov    %rdx,%rdx
  0x00000000032ccec3: callq  0x000000000328de00  ; OopMap{[144]=Oop [160]=Oop off=7656}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@482 (line 656)
                                                ;   {runtime_call}
  0x00000000032ccec8: jmpq   0x00000000032cc0b4
  0x00000000032ccecd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032cced7: mov    $0xa050f00,%eax
  0x00000000032ccedc: callq  0x0000000003290ca0  ; OopMap{off=7681}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccee1: jmpq   0x00000000032cc140
  0x00000000032ccee6: mov    %rdx,%rdx
  0x00000000032ccee9: callq  0x000000000328db20  ; OopMap{off=7694}
                                                ;*new  ; - java.io.DataInputStream::readUTF@395 (line 648)
                                                ;   {runtime_call}
  0x00000000032cceee: jmpq   0x00000000032cc14f
  0x00000000032ccef3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032ccefd: mov    $0xa050f00,%eax
  0x00000000032ccf02: callq  0x0000000003290ca0  ; OopMap{rax=Oop off=7719}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccf07: jmpq   0x00000000032cc150
  0x00000000032ccf0c: mov    %rdx,%rdx
  0x00000000032ccf0f: callq  0x000000000328de00  ; OopMap{[184]=Oop off=7732}
                                                ;*new  ; - java.io.DataInputStream::readUTF@399 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccf14: jmpq   0x00000000032cc199
  0x00000000032ccf19: mov    %rbx,0x8(%rsp)
  0x00000000032ccf1e: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ccf26: callq  0x0000000003291d60  ; OopMap{[184]=Oop rax=Oop off=7755}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccf2b: jmpq   0x00000000032cc1e0
  0x00000000032ccf30: mov    %rbx,0x8(%rsp)
  0x00000000032ccf35: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ccf3d: callq  0x0000000003291d60  ; OopMap{[184]=Oop rax=Oop off=7778}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccf42: jmpq   0x00000000032cc227
  0x00000000032ccf47: mov    %rbx,0x8(%rsp)
  0x00000000032ccf4c: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ccf54: callq  0x0000000003291d60  ; OopMap{[184]=Oop rax=Oop off=7801}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccf59: jmpq   0x00000000032cc26e
  0x00000000032ccf5e: callq  0x000000000328e700  ; OopMap{[184]=Oop r14=Oop off=7811}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@403 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccf63: jmpq   0x00000000032cc2ed
  0x00000000032ccf68: mov    %r8,0x8(%rsp)
  0x00000000032ccf6d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ccf75: callq  0x0000000003291d60  ; OopMap{[184]=Oop r14=Oop off=7834}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@408 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccf7a: jmpq   0x00000000032cc3d2
  0x00000000032ccf7f: mov    %r8,0x8(%rsp)
  0x00000000032ccf84: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ccf8c: callq  0x0000000003291d60  ; OopMap{[176]=Oop [184]=Oop off=7857}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@415 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccf91: jmpq   0x00000000032cc4cd
  0x00000000032ccf96: mov    %rdx,0x8(%rsp)
  0x00000000032ccf9b: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ccfa3: callq  0x0000000003291d60  ; OopMap{[176]=Oop [184]=Oop off=7880}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccfa8: jmpq   0x00000000032cc5c3
  0x00000000032ccfad: mov    %rdx,%rdx
  0x00000000032ccfb0: callq  0x000000000328de00  ; OopMap{[176]=Oop [184]=Oop off=7893}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@418 (line 648)
                                                ;   {runtime_call}
  0x00000000032ccfb5: jmpq   0x00000000032cc604
  0x00000000032ccfba: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032ccfc4: mov    $0xa050f00,%eax
  0x00000000032ccfc9: callq  0x0000000003290ca0  ; OopMap{off=7918}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x00000000032ccfce: jmpq   0x00000000032cc690
  0x00000000032ccfd3: mov    %rdx,%rdx
  0x00000000032ccfd6: callq  0x000000000328db20  ; OopMap{off=7931}
                                                ;*new  ; - java.io.DataInputStream::readUTF@345 (line 643)
                                                ;   {runtime_call}
  0x00000000032ccfdb: jmpq   0x00000000032cc69f
  0x00000000032ccfe0: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032ccfea: mov    $0xa050f00,%eax
  0x00000000032ccfef: callq  0x0000000003290ca0  ; OopMap{off=7956}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x00000000032ccff4: jmpq   0x00000000032cc6e8
  0x00000000032ccff9: mov    %rdx,%rdx
  0x00000000032ccffc: callq  0x000000000328db20  ; OopMap{off=7969}
                                                ;*new  ; - java.io.DataInputStream::readUTF@283 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd001: jmpq   0x00000000032cc6f7
  0x00000000032cd006: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032cd010: mov    $0xa050f00,%eax
  0x00000000032cd015: callq  0x0000000003290ca0  ; OopMap{rax=Oop off=7994}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd01a: jmpq   0x00000000032cc6f8
  0x00000000032cd01f: mov    %rdx,%rdx
  0x00000000032cd022: callq  0x000000000328de00  ; OopMap{[224]=Oop off=8007}
                                                ;*new  ; - java.io.DataInputStream::readUTF@287 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd027: jmpq   0x00000000032cc741
  0x00000000032cd02c: mov    %rbx,0x8(%rsp)
  0x00000000032cd031: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cd039: callq  0x0000000003291d60  ; OopMap{[224]=Oop rax=Oop off=8030}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd03e: jmpq   0x00000000032cc788
  0x00000000032cd043: mov    %rbx,0x8(%rsp)
  0x00000000032cd048: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cd050: callq  0x0000000003291d60  ; OopMap{[224]=Oop rax=Oop off=8053}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd055: jmpq   0x00000000032cc7cf
  0x00000000032cd05a: mov    %rbx,0x8(%rsp)
  0x00000000032cd05f: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cd067: callq  0x0000000003291d60  ; OopMap{[224]=Oop rax=Oop off=8076}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd06c: jmpq   0x00000000032cc816
  0x00000000032cd071: callq  0x000000000328e700  ; OopMap{[224]=Oop r13=Oop off=8086}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ; - java.io.DataInputStream::readUTF@291 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd076: jmpq   0x00000000032cc895
  0x00000000032cd07b: mov    %r8,0x8(%rsp)
  0x00000000032cd080: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cd088: callq  0x0000000003291d60  ; OopMap{[224]=Oop r13=Oop off=8109}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.io.DataInputStream::readUTF@296 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd08d: jmpq   0x00000000032cc97a
  0x00000000032cd092: mov    %r8,0x8(%rsp)
  0x00000000032cd097: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cd09f: callq  0x0000000003291d60  ; OopMap{[208]=Oop [224]=Oop off=8132}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.io.DataInputStream::readUTF@301 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd0a4: jmpq   0x00000000032cca75
  0x00000000032cd0a9: mov    %rdx,0x8(%rsp)
  0x00000000032cd0ae: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cd0b6: callq  0x0000000003291d60  ; OopMap{[208]=Oop [224]=Oop off=8155}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd0bb: jmpq   0x00000000032ccb6b
  0x00000000032cd0c0: mov    %rdx,%rdx
  0x00000000032cd0c3: callq  0x000000000328de00  ; OopMap{[208]=Oop [224]=Oop off=8168}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.io.DataInputStream::readUTF@304 (line 634)
                                                ;   {runtime_call}
  0x00000000032cd0c8: jmpq   0x00000000032ccbac
  0x00000000032cd0cd: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032cd0d7: mov    $0xa050f00,%eax
  0x00000000032cd0dc: callq  0x0000000003290ca0  ; OopMap{off=8193}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x00000000032cd0e1: jmpq   0x00000000032ccc38
  0x00000000032cd0e6: mov    %rdx,%rdx
  0x00000000032cd0e9: callq  0x000000000328db20  ; OopMap{off=8206}
                                                ;*new  ; - java.io.DataInputStream::readUTF@253 (line 630)
                                                ;   {runtime_call}
  0x00000000032cd0ee: jmpq   0x00000000032ccc47
  0x00000000032cd0f3: nop
  0x00000000032cd0f4: nop
  0x00000000032cd0f5: mov    0x2a8(%r15),%rax
  0x00000000032cd0fc: movabs $0x0,%r10
  0x00000000032cd106: mov    %r10,0x2a8(%r15)
  0x00000000032cd10d: movabs $0x0,%r10
  0x00000000032cd117: mov    %r10,0x2b0(%r15)
  0x00000000032cd11e: add    $0x100,%rsp
  0x00000000032cd125: pop    %rbp
  0x00000000032cd126: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032cd12b: hlt    
  0x00000000032cd12c: hlt    
  0x00000000032cd12d: hlt    
  0x00000000032cd12e: hlt    
  0x00000000032cd12f: hlt    
  0x00000000032cd130: hlt    
  0x00000000032cd131: hlt    
  0x00000000032cd132: hlt    
  0x00000000032cd133: hlt    
  0x00000000032cd134: hlt    
  0x00000000032cd135: hlt    
  0x00000000032cd136: hlt    
  0x00000000032cd137: hlt    
  0x00000000032cd138: hlt    
  0x00000000032cd139: hlt    
  0x00000000032cd13a: hlt    
  0x00000000032cd13b: hlt    
  0x00000000032cd13c: hlt    
  0x00000000032cd13d: hlt    
  0x00000000032cd13e: hlt    
  0x00000000032cd13f: hlt    
[Stub Code]
  0x00000000032cd140: nop                       ;   {no_reloc}
  0x00000000032cd141: nop
  0x00000000032cd142: nop
  0x00000000032cd143: nop
  0x00000000032cd144: nop
  0x00000000032cd145: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd14f: jmpq   0x00000000032cd14f  ;   {runtime_call}
  0x00000000032cd154: nop
  0x00000000032cd155: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd15f: jmpq   0x00000000032cd15f  ;   {runtime_call}
  0x00000000032cd164: nop
  0x00000000032cd165: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd16f: jmpq   0x00000000032cd16f  ;   {runtime_call}
  0x00000000032cd174: nop
  0x00000000032cd175: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd17f: jmpq   0x00000000032cd17f  ;   {runtime_call}
  0x00000000032cd184: nop
  0x00000000032cd185: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd18f: jmpq   0x00000000032cd18f  ;   {runtime_call}
  0x00000000032cd194: nop
  0x00000000032cd195: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd19f: jmpq   0x00000000032cd19f  ;   {runtime_call}
  0x00000000032cd1a4: nop
  0x00000000032cd1a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd1af: jmpq   0x00000000032cd1af  ;   {runtime_call}
  0x00000000032cd1b4: nop
  0x00000000032cd1b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd1bf: jmpq   0x00000000032cd1bf  ;   {runtime_call}
  0x00000000032cd1c4: nop
  0x00000000032cd1c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd1cf: jmpq   0x00000000032cd1cf  ;   {runtime_call}
  0x00000000032cd1d4: nop
  0x00000000032cd1d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd1df: jmpq   0x00000000032cd1df  ;   {runtime_call}
  0x00000000032cd1e4: nop
  0x00000000032cd1e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd1ef: jmpq   0x00000000032cd1ef  ;   {runtime_call}
  0x00000000032cd1f4: nop
  0x00000000032cd1f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd1ff: jmpq   0x00000000032cd1ff  ;   {runtime_call}
  0x00000000032cd204: nop
  0x00000000032cd205: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd20f: jmpq   0x00000000032cd20f  ;   {runtime_call}
  0x00000000032cd214: nop
  0x00000000032cd215: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd21f: jmpq   0x00000000032cd21f  ;   {runtime_call}
  0x00000000032cd224: nop
  0x00000000032cd225: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd22f: jmpq   0x00000000032cd22f  ;   {runtime_call}
  0x00000000032cd234: nop
  0x00000000032cd235: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd23f: jmpq   0x00000000032cd23f  ;   {runtime_call}
  0x00000000032cd244: nop
  0x00000000032cd245: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cd24f: jmpq   0x00000000032cd24f  ;   {runtime_call}
[Exception Handler]
  0x00000000032cd254: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032cd259: mov    %rsp,-0x28(%rsp)
  0x00000000032cd25e: sub    $0x80,%rsp
  0x00000000032cd265: mov    %rax,0x78(%rsp)
  0x00000000032cd26a: mov    %rcx,0x70(%rsp)
  0x00000000032cd26f: mov    %rdx,0x68(%rsp)
  0x00000000032cd274: mov    %rbx,0x60(%rsp)
  0x00000000032cd279: mov    %rbp,0x50(%rsp)
  0x00000000032cd27e: mov    %rsi,0x48(%rsp)
  0x00000000032cd283: mov    %rdi,0x40(%rsp)
  0x00000000032cd288: mov    %r8,0x38(%rsp)
  0x00000000032cd28d: mov    %r9,0x30(%rsp)
  0x00000000032cd292: mov    %r10,0x28(%rsp)
  0x00000000032cd297: mov    %r11,0x20(%rsp)
  0x00000000032cd29c: mov    %r12,0x18(%rsp)
  0x00000000032cd2a1: mov    %r13,0x10(%rsp)
  0x00000000032cd2a6: mov    %r14,0x8(%rsp)
  0x00000000032cd2ab: mov    %r15,(%rsp)
  0x00000000032cd2af: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032cd2b9: movabs $0x32cd259,%rdx    ;   {internal_word}
  0x00000000032cd2c3: mov    %rsp,%r8
  0x00000000032cd2c6: and    $0xfffffffffffffff0,%rsp
  0x00000000032cd2ca: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032cd2cf: hlt    
[Deopt Handler Code]
  0x00000000032cd2d0: movabs $0x32cd2d0,%r10    ;   {section_word}
  0x00000000032cd2da: push   %r10
  0x00000000032cd2dc: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032cd2e1: hlt    
  0x00000000032cd2e2: hlt    
  0x00000000032cd2e3: hlt    
  0x00000000032cd2e4: hlt    
  0x00000000032cd2e5: hlt    
  0x00000000032cd2e6: hlt    
  0x00000000032cd2e7: hlt    
<nmethod compile_id='89' compiler='C1' level='3' entry='0x00000000032cb0e0' size='15216' address='0x00000000032cad10' relocation_offset='288' insts_offset='976' stub_offset='9264' scopes_data_offset='9784' scopes_pcs_offset='12032' dependencies_offset='15072' nul_chk_table_offset='15088' oops_offset='9688' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='597' backedge_count='8539' iicount='597' stamp='1.220'/>
<writer thread='25504'/>
<task_queued compile_id='97' method='com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread run ()V' bytes='46' count='12' backedge_count='460800' iicount='12' stamp='1.220' comment='tiered' hot_count='12'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032ca9d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c5540d8} &apos;add&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032cab20: mov    0x8(%rdx),%r10d
  0x00000000032cab24: shl    $0x3,%r10
  0x00000000032cab28: cmp    %rax,%r10
  0x00000000032cab2b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032cab31: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032cab3c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032cab40: mov    %eax,-0x6000(%rsp)
  0x00000000032cab47: push   %rbp
  0x00000000032cab48: sub    $0x40,%rsp         ;*aload_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest$SynchronizedObject::add@0 (line 26)

  0x00000000032cab4c: mov    0x10(%rdx),%rsi    ;*getfield x
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest$SynchronizedObject::add@2 (line 26)

  0x00000000032cab50: movabs $0x1,%r10
  0x00000000032cab5a: add    %r10,%rsi
  0x00000000032cab5d: mov    %rsi,0x10(%rdx)    ;*putfield x
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.CustomCASTest$SynchronizedObject::add@7 (line 26)

  0x00000000032cab61: add    $0x40,%rsp
  0x00000000032cab65: pop    %rbp
  0x00000000032cab66: test   %eax,-0x9daa6c(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032cab6c: retq   
  0x00000000032cab6d: nop
  0x00000000032cab6e: nop
  0x00000000032cab6f: mov    0x2a8(%r15),%rax
  0x00000000032cab76: movabs $0x0,%r10
  0x00000000032cab80: mov    %r10,0x2a8(%r15)
  0x00000000032cab87: movabs $0x0,%r10
  0x00000000032cab91: mov    %r10,0x2b0(%r15)
  0x00000000032cab98: add    $0x40,%rsp
  0x00000000032cab9c: pop    %rbp
  0x00000000032cab9d: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032caba2: hlt    
  0x00000000032caba3: hlt    
  0x00000000032caba4: hlt    
  0x00000000032caba5: hlt    
  0x00000000032caba6: hlt    
  0x00000000032caba7: hlt    
  0x00000000032caba8: hlt    
  0x00000000032caba9: hlt    
  0x00000000032cabaa: hlt    
  0x00000000032cabab: hlt    
  0x00000000032cabac: hlt    
  0x00000000032cabad: hlt    
  0x00000000032cabae: hlt    
  0x00000000032cabaf: hlt    
  0x00000000032cabb0: hlt    
  0x00000000032cabb1: hlt    
  0x00000000032cabb2: hlt    
  0x00000000032cabb3: hlt    
  0x00000000032cabb4: hlt    
  0x00000000032cabb5: hlt    
  0x00000000032cabb6: hlt    
  0x00000000032cabb7: hlt    
  0x00000000032cabb8: hlt    
  0x00000000032cabb9: hlt    
  0x00000000032cabba: hlt    
  0x00000000032cabbb: hlt    
  0x00000000032cabbc: hlt    
  0x00000000032cabbd: hlt    
  0x00000000032cabbe: hlt    
  0x00000000032cabbf: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032cabc0: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032cabc5: mov    %rsp,-0x28(%rsp)
  0x00000000032cabca: sub    $0x80,%rsp
  0x00000000032cabd1: mov    %rax,0x78(%rsp)
  0x00000000032cabd6: mov    %rcx,0x70(%rsp)
  0x00000000032cabdb: mov    %rdx,0x68(%rsp)
  0x00000000032cabe0: mov    %rbx,0x60(%rsp)
  0x00000000032cabe5: mov    %rbp,0x50(%rsp)
  0x00000000032cabea: mov    %rsi,0x48(%rsp)
  0x00000000032cabef: mov    %rdi,0x40(%rsp)
  0x00000000032cabf4: mov    %r8,0x38(%rsp)
  0x00000000032cabf9: mov    %r9,0x30(%rsp)
  0x00000000032cabfe: mov    %r10,0x28(%rsp)
  0x00000000032cac03: mov    %r11,0x20(%rsp)
  0x00000000032cac08: mov    %r12,0x18(%rsp)
  0x00000000032cac0d: mov    %r13,0x10(%rsp)
  0x00000000032cac12: mov    %r14,0x8(%rsp)
  0x00000000032cac17: mov    %r15,(%rsp)
  0x00000000032cac1b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032cac25: movabs $0x32cabc5,%rdx    ;   {internal_word}
  0x00000000032cac2f: mov    %rsp,%r8
  0x00000000032cac32: and    $0xfffffffffffffff0,%rsp
  0x00000000032cac36: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032cac3b: hlt    
[Deopt Handler Code]
  0x00000000032cac3c: movabs $0x32cac3c,%r10    ;   {section_word}
  0x00000000032cac46: push   %r10
  0x00000000032cac48: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032cac4d: hlt    
  0x00000000032cac4e: hlt    
  0x00000000032cac4f: hlt    
<nmethod compile_id='91' compiler='C1' level='1' entry='0x00000000032cab20' size='768' address='0x00000000032ca9d0' relocation_offset='288' insts_offset='336' stub_offset='496' scopes_data_offset='656' scopes_pcs_offset='680' dependencies_offset='760' oops_offset='640' method='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject add ()V' bytes='11' count='1371026' iicount='1371122' stamp='1.223'/>
<make_not_entrant thread='23880' compile_id='85' compiler='C1' level='2' stamp='1.223'/>
Decoding compiled method 0x00000000032ca510:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000032ca680: mov    0x8(%rdx),%r10d
  0x00000000032ca684: shl    $0x3,%r10
  0x00000000032ca688: cmp    %rax,%r10
  0x00000000032ca68b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032ca691: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032ca69c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032ca6a0: mov    %eax,-0x6000(%rsp)
  0x00000000032ca6a7: push   %rbp
  0x00000000032ca6a8: sub    $0x30,%rsp
  0x00000000032ca6ac: movabs $0x1c3c9560,%rax
  0x00000000032ca6b6: mov    0x8(%rax),%esi
  0x00000000032ca6b9: add    $0x8,%esi
  0x00000000032ca6bc: mov    %esi,0x8(%rax)
  0x00000000032ca6bf: movabs $0x1c29fec8,%rax   ;   {metadata({method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032ca6c9: and    $0x3ff8,%esi
  0x00000000032ca6cf: cmp    $0x0,%esi
  0x00000000032ca6d2: je     0x00000000032ca75e  ;*aload_0
                                                ; - java.io.BufferedInputStream::getBufIfOpen@0 (line 168)

  0x00000000032ca6d8: mov    0x20(%rdx),%eax
  0x00000000032ca6db: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)

  0x00000000032ca6df: cmp    $0x0,%rax
  0x00000000032ca6e3: je     0x00000000032ca6f5  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)

  0x00000000032ca6e9: add    $0x30,%rsp
  0x00000000032ca6ed: pop    %rbp
  0x00000000032ca6ee: test   %eax,-0x9da5f4(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ca6f4: retq                      ;*areturn
                                                ; - java.io.BufferedInputStream::getBufIfOpen@20 (line 171)

  0x00000000032ca6f5: data16 xchg %ax,%ax
  0x00000000032ca6f8: jmpq   0x00000000032ca784  ;   {no_reloc}
  0x00000000032ca6fd: add    %al,(%rax)
  0x00000000032ca6ff: add    %al,(%rax)
  0x00000000032ca701: add    %cl,-0x75(%rcx)
  0x00000000032ca704: rex.RXB (bad) 
  0x00000000032ca706: lea    0x20(%rax),%rdi
  0x00000000032ca70a: cmp    0x70(%r15),%rdi
  0x00000000032ca70e: ja     0x00000000032ca78e
  0x00000000032ca714: mov    %rdi,0x60(%r15)
  0x00000000032ca718: mov    0xa8(%rdx),%rcx
  0x00000000032ca71f: mov    %rcx,(%rax)
  0x00000000032ca722: mov    %rdx,%rcx
  0x00000000032ca725: shr    $0x3,%rcx
  0x00000000032ca729: mov    %ecx,0x8(%rax)
  0x00000000032ca72c: xor    %rcx,%rcx
  0x00000000032ca72f: mov    %ecx,0xc(%rax)
  0x00000000032ca732: xor    %rcx,%rcx
  0x00000000032ca735: mov    %rcx,0x10(%rax)
  0x00000000032ca739: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)

  0x00000000032ca73d: movabs $0x76bf1f198,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x00000000032ca747: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)

  0x00000000032ca74a: mov    %rax,0x20(%rsp)
  0x00000000032ca74f: callq  0x00000000031d61a0  ; OopMap{[32]=Oop off=212}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ;   {optimized virtual_call}
  0x00000000032ca754: mov    0x20(%rsp),%rax
  0x00000000032ca759: jmpq   0x00000000032ca7c3
  0x00000000032ca75e: mov    %rax,0x8(%rsp)
  0x00000000032ca763: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ca76b: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=240}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ;   {runtime_call}
  0x00000000032ca770: jmpq   0x00000000032ca6d8
  0x00000000032ca775: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032ca77f: mov    $0xa050f00,%eax
  0x00000000032ca784: callq  0x0000000003290ca0  ; OopMap{off=265}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x00000000032ca789: jmpq   0x00000000032ca6f8
  0x00000000032ca78e: mov    %rdx,%rdx
  0x00000000032ca791: callq  0x000000000328de00  ; OopMap{off=278}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ;   {runtime_call}
  0x00000000032ca796: jmp    0x00000000032ca73d
  0x00000000032ca798: nop
  0x00000000032ca799: nop
  0x00000000032ca79a: mov    0x2a8(%r15),%rax
  0x00000000032ca7a1: movabs $0x0,%r10
  0x00000000032ca7ab: mov    %r10,0x2a8(%r15)
  0x00000000032ca7b2: movabs $0x0,%r10
  0x00000000032ca7bc: mov    %r10,0x2b0(%r15)
  0x00000000032ca7c3: add    $0x30,%rsp
  0x00000000032ca7c7: pop    %rbp
  0x00000000032ca7c8: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032ca7cd: hlt    
  0x00000000032ca7ce: hlt    
  0x00000000032ca7cf: hlt    
  0x00000000032ca7d0: hlt    
  0x00000000032ca7d1: hlt    
  0x00000000032ca7d2: hlt    
  0x00000000032ca7d3: hlt    
  0x00000000032ca7d4: hlt    
  0x00000000032ca7d5: hlt    
  0x00000000032ca7d6: hlt    
  0x00000000032ca7d7: hlt    
  0x00000000032ca7d8: hlt    
  0x00000000032ca7d9: hlt    
  0x00000000032ca7da: hlt    
  0x00000000032ca7db: hlt    
  0x00000000032ca7dc: hlt    
  0x00000000032ca7dd: hlt    
  0x00000000032ca7de: hlt    
  0x00000000032ca7df: hlt    
[Stub Code]
  0x00000000032ca7e0: nop                       ;   {no_reloc}
  0x00000000032ca7e1: nop
  0x00000000032ca7e2: nop
  0x00000000032ca7e3: nop
  0x00000000032ca7e4: nop
  0x00000000032ca7e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032ca7ef: jmpq   0x00000000032ca7ef  ;   {runtime_call}
[Exception Handler]
  0x00000000032ca7f4: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032ca7f9: mov    %rsp,-0x28(%rsp)
  0x00000000032ca7fe: sub    $0x80,%rsp
  0x00000000032ca805: mov    %rax,0x78(%rsp)
  0x00000000032ca80a: mov    %rcx,0x70(%rsp)
  0x00000000032ca80f: mov    %rdx,0x68(%rsp)
  0x00000000032ca814: mov    %rbx,0x60(%rsp)
  0x00000000032ca819: mov    %rbp,0x50(%rsp)
  0x00000000032ca81e: mov    %rsi,0x48(%rsp)
  0x00000000032ca823: mov    %rdi,0x40(%rsp)
  0x00000000032ca828: mov    %r8,0x38(%rsp)
  0x00000000032ca82d: mov    %r9,0x30(%rsp)
  0x00000000032ca832: mov    %r10,0x28(%rsp)
  0x00000000032ca837: mov    %r11,0x20(%rsp)
  0x00000000032ca83c: mov    %r12,0x18(%rsp)
  0x00000000032ca841: mov    %r13,0x10(%rsp)
  0x00000000032ca846: mov    %r14,0x8(%rsp)
  0x00000000032ca84b: mov    %r15,(%rsp)
  0x00000000032ca84f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032ca859: movabs $0x32ca7f9,%rdx    ;   {internal_word}
  0x00000000032ca863: mov    %rsp,%r8
  0x00000000032ca866: and    $0xfffffffffffffff0,%rsp
  0x00000000032ca86a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032ca86f: hlt    
[Deopt Handler Code]
  0x00000000032ca870: movabs $0x32ca870,%r10    ;   {section_word}
  0x00000000032ca87a: push   %r10
  0x00000000032ca87c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032ca881: hlt    
  0x00000000032ca882: hlt    
  0x00000000032ca883: hlt    
  0x00000000032ca884: hlt    
  0x00000000032ca885: hlt    
  0x00000000032ca886: hlt    
  0x00000000032ca887: hlt    
<nmethod compile_id='86' compiler='C1' level='2' entry='0x00000000032ca680' size='1168' address='0x00000000032ca510' relocation_offset='288' insts_offset='368' stub_offset='720' scopes_data_offset='896' scopes_pcs_offset='968' dependencies_offset='1160' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='7168' iicount='7168' stamp='1.226'/>
<writer thread='4332'/>
Decoding compiled method 0x00000000032c9cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c554630} &apos;run&apos; &apos;()V&apos; in &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032c9e40: mov    0x8(%rdx),%r10d
  0x00000000032c9e44: shl    $0x3,%r10
  0x00000000032c9e48: cmp    %r10,%rax
  0x00000000032c9e4b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032c9e51: data16 xchg %ax,%ax
  0x00000000032c9e54: nopl   0x0(%rax,%rax,1)
  0x00000000032c9e5c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032c9e60: mov    %eax,-0x6000(%rsp)
  0x00000000032c9e67: push   %rbp
  0x00000000032c9e68: sub    $0x40,%rsp         ;*synchronization entry
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@-1 (line 16)

  0x00000000032c9e6c: mov    %rdx,%rbp
  0x00000000032c9e6f: movabs $0x76bda4be0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032c9e79: mov    (%r10),%rax
  0x00000000032c9e7c: mov    %rax,%r10
  0x00000000032c9e7f: and    $0x7,%r10
  0x00000000032c9e83: cmp    $0x5,%r10
  0x00000000032c9e87: jne    0x00000000032c9f9c
  0x00000000032c9e8d: mov    $0xf80003df,%r11d  ;   {metadata(&apos;java/lang/Class&apos;)}
  0x00000000032c9e93: movabs $0x0,%r10
  0x00000000032c9e9d: lea    (%r10,%r11,8),%r10
  0x00000000032c9ea1: mov    0xa8(%r10),%r10
  0x00000000032c9ea8: mov    %r10,%r11
  0x00000000032c9eab: or     %r15,%r11
  0x00000000032c9eae: mov    %r11,%r8
  0x00000000032c9eb1: xor    %rax,%r8
  0x00000000032c9eb4: test   $0xffffffffffffff87,%r8
  0x00000000032c9ebb: jne    0x00000000032ca015  ;*monitorenter
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@4 (line 16)

  0x00000000032c9ec1: mov    %rbp,%r8
  0x00000000032c9ec4: mov    0x178(%r8),%r10d
  0x00000000032c9ecb: test   %r10d,%r10d
  0x00000000032c9ece: jle    0x00000000032c9eda  ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@12 (line 17)

  0x00000000032c9ed0: xor    %ebp,%ebp
  0x00000000032c9ed2: mov    $0x7,%r10d
  0x00000000032c9ed8: jmp    0x00000000032c9ef5
  0x00000000032c9eda: mov    $0x7,%r10d
  0x00000000032c9ee0: jmp    0x00000000032c9f2c
  0x00000000032c9ee2: data16 nopw 0x0(%rax,%rax,1)
  0x00000000032c9eec: data16 data16 xchg %ax,%ax
  0x00000000032c9ef0: mov    0x28(%rsp),%r10    ;*aload_0
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@15 (line 18)

  0x00000000032c9ef5: mov    0x180(%r8),%r11d   ;*getfield integer
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@16 (line 18)

  0x00000000032c9efc: test   %r11d,%r11d
  0x00000000032c9eff: je     0x00000000032c9f70  ;*invokevirtual add
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@19 (line 18)

  0x00000000032c9f01: mov    %r10,0x28(%rsp)
  0x00000000032c9f06: mov    %r8,0x20(%rsp)
  0x00000000032c9f0b: lea    (%r12,%r11,8),%rdx
  0x00000000032c9f0f: callq  0x00000000031d61a0  ; OopMap{[32]=Oop off=212}
                                                ;*invokevirtual add
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@19 (line 18)
                                                ;   {optimized virtual_call}
  0x00000000032c9f14: mov    0x20(%rsp),%r8
  0x00000000032c9f19: mov    0x178(%r8),%r10d
  0x00000000032c9f20: inc    %ebp               ;*iinc
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@22 (line 17)

  0x00000000032c9f22: cmp    %r10d,%ebp
  0x00000000032c9f25: jl     0x00000000032c9ef0
  0x00000000032c9f27: mov    0x28(%rsp),%r10    ;*if_icmpge
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@12 (line 17)

  0x00000000032c9f2c: mov    0x17c(%r8),%r11d   ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@29 (line 20)

  0x00000000032c9f33: test   %r11d,%r11d
  0x00000000032c9f36: je     0x00000000032c9f81  ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@32 (line 20)

  0x00000000032c9f38: mov    %r10,0x28(%rsp)
  0x00000000032c9f3d: lea    (%r12,%r11,8),%rdx  ;*getfield latch
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@29 (line 20)

  0x00000000032c9f41: xchg   %ax,%ax
  0x00000000032c9f43: callq  0x00000000031d61a0  ; OopMap{off=264}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@32 (line 20)
                                                ;   {optimized virtual_call}
  0x00000000032c9f48: movabs $0x76bda4be0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032c9f52: mov    0x28(%rsp),%r11
  0x00000000032c9f57: and    (%r10),%r11
  0x00000000032c9f5a: cmp    $0x5,%r11
  0x00000000032c9f5e: jne    0x00000000032ca04e  ;*monitorexit
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@36 (line 21)

  0x00000000032c9f64: add    $0x40,%rsp
  0x00000000032c9f68: pop    %rbp
  0x00000000032c9f69: test   %eax,-0x9d9f6f(%rip)        # 0x00000000028f0000
                                                ;   {poll_return}
  0x00000000032c9f6f: retq   
  0x00000000032c9f70: mov    $0xfffffff6,%edx
  0x00000000032c9f75: mov    %r8,0x20(%rsp)
  0x00000000032c9f7a: nop
  0x00000000032c9f7b: callq  0x00000000031d57a0  ; OopMap{[32]=Oop off=320}
                                                ;*invokevirtual add
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@19 (line 18)
                                                ;   {runtime_call}
  0x00000000032c9f80: int3                      ;*invokevirtual add
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@19 (line 18)

  0x00000000032c9f81: mov    $0xfffffff6,%edx
  0x00000000032c9f86: nop
  0x00000000032c9f87: callq  0x00000000031d57a0  ; OopMap{off=332}
                                                ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@32 (line 20)
                                                ;   {runtime_call}
  0x00000000032c9f8c: int3                      ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@32 (line 20)

  0x00000000032c9f8d: movabs $0x76bda4be0,%r11  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032c9f97: lock cmpxchg %r10,(%r11)
  0x00000000032c9f9c: movabs $0x76bda4be0,%r11  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032c9fa6: lea    0x30(%rsp),%rbx
  0x00000000032c9fab: mov    (%r11),%rax
  0x00000000032c9fae: test   $0x2,%rax
  0x00000000032c9fb4: jne    0x00000000032c9fda
  0x00000000032c9fb6: or     $0x1,%rax
  0x00000000032c9fba: mov    %rax,(%rbx)
  0x00000000032c9fbd: lock cmpxchg %rbx,(%r11)
  0x00000000032c9fc2: je     0x00000000032c9ff3
  0x00000000032c9fc8: sub    %rsp,%rax
  0x00000000032c9fcb: and    $0xfffffffffffff007,%rax
  0x00000000032c9fd2: mov    %rax,(%rbx)
  0x00000000032c9fd5: jmpq   0x00000000032c9ff3
  0x00000000032c9fda: movq   $0x3,(%rbx)
  0x00000000032c9fe1: mov    %rax,%rbx
  0x00000000032c9fe4: mov    0x16(%rbx),%rax
  0x00000000032c9fe8: test   %rax,%rax
  0x00000000032c9feb: jne    0x00000000032c9ff3
  0x00000000032c9fed: lock cmpxchg %r15,0x16(%rbx)
  0x00000000032c9ff3: je     0x00000000032c9ec1
  0x00000000032c9ff9: movabs $0x76bda4be0,%rdx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032ca003: lea    0x30(%rsp),%r8
  0x00000000032ca008: data16 xchg %ax,%ax
  0x00000000032ca00b: callq  0x0000000003293ae0  ; OopMap{rbp=Oop off=464}
                                                ;*monitorenter
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@4 (line 16)
                                                ;   {runtime_call}
  0x00000000032ca010: jmpq   0x00000000032c9ec1
  0x00000000032ca015: test   $0x7,%r8
  0x00000000032ca01c: jne    0x00000000032c9f8d
  0x00000000032ca022: test   $0x300,%r8
  0x00000000032ca029: jne    0x00000000032ca038
  0x00000000032ca02b: and    $0x37f,%rax
  0x00000000032ca032: mov    %rax,%r11
  0x00000000032ca035: or     %r15,%r11
  0x00000000032ca038: movabs $0x76bda4be0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032ca042: lock cmpxchg %r11,(%r10)
  0x00000000032ca047: jne    0x00000000032c9ff9
  0x00000000032ca049: jmpq   0x00000000032c9ec1
  0x00000000032ca04e: movabs $0x76bda4be0,%r11  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032ca058: lea    0x30(%rsp),%rax
  0x00000000032ca05d: cmpq   $0x0,(%rax)
  0x00000000032ca064: je     0x00000000032ca0de
  0x00000000032ca06a: mov    (%r11),%r10
  0x00000000032ca06d: test   $0x2,%r10
  0x00000000032ca074: je     0x00000000032ca0d6
  0x00000000032ca076: mov    0x16(%r10),%rax
  0x00000000032ca07a: xor    %r15,%rax
  0x00000000032ca07d: or     0x26(%r10),%rax
  0x00000000032ca081: jne    0x00000000032ca0de
  0x00000000032ca083: mov    0x36(%r10),%rax
  0x00000000032ca087: or     0x3e(%r10),%rax
  0x00000000032ca08b: jne    0x00000000032ca097
  0x00000000032ca08d: movq   $0x0,0x16(%r10)
  0x00000000032ca095: jmp    0x00000000032ca0de
  0x00000000032ca097: cmpq   $0x0,0x46(%r10)
  0x00000000032ca09f: je     0x00000000032ca0ca
  0x00000000032ca0a1: movq   $0x0,0x16(%r10)
  0x00000000032ca0a9: lock addl $0x0,(%rsp)
  0x00000000032ca0ae: cmpq   $0x0,0x46(%r10)
  0x00000000032ca0b6: jne    0x00000000032ca0cf
  0x00000000032ca0b8: movabs $0x0,%rax
  0x00000000032ca0c2: lock cmpxchg %r15,0x16(%r10)
  0x00000000032ca0c8: jne    0x00000000032ca0cf
  0x00000000032ca0ca: or     $0x1,%eax
  0x00000000032ca0cd: jmp    0x00000000032ca0de
  0x00000000032ca0cf: test   $0x0,%eax
  0x00000000032ca0d4: jmp    0x00000000032ca0de
  0x00000000032ca0d6: mov    (%rax),%r10
  0x00000000032ca0d9: lock cmpxchg %r10,(%r11)
  0x00000000032ca0de: je     0x00000000032c9f64
  0x00000000032ca0e4: movabs $0x76bda4be0,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032ca0ee: lea    0x30(%rsp),%rdx    ;*monitorenter
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@4 (line 16)

  0x00000000032ca0f3: movabs $0x5590c5c0,%r10
  0x00000000032ca0fd: callq  *%r10              ;*monitorexit
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@36 (line 21)

  0x00000000032ca100: jmpq   0x00000000032c9f64  ;*invokevirtual countDown
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@32 (line 20)

  0x00000000032ca105: mov    %rax,%rbx
  0x00000000032ca108: jmp    0x00000000032ca10d  ;*invokevirtual add
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@19 (line 18)

  0x00000000032ca10a: mov    %rax,%rbx
  0x00000000032ca10d: movabs $0x76bda4be0,%r10  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032ca117: mov    0x28(%rsp),%r11
  0x00000000032ca11c: and    (%r10),%r11
  0x00000000032ca11f: cmp    $0x5,%r11
  0x00000000032ca123: jne    0x00000000032ca132  ;*monitorexit
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@42 (line 21)

  0x00000000032ca125: mov    %rbx,%rdx
  0x00000000032ca128: add    $0x40,%rsp
  0x00000000032ca12c: pop    %rbp
  0x00000000032ca12d: jmpq   0x0000000003292260  ;   {runtime_call}
  0x00000000032ca132: movabs $0x76bda4be0,%r11  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032ca13c: lea    0x30(%rsp),%rax
  0x00000000032ca141: cmpq   $0x0,(%rax)
  0x00000000032ca148: je     0x00000000032ca1c2
  0x00000000032ca14e: mov    (%r11),%r10
  0x00000000032ca151: test   $0x2,%r10
  0x00000000032ca158: je     0x00000000032ca1ba
  0x00000000032ca15a: mov    0x16(%r10),%rax
  0x00000000032ca15e: xor    %r15,%rax
  0x00000000032ca161: or     0x26(%r10),%rax
  0x00000000032ca165: jne    0x00000000032ca1c2
  0x00000000032ca167: mov    0x36(%r10),%rax
  0x00000000032ca16b: or     0x3e(%r10),%rax
  0x00000000032ca16f: jne    0x00000000032ca17b
  0x00000000032ca171: movq   $0x0,0x16(%r10)
  0x00000000032ca179: jmp    0x00000000032ca1c2
  0x00000000032ca17b: cmpq   $0x0,0x46(%r10)
  0x00000000032ca183: je     0x00000000032ca1ae
  0x00000000032ca185: movq   $0x0,0x16(%r10)
  0x00000000032ca18d: lock addl $0x0,(%rsp)
  0x00000000032ca192: cmpq   $0x0,0x46(%r10)
  0x00000000032ca19a: jne    0x00000000032ca1b3
  0x00000000032ca19c: movabs $0x0,%rax
  0x00000000032ca1a6: lock cmpxchg %r15,0x16(%r10)
  0x00000000032ca1ac: jne    0x00000000032ca1b3
  0x00000000032ca1ae: or     $0x1,%eax
  0x00000000032ca1b1: jmp    0x00000000032ca1c2
  0x00000000032ca1b3: test   $0x0,%eax
  0x00000000032ca1b8: jmp    0x00000000032ca1c2
  0x00000000032ca1ba: mov    (%rax),%r10
  0x00000000032ca1bd: lock cmpxchg %r10,(%r11)
  0x00000000032ca1c2: je     0x00000000032ca125
  0x00000000032ca1c8: movabs $0x76bda4be0,%rcx  ;   {oop(a &apos;java/lang/Class&apos; = &apos;com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread&apos;)}
  0x00000000032ca1d2: lea    0x30(%rsp),%rdx    ;*monitorenter
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@4 (line 16)

  0x00000000032ca1d7: movabs $0x5590c5c0,%r10
  0x00000000032ca1e1: callq  *%r10              ;*monitorexit
                                                ; - com.fcy.Java.Concurrent.CustomerLockDemo.SynchronizedThread::run@42 (line 21)

  0x00000000032ca1e4: jmpq   0x00000000032ca125
  0x00000000032ca1e9: hlt    
  0x00000000032ca1ea: hlt    
  0x00000000032ca1eb: hlt    
  0x00000000032ca1ec: hlt    
  0x00000000032ca1ed: hlt    
  0x00000000032ca1ee: hlt    
  0x00000000032ca1ef: hlt    
  0x00000000032ca1f0: hlt    
  0x00000000032ca1f1: hlt    
  0x00000000032ca1f2: hlt    
  0x00000000032ca1f3: hlt    
  0x00000000032ca1f4: hlt    
  0x00000000032ca1f5: hlt    
  0x00000000032ca1f6: hlt    
  0x00000000032ca1f7: hlt    
  0x00000000032ca1f8: hlt    
  0x00000000032ca1f9: hlt    
  0x00000000032ca1fa: hlt    
  0x00000000032ca1fb: hlt    
  0x00000000032ca1fc: hlt    
  0x00000000032ca1fd: hlt    
  0x00000000032ca1fe: hlt    
  0x00000000032ca1ff: hlt    
[Stub Code]
  0x00000000032ca200: movabs $0x0,%rbx          ;   {no_reloc}
  0x00000000032ca20a: jmpq   0x00000000032ca20a  ;   {runtime_call}
  0x00000000032ca20f: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032ca219: jmpq   0x00000000032ca219  ;   {runtime_call}
[Exception Handler]
  0x00000000032ca21e: jmpq   0x000000000328d0e0  ;   {runtime_call}
[Deopt Handler Code]
  0x00000000032ca223: callq  0x00000000032ca228
  0x00000000032ca228: subq   $0x5,(%rsp)
  0x00000000032ca22d: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032ca232: hlt    
  0x00000000032ca233: hlt    
  0x00000000032ca234: hlt    
  0x00000000032ca235: hlt    
  0x00000000032ca236: hlt    
  0x00000000032ca237: hlt    
<nmethod compile_id='97' compiler='C2' level='4' entry='0x00000000032c9e40' size='2072' address='0x00000000032c9cd0' relocation_offset='288' insts_offset='368' stub_offset='1328' scopes_data_offset='1432' scopes_pcs_offset='1568' dependencies_offset='2016' handler_table_offset='2024' oops_offset='1384' method='com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread run ()V' bytes='46' count='12' backedge_count='462848' iicount='12' stamp='1.233'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032c9290:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c2a0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;
  #           [sp+0x90]  (sp of caller)
  0x00000000032c9420: mov    0x8(%rdx),%r10d
  0x00000000032c9424: shl    $0x3,%r10
  0x00000000032c9428: cmp    %rax,%r10
  0x00000000032c942b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032c9431: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032c943c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032c9440: mov    %eax,-0x6000(%rsp)
  0x00000000032c9447: push   %rbp
  0x00000000032c9448: sub    $0x80,%rsp
  0x00000000032c944f: mov    %rdx,0x50(%rsp)
  0x00000000032c9454: lea    0x60(%rsp),%rsi
  0x00000000032c9459: mov    %rdx,0x8(%rsi)
  0x00000000032c945d: mov    (%rdx),%rax
  0x00000000032c9460: mov    %rax,%rdi
  0x00000000032c9463: and    $0x7,%rdi
  0x00000000032c9467: cmp    $0x5,%rdi
  0x00000000032c946b: jne    0x00000000032c94f2
  0x00000000032c9471: mov    0x8(%rdx),%edi
  0x00000000032c9474: shl    $0x3,%rdi
  0x00000000032c9478: mov    0xa8(%rdi),%rdi
  0x00000000032c947f: or     %r15,%rdi
  0x00000000032c9482: xor    %rax,%rdi
  0x00000000032c9485: and    $0xffffffffffffff87,%rdi
  0x00000000032c9489: je     0x00000000032c951a
  0x00000000032c948f: test   $0x7,%rdi
  0x00000000032c9496: jne    0x00000000032c94df
  0x00000000032c9498: test   $0x300,%rdi
  0x00000000032c949f: jne    0x00000000032c94be
  0x00000000032c94a1: and    $0x37f,%rax
  0x00000000032c94a8: mov    %rax,%rdi
  0x00000000032c94ab: or     %r15,%rdi
  0x00000000032c94ae: lock cmpxchg %rdi,(%rdx)
  0x00000000032c94b3: jne    0x00000000032c97a6
  0x00000000032c94b9: jmpq   0x00000000032c951a
  0x00000000032c94be: mov    0x8(%rdx),%edi
  0x00000000032c94c1: shl    $0x3,%rdi
  0x00000000032c94c5: mov    0xa8(%rdi),%rdi
  0x00000000032c94cc: or     %r15,%rdi
  0x00000000032c94cf: lock cmpxchg %rdi,(%rdx)
  0x00000000032c94d4: jne    0x00000000032c97a6
  0x00000000032c94da: jmpq   0x00000000032c951a
  0x00000000032c94df: mov    0x8(%rdx),%edi
  0x00000000032c94e2: shl    $0x3,%rdi
  0x00000000032c94e6: mov    0xa8(%rdi),%rdi
  0x00000000032c94ed: lock cmpxchg %rdi,(%rdx)
  0x00000000032c94f2: mov    (%rdx),%rax
  0x00000000032c94f5: or     $0x1,%rax
  0x00000000032c94f9: mov    %rax,(%rsi)
  0x00000000032c94fc: lock cmpxchg %rsi,(%rdx)
  0x00000000032c9501: je     0x00000000032c951a
  0x00000000032c9507: sub    %rsp,%rax
  0x00000000032c950a: and    $0xfffffffffffff007,%rax
  0x00000000032c9511: mov    %rax,(%rsi)
  0x00000000032c9514: jne    0x00000000032c97a6
  0x00000000032c951a: movabs $0x1c48d1f8,%rsi   ;   {metadata(method data for {method} {0x000000001c2a0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c9524: mov    0xdc(%rsi),%edi
  0x00000000032c952a: add    $0x8,%edi
  0x00000000032c952d: mov    %edi,0xdc(%rsi)
  0x00000000032c9533: movabs $0x1c2a0278,%rsi   ;   {metadata({method} {0x000000001c2a0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c953d: and    $0x1ff8,%edi
  0x00000000032c9543: cmp    $0x0,%edi
  0x00000000032c9546: je     0x00000000032c97b9  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 264)

  0x00000000032c954c: mov    0x14(%rdx),%esi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@1 (line 264)

  0x00000000032c954f: mov    0x10(%rdx),%edi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@5 (line 264)

  0x00000000032c9552: cmp    %edi,%esi
  0x00000000032c9554: movabs $0x1c48d1f8,%rsi   ;   {metadata(method data for {method} {0x000000001c2a0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c955e: movabs $0x108,%rdi
  0x00000000032c9568: jl     0x00000000032c9578
  0x00000000032c956e: movabs $0x118,%rdi
  0x00000000032c9578: mov    (%rsi,%rdi,1),%rbx
  0x00000000032c957c: lea    0x1(%rbx),%rbx
  0x00000000032c9580: mov    %rbx,(%rsi,%rdi,1)
  0x00000000032c9584: jl     0x00000000032c95ef  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@8 (line 264)

  0x00000000032c958a: mov    %rdx,%rsi
  0x00000000032c958d: movabs $0x1c48d1f8,%rdi   ;   {metadata(method data for {method} {0x000000001c2a0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c9597: addq   $0x1,0x128(%rdi)
  0x00000000032c959f: mov    %rdx,%rsi
  0x00000000032c95a2: mov    %rsi,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)

  0x00000000032c95a5: nop
  0x00000000032c95a6: nop
  0x00000000032c95a7: callq  0x00000000031d61a0  ; OopMap{[80]=Oop [104]=Oop off=396}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read@12 (line 265)
                                                ;   {optimized virtual_call}
  0x00000000032c95ac: mov    0x50(%rsp),%rdx
  0x00000000032c95b1: mov    0x14(%rdx),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@16 (line 266)

  0x00000000032c95b4: mov    0x10(%rdx),%esi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read@20 (line 266)

  0x00000000032c95b7: cmp    %esi,%eax
  0x00000000032c95b9: movabs $0x1c48d1f8,%rax   ;   {metadata(method data for {method} {0x000000001c2a0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c95c3: movabs $0x138,%rsi
  0x00000000032c95cd: jl     0x00000000032c95dd
  0x00000000032c95d3: movabs $0x148,%rsi
  0x00000000032c95dd: mov    (%rax,%rsi,1),%rdi
  0x00000000032c95e1: lea    0x1(%rdi),%rdi
  0x00000000032c95e5: mov    %rdi,(%rax,%rsi,1)
  0x00000000032c95e9: jge    0x00000000032c96dc  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@23 (line 266)

  0x00000000032c95ef: mov    %rdx,%rax
  0x00000000032c95f2: movabs $0x1c48d1f8,%rsi   ;   {metadata(method data for {method} {0x000000001c2a0280} &apos;read&apos; &apos;()I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c95fc: addq   $0x1,0x158(%rsi)
  0x00000000032c9604: movabs $0x1c48c980,%rax   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c960e: mov    0xdc(%rax),%esi
  0x00000000032c9614: add    $0x8,%esi
  0x00000000032c9617: mov    %esi,0xdc(%rax)
  0x00000000032c961d: movabs $0x1c29fec8,%rax   ;   {metadata({method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c9627: and    $0x7ffff8,%esi
  0x00000000032c962d: cmp    $0x0,%esi
  0x00000000032c9630: je     0x00000000032c97d0
  0x00000000032c9636: mov    0x20(%rdx),%eax
  0x00000000032c9639: shl    $0x3,%rax          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x00000000032c963d: cmp    $0x0,%rax
  0x00000000032c9641: movabs $0x1c48c980,%rsi   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c964b: movabs $0x108,%rdi
  0x00000000032c9655: jne    0x00000000032c9665
  0x00000000032c965b: movabs $0x118,%rdi
  0x00000000032c9665: mov    (%rsi,%rdi,1),%rcx
  0x00000000032c9669: lea    0x1(%rcx),%rcx
  0x00000000032c966d: mov    %rcx,(%rsi,%rdi,1)
  0x00000000032c9671: je     0x00000000032c9721  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x00000000032c9677: mov    0x14(%rdx),%esi    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read@34 (line 269)

  0x00000000032c967a: mov    %rsi,%rdi
  0x00000000032c967d: inc    %edi
  0x00000000032c967f: mov    %edi,0x14(%rdx)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read@40 (line 269)

  0x00000000032c9682: movslq %esi,%rdx
  0x00000000032c9685: cmp    0xc(%rax),%esi     ; implicit exception: dispatches to 0x00000000032c97e7
  0x00000000032c9688: jae    0x00000000032c97f1
  0x00000000032c968e: movsbl 0x10(%rax,%rdx,1),%edx  ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)

  0x00000000032c9693: lea    0x60(%rsp),%rax
  0x00000000032c9698: mov    0x8(%rax),%rdi
  0x00000000032c969c: mov    (%rdi),%rsi
  0x00000000032c969f: and    $0x7,%rsi
  0x00000000032c96a3: cmp    $0x5,%rsi
  0x00000000032c96a7: je     0x00000000032c96c4
  0x00000000032c96ad: mov    (%rax),%rsi
  0x00000000032c96b0: test   %rsi,%rsi
  0x00000000032c96b3: je     0x00000000032c96c4
  0x00000000032c96b9: lock cmpxchg %rsi,(%rdi)
  0x00000000032c96be: jne    0x00000000032c97fa
  0x00000000032c96c4: and    $0xff,%edx
  0x00000000032c96ca: mov    %rdx,%rax
  0x00000000032c96cd: add    $0x80,%rsp
  0x00000000032c96d4: pop    %rbp
  0x00000000032c96d5: test   %eax,-0x9d95db(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032c96db: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@48 (line 269)

  0x00000000032c96dc: lea    0x60(%rsp),%rax
  0x00000000032c96e1: mov    0x8(%rax),%rsi
  0x00000000032c96e5: mov    (%rsi),%rdx
  0x00000000032c96e8: and    $0x7,%rdx
  0x00000000032c96ec: cmp    $0x5,%rdx
  0x00000000032c96f0: je     0x00000000032c970d
  0x00000000032c96f6: mov    (%rax),%rdx
  0x00000000032c96f9: test   %rdx,%rdx
  0x00000000032c96fc: je     0x00000000032c970d
  0x00000000032c9702: lock cmpxchg %rdx,(%rsi)
  0x00000000032c9707: jne    0x00000000032c980d
  0x00000000032c970d: mov    $0xffffffff,%eax
  0x00000000032c9712: add    $0x80,%rsp
  0x00000000032c9719: pop    %rbp
  0x00000000032c971a: test   %eax,-0x9d9620(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032c9720: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@27 (line 267)

  0x00000000032c9721: nopl   0x0(%rax)
  0x00000000032c9728: jmpq   0x00000000032c982f  ;   {no_reloc}
  0x00000000032c972d: add    %al,(%rax)
  0x00000000032c972f: add    %al,(%rax)
  0x00000000032c9731: add    %cl,-0x75(%rcx)
  0x00000000032c9734: rex.RXB (bad) 
  0x00000000032c9736: lea    0x20(%rax),%rdi
  0x00000000032c973a: cmp    0x70(%r15),%rdi
  0x00000000032c973e: ja     0x00000000032c9839
  0x00000000032c9744: mov    %rdi,0x60(%r15)
  0x00000000032c9748: mov    0xa8(%rdx),%rcx
  0x00000000032c974f: mov    %rcx,(%rax)
  0x00000000032c9752: mov    %rdx,%rcx
  0x00000000032c9755: shr    $0x3,%rcx
  0x00000000032c9759: mov    %ecx,0x8(%rax)
  0x00000000032c975c: xor    %rcx,%rcx
  0x00000000032c975f: mov    %ecx,0xc(%rax)
  0x00000000032c9762: xor    %rcx,%rcx
  0x00000000032c9765: mov    %rcx,0x10(%rax)
  0x00000000032c9769: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x00000000032c976d: mov    %rax,%r8
  0x00000000032c9770: movabs $0x1c48c980,%rdx   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032c977a: addq   $0x1,0x128(%rdx)
  0x00000000032c9782: movabs $0x76bf1f198,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x00000000032c978c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)

  0x00000000032c978f: mov    %rax,0x58(%rsp)
  0x00000000032c9794: nop
  0x00000000032c9795: nop
  0x00000000032c9796: nop
  0x00000000032c9797: callq  0x00000000031d61a0  ; OopMap{[80]=Oop [88]=Oop [104]=Oop off=892}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {optimized virtual_call}
  0x00000000032c979c: mov    0x58(%rsp),%rax
  0x00000000032c97a1: jmpq   0x00000000032c9871
  0x00000000032c97a6: mov    %rdx,0x8(%rsp)
  0x00000000032c97ab: mov    %rsi,(%rsp)
  0x00000000032c97af: callq  0x0000000003290060  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=916}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x00000000032c97b4: jmpq   0x00000000032c951a
  0x00000000032c97b9: mov    %rsi,0x8(%rsp)
  0x00000000032c97be: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032c97c6: callq  0x0000000003291d60  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=939}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 264)
                                                ;   {runtime_call}
  0x00000000032c97cb: jmpq   0x00000000032c954c
  0x00000000032c97d0: mov    %rax,0x8(%rsp)
  0x00000000032c97d5: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032c97dd: callq  0x0000000003291d60  ; OopMap{rdx=Oop [80]=Oop [104]=Oop off=962}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x00000000032c97e2: jmpq   0x00000000032c9636
  0x00000000032c97e7: callq  0x000000000328d680  ; OopMap{rax=Oop [104]=Oop off=972}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x00000000032c97ec: callq  0x000000000328d680  ; OopMap{rax=Oop [104]=Oop off=977}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x00000000032c97f1: mov    %rsi,(%rsp)
  0x00000000032c97f5: callq  0x000000000328c940  ; OopMap{rax=Oop [104]=Oop off=986}
                                                ;*baload
                                                ; - java.io.BufferedInputStream::read@43 (line 269)
                                                ;   {runtime_call}
  0x00000000032c97fa: lea    0x60(%rsp),%rax
  0x00000000032c97ff: mov    %rax,(%rsp)
  0x00000000032c9803: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032c9808: jmpq   0x00000000032c96c4
  0x00000000032c980d: lea    0x60(%rsp),%rax
  0x00000000032c9812: mov    %rax,(%rsp)
  0x00000000032c9816: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032c981b: jmpq   0x00000000032c970d
  0x00000000032c9820: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032c982a: mov    $0xa050f00,%eax
  0x00000000032c982f: callq  0x0000000003290ca0  ; OopMap{[80]=Oop [104]=Oop off=1044}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x00000000032c9834: jmpq   0x00000000032c9728
  0x00000000032c9839: mov    %rdx,%rdx
  0x00000000032c983c: callq  0x000000000328de00  ; OopMap{[80]=Oop [104]=Oop off=1057}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@29 (line 269)
                                                ;   {runtime_call}
  0x00000000032c9841: jmpq   0x00000000032c976d
  0x00000000032c9846: nop
  0x00000000032c9847: nop
  0x00000000032c9848: mov    0x2a8(%r15),%rax
  0x00000000032c984f: movabs $0x0,%r10
  0x00000000032c9859: mov    %r10,0x2a8(%r15)
  0x00000000032c9860: movabs $0x0,%r10
  0x00000000032c986a: mov    %r10,0x2b0(%r15)
  0x00000000032c9871: mov    %rax,%rbx
  0x00000000032c9874: lea    0x60(%rsp),%rax
  0x00000000032c9879: mov    0x8(%rax),%rsi
  0x00000000032c987d: mov    (%rsi),%rdi
  0x00000000032c9880: and    $0x7,%rdi
  0x00000000032c9884: cmp    $0x5,%rdi
  0x00000000032c9888: je     0x00000000032c98a5
  0x00000000032c988e: mov    (%rax),%rdi
  0x00000000032c9891: test   %rdi,%rdi
  0x00000000032c9894: je     0x00000000032c98a5
  0x00000000032c989a: lock cmpxchg %rdi,(%rsi)
  0x00000000032c989f: jne    0x00000000032c98b5
  0x00000000032c98a5: mov    %rbx,%rax
  0x00000000032c98a8: add    $0x80,%rsp
  0x00000000032c98af: pop    %rbp
  0x00000000032c98b0: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032c98b5: lea    0x60(%rsp),%rax
  0x00000000032c98ba: mov    %rax,(%rsp)
  0x00000000032c98be: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032c98c3: jmp    0x00000000032c98a5
  0x00000000032c98c5: hlt    
  0x00000000032c98c6: hlt    
  0x00000000032c98c7: hlt    
  0x00000000032c98c8: hlt    
  0x00000000032c98c9: hlt    
  0x00000000032c98ca: hlt    
  0x00000000032c98cb: hlt    
  0x00000000032c98cc: hlt    
  0x00000000032c98cd: hlt    
  0x00000000032c98ce: hlt    
  0x00000000032c98cf: hlt    
  0x00000000032c98d0: hlt    
  0x00000000032c98d1: hlt    
  0x00000000032c98d2: hlt    
  0x00000000032c98d3: hlt    
  0x00000000032c98d4: hlt    
  0x00000000032c98d5: hlt    
  0x00000000032c98d6: hlt    
  0x00000000032c98d7: hlt    
  0x00000000032c98d8: hlt    
  0x00000000032c98d9: hlt    
  0x00000000032c98da: hlt    
  0x00000000032c98db: hlt    
  0x00000000032c98dc: hlt    
  0x00000000032c98dd: hlt    
  0x00000000032c98de: hlt    
  0x00000000032c98df: hlt    
[Stub Code]
  0x00000000032c98e0: nop                       ;   {no_reloc}
  0x00000000032c98e1: nop
  0x00000000032c98e2: nop
  0x00000000032c98e3: nop
  0x00000000032c98e4: nop
  0x00000000032c98e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032c98ef: jmpq   0x00000000032c98ef  ;   {runtime_call}
  0x00000000032c98f4: nop
  0x00000000032c98f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032c98ff: jmpq   0x00000000032c98ff  ;   {runtime_call}
[Exception Handler]
  0x00000000032c9904: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032c9909: mov    %rsp,-0x28(%rsp)
  0x00000000032c990e: sub    $0x80,%rsp
  0x00000000032c9915: mov    %rax,0x78(%rsp)
  0x00000000032c991a: mov    %rcx,0x70(%rsp)
  0x00000000032c991f: mov    %rdx,0x68(%rsp)
  0x00000000032c9924: mov    %rbx,0x60(%rsp)
  0x00000000032c9929: mov    %rbp,0x50(%rsp)
  0x00000000032c992e: mov    %rsi,0x48(%rsp)
  0x00000000032c9933: mov    %rdi,0x40(%rsp)
  0x00000000032c9938: mov    %r8,0x38(%rsp)
  0x00000000032c993d: mov    %r9,0x30(%rsp)
  0x00000000032c9942: mov    %r10,0x28(%rsp)
  0x00000000032c9947: mov    %r11,0x20(%rsp)
  0x00000000032c994c: mov    %r12,0x18(%rsp)
  0x00000000032c9951: mov    %r13,0x10(%rsp)
  0x00000000032c9956: mov    %r14,0x8(%rsp)
  0x00000000032c995b: mov    %r15,(%rsp)
  0x00000000032c995f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032c9969: movabs $0x32c9909,%rdx    ;   {internal_word}
  0x00000000032c9973: mov    %rsp,%r8
  0x00000000032c9976: and    $0xfffffffffffffff0,%rsp
  0x00000000032c997a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032c997f: hlt    
[Deopt Handler Code]
  0x00000000032c9980: movabs $0x32c9980,%r10    ;   {section_word}
  0x00000000032c998a: push   %r10
  0x00000000032c998c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032c9991: hlt    
  0x00000000032c9992: hlt    
  0x00000000032c9993: hlt    
  0x00000000032c9994: hlt    
  0x00000000032c9995: hlt    
  0x00000000032c9996: hlt    
  0x00000000032c9997: hlt    
<nmethod compile_id='88' compiler='C1' level='3' entry='0x00000000032c9420' size='2512' address='0x00000000032c9290' relocation_offset='288' insts_offset='400' stub_offset='1616' scopes_data_offset='1824' scopes_pcs_offset='2016' dependencies_offset='2480' nul_chk_table_offset='2488' method='java/io/BufferedInputStream read ()I' bytes='49' count='5163' iicount='5163' stamp='1.241'/>
Decoding compiled method 0x00000000032cfc10:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c48ba30} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032cfda0: mov    0x8(%rdx),%r10d
  0x00000000032cfda4: shl    $0x3,%r10
  0x00000000032cfda8: cmp    %rax,%r10
  0x00000000032cfdab: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032cfdb1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032cfdbc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032cfdc0: mov    %eax,-0x6000(%rsp)
  0x00000000032cfdc7: push   %rbp
  0x00000000032cfdc8: sub    $0x40,%rsp
  0x00000000032cfdcc: movabs $0x1c48de80,%rsi   ;   {metadata(method data for {method} {0x000000001c48ba30} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cfdd6: mov    0xdc(%rsi),%edi
  0x00000000032cfddc: add    $0x8,%edi
  0x00000000032cfddf: mov    %edi,0xdc(%rsi)
  0x00000000032cfde5: movabs $0x1c48ba28,%rsi   ;   {metadata({method} {0x000000001c48ba30} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cfdef: and    $0x1ff8,%edi
  0x00000000032cfdf5: cmp    $0x0,%edi
  0x00000000032cfdf8: je     0x00000000032d000e  ;*aload_0
                                                ; - java.io.DataInputStream::readShort@0 (line 312)

  0x00000000032cfdfe: mov    0xc(%rdx),%esi
  0x00000000032cfe01: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@1 (line 312)

  0x00000000032cfe05: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000032d0025
  0x00000000032cfe08: mov    %rsi,%rdi
  0x00000000032cfe0b: movabs $0x1c48de80,%rbx   ;   {metadata(method data for {method} {0x000000001c48ba30} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cfe15: mov    0x8(%rdi),%edi
  0x00000000032cfe18: shl    $0x3,%rdi
  0x00000000032cfe1c: cmp    0x110(%rbx),%rdi
  0x00000000032cfe23: jne    0x00000000032cfe32
  0x00000000032cfe25: addq   $0x1,0x118(%rbx)
  0x00000000032cfe2d: jmpq   0x00000000032cfe98
  0x00000000032cfe32: cmp    0x120(%rbx),%rdi
  0x00000000032cfe39: jne    0x00000000032cfe48
  0x00000000032cfe3b: addq   $0x1,0x128(%rbx)
  0x00000000032cfe43: jmpq   0x00000000032cfe98
  0x00000000032cfe48: cmpq   $0x0,0x110(%rbx)
  0x00000000032cfe53: jne    0x00000000032cfe6c
  0x00000000032cfe55: mov    %rdi,0x110(%rbx)
  0x00000000032cfe5c: movq   $0x1,0x118(%rbx)
  0x00000000032cfe67: jmpq   0x00000000032cfe98
  0x00000000032cfe6c: cmpq   $0x0,0x120(%rbx)
  0x00000000032cfe77: jne    0x00000000032cfe90
  0x00000000032cfe79: mov    %rdi,0x120(%rbx)
  0x00000000032cfe80: movq   $0x1,0x128(%rbx)
  0x00000000032cfe8b: jmpq   0x00000000032cfe98
  0x00000000032cfe90: addq   $0x1,0x108(%rbx)
  0x00000000032cfe98: mov    %rdx,0x20(%rsp)
  0x00000000032cfe9d: mov    %rsi,%rdx          ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)

  0x00000000032cfea0: nop
  0x00000000032cfea1: nop
  0x00000000032cfea2: nop
  0x00000000032cfea3: nop
  0x00000000032cfea4: nop
  0x00000000032cfea5: movabs $0xffffffffffffffff,%rax
  0x00000000032cfeaf: callq  0x00000000031d63e0  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {virtual_call}
  0x00000000032cfeb4: mov    0x20(%rsp),%rdx
  0x00000000032cfeb9: mov    0xc(%rdx),%edx
  0x00000000032cfebc: shl    $0x3,%rdx          ;*getfield in
                                                ; - java.io.DataInputStream::readShort@9 (line 313)

  0x00000000032cfec0: cmp    (%rdx),%rax        ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ; implicit exception: dispatches to 0x00000000032d002a
  0x00000000032cfec3: mov    %rdx,%rsi
  0x00000000032cfec6: movabs $0x1c48de80,%rdi   ;   {metadata(method data for {method} {0x000000001c48ba30} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cfed0: mov    0x8(%rsi),%esi
  0x00000000032cfed3: shl    $0x3,%rsi
  0x00000000032cfed7: cmp    0x140(%rdi),%rsi
  0x00000000032cfede: jne    0x00000000032cfeed
  0x00000000032cfee0: addq   $0x1,0x148(%rdi)
  0x00000000032cfee8: jmpq   0x00000000032cff53
  0x00000000032cfeed: cmp    0x150(%rdi),%rsi
  0x00000000032cfef4: jne    0x00000000032cff03
  0x00000000032cfef6: addq   $0x1,0x158(%rdi)
  0x00000000032cfefe: jmpq   0x00000000032cff53
  0x00000000032cff03: cmpq   $0x0,0x140(%rdi)
  0x00000000032cff0e: jne    0x00000000032cff27
  0x00000000032cff10: mov    %rsi,0x140(%rdi)
  0x00000000032cff17: movq   $0x1,0x148(%rdi)
  0x00000000032cff22: jmpq   0x00000000032cff53
  0x00000000032cff27: cmpq   $0x0,0x150(%rdi)
  0x00000000032cff32: jne    0x00000000032cff4b
  0x00000000032cff34: mov    %rsi,0x150(%rdi)
  0x00000000032cff3b: movq   $0x1,0x158(%rdi)
  0x00000000032cff46: jmpq   0x00000000032cff53
  0x00000000032cff4b: addq   $0x1,0x138(%rdi)
  0x00000000032cff53: mov    %eax,0x28(%rsp)
  0x00000000032cff57: nop
  0x00000000032cff58: nop
  0x00000000032cff59: nop
  0x00000000032cff5a: nop
  0x00000000032cff5b: nop
  0x00000000032cff5c: nop
  0x00000000032cff5d: movabs $0xffffffffffffffff,%rax
  0x00000000032cff67: callq  0x00000000031d63e0  ; OopMap{off=460}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {virtual_call}
  0x00000000032cff6c: mov    0x28(%rsp),%edx
  0x00000000032cff70: or     %rax,%rdx
  0x00000000032cff73: cmp    $0x0,%edx
  0x00000000032cff76: movabs $0x1c48de80,%rdx   ;   {metadata(method data for {method} {0x000000001c48ba30} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cff80: movabs $0x168,%rsi
  0x00000000032cff8a: jge    0x00000000032cff9a
  0x00000000032cff90: movabs $0x178,%rsi
  0x00000000032cff9a: mov    (%rdx,%rsi,1),%rdi
  0x00000000032cff9e: lea    0x1(%rdi),%rdi
  0x00000000032cffa2: mov    %rdi,(%rdx,%rsi,1)
  0x00000000032cffa6: jl     0x00000000032cffcd  ;*ifge
                                                ; - java.io.DataInputStream::readShort@19 (line 314)

  0x00000000032cffac: mov    0x28(%rsp),%edx
  0x00000000032cffb0: shl    $0x8,%edx
  0x00000000032cffb3: add    %eax,%edx
  0x00000000032cffb5: movswl %dx,%edx
  0x00000000032cffb8: shl    $0x10,%edx
  0x00000000032cffbb: sar    $0x10,%edx
  0x00000000032cffbe: mov    %rdx,%rax
  0x00000000032cffc1: add    $0x40,%rsp
  0x00000000032cffc5: pop    %rbp
  0x00000000032cffc6: test   %eax,-0x9dfecc(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032cffcc: retq                      ;*ireturn
                                                ; - java.io.DataInputStream::readShort@39 (line 316)

  0x00000000032cffcd: data16 xchg %ax,%ax
  0x00000000032cffd0: jmpq   0x00000000032d003e  ;   {no_reloc}
  0x00000000032cffd5: add    %al,(%rax)
  0x00000000032cffd7: add    %al,(%rax)
  0x00000000032cffd9: add    %ch,%cl
  0x00000000032cffdb: imul   $0x8b480000,(%rax),%eax  ;*new
                                                ; - java.io.DataInputStream::readShort@22 (line 315)

  0x00000000032cffe1: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001c48ba30} &apos;readShort&apos; &apos;()S&apos; in &apos;java/io/DataInputStream&apos;)}
  0x00000000032cffe4: sbb    $0x48,%dh
  0x00000000032cffe7: sbb    $0x0,%al
  0x00000000032cffe9: add    %al,(%rax)
  0x00000000032cffeb: add    %cl,-0x7d(%rax)
  0x00000000032cffee: xchg   %cl,0x1000001(%rax)
  0x00000000032cfff4: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readShort@26 (line 315)

  0x00000000032cfff7: mov    %rax,0x30(%rsp)
  0x00000000032cfffc: nop
  0x00000000032cfffd: nop
  0x00000000032cfffe: nop
  0x00000000032cffff: callq  0x00000000031d61a0  ; OopMap{[48]=Oop off=612}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.DataInputStream::readShort@26 (line 315)
                                                ;   {optimized virtual_call}
  0x00000000032d0004: mov    0x30(%rsp),%rax
  0x00000000032d0009: jmpq   0x00000000032d007d
  0x00000000032d000e: mov    %rsi,0x8(%rsp)
  0x00000000032d0013: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032d001b: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=640}
                                                ;*synchronization entry
                                                ; - java.io.DataInputStream::readShort@-1 (line 312)
                                                ;   {runtime_call}
  0x00000000032d0020: jmpq   0x00000000032cfdfe
  0x00000000032d0025: callq  0x000000000328d680  ; OopMap{rdx=Oop rsi=Oop off=650}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@4 (line 312)
                                                ;   {runtime_call}
  0x00000000032d002a: callq  0x000000000328d680  ; OopMap{rdx=Oop off=655}
                                                ;*invokevirtual read
                                                ; - java.io.DataInputStream::readShort@12 (line 313)
                                                ;   {runtime_call}
  0x00000000032d002f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032d0039: mov    $0xa050f00,%eax
  0x00000000032d003e: callq  0x0000000003290ca0  ; OopMap{off=675}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x00000000032d0043: jmp    0x00000000032cffd0
  0x00000000032d0045: nop
  0x00000000032d0046: nop
  0x00000000032d0047: nop
  0x00000000032d0048: mov    %rdx,%rdx
  0x00000000032d004b: callq  0x000000000328db20  ; OopMap{off=688}
                                                ;*new  ; - java.io.DataInputStream::readShort@22 (line 315)
                                                ;   {runtime_call}
  0x00000000032d0050: jmp    0x00000000032cffdf
  0x00000000032d0052: nop
  0x00000000032d0053: nop
  0x00000000032d0054: mov    0x2a8(%r15),%rax
  0x00000000032d005b: movabs $0x0,%r10
  0x00000000032d0065: mov    %r10,0x2a8(%r15)
  0x00000000032d006c: movabs $0x0,%r10
  0x00000000032d0076: mov    %r10,0x2b0(%r15)
  0x00000000032d007d: add    $0x40,%rsp
  0x00000000032d0081: pop    %rbp
  0x00000000032d0082: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032d0087: hlt    
  0x00000000032d0088: hlt    
  0x00000000032d0089: hlt    
  0x00000000032d008a: hlt    
  0x00000000032d008b: hlt    
  0x00000000032d008c: hlt    
  0x00000000032d008d: hlt    
  0x00000000032d008e: hlt    
  0x00000000032d008f: hlt    
  0x00000000032d0090: hlt    
  0x00000000032d0091: hlt    
  0x00000000032d0092: hlt    
  0x00000000032d0093: hlt    
  0x00000000032d0094: hlt    
  0x00000000032d0095: hlt    
  0x00000000032d0096: hlt    
  0x00000000032d0097: hlt    
  0x00000000032d0098: hlt    
  0x00000000032d0099: hlt    
  0x00000000032d009a: hlt    
  0x00000000032d009b: hlt    
  0x00000000032d009c: hlt    
  0x00000000032d009d: hlt    
  0x00000000032d009e: hlt    
  0x00000000032d009f: hlt    
[Stub Code]
  0x00000000032d00a0: nop                       ;   {no_reloc}
  0x00000000032d00a1: nop
  0x00000000032d00a2: nop
  0x00000000032d00a3: nop
  0x00000000032d00a4: nop
  0x00000000032d00a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032d00af: jmpq   0x00000000032d00af  ;   {runtime_call}
  0x00000000032d00b4: nop
  0x00000000032d00b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032d00bf: jmpq   0x00000000032d00bf  ;   {runtime_call}
  0x00000000032d00c4: nop
  0x00000000032d00c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032d00cf: jmpq   0x00000000032d00cf  ;   {runtime_call}
[Exception Handler]
  0x00000000032d00d4: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032d00d9: mov    %rsp,-0x28(%rsp)
  0x00000000032d00de: sub    $0x80,%rsp
  0x00000000032d00e5: mov    %rax,0x78(%rsp)
  0x00000000032d00ea: mov    %rcx,0x70(%rsp)
  0x00000000032d00ef: mov    %rdx,0x68(%rsp)
  0x00000000032d00f4: mov    %rbx,0x60(%rsp)
  0x00000000032d00f9: mov    %rbp,0x50(%rsp)
  0x00000000032d00fe: mov    %rsi,0x48(%rsp)
  0x00000000032d0103: mov    %rdi,0x40(%rsp)
  0x00000000032d0108: mov    %r8,0x38(%rsp)
  0x00000000032d010d: mov    %r9,0x30(%rsp)
  0x00000000032d0112: mov    %r10,0x28(%rsp)
  0x00000000032d0117: mov    %r11,0x20(%rsp)
  0x00000000032d011c: mov    %r12,0x18(%rsp)
  0x00000000032d0121: mov    %r13,0x10(%rsp)
  0x00000000032d0126: mov    %r14,0x8(%rsp)
  0x00000000032d012b: mov    %r15,(%rsp)
  0x00000000032d012f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032d0139: movabs $0x32d00d9,%rdx    ;   {internal_word}
  0x00000000032d0143: mov    %rsp,%r8
  0x00000000032d0146: and    $0xfffffffffffffff0,%rsp
  0x00000000032d014a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032d014f: hlt    
[Deopt Handler Code]
  0x00000000032d0150: movabs $0x32d0150,%r10    ;   {section_word}
  0x00000000032d015a: push   %r10
  0x00000000032d015c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032d0161: hlt    
  0x00000000032d0162: hlt    
  0x00000000032d0163: hlt    
  0x00000000032d0164: hlt    
  0x00000000032d0165: hlt    
  0x00000000032d0166: hlt    
  0x00000000032d0167: hlt    
<nmethod compile_id='93' compiler='C1' level='3' entry='0x00000000032cfda0' size='1848' address='0x00000000032cfc10' relocation_offset='288' insts_offset='400' stub_offset='1168' scopes_data_offset='1376' scopes_pcs_offset='1512' dependencies_offset='1816' nul_chk_table_offset='1824' method='java/io/DataInputStream readShort ()S' bytes='40' count='1984' iicount='1984' stamp='1.246'/>
Decoding compiled method 0x00000000032cea90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;
  # this:     rdx:rdx   = &apos;java/io/BufferedInputStream&apos;
  # parm0:    r8:r8     = &apos;[B&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0xb0]  (sp of caller)
  0x00000000032cec60: mov    0x8(%rdx),%r10d
  0x00000000032cec64: shl    $0x3,%r10
  0x00000000032cec68: cmp    %rax,%r10
  0x00000000032cec6b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032cec71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032cec7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032cec80: mov    %eax,-0x6000(%rsp)
  0x00000000032cec87: push   %rbp
  0x00000000032cec88: sub    $0xa0,%rsp
  0x00000000032cec8f: mov    %rdx,0x58(%rsp)
  0x00000000032cec94: mov    %r8,0x68(%rsp)
  0x00000000032cec99: mov    %r9d,0x60(%rsp)
  0x00000000032cec9e: mov    %edi,0x54(%rsp)
  0x00000000032ceca2: lea    0x80(%rsp),%rsi
  0x00000000032cecaa: mov    %rdx,0x8(%rsi)
  0x00000000032cecae: mov    (%rdx),%rax
  0x00000000032cecb1: mov    %rax,%rbx
  0x00000000032cecb4: and    $0x7,%rbx
  0x00000000032cecb8: cmp    $0x5,%rbx
  0x00000000032cecbc: jne    0x00000000032ced43
  0x00000000032cecc2: mov    0x8(%rdx),%ebx
  0x00000000032cecc5: shl    $0x3,%rbx
  0x00000000032cecc9: mov    0xa8(%rbx),%rbx
  0x00000000032cecd0: or     %r15,%rbx
  0x00000000032cecd3: xor    %rax,%rbx
  0x00000000032cecd6: and    $0xffffffffffffff87,%rbx
  0x00000000032cecda: je     0x00000000032ced6b
  0x00000000032cece0: test   $0x7,%rbx
  0x00000000032cece7: jne    0x00000000032ced30
  0x00000000032cece9: test   $0x300,%rbx
  0x00000000032cecf0: jne    0x00000000032ced0f
  0x00000000032cecf2: and    $0x37f,%rax
  0x00000000032cecf9: mov    %rax,%rbx
  0x00000000032cecfc: or     %r15,%rbx
  0x00000000032cecff: lock cmpxchg %rbx,(%rdx)
  0x00000000032ced04: jne    0x00000000032cf32e
  0x00000000032ced0a: jmpq   0x00000000032ced6b
  0x00000000032ced0f: mov    0x8(%rdx),%ebx
  0x00000000032ced12: shl    $0x3,%rbx
  0x00000000032ced16: mov    0xa8(%rbx),%rbx
  0x00000000032ced1d: or     %r15,%rbx
  0x00000000032ced20: lock cmpxchg %rbx,(%rdx)
  0x00000000032ced25: jne    0x00000000032cf32e
  0x00000000032ced2b: jmpq   0x00000000032ced6b
  0x00000000032ced30: mov    0x8(%rdx),%ebx
  0x00000000032ced33: shl    $0x3,%rbx
  0x00000000032ced37: mov    0xa8(%rbx),%rbx
  0x00000000032ced3e: lock cmpxchg %rbx,(%rdx)
  0x00000000032ced43: mov    (%rdx),%rax
  0x00000000032ced46: or     $0x1,%rax
  0x00000000032ced4a: mov    %rax,(%rsi)
  0x00000000032ced4d: lock cmpxchg %rsi,(%rdx)
  0x00000000032ced52: je     0x00000000032ced6b
  0x00000000032ced58: sub    %rsp,%rax
  0x00000000032ced5b: and    $0xfffffffffffff007,%rax
  0x00000000032ced62: mov    %rax,(%rsi)
  0x00000000032ced65: jne    0x00000000032cf32e
  0x00000000032ced6b: movabs $0x1c48d378,%rsi   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032ced75: mov    0xdc(%rsi),%ebx
  0x00000000032ced7b: add    $0x8,%ebx
  0x00000000032ced7e: mov    %ebx,0xdc(%rsi)
  0x00000000032ced84: movabs $0x1c2a0498,%rsi   ;   {metadata({method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032ced8e: and    $0x1ff8,%ebx
  0x00000000032ced94: cmp    $0x0,%ebx
  0x00000000032ced97: je     0x00000000032cf341  ;*aload_0
                                                ; - java.io.BufferedInputStream::read@0 (line 336)

  0x00000000032ced9d: mov    %rdx,%rsi
  0x00000000032ceda0: movabs $0x1c48d378,%rbx   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cedaa: addq   $0x1,0x108(%rbx)
  0x00000000032cedb2: movabs $0x1c48c980,%rsi   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cedbc: mov    0xdc(%rsi),%ebx
  0x00000000032cedc2: add    $0x8,%ebx
  0x00000000032cedc5: mov    %ebx,0xdc(%rsi)
  0x00000000032cedcb: movabs $0x1c29fec8,%rsi   ;   {metadata({method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cedd5: and    $0x7ffff8,%ebx
  0x00000000032ceddb: cmp    $0x0,%ebx
  0x00000000032cedde: je     0x00000000032cf358
  0x00000000032cede4: mov    0x20(%rdx),%esi
  0x00000000032cede7: shl    $0x3,%rsi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x00000000032cedeb: cmp    $0x0,%rsi
  0x00000000032cedef: movabs $0x1c48c980,%rsi   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cedf9: movabs $0x108,%rbx
  0x00000000032cee03: jne    0x00000000032cee13
  0x00000000032cee09: movabs $0x118,%rbx
  0x00000000032cee13: mov    (%rsi,%rbx,1),%rax
  0x00000000032cee17: lea    0x1(%rax),%rax
  0x00000000032cee1b: mov    %rax,(%rsi,%rbx,1)
  0x00000000032cee1f: je     0x00000000032cf2ae  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x00000000032cee25: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ; implicit exception: dispatches to 0x00000000032cf36f
  0x00000000032cee29: mov    %r9,%rbx
  0x00000000032cee2c: or     %rdi,%rbx
  0x00000000032cee2f: mov    %r9,%rax
  0x00000000032cee32: add    %edi,%eax
  0x00000000032cee34: or     %rax,%rbx
  0x00000000032cee37: sub    %eax,%esi
  0x00000000032cee39: or     %rsi,%rbx
  0x00000000032cee3c: cmp    $0x0,%ebx
  0x00000000032cee3f: movabs $0x1c48d378,%rsi   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cee49: movabs $0x118,%rbx
  0x00000000032cee53: jge    0x00000000032cee63
  0x00000000032cee59: movabs $0x128,%rbx
  0x00000000032cee63: mov    (%rsi,%rbx,1),%rax
  0x00000000032cee67: lea    0x1(%rax),%rax
  0x00000000032cee6b: mov    %rax,(%rsi,%rbx,1)
  0x00000000032cee6f: jl     0x00000000032cf26f  ;*ifge
                                                ; - java.io.BufferedInputStream::read@19 (line 337)

  0x00000000032cee75: cmp    $0x0,%edi
  0x00000000032cee78: movabs $0x1c48d378,%rsi   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cee82: movabs $0x148,%rbx
  0x00000000032cee8c: jne    0x00000000032cee9c
  0x00000000032cee92: movabs $0x158,%rbx
  0x00000000032cee9c: mov    (%rsi,%rbx,1),%rax
  0x00000000032ceea0: lea    0x1(%rax),%rax
  0x00000000032ceea4: mov    %rax,(%rsi,%rbx,1)
  0x00000000032ceea8: je     0x00000000032cf227  ;*ifne
                                                ; - java.io.BufferedInputStream::read@31 (line 339)

  0x00000000032ceeae: mov    $0x0,%esi          ;*aload_0
                                                ; - java.io.BufferedInputStream::read@39 (line 345)

  0x00000000032ceeb3: nopl   0x0(%rax,%rax,1)
  0x00000000032ceeb8: mov    %rdx,%rbx
  0x00000000032ceebb: movabs $0x1c48d378,%rax   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032ceec5: addq   $0x1,0x168(%rax)
  0x00000000032ceecd: mov    %rsi,%rbx
  0x00000000032ceed0: add    %r9d,%ebx
  0x00000000032ceed3: mov    %rdi,%rax
  0x00000000032ceed6: sub    %esi,%eax
  0x00000000032ceed8: mov    %r8,%rcx
  0x00000000032ceedb: mov    %rcx,%r8
  0x00000000032ceede: mov    %rbx,%r9
  0x00000000032ceee1: mov    %rax,%rdi
  0x00000000032ceee4: mov    %rdx,%rax
  0x00000000032ceee7: mov    %rax,%rdx          ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)

  0x00000000032ceeea: mov    %esi,0x50(%rsp)
  0x00000000032ceeee: nop
  0x00000000032ceeef: callq  0x00000000031d61a0  ; OopMap{[88]=Oop [104]=Oop [136]=Oop off=660}
                                                ;*invokespecial read1
                                                ; - java.io.BufferedInputStream::read@49 (line 345)
                                                ;   {optimized virtual_call}
  0x00000000032ceef4: cmp    $0x0,%eax
  0x00000000032ceef7: movabs $0x1c48d378,%rdx   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cef01: movabs $0x178,%rsi
  0x00000000032cef0b: jg     0x00000000032cef1b
  0x00000000032cef11: movabs $0x188,%rsi
  0x00000000032cef1b: mov    (%rdx,%rsi,1),%rdi
  0x00000000032cef1f: lea    0x1(%rdi),%rdi
  0x00000000032cef23: mov    %rdi,(%rdx,%rsi,1)
  0x00000000032cef27: jle    0x00000000032cf0f9  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@56 (line 346)

  0x00000000032cef2d: add    0x50(%rsp),%eax
  0x00000000032cef31: cmp    0x54(%rsp),%eax
  0x00000000032cef35: movabs $0x1c48d378,%rdx   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cef3f: movabs $0x1d0,%rsi
  0x00000000032cef49: jl     0x00000000032cef59
  0x00000000032cef4f: movabs $0x1e0,%rsi
  0x00000000032cef59: mov    (%rdx,%rsi,1),%rdi
  0x00000000032cef5d: lea    0x1(%rdi),%rdi
  0x00000000032cef61: mov    %rdi,(%rdx,%rsi,1)
  0x00000000032cef65: jge    0x00000000032cf1de  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read@82 (line 349)

  0x00000000032cef6b: mov    0x58(%rsp),%rdx
  0x00000000032cef70: mov    0xc(%rdx),%esi
  0x00000000032cef73: shl    $0x3,%rsi          ;*getfield in
                                                ; - java.io.BufferedInputStream::read@89 (line 352)

  0x00000000032cef77: cmp    $0x0,%rsi
  0x00000000032cef7b: movabs $0x1c48d378,%rdi   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cef85: movabs $0x1f0,%rbx
  0x00000000032cef8f: je     0x00000000032cef9f
  0x00000000032cef95: movabs $0x200,%rbx
  0x00000000032cef9f: mov    (%rdi,%rbx,1),%rcx
  0x00000000032cefa3: lea    0x1(%rcx),%rcx
  0x00000000032cefa7: mov    %rcx,(%rdi,%rbx,1)
  0x00000000032cefab: mov    %eax,0x64(%rsp)
  0x00000000032cefaf: je     0x00000000032cf095  ;*ifnull
                                                ; - java.io.BufferedInputStream::read@96 (line 353)

  0x00000000032cefb5: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x00000000032cf374
  0x00000000032cefb8: mov    %rsi,%rdi
  0x00000000032cefbb: movabs $0x1c48d378,%rbx   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cefc5: mov    0x8(%rdi),%edi
  0x00000000032cefc8: shl    $0x3,%rdi
  0x00000000032cefcc: cmp    0x218(%rbx),%rdi
  0x00000000032cefd3: jne    0x00000000032cefe2
  0x00000000032cefd5: addq   $0x1,0x220(%rbx)
  0x00000000032cefdd: jmpq   0x00000000032cf048
  0x00000000032cefe2: cmp    0x228(%rbx),%rdi
  0x00000000032cefe9: jne    0x00000000032ceff8
  0x00000000032cefeb: addq   $0x1,0x230(%rbx)
  0x00000000032ceff3: jmpq   0x00000000032cf048
  0x00000000032ceff8: cmpq   $0x0,0x218(%rbx)
  0x00000000032cf003: jne    0x00000000032cf01c
  0x00000000032cf005: mov    %rdi,0x218(%rbx)
  0x00000000032cf00c: movq   $0x1,0x220(%rbx)
  0x00000000032cf017: jmpq   0x00000000032cf048
  0x00000000032cf01c: cmpq   $0x0,0x228(%rbx)
  0x00000000032cf027: jne    0x00000000032cf040
  0x00000000032cf029: mov    %rdi,0x228(%rbx)
  0x00000000032cf030: movq   $0x1,0x230(%rbx)
  0x00000000032cf03b: jmpq   0x00000000032cf048
  0x00000000032cf040: addq   $0x1,0x210(%rbx)
  0x00000000032cf048: mov    %rsi,%rdx          ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)

  0x00000000032cf04b: nop
  0x00000000032cf04c: nop
  0x00000000032cf04d: movabs $0xffffffffffffffff,%rax
  0x00000000032cf057: callq  0x00000000031d63e0  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1020}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {virtual_call}
  0x00000000032cf05c: cmp    $0x0,%eax
  0x00000000032cf05f: movabs $0x1c48d378,%rax   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cf069: movabs $0x240,%rdx
  0x00000000032cf073: jg     0x00000000032cf083
  0x00000000032cf079: movabs $0x250,%rdx
  0x00000000032cf083: mov    (%rax,%rdx,1),%rsi
  0x00000000032cf087: lea    0x1(%rsi),%rsi
  0x00000000032cf08b: mov    %rsi,(%rax,%rdx,1)
  0x00000000032cf08f: jle    0x00000000032cf197  ;*ifgt
                                                ; - java.io.BufferedInputStream::read@104 (line 353)

  0x00000000032cf095: movabs $0x1c48d378,%rax   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cf09f: mov    0xe0(%rax),%edx
  0x00000000032cf0a5: add    $0x8,%edx
  0x00000000032cf0a8: mov    %edx,0xe0(%rax)
  0x00000000032cf0ae: movabs $0x1c2a0498,%rax   ;   {metadata({method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cf0b8: and    $0xfff8,%edx
  0x00000000032cf0be: cmp    $0x0,%edx
  0x00000000032cf0c1: je     0x00000000032cf379  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1127}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x00000000032cf0c7: test   %eax,-0x9defcd(%rip)        # 0x00000000028f0100
                                                ;   {poll}
  0x00000000032cf0cd: movabs $0x1c48d378,%rax   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cf0d7: incl   0x260(%rax)
  0x00000000032cf0dd: mov    0x64(%rsp),%esi
  0x00000000032cf0e1: mov    0x54(%rsp),%edi
  0x00000000032cf0e5: mov    0x60(%rsp),%r9d
  0x00000000032cf0ea: mov    0x68(%rsp),%r8
  0x00000000032cf0ef: mov    0x58(%rsp),%rdx
  0x00000000032cf0f4: jmpq   0x00000000032ceeb8  ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)

  0x00000000032cf0f9: mov    0x50(%rsp),%esi
  0x00000000032cf0fd: cmp    $0x0,%esi
  0x00000000032cf100: movabs $0x1c48d378,%rdx   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cf10a: movabs $0x198,%rdi
  0x00000000032cf114: jne    0x00000000032cf124
  0x00000000032cf11a: movabs $0x1a8,%rdi
  0x00000000032cf124: mov    (%rdx,%rdi,1),%rbx
  0x00000000032cf128: lea    0x1(%rbx),%rbx
  0x00000000032cf12c: mov    %rbx,(%rdx,%rdi,1)
  0x00000000032cf130: jne    0x00000000032cf14e  ;*ifne
                                                ; - java.io.BufferedInputStream::read@61 (line 347)

  0x00000000032cf136: movabs $0x1c48d378,%rdx   ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cf140: incl   0x1b8(%rdx)
  0x00000000032cf146: mov    %rax,%rdx
  0x00000000032cf149: jmpq   0x00000000032cf151  ;*goto
                                                ; - java.io.BufferedInputStream::read@66 (line 347)

  0x00000000032cf14e: mov    %rsi,%rdx
  0x00000000032cf151: lea    0x80(%rsp),%rax
  0x00000000032cf159: mov    0x8(%rax),%rdi
  0x00000000032cf15d: mov    (%rdi),%rsi
  0x00000000032cf160: and    $0x7,%rsi
  0x00000000032cf164: cmp    $0x5,%rsi
  0x00000000032cf168: je     0x00000000032cf185
  0x00000000032cf16e: mov    (%rax),%rsi
  0x00000000032cf171: test   %rsi,%rsi
  0x00000000032cf174: je     0x00000000032cf185
  0x00000000032cf17a: lock cmpxchg %rsi,(%rdi)
  0x00000000032cf17f: jne    0x00000000032cf390
  0x00000000032cf185: mov    %rdx,%rax
  0x00000000032cf188: add    $0xa0,%rsp
  0x00000000032cf18f: pop    %rbp
  0x00000000032cf190: test   %eax,-0x9df096(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032cf196: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@71 (line 347)

  0x00000000032cf197: lea    0x80(%rsp),%rax
  0x00000000032cf19f: mov    0x8(%rax),%rsi
  0x00000000032cf1a3: mov    (%rsi),%rdx
  0x00000000032cf1a6: and    $0x7,%rdx
  0x00000000032cf1aa: cmp    $0x5,%rdx
  0x00000000032cf1ae: je     0x00000000032cf1cb
  0x00000000032cf1b4: mov    (%rax),%rdx
  0x00000000032cf1b7: test   %rdx,%rdx
  0x00000000032cf1ba: je     0x00000000032cf1cb
  0x00000000032cf1c0: lock cmpxchg %rdx,(%rsi)
  0x00000000032cf1c5: jne    0x00000000032cf3a6
  0x00000000032cf1cb: mov    0x64(%rsp),%eax
  0x00000000032cf1cf: add    $0xa0,%rsp
  0x00000000032cf1d6: pop    %rbp
  0x00000000032cf1d7: test   %eax,-0x9df0dd(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032cf1dd: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@109 (line 354)

  0x00000000032cf1de: mov    %rax,%rdx
  0x00000000032cf1e1: lea    0x80(%rsp),%rax
  0x00000000032cf1e9: mov    0x8(%rax),%rdi
  0x00000000032cf1ed: mov    (%rdi),%rsi
  0x00000000032cf1f0: and    $0x7,%rsi
  0x00000000032cf1f4: cmp    $0x5,%rsi
  0x00000000032cf1f8: je     0x00000000032cf215
  0x00000000032cf1fe: mov    (%rax),%rsi
  0x00000000032cf201: test   %rsi,%rsi
  0x00000000032cf204: je     0x00000000032cf215
  0x00000000032cf20a: lock cmpxchg %rsi,(%rdi)
  0x00000000032cf20f: jne    0x00000000032cf3bc
  0x00000000032cf215: mov    %rdx,%rax
  0x00000000032cf218: add    $0xa0,%rsp
  0x00000000032cf21f: pop    %rbp
  0x00000000032cf220: test   %eax,-0x9df126(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032cf226: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@87 (line 350)

  0x00000000032cf227: lea    0x80(%rsp),%rax
  0x00000000032cf22f: mov    0x8(%rax),%rsi
  0x00000000032cf233: mov    (%rsi),%rdx
  0x00000000032cf236: and    $0x7,%rdx
  0x00000000032cf23a: cmp    $0x5,%rdx
  0x00000000032cf23e: je     0x00000000032cf25b
  0x00000000032cf244: mov    (%rax),%rdx
  0x00000000032cf247: test   %rdx,%rdx
  0x00000000032cf24a: je     0x00000000032cf25b
  0x00000000032cf250: lock cmpxchg %rdx,(%rsi)
  0x00000000032cf255: jne    0x00000000032cf3d2
  0x00000000032cf25b: mov    $0x0,%eax
  0x00000000032cf260: add    $0xa0,%rsp
  0x00000000032cf267: pop    %rbp
  0x00000000032cf268: test   %eax,-0x9df16e(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032cf26e: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read@35 (line 340)

  0x00000000032cf26f: nop
  0x00000000032cf270: jmpq   0x00000000032cf3f7  ;   {no_reloc}
  0x00000000032cf275: add    %al,(%rax)
  0x00000000032cf277: add    %al,(%rax)
  0x00000000032cf279: add    %ch,%cl
  0x00000000032cf27b: (bad)  
  0x00000000032cf27c: add    %eax,(%rax)
  0x00000000032cf27e: add    %cl,-0x75(%rax)    ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)

  0x00000000032cf281: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x000000001c2a04a0} &apos;read&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cf284: js     0x00000000032cf259
  0x00000000032cf286: rex.W sbb $0x0,%al
  0x00000000032cf289: add    %al,(%rax)
  0x00000000032cf28b: add    %cl,-0x7d(%rax)
  0x00000000032cf28e: xchg   %bh,(%rax)
  0x00000000032cf290: add    %eax,(%rax)
  0x00000000032cf292: add    %al,(%rcx)
  0x00000000032cf294: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::read@26 (line 338)

  0x00000000032cf297: mov    %rax,0x70(%rsp)
  0x00000000032cf29c: nop
  0x00000000032cf29d: nop
  0x00000000032cf29e: nop
  0x00000000032cf29f: callq  0x00000000031d61a0  ; OopMap{[112]=Oop [136]=Oop off=1604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::read@26 (line 338)
                                                ;   {optimized virtual_call}
  0x00000000032cf2a4: mov    0x70(%rsp),%rax
  0x00000000032cf2a9: jmpq   0x00000000032cf45f  ;*athrow
                                                ; - java.io.BufferedInputStream::read@29 (line 338)

  0x00000000032cf2ae: xchg   %ax,%ax
  0x00000000032cf2b0: jmpq   0x00000000032cf41d  ;   {no_reloc}
  0x00000000032cf2b5: add    %al,(%rax)
  0x00000000032cf2b7: add    %al,(%rax)
  0x00000000032cf2b9: add    %cl,-0x75(%rcx)
  0x00000000032cf2bc: rex.RXB (bad) 
  0x00000000032cf2be: lea    0x20(%rax),%rdi
  0x00000000032cf2c2: cmp    0x70(%r15),%rdi
  0x00000000032cf2c6: ja     0x00000000032cf427
  0x00000000032cf2cc: mov    %rdi,0x60(%r15)
  0x00000000032cf2d0: mov    0xa8(%rdx),%rcx
  0x00000000032cf2d7: mov    %rcx,(%rax)
  0x00000000032cf2da: mov    %rdx,%rcx
  0x00000000032cf2dd: shr    $0x3,%rcx
  0x00000000032cf2e1: mov    %ecx,0x8(%rax)
  0x00000000032cf2e4: xor    %rcx,%rcx
  0x00000000032cf2e7: mov    %ecx,0xc(%rax)
  0x00000000032cf2ea: xor    %rcx,%rcx
  0x00000000032cf2ed: mov    %rcx,0x10(%rax)
  0x00000000032cf2f1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x00000000032cf2f5: mov    %rax,%rdx
  0x00000000032cf2f8: movabs $0x1c48c980,%rsi   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032cf302: addq   $0x1,0x128(%rsi)
  0x00000000032cf30a: movabs $0x76bf1f198,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x00000000032cf314: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)

  0x00000000032cf317: mov    %rax,0x78(%rsp)
  0x00000000032cf31c: nop
  0x00000000032cf31d: nop
  0x00000000032cf31e: nop
  0x00000000032cf31f: callq  0x00000000031d61a0  ; OopMap{[104]=Oop [120]=Oop [88]=Oop [136]=Oop off=1732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {optimized virtual_call}
  0x00000000032cf324: mov    0x78(%rsp),%rax
  0x00000000032cf329: jmpq   0x00000000032cf45f
  0x00000000032cf32e: mov    %rdx,0x8(%rsp)
  0x00000000032cf333: mov    %rsi,(%rsp)
  0x00000000032cf337: callq  0x0000000003290060  ; OopMap{rdx=Oop [88]=Oop r8=Oop [104]=Oop [136]=Oop off=1756}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x00000000032cf33c: jmpq   0x00000000032ced6b
  0x00000000032cf341: mov    %rsi,0x8(%rsp)
  0x00000000032cf346: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cf34e: callq  0x0000000003291d60  ; OopMap{rdx=Oop [88]=Oop r8=Oop [104]=Oop [136]=Oop off=1779}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read@-1 (line 336)
                                                ;   {runtime_call}
  0x00000000032cf353: jmpq   0x00000000032ced9d
  0x00000000032cf358: mov    %rsi,0x8(%rsp)
  0x00000000032cf35d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032cf365: callq  0x0000000003291d60  ; OopMap{rdx=Oop [88]=Oop r8=Oop [104]=Oop [136]=Oop off=1802}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x00000000032cf36a: jmpq   0x00000000032cede4
  0x00000000032cf36f: callq  0x000000000328d680  ; OopMap{rdx=Oop [88]=Oop r8=Oop [104]=Oop [136]=Oop off=1812}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read@13 (line 337)
                                                ;   {runtime_call}
  0x00000000032cf374: callq  0x000000000328d680  ; OopMap{[104]=Oop [88]=Oop rsi=Oop [136]=Oop off=1817}
                                                ;*invokevirtual available
                                                ; - java.io.BufferedInputStream::read@101 (line 353)
                                                ;   {runtime_call}
  0x00000000032cf379: mov    %rax,0x8(%rsp)
  0x00000000032cf37e: movq   $0x6e,(%rsp)
  0x00000000032cf386: callq  0x0000000003291d60  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1835}
                                                ;*goto
                                                ; - java.io.BufferedInputStream::read@110 (line 355)
                                                ;   {runtime_call}
  0x00000000032cf38b: jmpq   0x00000000032cf0c7
  0x00000000032cf390: lea    0x80(%rsp),%rax
  0x00000000032cf398: mov    %rax,(%rsp)
  0x00000000032cf39c: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032cf3a1: jmpq   0x00000000032cf185
  0x00000000032cf3a6: lea    0x80(%rsp),%rax
  0x00000000032cf3ae: mov    %rax,(%rsp)
  0x00000000032cf3b2: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032cf3b7: jmpq   0x00000000032cf1cb
  0x00000000032cf3bc: lea    0x80(%rsp),%rax
  0x00000000032cf3c4: mov    %rax,(%rsp)
  0x00000000032cf3c8: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032cf3cd: jmpq   0x00000000032cf215
  0x00000000032cf3d2: lea    0x80(%rsp),%rax
  0x00000000032cf3da: mov    %rax,(%rsp)
  0x00000000032cf3de: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032cf3e3: jmpq   0x00000000032cf25b
  0x00000000032cf3e8: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032cf3f2: mov    $0xa050f00,%eax
  0x00000000032cf3f7: callq  0x0000000003290ca0  ; OopMap{[136]=Oop off=1948}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x00000000032cf3fc: jmpq   0x00000000032cf270
  0x00000000032cf401: mov    %rdx,%rdx
  0x00000000032cf404: callq  0x000000000328db20  ; OopMap{[136]=Oop off=1961}
                                                ;*new  ; - java.io.BufferedInputStream::read@22 (line 338)
                                                ;   {runtime_call}
  0x00000000032cf409: jmpq   0x00000000032cf27f
  0x00000000032cf40e: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032cf418: mov    $0xa050f00,%eax
  0x00000000032cf41d: callq  0x0000000003290ca0  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1986}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x00000000032cf422: jmpq   0x00000000032cf2b0
  0x00000000032cf427: mov    %rdx,%rdx
  0x00000000032cf42a: callq  0x000000000328de00  ; OopMap{[104]=Oop [88]=Oop [136]=Oop off=1999}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read@1 (line 336)
                                                ;   {runtime_call}
  0x00000000032cf42f: jmpq   0x00000000032cf2f5
  0x00000000032cf434: nop
  0x00000000032cf435: nop
  0x00000000032cf436: mov    0x2a8(%r15),%rax
  0x00000000032cf43d: movabs $0x0,%r10
  0x00000000032cf447: mov    %r10,0x2a8(%r15)
  0x00000000032cf44e: movabs $0x0,%r10
  0x00000000032cf458: mov    %r10,0x2b0(%r15)
  0x00000000032cf45f: mov    %rax,%rbx
  0x00000000032cf462: lea    0x80(%rsp),%rax
  0x00000000032cf46a: mov    0x8(%rax),%rsi
  0x00000000032cf46e: mov    (%rsi),%rdi
  0x00000000032cf471: and    $0x7,%rdi
  0x00000000032cf475: cmp    $0x5,%rdi
  0x00000000032cf479: je     0x00000000032cf496
  0x00000000032cf47f: mov    (%rax),%rdi
  0x00000000032cf482: test   %rdi,%rdi
  0x00000000032cf485: je     0x00000000032cf496
  0x00000000032cf48b: lock cmpxchg %rdi,(%rsi)
  0x00000000032cf490: jne    0x00000000032cf4a6
  0x00000000032cf496: mov    %rbx,%rax
  0x00000000032cf499: add    $0xa0,%rsp
  0x00000000032cf4a0: pop    %rbp
  0x00000000032cf4a1: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032cf4a6: lea    0x80(%rsp),%rax
  0x00000000032cf4ae: mov    %rax,(%rsp)
  0x00000000032cf4b2: callq  0x0000000003290460  ;   {runtime_call}
  0x00000000032cf4b7: jmp    0x00000000032cf496
  0x00000000032cf4b9: hlt    
  0x00000000032cf4ba: hlt    
  0x00000000032cf4bb: hlt    
  0x00000000032cf4bc: hlt    
  0x00000000032cf4bd: hlt    
  0x00000000032cf4be: hlt    
  0x00000000032cf4bf: hlt    
[Stub Code]
  0x00000000032cf4c0: nop                       ;   {no_reloc}
  0x00000000032cf4c1: nop
  0x00000000032cf4c2: nop
  0x00000000032cf4c3: nop
  0x00000000032cf4c4: nop
  0x00000000032cf4c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cf4cf: jmpq   0x00000000032cf4cf  ;   {runtime_call}
  0x00000000032cf4d4: nop
  0x00000000032cf4d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cf4df: jmpq   0x00000000032cf4df  ;   {runtime_call}
  0x00000000032cf4e4: nop
  0x00000000032cf4e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cf4ef: jmpq   0x00000000032cf4ef  ;   {runtime_call}
  0x00000000032cf4f4: nop
  0x00000000032cf4f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032cf4ff: jmpq   0x00000000032cf4ff  ;   {runtime_call}
[Exception Handler]
  0x00000000032cf504: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032cf509: mov    %rsp,-0x28(%rsp)
  0x00000000032cf50e: sub    $0x80,%rsp
  0x00000000032cf515: mov    %rax,0x78(%rsp)
  0x00000000032cf51a: mov    %rcx,0x70(%rsp)
  0x00000000032cf51f: mov    %rdx,0x68(%rsp)
  0x00000000032cf524: mov    %rbx,0x60(%rsp)
  0x00000000032cf529: mov    %rbp,0x50(%rsp)
  0x00000000032cf52e: mov    %rsi,0x48(%rsp)
  0x00000000032cf533: mov    %rdi,0x40(%rsp)
  0x00000000032cf538: mov    %r8,0x38(%rsp)
  0x00000000032cf53d: mov    %r9,0x30(%rsp)
  0x00000000032cf542: mov    %r10,0x28(%rsp)
  0x00000000032cf547: mov    %r11,0x20(%rsp)
  0x00000000032cf54c: mov    %r12,0x18(%rsp)
  0x00000000032cf551: mov    %r13,0x10(%rsp)
  0x00000000032cf556: mov    %r14,0x8(%rsp)
  0x00000000032cf55b: mov    %r15,(%rsp)
  0x00000000032cf55f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032cf569: movabs $0x32cf509,%rdx    ;   {internal_word}
  0x00000000032cf573: mov    %rsp,%r8
  0x00000000032cf576: and    $0xfffffffffffffff0,%rsp
  0x00000000032cf57a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032cf57f: hlt    
[Deopt Handler Code]
  0x00000000032cf580: movabs $0x32cf580,%r10    ;   {section_word}
  0x00000000032cf58a: push   %r10
  0x00000000032cf58c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032cf591: hlt    
  0x00000000032cf592: hlt    
  0x00000000032cf593: hlt    
  0x00000000032cf594: hlt    
  0x00000000032cf595: hlt    
  0x00000000032cf596: hlt    
  0x00000000032cf597: hlt    
<nmethod compile_id='92' compiler='C1' level='3' entry='0x00000000032cec60' size='3944' address='0x00000000032cea90' relocation_offset='288' insts_offset='464' stub_offset='2608' scopes_data_offset='2848' scopes_pcs_offset='3224' dependencies_offset='3912' nul_chk_table_offset='3920' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='985' backedge_count='11' iicount='985' stamp='1.260'/>
Decoding compiled method 0x00000000032ba890:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c23b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap$Node&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x40]  (sp of caller)
  0x00000000032ba9e0: mov    0x8(%rdx),%r10d
  0x00000000032ba9e4: shl    $0x3,%r10
  0x00000000032ba9e8: cmp    %rax,%r10
  0x00000000032ba9eb: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032ba9f1: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032ba9fc: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032baa00: mov    %eax,-0x6000(%rsp)
  0x00000000032baa07: push   %rbp
  0x00000000032baa08: sub    $0x30,%rsp
  0x00000000032baa0c: movabs $0x1c343640,%rbx   ;   {metadata(method data for {method} {0x000000001c23b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00000000032baa16: mov    0xdc(%rbx),%eax
  0x00000000032baa1c: add    $0x8,%eax
  0x00000000032baa1f: mov    %eax,0xdc(%rbx)
  0x00000000032baa25: movabs $0x1c23b170,%rbx   ;   {metadata({method} {0x000000001c23b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00000000032baa2f: and    $0x1ff8,%eax
  0x00000000032baa35: cmp    $0x0,%eax
  0x00000000032baa38: je     0x00000000032baade  ;*aload_0
                                                ; - java.util.HashMap$Node::&lt;init&gt;@0 (line 284)

  0x00000000032baa3e: mov    %rdx,%rbx
  0x00000000032baa41: movabs $0x1c343640,%rax   ;   {metadata(method data for {method} {0x000000001c23b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00000000032baa4b: addq   $0x1,0x108(%rax)
  0x00000000032baa53: movabs $0x1c281c10,%rbx   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032baa5d: mov    0xdc(%rbx),%eax
  0x00000000032baa63: add    $0x8,%eax
  0x00000000032baa66: mov    %eax,0xdc(%rbx)
  0x00000000032baa6c: movabs $0x1c150480,%rbx   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032baa76: and    $0x7ffff8,%eax
  0x00000000032baa7c: cmp    $0x0,%eax
  0x00000000032baa7f: je     0x00000000032baaf5
  0x00000000032baa85: mov    %r8d,0xc(%rdx)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)

  0x00000000032baa89: mov    %r9,%r10
  0x00000000032baa8c: shr    $0x3,%r10
  0x00000000032baa90: mov    %r10d,0x10(%rdx)
  0x00000000032baa94: mov    %rdx,%rbx
  0x00000000032baa97: shr    $0x9,%rbx
  0x00000000032baa9b: movabs $0xef3d000,%rax
  0x00000000032baaa5: movb   $0x0,(%rbx,%rax,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)

  0x00000000032baaa9: mov    %rdi,%r10
  0x00000000032baaac: shr    $0x3,%r10
  0x00000000032baab0: mov    %r10d,0x14(%rdx)
  0x00000000032baab4: mov    %rdx,%rdi
  0x00000000032baab7: shr    $0x9,%rdi
  0x00000000032baabb: movb   $0x0,(%rdi,%rax,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)

  0x00000000032baabf: mov    %rsi,%r10
  0x00000000032baac2: shr    $0x3,%r10
  0x00000000032baac6: mov    %r10d,0x18(%rdx)
  0x00000000032baaca: shr    $0x9,%rdx
  0x00000000032baace: movb   $0x0,(%rdx,%rax,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)

  0x00000000032baad2: add    $0x30,%rsp
  0x00000000032baad6: pop    %rbp
  0x00000000032baad7: test   %eax,-0x9ca9dd(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032baadd: retq   
  0x00000000032baade: mov    %rbx,0x8(%rsp)
  0x00000000032baae3: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032baaeb: callq  0x0000000003291d60  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=272}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ;   {runtime_call}
  0x00000000032baaf0: jmpq   0x00000000032baa3e
  0x00000000032baaf5: mov    %rbx,0x8(%rsp)
  0x00000000032baafa: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032bab02: callq  0x0000000003291d60  ; OopMap{rdx=Oop r9=Oop rdi=Oop rsi=Oop off=295}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ;   {runtime_call}
  0x00000000032bab07: jmpq   0x00000000032baa85
  0x00000000032bab0c: nop
  0x00000000032bab0d: nop
  0x00000000032bab0e: mov    0x2a8(%r15),%rax
  0x00000000032bab15: movabs $0x0,%r10
  0x00000000032bab1f: mov    %r10,0x2a8(%r15)
  0x00000000032bab26: movabs $0x0,%r10
  0x00000000032bab30: mov    %r10,0x2b0(%r15)
  0x00000000032bab37: add    $0x30,%rsp
  0x00000000032bab3b: pop    %rbp
  0x00000000032bab3c: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032bab41: hlt    
  0x00000000032bab42: hlt    
  0x00000000032bab43: hlt    
  0x00000000032bab44: hlt    
  0x00000000032bab45: hlt    
  0x00000000032bab46: hlt    
  0x00000000032bab47: hlt    
  0x00000000032bab48: hlt    
  0x00000000032bab49: hlt    
  0x00000000032bab4a: hlt    
  0x00000000032bab4b: hlt    
  0x00000000032bab4c: hlt    
  0x00000000032bab4d: hlt    
  0x00000000032bab4e: hlt    
  0x00000000032bab4f: hlt    
  0x00000000032bab50: hlt    
  0x00000000032bab51: hlt    
  0x00000000032bab52: hlt    
  0x00000000032bab53: hlt    
  0x00000000032bab54: hlt    
  0x00000000032bab55: hlt    
  0x00000000032bab56: hlt    
  0x00000000032bab57: hlt    
  0x00000000032bab58: hlt    
  0x00000000032bab59: hlt    
  0x00000000032bab5a: hlt    
  0x00000000032bab5b: hlt    
  0x00000000032bab5c: hlt    
  0x00000000032bab5d: hlt    
  0x00000000032bab5e: hlt    
  0x00000000032bab5f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032bab60: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032bab65: mov    %rsp,-0x28(%rsp)
  0x00000000032bab6a: sub    $0x80,%rsp
  0x00000000032bab71: mov    %rax,0x78(%rsp)
  0x00000000032bab76: mov    %rcx,0x70(%rsp)
  0x00000000032bab7b: mov    %rdx,0x68(%rsp)
  0x00000000032bab80: mov    %rbx,0x60(%rsp)
  0x00000000032bab85: mov    %rbp,0x50(%rsp)
  0x00000000032bab8a: mov    %rsi,0x48(%rsp)
  0x00000000032bab8f: mov    %rdi,0x40(%rsp)
  0x00000000032bab94: mov    %r8,0x38(%rsp)
  0x00000000032bab99: mov    %r9,0x30(%rsp)
  0x00000000032bab9e: mov    %r10,0x28(%rsp)
  0x00000000032baba3: mov    %r11,0x20(%rsp)
  0x00000000032baba8: mov    %r12,0x18(%rsp)
  0x00000000032babad: mov    %r13,0x10(%rsp)
  0x00000000032babb2: mov    %r14,0x8(%rsp)
  0x00000000032babb7: mov    %r15,(%rsp)
  0x00000000032babbb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032babc5: movabs $0x32bab65,%rdx    ;   {internal_word}
  0x00000000032babcf: mov    %rsp,%r8
  0x00000000032babd2: and    $0xfffffffffffffff0,%rsp
  0x00000000032babd6: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032babdb: hlt    
[Deopt Handler Code]
  0x00000000032babdc: movabs $0x32babdc,%r10    ;   {section_word}
  0x00000000032babe6: push   %r10
  0x00000000032babe8: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032babed: hlt    
  0x00000000032babee: hlt    
  0x00000000032babef: hlt    
<nmethod compile_id='94' compiler='C1' level='3' entry='0x00000000032ba9e0' size='1112' address='0x00000000032ba890' relocation_offset='288' insts_offset='336' stub_offset='720' scopes_data_offset='888' scopes_pcs_offset='960' dependencies_offset='1104' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1659' iicount='1659' stamp='1.263'/>
Decoding compiled method 0x00000000032ba2d0:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c238b20} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;
  # this:     rdx:rdx   = &apos;java/util/HashMap&apos;
  # parm0:    r8        = int
  # parm1:    r9:r9     = &apos;java/lang/Object&apos;
  # parm2:    rdi:rdi   = &apos;java/lang/Object&apos;
  # parm3:    rsi:rsi   = &apos;java/util/HashMap$Node&apos;
  #           [sp+0x70]  (sp of caller)
  0x00000000032ba440: mov    0x8(%rdx),%r10d
  0x00000000032ba444: shl    $0x3,%r10
  0x00000000032ba448: cmp    %rax,%r10
  0x00000000032ba44b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032ba451: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032ba45c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032ba460: mov    %eax,-0x6000(%rsp)
  0x00000000032ba467: push   %rbp
  0x00000000032ba468: sub    $0x60,%rsp
  0x00000000032ba46c: mov    %rdi,%rbx
  0x00000000032ba46f: mov    %rsi,%r11
  0x00000000032ba472: movabs $0x1c39c288,%rsi   ;   {metadata(method data for {method} {0x000000001c238b20} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032ba47c: mov    0xdc(%rsi),%edi
  0x00000000032ba482: add    $0x8,%edi
  0x00000000032ba485: mov    %edi,0xdc(%rsi)
  0x00000000032ba48b: movabs $0x1c238b18,%rsi   ;   {metadata({method} {0x000000001c238b20} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032ba495: and    $0x1ff8,%edi
  0x00000000032ba49b: cmp    $0x0,%edi
  0x00000000032ba49e: je     0x00000000032ba5d3
  0x00000000032ba4a4: movabs $0x7c001c2e0,%rdx  ;   {metadata(&apos;java/util/HashMap$Node&apos;)}
  0x00000000032ba4ae: mov    0x60(%r15),%rax
  0x00000000032ba4b2: lea    0x20(%rax),%rdi
  0x00000000032ba4b6: cmp    0x70(%r15),%rdi
  0x00000000032ba4ba: ja     0x00000000032ba5ea
  0x00000000032ba4c0: mov    %rdi,0x60(%r15)
  0x00000000032ba4c4: mov    0xa8(%rdx),%rcx
  0x00000000032ba4cb: mov    %rcx,(%rax)
  0x00000000032ba4ce: mov    %rdx,%rcx
  0x00000000032ba4d1: shr    $0x3,%rcx
  0x00000000032ba4d5: mov    %ecx,0x8(%rax)
  0x00000000032ba4d8: xor    %rcx,%rcx
  0x00000000032ba4db: mov    %ecx,0xc(%rax)
  0x00000000032ba4de: xor    %rcx,%rcx
  0x00000000032ba4e1: mov    %rcx,0x10(%rax)
  0x00000000032ba4e5: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.HashMap::newNode@0 (line 1742)

  0x00000000032ba4e9: mov    %rax,%rsi
  0x00000000032ba4ec: movabs $0x1c39c288,%rdi   ;   {metadata(method data for {method} {0x000000001c238b20} &apos;newNode&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;&apos; in &apos;java/util/HashMap&apos;)}
  0x00000000032ba4f6: addq   $0x1,0x108(%rdi)
  0x00000000032ba4fe: movabs $0x1c343640,%rsi   ;   {metadata(method data for {method} {0x000000001c23b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00000000032ba508: mov    0xdc(%rsi),%edi
  0x00000000032ba50e: add    $0x8,%edi
  0x00000000032ba511: mov    %edi,0xdc(%rsi)
  0x00000000032ba517: movabs $0x1c23b170,%rsi   ;   {metadata({method} {0x000000001c23b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00000000032ba521: and    $0x7ffff8,%edi
  0x00000000032ba527: cmp    $0x0,%edi
  0x00000000032ba52a: je     0x00000000032ba5f7
  0x00000000032ba530: mov    %rax,%rsi
  0x00000000032ba533: movabs $0x1c343640,%rdi   ;   {metadata(method data for {method} {0x000000001c23b178} &apos;&lt;init&gt;&apos; &apos;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V&apos; in &apos;java/util/HashMap$Node&apos;)}
  0x00000000032ba53d: addq   $0x1,0x108(%rdi)
  0x00000000032ba545: movabs $0x1c281c10,%rsi   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032ba54f: mov    0xdc(%rsi),%edi
  0x00000000032ba555: add    $0x8,%edi
  0x00000000032ba558: mov    %edi,0xdc(%rsi)
  0x00000000032ba55e: movabs $0x1c150480,%rsi   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032ba568: and    $0x7ffff8,%edi
  0x00000000032ba56e: cmp    $0x0,%edi
  0x00000000032ba571: je     0x00000000032ba60e
  0x00000000032ba577: mov    %r8d,0xc(%rax)     ;*putfield hash
                                                ; - java.util.HashMap$Node::&lt;init&gt;@6 (line 285)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00000000032ba57b: mov    %r9,%r10
  0x00000000032ba57e: shr    $0x3,%r10
  0x00000000032ba582: mov    %r10d,0x10(%rax)
  0x00000000032ba586: mov    %rax,%rsi
  0x00000000032ba589: shr    $0x9,%rsi
  0x00000000032ba58d: movabs $0xef3d000,%rdi
  0x00000000032ba597: movb   $0x0,(%rsi,%rdi,1)  ;*putfield key
                                                ; - java.util.HashMap$Node::&lt;init&gt;@11 (line 286)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00000000032ba59b: mov    %rbx,%r10
  0x00000000032ba59e: shr    $0x3,%r10
  0x00000000032ba5a2: mov    %r10d,0x14(%rax)
  0x00000000032ba5a6: mov    %rax,%rsi
  0x00000000032ba5a9: shr    $0x9,%rsi
  0x00000000032ba5ad: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.util.HashMap$Node::&lt;init&gt;@16 (line 287)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00000000032ba5b1: mov    %r11,%r10
  0x00000000032ba5b4: shr    $0x3,%r10
  0x00000000032ba5b8: mov    %r10d,0x18(%rax)
  0x00000000032ba5bc: mov    %rax,%rsi
  0x00000000032ba5bf: shr    $0x9,%rsi
  0x00000000032ba5c3: movb   $0x0,(%rsi,%rdi,1)  ;*putfield next
                                                ; - java.util.HashMap$Node::&lt;init&gt;@22 (line 288)
                                                ; - java.util.HashMap::newNode@9 (line 1742)

  0x00000000032ba5c7: add    $0x60,%rsp
  0x00000000032ba5cb: pop    %rbp
  0x00000000032ba5cc: test   %eax,-0x9ca4d2(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ba5d2: retq   
  0x00000000032ba5d3: mov    %rsi,0x8(%rsp)
  0x00000000032ba5d8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ba5e0: callq  0x0000000003291d60  ; OopMap{rdx=Oop r9=Oop rbx=Oop r11=Oop off=421}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::newNode@-1 (line 1742)
                                                ;   {runtime_call}
  0x00000000032ba5e5: jmpq   0x00000000032ba4a4
  0x00000000032ba5ea: mov    %rdx,%rdx
  0x00000000032ba5ed: callq  0x000000000328de00  ; OopMap{r9=Oop rbx=Oop r11=Oop off=434}
                                                ;*new  ; - java.util.HashMap::newNode@0 (line 1742)
                                                ;   {runtime_call}
  0x00000000032ba5f2: jmpq   0x00000000032ba4e9
  0x00000000032ba5f7: mov    %rsi,0x8(%rsp)
  0x00000000032ba5fc: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ba604: callq  0x0000000003291d60  ; OopMap{r9=Oop rbx=Oop r11=Oop rax=Oop off=457}
                                                ;*synchronization entry
                                                ; - java.util.HashMap$Node::&lt;init&gt;@-1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1742)
                                                ;   {runtime_call}
  0x00000000032ba609: jmpq   0x00000000032ba530
  0x00000000032ba60e: mov    %rsi,0x8(%rsp)
  0x00000000032ba613: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ba61b: callq  0x0000000003291d60  ; OopMap{r9=Oop rbx=Oop r11=Oop rax=Oop off=480}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.util.HashMap$Node::&lt;init&gt;@1 (line 284)
                                                ; - java.util.HashMap::newNode@9 (line 1742)
                                                ;   {runtime_call}
  0x00000000032ba620: jmpq   0x00000000032ba577
  0x00000000032ba625: nop
  0x00000000032ba626: nop
  0x00000000032ba627: mov    0x2a8(%r15),%rax
  0x00000000032ba62e: movabs $0x0,%r10
  0x00000000032ba638: mov    %r10,0x2a8(%r15)
  0x00000000032ba63f: movabs $0x0,%r10
  0x00000000032ba649: mov    %r10,0x2b0(%r15)
  0x00000000032ba650: add    $0x60,%rsp
  0x00000000032ba654: pop    %rbp
  0x00000000032ba655: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032ba65a: hlt    
  0x00000000032ba65b: hlt    
  0x00000000032ba65c: hlt    
  0x00000000032ba65d: hlt    
  0x00000000032ba65e: hlt    
  0x00000000032ba65f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032ba660: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032ba665: mov    %rsp,-0x28(%rsp)
  0x00000000032ba66a: sub    $0x80,%rsp
  0x00000000032ba671: mov    %rax,0x78(%rsp)
  0x00000000032ba676: mov    %rcx,0x70(%rsp)
  0x00000000032ba67b: mov    %rdx,0x68(%rsp)
  0x00000000032ba680: mov    %rbx,0x60(%rsp)
  0x00000000032ba685: mov    %rbp,0x50(%rsp)
  0x00000000032ba68a: mov    %rsi,0x48(%rsp)
  0x00000000032ba68f: mov    %rdi,0x40(%rsp)
  0x00000000032ba694: mov    %r8,0x38(%rsp)
  0x00000000032ba699: mov    %r9,0x30(%rsp)
  0x00000000032ba69e: mov    %r10,0x28(%rsp)
  0x00000000032ba6a3: mov    %r11,0x20(%rsp)
  0x00000000032ba6a8: mov    %r12,0x18(%rsp)
  0x00000000032ba6ad: mov    %r13,0x10(%rsp)
  0x00000000032ba6b2: mov    %r14,0x8(%rsp)
  0x00000000032ba6b7: mov    %r15,(%rsp)
  0x00000000032ba6bb: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032ba6c5: movabs $0x32ba665,%rdx    ;   {internal_word}
  0x00000000032ba6cf: mov    %rsp,%r8
  0x00000000032ba6d2: and    $0xfffffffffffffff0,%rsp
  0x00000000032ba6d6: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032ba6db: hlt    
[Deopt Handler Code]
  0x00000000032ba6dc: movabs $0x32ba6dc,%r10    ;   {section_word}
  0x00000000032ba6e6: push   %r10
  0x00000000032ba6e8: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032ba6ed: hlt    
  0x00000000032ba6ee: hlt    
  0x00000000032ba6ef: hlt    
<nmethod compile_id='95' compiler='C1' level='3' entry='0x00000000032ba440' size='1400' address='0x00000000032ba2d0' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1216' dependencies_offset='1392' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1091' iicount='1091' stamp='1.267'/>
<sweeper state='finished' traversals='1'  total_blobs='328' nmethods='62' adapters='179' free_code_cache='250359040' stamp='1.267'/>
Decoding compiled method 0x00000000032b9d90:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;
  #           [sp+0x50]  (sp of caller)
  0x00000000032b9f00: mov    0x8(%rdx),%r10d
  0x00000000032b9f04: shl    $0x3,%r10
  0x00000000032b9f08: cmp    %rax,%r10
  0x00000000032b9f0b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b9f11: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b9f1c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b9f20: mov    %eax,-0x6000(%rsp)
  0x00000000032b9f27: push   %rbp
  0x00000000032b9f28: sub    $0x40,%rsp
  0x00000000032b9f2c: mov    %rdx,%r8
  0x00000000032b9f2f: movabs $0x1c387de8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032b9f39: mov    0xdc(%rbx),%edx
  0x00000000032b9f3f: add    $0x8,%edx
  0x00000000032b9f42: mov    %edx,0xdc(%rbx)
  0x00000000032b9f48: movabs $0x1c1c7640,%rbx   ;   {metadata({method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032b9f52: and    $0x1ff8,%edx
  0x00000000032b9f58: cmp    $0x0,%edx
  0x00000000032b9f5b: je     0x00000000032ba095  ;*aload_0
                                                ; - java.lang.StringBuilder::&lt;init&gt;@0 (line 89)

  0x00000000032b9f61: mov    %r8,%rbx
  0x00000000032b9f64: movabs $0x1c387de8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c7648} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00000000032b9f6e: addq   $0x1,0x108(%rdx)
  0x00000000032b9f76: movabs $0x1c37d0f8,%rbx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032b9f80: mov    0xdc(%rbx),%edx
  0x00000000032b9f86: add    $0x8,%edx
  0x00000000032b9f89: mov    %edx,0xdc(%rbx)
  0x00000000032b9f8f: movabs $0x1c1c3970,%rbx   ;   {metadata({method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032b9f99: and    $0x7ffff8,%edx
  0x00000000032b9f9f: cmp    $0x0,%edx
  0x00000000032b9fa2: je     0x00000000032ba0ac
  0x00000000032b9fa8: mov    %r8,%rbx
  0x00000000032b9fab: movabs $0x1c37d0f8,%rdx   ;   {metadata(method data for {method} {0x000000001c1c3978} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00000000032b9fb5: addq   $0x1,0x108(%rdx)
  0x00000000032b9fbd: movabs $0x1c281c10,%rbx   ;   {metadata(method data for {method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032b9fc7: mov    0xdc(%rbx),%edx
  0x00000000032b9fcd: add    $0x8,%edx
  0x00000000032b9fd0: mov    %edx,0xdc(%rbx)
  0x00000000032b9fd6: movabs $0x1c150480,%rbx   ;   {metadata({method} {0x000000001c150488} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00000000032b9fe0: and    $0x7ffff8,%edx
  0x00000000032b9fe6: cmp    $0x0,%edx
  0x00000000032b9fe9: je     0x00000000032ba0c3
  0x00000000032b9fef: mov    $0x10,%ebx
  0x00000000032b9ff4: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000000032b9ffe: movslq %ebx,%rbx
  0x00000000032ba001: mov    %rbx,%rdi
  0x00000000032ba004: cmp    $0xffffff,%rbx
  0x00000000032ba00b: ja     0x00000000032ba0da
  0x00000000032ba011: movabs $0x17,%rsi
  0x00000000032ba01b: lea    (%rsi,%rbx,2),%rsi
  0x00000000032ba01f: and    $0xfffffffffffffff8,%rsi
  0x00000000032ba023: mov    0x60(%r15),%rax
  0x00000000032ba027: lea    (%rax,%rsi,1),%rsi
  0x00000000032ba02b: cmp    0x70(%r15),%rsi
  0x00000000032ba02f: ja     0x00000000032ba0da
  0x00000000032ba035: mov    %rsi,0x60(%r15)
  0x00000000032ba039: sub    %rax,%rsi
  0x00000000032ba03c: movq   $0x1,(%rax)
  0x00000000032ba043: mov    %rdx,%rcx
  0x00000000032ba046: shr    $0x3,%rcx
  0x00000000032ba04a: mov    %ecx,0x8(%rax)
  0x00000000032ba04d: mov    %ebx,0xc(%rax)
  0x00000000032ba050: sub    $0x10,%rsi
  0x00000000032ba054: je     0x00000000032ba06b
  0x00000000032ba05a: xor    %rbx,%rbx
  0x00000000032ba05d: shr    $0x3,%rsi
  0x00000000032ba061: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000000032ba066: dec    %rsi
  0x00000000032ba069: jne    0x00000000032ba061  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x00000000032ba06b: mov    %rax,%r10
  0x00000000032ba06e: shr    $0x3,%r10
  0x00000000032ba072: mov    %r10d,0x10(%r8)
  0x00000000032ba076: shr    $0x9,%r8
  0x00000000032ba07a: movabs $0xef3d000,%rsi
  0x00000000032ba084: movb   $0x0,(%r8,%rsi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)

  0x00000000032ba089: add    $0x40,%rsp
  0x00000000032ba08d: pop    %rbp
  0x00000000032ba08e: test   %eax,-0x9c9f94(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032ba094: retq   
  0x00000000032ba095: mov    %rbx,0x8(%rsp)
  0x00000000032ba09a: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ba0a2: callq  0x0000000003291d60  ; OopMap{r8=Oop off=423}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 89)
                                                ;   {runtime_call}
  0x00000000032ba0a7: jmpq   0x00000000032b9f61
  0x00000000032ba0ac: mov    %rbx,0x8(%rsp)
  0x00000000032ba0b1: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ba0b9: callq  0x0000000003291d60  ; OopMap{r8=Oop off=446}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x00000000032ba0be: jmpq   0x00000000032b9fa8
  0x00000000032ba0c3: mov    %rbx,0x8(%rsp)
  0x00000000032ba0c8: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032ba0d0: callq  0x0000000003291d60  ; OopMap{r8=Oop off=469}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x00000000032ba0d5: jmpq   0x00000000032b9fef
  0x00000000032ba0da: callq  0x000000000328e700  ; OopMap{r8=Oop off=479}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 89)
                                                ;   {runtime_call}
  0x00000000032ba0df: jmp    0x00000000032ba06b
  0x00000000032ba0e1: nop
  0x00000000032ba0e2: nop
  0x00000000032ba0e3: mov    0x2a8(%r15),%rax
  0x00000000032ba0ea: movabs $0x0,%r10
  0x00000000032ba0f4: mov    %r10,0x2a8(%r15)
  0x00000000032ba0fb: movabs $0x0,%r10
  0x00000000032ba105: mov    %r10,0x2b0(%r15)
  0x00000000032ba10c: add    $0x40,%rsp
  0x00000000032ba110: pop    %rbp
  0x00000000032ba111: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032ba116: hlt    
  0x00000000032ba117: hlt    
  0x00000000032ba118: hlt    
  0x00000000032ba119: hlt    
  0x00000000032ba11a: hlt    
  0x00000000032ba11b: hlt    
  0x00000000032ba11c: hlt    
  0x00000000032ba11d: hlt    
  0x00000000032ba11e: hlt    
  0x00000000032ba11f: hlt    
[Exception Handler]
[Stub Code]
  0x00000000032ba120: callq  0x000000000328f520  ;   {no_reloc}
  0x00000000032ba125: mov    %rsp,-0x28(%rsp)
  0x00000000032ba12a: sub    $0x80,%rsp
  0x00000000032ba131: mov    %rax,0x78(%rsp)
  0x00000000032ba136: mov    %rcx,0x70(%rsp)
  0x00000000032ba13b: mov    %rdx,0x68(%rsp)
  0x00000000032ba140: mov    %rbx,0x60(%rsp)
  0x00000000032ba145: mov    %rbp,0x50(%rsp)
  0x00000000032ba14a: mov    %rsi,0x48(%rsp)
  0x00000000032ba14f: mov    %rdi,0x40(%rsp)
  0x00000000032ba154: mov    %r8,0x38(%rsp)
  0x00000000032ba159: mov    %r9,0x30(%rsp)
  0x00000000032ba15e: mov    %r10,0x28(%rsp)
  0x00000000032ba163: mov    %r11,0x20(%rsp)
  0x00000000032ba168: mov    %r12,0x18(%rsp)
  0x00000000032ba16d: mov    %r13,0x10(%rsp)
  0x00000000032ba172: mov    %r14,0x8(%rsp)
  0x00000000032ba177: mov    %r15,(%rsp)
  0x00000000032ba17b: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032ba185: movabs $0x32ba125,%rdx    ;   {internal_word}
  0x00000000032ba18f: mov    %rsp,%r8
  0x00000000032ba192: and    $0xfffffffffffffff0,%rsp
  0x00000000032ba196: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032ba19b: hlt    
[Deopt Handler Code]
  0x00000000032ba19c: movabs $0x32ba19c,%r10    ;   {section_word}
  0x00000000032ba1a6: push   %r10
  0x00000000032ba1a8: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032ba1ad: hlt    
  0x00000000032ba1ae: hlt    
  0x00000000032ba1af: hlt    
<nmethod compile_id='65' compiler='C1' level='3' entry='0x00000000032b9f00' size='1312' address='0x00000000032b9d90' relocation_offset='288' insts_offset='368' stub_offset='912' scopes_data_offset='1080' scopes_pcs_offset='1160' dependencies_offset='1304' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='1169' iicount='1169' stamp='1.271'/>
<writer thread='31168'/>
<task_queued compile_id='98' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='753' backedge_count='55296' iicount='753' stamp='1.272' comment='tiered' hot_count='753'/>
<task_queued compile_id='99' method='java/io/File isInvalid ()Z' bytes='47' count='1792' iicount='1792' level='3' stamp='1.272' comment='tiered' hot_count='1792'/>
<task_queued compile_id='100' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='1280' iicount='1280' level='1' stamp='1.272' comment='tiered' hot_count='1280'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032b8c50:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;
  # this:     rdx:rdx   = &apos;java/io/BufferedInputStream&apos;
  # parm0:    r8:r8     = &apos;[B&apos;
  # parm1:    r9        = int
  # parm2:    rdi       = int
  #           [sp+0xa0]  (sp of caller)
  0x00000000032b8e60: mov    0x8(%rdx),%r10d
  0x00000000032b8e64: shl    $0x3,%r10
  0x00000000032b8e68: cmp    %rax,%r10
  0x00000000032b8e6b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b8e71: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b8e7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b8e80: mov    %eax,-0x6000(%rsp)
  0x00000000032b8e87: push   %rbp
  0x00000000032b8e88: sub    $0x90,%rsp
  0x00000000032b8e8f: mov    %rdx,0x50(%rsp)
  0x00000000032b8e94: mov    %r8,0x60(%rsp)
  0x00000000032b8e99: mov    %r9d,0x5c(%rsp)
  0x00000000032b8e9e: mov    %edi,0x58(%rsp)
  0x00000000032b8ea2: movabs $0x1c48d648,%rsi   ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b8eac: mov    0xdc(%rsi),%ebx
  0x00000000032b8eb2: add    $0x8,%ebx
  0x00000000032b8eb5: mov    %ebx,0xdc(%rsi)
  0x00000000032b8ebb: movabs $0x1c2a0380,%rsi   ;   {metadata({method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b8ec5: and    $0x1ff8,%ebx
  0x00000000032b8ecb: cmp    $0x0,%ebx
  0x00000000032b8ece: je     0x00000000032b9531  ;*aload_0
                                                ; - java.io.BufferedInputStream::read1@0 (line 277)

  0x00000000032b8ed4: mov    0x10(%rdx),%esi    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@1 (line 277)

  0x00000000032b8ed7: mov    0x14(%rdx),%ebx    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@5 (line 277)

  0x00000000032b8eda: sub    %ebx,%esi
  0x00000000032b8edc: cmp    $0x0,%esi
  0x00000000032b8edf: movabs $0x1c48d648,%rbx   ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b8ee9: movabs $0x108,%rax
  0x00000000032b8ef3: jg     0x00000000032b8f03
  0x00000000032b8ef9: movabs $0x118,%rax
  0x00000000032b8f03: mov    (%rbx,%rax,1),%rcx
  0x00000000032b8f07: lea    0x1(%rcx),%rcx
  0x00000000032b8f0b: mov    %rcx,(%rbx,%rax,1)
  0x00000000032b8f0f: jg     0x00000000032b9081  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@13 (line 278)

  0x00000000032b8f15: mov    %rdx,%rsi
  0x00000000032b8f18: movabs $0x1c48d648,%rbx   ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b8f22: addq   $0x1,0x128(%rbx)
  0x00000000032b8f2a: movabs $0x1c48c980,%rsi   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b8f34: mov    0xdc(%rsi),%ebx
  0x00000000032b8f3a: add    $0x8,%ebx
  0x00000000032b8f3d: mov    %ebx,0xdc(%rsi)
  0x00000000032b8f43: movabs $0x1c29fec8,%rsi   ;   {metadata({method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b8f4d: and    $0x7ffff8,%ebx
  0x00000000032b8f53: cmp    $0x0,%ebx
  0x00000000032b8f56: je     0x00000000032b9548
  0x00000000032b8f5c: mov    0x20(%rdx),%esi
  0x00000000032b8f5f: shl    $0x3,%rsi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x00000000032b8f63: cmp    $0x0,%rsi
  0x00000000032b8f67: movabs $0x1c48c980,%rbx   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b8f71: movabs $0x108,%rax
  0x00000000032b8f7b: jne    0x00000000032b8f8b
  0x00000000032b8f81: movabs $0x118,%rax
  0x00000000032b8f8b: mov    (%rbx,%rax,1),%rcx
  0x00000000032b8f8f: lea    0x1(%rcx),%rcx
  0x00000000032b8f93: mov    %rcx,(%rbx,%rax,1)
  0x00000000032b8f97: je     0x00000000032b94ae  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x00000000032b8f9d: mov    0xc(%rsi),%esi     ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ; implicit exception: dispatches to 0x00000000032b955f
  0x00000000032b8fa0: cmp    %esi,%edi
  0x00000000032b8fa2: movabs $0x1c48d648,%rsi   ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b8fac: movabs $0x138,%rbx
  0x00000000032b8fb6: jl     0x00000000032b8fc6
  0x00000000032b8fbc: movabs $0x148,%rbx
  0x00000000032b8fc6: mov    (%rsi,%rbx,1),%rax
  0x00000000032b8fca: lea    0x1(%rax),%rax
  0x00000000032b8fce: mov    %rax,(%rsi,%rbx,1)
  0x00000000032b8fd2: jl     0x00000000032b9014  ;*if_icmplt
                                                ; - java.io.BufferedInputStream::read1@22 (line 283)

  0x00000000032b8fd8: mov    0x18(%rdx),%esi    ;*getfield markpos
                                                ; - java.io.BufferedInputStream::read1@26 (line 283)

  0x00000000032b8fdb: cmp    $0x0,%esi
  0x00000000032b8fde: movabs $0x1c48d648,%rsi   ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b8fe8: movabs $0x158,%rbx
  0x00000000032b8ff2: jge    0x00000000032b9002
  0x00000000032b8ff8: movabs $0x168,%rbx
  0x00000000032b9002: mov    (%rsi,%rbx,1),%rax
  0x00000000032b9006: lea    0x1(%rax),%rax
  0x00000000032b900a: mov    %rax,(%rsi,%rbx,1)
  0x00000000032b900e: jl     0x00000000032b9167  ;*ifge
                                                ; - java.io.BufferedInputStream::read1@29 (line 283)

  0x00000000032b9014: mov    %rdx,%rsi
  0x00000000032b9017: movabs $0x1c48d648,%rbx   ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b9021: addq   $0x1,0x1b8(%rbx)
  0x00000000032b9029: mov    %rdx,%rsi
  0x00000000032b902c: mov    %rsi,%rdx          ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)

  0x00000000032b902f: callq  0x00000000031d61a0  ; OopMap{[80]=Oop [96]=Oop off=468}
                                                ;*invokespecial fill
                                                ; - java.io.BufferedInputStream::read1@44 (line 286)
                                                ;   {optimized virtual_call}
  0x00000000032b9034: mov    0x50(%rsp),%rdx
  0x00000000032b9039: mov    0x10(%rdx),%r8d    ;*getfield count
                                                ; - java.io.BufferedInputStream::read1@48 (line 287)

  0x00000000032b903d: mov    0x14(%rdx),%r9d    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@52 (line 287)

  0x00000000032b9041: sub    %r9d,%r8d
  0x00000000032b9044: cmp    $0x0,%r8d
  0x00000000032b9048: movabs $0x1c48d648,%r9    ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b9052: movabs $0x1c8,%rdi
  0x00000000032b905c: jg     0x00000000032b906c
  0x00000000032b9062: movabs $0x1d8,%rdi
  0x00000000032b906c: mov    (%r9,%rdi,1),%rsi
  0x00000000032b9070: lea    0x1(%rsi),%rsi
  0x00000000032b9074: mov    %rsi,(%r9,%rdi,1)
  0x00000000032b9078: jle    0x00000000032b9393  ;*ifgt
                                                ; - java.io.BufferedInputStream::read1@60 (line 288)

  0x00000000032b907e: mov    %r8,%rsi           ;*iload
                                                ; - java.io.BufferedInputStream::read1@65 (line 290)

  0x00000000032b9081: cmp    0x58(%rsp),%esi
  0x00000000032b9085: movabs $0x1c48d648,%r8    ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b908f: movabs $0x1e8,%r9
  0x00000000032b9099: jge    0x00000000032b90a9
  0x00000000032b909f: movabs $0x1f8,%r9
  0x00000000032b90a9: mov    (%r8,%r9,1),%rdi
  0x00000000032b90ad: lea    0x1(%rdi),%rdi
  0x00000000032b90b1: mov    %rdi,(%r8,%r9,1)
  0x00000000032b90b5: jge    0x00000000032b90d1  ;*if_icmpge
                                                ; - java.io.BufferedInputStream::read1@68 (line 290)

  0x00000000032b90bb: movabs $0x1c48d648,%r8    ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b90c5: incl   0x208(%r8)
  0x00000000032b90cc: jmpq   0x00000000032b90d5  ;*goto
                                                ; - java.io.BufferedInputStream::read1@73 (line 290)

  0x00000000032b90d1: mov    0x58(%rsp),%esi    ;*istore
                                                ; - java.io.BufferedInputStream::read1@77 (line 290)

  0x00000000032b90d5: mov    %rdx,%r8
  0x00000000032b90d8: movabs $0x1c48d648,%r9    ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b90e2: addq   $0x1,0x220(%r9)
  0x00000000032b90ea: movabs $0x1c48c980,%r8    ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b90f4: mov    0xdc(%r8),%r9d
  0x00000000032b90fb: add    $0x8,%r9d
  0x00000000032b90ff: mov    %r9d,0xdc(%r8)
  0x00000000032b9106: movabs $0x1c29fec8,%r8    ;   {metadata({method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b9110: and    $0x7ffff8,%r9d
  0x00000000032b9117: cmp    $0x0,%r9d
  0x00000000032b911b: je     0x00000000032b9564
  0x00000000032b9121: mov    0x20(%rdx),%edi
  0x00000000032b9124: shl    $0x3,%rdi          ;*getfield buf
                                                ; - java.io.BufferedInputStream::getBufIfOpen@1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x00000000032b9128: cmp    $0x0,%rdi
  0x00000000032b912c: movabs $0x1c48c980,%r8    ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b9136: movabs $0x108,%r9
  0x00000000032b9140: jne    0x00000000032b9150
  0x00000000032b9146: movabs $0x118,%r9
  0x00000000032b9150: mov    (%r8,%r9,1),%rbx
  0x00000000032b9154: lea    0x1(%rbx),%rbx
  0x00000000032b9158: mov    %rbx,(%r8,%r9,1)
  0x00000000032b915c: jne    0x00000000032b92bb
  0x00000000032b9162: jmpq   0x00000000032b9426  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getBufIfOpen@6 (line 169)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x00000000032b9167: mov    %rdx,%r8
  0x00000000032b916a: movabs $0x1c48d648,%r9    ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b9174: addq   $0x1,0x178(%r9)
  0x00000000032b917c: movabs $0x1c4ada48,%r8    ;   {metadata(method data for {method} {0x000000001c29fe20} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b9186: mov    0xdc(%r8),%r9d
  0x00000000032b918d: add    $0x8,%r9d
  0x00000000032b9191: mov    %r9d,0xdc(%r8)
  0x00000000032b9198: movabs $0x1c29fe18,%r8    ;   {metadata({method} {0x000000001c29fe20} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b91a2: and    $0x7ffff8,%r9d
  0x00000000032b91a9: cmp    $0x0,%r9d
  0x00000000032b91ad: je     0x00000000032b957b
  0x00000000032b91b3: mov    0xc(%rdx),%edx
  0x00000000032b91b6: shl    $0x3,%rdx          ;*getfield in
                                                ; - java.io.BufferedInputStream::getInIfOpen@1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x00000000032b91ba: cmp    $0x0,%rdx
  0x00000000032b91be: movabs $0x1c4ada48,%r8    ;   {metadata(method data for {method} {0x000000001c29fe20} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b91c8: movabs $0x108,%r9
  0x00000000032b91d2: jne    0x00000000032b91e2
  0x00000000032b91d8: movabs $0x118,%r9
  0x00000000032b91e2: mov    (%r8,%r9,1),%rdi
  0x00000000032b91e6: lea    0x1(%rdi),%rdi
  0x00000000032b91ea: mov    %rdi,(%r8,%r9,1)
  0x00000000032b91ee: je     0x00000000032b93a7  ;*ifnonnull
                                                ; - java.io.BufferedInputStream::getInIfOpen@6 (line 158)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x00000000032b91f4: cmp    (%rdx),%rax        ; implicit exception: dispatches to 0x00000000032b9592
  0x00000000032b91f7: mov    %rdx,%r8
  0x00000000032b91fa: movabs $0x1c48d648,%r9    ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b9204: mov    0x8(%r8),%r8d
  0x00000000032b9208: shl    $0x3,%r8
  0x00000000032b920c: cmp    0x190(%r9),%r8
  0x00000000032b9213: jne    0x00000000032b9222
  0x00000000032b9215: addq   $0x1,0x198(%r9)
  0x00000000032b921d: jmpq   0x00000000032b9288
  0x00000000032b9222: cmp    0x1a0(%r9),%r8
  0x00000000032b9229: jne    0x00000000032b9238
  0x00000000032b922b: addq   $0x1,0x1a8(%r9)
  0x00000000032b9233: jmpq   0x00000000032b9288
  0x00000000032b9238: cmpq   $0x0,0x190(%r9)
  0x00000000032b9243: jne    0x00000000032b925c
  0x00000000032b9245: mov    %r8,0x190(%r9)
  0x00000000032b924c: movq   $0x1,0x198(%r9)
  0x00000000032b9257: jmpq   0x00000000032b9288
  0x00000000032b925c: cmpq   $0x0,0x1a0(%r9)
  0x00000000032b9267: jne    0x00000000032b9280
  0x00000000032b9269: mov    %r8,0x1a0(%r9)
  0x00000000032b9270: movq   $0x1,0x1a8(%r9)
  0x00000000032b927b: jmpq   0x00000000032b9288
  0x00000000032b9280: addq   $0x1,0x188(%r9)
  0x00000000032b9288: mov    0x60(%rsp),%r8
  0x00000000032b928d: mov    0x5c(%rsp),%r9d
  0x00000000032b9292: mov    0x58(%rsp),%edi    ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)

  0x00000000032b9296: nop
  0x00000000032b9297: nop
  0x00000000032b9298: nop
  0x00000000032b9299: nop
  0x00000000032b929a: nop
  0x00000000032b929b: nop
  0x00000000032b929c: nop
  0x00000000032b929d: movabs $0xffffffffffffffff,%rax
  0x00000000032b92a7: callq  0x00000000031d63e0  ; OopMap{off=1100}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {virtual_call}
  0x00000000032b92ac: add    $0x90,%rsp
  0x00000000032b92b3: pop    %rbp
  0x00000000032b92b4: test   %eax,-0x9c91ba(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b92ba: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@42 (line 284)

  0x00000000032b92bb: mov    0x14(%rdx),%r8d    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@84 (line 291)

  0x00000000032b92bf: movabs $0x1c48d648,%r9    ;   {metadata(method data for {method} {0x000000001c2a0388} &apos;read1&apos; &apos;([BII)I&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b92c9: addq   $0x1,0x230(%r9)
  0x00000000032b92d1: mov    %rdi,%rdx
  0x00000000032b92d4: mov    0x60(%rsp),%r9
  0x00000000032b92d9: mov    0x5c(%rsp),%edi
  0x00000000032b92dd: mov    %rsi,%rax
  0x00000000032b92e0: mov    %rax,%rsi
  0x00000000032b92e3: mov    %eax,0x68(%rsp)
  0x00000000032b92e7: test   %rdx,%rdx
  0x00000000032b92ea: je     0x00000000032b9597
  0x00000000032b92f0: test   %r9,%r9
  0x00000000032b92f3: je     0x00000000032b9597
  0x00000000032b92f9: test   %r8d,%r8d
  0x00000000032b92fc: jl     0x00000000032b9597
  0x00000000032b9302: test   %edi,%edi
  0x00000000032b9304: jl     0x00000000032b9597
  0x00000000032b930a: lea    (%r8,%rsi,1),%rcx
  0x00000000032b930e: cmp    0xc(%rdx),%ecx
  0x00000000032b9311: ja     0x00000000032b9597
  0x00000000032b9317: lea    (%rdi,%rsi,1),%rcx
  0x00000000032b931b: cmp    0xc(%r9),%ecx
  0x00000000032b931f: ja     0x00000000032b9597
  0x00000000032b9325: test   %esi,%esi
  0x00000000032b9327: jl     0x00000000032b9597
  0x00000000032b932d: je     0x00000000032b9371
  0x00000000032b9333: movslq %r8d,%r8
  0x00000000032b9336: movslq %edi,%rdi
  0x00000000032b9339: lea    0x10(%rdx,%r8,1),%rcx
  0x00000000032b933e: lea    0x10(%r9,%rdi,1),%rdx
  0x00000000032b9343: mov    %rsi,%r8
  0x00000000032b9346: sub    $0x20,%rsp
  0x00000000032b934a: test   $0xf,%esp
  0x00000000032b9350: je     0x00000000032b9368
  0x00000000032b9356: sub    $0x8,%rsp
  0x00000000032b935a: callq  Stub::jbyte_arraycopy  ;   {runtime_call}
  0x00000000032b935f: add    $0x8,%rsp
  0x00000000032b9363: jmpq   0x00000000032b936d
  0x00000000032b9368: callq  Stub::jbyte_arraycopy  ;   {runtime_call}
  0x00000000032b936d: add    $0x20,%rsp         ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)

  0x00000000032b9371: mov    0x50(%rsp),%rdx
  0x00000000032b9376: mov    0x14(%rdx),%eax    ;*getfield pos
                                                ; - java.io.BufferedInputStream::read1@96 (line 292)

  0x00000000032b9379: add    0x68(%rsp),%eax
  0x00000000032b937d: mov    %eax,0x14(%rdx)    ;*putfield pos
                                                ; - java.io.BufferedInputStream::read1@102 (line 292)

  0x00000000032b9380: mov    0x68(%rsp),%eax
  0x00000000032b9384: add    $0x90,%rsp
  0x00000000032b938b: pop    %rbp
  0x00000000032b938c: test   %eax,-0x9c9292(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b9392: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@107 (line 293)

  0x00000000032b9393: mov    $0xffffffff,%eax
  0x00000000032b9398: add    $0x90,%rsp
  0x00000000032b939f: pop    %rbp
  0x00000000032b93a0: test   %eax,-0x9c92a6(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b93a6: retq                      ;*ireturn
                                                ; - java.io.BufferedInputStream::read1@64 (line 288)

  0x00000000032b93a7: nop
  0x00000000032b93a8: jmpq   0x00000000032b95b0  ;   {no_reloc}
  0x00000000032b93ad: add    %al,(%rax)
  0x00000000032b93af: add    %al,(%rax)
  0x00000000032b93b1: add    %cl,-0x75(%rcx)
  0x00000000032b93b4: rex.RXB (bad) 
  0x00000000032b93b6: lea    0x20(%rax),%rdi
  0x00000000032b93ba: cmp    0x70(%r15),%rdi
  0x00000000032b93be: ja     0x00000000032b95ba
  0x00000000032b93c4: mov    %rdi,0x60(%r15)
  0x00000000032b93c8: mov    0xa8(%rdx),%rcx
  0x00000000032b93cf: mov    %rcx,(%rax)
  0x00000000032b93d2: mov    %rdx,%rcx
  0x00000000032b93d5: shr    $0x3,%rcx
  0x00000000032b93d9: mov    %ecx,0x8(%rax)
  0x00000000032b93dc: xor    %rcx,%rcx
  0x00000000032b93df: mov    %ecx,0xc(%rax)
  0x00000000032b93e2: xor    %rcx,%rcx
  0x00000000032b93e5: mov    %rcx,0x10(%rax)
  0x00000000032b93e9: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x00000000032b93ed: mov    %rax,%r8
  0x00000000032b93f0: movabs $0x1c4ada48,%rdx   ;   {metadata(method data for {method} {0x000000001c29fe20} &apos;getInIfOpen&apos; &apos;()Ljava/io/InputStream;&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b93fa: addq   $0x1,0x128(%rdx)
  0x00000000032b9402: movabs $0x76bf1f198,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x00000000032b940c: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x00000000032b940f: mov    %rax,0x70(%rsp)
  0x00000000032b9414: nop
  0x00000000032b9415: nop
  0x00000000032b9416: nop
  0x00000000032b9417: callq  0x00000000031d61a0  ; OopMap{[96]=Oop [112]=Oop off=1468}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getInIfOpen@15 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {optimized virtual_call}
  0x00000000032b941c: mov    0x70(%rsp),%rax
  0x00000000032b9421: jmpq   0x00000000032b963e  ;*athrow
                                                ; - java.io.BufferedInputStream::getInIfOpen@18 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)

  0x00000000032b9426: mov    %esi,0x68(%rsp)
  0x00000000032b942a: nopw   0x0(%rax,%rax,1)
  0x00000000032b9430: jmpq   0x00000000032b95d6  ;   {no_reloc}
  0x00000000032b9435: add    %al,(%rax)
  0x00000000032b9437: add    %al,(%rax)
  0x00000000032b9439: add    %cl,-0x75(%rcx)
  0x00000000032b943c: rex.RXB (bad) 
  0x00000000032b943e: lea    0x20(%rax),%rdi
  0x00000000032b9442: cmp    0x70(%r15),%rdi
  0x00000000032b9446: ja     0x00000000032b95e0
  0x00000000032b944c: mov    %rdi,0x60(%r15)
  0x00000000032b9450: mov    0xa8(%rdx),%rcx
  0x00000000032b9457: mov    %rcx,(%rax)
  0x00000000032b945a: mov    %rdx,%rcx
  0x00000000032b945d: shr    $0x3,%rcx
  0x00000000032b9461: mov    %ecx,0x8(%rax)
  0x00000000032b9464: xor    %rcx,%rcx
  0x00000000032b9467: mov    %ecx,0xc(%rax)
  0x00000000032b946a: xor    %rcx,%rcx
  0x00000000032b946d: mov    %rcx,0x10(%rax)
  0x00000000032b9471: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x00000000032b9475: mov    %rax,%r8
  0x00000000032b9478: movabs $0x1c48c980,%rdx   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b9482: addq   $0x1,0x128(%rdx)
  0x00000000032b948a: movabs $0x76bf1f198,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x00000000032b9494: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x00000000032b9497: mov    %rax,0x78(%rsp)
  0x00000000032b949c: nop
  0x00000000032b949d: nop
  0x00000000032b949e: nop
  0x00000000032b949f: callq  0x00000000031d61a0  ; OopMap{[96]=Oop [120]=Oop [80]=Oop off=1604}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {optimized virtual_call}
  0x00000000032b94a4: mov    0x78(%rsp),%rax
  0x00000000032b94a9: jmpq   0x00000000032b963e  ;*athrow
                                                ; - java.io.BufferedInputStream::getBufIfOpen@18 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)

  0x00000000032b94ae: xchg   %ax,%ax
  0x00000000032b94b0: jmpq   0x00000000032b95fc  ;   {no_reloc}
  0x00000000032b94b5: add    %al,(%rax)
  0x00000000032b94b7: add    %al,(%rax)
  0x00000000032b94b9: add    %cl,-0x75(%rcx)
  0x00000000032b94bc: rex.RXB (bad) 
  0x00000000032b94be: lea    0x20(%rax),%rdi
  0x00000000032b94c2: cmp    0x70(%r15),%rdi
  0x00000000032b94c6: ja     0x00000000032b9606
  0x00000000032b94cc: mov    %rdi,0x60(%r15)
  0x00000000032b94d0: mov    0xa8(%rdx),%rcx
  0x00000000032b94d7: mov    %rcx,(%rax)
  0x00000000032b94da: mov    %rdx,%rcx
  0x00000000032b94dd: shr    $0x3,%rcx
  0x00000000032b94e1: mov    %ecx,0x8(%rax)
  0x00000000032b94e4: xor    %rcx,%rcx
  0x00000000032b94e7: mov    %ecx,0xc(%rax)
  0x00000000032b94ea: xor    %rcx,%rcx
  0x00000000032b94ed: mov    %rcx,0x10(%rax)
  0x00000000032b94f1: mov    %rcx,0x18(%rax)    ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x00000000032b94f5: mov    %rax,%rdx
  0x00000000032b94f8: movabs $0x1c48c980,%rsi   ;   {metadata(method data for {method} {0x000000001c29fed0} &apos;getBufIfOpen&apos; &apos;()[B&apos; in &apos;java/io/BufferedInputStream&apos;)}
  0x00000000032b9502: addq   $0x1,0x128(%rsi)
  0x00000000032b950a: movabs $0x76bf1f198,%r8   ;   {oop(&quot;Stream closed&quot;)}
  0x00000000032b9514: mov    %rax,%rdx          ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)

  0x00000000032b9517: mov    %rax,0x80(%rsp)
  0x00000000032b951f: callq  0x00000000031d61a0  ; OopMap{[96]=Oop [128]=Oop [80]=Oop off=1732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.io.BufferedInputStream::getBufIfOpen@15 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {optimized virtual_call}
  0x00000000032b9524: mov    0x80(%rsp),%rax
  0x00000000032b952c: jmpq   0x00000000032b963e
  0x00000000032b9531: mov    %rsi,0x8(%rsp)
  0x00000000032b9536: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b953e: callq  0x0000000003291d60  ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop off=1763}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::read1@-1 (line 277)
                                                ;   {runtime_call}
  0x00000000032b9543: jmpq   0x00000000032b8ed4
  0x00000000032b9548: mov    %rsi,0x8(%rsp)
  0x00000000032b954d: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b9555: callq  0x0000000003291d60  ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop off=1786}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x00000000032b955a: jmpq   0x00000000032b8f5c
  0x00000000032b955f: callq  0x000000000328d680  ; OopMap{rdx=Oop [80]=Oop r8=Oop [96]=Oop off=1796}
                                                ;*arraylength
                                                ; - java.io.BufferedInputStream::read1@21 (line 283)
                                                ;   {runtime_call}
  0x00000000032b9564: mov    %r8,0x8(%rsp)
  0x00000000032b9569: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b9571: callq  0x0000000003291d60  ; OopMap{[96]=Oop rdx=Oop [80]=Oop off=1814}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getBufIfOpen@-1 (line 168)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x00000000032b9576: jmpq   0x00000000032b9121
  0x00000000032b957b: mov    %r8,0x8(%rsp)
  0x00000000032b9580: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b9588: callq  0x0000000003291d60  ; OopMap{[96]=Oop rdx=Oop [80]=Oop off=1837}
                                                ;*synchronization entry
                                                ; - java.io.BufferedInputStream::getInIfOpen@-1 (line 157)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x00000000032b958d: jmpq   0x00000000032b91b3
  0x00000000032b9592: callq  0x000000000328d680  ; OopMap{[96]=Oop rdx=Oop off=1847}
                                                ;*invokevirtual read
                                                ; - java.io.BufferedInputStream::read1@39 (line 284)
                                                ;   {runtime_call}
  0x00000000032b9597: callq  0x00000000031d6620  ; OopMap{[80]=Oop off=1852}
                                                ;*invokestatic arraycopy
                                                ; - java.io.BufferedInputStream::read1@91 (line 291)
                                                ;   {static_call}
  0x00000000032b959c: jmpq   0x00000000032b9371
  0x00000000032b95a1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032b95ab: mov    $0xa050f00,%eax
  0x00000000032b95b0: callq  0x0000000003290ca0  ; OopMap{[96]=Oop off=1877}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x00000000032b95b5: jmpq   0x00000000032b93a8
  0x00000000032b95ba: mov    %rdx,%rdx
  0x00000000032b95bd: callq  0x000000000328de00  ; OopMap{[96]=Oop off=1890}
                                                ;*new  ; - java.io.BufferedInputStream::getInIfOpen@9 (line 159)
                                                ; - java.io.BufferedInputStream::read1@33 (line 284)
                                                ;   {runtime_call}
  0x00000000032b95c2: jmpq   0x00000000032b93ed
  0x00000000032b95c7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032b95d1: mov    $0xa050f00,%eax
  0x00000000032b95d6: callq  0x0000000003290ca0  ; OopMap{[96]=Oop [80]=Oop off=1915}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x00000000032b95db: jmpq   0x00000000032b9430
  0x00000000032b95e0: mov    %rdx,%rdx
  0x00000000032b95e3: callq  0x000000000328de00  ; OopMap{[96]=Oop [80]=Oop off=1928}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@80 (line 291)
                                                ;   {runtime_call}
  0x00000000032b95e8: jmpq   0x00000000032b9475
  0x00000000032b95ed: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00000000032b95f7: mov    $0xa050f00,%eax
  0x00000000032b95fc: callq  0x0000000003290ca0  ; OopMap{[96]=Oop [80]=Oop off=1953}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x00000000032b9601: jmpq   0x00000000032b94b0
  0x00000000032b9606: mov    %rdx,%rdx
  0x00000000032b9609: callq  0x000000000328de00  ; OopMap{[96]=Oop [80]=Oop off=1966}
                                                ;*new  ; - java.io.BufferedInputStream::getBufIfOpen@9 (line 170)
                                                ; - java.io.BufferedInputStream::read1@18 (line 283)
                                                ;   {runtime_call}
  0x00000000032b960e: jmpq   0x00000000032b94f5
  0x00000000032b9613: nop
  0x00000000032b9614: nop
  0x00000000032b9615: mov    0x2a8(%r15),%rax
  0x00000000032b961c: movabs $0x0,%r10
  0x00000000032b9626: mov    %r10,0x2a8(%r15)
  0x00000000032b962d: movabs $0x0,%r10
  0x00000000032b9637: mov    %r10,0x2b0(%r15)
  0x00000000032b963e: add    $0x90,%rsp
  0x00000000032b9645: pop    %rbp
  0x00000000032b9646: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032b964b: hlt    
  0x00000000032b964c: hlt    
  0x00000000032b964d: hlt    
  0x00000000032b964e: hlt    
  0x00000000032b964f: hlt    
  0x00000000032b9650: hlt    
  0x00000000032b9651: hlt    
  0x00000000032b9652: hlt    
  0x00000000032b9653: hlt    
  0x00000000032b9654: hlt    
  0x00000000032b9655: hlt    
  0x00000000032b9656: hlt    
  0x00000000032b9657: hlt    
  0x00000000032b9658: hlt    
  0x00000000032b9659: hlt    
  0x00000000032b965a: hlt    
  0x00000000032b965b: hlt    
  0x00000000032b965c: hlt    
  0x00000000032b965d: hlt    
  0x00000000032b965e: hlt    
  0x00000000032b965f: hlt    
[Stub Code]
  0x00000000032b9660: nop                       ;   {no_reloc}
  0x00000000032b9661: nop
  0x00000000032b9662: nop
  0x00000000032b9663: nop
  0x00000000032b9664: nop
  0x00000000032b9665: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b966f: jmpq   0x00000000032b966f  ;   {runtime_call}
  0x00000000032b9674: nop
  0x00000000032b9675: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b967f: jmpq   0x00000000032b967f  ;   {runtime_call}
  0x00000000032b9684: nop
  0x00000000032b9685: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b968f: jmpq   0x00000000032b968f  ;   {runtime_call}
  0x00000000032b9694: nop
  0x00000000032b9695: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b969f: jmpq   0x00000000032b969f  ;   {runtime_call}
  0x00000000032b96a4: nop
  0x00000000032b96a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b96af: jmpq   0x00000000032b96af  ;   {runtime_call}
  0x00000000032b96b4: nop
  0x00000000032b96b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b96bf: jmpq   0x00000000032b96bf  ;   {runtime_call}
[Exception Handler]
  0x00000000032b96c4: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032b96c9: mov    %rsp,-0x28(%rsp)
  0x00000000032b96ce: sub    $0x80,%rsp
  0x00000000032b96d5: mov    %rax,0x78(%rsp)
  0x00000000032b96da: mov    %rcx,0x70(%rsp)
  0x00000000032b96df: mov    %rdx,0x68(%rsp)
  0x00000000032b96e4: mov    %rbx,0x60(%rsp)
  0x00000000032b96e9: mov    %rbp,0x50(%rsp)
  0x00000000032b96ee: mov    %rsi,0x48(%rsp)
  0x00000000032b96f3: mov    %rdi,0x40(%rsp)
  0x00000000032b96f8: mov    %r8,0x38(%rsp)
  0x00000000032b96fd: mov    %r9,0x30(%rsp)
  0x00000000032b9702: mov    %r10,0x28(%rsp)
  0x00000000032b9707: mov    %r11,0x20(%rsp)
  0x00000000032b970c: mov    %r12,0x18(%rsp)
  0x00000000032b9711: mov    %r13,0x10(%rsp)
  0x00000000032b9716: mov    %r14,0x8(%rsp)
  0x00000000032b971b: mov    %r15,(%rsp)
  0x00000000032b971f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032b9729: movabs $0x32b96c9,%rdx    ;   {internal_word}
  0x00000000032b9733: mov    %rsp,%r8
  0x00000000032b9736: and    $0xfffffffffffffff0,%rsp
  0x00000000032b973a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032b973f: hlt    
[Deopt Handler Code]
  0x00000000032b9740: movabs $0x32b9740,%r10    ;   {section_word}
  0x00000000032b974a: push   %r10
  0x00000000032b974c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b9751: hlt    
  0x00000000032b9752: hlt    
  0x00000000032b9753: hlt    
  0x00000000032b9754: hlt    
  0x00000000032b9755: hlt    
  0x00000000032b9756: hlt    
  0x00000000032b9757: hlt    
<nmethod compile_id='90' compiler='C1' level='3' entry='0x00000000032b8e60' size='4352' address='0x00000000032b8c50' relocation_offset='288' insts_offset='528' stub_offset='2576' scopes_data_offset='2856' scopes_pcs_offset='3392' dependencies_offset='4320' nul_chk_table_offset='4328' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='996' iicount='996' stamp='1.305'/>
<writer thread='31168'/>
<task_queued compile_id='101' method='java/lang/Character toLowerCase (I)I' bytes='9' count='29696' iicount='29696' stamp='1.305' comment='tiered' hot_count='29696'/>
<task_queued compile_id='102' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='29696' iicount='29696' stamp='1.305' comment='tiered' hot_count='29696'/>
<task_queued compile_id='103' method='java/io/BufferedReader readLine (Z)Ljava/lang/String;' bytes='304' count='559' backedge_count='17408' iicount='559' level='3' stamp='1.306' comment='tiered' hot_count='559'/>
<writer thread='23880'/>
Decoding compiled method 0x00000000032b8490:
Code:
[Entry Point]
[Constants]
  # {method} {0x000000001c1d37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;
  #           [sp+0x60]  (sp of caller)
  0x00000000032b8600: mov    0x8(%rdx),%r10d
  0x00000000032b8604: shl    $0x3,%r10
  0x00000000032b8608: cmp    %rax,%r10
  0x00000000032b860b: jne    0x00000000031d5f60  ;   {runtime_call}
  0x00000000032b8611: data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000000032b861c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
  0x00000000032b8620: mov    %eax,-0x6000(%rsp)
  0x00000000032b8627: push   %rbp
  0x00000000032b8628: sub    $0x50,%rsp
  0x00000000032b862c: 
<writer thread='31416'/>
<destroy_vm stamp='1.306'/>
<writer thread='23880'/>
movabs $0x1c33ed08,%r8    ;   {metadata(method data for {method} {0x000000001c1d37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000032b8636: mov    0xdc(%r8),%r9d
  0x00000000032b863d: add    $0x8,%r9d
  0x00000000032b8641: mov    %r9d,0xdc(%r8)
  0x00000000032b8648: movabs $0x1c1d37a8,%r8    ;   {metadata({method} {0x000000001c1d37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000032b8652: and    $0x1ff8,%r9d
  0x00000000032b8659: cmp    $0x0,%r9d
  0x00000000032b865d: je     0x00000000032b8923  ;*aload_0
                                                ; - java.io.File::isInvalid@0 (line 186)

  0x00000000032b8663: mov    0x14(%rdx),%r8d
  0x00000000032b8667: shl    $0x3,%r8           ;*getfield status
                                                ; - java.io.File::isInvalid@1 (line 186)

  0x00000000032b866b: cmp    $0x0,%r8
  0x00000000032b866f: movabs $0x1c33ed08,%r8    ;   {metadata(method data for {method} {0x000000001c1d37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000032b8679: movabs $0x108,%r9
  0x00000000032b8683: jne    0x00000000032b8693
  0x00000000032b8689: movabs $0x118,%r9
  0x00000000032b8693: mov    (%r8,%r9,1),%rsi
  0x00000000032b8697: lea    0x1(%rsi),%rsi
  0x00000000032b869b: mov    %rsi,(%r8,%r9,1)
  0x00000000032b869f: jne    0x00000000032b88ab  ;*ifnonnull
                                                ; - java.io.File::isInvalid@4 (line 186)

  0x00000000032b86a5: mov    0x10(%rdx),%esi
  0x00000000032b86a8: shl    $0x3,%rsi          ;*getfield path
                                                ; - java.io.File::isInvalid@9 (line 187)

  0x00000000032b86ac: cmp    (%rsi),%rax        ;*invokevirtual indexOf
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ; implicit exception: dispatches to 0x00000000032b893a
  0x00000000032b86af: mov    %rsi,%r8
  0x00000000032b86b2: movabs $0x1c33ed08,%r9    ;   {metadata(method data for {method} {0x000000001c1d37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000032b86bc: mov    0x8(%r8),%r8d
  0x00000000032b86c0: shl    $0x3,%r8
  0x00000000032b86c4: cmp    0x130(%r9),%r8
  0x00000000032b86cb: jne    0x00000000032b86da
  0x00000000032b86cd: addq   $0x1,0x138(%r9)
  0x00000000032b86d5: jmpq   0x00000000032b8740
  0x00000000032b86da: cmp    0x140(%r9),%r8
  0x00000000032b86e1: jne    0x00000000032b86f0
  0x00000000032b86e3: addq   $0x1,0x148(%r9)
  0x00000000032b86eb: jmpq   0x00000000032b8740
  0x00000000032b86f0: cmpq   $0x0,0x130(%r9)
  0x00000000032b86fb: jne    0x00000000032b8714
  0x00000000032b86fd: mov    %r8,0x130(%r9)
  0x00000000032b8704: movq   $0x1,0x138(%r9)
  0x00000000032b870f: jmpq   0x00000000032b8740
  0x00000000032b8714: cmpq   $0x0,0x140(%r9)
  0x00000000032b871f: jne    0x00000000032b8738
  0x00000000032b8721: mov    %r8,0x140(%r9)
  0x00000000032b8728: movq   $0x1,0x148(%r9)
  0x00000000032b8733: jmpq   0x00000000032b8740
  0x00000000032b8738: addq   $0x1,0x128(%r9)
  0x00000000032b8740: movabs $0x1c33da88,%r8    ;   {metadata(method data for {method} {0x000000001c155058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032b874a: mov    0xdc(%r8),%r9d
  0x00000000032b8751: add    $0x8,%r9d
  0x00000000032b8755: mov    %r9d,0xdc(%r8)
  0x00000000032b875c: movabs $0x1c155050,%r8    ;   {metadata({method} {0x000000001c155058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032b8766: and    $0x7ffff8,%r9d
  0x00000000032b876d: cmp    $0x0,%r9d
  0x00000000032b8771: je     0x00000000032b893f
  0x00000000032b8777: mov    %rsi,%r8
  0x00000000032b877a: movabs $0x1c33da88,%r9    ;   {metadata(method data for {method} {0x000000001c155058} &apos;indexOf&apos; &apos;(I)I&apos; in &apos;java/lang/String&apos;)}
  0x00000000032b8784: mov    0x8(%r8),%r8d
  0x00000000032b8788: shl    $0x3,%r8
  0x00000000032b878c: cmp    0x110(%r9),%r8
  0x00000000032b8793: jne    0x00000000032b87a2
  0x00000000032b8795: addq   $0x1,0x118(%r9)
  0x00000000032b879d: jmpq   0x00000000032b8808
  0x00000000032b87a2: cmp    0x120(%r9),%r8
  0x00000000032b87a9: jne    0x00000000032b87b8
  0x00000000032b87ab: addq   $0x1,0x128(%r9)
  0x00000000032b87b3: jmpq   0x00000000032b8808
  0x00000000032b87b8: cmpq   $0x0,0x110(%r9)
  0x00000000032b87c3: jne    0x00000000032b87dc
  0x00000000032b87c5: mov    %r8,0x110(%r9)
  0x00000000032b87cc: movq   $0x1,0x118(%r9)
  0x00000000032b87d7: jmpq   0x00000000032b8808
  0x00000000032b87dc: cmpq   $0x0,0x120(%r9)
  0x00000000032b87e7: jne    0x00000000032b8800
  0x00000000032b87e9: mov    %r8,0x120(%r9)
  0x00000000032b87f0: movq   $0x1,0x128(%r9)
  0x00000000032b87fb: jmpq   0x00000000032b8808
  0x00000000032b8800: addq   $0x1,0x108(%r9)
  0x00000000032b8808: mov    $0x0,%r8d
  0x00000000032b880e: mov    $0x0,%r9d
  0x00000000032b8814: mov    %rdx,0x40(%rsp)
  0x00000000032b8819: mov    %rsi,%rdx          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.io.File::isInvalid@13 (line 187)

  0x00000000032b881c: nop
  0x00000000032b881d: nop
  0x00000000032b881e: nop
  0x00000000032b881f: callq  0x00000000031d61a0  ; OopMap{[64]=Oop off=548}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ;   {optimized virtual_call}
  0x00000000032b8824: cmp    $0x0,%eax
  0x00000000032b8827: movabs $0x1c33ed08,%rax   ;   {metadata(method data for {method} {0x000000001c1d37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000032b8831: movabs $0x158,%rsi
  0x00000000032b883b: jge    0x00000000032b884b
  0x00000000032b8841: movabs $0x168,%rsi
  0x00000000032b884b: mov    (%rax,%rsi,1),%rdi
  0x00000000032b884f: lea    0x1(%rdi),%rdi
  0x00000000032b8853: mov    %rdi,(%rax,%rsi,1)
  0x00000000032b8857: jge    0x00000000032b887c  ;*ifge
                                                ; - java.io.File::isInvalid@16 (line 187)

  0x00000000032b885d: movabs $0x1c33ed08,%rax   ;   {metadata(method data for {method} {0x000000001c1d37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000032b8867: incl   0x178(%rax)
  0x00000000032b886d: movabs $0x76b809a28,%rax  ;   {oop(a &apos;java/io/File$PathStatus&apos;)}
  0x00000000032b8877: jmpq   0x00000000032b8886  ;*goto
                                                ; - java.io.File::isInvalid@22 (line 187)

  0x00000000032b887c: movabs $0x76b8099d8,%rax  ;   {oop(a &apos;java/io/File$PathStatus&apos;)}
  0x00000000032b8886: mov    0x40(%rsp),%rdx
  0x00000000032b888b: mov    %rax,%r10
  0x00000000032b888e: shr    $0x3,%r10
  0x00000000032b8892: mov    %r10d,0x14(%rdx)
  0x00000000032b8896: mov    %rdx,%rax
  0x00000000032b8899: shr    $0x9,%rax
  0x00000000032b889d: movabs $0xef3d000,%rsi
  0x00000000032b88a7: movb   $0x0,(%rax,%rsi,1)  ;*putfield status
                                                ; - java.io.File::isInvalid@28 (line 187)

  0x00000000032b88ab: mov    0x14(%rdx),%eax
  0x00000000032b88ae: shl    $0x3,%rax          ;*getfield status
                                                ; - java.io.File::isInvalid@32 (line 190)

  0x00000000032b88b2: movabs $0x76b8099d8,%r10  ;   {oop(a &apos;java/io/File$PathStatus&apos;)}
  0x00000000032b88bc: cmp    %r10,%rax
  0x00000000032b88bf: movabs $0x1c33ed08,%rax   ;   {metadata(method data for {method} {0x000000001c1d37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000032b88c9: movabs $0x190,%rsi
  0x00000000032b88d3: jne    0x00000000032b88e3
  0x00000000032b88d9: movabs $0x1a0,%rsi
  0x00000000032b88e3: mov    (%rax,%rsi,1),%rdi
  0x00000000032b88e7: lea    0x1(%rdi),%rdi
  0x00000000032b88eb: mov    %rdi,(%rax,%rsi,1)
  0x00000000032b88ef: jne    0x00000000032b890f  ;*if_acmpne
                                                ; - java.io.File::isInvalid@38 (line 190)

  0x00000000032b88f5: movabs $0x1c33ed08,%rax   ;   {metadata(method data for {method} {0x000000001c1d37b0} &apos;isInvalid&apos; &apos;()Z&apos; in &apos;java/io/File&apos;)}
  0x00000000032b88ff: incl   0x1b0(%rax)
  0x00000000032b8905: mov    $0x1,%eax
  0x00000000032b890a: jmpq   0x00000000032b8914  ;*goto
                                                ; - java.io.File::isInvalid@42 (line 190)

  0x00000000032b890f: mov    $0x0,%eax          ;*ireturn
                                                ; - java.io.File::isInvalid@46 (line 190)

  0x00000000032b8914: and    $0x1,%eax
  0x00000000032b8917: add    $0x50,%rsp
  0x00000000032b891b: pop    %rbp
  0x00000000032b891c: test   %eax,-0x9c8822(%rip)        # 0x00000000028f0100
                                                ;   {poll_return}
  0x00000000032b8922: retq   
  0x00000000032b8923: mov    %r8,0x8(%rsp)
  0x00000000032b8928: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b8930: callq  0x0000000003291d60  ; OopMap{rdx=Oop off=821}
                                                ;*synchronization entry
                                                ; - java.io.File::isInvalid@-1 (line 186)
                                                ;   {runtime_call}
  0x00000000032b8935: jmpq   0x00000000032b8663
  0x00000000032b893a: callq  0x000000000328d680  ; OopMap{rdx=Oop rsi=Oop off=831}
                                                ;*invokevirtual indexOf
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ;   {runtime_call}
  0x00000000032b893f: mov    %r8,0x8(%rsp)
  0x00000000032b8944: movq   $0xffffffffffffffff,(%rsp)
  0x00000000032b894c: callq  0x0000000003291d60  ; OopMap{rdx=Oop rsi=Oop off=849}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ; - java.io.File::isInvalid@13 (line 187)
                                                ;   {runtime_call}
  0x00000000032b8951: jmpq   0x00000000032b8777
  0x00000000032b8956: nop
  0x00000000032b8957: nop
  0x00000000032b8958: mov    0x2a8(%r15),%rax
  0x00000000032b895f: movabs $0x0,%r10
  0x00000000032b8969: mov    %r10,0x2a8(%r15)
  0x00000000032b8970: movabs $0x0,%r10
  0x00000000032b897a: mov    %r10,0x2b0(%r15)
  0x00000000032b8981: add    $0x50,%rsp
  0x00000000032b8985: pop    %rbp
  0x00000000032b8986: jmpq   0x000000000328cde0  ;   {runtime_call}
  0x00000000032b898b: hlt    
  0x00000000032b898c: hlt    
  0x00000000032b898d: hlt    
  0x00000000032b898e: hlt    
  0x00000000032b898f: hlt    
  0x00000000032b8990: hlt    
  0x00000000032b8991: hlt    
  0x00000000032b8992: hlt    
  0x00000000032b8993: hlt    
  0x00000000032b8994: hlt    
  0x00000000032b8995: hlt    
  0x00000000032b8996: hlt    
  0x00000000032b8997: hlt    
  0x00000000032b8998: hlt    
  0x00000000032b8999: hlt    
  0x00000000032b899a: hlt    
  0x00000000032b899b: hlt    
  0x00000000032b899c: hlt    
  0x00000000032b899d: hlt    
  0x00000000032b899e: hlt    
  0x00000000032b899f: hlt    
[Stub Code]
  0x00000000032b89a0: nop                       ;   {no_reloc}
  0x00000000032b89a1: nop
  0x00000000032b89a2: nop
  0x00000000032b89a3: nop
  0x00000000032b89a4: nop
  0x00000000032b89a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000000032b89af: jmpq   0x00000000032b89af  ;   {runtime_call}
[Exception Handler]
  0x00000000032b89b4: callq  0x000000000328f520  ;   {runtime_call}
  0x00000000032b89b9: mov    %rsp,-0x28(%rsp)
  0x00000000032b89be: sub    $0x80,%rsp
  0x00000000032b89c5: mov    %rax,0x78(%rsp)
  0x00000000032b89ca: mov    %rcx,0x70(%rsp)
  0x00000000032b89cf: mov    %rdx,0x68(%rsp)
  0x00000000032b89d4: mov    %rbx,0x60(%rsp)
  0x00000000032b89d9: mov    %rbp,0x50(%rsp)
  0x00000000032b89de: mov    %rsi,0x48(%rsp)
  0x00000000032b89e3: mov    %rdi,0x40(%rsp)
  0x00000000032b89e8: mov    %r8,0x38(%rsp)
  0x00000000032b89ed: mov    %r9,0x30(%rsp)
  0x00000000032b89f2: mov    %r10,0x28(%rsp)
  0x00000000032b89f7: mov    %r11,0x20(%rsp)
  0x00000000032b89fc: mov    %r12,0x18(%rsp)
  0x00000000032b8a01: mov    %r13,0x10(%rsp)
  0x00000000032b8a06: mov    %r14,0x8(%rsp)
  0x00000000032b8a0b: mov    %r15,(%rsp)
  0x00000000032b8a0f: movabs $0x55d17cb0,%rcx   ;   {external_word}
  0x00000000032b8a19: movabs $0x32b89b9,%rdx    ;   {internal_word}
  0x00000000032b8a23: mov    %rsp,%r8
  0x00000000032b8a26: and    $0xfffffffffffffff0,%rsp
  0x00000000032b8a2a: callq  0x00000000559d3300  ;   {runtime_call}
  0x00000000032b8a2f: hlt    
[Deopt Handler Code]
  0x00000000032b8a30: movabs $0x32b8a30,%r10    ;   {section_word}
  0x00000000032b8a3a: push   %r10
  0x00000000032b8a3c: jmpq   0x00000000031d7600  ;   {runtime_call}
  0x00000000032b8a41: hlt    
  0x00000000032b8a42: hlt    
  0x00000000032b8a43: hlt    
  0x00000000032b8a44: hlt    
  0x00000000032b8a45: hlt    
  0x00000000032b8a46: hlt    
  0x00000000032b8a47: hlt    
<nmethod compile_id='99' compiler='C1' level='3' entry='0x00000000032b8600' size='1944' address='0x00000000032b8490' relocation_offset='288' insts_offset='368' stub_offset='1296' scopes_data_offset='1480' scopes_pcs_offset='1616' dependencies_offset='1920' nul_chk_table_offset='1928' method='java/io/File isInvalid ()Z' bytes='47' count='1805' iicount='1805' stamp='1.311'/>
<tty_done stamp='1.809'/>
</tty>
<compilation_log thread='23880'>
<start_compile_thread name='C1 CompilerThread3' thread='23880' process='17108' stamp='0.450'/>
<task compile_id='7' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='3841' iicount='3841' level='3' stamp='0.453'>
<phase name='buildIR' stamp='0.453'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' iicount='3841'/>
<parse method='832'  stamp='0.453'>
<bc code='183' bci='5'/>
<method id='834' holder='793' name='appendNull' return='793' flags='2' bytes='56' iicount='1'/>
<call method='834' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='722' name='int'/>
<method id='836' holder='730' name='length' return='722' flags='1' bytes='6' iicount='37355'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.453'/>
</parse>
<bc code='183' bci='21'/>
<type id='724' name='void'/>
<method id='838' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='76130'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='17'/>
<method id='840' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1499'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='842' name='java/util/Arrays' flags='1'/>
<method id='843' holder='842' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1554'/>
<call method='843' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='843'>
<bc code='184' bci='11'/>
<klass id='845' name='java/lang/Math' flags='17'/>
<method id='846' holder='845' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='11794'/>
<call method='846' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<parse_done stamp='0.453'/>
</parse>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='848' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15493'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.453'/>
</parse>
<parse_done stamp='0.453'/>
</parse>
<bc code='182' bci='35'/>
<method id='850' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='3909'/>
<call method='850' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.453'/>
</parse>
<phase name='optimize_blocks' stamp='0.453'>
<phase_done name='optimize_blocks' stamp='0.453'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.453'>
<phase_done name='rangeCheckElimination' stamp='0.453'/>
</phase>
<phase name='optimize_null_checks' stamp='0.453'>
<phase_done name='optimize_null_checks' stamp='0.453'/>
</phase>
<phase_done name='buildIR' stamp='0.453'/>
</phase>
<phase name='emit_lir' stamp='0.453'>
<phase name='lirGeneration' stamp='0.453'>
<phase_done name='lirGeneration' stamp='0.454'/>
</phase>
<phase name='linearScan' stamp='0.454'>
<phase_done name='linearScan' stamp='0.454'/>
</phase>
<phase_done name='emit_lir' stamp='0.454'/>
</phase>
<phase name='codeemit' stamp='0.454'>
<phase_done name='codeemit' stamp='0.454'/>
</phase>
<phase name='codeinstall' stamp='0.454'>
<phase_done name='codeinstall' stamp='0.463'/>
</phase>
<code_cache total_blobs='233' nmethods='2' adapters='153' free_code_cache='250562240'/>
<task_done success='1' nmsize='1880' count='3843' inlined_bytes='63' stamp='0.463'/>
</task>
<task compile_id='10' method='java/util/Hashtable get (Ljava/lang/Object;)Ljava/lang/Object;' bytes='69' count='397' backedge_count='41' iicount='397' level='3' stamp='0.463'>
<phase name='buildIR' stamp='0.463'>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='765' name='java/util/Hashtable' flags='1'/>
<method id='832' holder='765' name='get' return='729' arguments='729' flags='33' bytes='69' iicount='397'/>
<parse method='832'  stamp='0.463'>
<bc code='182' bci='6'/>
<type id='722' name='int'/>
<method id='836' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='857'/>
<call method='836' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='45'/>
<type id='716' name='boolean'/>
<method id='837' holder='729' name='equals' return='716' arguments='729' flags='1' bytes='11' iicount='1'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.463'/>
</parse>
<phase name='optimize_blocks' stamp='0.463'>
<phase_done name='optimize_blocks' stamp='0.463'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.463'>
<phase_done name='rangeCheckElimination' stamp='0.463'/>
</phase>
<phase name='optimize_null_checks' stamp='0.463'>
<phase_done name='optimize_null_checks' stamp='0.463'/>
</phase>
<phase_done name='buildIR' stamp='0.463'/>
</phase>
<phase name='emit_lir' stamp='0.463'>
<phase name='lirGeneration' stamp='0.463'>
<phase_done name='lirGeneration' stamp='0.463'/>
</phase>
<phase name='linearScan' stamp='0.463'>
<phase_done name='linearScan' stamp='0.463'/>
</phase>
<phase_done name='emit_lir' stamp='0.463'/>
</phase>
<phase name='codeemit' stamp='0.463'>
<phase_done name='codeemit' stamp='0.464'/>
</phase>
<phase name='codeinstall' stamp='0.464'>
<phase_done name='codeinstall' stamp='0.473'/>
</phase>
<code_cache total_blobs='240' nmethods='3' adapters='154' free_code_cache='250557696'/>
<task_done success='1' nmsize='1592' count='404' backedge_count='48' stamp='0.473'/>
</task>
<task compile_id='11' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='2568' iicount='2568' level='3' stamp='0.473'>
<phase name='buildIR' stamp='0.473'>
<klass id='741' name='java/lang/SecurityManager' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='832' holder='735' name='getSecurityManager' return='741' flags='9' bytes='4' iicount='2568'/>
<parse method='832'  stamp='0.473'>
<parse_done stamp='0.473'/>
</parse>
<phase name='optimize_blocks' stamp='0.473'>
<phase_done name='optimize_blocks' stamp='0.473'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.473'>
<phase_done name='rangeCheckElimination' stamp='0.473'/>
</phase>
<phase name='optimize_null_checks' stamp='0.473'>
<phase_done name='optimize_null_checks' stamp='0.473'/>
</phase>
<phase_done name='buildIR' stamp='0.473'/>
</phase>
<phase name='emit_lir' stamp='0.473'>
<phase name='lirGeneration' stamp='0.473'>
<phase_done name='lirGeneration' stamp='0.473'/>
</phase>
<phase name='linearScan' stamp='0.473'>
<phase_done name='linearScan' stamp='0.473'/>
</phase>
<phase_done name='emit_lir' stamp='0.473'/>
</phase>
<phase name='codeemit' stamp='0.473'>
<phase_done name='codeemit' stamp='0.473'/>
</phase>
<phase name='codeinstall' stamp='0.473'>
<phase_done name='codeinstall' stamp='0.475'/>
</phase>
<code_cache total_blobs='242' nmethods='4' adapters='154' free_code_cache='250556480'/>
<task_done success='1' nmsize='336' count='2568' stamp='0.475'/>
</task>
<task compile_id='15' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='3456' iicount='3456' level='3' stamp='0.476'>
<phase name='buildIR' stamp='0.476'>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' iicount='3460'/>
<parse method='832'  stamp='0.476'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='834' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='22508'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<parse_done stamp='0.476'/>
</parse>
<bc code='183' bci='13'/>
<klass id='836' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='839' name='java/util/Arrays' flags='1'/>
<method id='840' holder='839' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='4690'/>
<call method='840' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.476'/>
</parse>
<phase name='optimize_blocks' stamp='0.476'>
<phase_done name='optimize_blocks' stamp='0.476'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.476'>
<phase_done name='rangeCheckElimination' stamp='0.476'/>
</phase>
<phase name='optimize_null_checks' stamp='0.476'>
<phase_done name='optimize_null_checks' stamp='0.476'/>
</phase>
<phase_done name='buildIR' stamp='0.476'/>
</phase>
<phase name='emit_lir' stamp='0.476'>
<phase name='lirGeneration' stamp='0.476'>
<phase_done name='lirGeneration' stamp='0.476'/>
</phase>
<phase name='linearScan' stamp='0.476'>
<phase_done name='linearScan' stamp='0.476'/>
</phase>
<phase_done name='emit_lir' stamp='0.476'/>
</phase>
<phase name='codeemit' stamp='0.476'>
<phase_done name='codeemit' stamp='0.476'/>
</phase>
<phase name='codeinstall' stamp='0.476'>
<phase_done name='codeinstall' stamp='0.483'/>
</phase>
<code_cache total_blobs='247' nmethods='5' adapters='156' free_code_cache='250552320'/>
<task_done success='1' nmsize='1272' count='3535' inlined_bytes='1' stamp='0.483'/>
</task>
<task compile_id='19' method='java/util/HashMap putVal (ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object;' bytes='300' count='1422' backedge_count='141' iicount='1422' level='3' stamp='0.483'>
<phase name='buildIR' stamp='0.487'>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='722' name='int'/>
<type id='716' name='boolean'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='putVal' return='729' arguments='722 729 729 716 716' flags='16' bytes='300' iicount='1422'/>
<parse method='833'  stamp='0.487'>
<bc code='182' bci='20'/>
<klass id='838' name='[Ljava/util/HashMap$Node;' flags='1040'/>
<method id='839' holder='832' name='resize' return='838' flags='16' bytes='359' iicount='92'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='56'/>
<klass id='837' name='java/util/HashMap$Node' flags='8'/>
<method id='841' holder='832' name='newNode' return='837' arguments='722 729 729 837' flags='0' bytes='13' iicount='831'/>
<call method='841' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='91'/>
<method id='842' holder='729' name='equals' return='716' arguments='729' flags='1' bytes='11' iicount='1'/>
<call method='842' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='123'/>
<klass id='843' name='java/util/HashMap$TreeNode' flags='24'/>
<method id='844' holder='843' name='putTreeVal' return='843' arguments='832 838 722 729 729' flags='16' bytes='314' iicount='1'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='152'/>
<call method='841' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='169'/>
<type id='724' name='void'/>
<method id='845' holder='832' name='treeifyBin' return='724' arguments='838 722' flags='16' bytes='110' iicount='1'/>
<call method='845' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='203'/>
<call method='842' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='253'/>
<method id='847' holder='832' name='afterNodeAccess' return='724' arguments='837' flags='0' bytes='1' iicount='27'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='288'/>
<call method='839' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='295'/>
<method id='848' holder='832' name='afterNodeInsertion' return='724' arguments='716' flags='0' bytes='1' iicount='831'/>
<call method='848' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.488'/>
</parse>
<phase name='optimize_blocks' stamp='0.488'>
<phase_done name='optimize_blocks' stamp='0.488'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.488'>
<phase_done name='rangeCheckElimination' stamp='0.488'/>
</phase>
<phase name='optimize_null_checks' stamp='0.488'>
<phase_done name='optimize_null_checks' stamp='0.488'/>
</phase>
<phase_done name='buildIR' stamp='0.488'/>
</phase>
<phase name='emit_lir' stamp='0.488'>
<phase name='lirGeneration' stamp='0.488'>
<phase_done name='lirGeneration' stamp='0.488'/>
</phase>
<phase name='linearScan' stamp='0.488'>
<phase_done name='linearScan' stamp='0.489'/>
</phase>
<phase_done name='emit_lir' stamp='0.489'/>
</phase>
<phase name='codeemit' stamp='0.489'>
<phase_done name='codeemit' stamp='0.489'/>
</phase>
<phase name='codeinstall' stamp='0.489'>
<phase_done name='codeinstall' stamp='0.508'/>
</phase>
<code_cache total_blobs='255' nmethods='8' adapters='161' free_code_cache='250539072'/>
<task_done success='1' nmsize='4856' count='1423' backedge_count='141' stamp='0.508'/>
</task>
<task compile_id='17' method='java/lang/String indexOf (I)I' bytes='7' count='3620' iicount='3620' level='3' stamp='0.508'>
<phase name='buildIR' stamp='0.508'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' iicount='3620'/>
<parse method='832'  stamp='0.508'>
<bc code='182' bci='3'/>
<method id='834' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='3794'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.508'/>
</parse>
<phase name='optimize_blocks' stamp='0.508'>
<phase_done name='optimize_blocks' stamp='0.508'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.508'>
<phase_done name='rangeCheckElimination' stamp='0.508'/>
</phase>
<phase name='optimize_null_checks' stamp='0.508'>
<phase_done name='optimize_null_checks' stamp='0.508'/>
</phase>
<phase_done name='buildIR' stamp='0.508'/>
</phase>
<phase name='emit_lir' stamp='0.508'>
<phase name='lirGeneration' stamp='0.508'>
<phase_done name='lirGeneration' stamp='0.508'/>
</phase>
<phase name='linearScan' stamp='0.508'>
<phase_done name='linearScan' stamp='0.508'/>
</phase>
<phase_done name='emit_lir' stamp='0.508'/>
</phase>
<phase name='codeemit' stamp='0.508'>
<phase_done name='codeemit' stamp='0.508'/>
</phase>
<phase name='codeinstall' stamp='0.508'>
<phase_done name='codeinstall' stamp='0.514'/>
</phase>
<code_cache total_blobs='262' nmethods='10' adapters='163' free_code_cache='250518016'/>
<task_done success='1' nmsize='520' count='3623' stamp='0.515'/>
</task>
<task compile_id='29' method='java/lang/String startsWith (Ljava/lang/String;)Z' bytes='7' count='1058' iicount='1058' level='3' stamp='0.515'>
<phase name='buildIR' stamp='0.519'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730' flags='1' bytes='7' iicount='1058'/>
<parse method='832'  stamp='0.519'>
<bc code='182' bci='3'/>
<type id='722' name='int'/>
<method id='834' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' iicount='2708'/>
<call method='834' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.519'/>
</parse>
<phase name='optimize_blocks' stamp='0.519'>
<phase_done name='optimize_blocks' stamp='0.519'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.519'>
<phase_done name='rangeCheckElimination' stamp='0.519'/>
</phase>
<phase name='optimize_null_checks' stamp='0.519'>
<phase_done name='optimize_null_checks' stamp='0.519'/>
</phase>
<phase_done name='buildIR' stamp='0.519'/>
</phase>
<phase name='emit_lir' stamp='0.519'>
<phase name='lirGeneration' stamp='0.519'>
<phase_done name='lirGeneration' stamp='0.519'/>
</phase>
<phase name='linearScan' stamp='0.519'>
<phase_done name='linearScan' stamp='0.519'/>
</phase>
<phase_done name='emit_lir' stamp='0.519'/>
</phase>
<phase name='codeemit' stamp='0.519'>
<phase_done name='codeemit' stamp='0.519'/>
</phase>
<phase name='codeinstall' stamp='0.519'>
<phase_done name='codeinstall' stamp='0.521'/>
</phase>
<code_cache total_blobs='261' nmethods='12' adapters='163' free_code_cache='250532160'/>
<task_done success='1' nmsize='520' count='1083' stamp='0.521'/>
</task>
<task compile_id='35' method='java/lang/String replace (CC)Ljava/lang/String;' bytes='127' count='372' backedge_count='26730' iicount='372' level='3' stamp='0.521'>
<phase name='buildIR' stamp='0.521'>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='730' name='replace' return='730' arguments='717 717' flags='1' bytes='127' iicount='374'/>
<parse method='832'  stamp='0.521'>
<bc code='183' bci='121'/>
<type id='724' name='void'/>
<klass id='821' name='[C' flags='1041'/>
<type id='716' name='boolean'/>
<method id='834' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1563'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='836' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='22857'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='0.528'/>
</parse>
<parse_done stamp='0.528'/>
</parse>
<parse_done stamp='0.528'/>
</parse>
<phase name='optimize_blocks' stamp='0.528'>
<phase_done name='optimize_blocks' stamp='0.528'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.528'>
<phase_done name='rangeCheckElimination' stamp='0.528'/>
</phase>
<phase name='optimize_null_checks' stamp='0.528'>
<phase_done name='optimize_null_checks' stamp='0.528'/>
</phase>
<phase_done name='buildIR' stamp='0.528'/>
</phase>
<phase name='emit_lir' stamp='0.528'>
<phase name='lirGeneration' stamp='0.528'>
<phase_done name='lirGeneration' stamp='0.528'/>
</phase>
<phase name='linearScan' stamp='0.528'>
<phase_done name='linearScan' stamp='0.528'/>
</phase>
<phase_done name='emit_lir' stamp='0.528'/>
</phase>
<phase name='codeemit' stamp='0.528'>
<phase_done name='codeemit' stamp='0.528'/>
</phase>
<phase name='codeinstall' stamp='0.528'>
<phase_done name='codeinstall' stamp='0.536'/>
</phase>
<code_cache total_blobs='269' nmethods='16' adapters='166' free_code_cache='250521280'/>
<task_done success='1' nmsize='1712' count='377' backedge_count='26990' inlined_bytes='11' stamp='0.536'/>
</task>
<task compile_id='32' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='2721' backedge_count='3431' iicount='2721' level='3' stamp='0.536'>
<phase name='buildIR' stamp='0.536'>
<type id='716' name='boolean'/>
<klass id='730' name='java/lang/String' flags='17'/>
<type id='722' name='int'/>
<method id='832' holder='730' name='startsWith' return='716' arguments='730 722' flags='1' bytes='72' iicount='2721'/>
<parse method='832'  stamp='0.536'>
<parse_done stamp='0.536'/>
</parse>
<phase name='optimize_blocks' stamp='0.536'>
<phase_done name='optimize_blocks' stamp='0.536'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.536'>
<phase_done name='rangeCheckElimination' stamp='0.536'/>
</phase>
<phase name='optimize_null_checks' stamp='0.536'>
<phase_done name='optimize_null_checks' stamp='0.537'/>
</phase>
<phase_done name='buildIR' stamp='0.537'/>
</phase>
<phase name='emit_lir' stamp='0.537'>
<phase name='lirGeneration' stamp='0.537'>
<phase_done name='lirGeneration' stamp='0.537'/>
</phase>
<phase name='linearScan' stamp='0.537'>
<phase_done name='linearScan' stamp='0.537'/>
</phase>
<phase_done name='emit_lir' stamp='0.537'/>
</phase>
<phase name='codeemit' stamp='0.537'>
<phase_done name='codeemit' stamp='0.537'/>
</phase>
<phase name='codeinstall' stamp='0.537'>
<phase_done name='codeinstall' stamp='0.544'/>
</phase>
<code_cache total_blobs='276' nmethods='18' adapters='169' free_code_cache='250504512'/>
<task_done success='1' nmsize='816' count='2721' backedge_count='3431' stamp='0.544'/>
</task>
<task compile_id='41' method='java/lang/String getChars (II[CI)V' bytes='62' count='3968' iicount='3968' level='3' stamp='0.544'>
<phase name='buildIR' stamp='0.545'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='getChars' return='724' arguments='722 722 821 722' flags='1' bytes='62' iicount='3968'/>
<parse method='832'  stamp='0.545'>
<bc code='183' bci='9'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='835' holder='834' name='&lt;init&gt;' return='724' arguments='722' unloaded='1'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='835' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='836' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15493'/>
<call method='836' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.546'/>
</parse>
<phase name='optimize_blocks' stamp='0.546'>
<phase_done name='optimize_blocks' stamp='0.546'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.546'>
<phase_done name='rangeCheckElimination' stamp='0.546'/>
</phase>
<phase name='optimize_null_checks' stamp='0.546'>
<phase_done name='optimize_null_checks' stamp='0.546'/>
</phase>
<phase_done name='buildIR' stamp='0.546'/>
</phase>
<phase name='emit_lir' stamp='0.546'>
<phase name='lirGeneration' stamp='0.546'>
<phase_done name='lirGeneration' stamp='0.546'/>
</phase>
<phase name='linearScan' stamp='0.546'>
<phase_done name='linearScan' stamp='0.546'/>
</phase>
<phase_done name='emit_lir' stamp='0.546'/>
</phase>
<phase name='codeemit' stamp='0.546'>
<phase_done name='codeemit' stamp='0.546'/>
</phase>
<phase name='codeinstall' stamp='0.546'>
<phase_done name='codeinstall' stamp='0.550'/>
</phase>
<code_cache total_blobs='277' nmethods='20' adapters='169' free_code_cache='250507584'/>
<task_done success='1' nmsize='1080' count='3970' stamp='0.550'/>
</task>
<task compile_id='36' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='4763' iicount='4763' level='3' stamp='0.550'>
<phase name='buildIR' stamp='0.550'>
<klass id='821' name='[C' flags='1041'/>
<type id='722' name='int'/>
<klass id='832' name='java/util/Arrays' flags='1'/>
<method id='833' holder='832' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='4763'/>
<parse method='833'  stamp='0.550'>
<bc code='183' bci='16'/>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='836' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='1129'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='838' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2350'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='840' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='22940'/>
<call method='840' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='840'>
<parse_done stamp='0.551'/>
</parse>
<parse_done stamp='0.551'/>
</parse>
<parse_done stamp='0.551'/>
</parse>
<bc code='182' bci='20'/>
<method id='842' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='6'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<method id='844' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='6'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.553'/>
</parse>
<bc code='182' bci='25'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='847' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='2931'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='2'/>
<method id='849' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='7' compiler='C1' level='3' iicount='3894'/>
<call method='849' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.553'/>
</parse>
<bc code='182' bci='29'/>
<call method='842' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='842'>
<bc code='183' bci='2'/>
<call method='844' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.553'/>
</parse>
<bc code='182' bci='32'/>
<method id='851' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='1132'/>
<call method='851' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<bc code='183' bci='13'/>
<method id='853' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='3576'/>
<call method='853' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.553'/>
</parse>
<bc code='183' bci='35'/>
<klass id='835' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='855' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='857' name='java/lang/Math' flags='17'/>
<method id='858' holder='857' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='12214'/>
<call method='858' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<parse_done stamp='0.553'/>
</parse>
<bc code='184' bci='57'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='860' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15493'/>
<call method='860' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.553'/>
</parse>
<phase name='optimize_blocks' stamp='0.553'>
<phase_done name='optimize_blocks' stamp='0.553'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.553'>
<phase_done name='rangeCheckElimination' stamp='0.553'/>
</phase>
<phase name='optimize_null_checks' stamp='0.553'>
<phase_done name='optimize_null_checks' stamp='0.553'/>
</phase>
<phase_done name='buildIR' stamp='0.553'/>
</phase>
<phase name='emit_lir' stamp='0.553'>
<phase name='lirGeneration' stamp='0.553'>
<phase_done name='lirGeneration' stamp='0.553'/>
</phase>
<phase name='linearScan' stamp='0.553'>
<phase_done name='linearScan' stamp='0.553'/>
</phase>
<phase_done name='emit_lir' stamp='0.553'/>
</phase>
<phase name='codeemit' stamp='0.553'>
<phase_done name='codeemit' stamp='0.553'/>
</phase>
<phase name='codeinstall' stamp='0.553'>
<phase_done name='codeinstall' stamp='0.564'/>
</phase>
<code_cache total_blobs='285' nmethods='23' adapters='171' free_code_cache='250482880'/>
<task_done success='1' nmsize='2872' count='4770' inlined_bytes='72' stamp='0.564'/>
</task>
<task compile_id='26' method='java/util/TreeMap rightOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='641' iicount='641' level='3' stamp='0.567'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='641' stamp='0.567'/>
</task>
<task compile_id='24' method='java/util/HashMap$Node getKey ()Ljava/lang/Object;' bytes='5' count='524' iicount='524' level='1' stamp='0.567'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='524' stamp='0.567'/>
</task>
<task compile_id='43' method='java/util/zip/ZipFile ensureOpen ()V' bytes='37' count='1664' iicount='1664' level='3' stamp='0.568'>
<phase name='buildIR' stamp='0.568'>
<type id='724' name='void'/>
<klass id='832' name='java/util/zip/ZipFile' flags='1'/>
<method id='833' holder='832' name='ensureOpen' return='724' flags='2' bytes='37' iicount='1664'/>
<parse method='833'  stamp='0.568'>
<bc code='183' bci='13'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='835' name='java/lang/IllegalStateException' unloaded='1'/>
<method id='837' holder='835' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='32'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.568'/>
</parse>
<phase name='optimize_blocks' stamp='0.568'>
<phase_done name='optimize_blocks' stamp='0.568'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.568'>
<phase_done name='rangeCheckElimination' stamp='0.568'/>
</phase>
<phase name='optimize_null_checks' stamp='0.568'>
<phase_done name='optimize_null_checks' stamp='0.568'/>
</phase>
<phase_done name='buildIR' stamp='0.568'/>
</phase>
<phase name='emit_lir' stamp='0.568'>
<phase name='lirGeneration' stamp='0.568'>
<phase_done name='lirGeneration' stamp='0.568'/>
</phase>
<phase name='linearScan' stamp='0.568'>
<phase_done name='linearScan' stamp='0.568'/>
</phase>
<phase_done name='emit_lir' stamp='0.568'/>
</phase>
<phase name='codeemit' stamp='0.568'>
<phase_done name='codeemit' stamp='0.568'/>
</phase>
<phase name='codeinstall' stamp='0.568'>
<phase_done name='codeinstall' stamp='0.576'/>
</phase>
<code_cache total_blobs='288' nmethods='30' adapters='171' free_code_cache='250499392'/>
<task_done success='1' nmsize='728' count='1664' stamp='0.576'/>
</task>
<task compile_id='50' method='java/lang/String lastIndexOf (II)I' bytes='52' count='718' backedge_count='53699' iicount='718' level='3' stamp='0.576'>
<phase name='buildIR' stamp='0.576'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='lastIndexOf' return='722' arguments='722 722' flags='1' bytes='52' iicount='718'/>
<parse method='832'  stamp='0.576'>
<bc code='184' bci='16'/>
<klass id='834' name='java/lang/Math' flags='17'/>
<method id='835' holder='834' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='12268'/>
<call method='835' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<parse_done stamp='0.577'/>
</parse>
<bc code='183' bci='48'/>
<method id='837' holder='730' name='lastIndexOfSupplementary' return='722' arguments='722 722' flags='2' bytes='70' iicount='1'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.577'/>
</parse>
<phase name='optimize_blocks' stamp='0.577'>
<phase_done name='optimize_blocks' stamp='0.577'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.577'>
<phase_done name='rangeCheckElimination' stamp='0.577'/>
</phase>
<phase name='optimize_null_checks' stamp='0.577'>
<phase_done name='optimize_null_checks' stamp='0.577'/>
</phase>
<phase_done name='buildIR' stamp='0.577'/>
</phase>
<phase name='emit_lir' stamp='0.577'>
<phase name='lirGeneration' stamp='0.577'>
<phase_done name='lirGeneration' stamp='0.577'/>
</phase>
<phase name='linearScan' stamp='0.577'>
<phase_done name='linearScan' stamp='0.577'/>
</phase>
<phase_done name='emit_lir' stamp='0.577'/>
</phase>
<phase name='codeemit' stamp='0.577'>
<phase_done name='codeemit' stamp='0.577'/>
</phase>
<phase name='codeinstall' stamp='0.577'>
<phase_done name='codeinstall' stamp='0.654'/>
</phase>
<code_cache total_blobs='293' nmethods='35' adapters='171' free_code_cache='250488640'/>
<task_done success='1' nmsize='936' count='718' backedge_count='53699' inlined_bytes='11' stamp='0.654'/>
</task>
<task compile_id='57' method='java/lang/StringBuilder toString ()Ljava/lang/String;' bytes='17' count='1152' iicount='1152' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1152' stamp='0.654'/>
</task>
<task compile_id='53' method='java/lang/StringBuilder append (Ljava/lang/String;)Ljava/lang/StringBuilder;' bytes='8' count='2951' iicount='2951' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='2951' stamp='0.654'/>
</task>
<task compile_id='49' method='java/net/URL getFile ()Ljava/lang/String;' bytes='5' count='1283' iicount='1283' level='1' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1283' stamp='0.654'/>
</task>
<task compile_id='47' method='java/nio/charset/CharsetEncoder implReset ()V' bytes='1' count='1664' iicount='1664' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1664' stamp='0.654'/>
</task>
<task compile_id='46' method='java/nio/charset/CharsetEncoder reset ()Ljava/nio/charset/CharsetEncoder;' bytes='11' count='1664' iicount='1664' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1664' stamp='0.654'/>
</task>
<task compile_id='45' method='java/util/zip/ZipCoder encoder ()Ljava/nio/charset/CharsetEncoder;' bytes='35' count='1664' iicount='1664' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1664' stamp='0.654'/>
</task>
<task compile_id='44' method='java/util/zip/ZipCoder getBytes (Ljava/lang/String;)[B' bytes='192' count='1664' iicount='1664' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1664' stamp='0.654'/>
</task>
<task compile_id='42' method='java/lang/String substring (II)Ljava/lang/String;' bytes='79' count='1165' iicount='1165' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1165' stamp='0.654'/>
</task>
<task compile_id='34' method='java/net/URL getProtocol ()Ljava/lang/String;' bytes='5' count='1678' iicount='1678' level='1' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1678' stamp='0.654'/>
</task>
<task compile_id='30' method='java/io/WinNTFileSystem isLetter (C)Z' bytes='30' count='2698' iicount='2698' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='2698' stamp='0.654'/>
</task>
<task compile_id='25' method='java/lang/Character toUpperCase (C)C' bytes='6' count='504' iicount='504' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='504' stamp='0.654'/>
</task>
<task compile_id='20' method='java/io/WinNTFileSystem prefixLength (Ljava/lang/String;)I' bytes='91' count='1806' iicount='1806' level='3' stamp='0.654'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1806' stamp='0.654'/>
</task>
<task compile_id='52' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='193127' iicount='193127' level='2' stamp='0.654'>
<phase name='buildIR' stamp='0.654'>
<type id='722' name='int'/>
<klass id='832' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='12' iicount='193127'/>
<parse method='833'  stamp='0.654'>
<bc code='182' bci='8'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='837' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' iicount='191842'/>
<call method='837' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.654'/>
</parse>
<phase name='optimize_blocks' stamp='0.654'>
<phase_done name='optimize_blocks' stamp='0.654'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.654'>
<phase_done name='rangeCheckElimination' stamp='0.654'/>
</phase>
<phase name='optimize_null_checks' stamp='0.654'>
<phase_done name='optimize_null_checks' stamp='0.654'/>
</phase>
<phase_done name='buildIR' stamp='0.654'/>
</phase>
<phase name='emit_lir' stamp='0.654'>
<phase name='lirGeneration' stamp='0.654'>
<phase_done name='lirGeneration' stamp='0.654'/>
</phase>
<phase name='linearScan' stamp='0.654'>
<phase_done name='linearScan' stamp='0.654'/>
</phase>
<phase_done name='emit_lir' stamp='0.654'/>
</phase>
<phase name='codeemit' stamp='0.654'>
<phase_done name='codeemit' stamp='0.654'/>
</phase>
<phase name='codeinstall' stamp='0.654'>
<phase_done name='codeinstall' stamp='0.656'/>
</phase>
<code_cache total_blobs='296' nmethods='36' adapters='171' free_code_cache='250476352'/>
<task_done success='1' nmsize='336' count='193127' stamp='0.656'/>
</task>
<task compile_id='55' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='191842' backedge_count='516951' iicount='191842' level='2' stamp='0.656'>
<phase name='buildIR' stamp='0.659'>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='832' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' iicount='191842'/>
<parse method='832'  stamp='0.659'>
<bc code='182' bci='3'/>
<method id='834' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='54' compile_kind='c2n' level='0' iicount='1280'/>
<call method='834' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<bc code='182' bci='18'/>
<type id='716' name='boolean'/>
<method id='835' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1195'/>
<call method='835' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.659'/>
</parse>
<phase name='optimize_blocks' stamp='0.659'>
<phase_done name='optimize_blocks' stamp='0.659'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.659'>
<phase_done name='rangeCheckElimination' stamp='0.659'/>
</phase>
<phase name='optimize_null_checks' stamp='0.659'>
<phase_done name='optimize_null_checks' stamp='0.659'/>
</phase>
<phase_done name='buildIR' stamp='0.659'/>
</phase>
<phase name='emit_lir' stamp='0.659'>
<phase name='lirGeneration' stamp='0.659'>
<phase_done name='lirGeneration' stamp='0.659'/>
</phase>
<phase name='linearScan' stamp='0.659'>
<phase_done name='linearScan' stamp='0.659'/>
</phase>
<phase_done name='emit_lir' stamp='0.659'/>
</phase>
<phase name='codeemit' stamp='0.659'>
<phase_done name='codeemit' stamp='0.659'/>
</phase>
<phase name='codeinstall' stamp='0.659'>
<phase_done name='codeinstall' stamp='0.662'/>
</phase>
<code_cache total_blobs='296' nmethods='38' adapters='171' free_code_cache='250485824'/>
<task_done success='1' nmsize='432' count='191842' backedge_count='532142' stamp='0.662'/>
</task>
<task compile_id='27' method='java/lang/ref/Reference &lt;init&gt; (Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V' bytes='25' count='1548' iicount='1548' level='3' stamp='0.662'>
<phase name='buildIR' stamp='0.662'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/lang/ref/ReferenceQueue' flags='1'/>
<klass id='755' name='java/lang/ref/Reference' flags='1025'/>
<method id='833' holder='755' name='&lt;init&gt;' return='724' arguments='729 832' flags='0' bytes='25' iicount='1548'/>
<parse method='833'  stamp='0.662'>
<bc code='183' bci='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23024'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='755'/>
<parse_done stamp='0.662'/>
</parse>
<parse_done stamp='0.662'/>
</parse>
<phase name='optimize_blocks' stamp='0.662'>
<phase_done name='optimize_blocks' stamp='0.662'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.662'>
<phase_done name='rangeCheckElimination' stamp='0.662'/>
</phase>
<phase name='optimize_null_checks' stamp='0.662'>
<phase_done name='optimize_null_checks' stamp='0.662'/>
</phase>
<phase_done name='buildIR' stamp='0.662'/>
</phase>
<phase name='emit_lir' stamp='0.662'>
<phase name='lirGeneration' stamp='0.662'>
<phase_done name='lirGeneration' stamp='0.662'/>
</phase>
<phase name='linearScan' stamp='0.662'>
<phase_done name='linearScan' stamp='0.662'/>
</phase>
<phase_done name='emit_lir' stamp='0.662'/>
</phase>
<phase name='codeemit' stamp='0.662'>
<phase_done name='codeemit' stamp='0.662'/>
</phase>
<phase name='codeinstall' stamp='0.662'>
<dependency type='no_finalizable_subclasses' ctxk='755'/>
<phase_done name='codeinstall' stamp='0.666'/>
</phase>
<code_cache total_blobs='297' nmethods='39' adapters='171' free_code_cache='250484544'/>
<task_done success='1' nmsize='592' count='1548' inlined_bytes='1' stamp='0.666'/>
</task>
<task compile_id='18' method='java/util/HashMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;' bytes='13' count='1439' iicount='1439' level='3' stamp='0.666'>
<phase name='buildIR' stamp='0.666'>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='put' return='729' arguments='729 729' flags='1' bytes='13' iicount='1439'/>
<parse method='833'  stamp='0.666'>
<bc code='184' bci='2'/>
<type id='722' name='int'/>
<method id='835' holder='832' name='hash' return='722' arguments='729' flags='24' bytes='20' iicount='4859'/>
<call method='835' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='182' bci='9'/>
<method id='837' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='876'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='0.666'/>
</parse>
<bc code='182' bci='9'/>
<type id='716' name='boolean'/>
<method id='838' holder='832' name='putVal' return='729' arguments='722 729 729 716 716' flags='16' bytes='300' compile_id='19' compiler='C1' level='3' iicount='1439'/>
<call method='838' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.666'/>
</parse>
<phase name='optimize_blocks' stamp='0.666'>
<phase_done name='optimize_blocks' stamp='0.666'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.666'>
<phase_done name='rangeCheckElimination' stamp='0.666'/>
</phase>
<phase name='optimize_null_checks' stamp='0.666'>
<phase_done name='optimize_null_checks' stamp='0.667'/>
</phase>
<phase_done name='buildIR' stamp='0.667'/>
</phase>
<phase name='emit_lir' stamp='0.667'>
<phase name='lirGeneration' stamp='0.667'>
<phase_done name='lirGeneration' stamp='0.667'/>
</phase>
<phase name='linearScan' stamp='0.667'>
<phase_done name='linearScan' stamp='0.667'/>
</phase>
<phase_done name='emit_lir' stamp='0.667'/>
</phase>
<phase name='codeemit' stamp='0.667'>
<phase_done name='codeemit' stamp='0.667'/>
</phase>
<phase name='codeinstall' stamp='0.667'>
<phase_done name='codeinstall' stamp='0.673'/>
</phase>
<code_cache total_blobs='299' nmethods='40' adapters='171' free_code_cache='250477376'/>
<task_done success='1' nmsize='952' count='1439' inlined_bytes='20' stamp='0.673'/>
</task>
<task compile_id='56' method='java/util/Vector size ()I' bytes='5' count='1025' iicount='1025' level='1' stamp='0.673'>
<phase name='buildIR' stamp='0.673'>
<type id='722' name='int'/>
<klass id='832' name='java/util/Vector' flags='1'/>
<method id='833' holder='832' name='size' return='722' flags='33' bytes='5' iicount='1025'/>
<parse method='833'  stamp='0.673'>
<parse_done stamp='0.673'/>
</parse>
<phase name='optimize_blocks' stamp='0.673'>
<phase_done name='optimize_blocks' stamp='0.673'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.673'>
<phase_done name='rangeCheckElimination' stamp='0.673'/>
</phase>
<phase name='optimize_null_checks' stamp='0.673'>
<phase_done name='optimize_null_checks' stamp='0.673'/>
</phase>
<phase_done name='buildIR' stamp='0.673'/>
</phase>
<phase name='emit_lir' stamp='0.673'>
<phase name='lirGeneration' stamp='0.673'>
<phase_done name='lirGeneration' stamp='0.673'/>
</phase>
<phase name='linearScan' stamp='0.673'>
<phase_done name='linearScan' stamp='0.673'/>
</phase>
<phase_done name='emit_lir' stamp='0.673'/>
</phase>
<phase name='codeemit' stamp='0.673'>
<phase_done name='codeemit' stamp='0.673'/>
</phase>
<phase name='codeinstall' stamp='0.673'>
<phase_done name='codeinstall' stamp='0.679'/>
</phase>
<code_cache total_blobs='300' nmethods='42' adapters='171' free_code_cache='250480384'/>
<task_done success='1' nmsize='624' count='1025' stamp='0.679'/>
</task>
<task compile_id='59' method='java/lang/reflect/Field getName ()Ljava/lang/String;' bytes='5' count='314' iicount='314' level='1' stamp='0.679'>
<phase name='buildIR' stamp='0.679'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='768' name='java/lang/reflect/Field' flags='17'/>
<method id='832' holder='768' name='getName' return='730' flags='1' bytes='5' iicount='314'/>
<parse method='832'  stamp='0.679'>
<parse_done stamp='0.679'/>
</parse>
<phase name='optimize_blocks' stamp='0.679'>
<phase_done name='optimize_blocks' stamp='0.679'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.679'>
<phase_done name='rangeCheckElimination' stamp='0.679'/>
</phase>
<phase name='optimize_null_checks' stamp='0.679'>
<phase_done name='optimize_null_checks' stamp='0.679'/>
</phase>
<phase_done name='buildIR' stamp='0.679'/>
</phase>
<phase name='emit_lir' stamp='0.679'>
<phase name='lirGeneration' stamp='0.679'>
<phase_done name='lirGeneration' stamp='0.679'/>
</phase>
<phase name='linearScan' stamp='0.679'>
<phase_done name='linearScan' stamp='0.679'/>
</phase>
<phase_done name='emit_lir' stamp='0.679'/>
</phase>
<phase name='codeemit' stamp='0.679'>
<phase_done name='codeemit' stamp='0.679'/>
</phase>
<phase name='codeinstall' stamp='0.679'>
<phase_done name='codeinstall' stamp='0.682'/>
</phase>
<code_cache total_blobs='301' nmethods='43' adapters='171' free_code_cache='250479616'/>
<task_done success='1' nmsize='272' count='314' stamp='0.682'/>
</task>
<task compile_id='62' method='java/util/concurrent/atomic/AtomicInteger getAndIncrement ()I' bytes='12' count='195116' iicount='195123' level='1' stamp='0.703'>
<phase name='buildIR' stamp='0.703'>
<type id='722' name='int'/>
<klass id='832' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='833' holder='832' name='getAndIncrement' return='722' flags='17' bytes='12' compile_id='52' compiler='C1' level='2' iicount='195339'/>
<parse method='833'  stamp='0.703'>
<bc code='182' bci='8'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='836' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' compile_id='55' compiler='C1' level='2' iicount='191842'/>
<call method='836' instr='invokevirtual'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.703'/>
</parse>
<phase name='optimize_blocks' stamp='0.703'>
<phase_done name='optimize_blocks' stamp='0.703'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.703'>
<phase_done name='rangeCheckElimination' stamp='0.703'/>
</phase>
<phase name='optimize_null_checks' stamp='0.703'>
<phase_done name='optimize_null_checks' stamp='0.703'/>
</phase>
<phase_done name='buildIR' stamp='0.703'/>
</phase>
<phase name='emit_lir' stamp='0.703'>
<phase name='lirGeneration' stamp='0.703'>
<phase_done name='lirGeneration' stamp='0.703'/>
</phase>
<phase name='linearScan' stamp='0.703'>
<phase_done name='linearScan' stamp='0.703'/>
</phase>
<phase_done name='emit_lir' stamp='0.703'/>
</phase>
<phase name='codeemit' stamp='0.703'>
<phase_done name='codeemit' stamp='0.703'/>
</phase>
<phase name='codeinstall' stamp='0.703'>
<phase_done name='codeinstall' stamp='0.705'/>
</phase>
<code_cache total_blobs='302' nmethods='44' adapters='171' free_code_cache='250478912'/>
<task_done success='1' nmsize='272' count='196048' stamp='0.705'/>
</task>
<task compile_id='64' method='sun/misc/URLClassPath$JarLoader ensureOpen ()V' bytes='32' count='1413' iicount='1413' throwouts='17' level='3' stamp='1.088'>
<phase name='buildIR' stamp='1.088'>
<type id='724' name='void'/>
<klass id='832' name='sun/misc/URLClassPath$JarLoader' flags='8'/>
<method id='833' holder='832' name='ensureOpen' return='724' flags='2' bytes='32' iicount='1417'/>
<parse method='833'  stamp='1.088'>
<bc code='183' bci='12'/>
<klass id='836' name='sun/misc/URLClassPath$JarLoader$1' flags='0'/>
<method id='837' holder='836' name='&lt;init&gt;' return='724' arguments='832' flags='0' bytes='10' iicount='293'/>
<call method='837' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='183' bci='6'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='839' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23036'/>
<call method='839' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='839'>
<parse_done stamp='1.088'/>
</parse>
<parse_done stamp='1.088'/>
</parse>
<bc code='184' bci='15'/>
<klass id='842' name='java/security/PrivilegedExceptionAction' flags='1537'/>
<klass id='841' name='java/security/AccessController' flags='17'/>
<method id='843' holder='841' name='doPrivileged' return='729' arguments='842' flags='265' bytes='0' iicount='615'/>
<call method='843' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='24'/>
<klass id='739' name='java/lang/Exception' flags='1'/>
<klass id='844' name='java/security/PrivilegedActionException' flags='1'/>
<method id='845' holder='844' name='getException' return='739' flags='1' bytes='5' iicount='34'/>
<call method='845' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='844' x='845'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='844'/>
<parse method='845'>
<parse_done stamp='1.088'/>
</parse>
<parse_done stamp='1.088'/>
</parse>
<phase name='optimize_blocks' stamp='1.088'>
<phase_done name='optimize_blocks' stamp='1.088'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.088'>
<phase_done name='rangeCheckElimination' stamp='1.088'/>
</phase>
<phase name='optimize_null_checks' stamp='1.088'>
<phase_done name='optimize_null_checks' stamp='1.088'/>
</phase>
<phase_done name='buildIR' stamp='1.088'/>
</phase>
<phase name='emit_lir' stamp='1.088'>
<phase name='lirGeneration' stamp='1.088'>
<phase_done name='lirGeneration' stamp='1.088'/>
</phase>
<phase name='linearScan' stamp='1.088'>
<phase_done name='linearScan' stamp='1.088'/>
</phase>
<phase_done name='emit_lir' stamp='1.088'/>
</phase>
<phase name='codeemit' stamp='1.088'>
<phase_done name='codeemit' stamp='1.088'/>
</phase>
<phase name='codeinstall' stamp='1.088'>
<dependency type='leaf_type' ctxk='844'/>
<dependency type='unique_concrete_method' ctxk='844' x='845'/>
<phase_done name='codeinstall' stamp='1.094'/>
</phase>
<code_cache total_blobs='309' nmethods='48' adapters='174' free_code_cache='250416448'/>
<task_done success='1' nmsize='1096' count='1417' inlined_bytes='16' stamp='1.094'/>
</task>
<task compile_id='67' method='java/util/HashMap hash (Ljava/lang/Object;)I' bytes='20' count='4864' iicount='4865' level='3' stamp='1.097'>
<phase name='buildIR' stamp='1.097'>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='833' holder='832' name='hash' return='722' arguments='729' flags='24' bytes='20' iicount='4865'/>
<parse method='833'  stamp='1.097'>
<bc code='182' bci='9'/>
<method id='835' holder='729' name='hashCode' return='722' flags='257' bytes='0' iicount='878'/>
<call method='835' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.097'/>
</parse>
<phase name='optimize_blocks' stamp='1.097'>
<phase_done name='optimize_blocks' stamp='1.097'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.097'>
<phase_done name='rangeCheckElimination' stamp='1.097'/>
</phase>
<phase name='optimize_null_checks' stamp='1.097'>
<phase_done name='optimize_null_checks' stamp='1.097'/>
</phase>
<phase_done name='buildIR' stamp='1.097'/>
</phase>
<phase name='emit_lir' stamp='1.097'>
<phase name='lirGeneration' stamp='1.097'>
<phase_done name='lirGeneration' stamp='1.097'/>
</phase>
<phase name='linearScan' stamp='1.097'>
<phase_done name='linearScan' stamp='1.097'/>
</phase>
<phase_done name='emit_lir' stamp='1.097'/>
</phase>
<phase name='codeemit' stamp='1.097'>
<phase_done name='codeemit' stamp='1.097'/>
</phase>
<phase name='codeinstall' stamp='1.097'>
<phase_done name='codeinstall' stamp='1.099'/>
</phase>
<code_cache total_blobs='312' nmethods='49' adapters='174' free_code_cache='250402624'/>
<task_done success='1' nmsize='584' count='4865' stamp='1.099'/>
</task>
<task compile_id='72' method='sun/misc/URLClassPath getLoader (I)Lsun/misc/URLClassPath$Loader;' bytes='197' count='1029' backedge_count='318' iicount='1029' level='3' stamp='1.107'>
<phase name='buildIR' stamp='1.107'>
<klass id='833' name='sun/misc/URLClassPath$Loader' flags='10'/>
<type id='722' name='int'/>
<klass id='832' name='sun/misc/URLClassPath' flags='1'/>
<method id='834' holder='832' name='getLoader' return='833' arguments='722' flags='34' bytes='197' iicount='1030'/>
<parse method='834'  stamp='1.107'>
<bc code='182' bci='13'/>
<klass id='836' name='java/util/ArrayList' flags='1'/>
<method id='840' holder='836' name='size' return='722' flags='1' bytes='5' iicount='1683'/>
<call method='840' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='840'>
<parse_done stamp='1.107'/>
</parse>
<bc code='182' bci='33'/>
<type id='716' name='boolean'/>
<klass id='837' name='java/util/Stack' flags='1'/>
<method id='842' holder='837' name='empty' return='716' flags='1' bytes='13' iicount='325'/>
<call method='842' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='837'/>
<parse method='842'>
<bc code='182' bci='1'/>
<klass id='844' name='java/util/Vector' flags='1'/>
<method id='845' holder='844' name='size' return='722' flags='33' bytes='5' compile_id='56' compiler='C1' level='1' iicount='1025'/>
<call method='845' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='1.107'/>
</parse>
<parse_done stamp='1.108'/>
</parse>
<bc code='182' bci='47'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='847' holder='837' name='pop' return='729' flags='33' bytes='19' iicount='322'/>
<call method='847' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='837'/>
<parse method='847'>
<bc code='182' bci='1'/>
<call method='845' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='1.108'/>
</parse>
<bc code='182' bci='6'/>
<method id='849' holder='837' name='peek' return='729' flags='33' bytes='25' iicount='324'/>
<call method='849' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='837'/>
<parse method='849'>
<bc code='182' bci='1'/>
<call method='845' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='1.108'/>
</parse>
<bc code='183' bci='13'/>
<type id='724' name='void'/>
<klass id='851' name='java/util/EmptyStackException' unloaded='1'/>
<method id='852' holder='851' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='852' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='182' bci='21'/>
<method id='853' holder='844' name='elementAt' return='729' arguments='722' flags='33' bytes='48' iicount='381'/>
<call method='853' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.108'/>
</parse>
<bc code='182' bci='14'/>
<method id='855' holder='844' name='removeElementAt' return='724' arguments='722' flags='33' bytes='115' iicount='322'/>
<call method='855' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='837'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.108'/>
</parse>
<bc code='184' bci='67'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='801' name='java/net/URL' flags='17'/>
<klass id='857' name='sun/net/util/URLUtil' flags='1'/>
<method id='858' holder='857' name='urlNoFragString' return='730' arguments='801' flags='9' bytes='114' iicount='331'/>
<call method='858' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='76'/>
<klass id='860' name='java/util/HashMap' flags='1'/>
<method id='861' holder='860' name='containsKey' return='716' arguments='729' flags='1' bytes='18' iicount='334'/>
<call method='861' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='87'/>
<method id='862' holder='832' name='getLoader' return='833' arguments='801' flags='2' bytes='25' iicount='318'/>
<call method='862' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='862'>
<bc code='183' bci='6'/>
<klass id='864' name='sun/misc/URLClassPath$3' flags='0'/>
<method id='865' holder='864' name='&lt;init&gt;' return='724' arguments='832 801' flags='0' bytes='15' iicount='318'/>
<call method='865' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='865'>
<bc code='183' bci='11'/>
<method id='867' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23051'/>
<call method='867' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='867'>
<parse_done stamp='1.108'/>
</parse>
<parse_done stamp='1.108'/>
</parse>
<bc code='184' bci='9'/>
<klass id='870' name='java/security/PrivilegedExceptionAction' flags='1537'/>
<klass id='869' name='java/security/AccessController' flags='17'/>
<method id='871' holder='869' name='doPrivileged' return='729' arguments='870' flags='265' bytes='0' iicount='615'/>
<call method='871' instr='invokestatic'/>
<inline_fail reason='native method'/>
<bc code='182' bci='18'/>
<klass id='739' name='java/lang/Exception' flags='1'/>
<klass id='872' name='java/security/PrivilegedActionException' flags='1'/>
<method id='873' holder='872' name='getException' return='739' flags='1' bytes='5' iicount='34'/>
<call method='873' instr='invokevirtual'/>
<dependency type='unique_concrete_method' ctxk='872' x='873'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='872'/>
<parse method='873'>
<parse_done stamp='1.108'/>
</parse>
<parse_done stamp='1.108'/>
</parse>
<bc code='182' bci='94'/>
<klass id='876' name='[Ljava/net/URL;' flags='1041'/>
<method id='877' holder='833' name='getClassPath' return='876' flags='0' bytes='2' iicount='1'/>
<call method='877' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='107'/>
<method id='878' holder='832' name='push' return='724' arguments='876' flags='2' bytes='46' iicount='4'/>
<call method='878' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='123'/>
<call method='840' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='840'>
<parse_done stamp='1.108'/>
</parse>
<bc code='183' bci='127'/>
<method id='880' holder='832' name='validateLookupCache' return='724' arguments='722 730' flags='34' bytes='80' iicount='301'/>
<call method='880' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='136'/>
<method id='882' holder='836' name='add' return='716' arguments='729' flags='1' bytes='29' iicount='661'/>
<call method='882' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='882'>
<bc code='183' bci='7'/>
<method id='884' holder='836' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='23' iicount='661'/>
<call method='884' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<parse method='884'>
<bc code='184' bci='13'/>
<klass id='889' name='java/lang/Math' flags='17'/>
<method id='890' holder='889' name='max' return='722' arguments='722 722' flags='9' bytes='11' iicount='57282'/>
<call method='890' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='890'>
<parse_done stamp='1.108'/>
</parse>
<bc code='183' bci='19'/>
<method id='892' holder='836' name='ensureExplicitCapacity' return='724' arguments='722' flags='2' bytes='26' iicount='661'/>
<call method='892' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<parse method='892'>
<bc code='183' bci='22'/>
<method id='895' holder='836' name='grow' return='724' arguments='722' flags='2' bytes='45' iicount='32'/>
<call method='895' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.108'/>
</parse>
<parse_done stamp='1.108'/>
</parse>
<parse_done stamp='1.108'/>
</parse>
<bc code='182' bci='147'/>
<method id='897' holder='860' name='put' return='729' arguments='729 729' flags='1' bytes='13' compile_id='18' compiler='C1' level='3' iicount='1441'/>
<call method='897' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='190'/>
<method id='899' holder='836' name='get' return='729' arguments='722' flags='1' bytes='11' iicount='1048'/>
<call method='899' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='899'>
<bc code='183' bci='2'/>
<method id='901' holder='836' name='rangeCheck' return='724' arguments='722' flags='2' bytes='22' iicount='1048'/>
<call method='901' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<parse method='901'>
<bc code='183' bci='14'/>
<method id='904' holder='836' name='outOfBoundsMsg' return='730' arguments='722' flags='2' bytes='32' iicount='1'/>
<call method='904' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='17'/>
<klass id='903' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='906' holder='903' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='906' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.108'/>
</parse>
<bc code='182' bci='7'/>
<method id='907' holder='836' name='elementData' return='729' arguments='722' flags='0' bytes='7' iicount='1048'/>
<call method='907' instr='invokevirtual'/>
<dependency type='leaf_type' ctxk='836'/>
<inline_success reason='receiver is statically known'/>
<dependency type='leaf_type' ctxk='836'/>
<parse method='907'>
<parse_done stamp='1.108'/>
</parse>
<parse_done stamp='1.108'/>
</parse>
<parse_done stamp='1.108'/>
</parse>
<phase name='optimize_blocks' stamp='1.108'>
<phase_done name='optimize_blocks' stamp='1.108'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.109'>
<phase_done name='rangeCheckElimination' stamp='1.109'/>
</phase>
<phase name='optimize_null_checks' stamp='1.109'>
<phase_done name='optimize_null_checks' stamp='1.109'/>
</phase>
<phase_done name='buildIR' stamp='1.109'/>
</phase>
<phase name='emit_lir' stamp='1.109'>
<phase name='lirGeneration' stamp='1.109'>
<phase_done name='lirGeneration' stamp='1.109'/>
</phase>
<phase name='linearScan' stamp='1.109'>
<phase_done name='linearScan' stamp='1.110'/>
</phase>
<phase_done name='emit_lir' stamp='1.110'/>
</phase>
<phase name='codeemit' stamp='1.110'>
<phase_done name='codeemit' stamp='1.110'/>
</phase>
<phase name='codeinstall' stamp='1.110'>
<dependency type='leaf_type' ctxk='836'/>
<dependency type='leaf_type' ctxk='837'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='872'/>
<dependency type='unique_concrete_method' ctxk='872' x='873'/>
<phase_done name='codeinstall' stamp='1.162'/>
</phase>
<code_cache total_blobs='315' nmethods='51' adapters='177' free_code_cache='250393664'/>
<task_done success='1' nmsize='9960' count='1054' backedge_count='318' inlined_bytes='257' stamp='1.163'/>
</task>
<task compile_id='81' method='java/util/zip/ZipFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='86' count='1408' iicount='1408' level='3' stamp='1.163'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1408' stamp='1.163'/>
</task>
<task compile_id='80' method='java/util/jar/JarFile getEntry (Ljava/lang/String;)Ljava/util/zip/ZipEntry;' bytes='22' count='1408' iicount='1408' level='3' stamp='1.163'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1408' stamp='1.163'/>
</task>
<task compile_id='79' method='java/util/jar/JarFile getJarEntry (Ljava/lang/String;)Ljava/util/jar/JarEntry;' bytes='9' count='1408' iicount='1408' level='3' stamp='1.163'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1408' stamp='1.163'/>
</task>
<task compile_id='85' method='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject add ()V' bytes='11' count='165537' iicount='165552' level='2' stamp='1.163'>
<phase name='buildIR' stamp='1.163'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject' flags='8'/>
<method id='833' holder='832' name='add' return='724' flags='1' bytes='11' iicount='166115'/>
<parse method='833'  stamp='1.163'>
<parse_done stamp='1.163'/>
</parse>
<phase name='optimize_blocks' stamp='1.163'>
<phase_done name='optimize_blocks' stamp='1.163'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.163'>
<phase_done name='rangeCheckElimination' stamp='1.163'/>
</phase>
<phase name='optimize_null_checks' stamp='1.163'>
<phase_done name='optimize_null_checks' stamp='1.163'/>
</phase>
<phase_done name='buildIR' stamp='1.163'/>
</phase>
<phase name='emit_lir' stamp='1.163'>
<phase name='lirGeneration' stamp='1.163'>
<phase_done name='lirGeneration' stamp='1.163'/>
</phase>
<phase name='linearScan' stamp='1.163'>
<phase_done name='linearScan' stamp='1.163'/>
</phase>
<phase_done name='emit_lir' stamp='1.163'/>
</phase>
<phase name='codeemit' stamp='1.163'>
<phase_done name='codeemit' stamp='1.163'/>
</phase>
<phase name='codeinstall' stamp='1.163'>
<phase_done name='codeinstall' stamp='1.165'/>
</phase>
<code_cache total_blobs='316' nmethods='52' adapters='177' free_code_cache='250392768'/>
<task_done success='1' nmsize='368' count='223213' stamp='1.165'/>
</task>
<task compile_id='89' method='java/io/DataInputStream readUTF (Ljava/io/DataInput;)Ljava/lang/String;' bytes='501' count='597' backedge_count='8539' iicount='597' level='3' stamp='1.165'>
<phase name='buildIR' stamp='1.165'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='833' name='java/io/DataInput' flags='1537'/>
<klass id='832' name='java/io/DataInputStream' flags='1'/>
<method id='834' holder='832' name='readUTF' return='730' arguments='833' flags='25' bytes='501' iicount='597'/>
<parse method='834'  stamp='1.165'>
<bc code='185' bci='1'/>
<type id='722' name='int'/>
<method id='836' holder='833' name='readUnsignedShort' return='722' flags='1025' bytes='0' iicount='1'/>
<call method='836' instr='invokeinterface'/>
<method id='837' holder='832' name='readUnsignedShort' return='722' flags='17' bytes='39' iicount='597'/>
<dependency type='unique_concrete_method' ctxk='833' x='837'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='832'/>
<bc code='193' bci='12'/>
<dependency type='leaf_type' ctxk='832'/>
<bc code='192' bci='19'/>
<dependency type='leaf_type' ctxk='832'/>
<bc code='185' bci='87'/>
<type id='724' name='void'/>
<klass id='824' name='[B' flags='1041'/>
<method id='840' holder='833' name='readFully' return='724' arguments='824 722 722' flags='1025' bytes='0' iicount='1'/>
<call method='840' instr='invokeinterface'/>
<method id='841' holder='832' name='readFully' return='724' arguments='824 722 722' flags='17' bytes='63' iicount='946'/>
<dependency type='unique_concrete_method' ctxk='833' x='841'/>
<inline_fail reason='callee is too large'/>
<dependency type='leaf_type' ctxk='832'/>
<bc code='183' bci='259'/>
<klass id='843' name='java/io/UTFDataFormatException' unloaded='1'/>
<method id='845' holder='843' name='&lt;init&gt;' return='724' arguments='730' unloaded='1'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='291'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='846' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='1168'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='3'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='848' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2392'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='850' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23663'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.166'/>
</parse>
<parse_done stamp='1.166'/>
</parse>
<parse_done stamp='1.166'/>
</parse>
<bc code='182' bci='296'/>
<method id='853' holder='795' name='append' return='795' arguments='730' flags='1' bytes='8' iicount='2980'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='2'/>
<method id='855' holder='793' name='append' return='793' arguments='730' flags='1' bytes='50' compile_id='7' compiler='C1' level='3' iicount='3952'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.166'/>
</parse>
<bc code='182' bci='301'/>
<method id='857' holder='795' name='append' return='795' arguments='722' flags='1' bytes='8' iicount='31'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<method id='859' holder='793' name='append' return='793' arguments='722' flags='1' bytes='62' iicount='31'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.166'/>
</parse>
<bc code='182' bci='304'/>
<method id='861' holder='795' name='toString' return='730' flags='1' bytes='17' iicount='1170'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='13'/>
<klass id='821' name='[C' flags='1041'/>
<method id='863' holder='730' name='&lt;init&gt;' return='724' arguments='821 722 722' flags='1' bytes='82' compile_id='15' compiler='C1' level='3' iicount='4226'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.166'/>
</parse>
<bc code='183' bci='307'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='351'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='403'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='3'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.166'/>
</parse>
<parse_done stamp='1.166'/>
</parse>
<parse_done stamp='1.166'/>
</parse>
<bc code='182' bci='408'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='2'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.166'/>
</parse>
<bc code='182' bci='415'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.166'/>
</parse>
<bc code='182' bci='418'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='13'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.166'/>
</parse>
<bc code='183' bci='421'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='469'/>
<call method='846' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='846'>
<bc code='183' bci='3'/>
<call method='848' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='183' bci='1'/>
<call method='850' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='850'>
<parse_done stamp='1.166'/>
</parse>
<parse_done stamp='1.166'/>
</parse>
<parse_done stamp='1.166'/>
</parse>
<bc code='182' bci='474'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='2'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.166'/>
</parse>
<bc code='182' bci='479'/>
<call method='857' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<bc code='183' bci='2'/>
<call method='859' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.166'/>
</parse>
<bc code='182' bci='482'/>
<call method='861' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='861'>
<bc code='183' bci='13'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.167'/>
</parse>
<bc code='183' bci='485'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='497'/>
<call method='863' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='1.167'/>
</parse>
<phase name='optimize_blocks' stamp='1.167'>
<phase_done name='optimize_blocks' stamp='1.167'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.167'>
<phase_done name='rangeCheckElimination' stamp='1.167'/>
</phase>
<phase name='optimize_null_checks' stamp='1.167'>
<phase_done name='optimize_null_checks' stamp='1.167'/>
</phase>
<phase_done name='buildIR' stamp='1.167'/>
</phase>
<phase name='emit_lir' stamp='1.167'>
<phase name='lirGeneration' stamp='1.167'>
<phase_done name='lirGeneration' stamp='1.167'/>
</phase>
<phase name='linearScan' stamp='1.167'>
<phase_done name='linearScan' stamp='1.167'/>
</phase>
<phase_done name='emit_lir' stamp='1.167'/>
</phase>
<phase name='codeemit' stamp='1.167'>
<phase_done name='codeemit' stamp='1.168'/>
</phase>
<phase name='codeinstall' stamp='1.168'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='833' x='837'/>
<dependency type='unique_concrete_method' ctxk='833' x='841'/>
<phase_done name='codeinstall' stamp='1.220'/>
</phase>
<code_cache total_blobs='319' nmethods='54' adapters='178' free_code_cache='250374848'/>
<task_done success='1' nmsize='8712' count='597' backedge_count='8539' inlined_bytes='159' stamp='1.220'/>
</task>
<task compile_id='84' method='java/lang/AbstractStringBuilder newCapacity (I)I' bytes='39' count='1538' iicount='1538' level='3' stamp='1.220'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1538' stamp='1.220'/>
</task>
<task compile_id='83' method='java/lang/String endsWith (Ljava/lang/String;)Z' bytes='17' count='1667' iicount='1667' level='3' stamp='1.220'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1667' stamp='1.220'/>
</task>
<task compile_id='82' method='java/net/URL getPort ()I' bytes='5' count='387' iicount='387' level='1' stamp='1.220'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='387' stamp='1.220'/>
</task>
<task compile_id='78' method='sun/misc/URLClassPath$JarLoader getResource (Ljava/lang/String;Z)Lsun/misc/Resource;' bytes='85' count='1040' iicount='1040' level='3' stamp='1.220'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1040' stamp='1.220'/>
</task>
<task compile_id='77' method='java/util/Arrays copyOf ([BI)[B' bytes='19' count='2702' iicount='2702' level='3' stamp='1.220'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='2702' stamp='1.220'/>
</task>
<task compile_id='76' method='java/util/ArrayList size ()I' bytes='5' count='1687' iicount='1687' level='1' stamp='1.220'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1687' stamp='1.220'/>
</task>
<task compile_id='75' method='java/util/ArrayList elementData (I)Ljava/lang/Object;' bytes='7' count='1048' iicount='1048' level='3' stamp='1.220'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1048' stamp='1.220'/>
</task>
<task compile_id='74' method='java/util/ArrayList rangeCheck (I)V' bytes='22' count='1048' iicount='1048' level='3' stamp='1.221'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1048' stamp='1.221'/>
</task>
<task compile_id='73' method='java/util/ArrayList get (I)Ljava/lang/Object;' bytes='11' count='1048' iicount='1048' level='3' stamp='1.221'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1048' stamp='1.221'/>
</task>
<task compile_id='71' method='sun/misc/URLClassPath getNextLoader ([II)Lsun/misc/URLClassPath$Loader;' bytes='88' count='1054' iicount='1054' level='3' stamp='1.221'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1054' stamp='1.221'/>
</task>
<task compile_id='70' method='java/nio/DirectLongBufferU ix (I)J' bytes='10' count='1160' iicount='1160' level='3' stamp='1.221'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1160' stamp='1.221'/>
</task>
<task compile_id='69' method='java/nio/Buffer checkIndex (I)I' bytes='22' count='1160' iicount='1160' level='3' stamp='1.221'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='1160' stamp='1.221'/>
</task>
<task compile_id='91' method='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject add ()V' bytes='11' count='1035263' iicount='1035425' level='1' stamp='1.221'>
<phase name='buildIR' stamp='1.221'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject' flags='8'/>
<method id='833' holder='832' name='add' return='724' flags='1' bytes='11' compile_id='85' compiler='C1' level='2' iicount='1038219'/>
<parse method='833'  stamp='1.221'>
<parse_done stamp='1.221'/>
</parse>
<phase name='optimize_blocks' stamp='1.221'>
<phase_done name='optimize_blocks' stamp='1.221'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.221'>
<phase_done name='rangeCheckElimination' stamp='1.221'/>
</phase>
<phase name='optimize_null_checks' stamp='1.221'>
<phase_done name='optimize_null_checks' stamp='1.221'/>
</phase>
<phase_done name='buildIR' stamp='1.221'/>
</phase>
<phase name='emit_lir' stamp='1.221'>
<phase name='lirGeneration' stamp='1.221'>
<phase_done name='lirGeneration' stamp='1.221'/>
</phase>
<phase name='linearScan' stamp='1.221'>
<phase_done name='linearScan' stamp='1.221'/>
</phase>
<phase_done name='emit_lir' stamp='1.221'/>
</phase>
<phase name='codeemit' stamp='1.221'>
<phase_done name='codeemit' stamp='1.221'/>
</phase>
<phase name='codeinstall' stamp='1.221'>
<phase_done name='codeinstall' stamp='1.223'/>
</phase>
<code_cache total_blobs='320' nmethods='55' adapters='178' free_code_cache='250374016'/>
<task_done success='1' nmsize='304' count='1371726' stamp='1.223'/>
</task>
<task compile_id='86' method='java/io/BufferedInputStream getBufIfOpen ()[B' bytes='21' count='7168' iicount='7168' level='2' stamp='1.223'>
<phase name='buildIR' stamp='1.223'>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='java/io/BufferedInputStream' flags='1'/>
<method id='833' holder='832' name='getBufIfOpen' return='824' flags='2' bytes='21' iicount='7168'/>
<parse method='833'  stamp='1.223'>
<bc code='183' bci='15'/>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='835' name='java/io/IOException' flags='1'/>
<method id='837' holder='835' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='17'/>
<call method='837' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.223'/>
</parse>
<phase name='optimize_blocks' stamp='1.223'>
<phase_done name='optimize_blocks' stamp='1.223'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.223'>
<phase_done name='rangeCheckElimination' stamp='1.223'/>
</phase>
<phase name='optimize_null_checks' stamp='1.223'>
<phase_done name='optimize_null_checks' stamp='1.223'/>
</phase>
<phase_done name='buildIR' stamp='1.223'/>
</phase>
<phase name='emit_lir' stamp='1.223'>
<phase name='lirGeneration' stamp='1.223'>
<phase_done name='lirGeneration' stamp='1.223'/>
</phase>
<phase name='linearScan' stamp='1.223'>
<phase_done name='linearScan' stamp='1.223'/>
</phase>
<phase_done name='emit_lir' stamp='1.223'/>
</phase>
<phase name='codeemit' stamp='1.223'>
<phase_done name='codeemit' stamp='1.223'/>
</phase>
<phase name='codeinstall' stamp='1.223'>
<phase_done name='codeinstall' stamp='1.226'/>
</phase>
<code_cache total_blobs='322' nmethods='56' adapters='178' free_code_cache='250367424'/>
<task_done success='1' nmsize='520' count='7168' stamp='1.226'/>
</task>
<task compile_id='88' method='java/io/BufferedInputStream read ()I' bytes='49' count='5163' iicount='5163' level='3' stamp='1.226'>
<phase name='buildIR' stamp='1.226'>
<type id='722' name='int'/>
<klass id='832' name='java/io/BufferedInputStream' flags='1'/>
<method id='833' holder='832' name='read' return='722' flags='33' bytes='49' iicount='5163'/>
<parse method='833'  stamp='1.226'>
<bc code='183' bci='12'/>
<type id='724' name='void'/>
<method id='835' holder='832' name='fill' return='724' flags='2' bytes='233' iicount='13'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='29'/>
<klass id='824' name='[B' flags='1041'/>
<method id='837' holder='832' name='getBufIfOpen' return='824' flags='2' bytes='21' compile_id='86' compiler='C1' level='2' iicount='7168'/>
<call method='837' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='837'>
<bc code='183' bci='15'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='839' name='java/io/IOException' flags='1'/>
<method id='841' holder='839' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='17'/>
<call method='841' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.233'/>
</parse>
<parse_done stamp='1.233'/>
</parse>
<phase name='optimize_blocks' stamp='1.233'>
<phase_done name='optimize_blocks' stamp='1.233'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.233'>
<phase_done name='rangeCheckElimination' stamp='1.233'/>
</phase>
<phase name='optimize_null_checks' stamp='1.233'>
<phase_done name='optimize_null_checks' stamp='1.233'/>
</phase>
<phase_done name='buildIR' stamp='1.233'/>
</phase>
<phase name='emit_lir' stamp='1.233'>
<phase name='lirGeneration' stamp='1.233'>
<phase_done name='lirGeneration' stamp='1.233'/>
</phase>
<phase name='linearScan' stamp='1.233'>
<phase_done name='linearScan' stamp='1.233'/>
</phase>
<phase_done name='emit_lir' stamp='1.233'/>
</phase>
<phase name='codeemit' stamp='1.233'>
<phase_done name='codeemit' stamp='1.233'/>
</phase>
<phase name='codeinstall' stamp='1.233'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.241'/>
</phase>
<code_cache total_blobs='323' nmethods='58' adapters='178' free_code_cache='250368064'/>
<task_done success='1' nmsize='1400' count='5163' inlined_bytes='21' stamp='1.241'/>
</task>
<task compile_id='93' method='java/io/DataInputStream readShort ()S' bytes='40' count='1984' iicount='1984' level='3' stamp='1.241'>
<phase name='buildIR' stamp='1.241'>
<type id='721' name='short'/>
<klass id='832' name='java/io/DataInputStream' flags='1'/>
<method id='833' holder='832' name='readShort' return='721' flags='17' bytes='40' iicount='1984'/>
<parse method='833'  stamp='1.241'>
<bc code='182' bci='4'/>
<type id='722' name='int'/>
<klass id='797' name='java/io/InputStream' flags='1025'/>
<method id='837' holder='797' name='read' return='722' flags='1025' bytes='0' iicount='1'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='182' bci='12'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='26'/>
<type id='724' name='void'/>
<klass id='838' name='java/io/EOFException' unloaded='1'/>
<method id='839' holder='838' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='839' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='1.241'/>
</parse>
<phase name='optimize_blocks' stamp='1.241'>
<phase_done name='optimize_blocks' stamp='1.241'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.241'>
<phase_done name='rangeCheckElimination' stamp='1.241'/>
</phase>
<phase name='optimize_null_checks' stamp='1.241'>
<phase_done name='optimize_null_checks' stamp='1.241'/>
</phase>
<phase_done name='buildIR' stamp='1.241'/>
</phase>
<phase name='emit_lir' stamp='1.241'>
<phase name='lirGeneration' stamp='1.241'>
<phase_done name='lirGeneration' stamp='1.241'/>
</phase>
<phase name='linearScan' stamp='1.241'>
<phase_done name='linearScan' stamp='1.242'/>
</phase>
<phase_done name='emit_lir' stamp='1.242'/>
</phase>
<phase name='codeemit' stamp='1.242'>
<phase_done name='codeemit' stamp='1.242'/>
</phase>
<phase name='codeinstall' stamp='1.242'>
<phase_done name='codeinstall' stamp='1.246'/>
</phase>
<code_cache total_blobs='324' nmethods='59' adapters='178' free_code_cache='250366144'/>
<task_done success='1' nmsize='968' count='1984' stamp='1.246'/>
</task>
<task compile_id='92' method='java/io/BufferedInputStream read ([BII)I' bytes='113' count='985' backedge_count='11' iicount='985' level='3' stamp='1.247'>
<phase name='buildIR' stamp='1.247'>
<type id='722' name='int'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='java/io/BufferedInputStream' flags='1'/>
<method id='833' holder='832' name='read' return='722' arguments='824 722 722' flags='33' bytes='113' iicount='985'/>
<parse method='833'  stamp='1.247'>
<bc code='183' bci='1'/>
<method id='836' holder='832' name='getBufIfOpen' return='824' flags='2' bytes='21' compile_id='86' compiler='C1' level='2' iicount='7168'/>
<call method='836' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='15'/>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='838' name='java/io/IOException' flags='1'/>
<method id='840' holder='838' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='17'/>
<call method='840' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.247'/>
</parse>
<bc code='183' bci='26'/>
<klass id='842' name='java/lang/IndexOutOfBoundsException' unloaded='1'/>
<method id='843' holder='842' name='&lt;init&gt;' return='724' unloaded='1'/>
<call method='843' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='49'/>
<method id='844' holder='832' name='read1' return='722' arguments='824 722 722' flags='2' bytes='108' iicount='996'/>
<call method='844' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='101'/>
<klass id='797' name='java/io/InputStream' flags='1025'/>
<method id='847' holder='797' name='available' return='722' flags='1' bytes='2' iicount='1'/>
<call method='847' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<parse_done stamp='1.247'/>
</parse>
<phase name='optimize_blocks' stamp='1.247'>
<phase_done name='optimize_blocks' stamp='1.247'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.247'>
<phase_done name='rangeCheckElimination' stamp='1.247'/>
</phase>
<phase name='optimize_null_checks' stamp='1.247'>
<phase_done name='optimize_null_checks' stamp='1.247'/>
</phase>
<phase_done name='buildIR' stamp='1.247'/>
</phase>
<phase name='emit_lir' stamp='1.247'>
<phase name='lirGeneration' stamp='1.247'>
<phase_done name='lirGeneration' stamp='1.247'/>
</phase>
<phase name='linearScan' stamp='1.247'>
<phase_done name='linearScan' stamp='1.247'/>
</phase>
<phase_done name='emit_lir' stamp='1.247'/>
</phase>
<phase name='codeemit' stamp='1.247'>
<phase_done name='codeemit' stamp='1.247'/>
</phase>
<phase name='codeinstall' stamp='1.247'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.260'/>
</phase>
<code_cache total_blobs='326' nmethods='60' adapters='179' free_code_cache='250361664'/>
<task_done success='1' nmsize='2360' count='985' backedge_count='11' inlined_bytes='21' stamp='1.260'/>
</task>
<task compile_id='94' method='java/util/HashMap$Node &lt;init&gt; (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)V' bytes='26' count='1634' iicount='1634' level='3' stamp='1.260'>
<phase name='buildIR' stamp='1.260'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap$Node' flags='8'/>
<method id='833' holder='832' name='&lt;init&gt;' return='724' arguments='722 729 729 832' flags='0' bytes='26' iicount='1634'/>
<parse method='833'  stamp='1.260'>
<bc code='183' bci='1'/>
<method id='835' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23664'/>
<call method='835' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='177' bci='0'/>
<dependency type='no_finalizable_subclasses' ctxk='832'/>
<parse_done stamp='1.260'/>
</parse>
<parse_done stamp='1.260'/>
</parse>
<phase name='optimize_blocks' stamp='1.260'>
<phase_done name='optimize_blocks' stamp='1.260'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.260'>
<phase_done name='rangeCheckElimination' stamp='1.260'/>
</phase>
<phase name='optimize_null_checks' stamp='1.260'>
<phase_done name='optimize_null_checks' stamp='1.260'/>
</phase>
<phase_done name='buildIR' stamp='1.260'/>
</phase>
<phase name='emit_lir' stamp='1.260'>
<phase name='lirGeneration' stamp='1.260'>
<phase_done name='lirGeneration' stamp='1.260'/>
</phase>
<phase name='linearScan' stamp='1.260'>
<phase_done name='linearScan' stamp='1.260'/>
</phase>
<phase_done name='emit_lir' stamp='1.260'/>
</phase>
<phase name='codeemit' stamp='1.260'>
<phase_done name='codeemit' stamp='1.260'/>
</phase>
<phase name='codeinstall' stamp='1.260'>
<dependency type='no_finalizable_subclasses' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.263'/>
</phase>
<code_cache total_blobs='327' nmethods='61' adapters='179' free_code_cache='250360512'/>
<task_done success='1' nmsize='528' count='1659' inlined_bytes='1' stamp='1.263'/>
</task>
<task compile_id='95' method='java/util/HashMap newNode (ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Node;)Ljava/util/HashMap$Node;' bytes='13' count='1091' iicount='1091' level='3' stamp='1.263'>
<phase name='buildIR' stamp='1.263'>
<klass id='833' name='java/util/HashMap$Node' flags='8'/>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='832' name='java/util/HashMap' flags='1'/>
<method id='834' holder='832' name='newNode' return='833' arguments='722 729 729 833' flags='0' bytes='13' iicount='1091'/>
<parse method='834'  stamp='1.263'>
<bc code='183' bci='9'/>
<type id='724' name='void'/>
<method id='836' holder='833' name='&lt;init&gt;' return='724' arguments='722 729 729 833' flags='0' bytes='26' compile_id='94' compiler='C1' level='3' iicount='1659'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<bc code='183' bci='1'/>
<method id='838' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23682'/>
<call method='838' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='838'>
<parse_done stamp='1.263'/>
</parse>
<parse_done stamp='1.264'/>
</parse>
<parse_done stamp='1.264'/>
</parse>
<phase name='optimize_blocks' stamp='1.264'>
<phase_done name='optimize_blocks' stamp='1.264'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.264'>
<phase_done name='rangeCheckElimination' stamp='1.264'/>
</phase>
<phase name='optimize_null_checks' stamp='1.264'>
<phase_done name='optimize_null_checks' stamp='1.264'/>
</phase>
<phase_done name='buildIR' stamp='1.264'/>
</phase>
<phase name='emit_lir' stamp='1.264'>
<phase name='lirGeneration' stamp='1.264'>
<phase_done name='lirGeneration' stamp='1.264'/>
</phase>
<phase name='linearScan' stamp='1.264'>
<phase_done name='linearScan' stamp='1.264'/>
</phase>
<phase_done name='emit_lir' stamp='1.264'/>
</phase>
<phase name='codeemit' stamp='1.264'>
<phase_done name='codeemit' stamp='1.264'/>
</phase>
<phase name='codeinstall' stamp='1.264'>
<phase_done name='codeinstall' stamp='1.267'/>
</phase>
<code_cache total_blobs='328' nmethods='62' adapters='179' free_code_cache='250359040'/>
<task_done success='1' nmsize='688' count='1091' inlined_bytes='27' stamp='1.267'/>
</task>
<task compile_id='65' method='java/lang/StringBuilder &lt;init&gt; ()V' bytes='7' count='1169' iicount='1169' level='3' stamp='1.267'>
<phase name='buildIR' stamp='1.267'>
<type id='724' name='void'/>
<klass id='795' name='java/lang/StringBuilder' flags='17'/>
<method id='832' holder='795' name='&lt;init&gt;' return='724' flags='1' bytes='7' iicount='1169'/>
<parse method='832'  stamp='1.267'>
<bc code='183' bci='3'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2394'/>
<call method='834' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='834'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='836' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' compile_id='8' compiler='C2' level='4' iicount='23682'/>
<call method='836' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='836'>
<parse_done stamp='1.267'/>
</parse>
<parse_done stamp='1.267'/>
</parse>
<parse_done stamp='1.267'/>
</parse>
<phase name='optimize_blocks' stamp='1.267'>
<phase_done name='optimize_blocks' stamp='1.267'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.267'>
<phase_done name='rangeCheckElimination' stamp='1.267'/>
</phase>
<phase name='optimize_null_checks' stamp='1.267'>
<phase_done name='optimize_null_checks' stamp='1.267'/>
</phase>
<phase_done name='buildIR' stamp='1.267'/>
</phase>
<phase name='emit_lir' stamp='1.267'>
<phase name='lirGeneration' stamp='1.267'>
<phase_done name='lirGeneration' stamp='1.267'/>
</phase>
<phase name='linearScan' stamp='1.267'>
<phase_done name='linearScan' stamp='1.267'/>
</phase>
<phase_done name='emit_lir' stamp='1.267'/>
</phase>
<phase name='codeemit' stamp='1.267'>
<phase_done name='codeemit' stamp='1.267'/>
</phase>
<phase name='codeinstall' stamp='1.267'>
<phase_done name='codeinstall' stamp='1.271'/>
</phase>
<code_cache total_blobs='329' nmethods='63' adapters='179' free_code_cache='250357696'/>
<task_done success='1' nmsize='688' count='1169' inlined_bytes='13' stamp='1.271'/>
</task>
<task compile_id='90' method='java/io/BufferedInputStream read1 ([BII)I' bytes='108' count='996' iicount='996' level='3' stamp='1.271'>
<phase name='buildIR' stamp='1.271'>
<type id='722' name='int'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='java/io/BufferedInputStream' flags='1'/>
<method id='833' holder='832' name='read1' return='722' arguments='824 722 722' flags='2' bytes='108' iicount='996'/>
<parse method='833'  stamp='1.271'>
<bc code='183' bci='18'/>
<method id='835' holder='832' name='getBufIfOpen' return='824' flags='2' bytes='21' compile_id='86' compiler='C1' level='2' iicount='7168'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='183' bci='15'/>
<type id='724' name='void'/>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='837' name='java/io/IOException' flags='1'/>
<method id='839' holder='837' name='&lt;init&gt;' return='724' arguments='730' flags='1' bytes='6' iicount='17'/>
<call method='839' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.271'/>
</parse>
<bc code='183' bci='33'/>
<klass id='797' name='java/io/InputStream' flags='1025'/>
<method id='841' holder='832' name='getInIfOpen' return='797' flags='2' bytes='21' iicount='20'/>
<call method='841' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='841'>
<bc code='183' bci='15'/>
<call method='839' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.271'/>
</parse>
<bc code='182' bci='39'/>
<method id='844' holder='797' name='read' return='722' arguments='824 722 722' flags='1' bytes='109' iicount='1'/>
<call method='844' instr='invokevirtual'/>
<inline_fail reason='no static binding'/>
<bc code='183' bci='44'/>
<method id='845' holder='832' name='fill' return='724' flags='2' bytes='233' iicount='13'/>
<call method='845' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_fail reason='callee is too large'/>
<bc code='183' bci='80'/>
<call method='835' instr='invokespecial'/>
<dependency type='leaf_type' ctxk='832'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='183' bci='15'/>
<call method='839' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<parse_done stamp='1.272'/>
</parse>
<bc code='184' bci='91'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='847' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15493'/>
<call method='847' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='1.272'/>
</parse>
<phase name='optimize_blocks' stamp='1.272'>
<phase_done name='optimize_blocks' stamp='1.272'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.272'>
<phase_done name='rangeCheckElimination' stamp='1.272'/>
</phase>
<phase name='optimize_null_checks' stamp='1.272'>
<phase_done name='optimize_null_checks' stamp='1.272'/>
</phase>
<phase_done name='buildIR' stamp='1.272'/>
</phase>
<phase name='emit_lir' stamp='1.272'>
<phase name='lirGeneration' stamp='1.272'>
<phase_done name='lirGeneration' stamp='1.272'/>
</phase>
<phase name='linearScan' stamp='1.272'>
<phase_done name='linearScan' stamp='1.272'/>
</phase>
<phase_done name='emit_lir' stamp='1.272'/>
</phase>
<phase name='codeemit' stamp='1.272'>
<phase_done name='codeemit' stamp='1.272'/>
</phase>
<phase name='codeinstall' stamp='1.272'>
<dependency type='leaf_type' ctxk='832'/>
<phase_done name='codeinstall' stamp='1.305'/>
</phase>
<code_cache total_blobs='331' nmethods='64' adapters='179' free_code_cache='250347904'/>
<task_done success='1' nmsize='2296' count='996' inlined_bytes='63' stamp='1.305'/>
</task>
<fragment>
<![CDATA[
<task compile_id='99' method='java/io/File isInvalid ()Z' bytes='47' count='1796' iicount='1796' level='3' stamp='1.305'>
<phase name='buildIR' stamp='1.306'>
<type id='716' name='boolean'/>
<klass id='799' name='java/io/File' flags='1'/>
<method id='832' holder='799' name='isInvalid' return='716' flags='16' bytes='47' iicount='1796'/>
<parse method='832'  stamp='1.306'>
<bc code='182' bci='13'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='835' holder='730' name='indexOf' return='722' arguments='722' flags='1' bytes='7' compile_id='17' compiler='C1' level='3' iicount='3832'/>
<call method='835' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='835'>
<bc code='182' bci='3'/>
<method id='837' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' compile_id='31' compiler='C2' level='4' iicount='3807'/>
<call method='837' instr='invokevirtual'/>
<inline_fail reason='inlining prohibited by policy'/>
<parse_done stamp='1.306'/>
</parse>
<parse_done stamp='1.306'/>
</parse>
<phase name='optimize_blocks' stamp='1.306'>
<phase_done name='optimize_blocks' stamp='1.306'/>
</phase>
<phase name='rangeCheckElimination' stamp='1.306'>
<phase_done name='rangeCheckElimination' stamp='1.306'/>
</phase>
<phase name='optimize_null_checks' stamp='1.306'>
<phase_done name='optimize_null_checks' stamp='1.306'/>
</phase>
<phase_done name='buildIR' stamp='1.306'/>
</phase>
<phase name='emit_lir' stamp='1.306'>
<phase name='lirGeneration' stamp='1.306'>
<phase_done name='lirGeneration' stamp='1.306'/>
</phase>
<phase name='linearScan' stamp='1.306'>
<phase_done name='linearScan' stamp='1.306'/>
</phase>
<phase_done name='emit_lir' stamp='1.306'/>
</phase>
<phase name='codeemit' stamp='1.306'>
<phase_done name='codeemit' stamp='1.306'/>
</phase>
<phase name='codeinstall' stamp='1.306'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='26572'>
<start_compile_thread name='C2 CompilerThread2' thread='26572' process='17108' stamp='0.450'/>
<task compile_id='14' method='java/lang/String charAt (I)C' bytes='29' count='243722' iicount='243722' stamp='0.475'>
<phase name='parse' nodes='3' live='3' stamp='0.476'>
<type id='717' name='char'/>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='243722'/>
<klass id='834' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='832' bci='13' reason='unloaded' action='reinterpret' index='245' klass='834'/>
<parse method='832' uses='243722' stamp='0.476'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='102' live='97' memory='35040' stamp='0.476'/>
</parse>
<phase_done name='parse' nodes='103' live='63' stamp='0.476'/>
</phase>
<phase name='optimizer' nodes='103' live='63' stamp='0.476'>
<phase name='ccp' nodes='103' live='63' stamp='0.476'>
<phase_done name='ccp' nodes='103' live='63' stamp='0.476'/>
</phase>
<phase name='idealLoop' nodes='103' live='63' stamp='0.476'>
<phase_done name='idealLoop' nodes='103' live='63' stamp='0.476'/>
</phase>
<phase_done name='optimizer' nodes='107' live='63' stamp='0.476'/>
</phase>
<phase name='matcher' nodes='107' live='63' stamp='0.476'>
<phase_done name='matcher' nodes='55' live='55' stamp='0.476'/>
</phase>
<phase name='regalloc' nodes='70' live='69' stamp='0.476'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='80' live='75' stamp='0.476'/>
</phase>
<phase name='output' nodes='80' live='75' stamp='0.476'>
<phase_done name='output' nodes='93' live='85' stamp='0.483'/>
</phase>
<code_cache total_blobs='251' nmethods='6' adapters='156' free_code_cache='250534208'/>
<task_done success='1' nmsize='216' count='243764' stamp='0.484'/>
</task>
<task compile_id='16' compile_kind='osr' method='java/lang/String indexOf (II)I' bytes='70' count='3789' backedge_count='229835' iicount='3789' osr_bci='37' stamp='0.487'>
<phase name='parse' nodes='3' live='3' stamp='0.487'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='3789'/>
<parse method='832' uses='3789' osr_bci='37' stamp='0.487'>
<uncommon_trap bci='37' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='37' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='37' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='2841' not_taken='222748' cnt='225589' prob='0.0125937'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='222596' not_taken='152' cnt='222748' prob='0.999318'/>
<parse_done nodes='169' live='162' memory='48008' stamp='0.488'/>
</parse>
<phase_done name='parse' nodes='170' live='125' stamp='0.488'/>
</phase>
<phase name='optimizer' nodes='170' live='125' stamp='0.488'>
<phase name='idealLoop' nodes='175' live='117' stamp='0.488'>
<loop_tree>
<loop idx='175' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='124' stamp='0.488'/>
</phase>
<phase name='idealLoop' nodes='227' live='124' stamp='0.488'>
<loop_tree>
<loop idx='232' main_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='331' live='187' stamp='0.488'/>
</phase>
<phase name='idealLoop' nodes='331' live='187' stamp='0.488'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='379' live='205' stamp='0.488'/>
</phase>
<phase name='ccp' nodes='379' live='205' stamp='0.488'>
<phase_done name='ccp' nodes='379' live='205' stamp='0.488'/>
</phase>
<phase name='idealLoop' nodes='381' live='200' stamp='0.488'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='356' inner_loop='1' main_loop='356' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='396' live='198' stamp='0.488'/>
</phase>
<phase name='idealLoop' nodes='396' live='198' stamp='0.488'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='417' inner_loop='1' main_loop='417' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='440' live='232' stamp='0.489'/>
</phase>
<phase name='idealLoop' nodes='440' live='232' stamp='0.489'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='484' inner_loop='1' main_loop='484' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='550' live='293' stamp='0.489'/>
</phase>
<phase name='idealLoop' nodes='550' live='293' stamp='0.489'>
<loop_tree>
<loop idx='303' inner_loop='1' pre_loop='232' >
</loop>
<loop idx='484' inner_loop='1' main_loop='484' >
</loop>
<loop idx='257' inner_loop='1' post_loop='232' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='593' live='292' stamp='0.489'/>
</phase>
<phase_done name='optimizer' nodes='595' live='263' stamp='0.489'/>
</phase>
<phase name='matcher' nodes='595' live='263' stamp='0.489'>
<phase_done name='matcher' nodes='217' live='217' stamp='0.490'/>
</phase>
<phase name='regalloc' nodes='300' live='300' stamp='0.490'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='326' live='321' stamp='0.491'/>
</phase>
<phase name='output' nodes='326' live='321' stamp='0.491'>
<phase_done name='output' nodes='356' live='333' stamp='0.508'/>
</phase>
<code_cache total_blobs='261' nmethods='9' adapters='163' free_code_cache='250519104'/>
<task_done success='1' nmsize='536' count='3797' backedge_count='230232' stamp='0.515'/>
</task>
<task compile_id='28' method='java/lang/String hashCode ()I' bytes='55' count='5504' backedge_count='119512' iicount='5504' stamp='0.519'>
<phase name='parse' nodes='3' live='3' stamp='0.519'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='5504'/>
<parse method='832' uses='5504' stamp='0.519'>
<bc code='154' bci='6'/>
<branch target_bci='53' taken='3252' not_taken='1883' cnt='5135' prob='0.633301'/>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='14'/>
<branch target_bci='53' taken='1' not_taken='1882' cnt='1883' prob='0.000531067'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1882' not_taken='115397' cnt='117279' prob='0.0160472'/>
<uncommon_trap bci='33' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='33' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1882' not_taken='115397' cnt='115397' prob='0.0160472'/>
<parse_done nodes='190' live='184' memory='50008' stamp='0.521'/>
</parse>
<phase_done name='parse' nodes='191' live='124' stamp='0.521'/>
</phase>
<phase name='optimizer' nodes='191' live='124' stamp='0.521'>
<phase name='idealLoop' nodes='192' live='104' stamp='0.521'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='96' stamp='0.521'/>
</phase>
<phase name='idealLoop' nodes='196' live='96' stamp='0.521'>
<loop_tree>
<loop idx='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='222' live='102' stamp='0.522'/>
</phase>
<phase name='idealLoop' nodes='222' live='102' stamp='0.522'>
<loop_tree>
<loop idx='299' inner_loop='1' main_loop='299' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='312' live='172' stamp='0.522'/>
</phase>
<phase name='ccp' nodes='312' live='172' stamp='0.522'>
<phase_done name='ccp' nodes='312' live='172' stamp='0.522'/>
</phase>
<phase name='idealLoop' nodes='312' live='172' stamp='0.522'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='382' live='198' stamp='0.522'/>
</phase>
<phase name='idealLoop' nodes='382' live='198' stamp='0.522'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='407' live='186' stamp='0.523'/>
</phase>
<phase name='idealLoop' nodes='407' live='186' stamp='0.523'>
<loop_tree>
<loop idx='262' inner_loop='1' pre_loop='201' >
</loop>
<loop idx='348' inner_loop='1' main_loop='348' >
</loop>
<loop idx='234' inner_loop='1' post_loop='201' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='417' live='169' stamp='0.523'/>
</phase>
<phase_done name='optimizer' nodes='420' live='158' stamp='0.523'/>
</phase>
<phase name='matcher' nodes='420' live='158' stamp='0.523'>
<phase_done name='matcher' nodes='141' live='141' stamp='0.523'/>
</phase>
<phase name='regalloc' nodes='177' live='176' stamp='0.523'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='195' live='190' stamp='0.524'/>
</phase>
<phase name='output' nodes='195' live='190' stamp='0.524'>
<phase_done name='output' nodes='209' live='200' stamp='0.525'/>
</phase>
<code_cache total_blobs='265' nmethods='14' adapters='163' free_code_cache='250521600'/>
<task_done success='1' nmsize='376' count='5522' backedge_count='119833' stamp='0.528'/>
</task>
<task compile_id='6' method='sun/misc/ASCIICaseInsensitiveComparator isUpper (I)Z' bytes='18' count='28182' iicount='28182' stamp='0.528'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='28182' stamp='0.528'/>
</task>
<task compile_id='5' method='sun/misc/ASCIICaseInsensitiveComparator toLower (I)I' bytes='16' count='28182' iicount='28182' stamp='0.528'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='28182' stamp='0.528'/>
</task>
<task compile_id='23' method='java/util/TreeMap parentOf (Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;' bytes='13' count='10339' iicount='10339' stamp='0.528'>
<phase name='parse' nodes='3' live='3' stamp='0.528'>
<klass id='833' name='java/util/TreeMap$Entry' flags='24'/>
<klass id='832' name='java/util/TreeMap' flags='1'/>
<method id='834' holder='832' name='parentOf' return='833' arguments='833' flags='10' bytes='13' iicount='10339'/>
<parse method='834' uses='10339' stamp='0.528'>
<bc code='199' bci='1'/>
<branch target_bci='8' taken='10339' not_taken='0' cnt='10339' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='43' live='41' memory='25800' stamp='0.528'/>
</parse>
<phase_done name='parse' nodes='44' live='25' stamp='0.528'/>
</phase>
<phase name='optimizer' nodes='44' live='25' stamp='0.528'>
<phase name='ccp' nodes='44' live='25' stamp='0.528'>
<phase_done name='ccp' nodes='44' live='25' stamp='0.528'/>
</phase>
<phase name='idealLoop' nodes='44' live='24' stamp='0.528'>
<phase_done name='idealLoop' nodes='44' live='24' stamp='0.528'/>
</phase>
<phase_done name='optimizer' nodes='44' live='24' stamp='0.528'/>
</phase>
<phase name='matcher' nodes='44' live='24' stamp='0.528'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.528'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.528'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='30' stamp='0.528'/>
</phase>
<phase name='output' nodes='33' live='30' stamp='0.528'>
<phase_done name='output' nodes='39' live='36' stamp='0.528'/>
</phase>
<code_cache total_blobs='269' nmethods='15' adapters='166' free_code_cache='250519296'/>
<task_done success='1' nmsize='88' count='10339' stamp='0.529'/>
</task>
<task compile_id='22' method='java/lang/String length ()I' bytes='6' count='37923' iicount='37923' stamp='0.529'>
<phase name='parse' nodes='3' live='3' stamp='0.536'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='length' return='722' flags='1' bytes='6' iicount='37923'/>
<parse method='832' uses='37923' stamp='0.536'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='44' live='42' memory='25928' stamp='0.536'/>
</parse>
<phase_done name='parse' nodes='45' live='27' stamp='0.536'/>
</phase>
<phase name='optimizer' nodes='45' live='27' stamp='0.536'>
<phase name='ccp' nodes='45' live='27' stamp='0.536'>
<phase_done name='ccp' nodes='45' live='27' stamp='0.536'/>
</phase>
<phase name='idealLoop' nodes='45' live='27' stamp='0.536'>
<phase_done name='idealLoop' nodes='45' live='27' stamp='0.537'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.537'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.537'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.537'/>
</phase>
<phase name='regalloc' nodes='30' live='29' stamp='0.537'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='30' live='29' stamp='0.537'/>
</phase>
<phase name='output' nodes='30' live='29' stamp='0.537'>
<phase_done name='output' nodes='38' live='37' stamp='0.541'/>
</phase>
<code_cache total_blobs='276' nmethods='19' adapters='169' free_code_cache='250509888'/>
<task_done success='1' nmsize='120' count='37932' stamp='0.545'/>
</task>
<task compile_id='13' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='32840' iicount='32840' stamp='0.545'>
<phase name='parse' nodes='3' live='3' stamp='0.545'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' iicount='32841'/>
<parse method='833' uses='32841' stamp='0.545'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='54' live='52' memory='27472' stamp='0.545'/>
</parse>
<phase_done name='parse' nodes='55' live='31' stamp='0.545'/>
</phase>
<phase name='optimizer' nodes='55' live='31' stamp='0.545'>
<phase name='ccp' nodes='55' live='31' stamp='0.546'>
<phase_done name='ccp' nodes='55' live='31' stamp='0.546'/>
</phase>
<phase name='idealLoop' nodes='55' live='31' stamp='0.546'>
<phase_done name='idealLoop' nodes='55' live='31' stamp='0.546'/>
</phase>
<phase_done name='optimizer' nodes='55' live='30' stamp='0.546'/>
</phase>
<phase name='matcher' nodes='55' live='30' stamp='0.546'>
<phase_done name='matcher' nodes='25' live='25' stamp='0.546'/>
</phase>
<phase name='regalloc' nodes='30' live='30' stamp='0.546'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='31' live='31' stamp='0.546'/>
</phase>
<phase name='output' nodes='31' live='31' stamp='0.546'>
<phase_done name='output' nodes='40' live='39' stamp='0.550'/>
</phase>
<code_cache total_blobs='279' nmethods='22' adapters='169' free_code_cache='250506304'/>
<task_done success='1' nmsize='152' count='32853' stamp='0.553'/>
</task>
<task compile_id='12' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='32853' iicount='32853' stamp='0.553'>
<phase name='parse' nodes='3' live='3' stamp='0.553'>
<klass id='832' name='java/lang/CharacterData' flags='1024'/>
<klass id='835' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='832' x='835'/>
<type id='722' name='int'/>
<method id='833' holder='832' name='of' return='832' arguments='722' flags='24' bytes='120' iicount='32853'/>
<klass id='836' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='833' bci='96' reason='unloaded' action='reinterpret' index='45' klass='836'/>
<klass id='837' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='833' bci='100' reason='unloaded' action='reinterpret' index='46' klass='837'/>
<klass id='838' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='833' bci='104' reason='unloaded' action='reinterpret' index='47' klass='838'/>
<klass id='839' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='833' bci='108' reason='unloaded' action='reinterpret' index='48' klass='839'/>
<klass id='840' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='833' bci='112' reason='unloaded' action='reinterpret' index='50' klass='840'/>
<klass id='841' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='833' bci='116' reason='unloaded' action='reinterpret' index='51' klass='841'/>
<parse method='833' uses='32853' stamp='0.553'>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='32853' cnt='32853' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='41' live='39' memory='25784' stamp='0.553'/>
</parse>
<phase_done name='parse' nodes='42' live='23' stamp='0.553'/>
</phase>
<phase name='optimizer' nodes='42' live='23' stamp='0.553'>
<phase name='ccp' nodes='42' live='23' stamp='0.553'>
<phase_done name='ccp' nodes='42' live='23' stamp='0.553'/>
</phase>
<phase name='idealLoop' nodes='42' live='23' stamp='0.553'>
<phase_done name='idealLoop' nodes='42' live='23' stamp='0.553'/>
</phase>
<phase_done name='optimizer' nodes='42' live='23' stamp='0.553'/>
</phase>
<phase name='matcher' nodes='42' live='23' stamp='0.553'>
<phase_done name='matcher' nodes='24' live='24' stamp='0.553'/>
</phase>
<phase name='regalloc' nodes='29' live='29' stamp='0.553'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='33' live='32' stamp='0.553'/>
</phase>
<phase name='output' nodes='33' live='32' stamp='0.553'>
<phase_done name='output' nodes='40' live='38' stamp='0.553'/>
</phase>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='832' x='835'/>
<code_cache total_blobs='286' nmethods='25' adapters='171' free_code_cache='250487296'/>
<task_done success='1' nmsize='120' count='32857' stamp='0.567'/>
</task>
<task compile_id='40' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='76377' iicount='76377' stamp='0.567'>
<phase name='parse' nodes='3' live='3' stamp='0.567'>
<type id='724' name='void'/>
<type id='722' name='int'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='832' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='76377'/>
<parse method='832' uses='76377' stamp='0.568'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75107' not_taken='1270' cnt='76377' prob='0.983372'/>
<bc code='183' bci='17'/>
<method id='834' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1528'/>
<call method='834' count='1261' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='1270' stamp='0.568'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='119' live='115' memory='37496' stamp='0.568'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='835' name='java/util/Arrays' flags='1'/>
<method id='836' holder='835' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1595'/>
<call method='836' count='1261' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='1270' stamp='0.569'>
<bc code='184' bci='11'/>
<klass id='839' name='java/lang/Math' flags='17'/>
<method id='840' holder='839' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='12260'/>
<call method='840' count='1083' prof_factor='0.796238' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='841' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15493'/>
<call method='841' count='1083' prof_factor='0.796238' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='295' live='290' memory='72264' stamp='0.570'/>
</parse>
<parse_done nodes='314' live='308' memory='75344' stamp='0.571'/>
</parse>
<phase_done name='parse' nodes='316' live='198' stamp='0.572'/>
</phase>
<phase name='optimizer' nodes='316' live='198' stamp='0.572'>
<phase name='escapeAnalysis' nodes='316' live='196' stamp='0.572'>
<phase name='connectionGraph' nodes='317' live='197' stamp='0.572'>
<phase_done name='connectionGraph' nodes='317' live='197' stamp='0.572'/>
</phase>
<phase_done name='escapeAnalysis' nodes='317' live='197' stamp='0.572'/>
</phase>
<phase name='ccp' nodes='317' live='197' stamp='0.572'>
<phase_done name='ccp' nodes='317' live='197' stamp='0.572'/>
</phase>
<phase name='idealLoop' nodes='321' live='195' stamp='0.572'>
<phase_done name='idealLoop' nodes='324' live='195' stamp='0.572'/>
</phase>
<phase_done name='optimizer' nodes='383' live='234' stamp='0.572'/>
</phase>
<phase name='matcher' nodes='383' live='234' stamp='0.572'>
<phase_done name='matcher' nodes='235' live='235' stamp='0.572'/>
</phase>
<phase name='regalloc' nodes='291' live='290' stamp='0.573'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='375' live='346' stamp='0.574'/>
</phase>
<phase name='output' nodes='377' live='348' stamp='0.574'>
<phase_done name='output' nodes='395' live='360' stamp='0.577'/>
</phase>
<code_cache total_blobs='290' nmethods='31' adapters='171' free_code_cache='250492032'/>
<task_done success='1' nmsize='728' count='76404' inlined_bytes='69' stamp='0.582'/>
</task>
<task compile_id='38' method='java/lang/AbstractStringBuilder append (C)Ljava/lang/AbstractStringBuilder;' bytes='29' count='72466' iicount='72466' stamp='0.582'>
<phase name='parse' nodes='3' live='3' stamp='0.582'>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<type id='717' name='char'/>
<method id='832' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='72466'/>
<parse method='832' uses='72466' stamp='0.582'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='834' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='40' compiler='C2' level='4' iicount='76404'/>
<call method='834' count='71954' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='72466' stamp='0.582'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75134' not_taken='1270' cnt='76404' prob='0.983378'/>
<bc code='183' bci='17'/>
<method id='835' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1528'/>
<call method='835' count='1261' prof_factor='0.948458' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='1204' stamp='0.583'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='137' live='133' memory='42088' stamp='0.583'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='836' name='java/util/Arrays' flags='1'/>
<method id='837' holder='836' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1596'/>
<call method='837' count='1261' prof_factor='0.948458' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='1204' stamp='0.583'>
<bc code='184' bci='11'/>
<klass id='841' name='java/lang/Math' flags='17'/>
<method id='842' holder='841' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='12268'/>
<call method='842' count='1084' prof_factor='0.754386' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='843' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15493'/>
<call method='843' count='1084' prof_factor='0.754386' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='313' live='308' memory='75488' stamp='0.583'/>
</parse>
<parse_done nodes='332' live='326' memory='79352' stamp='0.583'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='381' live='372' memory='87600' stamp='0.583'/>
</parse>
<phase_done name='parse' nodes='383' live='236' stamp='0.583'/>
</phase>
<phase name='optimizer' nodes='383' live='236' stamp='0.583'>
<phase name='escapeAnalysis' nodes='383' live='233' stamp='0.583'>
<phase name='connectionGraph' nodes='384' live='234' stamp='0.583'>
<phase_done name='connectionGraph' nodes='384' live='234' stamp='0.583'/>
</phase>
<phase_done name='escapeAnalysis' nodes='384' live='234' stamp='0.583'/>
</phase>
<phase name='ccp' nodes='384' live='234' stamp='0.583'>
<phase_done name='ccp' nodes='384' live='234' stamp='0.583'/>
</phase>
<phase name='idealLoop' nodes='388' live='232' stamp='0.583'>
<phase_done name='idealLoop' nodes='403' live='233' stamp='0.583'/>
</phase>
<phase_done name='optimizer' nodes='463' live='273' stamp='0.584'/>
</phase>
<phase name='matcher' nodes='463' live='273' stamp='0.584'>
<phase_done name='matcher' nodes='273' live='273' stamp='0.584'/>
</phase>
<phase name='regalloc' nodes='335' live='334' stamp='0.584'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='447' live='403' stamp='0.586'/>
</phase>
<phase name='output' nodes='449' live='405' stamp='0.586'>
<phase_done name='output' nodes='468' live='418' stamp='0.586'/>
</phase>
<code_cache total_blobs='291' nmethods='32' adapters='171' free_code_cache='250489600'/>
<task_done success='1' nmsize='888' count='72466' inlined_bytes='96' stamp='0.595'/>
</task>
<task compile_id='39' method='java/lang/StringBuffer append (C)Ljava/lang/StringBuffer;' bytes='13' count='72169' iicount='72169' stamp='0.595'>
<phase name='parse' nodes='3' live='3' stamp='0.595'>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<type id='717' name='char'/>
<method id='832' holder='794' name='append' return='794' arguments='717' flags='33' bytes='13' iicount='72169'/>
<parse method='832' uses='72169' stamp='0.595'>
<bc code='183' bci='7'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='834' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' compile_id='38' compiler='C2' level='4' iicount='72466'/>
<call method='834' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='834' uses='72169' stamp='0.595'>
<bc code='183' bci='7'/>
<type id='724' name='void'/>
<type id='722' name='int'/>
<method id='835' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' compile_id='40' compiler='C2' level='4' iicount='76404'/>
<call method='835' count='71954' prof_factor='0.995902' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='72169' stamp='0.595'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75134' not_taken='1270' cnt='76404' prob='0.983378'/>
<bc code='183' bci='17'/>
<method id='837' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1528'/>
<call method='837' count='1261' prof_factor='0.944571' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='1199' stamp='0.595'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='567' not_taken='961' cnt='1528' prob='0.371073'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1528' cnt='1528' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1528' not_taken='0' cnt='1528' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='163' live='159' memory='48344' stamp='0.595'/>
</parse>
<bc code='184' bci='20'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='838' name='java/util/Arrays' flags='1'/>
<method id='839' holder='838' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1596'/>
<call method='839' count='1261' prof_factor='0.944571' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='839' uses='1199' stamp='0.595'>
<bc code='184' bci='11'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='722' arguments='722 722' flags='9' bytes='11' compile_id='2' compiler='C2' level='4' iicount='12268'/>
<call method='844' count='1084' prof_factor='0.751253' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='845' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15493'/>
<call method='845' count='1084' prof_factor='0.751253' inline='1'/>
<intrinsic id='_arraycopy' nodes='106'/>
<parse_done nodes='340' live='335' memory='86568' stamp='0.596'/>
</parse>
<parse_done nodes='361' live='355' memory='90040' stamp='0.596'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='411' live='402' memory='100320' stamp='0.596'/>
</parse>
<parse_done nodes='432' live='422' memory='103608' stamp='0.596'/>
</parse>
<phase_done name='parse' nodes='434' live='268' stamp='0.596'/>
</phase>
<phase name='optimizer' nodes='434' live='268' stamp='0.596'>
<phase name='escapeAnalysis' nodes='434' live='265' stamp='0.596'>
<phase name='connectionGraph' nodes='434' live='265' stamp='0.596'>
<phase_done name='connectionGraph' nodes='434' live='265' stamp='0.596'/>
</phase>
<phase_done name='escapeAnalysis' nodes='434' live='265' stamp='0.596'/>
</phase>
<phase name='ccp' nodes='434' live='265' stamp='0.596'>
<phase_done name='ccp' nodes='434' live='265' stamp='0.596'/>
</phase>
<phase name='idealLoop' nodes='438' live='263' stamp='0.596'>
<phase_done name='idealLoop' nodes='453' live='264' stamp='0.596'/>
</phase>
<phase_done name='optimizer' nodes='618' live='395' stamp='0.596'/>
</phase>
<phase name='matcher' nodes='618' live='395' stamp='0.596'>
<phase_done name='matcher' nodes='389' live='389' stamp='0.597'/>
</phase>
<phase name='regalloc' nodes='490' live='489' stamp='0.597'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='659' live='591' stamp='0.599'/>
</phase>
<phase name='output' nodes='663' live='595' stamp='0.599'>
<phase_done name='output' nodes='687' live='609' stamp='0.600'/>
</phase>
<code_cache total_blobs='292' nmethods='33' adapters='171' free_code_cache='250486272'/>
<task_done success='1' nmsize='1528' count='72169' inlined_bytes='125' stamp='0.612'/>
</task>
<task compile_id='60' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='193726' iicount='12' stamp='0.654'>
<phase name='parse' nodes='3' live='3' stamp='0.654'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' iicount='12'/>
<parse method='833' uses='12' stamp='0.654'>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='0' not_taken='830' cnt='830' prob='never'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken never'/>
<uncommon_trap bci='10' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='10' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='837' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='838' holder='837' name='getAndIncrement' return='722' flags='17' bytes='12' iicount='193127'/>
<call method='838' count='830' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='830' stamp='0.654'>
<uncommon_trap bci='14' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='8'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='840' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' iicount='191842'/>
<call method='840' count='192181' prof_factor='0.00429769' inline='1'/>
<intrinsic id='_getAndAddInt' nodes='19'/>
<parse_done nodes='129' live='124' memory='40528' stamp='0.654'/>
</parse>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='0' not_taken='830' cnt='829' prob='never'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='146' live='140' memory='43536' stamp='0.654'/>
</parse>
<phase_done name='parse' nodes='146' live='92' stamp='0.654'/>
</phase>
<phase name='optimizer' nodes='146' live='92' stamp='0.654'>
<phase name='idealLoop' nodes='146' live='87' stamp='0.654'>
<loop_tree>
<loop idx='146' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='150' live='87' stamp='0.655'/>
</phase>
<phase name='idealLoop' nodes='150' live='87' stamp='0.655'>
<loop_tree>
<loop idx='146' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='150' live='87' stamp='0.655'/>
</phase>
<phase name='idealLoop' nodes='150' live='87' stamp='0.655'>
<loop_tree>
<loop idx='146' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='150' live='87' stamp='0.655'/>
</phase>
<phase name='ccp' nodes='150' live='87' stamp='0.655'>
<phase_done name='ccp' nodes='150' live='87' stamp='0.655'/>
</phase>
<phase name='idealLoop' nodes='150' live='87' stamp='0.655'>
<loop_tree>
<loop idx='146' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='153' live='71' stamp='0.655'/>
</phase>
<phase name='idealLoop' nodes='153' live='71' stamp='0.655'>
<loop_tree>
<loop idx='146' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='156' live='71' stamp='0.655'/>
</phase>
<phase_done name='optimizer' nodes='160' live='72' stamp='0.655'/>
</phase>
<phase name='matcher' nodes='160' live='72' stamp='0.655'>
<phase_done name='matcher' nodes='69' live='69' stamp='0.655'/>
</phase>
<phase name='regalloc' nodes='82' live='82' stamp='0.655'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='91' live='86' stamp='0.655'/>
</phase>
<phase name='output' nodes='91' live='86' stamp='0.655'>
<phase_done name='output' nodes='104' live='96' stamp='0.656'/>
</phase>
<code_cache total_blobs='296' nmethods='37' adapters='171' free_code_cache='250481472'/>
<task_done success='1' nmsize='184' count='12' backedge_count='193726' inlined_bytes='39' stamp='0.659'/>
</task>
<task compile_id='63' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='191842' backedge_count='495716' iicount='191842' stamp='0.713'>
<phase name='parse' nodes='3' live='3' stamp='0.713'>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='832' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' compile_id='55' compiler='C1' level='2' iicount='191842'/>
<parse method='832' uses='191842' stamp='0.713'>
<bc code='182' bci='3'/>
<method id='834' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='54' compile_kind='c2n' level='0' iicount='1280'/>
<call method='834' count='651623' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='15'/>
<bc code='182' bci='18'/>
<type id='716' name='boolean'/>
<method id='835' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1195'/>
<call method='835' count='670531' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='21'/>
<branch target_bci='0' taken='532157' not_taken='195241' cnt='727398' prob='0.73159'/>
<uncommon_trap bci='0' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='loop_limit_check' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='3'/>
<call method='834' count='651623' prof_factor='1' inline='1'/>
<intrinsic id='_getIntVolatile' nodes='14'/>
<bc code='182' bci='18'/>
<call method='835' count='670531' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='21'/>
<branch target_bci='0' taken='532157' not_taken='195241' cnt='727398' prob='0.73159'/>
<parse_done nodes='178' live='173' memory='48240' stamp='0.713'/>
</parse>
<phase_done name='parse' nodes='179' live='124' stamp='0.713'/>
</phase>
<phase name='optimizer' nodes='179' live='124' stamp='0.713'>
<phase name='idealLoop' nodes='179' live='119' stamp='0.713'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='102' stamp='0.713'/>
</phase>
<phase name='idealLoop' nodes='180' live='102' stamp='0.713'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='102' stamp='0.713'/>
</phase>
<phase name='idealLoop' nodes='180' live='102' stamp='0.713'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='102' stamp='0.713'/>
</phase>
<phase name='ccp' nodes='180' live='102' stamp='0.713'>
<phase_done name='ccp' nodes='180' live='102' stamp='0.713'/>
</phase>
<phase name='idealLoop' nodes='180' live='102' stamp='0.713'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='86' stamp='0.713'/>
</phase>
<phase name='idealLoop' nodes='180' live='86' stamp='0.713'>
<loop_tree>
<loop idx='179' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='180' live='86' stamp='0.713'/>
</phase>
<phase_done name='optimizer' nodes='180' live='86' stamp='0.713'/>
</phase>
<phase name='matcher' nodes='180' live='86' stamp='0.713'>
<phase_done name='matcher' nodes='90' live='90' stamp='0.713'/>
</phase>
<phase name='regalloc' nodes='100' live='100' stamp='0.714'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='108' live='106' stamp='0.714'/>
</phase>
<phase name='output' nodes='108' live='106' stamp='0.714'>
<phase_done name='output' nodes='118' live='114' stamp='0.714'/>
</phase>
<code_cache total_blobs='304' nmethods='45' adapters='171' free_code_cache='250472832'/>
<task_done success='1' nmsize='152' count='191842' backedge_count='495716' stamp='0.716'/>
</task>
<task compile_id='87' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread run ()V' bytes='46' count='12' backedge_count='162642' iicount='12' osr_bci='7' stamp='1.163'>
<phase name='parse' nodes='3' live='3' stamp='1.163'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='46' iicount='12'/>
<parse method='833' uses='12' osr_bci='7' stamp='1.163'>
<observe that='has_exception_handlers'/>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='7' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='7' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='7' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='12'/>
<branch target_bci='28' taken='0' not_taken='0'/>
<bc code='182' bci='19'/>
<klass id='838' name='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject' flags='8'/>
<method id='839' holder='838' name='add' return='724' flags='1' bytes='11' iicount='165583'/>
<dependency type='unique_concrete_method' ctxk='838' x='839'/>
<call method='839' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='call site not reached'/>
<direct_call bci='19'/>
<uncommon_trap bci='19' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='32'/>
<klass id='836' name='java/util/concurrent/CountDownLatch' flags='1'/>
<method id='837' holder='836' name='countDown' return='724' flags='1' bytes='10' iicount='12'/>
<dependency type='unique_concrete_method' ctxk='836' x='837'/>
<call method='837' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<direct_call bci='32'/>
<uncommon_trap bci='32' reason='null_check' action='maybe_recompile'/>
<bc code='191' bci='44'/>
<uncommon_trap bci='44' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='270' live='262' memory='73392' stamp='1.165'/>
</parse>
<phase_done name='parse' nodes='272' live='203' stamp='1.165'/>
</phase>
<phase name='optimizer' nodes='272' live='203' stamp='1.165'>
<phase name='idealLoop' nodes='282' live='185' stamp='1.166'>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='289' live='183' stamp='1.166'/>
</phase>
<phase name='idealLoop' nodes='289' live='183' stamp='1.166'>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='289' live='183' stamp='1.166'/>
</phase>
<phase name='idealLoop' nodes='289' live='183' stamp='1.166'>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='289' live='183' stamp='1.166'/>
</phase>
<phase name='ccp' nodes='289' live='183' stamp='1.166'>
<phase_done name='ccp' nodes='289' live='183' stamp='1.166'/>
</phase>
<phase name='idealLoop' nodes='290' live='180' stamp='1.166'>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='299' live='165' stamp='1.166'/>
</phase>
<phase name='idealLoop' nodes='299' live='165' stamp='1.166'>
<loop_tree>
<loop idx='282' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='308' live='165' stamp='1.166'/>
</phase>
<phase_done name='optimizer' nodes='355' live='194' stamp='1.166'/>
</phase>
<phase name='matcher' nodes='355' live='194' stamp='1.166'>
<phase_done name='matcher' nodes='177' live='177' stamp='1.166'/>
</phase>
<phase name='regalloc' nodes='232' live='232' stamp='1.167'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='304' live='293' stamp='1.167'/>
</phase>
<phase name='output' nodes='304' live='293' stamp='1.168'>
<phase_done name='output' nodes='325' live='307' stamp='1.168'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='unique_concrete_method' ctxk='838' x='839'/>
<dependency type='unique_concrete_method' ctxk='836' x='837'/>
<code_cache total_blobs='319' nmethods='53' adapters='178' free_code_cache='250384704'/>
<task_done success='1' nmsize='856' count='12' backedge_count='459776' stamp='1.173'/>
</task>
<fragment>
<![CDATA[
<task compile_id='102' method='java/lang/CharacterDataLatin1 toLowerCase (I)I' bytes='39' count='29719' iicount='29719' stamp='1.305'>
<phase name='parse' nodes='3' live='3' stamp='1.306'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='833' holder='832' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' iicount='29719'/>
<parse method='833' uses='29719' stamp='1.306'>
<bc code='182' bci='4'/>
<method id='835' holder='832' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='13' compiler='C2' level='4' iicount='32853'/>
<dependency type='unique_concrete_method' ctxk='832' x='835'/>
<call method='835' count='29239' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='29713' stamp='1.306'>
<bc code='46' bci='7'/>
<uncommon_trap bci='7' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='65' live='63' memory='30384' stamp='1.306'/>
</parse>
<bc code='153' bci='12'/>
<branch target_bci='37' taken='28206' not_taken='1507' cnt='29713' prob='0.949281'/>
<bc code='159' bci='21'/>
<branch target_bci='37' taken='0' not_taken='1507' cnt='1507' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='97' live='93' memory='35392' stamp='1.306'/>
</parse>
<phase_done name='parse' nodes='98' live='58' stamp='1.306'/>
</phase>
<phase name='optimizer' nodes='98' live='58' stamp='1.306'>
<phase name='ccp' nodes='98' live='57' stamp='1.306'>
<phase_done name='ccp' nodes='98' live='57' stamp='1.306'/>
</phase>
<phase name='idealLoop' nodes='98' live='57' stamp='1.306'>
<phase_done name='idealLoop' nodes='98' live='57' stamp='1.306'/>
</phase>
<phase_done name='optimizer' nodes='98' live='56' stamp='1.306'/>
</phase>
<phase name='matcher' nodes='98' live='56' stamp='1.306'>
<phase_done name='matcher' nodes='49' live='49' stamp='1.306'/>
</phase>
<phase name='regalloc' nodes='61' live='61' stamp='1.306'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='72' live='70' stamp='1.307'/>
</phase>
<phase name='output' nodes='72' live='70' stamp='1.307'>
]]>
</fragment>
</compilation_log>
<compilation_log thread='25548'>
<start_compile_thread name='C2 CompilerThread0' thread='25548' process='17108' stamp='0.450'/>
<task compile_id='4' method='java/io/WinNTFileSystem normalize (Ljava/lang/String;)Ljava/lang/String;' bytes='143' count='1492' backedge_count='47935' iicount='1492' stamp='0.475'>
<phase name='parse' nodes='3' live='3' stamp='0.476'>
<klass id='730' name='java/lang/String' flags='17'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='normalize' return='730' arguments='730' flags='1' bytes='143' iicount='1492'/>
<parse method='833' uses='1492' stamp='0.476'>
<bc code='182' bci='1'/>
<type id='722' name='int'/>
<method id='835' holder='730' name='length' return='722' flags='1' bytes='6' iicount='37367'/>
<call method='835' count='1280' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='835' uses='1280' stamp='0.476'>
<uncommon_trap bci='1' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='68' live='65' memory='30968' stamp='0.476'/>
</parse>
<bc code='162' bci='25'/>
<branch target_bci='125' taken='391' not_taken='34415' cnt='34806' prob='0.0112337'/>
<uncommon_trap bci='28' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='28' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='31'/>
<type id='717' name='char'/>
<method id='837' holder='730' name='charAt' return='717' arguments='722' flags='1' bytes='29' iicount='243722'/>
<call method='837' count='34415' prof_factor='1' inline='1'/>
<klass id='840' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<uncommon_trap method='837' bci='13' reason='unloaded' action='reinterpret' index='245' klass='840'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='34415' stamp='0.476'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='209' live='199' memory='54880' stamp='0.476'/>
</parse>
<bc code='160' bci='40'/>
<branch target_bci='65' taken='34098' not_taken='317' cnt='34415' prob='0.990789'/>
<bc code='160' bci='49'/>
<branch target_bci='59' taken='317' not_taken='0' cnt='317' prob='always'/>
<uncommon_trap bci='49' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='183' bci='61'/>
<method id='836' holder='832' name='normalize' return='730' arguments='730 722 722' flags='2' bytes='231' iicount='889'/>
<call method='836' count='317' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='317' stamp='0.476'>
<bc code='154' bci='1'/>
<branch target_bci='6' taken='683' not_taken='0' cnt='683' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='162' bci='8'/>
<branch target_bci='13' taken='0' not_taken='683' cnt='683' prob='never'/>
<uncommon_trap bci='8' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='183' bci='24'/>
<type id='724' name='void'/>
<klass id='794' name='java/lang/StringBuffer' flags='17'/>
<method id='842' holder='794' name='&lt;init&gt;' return='724' arguments='722' flags='1' bytes='6' iicount='1213'/>
<call method='842' count='683' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='24'/>
<bc code='154' bci='30'/>
<branch target_bci='46' taken='0' not_taken='683' cnt='683' prob='never'/>
<bc code='183' bci='38'/>
<method id='850' holder='832' name='normalizePrefix' return='722' arguments='730 722 794' flags='2' bytes='132' iicount='889'/>
<call method='850' count='683' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='244' stamp='0.477'>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='13'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.477'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='456' live='436' memory='106504' stamp='0.483'/>
</parse>
<bc code='183' bci='16'/>
<type id='716' name='boolean'/>
<method id='846' holder='832' name='isSlash' return='716' arguments='717' flags='2' bytes='18' iicount='79588'/>
<call method='846' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.483'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='489' live='468' memory='111824' stamp='0.483'/>
</parse>
<bc code='182' bci='40'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.483'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='600' live='574' memory='144384' stamp='0.487'/>
</parse>
<bc code='183' bci='46'/>
<method id='853' holder='832' name='isLetter' return='716' arguments='717' flags='2' bytes='30' iicount='2681'/>
<call method='853' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='0.487'>
<bc code='161' bci='3'/>
<branch target_bci='12' taken='2681' not_taken='0' cnt='2681' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='15'/>
<branch target_bci='28' taken='0' not_taken='2681' cnt='2681' prob='never'/>
<uncommon_trap bci='15' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='21'/>
<branch target_bci='28' taken='0' not_taken='2681' cnt='2681' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='654' live='624' memory='154320' stamp='0.488'/>
</parse>
<bc code='182' bci='57'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.488'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='755' live='720' memory='170080' stamp='0.488'/>
</parse>
<bc code='182' bci='68'/>
<method id='847' holder='794' name='append' return='794' arguments='717' flags='33' bytes='13' iicount='71999'/>
<call method='847' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='68'/>
<bc code='182' bci='75'/>
<call method='847' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='75'/>
<bc code='182' bci='96'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.488'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='891' live='852' memory='193208' stamp='0.488'/>
</parse>
<bc code='183' bci='99'/>
<call method='846' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.488'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='922' live='882' memory='197184' stamp='0.488'/>
</parse>
<bc code='182' bci='108'/>
<call method='837' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.488'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1005' live='961' memory='212616' stamp='0.488'/>
</parse>
<bc code='183' bci='111'/>
<call method='846' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.488'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='1036' live='991' memory='247888' stamp='0.488'/>
</parse>
<bc code='182' bci='125'/>
<call method='847' count='-1' prof_factor='0.274466' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='125'/>
<parse_done nodes='1066' live='1020' memory='256792' stamp='0.488'/>
</parse>
<bc code='162' bci='64'/>
<branch target_bci='221' taken='683' not_taken='55866' cnt='56549' prob='0.012078'/>
<uncommon_trap bci='67' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='67' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='73'/>
<call method='837' count='55866' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='19921' stamp='0.488'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1193' live='1140' memory='278264' stamp='0.489'/>
</parse>
<bc code='183' bci='81'/>
<call method='846' count='55866' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='19921' stamp='0.489'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='1224' live='1170' memory='282424' stamp='0.489'/>
</parse>
<bc code='153' bci='84'/>
<branch target_bci='210' taken='49869' not_taken='5997' cnt='55866' prob='0.892654'/>
<bc code='162' bci='90'/>
<branch target_bci='112' taken='0' not_taken='5997' cnt='5997' prob='never'/>
<uncommon_trap bci='90' reason='unstable_if' action='reinterpret' comment='taken never'/>
<uncommon_trap bci='93' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='93' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='97'/>
<call method='837' count='5997' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='2138' stamp='0.489'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1359' live='1297' memory='304824' stamp='0.489'/>
</parse>
<bc code='183' bci='100'/>
<call method='846' count='5997' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='2138' stamp='0.489'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='1390' live='1327' memory='311032' stamp='0.489'/>
</parse>
<bc code='153' bci='103'/>
<branch target_bci='112' taken='5997' not_taken='0' cnt='5997' prob='always'/>
<uncommon_trap bci='103' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='115'/>
<branch target_bci='199' taken='5997' not_taken='0' cnt='5997' prob='always'/>
<uncommon_trap bci='115' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='203'/>
<call method='847' count='5997' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='203'/>
<bc code='182' bci='214'/>
<call method='847' count='49869' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='214'/>
<bc code='162' bci='64'/>
<branch target_bci='221' taken='683' not_taken='55866' cnt='55866' prob='0.012078'/>
<bc code='182' bci='223'/>
<method id='845' holder='794' name='toString' return='730' flags='33' bytes='36' iicount='1210'/>
<call method='845' count='683' prof_factor='0.35658' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='223'/>
<parse_done nodes='1487' live='1421' memory='331168' stamp='0.489'/>
</parse>
<bc code='160' bci='68'/>
<branch target_bci='94' taken='30202' not_taken='3896' cnt='34098' prob='0.885741'/>
<bc code='160' bci='74'/>
<branch target_bci='94' taken='3896' not_taken='0' cnt='3896' prob='always'/>
<uncommon_trap bci='74' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='98'/>
<branch target_bci='115' taken='33141' not_taken='957' cnt='34098' prob='0.971934'/>
<bc code='164' bci='104'/>
<branch target_bci='115' taken='385' not_taken='572' cnt='957' prob='0.402299'/>
<bc code='183' bci='111'/>
<call method='836' count='572' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='836' uses='572' stamp='0.489'>
<bc code='154' bci='1'/>
<branch target_bci='6' taken='683' not_taken='0' cnt='683' prob='always'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='162' bci='8'/>
<branch target_bci='13' taken='0' not_taken='683' cnt='683' prob='never'/>
<bc code='183' bci='24'/>
<call method='842' count='683' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='24'/>
<bc code='154' bci='30'/>
<branch target_bci='46' taken='0' not_taken='683' cnt='683' prob='never'/>
<bc code='183' bci='38'/>
<call method='850' count='683' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='850' uses='439' stamp='0.490'>
<uncommon_trap bci='9' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='9' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='13'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.490'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1744' live='1668' memory='374848' stamp='0.508'/>
</parse>
<bc code='183' bci='16'/>
<call method='846' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.508'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='1775' live='1698' memory='378824' stamp='0.508'/>
</parse>
<bc code='182' bci='40'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.508'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='1885' live='1803' memory='396856' stamp='0.515'/>
</parse>
<bc code='183' bci='46'/>
<call method='853' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='853' uses='-1' stamp='0.515'>
<bc code='161' bci='3'/>
<branch target_bci='12' taken='2681' not_taken='0' cnt='2681' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='15'/>
<branch target_bci='28' taken='0' not_taken='2681' cnt='2681' prob='never'/>
<uncommon_trap bci='15' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='163' bci='21'/>
<branch target_bci='28' taken='0' not_taken='2681' cnt='2681' prob='never'/>
<uncommon_trap bci='21' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='1936' live='1850' memory='409432' stamp='0.515'/>
</parse>
<bc code='182' bci='57'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.515'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2034' live='1943' memory='427696' stamp='0.519'/>
</parse>
<bc code='182' bci='68'/>
<call method='847' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='68'/>
<bc code='182' bci='75'/>
<call method='847' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='75'/>
<bc code='182' bci='96'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.519'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2169' live='2074' memory='516040' stamp='0.521'/>
</parse>
<bc code='183' bci='99'/>
<call method='846' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.521'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='2200' live='2104' memory='520272' stamp='0.521'/>
</parse>
<bc code='182' bci='108'/>
<call method='837' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='-1' stamp='0.521'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2283' live='2183' memory='534928' stamp='0.525'/>
</parse>
<bc code='183' bci='111'/>
<call method='846' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='-1' stamp='0.525'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='2314' live='2213' memory='538904' stamp='0.525'/>
</parse>
<bc code='182' bci='125'/>
<call method='847' count='-1' prof_factor='0.493813' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='125'/>
<parse_done nodes='2344' live='2242' memory='544288' stamp='0.525'/>
</parse>
<bc code='162' bci='64'/>
<branch target_bci='221' taken='683' not_taken='55866' cnt='56549' prob='0.012078'/>
<uncommon_trap bci='67' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='67' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='73'/>
<call method='837' count='55866' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='35945' stamp='0.525'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2471' live='2362' memory='564480' stamp='0.528'/>
</parse>
<bc code='183' bci='81'/>
<call method='846' count='55866' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='35945' stamp='0.528'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='2502' live='2392' memory='568640' stamp='0.528'/>
</parse>
<bc code='153' bci='84'/>
<branch target_bci='210' taken='49869' not_taken='5997' cnt='55866' prob='0.892654'/>
<bc code='162' bci='90'/>
<branch target_bci='112' taken='0' not_taken='5997' cnt='5997' prob='never'/>
<uncommon_trap bci='90' reason='unstable_if' action='reinterpret' comment='taken never'/>
<uncommon_trap bci='93' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='93' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='97'/>
<call method='837' count='5997' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='837' uses='3859' stamp='0.528'>
<bc code='155' bci='1'/>
<branch target_bci='13' taken='0' not_taken='243722' cnt='243722' prob='never'/>
<uncommon_trap bci='1' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='190' bci='9'/>
<uncommon_trap bci='9' reason='null_check' action='maybe_recompile'/>
<bc code='161' bci='10'/>
<branch target_bci='22' taken='243722' not_taken='0' cnt='243722' prob='always'/>
<uncommon_trap bci='10' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='27'/>
<uncommon_trap bci='27' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='2637' live='2519' memory='591352' stamp='0.528'/>
</parse>
<bc code='183' bci='100'/>
<call method='846' count='5997' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='846' uses='3859' stamp='0.528'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5508' not_taken='74080' cnt='79588' prob='0.0692064'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71133' not_taken='2947' cnt='74080' prob='0.960219'/>
<parse_done nodes='2668' live='2549' memory='595512' stamp='0.528'/>
</parse>
<bc code='153' bci='103'/>
<branch target_bci='112' taken='5997' not_taken='0' cnt='5997' prob='always'/>
<uncommon_trap bci='103' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='115'/>
<branch target_bci='199' taken='5997' not_taken='0' cnt='5997' prob='always'/>
<uncommon_trap bci='115' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='182' bci='203'/>
<call method='847' count='5997' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='203'/>
<bc code='182' bci='214'/>
<call method='847' count='49869' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='214'/>
<bc code='162' bci='64'/>
<branch target_bci='221' taken='683' not_taken='55866' cnt='55866' prob='0.012078'/>
<bc code='182' bci='223'/>
<call method='845' count='683' prof_factor='0.64342' inline='1'/>
<inline_success reason='inline (hot)'/>
<direct_call bci='223'/>
<parse_done nodes='2765' live='2643' memory='617688' stamp='0.528'/>
</parse>
<bc code='162' bci='25'/>
<branch target_bci='125' taken='391' not_taken='34415' cnt='33526' prob='0.0112337'/>
<bc code='160' bci='128'/>
<branch target_bci='141' taken='391' not_taken='0' cnt='391' prob='always'/>
<uncommon_trap bci='128' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='2797' live='2672' memory='630040' stamp='0.528'/>
</parse>
<late_inline method='845'>
<jvms bci='223' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='845' uses='439' stamp='0.529'>
<bc code='184' bci='17'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='859' name='java/util/Arrays' flags='1'/>
<method id='860' holder='859' name='copyOfRange' return='821' arguments='821 722 722' flags='9' bytes='63' iicount='4727'/>
<call method='860' count='-1' prof_factor='0.36281' inline='1'/>
<klass id='866' name='java/lang/IllegalArgumentException' flags='1'/>
<uncommon_trap method='860' bci='8' reason='unloaded' action='reinterpret' index='285' klass='866'/>
<inline_fail reason='too big'/>
<direct_call bci='17'/>
<bc code='183' bci='32'/>
<method id='858' holder='730' name='&lt;init&gt;' return='724' arguments='821 716' flags='0' bytes='10' iicount='1551'/>
<call method='858' count='-1' prof_factor='0.36281' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='858' uses='-1' stamp='0.545'>
<bc code='183' bci='1'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='867' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='22906'/>
<call method='867' count='1054' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='867' uses='1551' stamp='0.545'>
<parse_done nodes='2942' live='1652' memory='655528' stamp='0.545'/>
</parse>
<parse_done nodes='2959' live='1668' memory='658320' stamp='0.545'/>
</parse>
<parse_done nodes='2978' live='1686' memory='661360' stamp='0.545'/>
</parse>
<late_inline method='847'>
<jvms bci='214' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='32087' stamp='0.545'>
<bc code='183' bci='7'/>
<klass id='793' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='857' holder='793' name='append' return='793' arguments='717' flags='1' bytes='29' iicount='72289'/>
<call method='857' count='71657' prof_factor='0.445659' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='32087' stamp='0.546'>
<bc code='183' bci='7'/>
<method id='871' holder='793' name='ensureCapacityInternal' return='724' arguments='722' flags='2' bytes='27' iicount='76362'/>
<call method='871' count='71947' prof_factor='0.443871' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='32087' stamp='0.546'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<method id='873' holder='793' name='newCapacity' return='722' arguments='722' flags='2' bytes='39' iicount='1522'/>
<call method='873' count='1255' prof_factor='0.420196' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='531' stamp='0.546'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='3121' live='1824' memory='686208' stamp='0.546'/>
</parse>
<bc code='184' bci='20'/>
<method id='874' holder='859' name='copyOf' return='821' arguments='821 722' flags='9' bytes='19' iicount='1586'/>
<call method='874' count='1255' prof_factor='0.420196' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='531' stamp='0.546'>
<bc code='184' bci='11'/>
<klass id='863' name='java/lang/Math' flags='17'/>
<method id='864' holder='863' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='12201'/>
<call method='864' count='1074' prof_factor='0.334805' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<klass id='735' name='java/lang/System' flags='17'/>
<method id='865' holder='735' name='arraycopy' return='724' arguments='729 722 729 722 722' flags='265' bytes='0' compile_id='1' compile_kind='c2n' level='0' iicount='15493'/>
<call method='865' count='1074' prof_factor='0.334805' inline='1'/>
<intrinsic id='_arraycopy' nodes='105'/>
<parse_done nodes='3297' live='1999' memory='713648' stamp='0.546'/>
</parse>
<parse_done nodes='3316' live='2017' memory='717120' stamp='0.550'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3365' live='2063' memory='726712' stamp='0.550'/>
</parse>
<parse_done nodes='3386' live='2083' memory='730376' stamp='0.550'/>
</parse>
<late_inline method='847'>
<jvms bci='203' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='3859' stamp='0.551'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='0.053598' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='3859' stamp='0.553'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.0533829' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='3859' stamp='0.553'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<call method='873' count='1255' prof_factor='0.0505356' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='64' stamp='0.553'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='3526' live='2218' memory='753144' stamp='0.553'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1255' prof_factor='0.0505356' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='64' stamp='0.553'>
<bc code='184' bci='11'/>
<call method='864' count='1074' prof_factor='0.0403531' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1074' prof_factor='0.0403531' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='3692' live='2383' memory='780392' stamp='0.553'/>
</parse>
<parse_done nodes='3711' live='2401' memory='783800' stamp='0.553'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='3760' live='2447' memory='799168' stamp='0.553'/>
</parse>
<parse_done nodes='3781' live='2467' memory='802832' stamp='0.553'/>
</parse>
<late_inline method='847'>
<jvms bci='125' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.553'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.564'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.564'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<call method='873' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1191' stamp='0.568'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='3921' live='2602' memory='826112' stamp='0.568'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1191' stamp='0.568'>
<bc code='184' bci='11'/>
<call method='864' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4087' live='2767' memory='853560' stamp='0.568'/>
</parse>
<parse_done nodes='4106' live='2785' memory='1017416' stamp='0.570'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4155' live='2831' memory='1026840' stamp='0.572'/>
</parse>
<parse_done nodes='4176' live='2851' memory='1030696' stamp='0.572'/>
</parse>
<late_inline method='847'>
<jvms bci='75' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.572'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.577'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.577'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<call method='873' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1191' stamp='0.582'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='4316' live='2986' memory='1057432' stamp='0.582'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1191' stamp='0.582'>
<bc code='184' bci='11'/>
<call method='864' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4482' live='3151' memory='1117672' stamp='0.583'/>
</parse>
<parse_done nodes='4501' live='3169' memory='1121336' stamp='0.583'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4550' live='3215' memory='1130376' stamp='0.583'/>
</parse>
<parse_done nodes='4571' live='3235' memory='1134232' stamp='0.583'/>
</parse>
<late_inline method='847'>
<jvms bci='68' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.583'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.583'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.583'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<call method='873' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1191' stamp='0.583'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='4711' live='3370' memory='1157304' stamp='0.583'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1191' stamp='0.583'>
<bc code='184' bci='11'/>
<call method='864' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='4877' live='3535' memory='1184872' stamp='0.584'/>
</parse>
<parse_done nodes='4896' live='3553' memory='1188280' stamp='0.584'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='4945' live='3599' memory='1207560' stamp='0.584'/>
</parse>
<parse_done nodes='4966' live='3619' memory='1211416' stamp='0.584'/>
</parse>
<late_inline method='842'>
<jvms bci='24' method='836'/>
<jvms bci='111' method='833'/>
</late_inline>
<parse method='842' uses='439' stamp='0.584'>
<bc code='183' bci='2'/>
<method id='852' holder='793' name='&lt;init&gt;' return='724' arguments='722' flags='0' bytes='12' iicount='2334'/>
<call method='852' count='-1' prof_factor='0.361913' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.584'>
<bc code='183' bci='1'/>
<call method='867' count='1859' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='867' uses='2334' stamp='0.584'>
<parse_done nodes='5011' live='3662' memory='1220208' stamp='0.584'/>
</parse>
<parse_done nodes='5056' live='3706' memory='1227152' stamp='0.584'/>
</parse>
<parse_done nodes='5063' live='3712' memory='1229360' stamp='0.584'/>
</parse>
<late_inline method='845'>
<jvms bci='223' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='845' uses='244' stamp='0.584'>
<bc code='184' bci='17'/>
<call method='860' count='-1' prof_factor='0.201653' inline='1'/>
<inline_fail reason='too big'/>
<direct_call bci='17'/>
<bc code='183' bci='32'/>
<call method='858' count='-1' prof_factor='0.201653' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='858' uses='-1' stamp='0.584'>
<bc code='183' bci='1'/>
<call method='867' count='1054' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='867' uses='1551' stamp='0.584'>
<parse_done nodes='5195' live='3842' memory='1251968' stamp='0.584'/>
</parse>
<parse_done nodes='5212' live='3858' memory='1254704' stamp='0.585'/>
</parse>
<parse_done nodes='5231' live='3876' memory='1257744' stamp='0.585'/>
</parse>
<late_inline method='847'>
<jvms bci='214' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='17782' stamp='0.585'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='0.246976' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='17782' stamp='0.585'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.245985' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='17782' stamp='0.585'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<call method='873' count='1255' prof_factor='0.232865' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='294' stamp='0.585'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='5371' live='4011' memory='1282352' stamp='0.585'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1255' prof_factor='0.232865' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='294' stamp='0.585'>
<bc code='184' bci='11'/>
<call method='864' count='1074' prof_factor='0.185372' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1074' prof_factor='0.185372' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='5537' live='4176' memory='1309728' stamp='0.585'/>
</parse>
<parse_done nodes='5556' live='4194' memory='1313352' stamp='0.585'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='5605' live='4240' memory='1323928' stamp='0.585'/>
</parse>
<parse_done nodes='5626' live='4260' memory='1327592' stamp='0.585'/>
</parse>
<late_inline method='847'>
<jvms bci='203' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='2138' stamp='0.585'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='0.0296949' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='2138' stamp='0.585'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.0295757' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='2138' stamp='0.585'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<call method='873' count='1255' prof_factor='0.0279982' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='35' stamp='0.585'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='5766' live='4395' memory='1358512' stamp='0.586'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1255' prof_factor='0.0279982' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='35' stamp='0.586'>
<bc code='184' bci='11'/>
<call method='864' count='1074' prof_factor='0.0220681' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1074' prof_factor='0.0220681' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='5932' live='4560' memory='1387352' stamp='0.586'/>
</parse>
<parse_done nodes='5951' live='4578' memory='1390760' stamp='0.586'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6000' live='4624' memory='1403896' stamp='0.595'/>
</parse>
<parse_done nodes='6021' live='4644' memory='1407560' stamp='0.595'/>
</parse>
<late_inline method='847'>
<jvms bci='125' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.595'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.595'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.595'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<call method='873' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1191' stamp='0.595'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='6161' live='4779' memory='1431160' stamp='0.595'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1191' stamp='0.595'>
<bc code='184' bci='11'/>
<call method='864' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6327' live='4944' memory='1464128' stamp='0.595'/>
</parse>
<parse_done nodes='6346' live='4962' memory='1467536' stamp='0.595'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6395' live='5008' memory='1477592' stamp='0.596'/>
</parse>
<parse_done nodes='6416' live='5028' memory='1481448' stamp='0.596'/>
</parse>
<late_inline method='847'>
<jvms bci='75' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.596'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.596'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.596'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<call method='873' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1191' stamp='0.596'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='6556' live='5163' memory='1505160' stamp='0.596'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1191' stamp='0.596'>
<bc code='184' bci='11'/>
<call method='864' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='6722' live='5328' memory='1533368' stamp='0.596'/>
</parse>
<parse_done nodes='6741' live='5346' memory='1537288' stamp='0.596'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='6790' live='5392' memory='1546464' stamp='0.596'/>
</parse>
<parse_done nodes='6811' live='5412' memory='1550320' stamp='0.596'/>
</parse>
<late_inline method='847'>
<jvms bci='68' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='847' uses='-1' stamp='0.596'>
<bc code='183' bci='7'/>
<call method='857' count='71657' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='857' uses='71999' stamp='0.596'>
<bc code='183' bci='7'/>
<call method='871' count='71947' prof_factor='0.995988' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='871' uses='71999' stamp='0.596'>
<bc code='190' bci='5'/>
<uncommon_trap bci='5' reason='null_check' action='maybe_recompile'/>
<bc code='158' bci='7'/>
<branch target_bci='26' taken='75099' not_taken='1263' cnt='76362' prob='0.98346'/>
<bc code='183' bci='17'/>
<call method='873' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='873' uses='1191' stamp='0.596'>
<bc code='156' bci='13'/>
<branch target_bci='18' taken='562' not_taken='960' cnt='1522' prob='0.369251'/>
<bc code='158' bci='19'/>
<branch target_bci='29' taken='0' not_taken='1522' cnt='1522' prob='never'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='156' bci='26'/>
<branch target_bci='37' taken='1522' not_taken='0' cnt='1522' prob='always'/>
<uncommon_trap bci='26' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='6951' live='5547' memory='1573264' stamp='0.596'/>
</parse>
<bc code='184' bci='20'/>
<call method='874' count='1255' prof_factor='0.942864' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='874' uses='1191' stamp='0.596'>
<bc code='184' bci='11'/>
<call method='864' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='184' bci='14'/>
<call method='865' count='1074' prof_factor='0.750946' inline='1'/>
<intrinsic id='_arraycopy' nodes='100'/>
<parse_done nodes='7117' live='5712' memory='1599936' stamp='0.596'/>
</parse>
<parse_done nodes='7136' live='5730' memory='1603344' stamp='0.597'/>
</parse>
<bc code='85' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='26' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='7185' live='5776' memory='1621432' stamp='0.597'/>
</parse>
<parse_done nodes='7206' live='5796' memory='1625288' stamp='0.597'/>
</parse>
<late_inline method='842'>
<jvms bci='24' method='836'/>
<jvms bci='61' method='833'/>
</late_inline>
<parse method='842' uses='244' stamp='0.597'>
<bc code='183' bci='2'/>
<call method='852' count='-1' prof_factor='0.201154' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='852' uses='-1' stamp='0.597'>
<bc code='183' bci='1'/>
<call method='867' count='1859' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='867' uses='2334' stamp='0.597'>
<parse_done nodes='7250' live='5838' memory='1633984' stamp='0.597'/>
</parse>
<parse_done nodes='7295' live='5882' memory='1640640' stamp='0.597'/>
</parse>
<parse_done nodes='7302' live='5888' memory='1642848' stamp='0.597'/>
</parse>
<phase_done name='parse' nodes='7302' live='3956' stamp='0.597'/>
</phase>
<phase name='optimizer' nodes='7302' live='3956' stamp='0.597'>
<phase name='idealLoop' nodes='3694' live='3694' stamp='0.600'>
<loop_tree>
<loop idx='3704' >
</loop>
<loop idx='3710' >
</loop>
<loop idx='3716' >
</loop>
<loop idx='3722' >
</loop>
<loop idx='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='3750' live='3659' stamp='0.602'/>
</phase>
<phase name='escapeAnalysis' nodes='3750' live='3659' stamp='0.602'>
<phase name='connectionGraph' nodes='3750' live='3659' stamp='0.602'>
<phase_done name='connectionGraph' nodes='3750' live='3659' stamp='0.613'/>
</phase>
<phase_done name='escapeAnalysis' nodes='3912' live='3821' stamp='0.613'/>
</phase>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='68' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='75' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='125' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='203' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='214' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='845'/>
<jvms bci='223' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='68' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='75' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='125' method='850'/>
<jvms bci='38' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='203' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='847'/>
<jvms bci='214' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='0' compile_id='4' class_id='unlock' kind='non_escaping' stamp='0.615'>
</eliminate_lock>
<eliminate_lock lock='1' compile_id='4' class_id='lock' kind='non_escaping' stamp='0.615'>
<jvms bci='-1' method='845'/>
<jvms bci='223' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_lock>
<eliminate_allocation type='794'>
<jvms bci='19' method='836'/>
<jvms bci='111' method='833'/>
</eliminate_allocation>
<eliminate_allocation type='794'>
<jvms bci='19' method='836'/>
<jvms bci='61' method='833'/>
</eliminate_allocation>
<phase name='idealLoop' nodes='4405' live='3101' stamp='0.618'>
<loop_tree>
<loop idx='3704' inner_loop='1' >
</loop>
<loop idx='3710' inner_loop='1' >
</loop>
<loop idx='3716' inner_loop='1' >
</loop>
<loop idx='3722' inner_loop='1' >
</loop>
<loop idx='3728' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4688' live='2937' stamp='0.621'/>
</phase>
<phase name='idealLoop' nodes='4688' live='2937' stamp='0.621'>
<loop_tree>
<loop idx='3704' inner_loop='1' >
</loop>
<loop idx='3710' inner_loop='1' >
</loop>
<loop idx='3716' inner_loop='1' >
</loop>
<loop idx='3722' inner_loop='1' >
</loop>
<loop idx='3728' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='4745' live='2941' stamp='0.623'/>
</phase>
<phase name='idealLoop' nodes='4745' live='2941' stamp='0.623'>
<loop_tree>
<loop idx='4984' inner_loop='1' main_loop='4984' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='8185' live='5626' stamp='0.628'/>
</phase>
<phase name='ccp' nodes='8185' live='5626' stamp='0.629'>
<phase_done name='ccp' nodes='8185' live='5558' stamp='0.630'/>
</phase>
<phase name='idealLoop' nodes='8232' live='5369' stamp='0.631'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='4984' inner_loop='1' main_loop='4984' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='8716' live='5335' stamp='0.637'/>
</phase>
<phase name='idealLoop' nodes='8716' live='5335' stamp='0.637'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='9020' inner_loop='1' main_loop='9020' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='9191' live='5399' stamp='0.643'/>
</phase>
<phase name='idealLoop' nodes='9191' live='5399' stamp='0.643'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='9020' inner_loop='1' main_loop='9020' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='9645' live='5404' stamp='0.648'/>
</phase>
<phase name='idealLoop' nodes='9645' live='5404' stamp='0.648'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='9020' inner_loop='1' main_loop='9020' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='10048' live='5322' stamp='0.654'/>
</phase>
<phase name='idealLoop' nodes='10048' live='5322' stamp='0.654'>
<loop_tree>
<loop idx='4863' inner_loop='1' pre_loop='3704' >
</loop>
<loop idx='9020' inner_loop='1' main_loop='9020' >
</loop>
<loop idx='4771' inner_loop='1' post_loop='3704' >
</loop>
<loop idx='5099' inner_loop='1' pre_loop='3710' >
</loop>
<loop idx='5180' inner_loop='1' main_loop='5180' >
</loop>
<loop idx='5046' inner_loop='1' post_loop='3710' >
</loop>
<loop idx='6062' inner_loop='1' pre_loop='3716' >
</loop>
<loop idx='3716' inner_loop='1' main_loop='3716' >
</loop>
<loop idx='5450' inner_loop='1' post_loop='3716' >
</loop>
<loop idx='6520' inner_loop='1' pre_loop='3722' >
</loop>
<loop idx='6601' inner_loop='1' main_loop='6601' >
</loop>
<loop idx='6467' inner_loop='1' post_loop='3722' >
</loop>
<loop idx='7483' inner_loop='1' pre_loop='3728' >
</loop>
<loop idx='3728' inner_loop='1' main_loop='3728' >
</loop>
<loop idx='6871' inner_loop='1' post_loop='3728' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='10479' live='5313' stamp='0.660'/>
</phase>
<phase_done name='optimizer' nodes='11690' live='5941' stamp='0.661'/>
</phase>
<phase name='matcher' nodes='11690' live='5941' stamp='0.662'>
<phase_done name='matcher' nodes='6306' live='6306' stamp='0.671'/>
</phase>
<phase name='regalloc' nodes='8117' live='8109' stamp='0.675'>
<regalloc attempts='2' success='1'/>
<phase_done name='regalloc' nodes='12885' live='10598' stamp='0.760'/>
</phase>
<phase name='output' nodes='12933' live='10646' stamp='0.761'>
<phase_done name='output' nodes='13137' live='10747' stamp='0.768'/>
</phase>
<code_cache total_blobs='305' nmethods='46' adapters='171' free_code_cache='250415680'/>
<task_done success='1' nmsize='19768' count='1510' backedge_count='48460' inlined_bytes='2919' stamp='1.088'/>
</task>
<task compile_id='66' compile_kind='osr' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='735' backedge_count='54435' iicount='735' osr_bci='69' stamp='1.088'>
<phase name='parse' nodes='3' live='3' stamp='1.088'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='735'/>
<parse method='832' uses='735' osr_bci='69' stamp='1.088'>
<uncommon_trap bci='69' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='69' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='69' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='99' not_taken='42295' cnt='42394' prob='0.00233524'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='1232' not_taken='41063' cnt='42295' prob='0.0291287'/>
<uncommon_trap bci='91' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='91' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='99' not_taken='1322' cnt='1421' prob='0.0696692'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='434' not_taken='888' cnt='1322' prob='0.32829'/>
<uncommon_trap bci='126' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='129'/>
<uncommon_trap bci='129' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='129' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='133'/>
<uncommon_trap bci='133' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='133' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='134'/>
<branch target_bci='146' taken='888' not_taken='0' cnt='888' prob='always'/>
<uncommon_trap bci='134' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='888' not_taken='434' cnt='1322' prob='0.67171'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='99' not_taken='1421' cnt='987' prob='0.0651316'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='90' not_taken='1331' cnt='1421' prob='0.0633357'/>
<parse_done nodes='470' live='452' memory='105152' stamp='1.088'/>
</parse>
<phase_done name='parse' nodes='471' live='357' stamp='1.088'/>
</phase>
<phase name='optimizer' nodes='471' live='357' stamp='1.088'>
<phase name='idealLoop' nodes='484' live='310' stamp='1.089'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='426' stamp='1.089'/>
</phase>
<phase name='idealLoop' nodes='724' live='426' stamp='1.089'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='407' stamp='1.090'/>
</phase>
<phase name='idealLoop' nodes='724' live='407' stamp='1.090'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='724' live='407' stamp='1.090'/>
</phase>
<phase name='ccp' nodes='724' live='407' stamp='1.090'>
<phase_done name='ccp' nodes='724' live='407' stamp='1.090'/>
</phase>
<phase name='idealLoop' nodes='729' live='392' stamp='1.090'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='744' live='374' stamp='1.091'/>
</phase>
<phase name='idealLoop' nodes='744' live='374' stamp='1.091'>
<loop_tree>
<loop idx='486' >
<loop idx='488' inner_loop='1' >
</loop>
<loop idx='489' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='763' live='376' stamp='1.091'/>
</phase>
<phase_done name='optimizer' nodes='773' live='361' stamp='1.091'/>
</phase>
<phase name='matcher' nodes='773' live='361' stamp='1.091'>
<phase_done name='matcher' nodes='323' live='323' stamp='1.092'/>
</phase>
<phase name='regalloc' nodes='451' live='448' stamp='1.092'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='666' live='576' stamp='1.095'/>
</phase>
<phase name='output' nodes='666' live='576' stamp='1.095'>
<phase_done name='output' nodes='692' live='591' stamp='1.097'/>
</phase>
<code_cache total_blobs='312' nmethods='50' adapters='174' free_code_cache='250406528'/>
<task_done success='1' nmsize='1336' count='735' backedge_count='54435' stamp='1.107'/>
</task>
<fragment>
<![CDATA[
<task compile_id='98' method='java/lang/String indexOf ([CII[CIII)I' bytes='166' count='756' backedge_count='55406' iicount='756' stamp='1.272'>
<phase name='parse' nodes='3' live='3' stamp='1.272'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='821 722 722 821 722 722 722' flags='8' bytes='166' iicount='756'/>
<parse method='832' uses='756' stamp='1.272'>
<bc code='161' bci='3'/>
<branch target_bci='17' taken='554' not_taken='0' cnt='554' prob='always'/>
<uncommon_trap bci='3' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='156' bci='19'/>
<branch target_bci='25' taken='554' not_taken='0' cnt='554' prob='always'/>
<uncommon_trap bci='19' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='154' bci='27'/>
<branch target_bci='33' taken='554' not_taken='0' cnt='554' prob='always'/>
<uncommon_trap bci='27' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='52' bci='36'/>
<uncommon_trap bci='36' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='36' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='106' not_taken='1487' cnt='1593' prob='0.0665411'/>
<uncommon_trap bci='60' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='63'/>
<uncommon_trap bci='63' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='63' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='91' taken='94' not_taken='1393' cnt='1487' prob='0.0632145'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='106' not_taken='43268' cnt='43374' prob='0.00244386'/>
<uncommon_trap bci='79' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='79' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='82'/>
<uncommon_trap bci='82' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='85'/>
<branch target_bci='91' taken='1286' not_taken='41982' cnt='43268' prob='0.0297217'/>
<bc code='163' bci='76'/>
<branch target_bci='91' taken='106' not_taken='43268' cnt='41982' prob='0.00244386'/>
<bc code='163' bci='95'/>
<branch target_bci='158' taken='106' not_taken='1380' cnt='1486' prob='0.0713324'/>
<bc code='162' bci='123'/>
<branch target_bci='146' taken='447' not_taken='933' cnt='1380' prob='0.323913'/>
<uncommon_trap bci='126' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='126' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='129'/>
<uncommon_trap bci='129' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='133'/>
<uncommon_trap bci='133' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='134'/>
<branch target_bci='146' taken='933' not_taken='0' cnt='933' prob='always'/>
<uncommon_trap bci='134' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='160' bci='150'/>
<branch target_bci='158' taken='933' not_taken='447' cnt='1380' prob='0.676087'/>
<bc code='163' bci='57'/>
<branch target_bci='164' taken='106' not_taken='1487' cnt='1039' prob='0.0665411'/>
<parse_done nodes='417' live='398' memory='104048' stamp='1.272'/>
</parse>
<phase_done name='parse' nodes='418' live='300' stamp='1.272'/>
</phase>
<phase name='optimizer' nodes='418' live='300' stamp='1.272'>
<phase name='idealLoop' nodes='418' live='265' stamp='1.272'>
<loop_tree>
<loop idx='418' >
<loop idx='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='481' live='271' stamp='1.273'/>
</phase>
<phase name='idealLoop' nodes='481' live='271' stamp='1.273'>
<loop_tree>
<loop idx='418' >
<loop idx='429' inner_loop='1' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='498' live='274' stamp='1.273'/>
</phase>
<phase name='idealLoop' nodes='498' live='274' stamp='1.273'>
<loop_tree>
<loop idx='418' >
<loop idx='586' inner_loop='1' main_loop='586' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='601' live='358' stamp='1.273'/>
</phase>
<phase name='ccp' nodes='601' live='358' stamp='1.273'>
<phase_done name='ccp' nodes='601' live='358' stamp='1.273'/>
</phase>
<phase name='idealLoop' nodes='601' live='356' stamp='1.274'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='682' live='392' stamp='1.274'/>
</phase>
<phase name='idealLoop' nodes='682' live='392' stamp='1.274'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='722' live='379' stamp='1.274'/>
</phase>
<phase name='idealLoop' nodes='722' live='379' stamp='1.274'>
<loop_tree>
<loop idx='418' >
<loop idx='543' inner_loop='1' pre_loop='429' >
</loop>
<loop idx='641' inner_loop='1' main_loop='641' >
</loop>
<loop idx='509' inner_loop='1' post_loop='429' >
</loop>
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='737' live='377' stamp='1.274'/>
</phase>
<phase_done name='optimizer' nodes='744' live='363' stamp='1.274'/>
</phase>
<phase name='matcher' nodes='744' live='363' stamp='1.274'>
<phase_done name='matcher' nodes='316' live='316' stamp='1.274'/>
</phase>
<phase name='regalloc' nodes='437' live='435' stamp='1.275'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='756' live='590' stamp='1.278'/>
</phase>
<phase name='output' nodes='758' live='592' stamp='1.288'>
<phase_done name='output' nodes='791' live='609' stamp='1.306'/>
</phase>
]]>
</fragment>
</compilation_log>
<compilation_log thread='4332'>
<start_compile_thread name='C2 CompilerThread1' thread='4332' process='17108' stamp='0.450'/>
<task compile_id='3' compile_kind='osr' method='java/lang/String hashCode ()I' bytes='55' count='5437' backedge_count='118738' iicount='5437' osr_bci='24' stamp='0.475'>
<phase name='parse' nodes='3' live='3' stamp='0.475'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='hashCode' return='722' flags='1' bytes='55' iicount='5437'/>
<parse method='832' uses='5437' osr_bci='24' stamp='0.476'>
<uncommon_trap bci='24' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='24' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='24' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='26'/>
<uncommon_trap bci='26' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='30'/>
<branch target_bci='48' taken='1829' not_taken='114623' cnt='116452' prob='0.015706'/>
<bc code='52' bci='39'/>
<uncommon_trap bci='39' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='39' reason='range_check' action='make_not_entrant' comment='range_check'/>
<parse_done nodes='219' live='211' memory='54344' stamp='0.476'/>
</parse>
<phase_done name='parse' nodes='220' live='169' stamp='0.476'/>
</phase>
<phase name='optimizer' nodes='220' live='169' stamp='0.476'>
<phase name='idealLoop' nodes='230' live='160' stamp='0.476'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='245' live='154' stamp='0.476'/>
</phase>
<phase name='idealLoop' nodes='245' live='154' stamp='0.476'>
<loop_tree>
<loop idx='230' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='296' live='161' stamp='0.476'/>
</phase>
<phase name='idealLoop' nodes='296' live='161' stamp='0.476'>
<loop_tree>
<loop idx='301' main_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='399' live='227' stamp='0.477'/>
</phase>
<phase name='ccp' nodes='399' live='227' stamp='0.477'>
<phase_done name='ccp' nodes='399' live='227' stamp='0.477'/>
</phase>
<phase name='idealLoop' nodes='402' live='220' stamp='0.477'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='301' inner_loop='1' main_loop='301' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='402' live='214' stamp='0.477'/>
</phase>
<phase name='idealLoop' nodes='402' live='214' stamp='0.477'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='431' inner_loop='1' main_loop='431' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='450' live='228' stamp='0.477'/>
</phase>
<phase name='idealLoop' nodes='450' live='228' stamp='0.477'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='480' inner_loop='1' main_loop='480' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='511' live='251' stamp='0.478'/>
</phase>
<phase name='idealLoop' nodes='511' live='251' stamp='0.478'>
<loop_tree>
<loop idx='364' inner_loop='1' pre_loop='301' >
</loop>
<loop idx='480' inner_loop='1' main_loop='480' >
</loop>
<loop idx='319' inner_loop='1' post_loop='301' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='533' live='250' stamp='0.478'/>
</phase>
<phase_done name='optimizer' nodes='540' live='236' stamp='0.478'/>
</phase>
<phase name='matcher' nodes='540' live='236' stamp='0.478'>
<phase_done name='matcher' nodes='210' live='210' stamp='0.479'/>
</phase>
<phase name='regalloc' nodes='272' live='269' stamp='0.479'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='318' live='297' stamp='0.480'/>
</phase>
<phase name='output' nodes='318' live='297' stamp='0.480'>
<phase_done name='output' nodes='335' live='308' stamp='0.483'/>
</phase>
<code_cache total_blobs='250' nmethods='7' adapters='156' free_code_cache='250544448'/>
<task_done success='1' nmsize='504' count='5482' backedge_count='119275' stamp='0.487'/>
</task>
<task compile_id='21' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='19701' backedge_count='14092' iicount='19701' stamp='0.487'>
<phase name='parse' nodes='3' live='3' stamp='0.487'>
<type id='716' name='boolean'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='equals' return='716' arguments='729' flags='1' bytes='81' iicount='19701'/>
<parse method='832' uses='19701' stamp='0.487'>
<bc code='166' bci='2'/>
<branch target_bci='7' taken='18080' not_taken='1621' cnt='19701' prob='0.91772'/>
<bc code='193' bci='8'/>
<uncommon_trap bci='8' reason='class_check' action='maybe_recompile'/>
<bc code='153' bci='11'/>
<branch target_bci='79' taken='1' not_taken='18079' cnt='18080' prob='5.53097e-005'/>
<bc code='192' bci='15'/>
<uncommon_trap bci='15' reason='null_check' action='make_not_entrant'/>
<uncommon_trap bci='15' reason='class_check' action='maybe_recompile'/>
<bc code='190' bci='23'/>
<uncommon_trap bci='23' reason='null_check' action='maybe_recompile'/>
<bc code='190' bci='30'/>
<uncommon_trap bci='30' reason='null_check' action='maybe_recompile'/>
<bc code='160' bci='31'/>
<branch target_bci='79' taken='17585' not_taken='494' cnt='18079' prob='0.972676'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='72' not_taken='13064' cnt='13136' prob='0.00548112'/>
<uncommon_trap bci='56' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='56' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='60'/>
<uncommon_trap bci='60' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='60' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='52' bci='65'/>
<uncommon_trap bci='65' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='65' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='159' bci='66'/>
<branch target_bci='71' taken='12642' not_taken='422' cnt='13064' prob='0.967698'/>
<bc code='153' bci='53'/>
<branch target_bci='77' taken='72' not_taken='13064' cnt='12642' prob='0.00548112'/>
<parse_done nodes='297' live='282' memory='77040' stamp='0.488'/>
</parse>
<phase_done name='parse' nodes='298' live='206' stamp='0.488'/>
</phase>
<phase name='optimizer' nodes='298' live='206' stamp='0.488'>
<phase name='idealLoop' nodes='325' live='172' stamp='0.488'>
<loop_tree>
<loop idx='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='366' live='157' stamp='0.488'/>
</phase>
<phase name='idealLoop' nodes='366' live='157' stamp='0.488'>
<loop_tree>
<loop idx='528' inner_loop='1' main_loop='528' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='645' live='281' stamp='0.489'/>
</phase>
<phase name='idealLoop' nodes='645' live='281' stamp='0.489'>
<loop_tree>
<loop idx='446' inner_loop='1' pre_loop='332' >
</loop>
<loop idx='682' inner_loop='1' main_loop='682' >
</loop>
<loop idx='392' inner_loop='1' post_loop='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='720' live='312' stamp='0.489'/>
</phase>
<phase name='ccp' nodes='720' live='312' stamp='0.489'>
<phase_done name='ccp' nodes='720' live='312' stamp='0.489'/>
</phase>
<phase name='idealLoop' nodes='720' live='311' stamp='0.489'>
<loop_tree>
<loop idx='446' inner_loop='1' pre_loop='332' >
</loop>
<loop idx='682' inner_loop='1' main_loop='682' >
</loop>
<loop idx='392' inner_loop='1' post_loop='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='720' live='290' stamp='0.489'/>
</phase>
<phase name='idealLoop' nodes='720' live='290' stamp='0.489'>
<loop_tree>
<loop idx='446' inner_loop='1' pre_loop='332' >
</loop>
<loop idx='682' inner_loop='1' main_loop='682' >
</loop>
<loop idx='392' inner_loop='1' post_loop='332' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='720' live='287' stamp='0.490'/>
</phase>
<phase_done name='optimizer' nodes='730' live='264' stamp='0.490'/>
</phase>
<phase name='matcher' nodes='730' live='264' stamp='0.490'>
<phase_done name='matcher' nodes='220' live='220' stamp='0.490'/>
</phase>
<phase name='regalloc' nodes='300' live='298' stamp='0.490'>
<regalloc attempts='3' success='1'/>
<phase_done name='regalloc' nodes='357' live='332' stamp='0.491'/>
</phase>
<phase name='output' nodes='357' live='332' stamp='0.491'>
<phase_done name='output' nodes='385' live='345' stamp='0.508'/>
</phase>
<code_cache total_blobs='261' nmethods='11' adapters='163' free_code_cache='250527872'/>
<task_done success='1' nmsize='632' count='19726' backedge_count='14133' stamp='0.519'/>
</task>
<task compile_id='31' method='java/lang/String indexOf (II)I' bytes='70' count='3800' backedge_count='230364' iicount='3800' stamp='0.519'>
<phase name='parse' nodes='3' live='3' stamp='0.519'>
<type id='722' name='int'/>
<klass id='730' name='java/lang/String' flags='17'/>
<method id='832' holder='730' name='indexOf' return='722' arguments='722 722' flags='1' bytes='70' iicount='3800'/>
<parse method='832' uses='3800' stamp='0.519'>
<bc code='190' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='156' bci='7'/>
<branch target_bci='15' taken='3584' not_taken='0' cnt='3584' prob='always'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken always'/>
<bc code='161' bci='17'/>
<branch target_bci='22' taken='3004' not_taken='580' cnt='3584' prob='0.83817'/>
<bc code='162' bci='25'/>
<branch target_bci='63' taken='0' not_taken='3004' cnt='3004' prob='never'/>
<uncommon_trap bci='25' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='2852' not_taken='223277' cnt='226129' prob='0.0126123'/>
<uncommon_trap bci='43' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='43' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='47'/>
<uncommon_trap bci='47' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='47' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='160' bci='49'/>
<branch target_bci='55' taken='223125' not_taken='152' cnt='223277' prob='0.999319'/>
<bc code='162' bci='40'/>
<branch target_bci='61' taken='2852' not_taken='223277' cnt='223125' prob='0.0126123'/>
<parse_done nodes='184' live='174' memory='50256' stamp='0.519'/>
</parse>
<phase_done name='parse' nodes='185' live='129' stamp='0.519'/>
</phase>
<phase name='optimizer' nodes='185' live='129' stamp='0.519'>
<phase name='idealLoop' nodes='186' live='115' stamp='0.519'>
<loop_tree>
<loop idx='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='193' live='105' stamp='0.519'/>
</phase>
<phase name='idealLoop' nodes='193' live='105' stamp='0.519'>
<loop_tree>
<loop idx='192' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='206' live='111' stamp='0.519'/>
</phase>
<phase name='idealLoop' nodes='206' live='111' stamp='0.519'>
<loop_tree>
<loop idx='282' inner_loop='1' main_loop='282' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='295' live='187' stamp='0.519'/>
</phase>
<phase name='ccp' nodes='295' live='187' stamp='0.519'>
<phase_done name='ccp' nodes='295' live='187' stamp='0.519'/>
</phase>
<phase name='idealLoop' nodes='295' live='187' stamp='0.519'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='321' inner_loop='1' main_loop='321' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='361' live='225' stamp='0.520'/>
</phase>
<phase name='idealLoop' nodes='361' live='225' stamp='0.520'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='402' inner_loop='1' main_loop='402' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='468' live='290' stamp='0.520'/>
</phase>
<phase name='idealLoop' nodes='468' live='290' stamp='0.520'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='402' inner_loop='1' main_loop='402' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='511' live='278' stamp='0.520'/>
</phase>
<phase name='idealLoop' nodes='511' live='278' stamp='0.520'>
<loop_tree>
<loop idx='246' inner_loop='1' pre_loop='192' >
</loop>
<loop idx='402' inner_loop='1' main_loop='402' >
</loop>
<loop idx='218' inner_loop='1' post_loop='192' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='520' live='277' stamp='0.520'/>
</phase>
<phase_done name='optimizer' nodes='524' live='250' stamp='0.520'/>
</phase>
<phase name='matcher' nodes='524' live='250' stamp='0.520'>
<phase_done name='matcher' nodes='197' live='197' stamp='0.520'/>
</phase>
<phase name='regalloc' nodes='279' live='278' stamp='0.520'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='296' live='293' stamp='0.521'/>
</phase>
<phase name='output' nodes='298' live='295' stamp='0.521'>
<phase_done name='output' nodes='329' live='308' stamp='0.521'/>
</phase>
<code_cache total_blobs='265' nmethods='13' adapters='163' free_code_cache='250517632'/>
<task_done success='1' nmsize='504' count='3806' backedge_count='230635' stamp='0.525'/>
</task>
<task compile_id='33' method='sun/nio/cs/UTF_8$Encoder encode ([CII[B)I' bytes='359' count='1654' backedge_count='62892' iicount='1654' stamp='0.525'>
<phase name='parse' nodes='3' live='3' stamp='0.525'>
<type id='722' name='int'/>
<klass id='821' name='[C' flags='1041'/>
<klass id='824' name='[B' flags='1041'/>
<klass id='832' name='sun/nio/cs/UTF_8$Encoder' flags='26'/>
<method id='833' holder='832' name='encode' return='722' arguments='821 722 722 824' flags='1' bytes='359' iicount='1654'/>
<klass id='838' name='sun/nio/cs/Surrogate$Parser' unloaded='1'/>
<uncommon_trap method='833' bci='175' reason='unloaded' action='reinterpret' index='76' klass='838'/>
<uncommon_trap method='833' bci='153' reason='unloaded' action='reinterpret' index='76' klass='838'/>
<parse method='833' uses='1654' stamp='0.528'>
<bc code='190' bci='13'/>
<uncommon_trap bci='13' reason='null_check' action='maybe_recompile'/>
<bc code='184' bci='14'/>
<klass id='835' name='java/lang/Math' flags='17'/>
<method id='836' holder='835' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='12178'/>
<call method='836' count='1450' prof_factor='1' inline='1'/>
<intrinsic id='_min' nodes='3'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='1450' not_taken='56732' cnt='58182' prob='0.0249218'/>
<uncommon_trap bci='27' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='27' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='52' bci='29'/>
<uncommon_trap bci='29' reason='null_check' action='maybe_recompile'/>
<uncommon_trap bci='29' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='33'/>
<branch target_bci='54' taken='0' not_taken='56732' cnt='56732' prob='never'/>
<uncommon_trap bci='33' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='52' bci='48'/>
<uncommon_trap bci='48' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='84' bci='50'/>
<uncommon_trap bci='50' reason='range_check' action='make_not_entrant' comment='range_check'/>
<bc code='162' bci='24'/>
<branch target_bci='54' taken='1450' not_taken='56732' cnt='56732' prob='0.0249218'/>
<bc code='162' bci='57'/>
<branch target_bci='356' taken='1450' not_taken='0' cnt='1450' prob='always'/>
<uncommon_trap bci='57' reason='unstable_if' action='reinterpret' comment='taken always'/>
<parse_done nodes='227' live='217' memory='59008' stamp='0.528'/>
</parse>
<phase_done name='parse' nodes='228' live='159' stamp='0.528'/>
</phase>
<phase name='optimizer' nodes='228' live='159' stamp='0.528'>
<phase name='idealLoop' nodes='233' live='140' stamp='0.528'>
<loop_tree>
<loop idx='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='288' live='144' stamp='0.528'/>
</phase>
<phase name='idealLoop' nodes='288' live='144' stamp='0.528'>
<loop_tree>
<loop idx='411' inner_loop='1' main_loop='411' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='426' live='262' stamp='0.529'/>
</phase>
<phase name='idealLoop' nodes='426' live='262' stamp='0.529'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='514' live='320' stamp='0.529'/>
</phase>
<phase name='ccp' nodes='514' live='320' stamp='0.529'>
<phase_done name='ccp' nodes='514' live='320' stamp='0.529'/>
</phase>
<phase name='idealLoop' nodes='514' live='318' stamp='0.529'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='570' live='310' stamp='0.529'/>
</phase>
<phase name='idealLoop' nodes='570' live='310' stamp='0.529'>
<loop_tree>
<loop idx='355' inner_loop='1' pre_loop='239' >
</loop>
<loop idx='467' inner_loop='1' main_loop='467' >
</loop>
<loop idx='312' inner_loop='1' post_loop='239' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='585' live='293' stamp='0.530'/>
</phase>
<phase_done name='optimizer' nodes='586' live='273' stamp='0.530'/>
</phase>
<phase name='matcher' nodes='586' live='273' stamp='0.530'>
<phase_done name='matcher' nodes='227' live='227' stamp='0.530'/>
</phase>
<phase name='regalloc' nodes='296' live='294' stamp='0.530'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='364' live='328' stamp='0.531'/>
</phase>
<phase name='output' nodes='364' live='328' stamp='0.531'>
<phase_done name='output' nodes='385' live='341' stamp='0.536'/>
</phase>
<code_cache total_blobs='276' nmethods='17' adapters='169' free_code_cache='250500992'/>
<task_done success='1' nmsize='600' count='1654' backedge_count='62892' inlined_bytes='11' stamp='0.541'/>
</task>
<task compile_id='9' method='sun/nio/cs/ext/DoubleByte$Encoder encodeChar (C)I' bytes='21' count='22949' iicount='22949' stamp='0.544'>
<failure reason='stale task'/>
<task_done success='0' nmsize='0' count='22949' stamp='0.544'/>
</task>
<task compile_id='37' method='java/io/WinNTFileSystem isSlash (C)Z' bytes='18' count='79782' iicount='79782' stamp='0.545'>
<phase name='parse' nodes='3' live='3' stamp='0.545'>
<type id='716' name='boolean'/>
<type id='717' name='char'/>
<klass id='832' name='java/io/WinNTFileSystem' flags='0'/>
<method id='833' holder='832' name='isSlash' return='716' arguments='717' flags='2' bytes='18' iicount='79782'/>
<parse method='833' uses='79782' stamp='0.545'>
<bc code='159' bci='3'/>
<branch target_bci='12' taken='5536' not_taken='74246' cnt='79782' prob='0.0693891'/>
<bc code='160' bci='9'/>
<branch target_bci='16' taken='71300' not_taken='2947' cnt='74247' prob='0.960308'/>
<parse_done nodes='47' live='46' memory='26176' stamp='0.545'/>
</parse>
<phase_done name='parse' nodes='48' live='27' stamp='0.546'/>
</phase>
<phase name='optimizer' nodes='48' live='27' stamp='0.546'>
<phase name='ccp' nodes='48' live='27' stamp='0.546'>
<phase_done name='ccp' nodes='48' live='27' stamp='0.546'/>
</phase>
<phase name='idealLoop' nodes='48' live='27' stamp='0.546'>
<phase_done name='idealLoop' nodes='48' live='27' stamp='0.546'/>
</phase>
<phase_done name='optimizer' nodes='48' live='27' stamp='0.546'/>
</phase>
<phase name='matcher' nodes='48' live='27' stamp='0.546'>
<phase_done name='matcher' nodes='26' live='26' stamp='0.546'/>
</phase>
<phase name='regalloc' nodes='36' live='36' stamp='0.546'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='36' live='36' stamp='0.546'/>
</phase>
<phase name='output' nodes='36' live='36' stamp='0.546'>
<phase_done name='output' nodes='46' live='43' stamp='0.550'/>
</phase>
<code_cache total_blobs='280' nmethods='21' adapters='169' free_code_cache='250495552'/>
<task_done success='1' nmsize='120' count='79782' stamp='0.551'/>
</task>
<task compile_id='8' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='22940' iicount='22940' stamp='0.553'>
<phase name='parse' nodes='3' live='3' stamp='0.553'>
<type id='724' name='void'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<method id='832' holder='729' name='&lt;init&gt;' return='724' flags='1' bytes='1' iicount='22940'/>
<parse method='832' uses='22940' stamp='0.553'>
<parse_done nodes='54' live='53' memory='27144' stamp='0.553'/>
</parse>
<phase_done name='parse' nodes='56' live='38' stamp='0.553'/>
</phase>
<phase name='optimizer' nodes='56' live='38' stamp='0.553'>
<phase name='ccp' nodes='56' live='38' stamp='0.553'>
<phase_done name='ccp' nodes='56' live='38' stamp='0.553'/>
</phase>
<phase name='idealLoop' nodes='56' live='38' stamp='0.553'>
<phase_done name='idealLoop' nodes='56' live='38' stamp='0.553'/>
</phase>
<phase_done name='optimizer' nodes='56' live='37' stamp='0.553'/>
</phase>
<phase name='matcher' nodes='56' live='37' stamp='0.553'>
<phase_done name='matcher' nodes='33' live='33' stamp='0.553'/>
</phase>
<phase name='regalloc' nodes='42' live='42' stamp='0.553'>
<regalloc attempts='1' success='1'/>
<phase_done name='regalloc' nodes='45' live='44' stamp='0.553'/>
</phase>
<phase name='output' nodes='45' live='44' stamp='0.553'>
<phase_done name='output' nodes='55' live='53' stamp='0.553'/>
</phase>
<code_cache total_blobs='285' nmethods='26' adapters='171' free_code_cache='250498048'/>
<task_done success='1' nmsize='152' count='23012' stamp='0.568'/>
</task>
<task compile_id='2' method='java/lang/Math min (II)I' bytes='11' count='12256' iicount='12256' stamp='0.568'>
<phase name='parse' nodes='3' live='3' stamp='0.568'>
<type id='722' name='int'/>
<klass id='832' name='java/lang/Math' flags='17'/>
<method id='833' holder='832' name='min' return='722' arguments='722 722' flags='9' bytes='11' iicount='12256'/>
<parse method='833' uses='12256' stamp='0.568'>
<bc code='163' bci='2'/>
<branch target_bci='9' taken='5501' not_taken='6755' cnt='12256' prob='0.448841'/>
<parse_done nodes='32' live='31' memory='23912' stamp='0.568'/>
</parse>
<phase_done name='parse' nodes='33' live='18' stamp='0.568'/>
</phase>
<phase name='optimizer' nodes='33' live='18' stamp='0.568'>
<phase name='ccp' nodes='33' live='18' stamp='0.568'>
<phase_done name='ccp' nodes='33' live='18' stamp='0.568'/>
</phase>
<phase name='idealLoop' nodes='33' live='18' stamp='0.568'>
<phase_done name='idealLoop' nodes='34' live='14' stamp='0.568'/>
</phase>
<phase_done name='optimizer' nodes='34' live='14' stamp='0.568'/>
</phase>
<phase name='matcher' nodes='34' live='14' stamp='0.568'>
<phase_done name='matcher' nodes='15' live='15' stamp='0.568'/>
</phase>
<phase name='regalloc' nodes='17' live='17' stamp='0.568'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='18' live='18' stamp='0.568'/>
</phase>
<phase name='output' nodes='18' live='18' stamp='0.568'>
<phase_done name='output' nodes='23' live='23' stamp='0.568'/>
</phase>
<code_cache total_blobs='286' nmethods='27' adapters='171' free_code_cache='250497536'/>
<task_done success='1' nmsize='88' count='12261' stamp='0.569'/>
</task>
<task compile_id='58' compile_kind='osr' method='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread run ()V' bytes='32' count='12' backedge_count='169988' iicount='12' osr_bci='2' stamp='0.613'>
<phase name='parse' nodes='3' live='3' stamp='0.613'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/AtomicThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='32' iicount='12'/>
<parse method='833' uses='12' osr_bci='2' stamp='0.613'>
<dependency type='leaf_type' ctxk='832'/>
<dependency type='leaf_type' ctxk='832'/>
<uncommon_trap bci='2' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='2' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='2' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='180' bci='4'/>
<uncommon_trap bci='4' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='7'/>
<branch target_bci='24' taken='0' not_taken='488' cnt='488' prob='never'/>
<uncommon_trap bci='7' reason='unstable_if' action='reinterpret' comment='taken never'/>
<bc code='182' bci='14'/>
<type id='722' name='int'/>
<klass id='837' name='java/util/concurrent/atomic/AtomicInteger' flags='1'/>
<method id='838' holder='837' name='getAndIncrement' return='722' flags='17' bytes='12' iicount='169877'/>
<call method='838' count='488' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='838' uses='488' stamp='0.613'>
<uncommon_trap bci='14' reason='null_check' action='maybe_recompile'/>
<bc code='182' bci='8'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='840' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' iicount='169702'/>
<call method='840' count='170029' prof_factor='0.00287267' inline='1'/>
<intrinsic id='_getAndAddInt' nodes='19'/>
<parse_done nodes='181' live='174' memory='47968' stamp='0.613'/>
</parse>
<parse_done nodes='184' live='177' memory='48576' stamp='0.613'/>
</parse>
<phase_done name='parse' nodes='184' live='129' stamp='0.613'/>
</phase>
<phase name='optimizer' nodes='184' live='129' stamp='0.613'>
<phase name='idealLoop' nodes='189' live='123' stamp='0.613'>
<loop_tree>
<loop idx='189' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='121' stamp='0.613'/>
</phase>
<phase name='idealLoop' nodes='196' live='121' stamp='0.613'>
<loop_tree>
<loop idx='189' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='121' stamp='0.613'/>
</phase>
<phase name='idealLoop' nodes='196' live='121' stamp='0.613'>
<loop_tree>
<loop idx='189' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='196' live='121' stamp='0.613'/>
</phase>
<phase name='ccp' nodes='196' live='121' stamp='0.614'>
<phase_done name='ccp' nodes='196' live='121' stamp='0.614'/>
</phase>
<phase name='idealLoop' nodes='197' live='119' stamp='0.614'>
<loop_tree>
<loop idx='189' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='221' live='113' stamp='0.614'/>
</phase>
<phase name='idealLoop' nodes='221' live='113' stamp='0.614'>
<loop_tree>
<loop idx='189' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='97' stamp='0.614'/>
</phase>
<phase name='idealLoop' nodes='227' live='97' stamp='0.614'>
<loop_tree>
<loop idx='189' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='233' live='97' stamp='0.614'/>
</phase>
<phase_done name='optimizer' nodes='238' live='96' stamp='0.614'/>
</phase>
<phase name='matcher' nodes='238' live='96' stamp='0.614'>
<phase_done name='matcher' nodes='88' live='88' stamp='0.614'/>
</phase>
<phase name='regalloc' nodes='106' live='105' stamp='0.614'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='116' live='111' stamp='0.614'/>
</phase>
<phase name='output' nodes='116' live='111' stamp='0.614'>
<phase_done name='output' nodes='129' live='120' stamp='0.614'/>
</phase>
<dependency type='leaf_type' ctxk='832'/>
<code_cache total_blobs='293' nmethods='34' adapters='171' free_code_cache='250485248'/>
<task_done success='1' nmsize='216' count='12' backedge_count='193088' inlined_bytes='39' stamp='0.617'/>
</task>
<task compile_id='61' compile_kind='osr' method='sun/misc/Unsafe getAndAddInt (Ljava/lang/Object;JI)I' bytes='27' count='191842' backedge_count='532614' iicount='191842' osr_bci='0' stamp='0.662'>
<phase name='parse' nodes='3' live='3' stamp='0.662'>
<type id='722' name='int'/>
<klass id='729' name='java/lang/Object' flags='1'/>
<type id='723' name='long'/>
<klass id='796' name='sun/misc/Unsafe' flags='17'/>
<method id='832' holder='796' name='getAndAddInt' return='722' arguments='729 723 722' flags='17' bytes='27' compile_id='55' compiler='C1' level='2' iicount='191842'/>
<parse method='832' uses='191842' osr_bci='0' stamp='0.666'>
<uncommon_trap bci='0' reason='constraint' action='reinterpret'/>
<uncommon_trap bci='0' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='loop_limit_check' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='0' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='3'/>
<method id='834' holder='796' name='getIntVolatile' return='722' arguments='729 723' flags='257' bytes='0' compile_id='54' compile_kind='c2n' level='0' iicount='1280'/>
<call method='834' count='638947' prof_factor='1' inline='1'/>
<uncommon_trap bci='3' reason='null_check' action='maybe_recompile'/>
<intrinsic id='_getIntVolatile' nodes='28'/>
<bc code='182' bci='18'/>
<type id='716' name='boolean'/>
<method id='835' holder='796' name='compareAndSwapInt' return='716' arguments='729 723 722 722' flags='273' bytes='0' compile_id='51' compile_kind='c2n' level='0' iicount='1195'/>
<call method='835' count='657854' prof_factor='1' inline='1'/>
<intrinsic id='_compareAndSwapInt' nodes='19'/>
<bc code='153' bci='21'/>
<branch target_bci='0' taken='571189' not_taken='195239' cnt='766428' prob='0.745261'/>
<parse_done nodes='195' live='188' memory='51312' stamp='0.667'/>
</parse>
<phase_done name='parse' nodes='196' live='142' stamp='0.667'/>
</phase>
<phase name='optimizer' nodes='196' live='142' stamp='0.667'>
<phase name='idealLoop' nodes='201' live='137' stamp='0.667'>
<loop_tree>
<loop idx='201' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='208' live='116' stamp='0.667'/>
</phase>
<phase name='idealLoop' nodes='208' live='116' stamp='0.667'>
<loop_tree>
<loop idx='201' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='208' live='116' stamp='0.667'/>
</phase>
<phase name='idealLoop' nodes='208' live='116' stamp='0.667'>
<loop_tree>
<loop idx='201' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='208' live='116' stamp='0.667'/>
</phase>
<phase name='ccp' nodes='208' live='116' stamp='0.667'>
<phase_done name='ccp' nodes='208' live='116' stamp='0.667'/>
</phase>
<phase name='idealLoop' nodes='209' live='114' stamp='0.667'>
<loop_tree>
<loop idx='201' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='108' stamp='0.667'/>
</phase>
<phase name='idealLoop' nodes='227' live='108' stamp='0.667'>
<loop_tree>
<loop idx='201' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='92' stamp='0.667'/>
</phase>
<phase name='idealLoop' nodes='227' live='92' stamp='0.667'>
<loop_tree>
<loop idx='201' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='92' stamp='0.667'/>
</phase>
<phase_done name='optimizer' nodes='229' live='91' stamp='0.667'/>
</phase>
<phase name='matcher' nodes='229' live='91' stamp='0.667'>
<phase_done name='matcher' nodes='84' live='84' stamp='0.667'/>
</phase>
<phase name='regalloc' nodes='98' live='97' stamp='0.668'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='113' live='110' stamp='0.668'/>
</phase>
<phase name='output' nodes='113' live='110' stamp='0.668'>
<phase_done name='output' nodes='124' live='119' stamp='0.673'/>
</phase>
<code_cache total_blobs='300' nmethods='41' adapters='171' free_code_cache='250476288'/>
<task_done success='1' nmsize='216' count='191842' backedge_count='494692' stamp='0.679'/>
</task>
<task compile_id='97' method='com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread run ()V' bytes='46' count='12' backedge_count='460800' iicount='12' stamp='1.220'>
<phase name='parse' nodes='3' live='3' stamp='1.220'>
<type id='724' name='void'/>
<klass id='832' name='com/fcy/Java/Concurrent/CustomerLockDemo/SynchronizedThread' flags='1'/>
<method id='833' holder='832' name='run' return='724' flags='1' bytes='46' iicount='12'/>
<parse method='833' uses='12' stamp='1.220'>
<observe that='has_exception_handlers'/>
<bc code='162' bci='12'/>
<branch target_bci='28' taken='0' not_taken='0'/>
<uncommon_trap bci='15' reason='predicate' action='maybe_recompile'/>
<uncommon_trap bci='15' reason='loop_limit_check' action='maybe_recompile'/>
<bc code='182' bci='19'/>
<klass id='838' name='com/fcy/Java/Concurrent/CustomerLockDemo/CustomCASTest$SynchronizedObject' flags='8'/>
<method id='839' holder='838' name='add' return='724' flags='1' bytes='11' compile_id='85' compiler='C1' level='2' iicount='1016176'/>
<dependency type='unique_concrete_method' ctxk='838' x='839'/>
<call method='839' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='call site not reached'/>
<direct_call bci='19'/>
<uncommon_trap bci='19' reason='null_check' action='maybe_recompile'/>
<bc code='162' bci='12'/>
<branch target_bci='28' taken='0' not_taken='0'/>
<bc code='182' bci='32'/>
<klass id='836' name='java/util/concurrent/CountDownLatch' flags='1'/>
<method id='837' holder='836' name='countDown' return='724' flags='1' bytes='10' iicount='13'/>
<dependency type='unique_concrete_method' ctxk='836' x='837'/>
<call method='837' count='0' prof_factor='1' inline='1'/>
<inline_fail reason='executed &lt; MinInliningThreshold times'/>
<direct_call bci='32'/>
<uncommon_trap bci='32' reason='null_check' action='maybe_recompile'/>
<bc code='191' bci='44'/>
<uncommon_trap bci='44' reason='null_check' action='maybe_recompile'/>
<parse_done nodes='211' live='205' memory='55400' stamp='1.223'/>
</parse>
<phase_done name='parse' nodes='213' live='143' stamp='1.223'/>
</phase>
<phase name='optimizer' nodes='213' live='143' stamp='1.223'>
<phase name='idealLoop' nodes='214' live='125' stamp='1.223'>
<loop_tree>
<loop idx='214' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='221' live='125' stamp='1.223'/>
</phase>
<phase name='idealLoop' nodes='221' live='125' stamp='1.223'>
<loop_tree>
<loop idx='214' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='221' live='125' stamp='1.223'/>
</phase>
<phase name='idealLoop' nodes='221' live='125' stamp='1.223'>
<loop_tree>
<loop idx='214' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='221' live='125' stamp='1.223'/>
</phase>
<phase name='ccp' nodes='221' live='125' stamp='1.223'>
<phase_done name='ccp' nodes='221' live='125' stamp='1.223'/>
</phase>
<phase name='idealLoop' nodes='221' live='125' stamp='1.223'>
<loop_tree>
<loop idx='214' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='227' live='109' stamp='1.224'/>
</phase>
<phase name='idealLoop' nodes='227' live='109' stamp='1.224'>
<loop_tree>
<loop idx='214' inner_loop='1' >
</loop>
</loop_tree>
<phase_done name='idealLoop' nodes='233' live='109' stamp='1.224'/>
</phase>
<phase_done name='optimizer' nodes='347' live='204' stamp='1.224'/>
</phase>
<phase name='matcher' nodes='347' live='204' stamp='1.224'>
<phase_done name='matcher' nodes='205' live='205' stamp='1.224'/>
</phase>
<phase name='regalloc' nodes='268' live='268' stamp='1.224'>
<regalloc attempts='0' success='1'/>
<phase_done name='regalloc' nodes='317' live='312' stamp='1.225'/>
</phase>
<phase name='output' nodes='319' live='314' stamp='1.225'>
<phase_done name='output' nodes='342' live='327' stamp='1.226'/>
</phase>
<dependency type='unique_concrete_method' ctxk='838' x='839'/>
<dependency type='unique_concrete_method' ctxk='836' x='837'/>
<code_cache total_blobs='323' nmethods='57' adapters='178' free_code_cache='250365312'/>
<task_done success='1' nmsize='1016' count='12' backedge_count='462848' stamp='1.233'/>
</task>
<fragment>
<![CDATA[
<task compile_id='101' method='java/lang/Character toLowerCase (I)I' bytes='9' count='29719' iicount='29719' stamp='1.305'>
<phase name='parse' nodes='3' live='3' stamp='1.306'>
<type id='722' name='int'/>
<klass id='810' name='java/lang/Character' flags='17'/>
<method id='832' holder='810' name='toLowerCase' return='722' arguments='722' flags='9' bytes='9' iicount='29719'/>
<parse method='832' uses='29719' stamp='1.306'>
<bc code='184' bci='1'/>
<klass id='835' name='java/lang/CharacterData' flags='1024'/>
<method id='836' holder='835' name='of' return='835' arguments='722' flags='24' bytes='120' compile_id='12' compiler='C2' level='4' iicount='32857'/>
<call method='836' count='29245' prof_factor='1' inline='1'/>
<klass id='838' name='java/lang/CharacterData00' unloaded='1'/>
<uncommon_trap method='836' bci='96' reason='unloaded' action='reinterpret' index='45' klass='838'/>
<klass id='839' name='java/lang/CharacterData01' unloaded='1'/>
<uncommon_trap method='836' bci='100' reason='unloaded' action='reinterpret' index='46' klass='839'/>
<klass id='840' name='java/lang/CharacterData02' unloaded='1'/>
<uncommon_trap method='836' bci='104' reason='unloaded' action='reinterpret' index='47' klass='840'/>
<klass id='841' name='java/lang/CharacterData0E' unloaded='1'/>
<uncommon_trap method='836' bci='108' reason='unloaded' action='reinterpret' index='48' klass='841'/>
<klass id='842' name='java/lang/CharacterDataPrivateUse' unloaded='1'/>
<uncommon_trap method='836' bci='112' reason='unloaded' action='reinterpret' index='50' klass='842'/>
<klass id='843' name='java/lang/CharacterDataUndefined' unloaded='1'/>
<uncommon_trap method='836' bci='116' reason='unloaded' action='reinterpret' index='51' klass='843'/>
<inline_success reason='inline (hot)'/>
<klass id='834' name='java/lang/CharacterDataLatin1' flags='0'/>
<dependency type='abstract_with_unique_concrete_subtype' ctxk='835' x='834'/>
<parse method='836' uses='29719' stamp='1.306'>
<bc code='154' bci='4'/>
<branch target_bci='11' taken='0' not_taken='32857' cnt='32857' prob='never'/>
<uncommon_trap bci='4' reason='unstable_if' action='reinterpret' comment='taken never'/>
<parse_done nodes='51' live='49' memory='27472' stamp='1.306'/>
</parse>
<bc code='182' bci='5'/>
<method id='847' holder='834' name='toLowerCase' return='722' arguments='722' flags='0' bytes='39' iicount='29878'/>
<dependency type='unique_concrete_method' ctxk='834' x='847'/>
<call method='847' count='29245' prof_factor='1' inline='1'/>
<inline_success reason='inline (hot)'/>
<parse method='847' uses='29719' stamp='1.306'>
<bc code='182' bci='4'/>
<method id='848' holder='834' name='getProperties' return='722' arguments='722' flags='0' bytes='11' compile_id='13' compiler='C2' level='4' iicount='32853'/>
<dependency type='unique_concrete_method' ctxk='834' x='848'/>
<call method='848' count='29366' prof_factor='0.994678' inline='1'/>
]]>
</fragment>
</compilation_log>
<hotspot_log_done stamp='1.816'/>
</hotspot_log>
